;-- section..plt:
;-- .plt:
0x00001880      ff352ac52000   push qword [0x0020ddb0]                 ; [12] -r-x section size 1040 named .plt
0x00001886      ff252cc52000   jmp qword [0x0020ddb8]                  ; [0x20ddb8:8]=0
0x0000188c      0f1f4000       nop dword [rax]
;-- imp.abort:
0x00001890      ff252ac52000   jmp qword [reloc.abort]                 ; [0x20ddc0:8]=0x1896
0x00001896      6800000000     push 0
0x0000189b      e9e0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000018a0      ff2522c52000   jmp qword [reloc.__errno_location]      ; [0x20ddc8:8]=0x18a6
0x000018a6      6801000000     push 1
0x000018ab      e9d0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000018b0      ff251ac52000   jmp qword [reloc.strncmp]               ; [0x20ddd0:8]=0x18b6
0x000018b6      6802000000     push 2
0x000018bb      e9c0ffffff     jmp sym..plt
;-- imp._exit:
0x000018c0      ff2512c52000   jmp qword [reloc._exit]                 ; [0x20ddd8:8]=0x18c6
0x000018c6      6803000000     push 3
0x000018cb      e9b0ffffff     jmp sym..plt
;-- imp.strcpy:
0x000018d0      ff250ac52000   jmp qword [reloc.strcpy]                ; [0x20dde0:8]=0x18d6
0x000018d6      6804000000     push 4
0x000018db      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x000018e0      ff2502c52000   jmp qword [reloc.__fpending]            ; [0x20dde8:8]=0x18e6
0x000018e6      6805000000     push 5
0x000018eb      e990ffffff     jmp sym..plt
;-- imp.qsort:
0x000018f0      ff25fac42000   jmp qword [reloc.qsort]                 ; [0x20ddf0:8]=0x18f6
0x000018f6      6806000000     push 6
0x000018fb      e980ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001900      ff25f2c42000   jmp qword [reloc.fcntl]                 ; [0x20ddf8:8]=0x1906
0x00001906      6807000000     push 7
0x0000190b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001910      ff25eac42000   jmp qword [reloc.textdomain]            ; [0x20de00:8]=0x1916
0x00001916      6808000000     push 8
0x0000191b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001920      ff25e2c42000   jmp qword [reloc.fclose]                ; [0x20de08:8]=0x1926 ; "&\x19"
0x00001926      6809000000     push 9
0x0000192b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001930      ff25dac42000   jmp qword [reloc.bindtextdomain]        ; [0x20de10:8]=0x1936 ; "6\x19"
0x00001936      680a000000     push 0xa
0x0000193b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001940      ff25d2c42000   jmp qword [reloc.dcgettext]             ; [0x20de18:8]=0x1946 ; "F\x19"
0x00001946      680b000000     push 0xb
0x0000194b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001950      ff25cac42000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20de20:8]=0x1956 ; "V\x19"
0x00001956      680c000000     push 0xc
0x0000195b      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001960      ff25c2c42000   jmp qword [reloc.strlen]                ; [0x20de28:8]=0x1966 ; "f\x19"
0x00001966      680d000000     push 0xd
0x0000196b      e910ffffff     jmp sym..plt
;-- imp.__lxstat:
0x00001970      ff25bac42000   jmp qword [reloc.__lxstat]              ; [0x20de30:8]=0x1976 ; "v\x19"
0x00001976      680e000000     push 0xe
0x0000197b      e900ffffff     jmp sym..plt
;-- imp.openat:
0x00001980      ff25b2c42000   jmp qword [reloc.openat]                ; [0x20de38:8]=0x1986
0x00001986      680f000000     push 0xf
0x0000198b      e9f0feffff     jmp sym..plt
;-- imp.chdir:
0x00001990      ff25aac42000   jmp qword [reloc.chdir]                 ; [0x20de40:8]=0x1996
0x00001996      6810000000     push 0x10
0x0000199b      e9e0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000019a0      ff25a2c42000   jmp qword [reloc.__stack_chk_fail]      ; [0x20de48:8]=0x19a6
0x000019a6      6811000000     push 0x11
0x000019ab      e9d0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000019b0      ff259ac42000   jmp qword [reloc.getopt_long]           ; [0x20de50:8]=0x19b6
0x000019b6      6812000000     push 0x12
0x000019bb      e9c0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000019c0      ff2592c42000   jmp qword [reloc.mbrtowc]               ; [0x20de58:8]=0x19c6
0x000019c6      6813000000     push 0x13
0x000019cb      e9b0feffff     jmp sym..plt
;-- imp.__fxstatat:
0x000019d0      ff258ac42000   jmp qword [reloc.__fxstatat]            ; [0x20de60:8]=0x19d6
0x000019d6      6814000000     push 0x14
0x000019db      e9a0feffff     jmp sym..plt
;-- imp.strrchr:
0x000019e0      ff2582c42000   jmp qword [reloc.strrchr]               ; [0x20de68:8]=0x19e6
0x000019e6      6815000000     push 0x15
0x000019eb      e990feffff     jmp sym..plt
;-- imp.lseek:
0x000019f0      ff257ac42000   jmp qword [reloc.lseek]                 ; [0x20de70:8]=0x19f6
0x000019f6      6816000000     push 0x16
0x000019fb      e980feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001a00      ff2572c42000   jmp qword [reloc.__assert_fail]         ; [0x20de78:8]=0x1a06
0x00001a06      6817000000     push 0x17
0x00001a0b      e970feffff     jmp sym..plt
;-- imp.memset:
0x00001a10      ff256ac42000   jmp qword [reloc.memset]                ; [0x20de80:8]=0x1a16
0x00001a16      6818000000     push 0x18
0x00001a1b      e960feffff     jmp sym..plt
;-- imp.getcwd:
0x00001a20      ff2562c42000   jmp qword [reloc.getcwd]                ; [0x20de88:8]=0x1a26 ; "&\x1a"
0x00001a26      6819000000     push 0x19
0x00001a2b      e950feffff     jmp sym..plt
;-- imp.close:
0x00001a30      ff255ac42000   jmp qword [reloc.close]                 ; [0x20de90:8]=0x1a36 ; "6\x1a"
0x00001a36      681a000000     push 0x1a
0x00001a3b      e940feffff     jmp sym..plt
;-- imp.strspn:
0x00001a40      ff2552c42000   jmp qword [reloc.strspn]                ; [0x20de98:8]=0x1a46 ; "F\x1a"
0x00001a46      681b000000     push 0x1b
0x00001a4b      e930feffff     jmp sym..plt
;-- imp.closedir:
0x00001a50      ff254ac42000   jmp qword [reloc.closedir]              ; [0x20dea0:8]=0x1a56 ; "V\x1a"
0x00001a56      681c000000     push 0x1c
0x00001a5b      e920feffff     jmp sym..plt
;-- imp.memchr:
0x00001a60      ff2542c42000   jmp qword [reloc.memchr]                ; [0x20dea8:8]=0x1a66 ; "f\x1a"
0x00001a66      681d000000     push 0x1d
0x00001a6b      e910feffff     jmp sym..plt
;-- imp.memcmp:
0x00001a70      ff253ac42000   jmp qword [reloc.memcmp]                ; [0x20deb0:8]=0x1a76 ; "v\x1a"
0x00001a76      681e000000     push 0x1e
0x00001a7b      e900feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001a80      ff2532c42000   jmp qword [reloc.fputs_unlocked]        ; [0x20deb8:8]=0x1a86
0x00001a86      681f000000     push 0x1f
0x00001a8b      e9f0fdffff     jmp sym..plt
;-- imp.calloc:
0x00001a90      ff252ac42000   jmp qword [reloc.calloc]                ; [0x20dec0:8]=0x1a96
0x00001a96      6820000000     push 0x20                               ; "@"
0x00001a9b      e9e0fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001aa0      ff2522c42000   jmp qword [reloc.strcmp]                ; [0x20dec8:8]=0x1aa6
0x00001aa6      6821000000     push 0x21                               ; '!'
0x00001aab      e9d0fdffff     jmp sym..plt
;-- imp.dirfd:
0x00001ab0      ff251ac42000   jmp qword [reloc.dirfd]                 ; [0x20ded0:8]=0x1ab6
0x00001ab6      6822000000     push 0x22                               ; '"'
0x00001abb      e9c0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001ac0      ff2512c42000   jmp qword [reloc.memcpy]                ; [0x20ded8:8]=0x1ac6
0x00001ac6      6823000000     push 0x23                               ; '#'
0x00001acb      e9b0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001ad0      ff250ac42000   jmp qword [reloc.fileno]                ; [0x20dee0:8]=0x1ad6
0x00001ad6      6824000000     push 0x24                               ; '$'
0x00001adb      e9a0fdffff     jmp sym..plt
;-- imp.__xstat:
0x00001ae0      ff2502c42000   jmp qword [reloc.__xstat]               ; [0x20dee8:8]=0x1ae6
0x00001ae6      6825000000     push 0x25                               ; '%'
0x00001aeb      e990fdffff     jmp sym..plt
;-- imp.readdir:
0x00001af0      ff25fac32000   jmp qword [reloc.readdir]               ; [0x20def0:8]=0x1af6
0x00001af6      6826000000     push 0x26                               ; '&'
0x00001afb      e980fdffff     jmp sym..plt
;-- imp.malloc:
0x00001b00      ff25f2c32000   jmp qword [reloc.malloc]                ; [0x20def8:8]=0x1b06
0x00001b06      6827000000     push 0x27                               ; '''
0x00001b0b      e970fdffff     jmp sym..plt
;-- imp.fflush:
0x00001b10      ff25eac32000   jmp qword [reloc.fflush]                ; [0x20df00:8]=0x1b16
0x00001b16      6828000000     push 0x28                               ; '('
0x00001b1b      e960fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001b20      ff25e2c32000   jmp qword [reloc.nl_langinfo]           ; [0x20df08:8]=0x1b26 ; "&\x1b"
0x00001b26      6829000000     push 0x29                               ; ')'
0x00001b2b      e950fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001b30      ff25dac32000   jmp qword [reloc.__fxstat]              ; [0x20df10:8]=0x1b36 ; "6\x1b"
0x00001b36      682a000000     push 0x2a                               ; '*'
0x00001b3b      e940fdffff     jmp sym..plt
;-- imp.__freading:
0x00001b40      ff25d2c32000   jmp qword [reloc.__freading]            ; [0x20df18:8]=0x1b46 ; "F\x1b"
0x00001b46      682b000000     push 0x2b                               ; '+'
0x00001b4b      e930fdffff     jmp sym..plt
;-- imp.fchdir:
0x00001b50      ff25cac32000   jmp qword [reloc.fchdir]                ; [0x20df20:8]=0x1b56 ; "V\x1b"
0x00001b56      682c000000     push 0x2c                               ; ','
0x00001b5b      e920fdffff     jmp sym..plt
;-- imp.realloc:
0x00001b60      ff25c2c32000   jmp qword [reloc.realloc]               ; [0x20df28:8]=0x1b66 ; "f\x1b"
0x00001b66      682d000000     push 0x2d                               ; '-'
0x00001b6b      e910fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001b70      ff25bac32000   jmp qword [reloc.setlocale]             ; [0x20df30:8]=0x1b76 ; "v\x1b"
0x00001b76      682e000000     push 0x2e                               ; '.'
0x00001b7b      e900fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001b80      ff25b2c32000   jmp qword [reloc.__printf_chk]          ; [0x20df38:8]=0x1b86
0x00001b86      682f000000     push 0x2f                               ; '/'
0x00001b8b      e9f0fcffff     jmp sym..plt
;-- imp.memmove:
0x00001b90      ff25aac32000   jmp qword [reloc.memmove]               ; [0x20df40:8]=0x1b96
0x00001b96      6830000000     push 0x30                               ; '0'
0x00001b9b      e9e0fcffff     jmp sym..plt
;-- imp.error:
0x00001ba0      ff25a2c32000   jmp qword [reloc.error]                 ; [0x20df48:8]=0x1ba6
0x00001ba6      6831000000     push 0x31                               ; '1'
0x00001bab      e9d0fcffff     jmp sym..plt
;-- imp.memrchr:
0x00001bb0      ff259ac32000   jmp qword [reloc.memrchr]               ; [0x20df50:8]=0x1bb6
0x00001bb6      6832000000     push 0x32                               ; '2'
0x00001bbb      e9c0fcffff     jmp sym..plt
;-- imp.open:
0x00001bc0      ff2592c32000   jmp qword [reloc.open]                  ; [0x20df58:8]=0x1bc6
0x00001bc6      6833000000     push 0x33                               ; '3'
0x00001bcb      e9b0fcffff     jmp sym..plt
;-- imp.access:
0x00001bd0      ff258ac32000   jmp qword [reloc.access]                ; [0x20df60:8]=0x1bd6
0x00001bd6      6834000000     push 0x34                               ; '4'
0x00001bdb      e9a0fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001be0      ff2582c32000   jmp qword [reloc.fseeko]                ; [0x20df68:8]=0x1be6
0x00001be6      6835000000     push 0x35                               ; '5'
0x00001beb      e990fcffff     jmp sym..plt
;-- imp.fdopendir:
0x00001bf0      ff257ac32000   jmp qword [reloc.fdopendir]             ; [0x20df70:8]=0x1bf6
0x00001bf6      6836000000     push 0x36                               ; '6'
0x00001bfb      e980fcffff     jmp sym..plt
;-- imp.fstatfs:
0x00001c00      ff2572c32000   jmp qword [reloc.fstatfs]               ; [0x20df78:8]=0x1c06
0x00001c06      6837000000     push 0x37                               ; '7'
0x00001c0b      e970fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001c10      ff256ac32000   jmp qword [reloc.__cxa_atexit]          ; [0x20df80:8]=0x1c16
0x00001c16      6838000000     push 0x38                               ; '8'
0x00001c1b      e960fcffff     jmp sym..plt
;-- imp.exit:
0x00001c20      ff2562c32000   jmp qword [reloc.exit]                  ; [0x20df88:8]=0x1c26 ; "&\x1c"
0x00001c26      6839000000     push 0x39                               ; '9'
0x00001c2b      e950fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001c30      ff255ac32000   jmp qword [reloc.fwrite]                ; [0x20df90:8]=0x1c36 ; "6\x1c"
0x00001c36      683a000000     push 0x3a                               ; ':'
0x00001c3b      e940fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001c40      ff2552c32000   jmp qword [reloc.__fprintf_chk]         ; [0x20df98:8]=0x1c46 ; "F\x1c"
0x00001c46      683b000000     push 0x3b                               ; ';'
0x00001c4b      e930fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001c50      ff254ac32000   jmp qword [reloc.mbsinit]               ; [0x20dfa0:8]=0x1c56 ; "V\x1c"
0x00001c56      683c000000     push 0x3c                               ; '<'
0x00001c5b      e920fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001c60      ff2542c32000   jmp qword [reloc.iswprint]              ; [0x20dfa8:8]=0x1c66 ; "f\x1c"
0x00001c66      683d000000     push 0x3d                               ; '='
0x00001c6b      e910fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001c70      ff253ac32000   jmp qword [reloc.__ctype_b_loc]         ; [0x20dfb0:8]=0x1c76 ; "v\x1c"
0x00001c76      683e000000     push 0x3e                               ; '>'
0x00001c7b      e900fcffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001c80      ff2532c32000   jmp qword [reloc.__sprintf_chk]         ; [0x20dfb8:8]=0x1c86
0x00001c86      683f000000     push 0x3f                               ; '?'
0x00001c8b      e9f0fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001c90      .qword 0x90660020c32a25ff                              ; [13] -r-x section size 16 named .plt.got
0x00001c98      .qword 0x90660020c34a25ff
;-- main:
;-- section..text:
;-- .text:
0x00001ca0      4157           push r15                                ; [14] -r-x section size 32526 named .text
0x00001ca2      4156           push r14
0x00001ca4      4531ff         xor r15d, r15d
0x00001ca7      4155           push r13
0x00001ca9      4154           push r12
0x00001cab      4531ed         xor r13d, r13d
0x00001cae      55             push rbp
0x00001caf      53             push rbx
0x00001cb0      4863ef         movsxd rbp, edi
0x00001cb3      4889f3         mov rbx, rsi
0x00001cb6      41beffffffff   mov r14d, 0xffffffff                    ; -1
0x00001cbc      41bc10000000   mov r12d, 0x10
0x00001cc2      4883ec38       sub rsp, 0x38
0x00001cc6      488b3e         mov rdi, qword [rsi]
0x00001cc9      64488b042528.  mov rax, qword fs:[0x28]
0x00001cd2      4889442428     mov qword [rsp + 0x28], rax
0x00001cd7      31c0           xor eax, eax
0x00001cd9      e802110000     call sym.set_program_name
0x00001cde      488d351c9100.  lea rsi, [0x0000ae01]
0x00001ce5      bf06000000     mov edi, 6
0x00001cea      e881feffff     call sym.imp.setlocale
0x00001cef      488d35777f00.  lea rsi, str.usr_local_share_locale     ; 0x9c6d ; "/usr/local/share/locale"
0x00001cf6      488d3d477f00.  lea rdi, [0x00009c44]                   ; "coreutils"
0x00001cfd      e82efcffff     call sym.imp.bindtextdomain
0x00001d02      488d3d3b7f00.  lea rdi, [0x00009c44]                   ; "coreutils"
0x00001d09      e802fcffff     call sym.imp.textdomain
0x00001d0e      488d3d1b1000.  lea rdi, sym.close_stdout               ; 0x2d30 ; "USH\x83\xec\bH\x8b=K\xb3 "
0x00001d15      e8867e0000     call sym.atexit
0x00001d1a      48c744240800.  mov qword [rsp + 8], 0
0x00001d23      0f1f440000     nop dword [rax + rax]
0x00001d28      488d0d71bc20.  lea rcx, obj.long_options               ; 0x20d9a0 ; "I\x9d"
0x00001d2f      488d156a7f00.  lea rdx, str.HLPRhvu:r:t:l:             ; 0x9ca0 ; "HLPRhvu:r:t:l:"
0x00001d36      4531c0         xor r8d, r8d
0x00001d39      4889de         mov rsi, rbx
0x00001d3c      89ef           mov edi, ebp
0x00001d3e      e86dfcffff     call sym.imp.getopt_long
0x00001d43      83f8ff         cmp eax, 0xffffffff
0x00001d46      0f8458010000   je 0x1ea4
0x00001d4c      83f86c         cmp eax, 0x6c
0x00001d4f      747b           je 0x1dcc
0x00001d51      7e3d           jle 0x1d90
0x00001d53      83f876         cmp eax, 0x76
0x00001d56      0f8420010000   je 0x1e7c
0x00001d5c      7e62           jle 0x1dc0
0x00001d5e      3d81000000     cmp eax, 0x81
0x00001d63      0f8433010000   je 0x1e9c
0x00001d69      0f8e19010000   jle 0x1e88
0x00001d6f      3d82000000     cmp eax, 0x82
0x00001d74      0f84f7000000   je 0x1e71
0x00001d7a      3d83000000     cmp eax, 0x83
0x00001d7f      7576           jne 0x1df7
0x00001d81      488b0510c320.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e098:8]=0
0x00001d88      4889442408     mov qword [rsp + 8], rax
0x00001d8d      eb99           jmp 0x1d28
0x00001d8f      90             nop
0x00001d90      83f84c         cmp eax, 0x4c
0x00001d93      0f84b1000000   je 0x1e4a
0x00001d99      7e45           jle 0x1de0
0x00001d9b      83f852         cmp eax, 0x52
0x00001d9e      0f84c1000000   je 0x1e65
0x00001da4      0f8eab000000   jle 0x1e55
0x00001daa      83f866         cmp eax, 0x66
0x00001dad      0f8475ffffff   je 0x1d28
0x00001db3      83f868         cmp eax, 0x68
0x00001db6      753f           jne 0x1df7
0x00001db8      4531f6         xor r14d, r14d
0x00001dbb      e968ffffff     jmp 0x1d28
0x00001dc0      83f874         cmp eax, 0x74
0x00001dc3      7407           je 0x1dcc
0x00001dc5      7f05           jg 0x1dcc
0x00001dc7      83f872         cmp eax, 0x72
0x00001dca      752b           jne 0x1df7
0x00001dcc      41bd01000000   mov r13d, 1
0x00001dd2      e951ffffff     jmp 0x1d28
0x00001dd7      660f1f840000.  nop word [rax + rax]
0x00001de0      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001de5      0f8477080000   je 0x2662
0x00001deb      83f848         cmp eax, 0x48
0x00001dee      744f           je 0x1e3f
0x00001df0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001df5      740a           je 0x1e01
0x00001df7      bf01000000     mov edi, 1
0x00001dfc      e89f0a0000     call sym.usage
0x00001e01      4883ec08       sub rsp, 8
0x00001e05      488b3d7cc220.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00001e0c      488b0dfdc120.  mov rcx, qword [obj.Version]            ; [0x20e010:8]=0xa87c str.8.31 ; "|\xa8"
0x00001e13      6a00           push 0
0x00001e15      4c8d0d697e00.  lea r9, str.Jim_Meyering                ; 0x9c85 ; "Jim Meyering"
0x00001e1c      4c8d056f7e00.  lea r8, str.Russell_Coker               ; 0x9c92 ; "Russell Coker"
0x00001e23      488d15167e00.  lea rdx, str.GNU_coreutils              ; 0x9c40 ; "GNU coreutils"
0x00001e2a      488d35937d00.  lea rsi, str.chcon                      ; 0x9bc4 ; "chcon"
0x00001e31      31c0           xor eax, eax
0x00001e33      e818320000     call sym.version_etc
0x00001e38      31ff           xor edi, edi
0x00001e3a      e8e1fdffff     call sym.imp.exit
0x00001e3f      41bc11000000   mov r12d, 0x11
0x00001e45      e9defeffff     jmp 0x1d28
0x00001e4a      41bc02000000   mov r12d, 2
0x00001e50      e9d3feffff     jmp 0x1d28
0x00001e55      83f850         cmp eax, 0x50
0x00001e58      759d           jne 0x1df7
0x00001e5a      41bc10000000   mov r12d, 0x10
0x00001e60      e9c3feffff     jmp 0x1d28
0x00001e65      c60585c22000.  mov byte [obj.recurse], 1               ; [0x20e0f1:1]=0
0x00001e6c      e9b7feffff     jmp 0x1d28
0x00001e71      41bf01000000   mov r15d, 1
0x00001e77      e9acfeffff     jmp 0x1d28
0x00001e7c      c6056dc22000.  mov byte [obj.verbose], 1               ; [0x20e0f0:1]=0
0x00001e83      e9a0feffff     jmp 0x1d28
0x00001e88      83c080         add eax, 0xffffff80
0x00001e8b      0f8566ffffff   jne 0x1df7
0x00001e91      41be01000000   mov r14d, 1
0x00001e97      e98cfeffff     jmp 0x1d28
0x00001e9c      4531ff         xor r15d, r15d
0x00001e9f      e984feffff     jmp 0x1d28
0x00001ea4      0fb61546c220.  movzx edx, byte [obj.recurse]           ; [0x20e0f1:1]=0
0x00001eab      84d2           test dl, dl
0x00001ead      0f85c6030000   jne 0x2279
0x00001eb3      4585f6         test r14d, r14d
0x00001eb6      41bc10000000   mov r12d, 0x10
0x00001ebc      0f95052fc220.  setne byte [obj.affect_symlink_referent]
0x00001ec3      4c6335c6c120.  movsxd r14, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e090:4]=0
0x00001eca      89e9           mov ecx, ebp
0x00001ecc      4429f1         sub ecx, r14d
0x00001ecf      48837c240800   cmp qword [rsp + 8], 0
0x00001ed5      0f95c0         setne al
0x00001ed8      4408e8         or al, r13b
0x00001edb      88442417       mov byte [rsp + 0x17], al
0x00001edf      0f848a040000   je 0x236f
0x00001ee5      85c9           test ecx, ecx
0x00001ee7      0f8e8b040000   jle 0x2378
0x00001eed      88542418       mov byte [rsp + 0x18], dl
0x00001ef1      e8aaf9ffff     call sym.imp.__errno_location
0x00001ef6      48837c240800   cmp qword [rsp + 8], 0
0x00001efc      4889c5         mov rbp, rax
0x00001eff      0fb6542418     movzx edx, byte [rsp + 0x18]
0x00001f04      0f855f070000   jne 0x2669
0x00001f0a      84d2           test dl, dl
0x00001f0c      48c705c9c120.  mov qword [obj.specified_context], 0    ; [0x20e0e0:8]=0
0x00001f17      7409           je 0x1f22
0x00001f19      4584ff         test r15b, r15b
0x00001f1c      0f85db050000   jne 0x24fd
0x00001f22      48c705bbc120.  mov qword [obj.root_dev_ino], 0         ; [0x20e0e8:8]=0
0x00001f2d      4a8d3cf3       lea rdi, [rbx + r14*8]
0x00001f31      4489e6         mov esi, r12d
0x00001f34      31d2           xor edx, edx
0x00001f36      83ce08         or esi, 8
0x00001f39      4c8d35108900.  lea r14, [0x0000a850]
0x00001f40      e8fb340000     call sym.xfts_open
0x00001f45      4989c4         mov r12, rax
0x00001f48      488d442420     lea rax, [rsp + 0x20]
0x00001f4d      0fb65c2417     movzx ebx, byte [rsp + 0x17]
0x00001f52      4c89e7         mov rdi, r12
0x00001f55      4889442408     mov qword [rsp + 8], rax
0x00001f5a      e881500000     call sym.rpl_fts_read
0x00001f5f      4885c0         test rax, rax
0x00001f62      4989c5         mov r13, rax
0x00001f65      0f849c000000   je 0x2007
0x00001f6b      0f1f440000     nop dword [rax + rax]
0x00001f70      668378700a     cmp word [rax + 0x70], 0xa
0x00001f75      488b4838       mov rcx, qword [rax + 0x38]
0x00001f79      0f8719010000   ja 0x2098
0x00001f7f      0fb74070       movzx eax, word [rax + 0x70]
0x00001f83      49630486       movsxd rax, dword [r14 + rax*4]
0x00001f87      4c01f0         add rax, r14
0x00001f8a      ffe0           jmp rax
0x00001f8c      49837d5800     cmp qword [r13 + 0x58], 0
0x00001f91      750b           jne 0x1f9e
0x00001f93      49837d2000     cmp qword [r13 + 0x20], 0
0x00001f98      0f84ae030000   je 0x234c
0x00001f9e      4889ce         mov rsi, rcx
0x00001fa1      bf04000000     mov edi, 4
0x00001fa6      e875280000     call sym.quotearg_style
0x00001fab      488d355c7d00.  lea rsi, str.cannot_access__s           ; 0x9d0e ; "cannot access %s"
0x00001fb2      4989c7         mov r15, rax
0x00001fb5      ba05000000     mov edx, 5
0x00001fba      31ff           xor edi, edi
0x00001fbc      e87ff9ffff     call sym.imp.dcgettext
0x00001fc1      418b7540       mov esi, dword [r13 + 0x40]
0x00001fc5      4c89f9         mov rcx, r15
0x00001fc8      4889c2         mov rdx, rax
0x00001fcb      31ff           xor edi, edi
0x00001fcd      31c0           xor eax, eax
0x00001fcf      4531ff         xor r15d, r15d
0x00001fd2      e8c9fbffff     call sym.imp.error
0x00001fd7      803d13c12000.  cmp byte [obj.recurse], 0               ; [0x20e0f1:1]=0
0x00001fde      7510           jne 0x1ff0
0x00001fe0      ba04000000     mov edx, 4
0x00001fe5      4c89ee         mov rsi, r13
0x00001fe8      4c89e7         mov rdi, r12
0x00001feb      e870570000     call sym.rpl_fts_set
0x00001ff0      4c89e7         mov rdi, r12
0x00001ff3      4421fb         and ebx, r15d
0x00001ff6      e8e54f0000     call sym.rpl_fts_read
0x00001ffb      4885c0         test rax, rax
0x00001ffe      4989c5         mov r13, rax
0x00002001      0f8569ffffff   jne 0x1f70
0x00002007      837d0000       cmp dword [rbp], 0
0x0000200b      0f85f6030000   jne 0x2407
0x00002011      4c89e7         mov rdi, r12
0x00002014      e8374e0000     call sym.rpl_fts_close
0x00002019      85c0           test eax, eax
0x0000201b      7424           je 0x2041
0x0000201d      488d35147d00.  lea rsi, str.fts_close_failed           ; 0x9d38 ; "fts_close failed"
0x00002024      ba05000000     mov edx, 5
0x00002029      31ff           xor edi, edi
0x0000202b      31db           xor ebx, ebx
0x0000202d      e80ef9ffff     call sym.imp.dcgettext
0x00002032      8b7500         mov esi, dword [rbp]
0x00002035      4889c2         mov rdx, rax
0x00002038      31ff           xor edi, edi
0x0000203a      31c0           xor eax, eax
0x0000203c      e85ffbffff     call sym.imp.error
0x00002041      83f301         xor ebx, 1
0x00002044      0fb6c3         movzx eax, bl
0x00002047      488b5c2428     mov rbx, qword [rsp + 0x28]
0x0000204c      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002055      0f85c7060000   jne 0x2722
0x0000205b      4883c438       add rsp, 0x38
0x0000205f      5b             pop rbx
0x00002060      5d             pop rbp
0x00002061      415c           pop r12
0x00002063      415d           pop r13
0x00002065      415e           pop r14
0x00002067      415f           pop r15
0x00002069      c3             ret
0x0000206a      803d80c02000.  cmp byte [obj.recurse], 0               ; [0x20e0f1:1]=0
0x00002071      0f84ed020000   je 0x2364
0x00002077      488b056ac020.  mov rax, qword [obj.root_dev_ino]       ; [0x20e0e8:8]=0
0x0000207e      4885c0         test rax, rax
0x00002081      7415           je 0x2098
0x00002083      488b10         mov rdx, qword [rax]
0x00002086      493995800000.  cmp qword [r13 + 0x80], rdx
0x0000208d      0f84c8030000   je 0x245b
0x00002093      0f1f440000     nop dword [rax + rax]
0x00002098      803d51c02000.  cmp byte [obj.verbose], 0               ; [0x20e0f0:1]=0
0x0000209f      4d8b7d30       mov r15, qword [r13 + 0x30]
0x000020a3      0f85ef010000   jne 0x2298
0x000020a9      488b0d30c020.  mov rcx, qword [obj.specified_context]  ; [0x20e0e0:8]=0
0x000020b0      418b7c242c     mov edi, dword [r12 + 0x2c]
0x000020b5      48c744242000.  mov qword [rsp + 0x20], 0
0x000020be      0fb6052dc020.  movzx eax, byte [obj.affect_symlink_referent] ; [0x20e0f2:1]=0
0x000020c5      4885c9         test rcx, rcx
0x000020c8      0f8408020000   je 0x22d6
0x000020ce      84c0           test al, al
0x000020d0      4889ca         mov rdx, rcx
0x000020d3      48894c2418     mov qword [rsp + 0x18], rcx
0x000020d8      4c89fe         mov rsi, r15
0x000020db      0f845c020000   je 0x233d
0x000020e1      e8ba590000     call sym.setfileconat
0x000020e6      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000020eb      85c0           test eax, eax
0x000020ed      0f85b4020000   jne 0x23a7
0x000020f3      440fb67c2417   movzx r15d, byte [rsp + 0x17]
0x000020f9      e9d9feffff     jmp 0x1fd7
0x000020fe      4c89ee         mov rsi, r13
0x00002101      4c89e7         mov rdi, r12
0x00002104      48894c2418     mov qword [rsp + 0x18], rcx
0x00002109      e882330000     call sym.cycle_warning_required
0x0000210e      84c0           test al, al
0x00002110      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002115      7481           je 0x2098
0x00002117      4889ca         mov rdx, rcx
0x0000211a      be03000000     mov esi, 3
0x0000211f      31ff           xor edi, edi
0x00002121      e8fa270000     call sym.quotearg_n_style_colon
0x00002126      488d35b38500.  lea rsi, str.WARNING:_Circular_directory_structure.__This_almost_certainly_means_that_you_have_a_corrupted_file_system.__NOTIFY_YOUR_SYSTEM_MANAGER.__The_following_directory_is_part_of_the_cycle:_____s ; 0xa6e0 ; "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n"
0x0000212d      4989c7         mov r15, rax
0x00002130      ba05000000     mov edx, 5
0x00002135      31ff           xor edi, edi
0x00002137      e804f8ffff     call sym.imp.dcgettext
0x0000213c      4c89f9         mov rcx, r15
0x0000213f      4889c2         mov rdx, rax
0x00002142      31f6           xor esi, esi
0x00002144      31ff           xor edi, edi
0x00002146      31c0           xor eax, eax
0x00002148      4531ff         xor r15d, r15d
0x0000214b      e850faffff     call sym.imp.error
0x00002150      e99bfeffff     jmp 0x1ff0
0x00002155      440fb63d94bf.  movzx r15d, byte [obj.recurse]          ; [0x20e0f1:1]=0
0x0000215d      4584ff         test r15b, r15b
0x00002160      0f8432ffffff   je 0x2098
0x00002166      488b057bbf20.  mov rax, qword [obj.root_dev_ino]       ; [0x20e0e8:8]=0
0x0000216d      4885c0         test rax, rax
0x00002170      0f847afeffff   je 0x1ff0
0x00002176      488b10         mov rdx, qword [rax]
0x00002179      493995800000.  cmp qword [r13 + 0x80], rdx
0x00002180      0f856afeffff   jne 0x1ff0
0x00002186      488b4008       mov rax, qword [rax + 8]
0x0000218a      49394578       cmp qword [r13 + 0x78], rax
0x0000218e      0f855cfeffff   jne 0x1ff0
0x00002194      488d35359200.  lea rsi, [0x0000b3d0]                   ; "/"
0x0000219b      4889cf         mov rdi, rcx
0x0000219e      48894c2418     mov qword [rsp + 0x18], rcx
0x000021a3      e8f8f8ffff     call sym.imp.strcmp
0x000021a8      85c0           test eax, eax
0x000021aa      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000021af      0f8548040000   jne 0x25fd
0x000021b5      4889ce         mov rsi, rcx
0x000021b8      bf04000000     mov edi, 4
0x000021bd      e85e260000     call sym.quotearg_style
0x000021c2      488d356f8400.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xa638 ; "it is dangerous to operate recursively on %s"
0x000021c9      4989c7         mov r15, rax
0x000021cc      ba05000000     mov edx, 5
0x000021d1      31ff           xor edi, edi
0x000021d3      e868f7ffff     call sym.imp.dcgettext
0x000021d8      4c89f9         mov rcx, r15
0x000021db      4889c2         mov rdx, rax
0x000021de      31f6           xor esi, esi
0x000021e0      31ff           xor edi, edi
0x000021e2      31c0           xor eax, eax
0x000021e4      e8b7f9ffff     call sym.imp.error
0x000021e9      488d35b88400.  lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xa6a8 ; "use --no-preserve-root to override this failsafe"
0x000021f0      ba05000000     mov edx, 5
0x000021f5      31ff           xor edi, edi
0x000021f7      4531ff         xor r15d, r15d
0x000021fa      e841f7ffff     call sym.imp.dcgettext
0x000021ff      31f6           xor esi, esi
0x00002201      4889c2         mov rdx, rax
0x00002204      31ff           xor edi, edi
0x00002206      31c0           xor eax, eax
0x00002208      e893f9ffff     call sym.imp.error
0x0000220d      ba04000000     mov edx, 4
0x00002212      4c89ee         mov rsi, r13
0x00002215      4c89e7         mov rdi, r12
0x00002218      e843550000     call sym.rpl_fts_set
0x0000221d      4c89e7         mov rdi, r12
0x00002220      e8bb4d0000     call sym.rpl_fts_read
0x00002225      e9c6fdffff     jmp 0x1ff0
0x0000222a      4889ca         mov rdx, rcx
0x0000222d      be03000000     mov esi, 3
0x00002232      31ff           xor edi, edi
0x00002234      e8e7260000     call sym.quotearg_n_style_colon
0x00002239      418b7540       mov esi, dword [r13 + 0x40]
0x0000223d      488d154d8600.  lea rdx, [0x0000a891]                   ; "%s"
0x00002244      4889c1         mov rcx, rax
0x00002247      31ff           xor edi, edi
0x00002249      31c0           xor eax, eax
0x0000224b      4531ff         xor r15d, r15d
0x0000224e      e84df9ffff     call sym.imp.error
0x00002253      e97ffdffff     jmp 0x1fd7
0x00002258      4889ce         mov rsi, rcx
0x0000225b      bf04000000     mov edi, 4
0x00002260      e8bb250000     call sym.quotearg_style
0x00002265      ba05000000     mov edx, 5
0x0000226a      4989c7         mov r15, rax
0x0000226d      488d35ab7a00.  lea rsi, str.cannot_read_directory__s   ; 0x9d1f ; "cannot read directory %s"
0x00002274      e941fdffff     jmp 0x1fba
0x00002279      4183fc10       cmp r12d, 0x10
0x0000227d      0f8464020000   je 0x24e7
0x00002283      4585f6         test r14d, r14d
0x00002286      0f849b040000   je 0x2727
0x0000228c      c6055fbe2000.  mov byte [obj.affect_symlink_referent], 1 ; [0x20e0f2:1]=0
0x00002293      e92bfcffff     jmp 0x1ec3
0x00002298      4889ce         mov rsi, rcx
0x0000229b      bf04000000     mov edi, 4
0x000022a0      e87b250000     call sym.quotearg_style
0x000022a5      488d35f48400.  lea rsi, str.changing_security_context_of__s ; 0xa7a0 ; "changing security context of %s\n"
0x000022ac      31ff           xor edi, edi
0x000022ae      ba05000000     mov edx, 5
0x000022b3      4889442418     mov qword [rsp + 0x18], rax
0x000022b8      e883f6ffff     call sym.imp.dcgettext
0x000022bd      488b542418     mov rdx, qword [rsp + 0x18]
0x000022c2      4889c6         mov rsi, rax
0x000022c5      bf01000000     mov edi, 1
0x000022ca      31c0           xor eax, eax
0x000022cc      e8aff8ffff     call sym.imp.__printf_chk
0x000022d1      e9d3fdffff     jmp 0x20a9
0x000022d6      84c0           test al, al
0x000022d8      488b542408     mov rdx, qword [rsp + 8]
0x000022dd      4c89fe         mov rsi, r15
0x000022e0      0f8417010000   je 0x23fd
0x000022e6      e885560000     call sym.getfileconat
0x000022eb      85c0           test eax, eax
0x000022ed      0f883d010000   js 0x2430
0x000022f3      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000022f8      4885ff         test rdi, rdi
0x000022fb      0f845b020000   je 0x255c
0x00002301      c745005f0000.  mov dword [rbp], 0x5f                   ; '_'
0x00002308      e8e3270000     call sym.quote
0x0000230d      488d35ec8400.  lea rsi, str.failed_to_create_security_context:__s ; 0xa800 ; "failed to create security context: %s"
0x00002314      4989c7         mov r15, rax
0x00002317      ba05000000     mov edx, 5
0x0000231c      31ff           xor edi, edi
0x0000231e      e81df6ffff     call sym.imp.dcgettext
0x00002323      8b7500         mov esi, dword [rbp]
0x00002326      4c89f9         mov rcx, r15
0x00002329      4889c2         mov rdx, rax
0x0000232c      31ff           xor edi, edi
0x0000232e      31c0           xor eax, eax
0x00002330      4531ff         xor r15d, r15d
0x00002333      e868f8ffff     call sym.imp.error
0x00002338      e99afcffff     jmp 0x1fd7
0x0000233d      e86e570000     call sym.lsetfileconat
0x00002342      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002347      e99ffdffff     jmp 0x20eb
0x0000234c      49c745200100.  mov qword [r13 + 0x20], 1
0x00002354      ba01000000     mov edx, 1
0x00002359      4c89ee         mov rsi, r13
0x0000235c      4c89e7         mov rdi, r12
0x0000235f      e8fc530000     call sym.rpl_fts_set
0x00002364      440fb67c2417   movzx r15d, byte [rsp + 0x17]
0x0000236a      e981fcffff     jmp 0x1ff0
0x0000236f      83e901         sub ecx, 1
0x00002372      0f8f31030000   jg 0x26a9
0x00002378      4139ee         cmp r14d, ebp
0x0000237b      0f8cca030000   jl 0x274b
0x00002381      488d35397900.  lea rsi, str.missing_operand            ; 0x9cc1 ; "missing operand"
0x00002388      31ff           xor edi, edi
0x0000238a      ba05000000     mov edx, 5
0x0000238f      e8acf5ffff     call sym.imp.dcgettext
0x00002394      31f6           xor esi, esi
0x00002396      4889c2         mov rdx, rax
0x00002399      31ff           xor edi, edi
0x0000239b      31c0           xor eax, eax
0x0000239d      e8fef7ffff     call sym.imp.error
0x000023a2      e950faffff     jmp 0x1df7
0x000023a7      4889ce         mov rsi, rcx
0x000023aa      bf01000000     mov edi, 1
0x000023af      e81c270000     call sym.quote_n
0x000023b4      4c89fa         mov rdx, r15
0x000023b7      be04000000     mov esi, 4
0x000023bc      31ff           xor edi, edi
0x000023be      4889442418     mov qword [rsp + 0x18], rax
0x000023c3      e838230000     call sym.quotearg_n_style
0x000023c8      488d35598400.  lea rsi, str.failed_to_change_context_of__s_to__s ; 0xa828 ; "failed to change context of %s to %s"
0x000023cf      ba05000000     mov edx, 5
0x000023d4      31ff           xor edi, edi
0x000023d6      4989c7         mov r15, rax
0x000023d9      e862f5ffff     call sym.imp.dcgettext
0x000023de      4c8b442418     mov r8, qword [rsp + 0x18]
0x000023e3      8b7500         mov esi, dword [rbp]
0x000023e6      4c89f9         mov rcx, r15
0x000023e9      4889c2         mov rdx, rax
0x000023ec      31ff           xor edi, edi
0x000023ee      31c0           xor eax, eax
0x000023f0      4531ff         xor r15d, r15d
0x000023f3      e8a8f7ffff     call sym.imp.error
0x000023f8      e9dafbffff     jmp 0x1fd7
0x000023fd      e88e560000     call sym.lgetfileconat
0x00002402      e9e4feffff     jmp 0x22eb
0x00002407      488d35f07800.  lea rsi, str.fts_read_failed            ; 0x9cfe ; "fts_read failed"
0x0000240e      ba05000000     mov edx, 5
0x00002413      31ff           xor edi, edi
0x00002415      31db           xor ebx, ebx
0x00002417      e824f5ffff     call sym.imp.dcgettext
0x0000241c      8b7500         mov esi, dword [rbp]
0x0000241f      4889c2         mov rdx, rax
0x00002422      31ff           xor edi, edi
0x00002424      31c0           xor eax, eax
0x00002426      e875f7ffff     call sym.imp.error
0x0000242b      e9e1fbffff     jmp 0x2011
0x00002430      837d003d       cmp dword [rbp], 0x3d
0x00002434      0f84b9feffff   je 0x22f3
0x0000243a      4c89fe         mov rsi, r15
0x0000243d      bf04000000     mov edi, 4
0x00002442      e8d9230000     call sym.quotearg_style
0x00002447      ba05000000     mov edx, 5
0x0000244c      4989c7         mov r15, rax
0x0000244f      488d359a8100.  lea rsi, str.failed_to_get_security_context_of__s ; 0xa5f0 ; "failed to get security context of %s"
0x00002456      e9c1feffff     jmp 0x231c
0x0000245b      488b4008       mov rax, qword [rax + 8]
0x0000245f      49394578       cmp qword [r13 + 0x78], rax
0x00002463      0f852ffcffff   jne 0x2098
0x00002469      488d35608f00.  lea rsi, [0x0000b3d0]                   ; "/"
0x00002470      4889cf         mov rdi, rcx
0x00002473      48894c2418     mov qword [rsp + 0x18], rcx
0x00002478      e823f6ffff     call sym.imp.strcmp
0x0000247d      85c0           test eax, eax
0x0000247f      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002484      0f850e010000   jne 0x2598
0x0000248a      4889ce         mov rsi, rcx
0x0000248d      bf04000000     mov edi, 4
0x00002492      e889230000     call sym.quotearg_style
0x00002497      488d359a8100.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xa638 ; "it is dangerous to operate recursively on %s"
0x0000249e      4989c7         mov r15, rax
0x000024a1      ba05000000     mov edx, 5
0x000024a6      31ff           xor edi, edi
0x000024a8      e893f4ffff     call sym.imp.dcgettext
0x000024ad      4c89f9         mov rcx, r15
0x000024b0      4889c2         mov rdx, rax
0x000024b3      31f6           xor esi, esi
0x000024b5      31ff           xor edi, edi
0x000024b7      31c0           xor eax, eax
0x000024b9      e8e2f6ffff     call sym.imp.error
0x000024be      488d35e38100.  lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xa6a8 ; "use --no-preserve-root to override this failsafe"
0x000024c5      ba05000000     mov edx, 5
0x000024ca      31ff           xor edi, edi
0x000024cc      4531ff         xor r15d, r15d
0x000024cf      e86cf4ffff     call sym.imp.dcgettext
0x000024d4      31f6           xor esi, esi
0x000024d6      4889c2         mov rdx, rax
0x000024d9      31ff           xor edi, edi
0x000024db      31c0           xor eax, eax
0x000024dd      e8bef6ffff     call sym.imp.error
0x000024e2      e9f0faffff     jmp 0x1fd7
0x000024e7      4183ee01       sub r14d, 1
0x000024eb      0f840d020000   je 0x26fe
0x000024f1      c605fabb2000.  mov byte [obj.affect_symlink_referent], 0 ; [0x20e0f2:1]=0
0x000024f8      e9c6f9ffff     jmp 0x1ec3
0x000024fd      488d3dccbb20.  lea rdi, obj.dev_ino_buf.7158           ; 0x20e0d0
0x00002504      e807260000     call sym.get_root_dev_ino
0x00002509      4885c0         test rax, rax
0x0000250c      488905d5bb20.  mov qword [obj.root_dev_ino], rax       ; [0x20e0e8:8]=0
0x00002513      4c633576bb20.  movsxd r14, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e090:4]=0
0x0000251a      0f850dfaffff   jne 0x1f2d
0x00002520      488d35a98e00.  lea rsi, [0x0000b3d0]                   ; "/"
0x00002527      bf04000000     mov edi, 4
0x0000252c      e8ef220000     call sym.quotearg_style
0x00002531      488d35e08000.  lea rsi, str.failed_to_get_attributes_of__s ; 0xa618 ; "failed to get attributes of %s"
0x00002538      ba05000000     mov edx, 5
0x0000253d      31ff           xor edi, edi
0x0000253f      4889c3         mov rbx, rax
0x00002542      e8f9f3ffff     call sym.imp.dcgettext
0x00002547      8b7500         mov esi, dword [rbp]
0x0000254a      4889c2         mov rdx, rax
0x0000254d      4889d9         mov rcx, rbx
0x00002550      bf01000000     mov edi, 1
0x00002555      31c0           xor eax, eax
0x00002557      e844f6ffff     call sym.imp.error
0x0000255c      4c89fe         mov rsi, r15
0x0000255f      bf04000000     mov edi, 4
0x00002564      e8b7220000     call sym.quotearg_style
0x00002569      488d35588200.  lea rsi, str.can_t_apply_partial_context_to_unlabeled_file__s ; 0xa7c8 ; "can't apply partial context to unlabeled file %s"
0x00002570      4989c7         mov r15, rax
0x00002573      ba05000000     mov edx, 5
0x00002578      31ff           xor edi, edi
0x0000257a      e8c1f3ffff     call sym.imp.dcgettext
0x0000257f      4c89f9         mov rcx, r15
0x00002582      4889c2         mov rdx, rax
0x00002585      31f6           xor esi, esi
0x00002587      31ff           xor edi, edi
0x00002589      31c0           xor eax, eax
0x0000258b      4531ff         xor r15d, r15d
0x0000258e      e80df6ffff     call sym.imp.error
0x00002593      e93ffaffff     jmp 0x1fd7
0x00002598      488d15318e00.  lea rdx, [0x0000b3d0]                   ; "/"
0x0000259f      be04000000     mov esi, 4
0x000025a4      bf01000000     mov edi, 1
0x000025a9      48894c2418     mov qword [rsp + 0x18], rcx
0x000025ae      e84d210000     call sym.quotearg_n_style
0x000025b3      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000025b8      31ff           xor edi, edi
0x000025ba      be04000000     mov esi, 4
0x000025bf      4989c7         mov r15, rax
0x000025c2      4889ca         mov rdx, rcx
0x000025c5      e836210000     call sym.quotearg_n_style
0x000025ca      488d35978000.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s ; 0xa668 ; "it is dangerous to operate recursively on %s (same as %s)"
0x000025d1      31ff           xor edi, edi
0x000025d3      ba05000000     mov edx, 5
0x000025d8      4889442418     mov qword [rsp + 0x18], rax
0x000025dd      e85ef3ffff     call sym.imp.dcgettext
0x000025e2      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000025e7      4889c2         mov rdx, rax
0x000025ea      4d89f8         mov r8, r15
0x000025ed      31f6           xor esi, esi
0x000025ef      31ff           xor edi, edi
0x000025f1      31c0           xor eax, eax
0x000025f3      e8a8f5ffff     call sym.imp.error
0x000025f8      e9c1feffff     jmp 0x24be
0x000025fd      488d15cc8d00.  lea rdx, [0x0000b3d0]                   ; "/"
0x00002604      be04000000     mov esi, 4
0x00002609      bf01000000     mov edi, 1
0x0000260e      48894c2418     mov qword [rsp + 0x18], rcx
0x00002613      e8e8200000     call sym.quotearg_n_style
0x00002618      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000261d      31ff           xor edi, edi
0x0000261f      be04000000     mov esi, 4
0x00002624      4989c7         mov r15, rax
0x00002627      4889ca         mov rdx, rcx
0x0000262a      e8d1200000     call sym.quotearg_n_style
0x0000262f      488d35328000.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s ; 0xa668 ; "it is dangerous to operate recursively on %s (same as %s)"
0x00002636      31ff           xor edi, edi
0x00002638      ba05000000     mov edx, 5
0x0000263d      4889442418     mov qword [rsp + 0x18], rax
0x00002642      e8f9f2ffff     call sym.imp.dcgettext
0x00002647      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000264c      4889c2         mov rdx, rax
0x0000264f      4d89f8         mov r8, r15
0x00002652      31f6           xor esi, esi
0x00002654      31ff           xor edi, edi
0x00002656      31c0           xor eax, eax
0x00002658      e843f5ffff     call sym.imp.error
0x0000265d      e987fbffff     jmp 0x21e9
0x00002662      31ff           xor edi, edi
0x00002664      e837020000     call sym.usage
0x00002669      488b742408     mov rsi, qword [rsp + 8]
0x0000266e      bf04000000     mov edi, 4
0x00002673      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00002679      e8a2210000     call sym.quotearg_style
0x0000267e      488d356b7f00.  lea rsi, str.failed_to_get_security_context_of__s ; 0xa5f0 ; "failed to get security context of %s"
0x00002685      ba05000000     mov edx, 5
0x0000268a      31ff           xor edi, edi
0x0000268c      4889c3         mov rbx, rax
0x0000268f      e8acf2ffff     call sym.imp.dcgettext
0x00002694      8b7500         mov esi, dword [rbp]
0x00002697      4889c2         mov rdx, rax
0x0000269a      4889d9         mov rcx, rbx
0x0000269d      bf01000000     mov edi, 1
0x000026a2      31c0           xor eax, eax
0x000026a4      e8f7f4ffff     call sym.imp.error
0x000026a9      4a8b2cf3       mov rbp, qword [rbx + r14*8]
0x000026ad      418d4601       lea eax, [r14 + 1]
0x000026b1      8905d9b92000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e090:4]=0
0x000026b7      48892d22ba20.  mov qword [obj.specified_context], rbp  ; [0x20e0e0:8]=0
0x000026be      e8ddf1ffff     call sym.imp.__errno_location
0x000026c3      4889ef         mov rdi, rbp
0x000026c6      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000026cc      4889c3         mov rbx, rax
0x000026cf      e81c240000     call sym.quote
0x000026d4      488d350f7600.  lea rsi, str.invalid_context:__s        ; 0x9cea ; "invalid context: %s"
0x000026db      ba05000000     mov edx, 5
0x000026e0      31ff           xor edi, edi
0x000026e2      4889c5         mov rbp, rax
0x000026e5      e856f2ffff     call sym.imp.dcgettext
0x000026ea      8b33           mov esi, dword [rbx]
0x000026ec      4889c2         mov rdx, rax
0x000026ef      4889e9         mov rcx, rbp
0x000026f2      bf01000000     mov edi, 1
0x000026f7      31c0           xor eax, eax
0x000026f9      e8a2f4ffff     call sym.imp.error
0x000026fe      488d35bb7e00.  lea rsi, str.R___dereference_requires_either__H_or__L ; 0xa5c0 ; "-R --dereference requires either -H or -L"
0x00002705      ba05000000     mov edx, 5
0x0000270a      31ff           xor edi, edi
0x0000270c      e82ff2ffff     call sym.imp.dcgettext
0x00002711      31f6           xor esi, esi
0x00002713      4889c2         mov rdx, rax
0x00002716      bf01000000     mov edi, 1
0x0000271b      31c0           xor eax, eax
0x0000271d      e87ef4ffff     call sym.imp.error
0x00002722      e879f2ffff     call sym.imp.__stack_chk_fail
0x00002727      488d35817500.  lea rsi, str.R__h_requires__P           ; 0x9caf ; "-R -h requires -P"
0x0000272e      ba05000000     mov edx, 5
0x00002733      31ff           xor edi, edi
0x00002735      e806f2ffff     call sym.imp.dcgettext
0x0000273a      31f6           xor esi, esi
0x0000273c      4889c2         mov rdx, rax
0x0000273f      bf01000000     mov edi, 1
0x00002744      31c0           xor eax, eax
0x00002746      e855f4ffff     call sym.imp.error
0x0000274b      488b7cebf8     mov rdi, qword [rbx + rbp*8 - 8]
0x00002750      e89b230000     call sym.quote
0x00002755      488d35757500.  lea rsi, str.missing_operand_after__s   ; 0x9cd1 ; "missing operand after %s"
0x0000275c      4889c3         mov rbx, rax
0x0000275f      31ff           xor edi, edi
0x00002761      ba05000000     mov edx, 5
0x00002766      e8d5f1ffff     call sym.imp.dcgettext
0x0000276b      4889d9         mov rcx, rbx
0x0000276e      4889c2         mov rdx, rax
0x00002771      31f6           xor esi, esi
0x00002773      31ff           xor edi, edi
0x00002775      31c0           xor eax, eax
0x00002777      e824f4ffff     call sym.imp.error
0x0000277c      e976f6ffff     jmp 0x1df7
0x00002781      662e0f1f8400.  nop word cs:[rax + rax]
0x0000278b      0f1f440000     nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002790      31ed           xor ebp, ebp
0x00002792      4989d1         mov r9, rdx
0x00002795      5e             pop rsi
0x00002796      4889e2         mov rdx, rsp
0x00002799      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000279d      50             push rax
0x0000279e      54             push rsp
0x0000279f      4c8d05ea7300.  lea r8, sym.__libc_csu_fini             ; 0x9b90
0x000027a6      488d0d737300.  lea rcx, sym.__libc_csu_init            ; 0x9b20 ; "AWAVI\x89\xd7AUATL\x8d%^> "
0x000027ad      488d3decf4ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1ca0 ; "AWAVE1\xffAUATE1\xedUSHc\xefH\x89\xf3A\xbe\xff\xff\xff\xffA\xbc\x10"
0x000027b4      ff1516b82000   call qword [reloc.__libc_start_main]    ; [0x20dfd0:8]=0
0x000027ba      f4             hlt
0x000027bb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000027c0      488d3db9b820.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e080
0x000027c7      55             push rbp
0x000027c8      488d05b1b820.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e080
0x000027cf      4839f8         cmp rax, rdi
0x000027d2      4889e5         mov rbp, rsp
0x000027d5      7419           je 0x27f0
0x000027d7      488b05eab720.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20dfc8:8]=0
0x000027de      4885c0         test rax, rax
0x000027e1      740d           je 0x27f0
0x000027e3      5d             pop rbp
0x000027e4      ffe0           jmp rax
0x000027e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000027f0      5d             pop rbp
0x000027f1      c3             ret
0x000027f2      0f1f4000       nop dword [rax]
0x000027f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002800      488d3d79b820.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e080
0x00002807      488d3572b820.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e080
0x0000280e      55             push rbp
0x0000280f      4829fe         sub rsi, rdi
0x00002812      4889e5         mov rbp, rsp
0x00002815      48c1fe03       sar rsi, 3
0x00002819      4889f0         mov rax, rsi
0x0000281c      48c1e83f       shr rax, 0x3f
0x00002820      4801c6         add rsi, rax
0x00002823      48d1fe         sar rsi, 1
0x00002826      7418           je 0x2840
0x00002828      488b05b1b720.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20dfe0:8]=0
0x0000282f      4885c0         test rax, rax
0x00002832      740c           je 0x2840
0x00002834      5d             pop rbp
0x00002835      ffe0           jmp rax
0x00002837      660f1f840000.  nop word [rax + rax]
0x00002840      5d             pop rbp
0x00002841      c3             ret
0x00002842      0f1f4000       nop dword [rax]
0x00002846      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002850      803d71b82000.  cmp byte [obj.completed.7697], 0        ; [0x20e0c8:1]=0
0x00002857      752f           jne 0x2888
0x00002859      48833d87b720.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20dfe8:8]=0
0x00002861      55             push rbp
0x00002862      4889e5         mov rbp, rsp
0x00002865      740c           je 0x2873
0x00002867      488b3d9ab720.  mov rdi, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x0000286e      e825f4ffff     call 0x1c98
0x00002873      e848ffffff     call sym.deregister_tm_clones
0x00002878      c60549b82000.  mov byte [obj.completed.7697], 1        ; [0x20e0c8:1]=0
0x0000287f      5d             pop rbp
0x00002880      c3             ret
0x00002881      0f1f80000000.  nop dword [rax]
0x00002888      f3c3           ret
0x0000288a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002890      55             push rbp
0x00002891      4889e5         mov rbp, rsp
0x00002894      5d             pop rbp
0x00002895      e966ffffff     jmp sym.register_tm_clones
0x0000289a      660f1f440000   nop word [rax + rax]
;-- usage:
0x000028a0      4155           push r13                                ; /src:347
0x000028a2      4154           push r12
0x000028a4      ba05000000     mov edx, 5                              ; /src:349
0x000028a9      55             push rbp                                ; /src:347
0x000028aa      53             push rbx
0x000028ab      89fd           mov ebp, edi
0x000028ad      4881ec880000.  sub rsp, 0x88
0x000028b4      488b1d4db820.  mov rbx, qword [obj.program_name]       ; [0x20e108:8]=0
0x000028bb      64488b042528.  mov rax, qword fs:[0x28]
0x000028c4      4889442478     mov qword [rsp + 0x78], rax
0x000028c9      31c0           xor eax, eax
0x000028cb      85ff           test edi, edi                           ; /src:348
0x000028cd      742e           je 0x28fd
0x000028cf      488d35ca7400.  lea rsi, str.Try___s___help__for_more_information. ; /src:349 ; 0x9da0 ; "Try '%s --help' for more information.\n"
0x000028d6      31ff           xor edi, edi
0x000028d8      e863f0ffff     call sym.imp.dcgettext
0x000028dd      488b3ddcb720.  mov rdi, qword [obj.stderr]             ; .//coreutils-8.31/lib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x000028e4      4889c2         mov rdx, rax
0x000028e7      4889d9         mov rcx, rbx
0x000028ea      be01000000     mov esi, 1
0x000028ef      31c0           xor eax, eax
0x000028f1      e84af3ffff     call sym.imp.__fprintf_chk
0x000028f6      89ef           mov edi, ebp                            ; /src:407
0x000028f8      e823f3ffff     call sym.imp.exit
0x000028fd      488d35c47400.  lea rsi, str.Usage:__s__OPTION_..._CONTEXT_FILE...____or:___s__OPTION_...___u_USER____r_ROLE____l_RANGE____t_TYPE__FILE...____or:___s__OPTION_...___reference_RFILE_FILE... ; /src:352 ; 0x9dc8 ; "Usage: %s [OPTION]... CONTEXT FILE...\n  or:  %s [OPTION]... [-u USER] [-r ROLE] [-l RANGE] [-t TYPE] FILE...\n  or:  %s [OPTION]... --reference=RFILE FILE...\n"
0x00002904      31ff           xor edi, edi
0x00002906      e835f0ffff     call sym.imp.dcgettext
0x0000290b      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x0000290e      4989d8         mov r8, rbx
0x00002911      4889da         mov rdx, rbx
0x00002914      4889c6         mov rsi, rax
0x00002917      bf01000000     mov edi, 1
0x0000291c      31c0           xor eax, eax
0x0000291e      e85df2ffff     call sym.imp.__printf_chk
0x00002923      488b1d5eb720.  mov rbx, qword [obj.stdout]             ; /src:358 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x0000292a      488d35377500.  lea rsi, str.Change_the_SELinux_security_context_of_each_FILE_to_CONTEXT.__With___reference__change_the_security_context_of_each_FILE_to_that_of_RFILE. ; 0x9e68 ; "Change the SELinux security context of each FILE to CONTEXT.\nWith --reference, change the security context of each FILE to that of RFILE.\n"
0x00002931      ba05000000     mov edx, 5
0x00002936      31ff           xor edi, edi
0x00002938      e803f0ffff     call sym.imp.dcgettext
0x0000293d      4889de         mov rsi, rbx
0x00002940      4889c7         mov rdi, rax
0x00002943      e838f1ffff     call sym.imp.fputs_unlocked
0x00002948      488b1d39b720.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/con.c:587 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x0000294f      488d35a27500.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x9ef8 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002956      ba05000000     mov edx, 5
0x0000295b      31ff           xor edi, edi
0x0000295d      e8deefffff     call sym.imp.dcgettext
0x00002962      4889de         mov rsi, rbx
0x00002965      4889c7         mov rdi, rax
0x00002968      e813f1ffff     call sym.imp.fputs_unlocked
0x0000296d      488b1d14b720.  mov rbx, qword [obj.stdout]             ; /src:365 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002974      488d35cd7500.  lea rsi, str.dereference______affect_the_referent_of_each_symbolic_link__this_is___________________________the_default___rather_than_the_symbolic_link_itself_____h____no_dereference___affect_symbolic_links_instead_of_any_referenced_file ; 0x9f48 ; "      --dereference      affect the referent of each symbolic link (this is\n                         the default), rather than the symbolic link itself\n  -h, --no-dereference   affect symbolic links instead of any referenced file\n"
0x0000297b      ba05000000     mov edx, 5
0x00002980      31ff           xor edi, edi
0x00002982      e8b9efffff     call sym.imp.dcgettext
0x00002987      4889de         mov rsi, rbx
0x0000298a      4889c7         mov rdi, rax
0x0000298d      e8eef0ffff     call sym.imp.fputs_unlocked
0x00002992      488b1defb620.  mov rbx, qword [obj.stdout]             ; /src:370 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002999      488d35907600.  lea rsi, str.u____user_USER________set_user_USER_in_the_target_security_context_____r____role_ROLE________set_role_ROLE_in_the_target_security_context_____t____type_TYPE________set_type_TYPE_in_the_target_security_context_____l____range_RANGE______set_range_RANGE_in_the_target_security_context ; 0xa030 ; "  -u, --user=USER        set user USER in the target security context\n  -r, --role=ROLE        set role ROLE in the target security context\n  -t, --type=TYPE        set type TYPE in the target security context\n  -l, --range=RANGE      set range RANGE in the target security context\n"
0x000029a0      ba05000000     mov edx, 5
0x000029a5      31ff           xor edi, edi
0x000029a7      e894efffff     call sym.imp.dcgettext
0x000029ac      4889de         mov rsi, rbx
0x000029af      4889c7         mov rdi, rax
0x000029b2      e8c9f0ffff     call sym.imp.fputs_unlocked
0x000029b7      488b1dcab620.  mov rbx, qword [obj.stdout]             ; /src:376 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x000029be      488d358b7700.  lea rsi, str.no_preserve_root__do_not_treat_____specially__the_default___________preserve_root____fail_to_operate_recursively_on ; 0xa150 ; "      --no-preserve-root  do not treat '/' specially (the default)\n      --preserve-root    fail to operate recursively on '/'\n"
0x000029c5      ba05000000     mov edx, 5
0x000029ca      31ff           xor edi, edi
0x000029cc      e86fefffff     call sym.imp.dcgettext
0x000029d1      4889de         mov rsi, rbx
0x000029d4      4889c7         mov rdi, rax
0x000029d7      e8a4f0ffff     call sym.imp.fputs_unlocked
0x000029dc      488b1da5b620.  mov rbx, qword [obj.stdout]             ; /src:380 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x000029e3      488d35e67700.  lea rsi, str.reference_RFILE__use_RFILE_s_security_context_rather_than_specifying___________________________a_CONTEXT_value ; 0xa1d0 ; "      --reference=RFILE  use RFILE's security context rather than specifying\n                         a CONTEXT value\n"
0x000029ea      ba05000000     mov edx, 5
0x000029ef      31ff           xor edi, edi
0x000029f1      e84aefffff     call sym.imp.dcgettext
0x000029f6      4889de         mov rsi, rbx
0x000029f9      4889c7         mov rdi, rax
0x000029fc      e87ff0ffff     call sym.imp.fputs_unlocked
0x00002a01      488b1d80b620.  mov rbx, qword [obj.stdout]             ; /src:384 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002a08      488d35397800.  lea rsi, str.R____recursive________operate_on_files_and_directories_recursively ; 0xa248 ; "  -R, --recursive        operate on files and directories recursively\n"
0x00002a0f      ba05000000     mov edx, 5
0x00002a14      31ff           xor edi, edi
0x00002a16      e825efffff     call sym.imp.dcgettext
0x00002a1b      4889de         mov rsi, rbx
0x00002a1e      4889c7         mov rdi, rax
0x00002a21      e85af0ffff     call sym.imp.fputs_unlocked
0x00002a26      488b1d5bb620.  mov rbx, qword [obj.stdout]             ; /src:387 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002a2d      488d355c7800.  lea rsi, str.v____verbose__________output_a_diagnostic_for_every_file_processed ; 0xa290 ; "  -v, --verbose          output a diagnostic for every file processed\n"
0x00002a34      ba05000000     mov edx, 5
0x00002a39      31ff           xor edi, edi
0x00002a3b      e800efffff     call sym.imp.dcgettext
0x00002a40      4889de         mov rsi, rbx
0x00002a43      4889c7         mov rdi, rax
0x00002a46      e835f0ffff     call sym.imp.fputs_unlocked
0x00002a4b      488b1d36b620.  mov rbx, qword [obj.stdout]             ; /src:390 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002a52      488d357f7800.  lea rsi, str.The_following_options_modify_how_a_hierarchy_is_traversed_when_the__R__option_is_also_specified.__If_more_than_one_is_specified__only_the_final__one_takes_effect._______H_____________________if_a_command_line_argument_is_a_symbolic_link___________________________to_a_directory__traverse_it_____L_____________________traverse_every_symbolic_link_to_a_directory___________________________encountered_____P_____________________do_not_traverse_any_symbolic_links__default ; 0xa2d8 ; "\nThe following options modify how a hierarchy is traversed when the -R\noption is also specified.  If more than one is specified, only the final\none takes effect.\n\n  -H                     if a command line argument is a symbolic link\n                         to a directory, traverse it\n  -L                     traverse every symbolic link to a directory\n                         encountered\n  -P                     do not traverse any symbolic links (default)\n\n"
0x00002a59      ba05000000     mov edx, 5
0x00002a5e      31ff           xor edi, edi
0x00002a60      e8dbeeffff     call sym.imp.dcgettext
0x00002a65      4889de         mov rsi, rbx
0x00002a68      4889c7         mov rdi, rax
0x00002a6b      e810f0ffff     call sym.imp.fputs_unlocked
0x00002a70      488b1d11b620.  mov rbx, qword [obj.stdout]             ; /src:403 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002a77      488d35327a00.  lea rsi, str.help_____display_this_help_and_exit ; 0xa4b0 ; "      --help     display this help and exit\n"
0x00002a7e      ba05000000     mov edx, 5
0x00002a83      31ff           xor edi, edi
0x00002a85      e8b6eeffff     call sym.imp.dcgettext
0x00002a8a      4889de         mov rsi, rbx
0x00002a8d      4889c7         mov rdi, rax
0x00002a90      e8ebefffff     call sym.imp.fputs_unlocked
0x00002a95      488b1decb520.  mov rbx, qword [obj.stdout]             ; /src:404 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002a9c      488d353d7a00.  lea rsi, str.version__output_version_information_and_exit ; 0xa4e0 ; "      --version  output version information and exit\n"
0x00002aa3      ba05000000     mov edx, 5
0x00002aa8      31ff           xor edi, edi
0x00002aaa      e891eeffff     call sym.imp.dcgettext
0x00002aaf      4889de         mov rsi, rbx
0x00002ab2      4889c7         mov rdi, rax
0x00002ab5      488d1d087100.  lea rbx, str.chcon                      ; 0x9bc4 ; "chcon"
0x00002abc      e8bfefffff     call sym.imp.fputs_unlocked
0x00002ac1      488d05027100.  lea rax, [0x00009bca]                   ; ../coreutils-8.31/src/con.c:633 ; "["
0x00002ac8      488d0d3c7100.  lea rcx, str.sha256sum                  ; 0x9c0b ; "sha256sum"
0x00002acf      48c744246000.  mov qword [rsp + 0x60], 0
0x00002ad8      48c744246800.  mov qword [rsp + 0x68], 0
0x00002ae1      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/con.c:644
0x00002ae4      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/con.c:633
0x00002ae8      488d05dd7000.  lea rax, str.test_invocation            ; 0x9bcc ; "test invocation"
0x00002aef      48894c2430     mov qword [rsp + 0x30], rcx
0x00002af4      488d0d1a7100.  lea rcx, str.sha384sum                  ; 0x9c15 ; "sha384sum"
0x00002afb      4889442408     mov qword [rsp + 8], rax
0x00002b00      488d053d7100.  lea rax, [0x00009c44]                   ; "coreutils"
0x00002b07      48894c2440     mov qword [rsp + 0x40], rcx
0x00002b0c      488d0d0c7100.  lea rcx, str.sha512sum                  ; 0x9c1f ; "sha512sum"
0x00002b13      4889442410     mov qword [rsp + 0x10], rax
0x00002b18      488d05bd7000.  lea rax, str.Multi_call_invocation      ; 0x9bdc ; "Multi-call invocation"
0x00002b1f      48894c2450     mov qword [rsp + 0x50], rcx
0x00002b24      4889442418     mov qword [rsp + 0x18], rax
0x00002b29      488d05c27000.  lea rax, str.sha224sum                  ; 0x9bf2 ; "sha224sum"
0x00002b30      4889442420     mov qword [rsp + 0x20], rax
0x00002b35      488d05c07000.  lea rax, str.sha2_utilities             ; 0x9bfc ; "sha2 utilities"
0x00002b3c      4889442428     mov qword [rsp + 0x28], rax
0x00002b41      4889442438     mov qword [rsp + 0x38], rax
0x00002b46      4889442448     mov qword [rsp + 0x48], rax
0x00002b4b      4889442458     mov qword [rsp + 0x58], rax
0x00002b50      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/con.c:647
0x00002b54      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/con.c:646
0x00002b57      4885ff         test rdi, rdi
0x00002b5a      7413           je 0x2b6f
0x00002b5c      b906000000     mov ecx, 6
0x00002b61      4889de         mov rsi, rbx
0x00002b64      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002b66      0f97c0         seta al
0x00002b69      1c00           sbb al, 0
0x00002b6b      84c0           test al, al
0x00002b6d      75e1           jne 0x2b50
0x00002b6f      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/con.c:649
0x00002b73      31ff           xor edi, edi                            ; ../coreutils-8.31/src/con.c:652
0x00002b75      ba05000000     mov edx, 5
0x00002b7a      488d35a87000.  lea rsi, str.s_online_help:___s         ; 0x9c29 ; "\n%s online help: <%s>\n"
0x00002b81      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/con.c:649
0x00002b84      0f84c1000000   je 0x2c4b
0x00002b8a      e8b1edffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/con.c:652
0x00002b8f      488d0d827900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0xa518 ; "https://www.gnu.org/software/coreutils/"
0x00002b96      488d15a37000.  lea rdx, str.GNU_coreutils              ; 0x9c40 ; "GNU coreutils"
0x00002b9d      4889c6         mov rsi, rax
0x00002ba0      bf01000000     mov edi, 1
0x00002ba5      31c0           xor eax, eax
0x00002ba7      e8d4efffff     call sym.imp.__printf_chk
0x00002bac      31f6           xor esi, esi                            ; ../coreutils-8.31/src/con.c:656
0x00002bae      bf05000000     mov edi, 5
0x00002bb3      e8b8efffff     call sym.imp.setlocale
0x00002bb8      4885c0         test rax, rax                           ; ../coreutils-8.31/src/con.c:657
0x00002bbb      741c           je 0x2bd9
0x00002bbd      488d358a7000.  lea rsi, [0x00009c4e]                   ; "en_"
0x00002bc4      ba03000000     mov edx, 3
0x00002bc9      4889c7         mov rdi, rax
0x00002bcc      e8dfecffff     call sym.imp.strncmp
0x00002bd1      85c0           test eax, eax
0x00002bd3      0f8507010000   jne 0x2ce0
0x00002bd9      488d35727000.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/con.c:666 ; 0x9c52 ; "Full documentation <%s%s>\n"
0x00002be0      31ff           xor edi, edi
0x00002be2      ba05000000     mov edx, 5
0x00002be7      e854edffff     call sym.imp.dcgettext
0x00002bec      488d0dd16f00.  lea rcx, str.chcon                      ; .//coreutils-8.31/lib:104 ; 0x9bc4 ; "chcon"
0x00002bf3      488d151e7900.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xa518 ; "https://www.gnu.org/software/coreutils/"
0x00002bfa      4889c6         mov rsi, rax
0x00002bfd      bf01000000     mov edi, 1
0x00002c02      31c0           xor eax, eax
0x00002c04      e877efffff     call sym.imp.__printf_chk
0x00002c09      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/con.c:668
0x00002c0c      488d0dd36f00.  lea rcx, [0x00009be6]                   ; " invocation"
0x00002c13      488d1de78100.  lea rbx, [0x0000ae01]
0x00002c1a      480f44d9       cmove rbx, rcx
0x00002c1e      488d35637900.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xa588 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002c25      31ff           xor edi, edi
0x00002c27      ba05000000     mov edx, 5
0x00002c2c      e80fedffff     call sym.imp.dcgettext
0x00002c31      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x00002c34      4889c6         mov rsi, rax
0x00002c37      4c89e2         mov rdx, r12
0x00002c3a      bf01000000     mov edi, 1
0x00002c3f      31c0           xor eax, eax
0x00002c41      e83aefffff     call sym.imp.__printf_chk
0x00002c46      e9abfcffff     jmp 0x28f6
0x00002c4b      e8f0ecffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/con.c:652
0x00002c50      488d0dc17800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0xa518 ; "https://www.gnu.org/software/coreutils/"
0x00002c57      488d15e26f00.  lea rdx, str.GNU_coreutils              ; 0x9c40 ; "GNU coreutils"
0x00002c5e      4889c6         mov rsi, rax
0x00002c61      bf01000000     mov edi, 1
0x00002c66      31c0           xor eax, eax
0x00002c68      e813efffff     call sym.imp.__printf_chk
0x00002c6d      31f6           xor esi, esi                            ; ../coreutils-8.31/src/con.c:656
0x00002c6f      bf05000000     mov edi, 5
0x00002c74      e8f7eeffff     call sym.imp.setlocale
0x00002c79      4885c0         test rax, rax                           ; ../coreutils-8.31/src/con.c:657
0x00002c7c      7418           je 0x2c96
0x00002c7e      488d35c96f00.  lea rsi, [0x00009c4e]                   ; "en_"
0x00002c85      ba03000000     mov edx, 3
0x00002c8a      4889c7         mov rdi, rax
0x00002c8d      e81eecffff     call sym.imp.strncmp
0x00002c92      85c0           test eax, eax
0x00002c94      7543           jne 0x2cd9
0x00002c96      488d35b56f00.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/con.c:666 ; 0x9c52 ; "Full documentation <%s%s>\n"
0x00002c9d      ba05000000     mov edx, 5
0x00002ca2      31ff           xor edi, edi
0x00002ca4      4c8d25196f00.  lea r12, str.chcon                      ; ../coreutils-8.31/src/con.c:643 ; 0x9bc4 ; "chcon"
0x00002cab      488d1d346f00.  lea rbx, [0x00009be6]                   ; ../coreutils-8.31/src/con.c:668 ; " invocation"
0x00002cb2      e889ecffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/con.c:666
0x00002cb7      488d0d066f00.  lea rcx, str.chcon                      ; .//coreutils-8.31/lib:104 ; 0x9bc4 ; "chcon"
0x00002cbe      488d15537800.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xa518 ; "https://www.gnu.org/software/coreutils/"
0x00002cc5      4889c6         mov rsi, rax
0x00002cc8      bf01000000     mov edi, 1
0x00002ccd      31c0           xor eax, eax
0x00002ccf      e8aceeffff     call sym.imp.__printf_chk
0x00002cd4      e945ffffff     jmp 0x2c1e
0x00002cd9      4c8d25e46e00.  lea r12, str.chcon                      ; ../coreutils-8.31/src/con.c:643 ; 0x9bc4 ; "chcon"
0x00002ce0      4c8b2da1b320.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/con.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002ce7      488d35527800.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xa540 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002cee      31ff           xor edi, edi
0x00002cf0      ba05000000     mov edx, 5
0x00002cf5      e846ecffff     call sym.imp.dcgettext
0x00002cfa      4c89ee         mov rsi, r13
0x00002cfd      4889c7         mov rdi, rax
0x00002d00      e87bedffff     call sym.imp.fputs_unlocked
0x00002d05      e9cffeffff     jmp 0x2bd9
0x00002d0a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00002d10      48893de9b320.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20e100:8]=0
0x00002d17      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002d18      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002d20      40883dd1b320.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20e0f8:1]=0
0x00002d27      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002d28      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002d30      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002d31      53             push rbx
0x00002d32      4883ec08       sub rsp, 8
0x00002d36      488b3d4bb320.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002d3d      e87e4d0000     call sym.close_stream
0x00002d42      85c0           test eax, eax
0x00002d44      7416           je 0x2d5c
0x00002d46      e855ebffff     call sym.imp.__errno_location
0x00002d4b      803da6b32000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20e0f8:1]=0
0x00002d52      4889c3         mov rbx, rax
0x00002d55      741c           je 0x2d73
0x00002d57      833820         cmp dword [rax], 0x20
0x00002d5a      7517           jne 0x2d73
0x00002d5c      488b3d5db320.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x00002d63      e8584d0000     call sym.close_stream
0x00002d68      85c0           test eax, eax
0x00002d6a      7546           jne 0x2db2
0x00002d6c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002d70      5b             pop rbx
0x00002d71      5d             pop rbp
0x00002d72      c3             ret
0x00002d73      488d35077b00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xa881 ; "write error"
0x00002d7a      31ff           xor edi, edi
0x00002d7c      ba05000000     mov edx, 5
0x00002d81      e8baebffff     call sym.imp.dcgettext
0x00002d86      488b3d73b320.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20e100:8]=0
0x00002d8d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002d90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002d93      7428           je 0x2dbd
0x00002d95      e8561b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002d9a      8b33           mov esi, dword [rbx]
0x00002d9c      488d15ea7a00.  lea rdx, str.s:__s                      ; 0xa88d ; "%s: %s"
0x00002da3      4889c1         mov rcx, rax
0x00002da6      4989e8         mov r8, rbp
0x00002da9      31ff           xor edi, edi
0x00002dab      31c0           xor eax, eax
0x00002dad      e8eeedffff     call sym.imp.error
0x00002db2      8b3d60b22000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20e018:4]=1
0x00002db8      e803ebffff     call sym.imp._exit
0x00002dbd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002dbf      488d15cb7a00.  lea rdx, [0x0000a891]                   ; "%s"
0x00002dc6      4889c1         mov rcx, rax
0x00002dc9      31ff           xor edi, edi
0x00002dcb      31c0           xor eax, eax
0x00002dcd      e8ceedffff     call sym.imp.error
0x00002dd2      ebde           jmp 0x2db2
0x00002dd4      662e0f1f8400.  nop word cs:[rax + rax]
0x00002dde      6690           nop
;-- set_program_name:
0x00002de0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002de3      53             push rbx
0x00002de4      7477           je 0x2e5d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002de6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002deb      4889fb         mov rbx, rdi
0x00002dee      e8edebffff     call sym.imp.strrchr
0x00002df3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002df6      7455           je 0x2e4d
0x00002df8      4c8d4001       lea r8, [rax + 1]
0x00002dfc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002dff      4829da         sub rdx, rbx
0x00002e02      4883fa06       cmp rdx, 6
0x00002e06      7e45           jle 0x2e4d
0x00002e08      488d70fa       lea rsi, [rax - 6]
0x00002e0c      488d3dbd7a00.  lea rdi, str..libs                      ; 0xa8d0 ; "/.libs/"
0x00002e13      b907000000     mov ecx, 7
0x00002e18      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002e1a      0f97c2         seta dl
0x00002e1d      80da00         sbb dl, 0
0x00002e20      84d2           test dl, dl
0x00002e22      7529           jne 0x2e4d
0x00002e24      488d3dad7a00.  lea rdi, [0x0000a8d8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002e2b      b903000000     mov ecx, 3
0x00002e30      4c89c6         mov rsi, r8
0x00002e33      4c89c3         mov rbx, r8
0x00002e36      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002e38      0f97c2         seta dl
0x00002e3b      80da00         sbb dl, 0
0x00002e3e      84d2           test dl, dl
0x00002e40      750b           jne 0x2e4d
0x00002e42      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002e46      48891d33b220.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20e080:8]=0
0x00002e4d      48891db4b220.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20e108:8]=0
0x00002e54      48891d45b220.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20e0a0:8]=0
0x00002e5b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002e5c      c3             ret
0x00002e5d      488b0d5cb220.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x00002e64      488d3d2d7a00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xa898 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002e6b      ba37000000     mov edx, 0x37                           ; '7'
0x00002e70      be01000000     mov esi, 1
0x00002e75      e8b6edffff     call sym.imp.fwrite
0x00002e7a      e811eaffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002e7f      90             nop
;-- gettext_quote.part.1:
0x00002e80      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002e81      53             push rbx
0x00002e82      4889fd         mov rbp, rdi
0x00002e85      89f3           mov ebx, esi
0x00002e87      4883ec08       sub rsp, 8
0x00002e8b      e8b0610000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002e90      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002e93      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002e96      80fa55         cmp dl, 0x55
0x00002e99      7475           je 0x2f10
0x00002e9b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002e9e      7420           je 0x2ec0
0x00002ea0      488d05447a00.  lea rax, str.l______l                   ; 0xa8eb ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002ea7      488d15ad8400.  lea rdx, [0x0000b35b]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x00002eae      83fb09         cmp ebx, 9
0x00002eb1      480f45c2       cmovne rax, rdx
0x00002eb5      4883c408       add rsp, 8
0x00002eb9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002eba      5d             pop rbp
0x00002ebb      c3             ret
0x00002ebc      0f1f4000       nop dword [rax]
0x00002ec0      0fb65001       movzx edx, byte [rax + 1]
0x00002ec4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002ec7      80fa42         cmp dl, 0x42
0x00002eca      75d4           jne 0x2ea0
0x00002ecc      80780231       cmp byte [rax + 2], 0x31
0x00002ed0      75ce           jne 0x2ea0
0x00002ed2      80780338       cmp byte [rax + 3], 0x38
0x00002ed6      75c8           jne 0x2ea0
0x00002ed8      80780430       cmp byte [rax + 4], 0x30
0x00002edc      75c2           jne 0x2ea0
0x00002ede      80780533       cmp byte [rax + 5], 0x33
0x00002ee2      75bc           jne 0x2ea0
0x00002ee4      80780630       cmp byte [rax + 6], 0x30
0x00002ee8      75b6           jne 0x2ea0
0x00002eea      80780700       cmp byte [rax + 7], 0
0x00002eee      75b0           jne 0x2ea0
0x00002ef0      807d0060       cmp byte [rbp], 0x60
0x00002ef4      488d05e97900.  lea rax, [0x0000a8e4]
0x00002efb      488d15e67900.  lea rdx, [0x0000a8e8]
0x00002f02      480f45c2       cmovne rax, rdx
0x00002f06      4883c408       add rsp, 8
0x00002f0a      5b             pop rbx
0x00002f0b      5d             pop rbp
0x00002f0c      c3             ret
0x00002f0d      0f1f00         nop dword [rax]
0x00002f10      0fb65001       movzx edx, byte [rax + 1]
0x00002f14      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002f17      80fa54         cmp dl, 0x54
0x00002f1a      7584           jne 0x2ea0
0x00002f1c      0fb65002       movzx edx, byte [rax + 2]
0x00002f20      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002f23      80fa46         cmp dl, 0x46
0x00002f26      0f8574ffffff   jne 0x2ea0
0x00002f2c      8078032d       cmp byte [rax + 3], 0x2d
0x00002f30      0f856affffff   jne 0x2ea0
0x00002f36      80780438       cmp byte [rax + 4], 0x38
0x00002f3a      0f8560ffffff   jne 0x2ea0
0x00002f40      80780500       cmp byte [rax + 5], 0
0x00002f44      0f8556ffffff   jne 0x2ea0
0x00002f4a      807d0060       cmp byte [rbp], 0x60
0x00002f4e      488d05877900.  lea rax, [0x0000a8dc]                   ; "\u2018"
0x00002f55      488d15847900.  lea rdx, [0x0000a8e0]                   ; "\u2019"
0x00002f5c      480f45c2       cmovne rax, rdx
0x00002f60      4883c408       add rsp, 8
0x00002f64      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002f65      5d             pop rbp
0x00002f66      c3             ret
0x00002f67      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002f70      4157           push r15
0x00002f72      4156           push r14
0x00002f74      4589c7         mov r15d, r8d
0x00002f77      4155           push r13
0x00002f79      4154           push r12
0x00002f7b      4989fe         mov r14, rdi
0x00002f7e      55             push rbp
0x00002f7f      53             push rbx
0x00002f80      4489cb         mov ebx, r9d
0x00002f83      4989f5         mov r13, rsi
0x00002f86      4889cd         mov rbp, rcx
0x00002f89      83e302         and ebx, 2
0x00002f8c      4881ecb80000.  sub rsp, 0xb8
0x00002f93      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002f9b      4889542410     mov qword [rsp + 0x10], rdx
0x00002fa0      4489442408     mov dword [rsp + 8], r8d
0x00002fa5      44894c2478     mov dword [rsp + 0x78], r9d
0x00002faa      4889442420     mov qword [rsp + 0x20], rax
0x00002faf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002fb7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002fbc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002fc4      4889442460     mov qword [rsp + 0x60], rax
0x00002fc9      64488b042528.  mov rax, qword fs:[0x28]
0x00002fd2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002fda      31c0           xor eax, eax
0x00002fdc      e86fe9ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002fe1      4183ff0a       cmp r15d, 0xa
0x00002fe5      4889442458     mov qword [rsp + 0x58], rax
0x00002fea      0f87af110000   ja 0x419f
0x00002ff0      488d0d497900.  lea rcx, [0x0000a940]
0x00002ff7      4489fa         mov edx, r15d
0x00002ffa      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002ffe      4801c8         add rax, rcx
0x00003001      ffe0           jmp rax
0x00003003      c644240e01     mov byte [rsp + 0xe], 1
0x00003008      c644247c00     mov byte [rsp + 0x7c], 0
0x0000300d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003010      48c744245000.  mov qword [rsp + 0x50], 0
0x00003019      c644240f01     mov byte [rsp + 0xf], 1
0x0000301e      c644240d00     mov byte [rsp + 0xd], 0
0x00003023      488d05318300.  lea rax, [0x0000b35b]                   ; "'"
0x0000302a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003033      4531ff         xor r15d, r15d
0x00003036      c74424080200.  mov dword [rsp + 8], 2
0x0000303e      4889442448     mov qword [rsp + 0x48], rax
0x00003043      4531db         xor r11d, r11d
0x00003046      4889e8         mov rax, rbp
0x00003049      4589e0         mov r8d, r12d
0x0000304c      4c89dd         mov rbp, r11
0x0000304f      4989c3         mov r11, rax
0x00003052      660f1f440000   nop word [rax + rax]
0x00003058      4939eb         cmp r11, rbp
0x0000305b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000305f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003063      750d           jne 0x3072
0x00003065      488b442410     mov rax, qword [rsp + 0x10]
0x0000306a      803c2800       cmp byte [rax + rbp], 0
0x0000306e      410f95c4       setne r12b
0x00003072      4584e4         test r12b, r12b
0x00003075      0f8455060000   je 0x36d0
0x0000307b      837c240802     cmp dword [rsp + 8], 2
0x00003080      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003085      4c8d0c2f       lea r9, [rdi + rbp]
0x00003089      0f95c0         setne al
0x0000308c      2244240d       and al, byte [rsp + 0xd]
0x00003090      4189c2         mov r10d, eax
0x00003093      0f84a7000000   je 0x3140
0x00003099      488b442418     mov rax, qword [rsp + 0x18]
0x0000309e      4885c0         test rax, rax
0x000030a1      0f8429040000   je 0x34d0
0x000030a7      4983fbff       cmp r11, 0xffffffffffffffff
0x000030ab      488d5c0500     lea rbx, [rbp + rax]
0x000030b0      752e           jne 0x30e0
0x000030b2      4883f801       cmp rax, 1
0x000030b6      7628           jbe 0x30e0
0x000030b8      4488442438     mov byte [rsp + 0x38], r8b
0x000030bd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000030c2      4c894c2428     mov qword [rsp + 0x28], r9
0x000030c7      e894e8ffff     call sym.imp.strlen
0x000030cc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000030d2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000030d8      4989c3         mov r11, rax
0x000030db      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000030e0      4c39db         cmp rbx, r11
0x000030e3      4488542428     mov byte [rsp + 0x28], r10b
0x000030e8      0f87b2050000   ja 0x36a0
0x000030ee      488b542418     mov rdx, qword [rsp + 0x18]
0x000030f3      488b742448     mov rsi, qword [rsp + 0x48]
0x000030f8      4c89cf         mov rdi, r9
0x000030fb      4c895c2440     mov qword [rsp + 0x40], r11
0x00003100      4488442438     mov byte [rsp + 0x38], r8b
0x00003105      4c894c2430     mov qword [rsp + 0x30], r9
0x0000310a      e861e9ffff     call sym.imp.memcmp
0x0000310f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003111      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003116      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000311c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003121      0f8579050000   jne 0x36a0
0x00003127      807c240f00     cmp byte [rsp + 0xf], 0
0x0000312c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003132      0f857d0f0000   jne 0x40b5
0x00003138      0f1f84000000.  nop dword [rax + rax]
0x00003140      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003144      80fb7e         cmp bl, 0x7e
0x00003147      0f871b030000   ja 0x3468
0x0000314d      488d0d187800.  lea rcx, [0x0000a96c]
0x00003154      0fb6d3         movzx edx, bl
0x00003157      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000315b      4801c8         add rax, rcx
0x0000315e      ffe0           jmp rax
0x00003160      4531d2         xor r10d, r10d
0x00003163      4983fb01       cmp r11, 1
0x00003167      0f95c0         setne al
0x0000316a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000316e      750c           jne 0x317c
0x00003170      488b442410     mov rax, qword [rsp + 0x10]
0x00003175      80780100       cmp byte [rax + 1], 0
0x00003179      0f95c0         setne al
0x0000317c      837c240802     cmp dword [rsp + 8], 2
0x00003181      0f94c2         sete dl
0x00003184      84c0           test al, al
0x00003186      0f844c020000   je 0x33d8
0x0000318c      4531e4         xor r12d, r12d
0x0000318f      31c0           xor eax, eax
0x00003191      0f1f80000000.  nop dword [rax]
0x00003198      807c240d01     cmp byte [rsp + 0xd], 1
0x0000319d      0f850f010000   jne 0x32b2
0x000031a3      84d2           test dl, dl
0x000031a5      0f8507010000   jne 0x32b2
0x000031ab      488b742420     mov rsi, qword [rsp + 0x20]
0x000031b0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000031b3      7414           je 0x31c9
0x000031b5      89da           mov edx, ebx
0x000031b7      c0ea05         shr dl, 5
0x000031ba      0fb6d2         movzx edx, dl
0x000031bd      8b1496         mov edx, dword [rsi + rdx*4]
0x000031c0      0fa3da         bt edx, ebx
0x000031c3      0f824a010000   jb 0x3313
0x000031c9      4584d2         test r10b, r10b
0x000031cc      0f8541010000   jne 0x3313
0x000031d2      83f001         xor eax, 1
0x000031d5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000031d9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000031dc      84c0           test al, al
0x000031de      7420           je 0x3200                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000031e0      4d39fd         cmp r13, r15
0x000031e3      7605           jbe 0x31ea
0x000031e5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000031ea      498d4701       lea rax, [r15 + 1]
0x000031ee      4939c5         cmp r13, rax
0x000031f1      7606           jbe 0x31f9
0x000031f3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000031f9      4983c702       add r15, 2
0x000031fd      4531c0         xor r8d, r8d
0x00003200      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003203      7304           jae 0x3209                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003205      43881c3e       mov byte [r14 + r15], bl
0x00003209      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000320e      4983c701       add r15, 1
0x00003212      b800000000     mov eax, 0
0x00003217      4584e4         test r12b, r12b
0x0000321a      0f44f8         cmove edi, eax
0x0000321d      40887c240e     mov byte [rsp + 0xe], dil
0x00003222      e931feffff     jmp 0x3058
0x00003227      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003230      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003233      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003237      83f802         cmp eax, 2
0x0000323a      0f84b8050000   je 0x37f8
0x00003240      83f805         cmp eax, 5
0x00003243      0f846f050000   je 0x37b8
0x00003249      83f802         cmp eax, 2
0x0000324c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003251      0f94c2         sete dl
0x00003254      4531e4         xor r12d, r12d
0x00003257      31c0           xor eax, eax
0x00003259      e93affffff     jmp 0x3198
0x0000325e      6690           nop
0x00003260      4531d2         xor r10d, r10d
0x00003263      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003268      0f8402050000   je 0x3770
0x0000326e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003273      31d2           xor edx, edx
0x00003275      31c0           xor eax, eax
0x00003277      bb27000000     mov ebx, 0x27                           ; '''
0x0000327c      e917ffffff     jmp 0x3198
0x00003281      0f1f80000000.  nop dword [rax]
0x00003288      ba09000000     mov edx, 9
0x0000328d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003292      837c240802     cmp dword [rsp + 8], 2
0x00003297      0f94c0         sete al
0x0000329a      2244240f       and al, byte [rsp + 0xf]
0x0000329e      0f854a010000   jne 0x33ee
0x000032a4      807c240d00     cmp byte [rsp + 0xd], 0
0x000032a9      7565           jne 0x3310
0x000032ab      89d3           mov ebx, edx
0x000032ad      4531e4         xor r12d, r12d
0x000032b0      31c0           xor eax, eax
0x000032b2      807c240f00     cmp byte [rsp + 0xf], 0
0x000032b7      0f85eefeffff   jne 0x31ab
0x000032bd      e907ffffff     jmp 0x31c9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000032c2      660f1f440000   nop word [rax + rax]
0x000032c8      ba08000000     mov edx, 8
0x000032cd      bb62000000     mov ebx, 0x62                           ; 'b'
0x000032d2      ebd0           jmp 0x32a4
0x000032d4      0f1f4000       nop dword [rax]
0x000032d8      837c240802     cmp dword [rsp + 8], 2
0x000032dd      0f84cd030000   je 0x36b0
0x000032e3      807c240d00     cmp byte [rsp + 0xd], 0
0x000032e8      0f8412020000   je 0x3500
0x000032ee      807c240f00     cmp byte [rsp + 0xf], 0
0x000032f3      0f8407020000   je 0x3500
0x000032f9      48837c241800   cmp qword [rsp + 0x18], 0
0x000032ff      0f85b6030000   jne 0x36bb
0x00003305      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000330a      660f1f440000   nop word [rax + rax]
0x00003310      4531e4         xor r12d, r12d
0x00003313      837c240802     cmp dword [rsp + 8], 2
0x00003318      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000331b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003320      89d0           mov eax, edx
0x00003322      0f8550080000   jne 0x3b78
0x00003328      4489c0         mov eax, r8d
0x0000332b      83f001         xor eax, 1
0x0000332e      20d0           and al, dl
0x00003330      742f           je 0x3361
0x00003332      4d39fd         cmp r13, r15
0x00003335      7605           jbe 0x333c
0x00003337      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000333c      498d5701       lea rdx, [r15 + 1]
0x00003340      4939d5         cmp r13, rdx
0x00003343      7606           jbe 0x334b
0x00003345      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000334b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000334f      4939d5         cmp r13, rdx
0x00003352      7606           jbe 0x335a
0x00003354      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000335a      4983c703       add r15, 3
0x0000335e      4189c0         mov r8d, eax
0x00003361      4d39fd         cmp r13, r15
0x00003364      7605           jbe 0x336b
0x00003366      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000336b      4983c701       add r15, 1
0x0000336f      4883c501       add rbp, 1
0x00003373      e988feffff     jmp 0x3200
0x00003378      0f1f84000000.  nop dword [rax + rax]
0x00003380      807c240d00     cmp byte [rsp + 0xd], 0
0x00003385      0f85c8010000   jne 0x3553
0x0000338b      31d2           xor edx, edx
0x0000338d      f644247801     test byte [rsp + 0x78], 1
0x00003392      0f8413ffffff   je 0x32ab
0x00003398      4883c501       add rbp, 1
0x0000339c      e9b7fcffff     jmp 0x3058
0x000033a1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000033a8      837c240802     cmp dword [rsp + 8], 2
0x000033ad      0f94c2         sete dl
0x000033b0      31c0           xor eax, eax
0x000033b2      e9e1fdffff     jmp 0x3198
0x000033b7      660f1f840000.  nop word [rax + rax]
0x000033c0      ba07000000     mov edx, 7
0x000033c5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000033ca      e9d5feffff     jmp 0x32a4
0x000033cf      90             nop
0x000033d0      837c240802     cmp dword [rsp + 8], 2
0x000033d5      0f94c2         sete dl
0x000033d8      4885ed         test rbp, rbp
0x000033db      0f85abfdffff   jne 0x318c
0x000033e1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000033e6      20d0           and al, dl
0x000033e8      0f84aafdffff   je 0x3198
0x000033ee      4c89dd         mov rbp, r11
0x000033f1      c74424080200.  mov dword [rsp + 8], 2
0x000033f9      e9fb060000     jmp 0x3af9
0x000033fe      6690           nop
0x00003400      837c240802     cmp dword [rsp + 8], 2
0x00003405      0f94c2         sete dl
0x00003408      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000340b      ebd4           jmp 0x33e1
0x0000340d      0f1f00         nop dword [rax]
0x00003410      837c240802     cmp dword [rsp + 8], 2
0x00003415      bb20000000     mov ebx, 0x20                           ; "@"
0x0000341a      0f94c2         sete dl
0x0000341d      ebc2           jmp 0x33e1
0x0000341f      90             nop
0x00003420      ba0d000000     mov edx, 0xd
0x00003425      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000342a      e963feffff     jmp 0x3292
0x0000342f      90             nop
0x00003430      ba0c000000     mov edx, 0xc
0x00003435      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000343a      e965feffff     jmp 0x32a4
0x0000343f      90             nop
0x00003440      ba0b000000     mov edx, 0xb
0x00003445      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000344a      e955feffff     jmp 0x32a4
0x0000344f      90             nop
0x00003450      ba0a000000     mov edx, 0xa
0x00003455      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000345a      e933feffff     jmp 0x3292
0x0000345f      90             nop
0x00003460      4531d2         xor r10d, r10d
0x00003463      0f1f440000     nop dword [rax + rax]
0x00003468      48837c245801   cmp qword [rsp + 0x58], 1
0x0000346e      0f85a4030000   jne 0x3818
0x00003474      4c895c2438     mov qword [rsp + 0x38], r11
0x00003479      4488442430     mov byte [rsp + 0x30], r8b
0x0000347e      4488542428     mov byte [rsp + 0x28], r10b
0x00003483      e8e8e7ffff     call sym.imp.__ctype_b_loc
0x00003488      488b08         mov rcx, qword [rax]
0x0000348b      0fb6d3         movzx edx, bl
0x0000348e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003494      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000349a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000349f      bf01000000     mov edi, 1
0x000034a4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000034a8      66250040       and ax, 0x4000
0x000034ac      410f95c4       setne r12b
0x000034b0      0f94c0         sete al
0x000034b3      2244240d       and al, byte [rsp + 0xd]
0x000034b7      84c0           test al, al
0x000034b9      0f8592090000   jne 0x3e51
0x000034bf      837c240802     cmp dword [rsp + 8], 2
0x000034c4      0f94c2         sete dl
0x000034c7      e9ccfcffff     jmp 0x3198
0x000034cc      0f1f4000       nop dword [rax]
0x000034d0      410fb619       movzx ebx, byte [r9]
0x000034d4      80fb7e         cmp bl, 0x7e
0x000034d7      7787           ja 0x3460
0x000034d9      488d0d887600.  lea rcx, [0x0000ab68]
0x000034e0      0fb6d3         movzx edx, bl
0x000034e3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000034e7      4801c8         add rax, rcx
0x000034ea      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000034ec      0f1f4000       nop dword [rax]
0x000034f0      4531d2         xor r10d, r10d
0x000034f3      807c240d00     cmp byte [rsp + 0xd], 0
0x000034f8      0f85f0fdffff   jne 0x32ee
0x000034fe      6690           nop
0x00003500      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003505      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000350a      e995fdffff     jmp 0x32a4
0x0000350f      90             nop
0x00003510      ba0c000000     mov edx, 0xc
0x00003515      4531d2         xor r10d, r10d
0x00003518      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000351d      e982fdffff     jmp 0x32a4
0x00003522      660f1f440000   nop word [rax + rax]
0x00003528      ba0a000000     mov edx, 0xa
0x0000352d      4531d2         xor r10d, r10d
0x00003530      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003535      e958fdffff     jmp 0x3292
0x0000353a      660f1f440000   nop word [rax + rax]
0x00003540      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003545      e9c6fdffff     jmp 0x3310
0x0000354a      660f1f440000   nop word [rax + rax]
0x00003550      4531d2         xor r10d, r10d
0x00003553      837c240802     cmp dword [rsp + 8], 2
0x00003558      0f94c2         sete dl
0x0000355b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003560      0f85940b0000   jne 0x40fa
0x00003566      4489c0         mov eax, r8d
0x00003569      4c89f9         mov rcx, r15
0x0000356c      83f001         xor eax, 1
0x0000356f      20d0           and al, dl
0x00003571      742d           je 0x35a0
0x00003573      4d39fd         cmp r13, r15
0x00003576      7605           jbe 0x357d
0x00003578      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000357d      498d4f01       lea rcx, [r15 + 1]
0x00003581      4939cd         cmp r13, rcx
0x00003584      7606           jbe 0x358c
0x00003586      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000358c      498d4f02       lea rcx, [r15 + 2]
0x00003590      4939cd         cmp r13, rcx
0x00003593      0f8730060000   ja 0x3bc9
0x00003599      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000359d      4189c0         mov r8d, eax
0x000035a0      4939cd         cmp r13, rcx
0x000035a3      7605           jbe 0x35aa
0x000035a5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000035aa      837c240802     cmp dword [rsp + 8], 2
0x000035af      4c8d7901       lea r15, [rcx + 1]
0x000035b3      0f8400060000   je 0x3bb9
0x000035b9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000035bd      4c39d8         cmp rax, r11
0x000035c0      7319           jae 0x35db                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000035c2      488b442410     mov rax, qword [rsp + 0x10]
0x000035c7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000035cc      88442428       mov byte [rsp + 0x28], al
0x000035d0      83e830         sub eax, 0x30
0x000035d3      3c09           cmp al, 9
0x000035d5      0f862e080000   jbe 0x3e09
0x000035db      4489e0         mov eax, r12d
0x000035de      bb30000000     mov ebx, 0x30                           ; '0'
0x000035e3      4531e4         xor r12d, r12d
0x000035e6      e9adfbffff     jmp 0x3198                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000035eb      0f1f440000     nop dword [rax + rax]
0x000035f0      837c240802     cmp dword [rsp + 8], 2
0x000035f5      4589d4         mov r12d, r10d
0x000035f8      0f94c2         sete dl
0x000035fb      4531d2         xor r10d, r10d
0x000035fe      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003600      e993fbffff     jmp 0x3198                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003605      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003608      837c240802     cmp dword [rsp + 8], 2
0x0000360d      0f94c2         sete dl
0x00003610      4531d2         xor r10d, r10d
0x00003613      e9c0fdffff     jmp 0x33d8
0x00003618      0f1f84000000.  nop dword [rax + rax]
0x00003620      837c240802     cmp dword [rsp + 8], 2
0x00003625      0f94c2         sete dl
0x00003628      4531d2         xor r10d, r10d
0x0000362b      4531e4         xor r12d, r12d
0x0000362e      e9aefdffff     jmp 0x33e1
0x00003633      0f1f440000     nop dword [rax + rax]
0x00003638      837c240802     cmp dword [rsp + 8], 2
0x0000363d      4589d4         mov r12d, r10d
0x00003640      bb20000000     mov ebx, 0x20                           ; "@"
0x00003645      0f94c2         sete dl
0x00003648      4531d2         xor r10d, r10d
0x0000364b      e991fdffff     jmp 0x33e1
0x00003650      ba0d000000     mov edx, 0xd
0x00003655      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003658      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000365d      e930fcffff     jmp 0x3292
0x00003662      660f1f440000   nop word [rax + rax]
0x00003668      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000366d      e99efcffff     jmp 0x3310
0x00003672      660f1f440000   nop word [rax + rax]
0x00003678      ba09000000     mov edx, 9
0x0000367d      4531d2         xor r10d, r10d
0x00003680      bb74000000     mov ebx, 0x74                           ; 't'
0x00003685      e908fcffff     jmp 0x3292
0x0000368a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003690      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003695      e976fcffff     jmp 0x3310
0x0000369a      660f1f440000   nop word [rax + rax]
0x000036a0      4531d2         xor r10d, r10d
0x000036a3      e998faffff     jmp 0x3140
0x000036a8      0f1f84000000.  nop dword [rax + rax]
0x000036b0      807c240f00     cmp byte [rsp + 0xf], 0
0x000036b5      0f8565090000   jne 0x4020
0x000036bb      4883c501       add rbp, 1
0x000036bf      4489c0         mov eax, r8d
0x000036c2      4531e4         xor r12d, r12d
0x000036c5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000036ca      e90dfbffff     jmp 0x31dc
0x000036cf      90             nop
0x000036d0      837c240802     cmp dword [rsp + 8], 2
0x000036d5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000036da      4589c4         mov r12d, r8d
0x000036dd      4c89dd         mov rbp, r11
0x000036e0      0f94c2         sete dl
0x000036e3      89d8           mov eax, ebx
0x000036e5      4d85ff         test r15, r15
0x000036e8      0f94c1         sete cl
0x000036eb      21d0           and eax, edx
0x000036ed      20c8           and al, cl
0x000036ef      0f85610a0000   jne 0x4156                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000036f5      89d8           mov eax, ebx
0x000036f7      83f001         xor eax, 1
0x000036fa      20c2           and dl, al
0x000036fc      0f846a090000   je 0x406c
0x00003702      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003707      0f845d090000   je 0x406a
0x0000370d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003712      0f85f5090000   jne 0x410d
0x00003718      4d85ed         test r13, r13
0x0000371b      0f94c0         sete al
0x0000371e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003724      0f95c2         setne dl
0x00003727      20d0           and al, dl
0x00003729      0f841d0a0000   je 0x414c
0x0000372f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003734      488d1d207c00.  lea rbx, [0x0000b35b]                   ; "'"
0x0000373b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000373f      c74424080200.  mov dword [rsp + 8], 2
0x00003747      41bf01000000   mov r15d, 1
0x0000374d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003756      c644240f00     mov byte [rsp + 0xf], 0
0x0000375b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003760      8844247c       mov byte [rsp + 0x7c], al
0x00003764      e9daf8ffff     jmp 0x3043
0x00003769      0f1f80000000.  nop dword [rax]
0x00003770      807c240f00     cmp byte [rsp + 0xf], 0
0x00003775      0f85a5080000   jne 0x4020
0x0000377b      4d85ed         test r13, r13
0x0000377e      0f84fc030000   je 0x3b80                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003784      31d2           xor edx, edx
0x00003786      48837c245000   cmp qword [rsp + 0x50], 0
0x0000378c      0f85ee030000   jne 0x3b80                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003792      4c896c2450     mov qword [rsp + 0x50], r13
0x00003797      4983c703       add r15, 3
0x0000379b      31c0           xor eax, eax
0x0000379d      448864247c     mov byte [rsp + 0x7c], r12b
0x000037a2      4531c0         xor r8d, r8d
0x000037a5      4989d5         mov r13, rdx
0x000037a8      bb27000000     mov ebx, 0x27                           ; '''
0x000037ad      e917faffff     jmp 0x31c9
0x000037b2      660f1f440000   nop word [rax + rax]
0x000037b8      f644247804     test byte [rsp + 0x78], 4
0x000037bd      7421           je 0x37e0
0x000037bf      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000037c3      4c39d9         cmp rcx, r11
0x000037c6      7318           jae 0x37e0
0x000037c8      488b442410     mov rax, qword [rsp + 0x10]
0x000037cd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000037d2      0f848a070000   je 0x3f62
0x000037d8      0f1f84000000.  nop dword [rax + rax]
0x000037e0      31d2           xor edx, edx
0x000037e2      4531e4         xor r12d, r12d
0x000037e5      31c0           xor eax, eax
0x000037e7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000037ec      e9a7f9ffff     jmp 0x3198
0x000037f1      0f1f80000000.  nop dword [rax]
0x000037f8      807c240f00     cmp byte [rsp + 0xf], 0
0x000037fd      0f851d080000   jne 0x4020
0x00003803      4531e4         xor r12d, r12d
0x00003806      31c0           xor eax, eax
0x00003808      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000380d      e9b7f9ffff     jmp 0x31c9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003812      660f1f440000   nop word [rax + rax]
0x00003818      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003820      4983fbff       cmp r11, 0xffffffffffffffff
0x00003824      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003830      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003835      752d           jne 0x3864
0x00003837      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000383c      4488442440     mov byte [rsp + 0x40], r8b
0x00003841      4488542438     mov byte [rsp + 0x38], r10b
0x00003846      4c894c2430     mov qword [rsp + 0x30], r9
0x0000384b      e810e1ffff     call sym.imp.strlen
0x00003850      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003856      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000385c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000385f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003864      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000386c      31c9           xor ecx, ecx
0x0000386e      885c247e       mov byte [rsp + 0x7e], bl
0x00003872      448844247d     mov byte [rsp + 0x7d], r8b
0x00003877      4889cb         mov rbx, rcx
0x0000387a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003882      4889442438     mov qword [rsp + 0x38], rax
0x00003887      448854247f     mov byte [rsp + 0x7f], r10b
0x0000388c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003894      4c89742440     mov qword [rsp + 0x40], r14
0x00003899      4c896c2470     mov qword [rsp + 0x70], r13
0x0000389e      4c895c2430     mov qword [rsp + 0x30], r11
0x000038a3      488b442410     mov rax, qword [rsp + 0x10]
0x000038a8      4c8d741d00     lea r14, [rbp + rbx]
0x000038ad      488b542430     mov rdx, qword [rsp + 0x30]
0x000038b2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000038b7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000038bc      4e8d2c30       lea r13, [rax + r14]
0x000038c0      4c29f2         sub rdx, r14
0x000038c3      4c89ee         mov rsi, r13
0x000038c6      e815400000     call sym.rpl_mbrtowc
0x000038cb      4885c0         test rax, rax
0x000038ce      4989c7         mov r15, rax
0x000038d1      744e           je 0x3921
0x000038d3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000038d7      0f8418060000   je 0x3ef5
0x000038dd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000038e1      0f849a050000   je 0x3e81
0x000038e7      837c240802     cmp dword [rsp + 8], 2
0x000038ec      0f94c0         sete al
0x000038ef      2244240f       and al, byte [rsp + 0xf]
0x000038f3      0f8597010000   jne 0x3a90
0x000038f9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003900      e85be3ffff     call sym.imp.iswprint
0x00003905      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000390a      85c0           test eax, eax
0x0000390c      b800000000     mov eax, 0
0x00003911      440f44e0       cmove r12d, eax
0x00003915      4c01fb         add rbx, r15
0x00003918      e833e3ffff     call sym.imp.mbsinit
0x0000391d      85c0           test eax, eax
0x0000391f      7482           je 0x38a3
0x00003921      4489e2         mov edx, r12d
0x00003924      4889df         mov rdi, rbx
0x00003927      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000392d      83f201         xor edx, 1
0x00003930      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003935      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000393b      2254240d       and dl, byte [rsp + 0xd]
0x0000393f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003947      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000394c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003951      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003956      4883ff01       cmp rdi, 1
0x0000395a      0f86fb050000   jbe 0x3f5b
0x00003960      4889f9         mov rcx, rdi
0x00003963      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003965      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000396b      4801e9         add rcx, rbp
0x0000396e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003973      e9b6000000     jmp 0x3a2e
0x00003978      0f1f84000000.  nop dword [rax + rax]
0x00003980      837c240802     cmp dword [rsp + 8], 2
0x00003985      0f94c0         sete al
0x00003988      4584c9         test r9b, r9b
0x0000398b      0f85af040000   jne 0x3e40
0x00003991      4489c6         mov esi, r8d
0x00003994      83f601         xor esi, 1
0x00003997      4020f0         and al, sil
0x0000399a      742f           je 0x39cb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000399c      4d39fd         cmp r13, r15
0x0000399f      7605           jbe 0x39a6
0x000039a1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000039a6      498d7701       lea rsi, [r15 + 1]
0x000039aa      4939f5         cmp r13, rsi
0x000039ad      7606           jbe 0x39b5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000039af      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000039b5      498d7702       lea rsi, [r15 + 2]
0x000039b9      4939f5         cmp r13, rsi
0x000039bc      7606           jbe 0x39c4
0x000039be      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000039c4      4983c703       add r15, 3
0x000039c8      4189c0         mov r8d, eax
0x000039cb      4d39fd         cmp r13, r15
0x000039ce      7605           jbe 0x39d5
0x000039d0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000039d5      498d4701       lea rax, [r15 + 1]
0x000039d9      4939c5         cmp r13, rax
0x000039dc      760d           jbe 0x39eb
0x000039de      89d8           mov eax, ebx
0x000039e0      c0e806         shr al, 6
0x000039e3      83c030         add eax, 0x30
0x000039e6      4388443e01     mov byte [r14 + r15 + 1], al
0x000039eb      498d4702       lea rax, [r15 + 2]
0x000039ef      4939c5         cmp r13, rax
0x000039f2      7610           jbe 0x3a04
0x000039f4      89d8           mov eax, ebx
0x000039f6      c0e803         shr al, 3
0x000039f9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000039fc      83c030         add eax, 0x30
0x000039ff      4388443e02     mov byte [r14 + r15 + 2], al
0x00003a04      83e307         and ebx, 7
0x00003a07      4883c501       add rbp, 1
0x00003a0b      4983c703       add r15, 3
0x00003a0f      83c330         add ebx, 0x30
0x00003a12      4839cd         cmp rbp, rcx
0x00003a15      0f83e5f7ffff   jae 0x3200
0x00003a1b      89d6           mov esi, edx
0x00003a1d      4d39fd         cmp r13, r15
0x00003a20      7604           jbe 0x3a26
0x00003a22      43881c3e       mov byte [r14 + r15], bl
0x00003a26      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003a2a      4983c701       add r15, 1
0x00003a2e      84d2           test dl, dl
0x00003a30      0f854affffff   jne 0x3980
0x00003a36      89f0           mov eax, esi
0x00003a38      83f001         xor eax, 1
0x00003a3b      4421c0         and eax, r8d
0x00003a3e      4584d2         test r10b, r10b
0x00003a41      740e           je 0x3a51
0x00003a43      4d39fd         cmp r13, r15
0x00003a46      7605           jbe 0x3a4d
0x00003a48      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003a4d      4983c701       add r15, 1
0x00003a51      4883c501       add rbp, 1
0x00003a55      4839cd         cmp rbp, rcx
0x00003a58      0f837ef7ffff   jae 0x31dc
0x00003a5e      84c0           test al, al
0x00003a60      0f84f8030000   je 0x3e5e
0x00003a66      4d39fd         cmp r13, r15
0x00003a69      7605           jbe 0x3a70
0x00003a6b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003a70      498d4701       lea rax, [r15 + 1]
0x00003a74      4939c5         cmp r13, rax
0x00003a77      7606           jbe 0x3a7f
0x00003a79      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003a7f      4983c702       add r15, 2
0x00003a83      4531d2         xor r10d, r10d
0x00003a86      4531c0         xor r8d, r8d
0x00003a89      eb92           jmp 0x3a1d
0x00003a8b      0f1f440000     nop dword [rax + rax]
0x00003a90      4983ff01       cmp r15, 1
0x00003a94      0f845ffeffff   je 0x38f9
0x00003a9a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003a9f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003aa3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003aa8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003aac      eb0f           jmp 0x3abd
0x00003aae      6690           nop
0x00003ab0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003ab4      4939d0         cmp r8, rdx
0x00003ab7      0f843cfeffff   je 0x38f9
0x00003abd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003ac0      83e95b         sub ecx, 0x5b
0x00003ac3      80f921         cmp cl, 0x21
0x00003ac6      77e8           ja 0x3ab0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003ac8      be01000000     mov esi, 1
0x00003acd      48d3e6         shl rsi, cl
0x00003ad0      4889f1         mov rcx, rsi
0x00003ad3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003add      4885f1         test rcx, rsi
0x00003ae0      74ce           je 0x3ab0
0x00003ae2      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003ae7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003aec      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003af1      c74424080200.  mov dword [rsp + 8], 2
0x00003af9      807c240d00     cmp byte [rsp + 0xd], 0
0x00003afe      7410           je 0x3b10
0x00003b00      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003b02      b804000000     mov eax, 4
0x00003b07      0f44442408     cmove eax, dword [rsp + 8]
0x00003b0c      89442408       mov dword [rsp + 8], eax
0x00003b10      4883ec08       sub rsp, 8
0x00003b14      4889e9         mov rcx, rbp
0x00003b17      4c89ee         mov rsi, r13
0x00003b1a      ff742468       push qword [rsp + 0x68]
0x00003b1e      ff742478       push qword [rsp + 0x78]
0x00003b22      4c89f7         mov rdi, r14
0x00003b25      6a00           push 0
0x00003b27      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003b2f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003b34      488b542430     mov rdx, qword [rsp + 0x30]
0x00003b39      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003b3d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003b42      4883c420       add rsp, 0x20
0x00003b46      4989c7         mov r15, rax
0x00003b49      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003b51      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003b5a      4c89f8         mov rax, r15
0x00003b5d      0f8500060000   jne 0x4163
0x00003b63      4881c4b80000.  add rsp, 0xb8
0x00003b6a      5b             pop rbx
0x00003b6b      5d             pop rbp
0x00003b6c      415c           pop r12
0x00003b6e      415d           pop r13
0x00003b70      415e           pop r14
0x00003b72      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003b74      c3             ret
0x00003b75      0f1f00         nop dword [rax]
0x00003b78      4c89dd         mov rbp, r11
0x00003b7b      e979ffffff     jmp 0x3af9
0x00003b80      4d39fd         cmp r13, r15
0x00003b83      7605           jbe 0x3b8a
0x00003b85      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003b8a      498d4701       lea rax, [r15 + 1]
0x00003b8e      4939c5         cmp r13, rax
0x00003b91      7606           jbe 0x3b99
0x00003b93      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003b99      498d4702       lea rax, [r15 + 2]
0x00003b9d      4939c5         cmp r13, rax
0x00003ba0      0f86ec050000   jbe 0x4192
0x00003ba6      4c89ea         mov rdx, r13
0x00003ba9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003baf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003bb4      e9d9fbffff     jmp 0x3792
0x00003bb9      4489e0         mov eax, r12d
0x00003bbc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003bc1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003bc4      e900f6ffff     jmp 0x31c9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003bc9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003bcf      e9c5f9ffff     jmp 0x3599
0x00003bd4      85db           test ebx, ebx
0x00003bd6      0f8527f4ffff   jne 0x3003
0x00003bdc      c644240d01     mov byte [rsp + 0xd], 1
0x00003be1      4d85ed         test r13, r13
0x00003be4      0f8590050000   jne 0x417a
0x00003bea      488d056a7700.  lea rax, [0x0000b35b]                   ; "'"
0x00003bf1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003bfa      c644240e01     mov byte [rsp + 0xe], 1
0x00003bff      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c04      4531e4         xor r12d, r12d
0x00003c07      c644240f00     mov byte [rsp + 0xf], 0
0x00003c0c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003c15      4889442448     mov qword [rsp + 0x48], rax
0x00003c1a      41bf01000000   mov r15d, 1
0x00003c20      c74424080200.  mov dword [rsp + 8], 2
0x00003c28      e916f4ffff     jmp 0x3043                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003c2d      0f1f00         nop dword [rax]
0x00003c30      85db           test ebx, ebx
0x00003c32      0f85f5030000   jne 0x402d
0x00003c38      4d85ed         test r13, r13
0x00003c3b      0f8425020000   je 0x3e66
0x00003c41      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003c45      c644240e01     mov byte [rsp + 0xe], 1
0x00003c4a      4531e4         xor r12d, r12d
0x00003c4d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c52      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c5b      488d05896c00.  lea rax, str.l______l                   ; 0xa8eb ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c62      c644240f00     mov byte [rsp + 0xf], 0
0x00003c67      c644240d01     mov byte [rsp + 0xd], 1
0x00003c6c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003c75      41bf01000000   mov r15d, 1
0x00003c7b      4889442448     mov qword [rsp + 0x48], rax
0x00003c80      e9bef3ffff     jmp 0x3043
0x00003c85      488d055f6c00.  lea rax, str.l______l                   ; 0xa8eb ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c8c      c644240e01     mov byte [rsp + 0xe], 1
0x00003c91      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c96      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003c99      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ca2      c644240f01     mov byte [rsp + 0xf], 1
0x00003ca7      c644240d01     mov byte [rsp + 0xd], 1
0x00003cac      48c744241801.  mov qword [rsp + 0x18], 1
0x00003cb5      4531ff         xor r15d, r15d
0x00003cb8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00003cbd      c74424080500.  mov dword [rsp + 8], 5
0x00003cc5      e979f3ffff     jmp 0x3043
0x00003cca      c644240e01     mov byte [rsp + 0xe], 1
0x00003ccf      c644247c00     mov byte [rsp + 0x7c], 0
0x00003cd4      4531e4         xor r12d, r12d
0x00003cd7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ce0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003ce5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003ce8      c644240d01     mov byte [rsp + 0xd], 1
0x00003ced      48c744241800.  mov qword [rsp + 0x18], 0
0x00003cf6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003cff      e93ff3ffff     jmp 0x3043
0x00003d04      837c24080a     cmp dword [rsp + 8], 0xa
0x00003d09      7456           je 0x3d61
0x00003d0b      488d35db6b00.  lea rsi, [0x0000a8ed]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003d12      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003d14      ba05000000     mov edx, 5
0x00003d19      e822dcffff     call sym.imp.dcgettext
0x00003d1e      4889c1         mov rcx, rax
0x00003d21      4889442468     mov qword [rsp + 0x68], rax
0x00003d26      488d05c06b00.  lea rax, [0x0000a8ed]                   ; "`"
0x00003d2d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003d30      0f8498030000   je 0x40ce
0x00003d36      488d351e7600.  lea rsi, [0x0000b35b]                   ; "'"
0x00003d3d      31ff           xor edi, edi
0x00003d3f      ba05000000     mov edx, 5
0x00003d44      e8f7dbffff     call sym.imp.dcgettext
0x00003d49      4889c1         mov rcx, rax
0x00003d4c      4889442460     mov qword [rsp + 0x60], rax
0x00003d51      488d05037600.  lea rax, [0x0000b35b]                   ; "'"
0x00003d58      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003d5b      0f8483030000   je 0x40e4
0x00003d61      4531ff         xor r15d, r15d
0x00003d64      85db           test ebx, ebx
0x00003d66      0f84c1010000   je 0x3f2d
0x00003d6c      85db           test ebx, ebx
0x00003d6e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003d73      0f9544240f     setne byte [rsp + 0xf]
0x00003d78      4531e4         xor r12d, r12d
0x00003d7b      4889df         mov rdi, rbx
0x00003d7e      e8dddbffff     call sym.imp.strlen
0x00003d83      48895c2448     mov qword [rsp + 0x48], rbx
0x00003d88      4889442418     mov qword [rsp + 0x18], rax
0x00003d8d      c644240e01     mov byte [rsp + 0xe], 1
0x00003d92      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d97      48c744245000.  mov qword [rsp + 0x50], 0
0x00003da0      c644240d01     mov byte [rsp + 0xd], 1
0x00003da5      e999f2ffff     jmp 0x3043
0x00003daa      c644240e01     mov byte [rsp + 0xe], 1
0x00003daf      c644247c00     mov byte [rsp + 0x7c], 0
0x00003db4      4531e4         xor r12d, r12d
0x00003db7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003dc0      c644240f00     mov byte [rsp + 0xf], 0
0x00003dc5      4531ff         xor r15d, r15d
0x00003dc8      c644240d00     mov byte [rsp + 0xd], 0
0x00003dcd      48c744241800.  mov qword [rsp + 0x18], 0
0x00003dd6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003ddf      e95ff2ffff     jmp 0x3043
0x00003de4      c644240e01     mov byte [rsp + 0xe], 1
0x00003de9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003dee      4531e4         xor r12d, r12d
0x00003df1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003dfa      c644240f01     mov byte [rsp + 0xf], 1
0x00003dff      c644240d01     mov byte [rsp + 0xd], 1
0x00003e04      e91af2ffff     jmp 0x3023
0x00003e09      4d39fd         cmp r13, r15
0x00003e0c      7605           jbe 0x3e13
0x00003e0e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003e13      488d4102       lea rax, [rcx + 2]
0x00003e17      4939c5         cmp r13, rax
0x00003e1a      7606           jbe 0x3e22
0x00003e1c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003e22      4489e0         mov eax, r12d
0x00003e25      4c8d7903       lea r15, [rcx + 3]
0x00003e29      4531e4         xor r12d, r12d
0x00003e2c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003e31      e962f3ffff     jmp 0x3198
0x00003e36      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e40      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003e45      4c89dd         mov rbp, r11
0x00003e48      885c240d       mov byte [rsp + 0xd], bl
0x00003e4c      e9a8fcffff     jmp 0x3af9
0x00003e51      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003e56      4531e4         xor r12d, r12d
0x00003e59      e902fbffff     jmp 0x3960
0x00003e5e      4531d2         xor r10d, r10d
0x00003e61      e9b7fbffff     jmp 0x3a1d
0x00003e66      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e6f      c644240e01     mov byte [rsp + 0xe], 1
0x00003e74      4531e4         xor r12d, r12d
0x00003e77      c644247c00     mov byte [rsp + 0x7c], 0
0x00003e7c      e9dafdffff     jmp 0x3c5b
0x00003e81      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003e86      4c89f6         mov rsi, r14
0x00003e89      4c89e9         mov rcx, r13
0x00003e8c      4889d8         mov rax, rbx
0x00003e8f      4889df         mov rdi, rbx
0x00003e92      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003e98      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003e9d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003ea5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003ea8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003eae      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003eb6      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003ebb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003ec0      7326           jae 0x3ee8
0x00003ec2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003ec5      7510           jne 0x3ed7
0x00003ec7      eb1f           jmp 0x3ee8
0x00003ec9      0f1f80000000.  nop dword [rax]
0x00003ed0      41803c0100     cmp byte [r9 + rax], 0
0x00003ed5      740e           je 0x3ee5
0x00003ed7      4883c001       add rax, 1
0x00003edb      488d540500     lea rdx, [rbp + rax]
0x00003ee0      4939d3         cmp r11, rdx
0x00003ee3      77eb           ja 0x3ed0
0x00003ee5      4889c7         mov rdi, rax
0x00003ee8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003eed      4531e4         xor r12d, r12d
0x00003ef0      e961faffff     jmp 0x3956
0x00003ef5      4889df         mov rdi, rbx
0x00003ef8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003efe      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003f03      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003f09      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003f11      4531e4         xor r12d, r12d
0x00003f14      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003f19      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003f1e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003f23      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003f28      e929faffff     jmp 0x3956
0x00003f2d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003f32      0fb602         movzx eax, byte [rdx]
0x00003f35      84c0           test al, al
0x00003f37      0f842ffeffff   je 0x3d6c
0x00003f3d      0f1f00         nop dword [rax]
0x00003f40      4d39fd         cmp r13, r15
0x00003f43      7604           jbe 0x3f49
0x00003f45      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003f49      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003f4d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003f52      84c0           test al, al
0x00003f54      75ea           jne 0x3f40
0x00003f56      e911feffff     jmp 0x3d6c
0x00003f5b      89d0           mov eax, edx
0x00003f5d      e955f5ffff     jmp 0x34b7
0x00003f62      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003f66      80fb3e         cmp bl, 0x3e
0x00003f69      0f8771f8ffff   ja 0x37e0
0x00003f6f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003f79      480fa3d8       bt rax, rbx
0x00003f7d      0f835df8ffff   jae 0x37e0
0x00003f83      807c240f00     cmp byte [rsp + 0xf], 0
0x00003f88      0f85e4010000   jne 0x4172                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003f8e      4d39fd         cmp r13, r15
0x00003f91      7605           jbe 0x3f98
0x00003f93      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003f98      498d4701       lea rax, [r15 + 1]
0x00003f9c      4939c5         cmp r13, rax
0x00003f9f      7606           jbe 0x3fa7
0x00003fa1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003fa7      498d4702       lea rax, [r15 + 2]
0x00003fab      4939c5         cmp r13, rax
0x00003fae      7606           jbe 0x3fb6
0x00003fb0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003fb6      498d4703       lea rax, [r15 + 3]
0x00003fba      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003fbd      7606           jbe 0x3fc5
0x00003fbf      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003fc5      4983c704       add r15, 4
0x00003fc9      31d2           xor edx, edx
0x00003fcb      4531e4         xor r12d, r12d
0x00003fce      31c0           xor eax, eax
0x00003fd0      4889cd         mov rbp, rcx
0x00003fd3      e9c0f1ffff     jmp 0x3198
0x00003fd8      85db           test ebx, ebx
0x00003fda      0f8488010000   je 0x4168
0x00003fe0      488d05747300.  lea rax, [0x0000b35b]                   ; "'"
0x00003fe7      c644240e01     mov byte [rsp + 0xe], 1
0x00003fec      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ff1      4531e4         xor r12d, r12d
0x00003ff4      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ffd      c644240f01     mov byte [rsp + 0xf], 1
0x00004002      c644240d00     mov byte [rsp + 0xd], 0
0x00004007      48c744241801.  mov qword [rsp + 0x18], 1
0x00004010      4531ff         xor r15d, r15d
0x00004013      4889442448     mov qword [rsp + 0x48], rax
0x00004018      e926f0ffff     jmp 0x3043
0x0000401d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004020      4c89dd         mov rbp, r11
0x00004023      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004028      e9ccfaffff     jmp 0x3af9
0x0000402d      488d05b76800.  lea rax, str.l______l                   ; 0xa8eb ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004034      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004039      c644247c00     mov byte [rsp + 0x7c], 0
0x0000403e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004041      48c744245000.  mov qword [rsp + 0x50], 0
0x0000404a      c644240f01     mov byte [rsp + 0xf], 1
0x0000404f      c644240d01     mov byte [rsp + 0xd], 1
0x00004054      48c744241801.  mov qword [rsp + 0x18], 1
0x0000405d      4531ff         xor r15d, r15d
0x00004060      4889442448     mov qword [rsp + 0x48], rax
0x00004065      e9d9efffff     jmp 0x3043
0x0000406a      89d0           mov eax, edx
0x0000406c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004071      4885db         test rbx, rbx
0x00004074      742c           je 0x40a2
0x00004076      84c0           test al, al
0x00004078      7428           je 0x40a2
0x0000407a      0fb60b         movzx ecx, byte [rbx]
0x0000407d      4889d8         mov rax, rbx
0x00004080      84c9           test cl, cl
0x00004082      741e           je 0x40a2
0x00004084      4c89fa         mov rdx, r15
0x00004087      4c29f8         sub rax, r15
0x0000408a      4939d5         cmp r13, rdx
0x0000408d      7604           jbe 0x4093
0x0000408f      41880c16       mov byte [r14 + rdx], cl
0x00004093      4883c201       add rdx, 1
0x00004097      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000409b      84c9           test cl, cl
0x0000409d      75eb           jne 0x408a
0x0000409f      4989d7         mov r15, rdx
0x000040a2      4d39fd         cmp r13, r15
0x000040a5      0f869efaffff   jbe 0x3b49
0x000040ab      43c6043e00     mov byte [r14 + r15], 0
0x000040b0      e994faffff     jmp 0x3b49
0x000040b5      837c240802     cmp dword [rsp + 8], 2
0x000040ba      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000040bf      4c89dd         mov rbp, r11
0x000040c2      0f94c0         sete al
0x000040c5      885c240d       mov byte [rsp + 0xd], bl
0x000040c9      e92bfaffff     jmp 0x3af9
0x000040ce      8b742408       mov esi, dword [rsp + 8]
0x000040d2      4889cf         mov rdi, rcx
0x000040d5      e8a6edffff     call sym.gettext_quote.part.1
0x000040da      4889442468     mov qword [rsp + 0x68], rax
0x000040df      e952fcffff     jmp 0x3d36
0x000040e4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000040e8      4889cf         mov rdi, rcx
0x000040eb      e890edffff     call sym.gettext_quote.part.1
0x000040f0      4889442460     mov qword [rsp + 0x60], rax
0x000040f5      e967fcffff     jmp 0x3d61
0x000040fa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000040ff      4c89dd         mov rbp, r11
0x00004102      89d0           mov eax, edx
0x00004104      885c240d       mov byte [rsp + 0xd], bl
0x00004108      e9ecf9ffff     jmp 0x3af9
0x0000410d      4883ec08       sub rsp, 8
0x00004111      41b805000000   mov r8d, 5
0x00004117      4c89d9         mov rcx, r11
0x0000411a      ff742468       push qword [rsp + 0x68]
0x0000411e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004122      4c89f7         mov rdi, r14
0x00004125      ff742438       push qword [rsp + 0x38]
0x00004129      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004131      488b542430     mov rdx, qword [rsp + 0x30]
0x00004136      488b742470     mov rsi, qword [rsp + 0x70]
0x0000413b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004140      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004144      4989c7         mov r15, rax
0x00004147      e9fdf9ffff     jmp 0x3b49
0x0000414c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004151      e916ffffff     jmp 0x406c
0x00004156      c74424080200.  mov dword [rsp + 8], 2
0x0000415e      e996f9ffff     jmp 0x3af9
0x00004163      e838d8ffff     call sym.imp.__stack_chk_fail
0x00004168      c644240d00     mov byte [rsp + 0xd], 0
0x0000416d      e96ffaffff     jmp 0x3be1
0x00004172      4c89dd         mov rbp, r11
0x00004175      e996f9ffff     jmp 0x3b10
0x0000417a      c644240e01     mov byte [rsp + 0xe], 1
0x0000417f      31c0           xor eax, eax
0x00004181      4531e4         xor r12d, r12d
0x00004184      48c744245000.  mov qword [rsp + 0x50], 0
0x0000418d      e9a2f5ffff     jmp 0x3734
0x00004192      4c89ea         mov rdx, r13
0x00004195      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000419a      e9f3f5ffff     jmp 0x3792
0x0000419f      e8ecd6ffff     call sym.imp.abort
0x000041a4      6690           nop
0x000041a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000041b0      4157           push r15
0x000041b2      4156           push r14
0x000041b4      4c63ff         movsxd r15, edi
0x000041b7      4155           push r13
0x000041b9      4154           push r12
0x000041bb      4989d6         mov r14, rdx
0x000041be      55             push rbp
0x000041bf      53             push rbx
0x000041c0      4889cd         mov rbp, rcx
0x000041c3      4883ec28       sub rsp, 0x28
0x000041c7      4889742408     mov qword [rsp + 8], rsi
0x000041cc      e8cfd6ffff     call sym.imp.__errno_location
0x000041d1      4989c5         mov r13, rax
0x000041d4      8b00           mov eax, dword [rax]
0x000041d6      4585ff         test r15d, r15d
0x000041d9      488b1d809e20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x000041e0      89442418       mov dword [rsp + 0x18], eax
0x000041e4      0f8867010000   js 0x4351
0x000041ea      44393d679e20.  cmp dword [obj.nslots], r15d            ; [0x20e058:4]=1
0x000041f1      7f62           jg 0x4255
0x000041f3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000041fa      0f8456010000   je 0x4356
0x00004200      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004204      488d05659e20.  lea rax, obj.slotvec0                   ; 0x20e070
0x0000420b      4963f4         movsxd rsi, r12d
0x0000420e      48c1e604       shl rsi, 4
0x00004212      4839c3         cmp rbx, rax
0x00004215      0f8415010000   je 0x4330
0x0000421b      4889df         mov rdi, rbx
0x0000421e      e8ed0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004223      4889c3         mov rbx, rax
0x00004226      488905339e20.  mov qword [obj.slotvec], rax            ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x0000422d      48633d249e20.  movsxd rdi, dword [obj.nslots]          ; [0x20e058:4]=1
0x00004234      4489e2         mov edx, r12d
0x00004237      31f6           xor esi, esi
0x00004239      29fa           sub edx, edi
0x0000423b      48c1e704       shl rdi, 4
0x0000423f      4863d2         movsxd rdx, edx
0x00004242      4801df         add rdi, rbx
0x00004245      48c1e204       shl rdx, 4
0x00004249      e8c2d7ffff     call sym.imp.memset
0x0000424e      448925039e20.  mov dword [obj.nslots], r12d            ; [0x20e058:4]=1
0x00004255      8b4504         mov eax, dword [rbp + 4]
0x00004258      49c1e704       shl r15, 4
0x0000425c      4883ec08       sub rsp, 8
0x00004260      4c01fb         add rbx, r15
0x00004263      4c8d7d08       lea r15, [rbp + 8]
0x00004267      448b4500       mov r8d, dword [rbp]
0x0000426b      4c8b1b         mov r11, qword [rbx]
0x0000426e      4c8b6308       mov r12, qword [rbx + 8]
0x00004272      4c89f1         mov rcx, r14
0x00004275      83c801         or eax, 1
0x00004278      89442424       mov dword [rsp + 0x24], eax
0x0000427c      ff7530         push qword [rbp + 0x30]
0x0000427f      4189c1         mov r9d, eax
0x00004282      ff7528         push qword [rbp + 0x28]
0x00004285      4157           push r15
0x00004287      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000428a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000428f      4c89e7         mov rdi, r12
0x00004292      4c895c2430     mov qword [rsp + 0x30], r11
0x00004297      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000429c      4883c420       add rsp, 0x20
0x000042a0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000042a5      4939c3         cmp r11, rax
0x000042a8      7767           ja 0x4311
0x000042aa      488d7001       lea rsi, [rax + 1]
0x000042ae      488d056b9e20.  lea rax, obj.slot0                      ; 0x20e120
0x000042b5      4939c4         cmp r12, rax
0x000042b8      488933         mov qword [rbx], rsi
0x000042bb      7412           je 0x42cf
0x000042bd      4c89e7         mov rdi, r12
0x000042c0      4889742410     mov qword [rsp + 0x10], rsi
0x000042c5      e8c6d9ffff     call sym..plt.got
0x000042ca      488b742410     mov rsi, qword [rsp + 0x10]
0x000042cf      4889f7         mov rdi, rsi
0x000042d2      4889742410     mov qword [rsp + 0x10], rsi
0x000042d7      e8d40e0000     call sym.xmalloc
0x000042dc      4883ec08       sub rsp, 8
0x000042e0      48894308       mov qword [rbx + 8], rax
0x000042e4      448b4500       mov r8d, dword [rbp]
0x000042e8      ff7530         push qword [rbp + 0x30]
0x000042eb      ff7528         push qword [rbp + 0x28]
0x000042ee      4c89f1         mov rcx, r14
0x000042f1      4157           push r15
0x000042f3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000042f8      4889c7         mov rdi, rax
0x000042fb      488b542428     mov rdx, qword [rsp + 0x28]
0x00004300      488b742430     mov rsi, qword [rsp + 0x30]
0x00004305      4989c4         mov r12, rax
0x00004308      e863ecffff     call sym.quotearg_buffer_restyled
0x0000430d      4883c420       add rsp, 0x20
0x00004311      8b442418       mov eax, dword [rsp + 0x18]
0x00004315      41894500       mov dword [r13], eax
0x00004319      4883c428       add rsp, 0x28
0x0000431d      4c89e0         mov rax, r12
0x00004320      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004321      5d             pop rbp
0x00004322      415c           pop r12
0x00004324      415d           pop r13
0x00004326      415e           pop r14
0x00004328      415f           pop r15
0x0000432a      c3             ret
0x0000432b      0f1f440000     nop dword [rax + rax]
0x00004330      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004332      e8d90e0000     call sym.xrealloc
0x00004337      660f6f05319d.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000433f      4889c3         mov rbx, rax
0x00004342      488905179d20.  mov qword [obj.slotvec], rax            ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x00004349      0f1100         movups xmmword [rax], xmm0
0x0000434c      e9dcfeffff     jmp 0x422d
0x00004351      e83ad5ffff     call sym.imp.abort
0x00004356      e8a5100000     call sym.xalloc_die
0x0000435b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004360      4154           push r12
0x00004362      55             push rbp
0x00004363      53             push rbx
0x00004364      4889fb         mov rbx, rdi
0x00004367      e834d5ffff     call sym.imp.__errno_location
0x0000436c      448b20         mov r12d, dword [rax]
0x0000436f      4889c5         mov rbp, rax
0x00004372      488d05a79e20.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00004379      4885db         test rbx, rbx
0x0000437c      be38000000     mov esi, 0x38                           ; '8'
0x00004381      480f44d8       cmove rbx, rax
0x00004385      4889df         mov rdi, rbx
0x00004388      e823100000     call sym.xmemdup
0x0000438d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004391      5b             pop rbx
0x00004392      5d             pop rbp
0x00004393      415c           pop r12
0x00004395      c3             ret
0x00004396      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000043a0      488d05799e20.  lea rax, obj.default_quoting_options    ; 0x20e220
0x000043a7      4885ff         test rdi, rdi
0x000043aa      480f44f8       cmove rdi, rax
0x000043ae      8b07           mov eax, dword [rdi]
0x000043b0      c3             ret
0x000043b1      0f1f440000     nop dword [rax + rax]
0x000043b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000043c0      488d05599e20.  lea rax, obj.default_quoting_options    ; 0x20e220
0x000043c7      4885ff         test rdi, rdi
0x000043ca      480f44f8       cmove rdi, rax
0x000043ce      8937           mov dword [rdi], esi
0x000043d0      c3             ret
0x000043d1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000043d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000043e0      488d05399e20.  lea rax, obj.default_quoting_options    ; 0x20e220
0x000043e7      4885ff         test rdi, rdi
0x000043ea      89f1           mov ecx, esi
0x000043ec      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000043f0      89f0           mov eax, esi
0x000043f2      83e11f         and ecx, 0x1f
0x000043f5      c0e805         shr al, 5
0x000043f8      0fb6c0         movzx eax, al
0x000043fb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004400      8b37           mov esi, dword [rdi]
0x00004402      89f0           mov eax, esi
0x00004404      d3e8           shr eax, cl
0x00004406      31c2           xor edx, eax
0x00004408      83e001         and eax, 1
0x0000440b      83e201         and edx, 1
0x0000440e      d3e2           shl edx, cl
0x00004410      31f2           xor edx, esi
0x00004412      8917           mov dword [rdi], edx
0x00004414      c3             ret
0x00004415      90             nop
0x00004416      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004420      488d05f99d20.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00004427      4885ff         test rdi, rdi
0x0000442a      480f44f8       cmove rdi, rax
0x0000442e      8b4704         mov eax, dword [rdi + 4]
0x00004431      897704         mov dword [rdi + 4], esi
0x00004434      c3             ret
0x00004435      90             nop
0x00004436      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004440      488d05d99d20.  lea rax, obj.default_quoting_options    ; 0x20e220
0x00004447      4885ff         test rdi, rdi
0x0000444a      480f44f8       cmove rdi, rax
0x0000444e      4885f6         test rsi, rsi
0x00004451      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004457      740e           je 0x4467
0x00004459      4885d2         test rdx, rdx
0x0000445c      7409           je 0x4467
0x0000445e      48897728       mov qword [rdi + 0x28], rsi
0x00004462      48895730       mov qword [rdi + 0x30], rdx
0x00004466      c3             ret
0x00004467      4883ec08       sub rsp, 8
0x0000446b      e820d4ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004470      4157           push r15
0x00004472      4156           push r14
0x00004474      488d05a59d20.  lea rax, obj.default_quoting_options    ; 0x20e220
0x0000447b      4155           push r13
0x0000447d      4154           push r12
0x0000447f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004482      55             push rbp
0x00004483      53             push rbx
0x00004484      4c89c3         mov rbx, r8
0x00004487      4989f6         mov r14, rsi
0x0000448a      4989d7         mov r15, rdx
0x0000448d      4883ec18       sub rsp, 0x18
0x00004491      4d85c0         test r8, r8
0x00004494      480f44d8       cmove rbx, rax
0x00004498      48894c2408     mov qword [rsp + 8], rcx
0x0000449d      e8fed3ffff     call sym.imp.__errno_location
0x000044a2      448b20         mov r12d, dword [rax]
0x000044a5      4889c5         mov rbp, rax
0x000044a8      488d4308       lea rax, [rbx + 8]
0x000044ac      4883ec08       sub rsp, 8
0x000044b0      448b4b04       mov r9d, dword [rbx + 4]
0x000044b4      ff7330         push qword [rbx + 0x30]
0x000044b7      448b03         mov r8d, dword [rbx]
0x000044ba      ff7328         push qword [rbx + 0x28]
0x000044bd      4c89fa         mov rdx, r15
0x000044c0      50             push rax
0x000044c1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000044c6      4c89f6         mov rsi, r14
0x000044c9      4c89ef         mov rdi, r13
0x000044cc      e89feaffff     call sym.quotearg_buffer_restyled
0x000044d1      44896500       mov dword [rbp], r12d
0x000044d5      4883c438       add rsp, 0x38
0x000044d9      5b             pop rbx
0x000044da      5d             pop rbp
0x000044db      415c           pop r12
0x000044dd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000044df      415e           pop r14
0x000044e1      415f           pop r15
0x000044e3      c3             ret
0x000044e4      6690           nop
0x000044e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000044f0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000044f2      4156           push r14
0x000044f4      488d05259d20.  lea rax, obj.default_quoting_options    ; 0x20e220
0x000044fb      4155           push r13
0x000044fd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000044ff      4989d4         mov r12, rdx
0x00004502      55             push rbp
0x00004503      53             push rbx
0x00004504      4889cb         mov rbx, rcx
0x00004507      4989fe         mov r14, rdi
0x0000450a      4989f7         mov r15, rsi
0x0000450d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004511      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004514      480f44d8       cmove rbx, rax
0x00004518      31ed           xor ebp, ebp
0x0000451a      e881d3ffff     call sym.imp.__errno_location
0x0000451f      4d85e4         test r12, r12
0x00004522      4989c5         mov r13, rax
0x00004525      8b00           mov eax, dword [rax]
0x00004527      400f94c5       sete bpl
0x0000452b      0b6b04         or ebp, dword [rbx + 4]
0x0000452e      4c8d5308       lea r10, [rbx + 8]
0x00004532      4883ec08       sub rsp, 8
0x00004536      448b03         mov r8d, dword [rbx]
0x00004539      4c89f9         mov rcx, r15
0x0000453c      89442414       mov dword [rsp + 0x14], eax
0x00004540      ff7330         push qword [rbx + 0x30]
0x00004543      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004546      ff7328         push qword [rbx + 0x28]
0x00004549      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000454b      31f6           xor esi, esi
0x0000454d      4189e9         mov r9d, ebp
0x00004550      31ff           xor edi, edi
0x00004552      4c89542440     mov qword [rsp + 0x40], r10
0x00004557      e814eaffff     call sym.quotearg_buffer_restyled
0x0000455c      488d7001       lea rsi, [rax + 1]
0x00004560      4889442448     mov qword [rsp + 0x48], rax
0x00004565      4883c420       add rsp, 0x20
0x00004569      4889f7         mov rdi, rsi
0x0000456c      4889742418     mov qword [rsp + 0x18], rsi
0x00004571      e83a0c0000     call sym.xmalloc
0x00004576      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000457b      4883ec08       sub rsp, 8
0x0000457f      ff7330         push qword [rbx + 0x30]
0x00004582      ff7328         push qword [rbx + 0x28]
0x00004585      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000458a      4189e9         mov r9d, ebp
0x0000458d      448b03         mov r8d, dword [rbx]
0x00004590      4c89f9         mov rcx, r15
0x00004593      4c89f2         mov rdx, r14
0x00004596      4889c7         mov rdi, rax
0x00004599      4152           push r10
0x0000459b      488b742438     mov rsi, qword [rsp + 0x38]
0x000045a0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000045a5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000045a9      4883c420       add rsp, 0x20
0x000045ad      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000045b0      41894500       mov dword [r13], eax
0x000045b4      7409           je 0x45bf
0x000045b6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000045bb      4d891c24       mov qword [r12], r11
0x000045bf      488b442410     mov rax, qword [rsp + 0x10]
0x000045c4      4883c438       add rsp, 0x38
0x000045c8      5b             pop rbx
0x000045c9      5d             pop rbp
0x000045ca      415c           pop r12
0x000045cc      415d           pop r13
0x000045ce      415e           pop r14
0x000045d0      415f           pop r15
0x000045d2      c3             ret
0x000045d3      0f1f00         nop dword [rax]
0x000045d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000045e0      4889d1         mov rcx, rdx
0x000045e3      31d2           xor edx, edx
0x000045e5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000045ea      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000045f0      8b05629a2000   mov eax, dword [obj.nslots]             ; [0x20e058:4]=1
0x000045f6      4154           push r12
0x000045f8      4c8b25619a20.  mov r12, qword [obj.slotvec]            ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x000045ff      55             push rbp
0x00004600      53             push rbx
0x00004601      83f801         cmp eax, 1
0x00004604      7e2b           jle 0x4631                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004606      83e802         sub eax, 2
0x00004609      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000460e      48c1e004       shl rax, 4
0x00004612      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004617      660f1f840000.  nop word [rax + rax]
0x00004620      488b3b         mov rdi, qword [rbx]
0x00004623      4883c310       add rbx, 0x10
0x00004627      e864d6ffff     call sym..plt.got
0x0000462c      4839eb         cmp rbx, rbp
0x0000462f      75ef           jne 0x4620
0x00004631      498b7c2408     mov rdi, qword [r12 + 8]
0x00004636      488d1de39a20.  lea rbx, obj.slot0                      ; 0x20e120
0x0000463d      4839df         cmp rdi, rbx
0x00004640      7417           je 0x4659
0x00004642      e849d6ffff     call sym..plt.got
0x00004647      48c7051e9a20.  mov qword [obj.slotvec0], 0x100         ; [0x20e070:8]=256
0x00004652      48891d1f9a20.  mov qword [0x0020e078], rbx             ; [0x20e078:8]=0x20e120 obj.slot0
0x00004659      488d1d109a20.  lea rbx, obj.slotvec0                   ; 0x20e070
0x00004660      4939dc         cmp r12, rbx
0x00004663      740f           je 0x4674
0x00004665      4c89e7         mov rdi, r12
0x00004668      e823d6ffff     call sym..plt.got
0x0000466d      48891dec9920.  mov qword [obj.slotvec], rbx            ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x00004674      5b             pop rbx
0x00004675      c705d9992000.  mov dword [obj.nslots], 1               ; [0x20e058:4]=1
0x0000467f      5d             pop rbp
0x00004680      415c           pop r12
0x00004682      c3             ret
0x00004683      0f1f00         nop dword [rax]
0x00004686      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004690      488d0d899b20.  lea rcx, obj.default_quoting_options    ; 0x20e220
0x00004697      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000469e      e90dfbffff     jmp sym.quotearg_n_options
0x000046a3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000046a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000046b0      488d0d699b20.  lea rcx, obj.default_quoting_options    ; 0x20e220
0x000046b7      e9f4faffff     jmp sym.quotearg_n_options
0x000046bc      0f1f4000       nop dword [rax]
;-- quotearg:
0x000046c0      488d0d599b20.  lea rcx, obj.default_quoting_options    ; 0x20e220
0x000046c7      4889fe         mov rsi, rdi
0x000046ca      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000046d1      31ff           xor edi, edi
0x000046d3      e9d8faffff     jmp sym.quotearg_n_options
0x000046d8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000046e0      488d0d399b20.  lea rcx, obj.default_quoting_options    ; 0x20e220
0x000046e7      4889f2         mov rdx, rsi
0x000046ea      4889fe         mov rsi, rdi
0x000046ed      31ff           xor edi, edi
0x000046ef      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000046f4      6690           nop
0x000046f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004700      4883ec48       sub rsp, 0x48
0x00004704      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004707      64488b142528.  mov rdx, qword fs:[0x28]
0x00004710      4889542438     mov qword [rsp + 0x38], rdx
0x00004715      31d2           xor edx, edx
0x00004717      83fe0a         cmp esi, 0xa
0x0000471a      7468           je 0x4784
0x0000471c      893424         mov dword [rsp], esi
0x0000471f      4889e1         mov rcx, rsp
0x00004722      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004729      4889c6         mov rsi, rax
0x0000472c      48c744240400.  mov qword [rsp + 4], 0
0x00004735      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000473e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004747      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004750      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004759      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004762      c74424340000.  mov dword [rsp + 0x34], 0
0x0000476a      e841faffff     call sym.quotearg_n_options
0x0000476f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004774      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000477d      750a           jne 0x4789                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000477f      4883c448       add rsp, 0x48
0x00004783      c3             ret
0x00004784      e807d1ffff     call sym.imp.abort
0x00004789      e812d2ffff     call sym.imp.__stack_chk_fail
0x0000478e      6690           nop
;-- quotearg_n_style_mem:
0x00004790      4883ec48       sub rsp, 0x48
0x00004794      4889d0         mov rax, rdx
0x00004797      4889ca         mov rdx, rcx
0x0000479a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000047a3      48894c2438     mov qword [rsp + 0x38], rcx
0x000047a8      31c9           xor ecx, ecx
0x000047aa      83fe0a         cmp esi, 0xa
0x000047ad      7461           je 0x4810
0x000047af      893424         mov dword [rsp], esi
0x000047b2      4889e1         mov rcx, rsp
0x000047b5      4889c6         mov rsi, rax
0x000047b8      48c744240400.  mov qword [rsp + 4], 0
0x000047c1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000047ca      48c744241400.  mov qword [rsp + 0x14], 0
0x000047d3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000047dc      48c744242400.  mov qword [rsp + 0x24], 0
0x000047e5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000047ee      c74424340000.  mov dword [rsp + 0x34], 0
0x000047f6      e8b5f9ffff     call sym.quotearg_n_options
0x000047fb      488b542438     mov rdx, qword [rsp + 0x38]
0x00004800      644833142528.  xor rdx, qword fs:[0x28]
0x00004809      750a           jne 0x4815
0x0000480b      4883c448       add rsp, 0x48
0x0000480f      c3             ret
0x00004810      e87bd0ffff     call sym.imp.abort
0x00004815      e886d1ffff     call sym.imp.__stack_chk_fail
0x0000481a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004820      4889f2         mov rdx, rsi
0x00004823      89fe           mov esi, edi
0x00004825      31ff           xor edi, edi
0x00004827      e9d4feffff     jmp sym.quotearg_n_style
0x0000482c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004830      4889d1         mov rcx, rdx
0x00004833      4889f2         mov rdx, rsi
0x00004836      89fe           mov esi, edi
0x00004838      31ff           xor edi, edi
0x0000483a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000483f      90             nop
;-- quotearg_char_mem:
0x00004840      4883ec48       sub rsp, 0x48
0x00004844      89d1           mov ecx, edx
0x00004846      64488b042528.  mov rax, qword fs:[0x28]
0x0000484f      4889442438     mov qword [rsp + 0x38], rax
0x00004854      31c0           xor eax, eax
0x00004856      488b05f39920.  mov rax, qword [0x0020e250]             ; [0x20e250:8]=0
0x0000485d      4989e0         mov r8, rsp
0x00004860      83e11f         and ecx, 0x1f
0x00004863      660f6f05b599.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000486b      4889442430     mov qword [rsp + 0x30], rax
0x00004870      89d0           mov eax, edx
0x00004872      0f290424       movaps xmmword [rsp], xmm0
0x00004876      c0e805         shr al, 5
0x00004879      0fb6c0         movzx eax, al
0x0000487c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004881      660f6f05a799.  movdqa xmm0, xmmword [0x0020e230]
0x00004889      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000488e      660f6f05aa99.  movdqa xmm0, xmmword [0x0020e240]
0x00004896      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000489b      418b11         mov edx, dword [r9]
0x0000489e      89d0           mov eax, edx
0x000048a0      d3e8           shr eax, cl
0x000048a2      f7d0           not eax
0x000048a4      83e001         and eax, 1
0x000048a7      d3e0           shl eax, cl
0x000048a9      4c89c1         mov rcx, r8
0x000048ac      31d0           xor eax, edx
0x000048ae      4889f2         mov rdx, rsi
0x000048b1      4889fe         mov rsi, rdi
0x000048b4      418901         mov dword [r9], eax
0x000048b7      31ff           xor edi, edi
0x000048b9      e8f2f8ffff     call sym.quotearg_n_options
0x000048be      488b742438     mov rsi, qword [rsp + 0x38]
0x000048c3      644833342528.  xor rsi, qword fs:[0x28]
0x000048cc      7505           jne 0x48d3
0x000048ce      4883c448       add rsp, 0x48
0x000048d2      c3             ret
0x000048d3      e8c8d0ffff     call sym.imp.__stack_chk_fail
0x000048d8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000048e0      400fbed6       movsx edx, sil
0x000048e4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000048eb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000048f0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000048f5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000048fc      e93fffffff     jmp sym.quotearg_char_mem
0x00004901      0f1f440000     nop dword [rax + rax]
0x00004906      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004910      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004915      e926ffffff     jmp sym.quotearg_char_mem
0x0000491a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004920      4883ec48       sub rsp, 0x48
0x00004924      4889d0         mov rax, rdx
0x00004927      64488b142528.  mov rdx, qword fs:[0x28]
0x00004930      4889542438     mov qword [rsp + 0x38], rdx
0x00004935      31d2           xor edx, edx
0x00004937      83fe0a         cmp esi, 0xa
0x0000493a      7468           je 0x49a4
0x0000493c      893424         mov dword [rsp], esi
0x0000493f      4889e1         mov rcx, rsp
0x00004942      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004949      4889c6         mov rsi, rax
0x0000494c      48c744240400.  mov qword [rsp + 4], 0
0x00004955      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000495e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004967      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004970      48c744242400.  mov qword [rsp + 0x24], 0
0x00004979      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004982      c74424340000.  mov dword [rsp + 0x34], 0
0x0000498a      e821f8ffff     call sym.quotearg_n_options
0x0000498f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004994      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000499d      750a           jne 0x49a9
0x0000499f      4883c448       add rsp, 0x48
0x000049a3      c3             ret
0x000049a4      e8e7ceffff     call sym.imp.abort
0x000049a9      e8f2cfffff     call sym.imp.__stack_chk_fail
0x000049ae      6690           nop
;-- quotearg_n_custom_mem:
0x000049b0      4883ec48       sub rsp, 0x48
0x000049b4      4989c9         mov r9, rcx
0x000049b7      488b0d929820.  mov rcx, qword [0x0020e250]             ; [0x20e250:8]=0
0x000049be      660f6f055a98.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000049c6      64488b042528.  mov rax, qword fs:[0x28]
0x000049cf      4889442438     mov qword [rsp + 0x38], rax
0x000049d4      31c0           xor eax, eax
0x000049d6      0f290424       movaps xmmword [rsp], xmm0
0x000049da      4885f6         test rsi, rsi
0x000049dd      48894c2430     mov qword [rsp + 0x30], rcx
0x000049e2      c704240a0000.  mov dword [rsp], 0xa
0x000049e9      660f6f053f98.  movdqa xmm0, xmmword [0x0020e230]
0x000049f1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000049f6      660f6f054298.  movdqa xmm0, xmmword [0x0020e240]
0x000049fe      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004a03      7432           je 0x4a37
0x00004a05      4885d2         test rdx, rdx
0x00004a08      742d           je 0x4a37
0x00004a0a      4889742428     mov qword [rsp + 0x28], rsi
0x00004a0f      4889542430     mov qword [rsp + 0x30], rdx
0x00004a14      4889e1         mov rcx, rsp
0x00004a17      4c89c2         mov rdx, r8
0x00004a1a      4c89ce         mov rsi, r9
0x00004a1d      e88ef7ffff     call sym.quotearg_n_options
0x00004a22      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004a27      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004a30      750a           jne 0x4a3c
0x00004a32      4883c448       add rsp, 0x48
0x00004a36      c3             ret
0x00004a37      e854ceffff     call sym.imp.abort
0x00004a3c      e85fcfffff     call sym.imp.__stack_chk_fail
0x00004a41      0f1f440000     nop dword [rax + rax]
0x00004a46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004a50      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004a57      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004a5c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004a60      4889d1         mov rcx, rdx
0x00004a63      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004a6a      4889f2         mov rdx, rsi
0x00004a6d      4889fe         mov rsi, rdi
0x00004a70      31ff           xor edi, edi
0x00004a72      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004a77      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004a80      4989c8         mov r8, rcx
0x00004a83      4889d1         mov rcx, rdx
0x00004a86      4889f2         mov rdx, rsi
0x00004a89      4889fe         mov rsi, rdi
0x00004a8c      31ff           xor edi, edi
0x00004a8e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004a93      0f1f00         nop dword [rax]
0x00004a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004aa0      488d0d799520.  lea rcx, obj.quote_quoting_options      ; 0x20e020
0x00004aa7      e904f7ffff     jmp sym.quotearg_n_options
0x00004aac      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004ab0      488d0d699520.  lea rcx, obj.quote_quoting_options      ; 0x20e020
0x00004ab7      4889f2         mov rdx, rsi
0x00004aba      4889fe         mov rsi, rdi
0x00004abd      31ff           xor edi, edi
0x00004abf      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004ac4      6690           nop
0x00004ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004ad0      488d0d499520.  lea rcx, obj.quote_quoting_options      ; 0x20e020
0x00004ad7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ade      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004ae3      0f1f00         nop dword [rax]
0x00004ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004af0      488d0d299520.  lea rcx, obj.quote_quoting_options      ; 0x20e020
0x00004af7      4889fe         mov rsi, rdi
0x00004afa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b01      31ff           xor edi, edi
0x00004b03      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004b08      0f1f84000000.  nop dword [rax + rax]
;-- get_root_dev_ino:
0x00004b10      53             push rbx                                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00004b11      488d35b86800.  lea rsi, [0x0000b3d0]                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf); ; "/"
0x00004b18      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00004b1b      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00004b20      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00004b27      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00004b2a      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00004b33      488984249800.  mov qword [rsp + 0x98], rax
0x00004b3b      31c0           xor eax, eax
0x00004b3d      e82eceffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00004b42      85c0           test eax, eax                           ; ../coreutils-8.31/lib/root-dev-ino.c:32
0x00004b44      7532           jne 0x4b78
0x00004b46      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/root-dev-ino.c:34
0x00004b4b      488903         mov qword [rbx], rax
0x00004b4e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/root-dev-ino.c:35
0x00004b52      48894308       mov qword [rbx + 8], rax
0x00004b56      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/root-dev-ino.c:36
0x00004b59      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x00004b61      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004b6a      7510           jne 0x4b7c
0x00004b6c      4881c4a00000.  add rsp, 0xa0
0x00004b73      5b             pop rbx
0x00004b74      c3             ret
0x00004b75      0f1f00         nop dword [rax]
0x00004b78      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/root-dev-ino.c:33
0x00004b7a      ebdd           jmp 0x4b59
0x00004b7c      e81fceffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x00004b81      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b8b      0f1f440000     nop dword [rax + rax]
;-- version_etc_arn:
0x00004b90      4157           push r15
0x00004b92      4156           push r14
0x00004b94      4155           push r13
0x00004b96      4154           push r12
0x00004b98      4d89cc         mov r12, r9
0x00004b9b      55             push rbp
0x00004b9c      53             push rbx
0x00004b9d      4889fd         mov rbp, rdi
0x00004ba0      4c89c3         mov rbx, r8
0x00004ba3      4883ec28       sub rsp, 0x28
0x00004ba7      4885f6         test rsi, rsi
0x00004baa      0f8418010000   je 0x4cc8
0x00004bb0      4989d0         mov r8, rdx
0x00004bb3      488d15ee6100.  lea rdx, [0x0000ada8]                   ; "%s (%s) %s\n"
0x00004bba      4989c9         mov r9, rcx
0x00004bbd      31c0           xor eax, eax
0x00004bbf      4889f1         mov rcx, rsi
0x00004bc2      be01000000     mov esi, 1
0x00004bc7      e874d0ffff     call sym.imp.__fprintf_chk
0x00004bcc      488d35e86100.  lea rsi, [0x0000adbb]                   ; "(C)"
0x00004bd3      31ff           xor edi, edi
0x00004bd5      ba05000000     mov edx, 5
0x00004bda      e861cdffff     call sym.imp.dcgettext
0x00004bdf      488d15fa6400.  lea rdx, obj.version_etc_copyright      ; 0xb0e0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004be6      4889c1         mov rcx, rax
0x00004be9      41b8e3070000   mov r8d, 0x7e3
0x00004bef      be01000000     mov esi, 1
0x00004bf4      4889ef         mov rdi, rbp
0x00004bf7      31c0           xor eax, eax
0x00004bf9      e842d0ffff     call sym.imp.__fprintf_chk
0x00004bfe      488d35436200.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xae48 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004c05      31ff           xor edi, edi
0x00004c07      ba05000000     mov edx, 5
0x00004c0c      e82fcdffff     call sym.imp.dcgettext
0x00004c11      4889ee         mov rsi, rbp
0x00004c14      4889c7         mov rdi, rax
0x00004c17      e864ceffff     call sym.imp.fputs_unlocked
0x00004c1c      4983fc09       cmp r12, 9
0x00004c20      0f873a030000   ja 0x4f60
0x00004c26      488d15776400.  lea rdx, [0x0000b0a4]
0x00004c2d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004c31      4801d0         add rax, rdx
0x00004c34      ffe0           jmp rax
0x00004c36      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c40      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004c44      488b4310       mov rax, qword [rbx + 0x10]
0x00004c48      488d35696300.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xafb8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004c4f      4c8b4308       mov r8, qword [rbx + 8]
0x00004c53      ba05000000     mov edx, 5
0x00004c58      31ff           xor edi, edi
0x00004c5a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004c5e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004c62      4c894c2410     mov qword [rsp + 0x10], r9
0x00004c67      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004c6b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004c6f      48890424       mov qword [rsp], rax
0x00004c73      4c89442408     mov qword [rsp + 8], r8
0x00004c78      488b1b         mov rbx, qword [rbx]
0x00004c7b      e8c0ccffff     call sym.imp.dcgettext
0x00004c80      4883ec08       sub rsp, 8
0x00004c84      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004c89      4889c2         mov rdx, rax
0x00004c8c      4889d9         mov rcx, rbx
0x00004c8f      be01000000     mov esi, 1
0x00004c94      4889ef         mov rdi, rbp
0x00004c97      31c0           xor eax, eax
0x00004c99      4151           push r9
0x00004c9b      4155           push r13
0x00004c9d      4154           push r12
0x00004c9f      4157           push r15
0x00004ca1      4156           push r14
0x00004ca3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004ca8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004cad      e88ecfffff     call sym.imp.__fprintf_chk
0x00004cb2      4883c430       add rsp, 0x30
0x00004cb6      4883c428       add rsp, 0x28
0x00004cba      5b             pop rbx
0x00004cbb      5d             pop rbp
0x00004cbc      415c           pop r12
0x00004cbe      415d           pop r13
0x00004cc0      415e           pop r14
0x00004cc2      415f           pop r15
0x00004cc4      c3             ret
0x00004cc5      0f1f00         nop dword [rax]
0x00004cc8      4989c8         mov r8, rcx
0x00004ccb      4889d1         mov rcx, rdx
0x00004cce      488d15df6000.  lea rdx, str.s__s                       ; 0xadb4 ; "%s %s\n"
0x00004cd5      be01000000     mov esi, 1
0x00004cda      31c0           xor eax, eax
0x00004cdc      e85fcfffff     call sym.imp.__fprintf_chk
0x00004ce1      e9e6feffff     jmp 0x4bcc
0x00004ce6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004cf0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004cf4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004cf8      488d35e96200.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xafe8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004cff      488b4310       mov rax, qword [rbx + 0x10]
0x00004d03      4c8b4308       mov r8, qword [rbx + 8]
0x00004d07      ba05000000     mov edx, 5
0x00004d0c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004d10      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004d14      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004d18      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004d1c      488b1b         mov rbx, qword [rbx]
0x00004d1f      4c89542418     mov qword [rsp + 0x18], r10
0x00004d24      4c894c2410     mov qword [rsp + 0x10], r9
0x00004d29      48890424       mov qword [rsp], rax
0x00004d2d      4c89442408     mov qword [rsp + 8], r8
0x00004d32      31ff           xor edi, edi
0x00004d34      e807ccffff     call sym.imp.dcgettext
0x00004d39      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004d3e      4152           push r10
0x00004d40      e93fffffff     jmp 0x4c84
0x00004d45      0f1f00         nop dword [rax]
0x00004d48      488b1b         mov rbx, qword [rbx]
0x00004d4b      488d356d6000.  lea rsi, str.Written_by__s.             ; 0xadbf ; "Written by %s.\n"
0x00004d52      ba05000000     mov edx, 5
0x00004d57      31ff           xor edi, edi
0x00004d59      e8e2cbffff     call sym.imp.dcgettext
0x00004d5e      4883c428       add rsp, 0x28
0x00004d62      4889d9         mov rcx, rbx
0x00004d65      4889ef         mov rdi, rbp
0x00004d68      5b             pop rbx
0x00004d69      5d             pop rbp
0x00004d6a      415c           pop r12
0x00004d6c      415d           pop r13
0x00004d6e      415e           pop r14
0x00004d70      415f           pop r15
0x00004d72      4889c2         mov rdx, rax
0x00004d75      be01000000     mov esi, 1
0x00004d7a      31c0           xor eax, eax
0x00004d7c      e9bfceffff     jmp sym.imp.__fprintf_chk
0x00004d81      0f1f80000000.  nop dword [rax]
0x00004d88      4c8b6308       mov r12, qword [rbx + 8]
0x00004d8c      488d353c6000.  lea rsi, str.Written_by__s_and__s.      ; 0xadcf ; "Written by %s and %s.\n"
0x00004d93      488b1b         mov rbx, qword [rbx]
0x00004d96      ba05000000     mov edx, 5
0x00004d9b      31ff           xor edi, edi
0x00004d9d      e89ecbffff     call sym.imp.dcgettext
0x00004da2      4883c428       add rsp, 0x28
0x00004da6      4d89e0         mov r8, r12
0x00004da9      4889d9         mov rcx, rbx
0x00004dac      4889ef         mov rdi, rbp
0x00004daf      4889c2         mov rdx, rax
0x00004db2      be01000000     mov esi, 1
0x00004db7      5b             pop rbx
0x00004db8      5d             pop rbp
0x00004db9      415c           pop r12
0x00004dbb      415d           pop r13
0x00004dbd      415e           pop r14
0x00004dbf      415f           pop r15
0x00004dc1      31c0           xor eax, eax
0x00004dc3      e978ceffff     jmp sym.imp.__fprintf_chk
0x00004dc8      0f1f84000000.  nop dword [rax + rax]
0x00004dd0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004dd4      4c8b6308       mov r12, qword [rbx + 8]
0x00004dd8      488d35076000.  lea rsi, str.Written_by__s___s__and__s. ; 0xade6 ; "Written by %s, %s, and %s.\n"
0x00004ddf      488b1b         mov rbx, qword [rbx]
0x00004de2      ba05000000     mov edx, 5
0x00004de7      31ff           xor edi, edi
0x00004de9      e852cbffff     call sym.imp.dcgettext
0x00004dee      4883c428       add rsp, 0x28
0x00004df2      4d89e9         mov r9, r13
0x00004df5      4d89e0         mov r8, r12
0x00004df8      4889d9         mov rcx, rbx
0x00004dfb      4889ef         mov rdi, rbp
0x00004dfe      4889c2         mov rdx, rax
0x00004e01      5b             pop rbx
0x00004e02      5d             pop rbp
0x00004e03      415c           pop r12
0x00004e05      415d           pop r13
0x00004e07      415e           pop r14
0x00004e09      415f           pop r15
0x00004e0b      be01000000     mov esi, 1
0x00004e10      31c0           xor eax, eax
0x00004e12      e929ceffff     jmp sym.imp.__fprintf_chk
0x00004e17      660f1f840000.  nop word [rax + rax]
0x00004e20      488d35f16000.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xaf18 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004e27      ba05000000     mov edx, 5
0x00004e2c      31ff           xor edi, edi
0x00004e2e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004e32      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004e36      4c8b6308       mov r12, qword [rbx + 8]
0x00004e3a      488b1b         mov rbx, qword [rbx]
0x00004e3d      e8fecaffff     call sym.imp.dcgettext
0x00004e42      4883ec08       sub rsp, 8
0x00004e46      4156           push r14
0x00004e48      4889c2         mov rdx, rax
0x00004e4b      4d89e9         mov r9, r13
0x00004e4e      4d89e0         mov r8, r12
0x00004e51      4889d9         mov rcx, rbx
0x00004e54      4889ef         mov rdi, rbp
0x00004e57      be01000000     mov esi, 1
0x00004e5c      31c0           xor eax, eax
0x00004e5e      e8ddcdffff     call sym.imp.__fprintf_chk
0x00004e63      58             pop rax
0x00004e64      5a             pop rdx
0x00004e65      4883c428       add rsp, 0x28
0x00004e69      5b             pop rbx
0x00004e6a      5d             pop rbp
0x00004e6b      415c           pop r12
0x00004e6d      415d           pop r13
0x00004e6f      415e           pop r14
0x00004e71      415f           pop r15
0x00004e73      c3             ret
0x00004e74      0f1f4000       nop dword [rax]
0x00004e78      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004e7c      488d35b56000.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xaf38 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004e83      ba05000000     mov edx, 5
0x00004e88      31ff           xor edi, edi
0x00004e8a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004e8e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004e92      4c8b6308       mov r12, qword [rbx + 8]
0x00004e96      488b1b         mov rbx, qword [rbx]
0x00004e99      e8a2caffff     call sym.imp.dcgettext
0x00004e9e      4157           push r15
0x00004ea0      eba4           jmp 0x4e46
0x00004ea2      660f1f440000   nop word [rax + rax]
0x00004ea8      4c8b4308       mov r8, qword [rbx + 8]
0x00004eac      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004eb0      488d35a96000.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xaf60 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004eb7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004ebb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004ebf      ba05000000     mov edx, 5
0x00004ec4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004ec8      31ff           xor edi, edi
0x00004eca      488b1b         mov rbx, qword [rbx]
0x00004ecd      4c890424       mov qword [rsp], r8
0x00004ed1      e86acaffff     call sym.imp.dcgettext
0x00004ed6      4883ec08       sub rsp, 8
0x00004eda      4d89e9         mov r9, r13
0x00004edd      4154           push r12
0x00004edf      4157           push r15
0x00004ee1      4156           push r14
0x00004ee3      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004ee8      4889d9         mov rcx, rbx
0x00004eeb      4889c2         mov rdx, rax
0x00004eee      4889ef         mov rdi, rbp
0x00004ef1      be01000000     mov esi, 1
0x00004ef6      31c0           xor eax, eax
0x00004ef8      e843cdffff     call sym.imp.__fprintf_chk
0x00004efd      4883c420       add rsp, 0x20
0x00004f01      4883c428       add rsp, 0x28
0x00004f05      5b             pop rbx
0x00004f06      5d             pop rbp
0x00004f07      415c           pop r12
0x00004f09      415d           pop r13
0x00004f0b      415e           pop r14
0x00004f0d      415f           pop r15
0x00004f0f      c3             ret
0x00004f10      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004f14      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004f18      488d35696000.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xaf88 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004f1f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004f23      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f27      ba05000000     mov edx, 5
0x00004f2c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f30      4c8b4308       mov r8, qword [rbx + 8]
0x00004f34      31ff           xor edi, edi
0x00004f36      4c894c2408     mov qword [rsp + 8], r9
0x00004f3b      488b1b         mov rbx, qword [rbx]
0x00004f3e      4c890424       mov qword [rsp], r8
0x00004f42      e8f9c9ffff     call sym.imp.dcgettext
0x00004f47      4155           push r13
0x00004f49      4154           push r12
0x00004f4b      4157           push r15
0x00004f4d      4156           push r14
0x00004f4f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004f54      eb8d           jmp 0x4ee3
0x00004f56      662e0f1f8400.  nop word cs:[rax + rax]
0x00004f60      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004f64      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004f68      ba05000000     mov edx, 5
0x00004f6d      488b4310       mov rax, qword [rbx + 0x10]
0x00004f71      4c8b4308       mov r8, qword [rbx + 8]
0x00004f75      488d35a46000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xb020 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00004f7c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004f80      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004f84      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f88      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f8c      4c89542418     mov qword [rsp + 0x18], r10
0x00004f91      4c894c2410     mov qword [rsp + 0x10], r9
0x00004f96      48890424       mov qword [rsp], rax
0x00004f9a      4c89442408     mov qword [rsp + 8], r8
0x00004f9f      488b1b         mov rbx, qword [rbx]
0x00004fa2      e98bfdffff     jmp 0x4d32
0x00004fa7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004fb0      4531c9         xor r9d, r9d
0x00004fb3      49833800       cmp qword [r8], 0
0x00004fb7      7412           je 0x4fcb
0x00004fb9      0f1f80000000.  nop dword [rax]
0x00004fc0      4983c101       add r9, 1
0x00004fc4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004fc9      75f5           jne 0x4fc0
0x00004fcb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004fd0      4883ec68       sub rsp, 0x68
0x00004fd4      4d89c2         mov r10, r8
0x00004fd7      4531c9         xor r9d, r9d
0x00004fda      64488b042528.  mov rax, qword fs:[0x28]
0x00004fe3      4889442458     mov qword [rsp + 0x58], rax
0x00004fe8      31c0           xor eax, eax
0x00004fea      4989e0         mov r8, rsp
0x00004fed      0f1f00         nop dword [rax]
0x00004ff0      418b02         mov eax, dword [r10]
0x00004ff3      83f82f         cmp eax, 0x2f
0x00004ff6      7742           ja 0x503a
0x00004ff8      4189c3         mov r11d, eax
0x00004ffb      4d035a10       add r11, qword [r10 + 0x10]
0x00004fff      83c008         add eax, 8
0x00005002      418902         mov dword [r10], eax
0x00005005      498b03         mov rax, qword [r11]
0x00005008      4885c0         test rax, rax
0x0000500b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000500f      740a           je 0x501b
0x00005011      4983c101       add r9, 1
0x00005015      4983f90a       cmp r9, 0xa
0x00005019      75d5           jne 0x4ff0
0x0000501b      e870fbffff     call sym.version_etc_arn
0x00005020      488b442458     mov rax, qword [rsp + 0x58]
0x00005025      644833042528.  xor rax, qword fs:[0x28]
0x0000502e      7505           jne 0x5035
0x00005030      4883c468       add rsp, 0x68
0x00005034      c3             ret
0x00005035      e866c9ffff     call sym.imp.__stack_chk_fail
0x0000503a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000503e      498d4308       lea rax, [r11 + 8]
0x00005042      49894208       mov qword [r10 + 8], rax
0x00005046      ebbd           jmp 0x5005
0x00005048      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005050      55             push rbp
0x00005051      53             push rbx
0x00005052      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005058      4531db         xor r11d, r11d
0x0000505b      4881ecb80000.  sub rsp, 0xb8
0x00005062      64488b042528.  mov rax, qword fs:[0x28]
0x0000506b      4889442478     mov qword [rsp + 0x78], rax
0x00005070      31c0           xor eax, eax
0x00005072      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000507a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005082      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000508a      4c8d442420     lea r8, [rsp + 0x20]
0x0000508f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005097      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000509f      4889442410     mov qword [rsp + 0x10], rax
0x000050a4      488d84248000.  lea rax, [rsp + 0x80]
0x000050ac      4531c9         xor r9d, r9d
0x000050af      4889442418     mov qword [rsp + 0x18], rax
0x000050b4      4889c5         mov rbp, rax
0x000050b7      660f1f840000.  nop word [rax + rax]
0x000050c0      4183fa2f       cmp r10d, 0x2f
0x000050c4      7756           ja 0x511c
0x000050c6      4489d0         mov eax, r10d
0x000050c9      41bb01000000   mov r11d, 1
0x000050cf      4183c208       add r10d, 8
0x000050d3      4801e8         add rax, rbp
0x000050d6      488b00         mov rax, qword [rax]
0x000050d9      4885c0         test rax, rax
0x000050dc      4b8904c8       mov qword [r8 + r9*8], rax
0x000050e0      740a           je 0x50ec
0x000050e2      4983c101       add r9, 1
0x000050e6      4983f90a       cmp r9, 0xa
0x000050ea      75d4           jne 0x50c0
0x000050ec      4584db         test r11b, r11b
0x000050ef      7524           jne 0x5115
0x000050f1      e89afaffff     call sym.version_etc_arn
0x000050f6      488b442478     mov rax, qword [rsp + 0x78]
0x000050fb      644833042528.  xor rax, qword fs:[0x28]
0x00005104      750a           jne 0x5110
0x00005106      4881c4b80000.  add rsp, 0xb8
0x0000510d      5b             pop rbx
0x0000510e      5d             pop rbp
0x0000510f      c3             ret
0x00005110      e88bc8ffff     call sym.imp.__stack_chk_fail
0x00005115      4489542408     mov dword [rsp + 8], r10d
0x0000511a      ebd5           jmp 0x50f1
0x0000511c      4889d8         mov rax, rbx
0x0000511f      4883c308       add rbx, 8
0x00005123      ebb1           jmp 0x50d6
0x00005125      90             nop
0x00005126      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005130      53             push rbx
0x00005131      488d35ca5c00.  lea rsi, str.Report_bugs_to:__s         ; 0xae02 ; "\nReport bugs to: %s\n"
0x00005138      ba05000000     mov edx, 5
0x0000513d      31ff           xor edi, edi
0x0000513f      e8fcc7ffff     call sym.imp.dcgettext
0x00005144      488d15cc5c00.  lea rdx, str.bug_coreutils_gnu.org      ; 0xae17 ; "bug-coreutils@gnu.org"
0x0000514b      4889c6         mov rsi, rax
0x0000514e      bf01000000     mov edi, 1
0x00005153      31c0           xor eax, eax
0x00005155      e826caffff     call sym.imp.__printf_chk
0x0000515a      488d35cc5c00.  lea rsi, str.s_home_page:___s           ; 0xae2d ; "%s home page: <%s>\n"
0x00005161      ba05000000     mov edx, 5
0x00005166      31ff           xor edi, edi
0x00005168      e8d3c7ffff     call sym.imp.dcgettext
0x0000516d      488d0da45300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xa518 ; "https://www.gnu.org/software/coreutils/"
0x00005174      488d15c54a00.  lea rdx, str.GNU_coreutils              ; 0x9c40 ; "GNU coreutils"
0x0000517b      4889c6         mov rsi, rax
0x0000517e      bf01000000     mov edi, 1
0x00005183      31c0           xor eax, eax
0x00005185      e8f6c9ffff     call sym.imp.__printf_chk
0x0000518a      488b1df78e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00005191      488d35c85e00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xb060 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005198      31ff           xor edi, edi
0x0000519a      ba05000000     mov edx, 5
0x0000519f      e89cc7ffff     call sym.imp.dcgettext
0x000051a4      4889de         mov rsi, rbx
0x000051a7      4889c7         mov rdi, rax
0x000051aa      5b             pop rbx
0x000051ab      e9d0c8ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000051b0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000051b1      4889fb         mov rbx, rdi
0x000051b4      e847c9ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000051b9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000051bc      7505           jne 0x51c3
0x000051be      4885db         test rbx, rbx
0x000051c1      7502           jne 0x51c5
0x000051c3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000051c4      c3             ret
0x000051c5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000051ca      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000051d0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000051d3      48f7e6         mul rsi
0x000051d6      4889c7         mov rdi, rax
0x000051d9      0f90c0         seto al
0x000051dc      4885ff         test rdi, rdi
0x000051df      780a           js 0x51eb
0x000051e1      0fb6c0         movzx eax, al
0x000051e4      4885c0         test rax, rax
0x000051e7      7502           jne 0x51eb
0x000051e9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000051eb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000051ef      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000051f4      6690           nop
0x000051f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005200      ebae           jmp sym.xmalloc
0x00005202      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005206      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005210      4885f6         test rsi, rsi
0x00005213      53             push rbx
0x00005214      4889f3         mov rbx, rsi
0x00005217      7505           jne 0x521e
0x00005219      4885ff         test rdi, rdi
0x0000521c      751a           jne 0x5238
0x0000521e      4889de         mov rsi, rbx
0x00005221      e83ac9ffff     call sym.imp.realloc
0x00005226      4885c0         test rax, rax
0x00005229      7505           jne 0x5230
0x0000522b      4885db         test rbx, rbx
0x0000522e      7511           jne 0x5241                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005230      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005231      c3             ret
0x00005232      660f1f440000   nop word [rax + rax]
0x00005238      e853caffff     call sym..plt.got
0x0000523d      31c0           xor eax, eax
0x0000523f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005240      c3             ret
0x00005241      e8ba010000     call sym.xalloc_die
0x00005246      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005250      4889f0         mov rax, rsi
0x00005253      48f7e2         mul rdx
0x00005256      4889c6         mov rsi, rax
0x00005259      0f90c0         seto al
0x0000525c      4885f6         test rsi, rsi
0x0000525f      780a           js 0x526b
0x00005261      0fb6c0         movzx eax, al
0x00005264      4885c0         test rax, rax
0x00005267      7502           jne 0x526b
0x00005269      eba5           jmp sym.xrealloc
0x0000526b      4883ec08       sub rsp, 8
0x0000526f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005274      6690           nop
0x00005276      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005280      4885ff         test rdi, rdi
0x00005283      4989d1         mov r9, rdx
0x00005286      488b0e         mov rcx, qword [rsi]
0x00005289      7435           je 0x52c0
0x0000528b      31d2           xor edx, edx
0x0000528d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005297      49f7f1         div r9
0x0000529a      4839c8         cmp rax, rcx
0x0000529d      763c           jbe 0x52db
0x0000529f      4889c8         mov rax, rcx
0x000052a2      48d1e8         shr rax, 1
0x000052a5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000052aa      48890e         mov qword [rsi], rcx
0x000052ad      490fafc9       imul rcx, r9
0x000052b1      4889ce         mov rsi, rcx
0x000052b4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000052b9      0f1f80000000.  nop dword [rax]
0x000052c0      4885c9         test rcx, rcx
0x000052c3      7423           je 0x52e8
0x000052c5      4889c8         mov rax, rcx
0x000052c8      49f7e1         mul r9
0x000052cb      0f90c2         seto dl
0x000052ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000052d1      0fb6d2         movzx edx, dl
0x000052d4      7805           js 0x52db
0x000052d6      4885d2         test rdx, rdx
0x000052d9      74cf           je 0x52aa
0x000052db      4883ec08       sub rsp, 8
0x000052df      e81c010000     call sym.xalloc_die
0x000052e4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000052e8      31d2           xor edx, edx
0x000052ea      b880000000     mov eax, 0x80
0x000052ef      4531c0         xor r8d, r8d
0x000052f2      49f7f1         div r9
0x000052f5      4885c0         test rax, rax
0x000052f8      410f94c0       sete r8b
0x000052fc      498d0c00       lea rcx, [r8 + rax]
0x00005300      ebc3           jmp 0x52c5
0x00005302      0f1f4000       nop dword [rax]
0x00005306      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005310      4885ff         test rdi, rdi
0x00005313      488b06         mov rax, qword [rsi]
0x00005316      7428           je 0x5340
0x00005318      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005322      4839d0         cmp rax, rdx
0x00005325      772a           ja 0x5351
0x00005327      4889c2         mov rdx, rax
0x0000532a      48d1ea         shr rdx, 1
0x0000532d      488d440201     lea rax, [rdx + rax + 1]
0x00005332      488906         mov qword [rsi], rax
0x00005335      4889c6         mov rsi, rax
0x00005338      e9d3feffff     jmp sym.xrealloc
0x0000533d      0f1f00         nop dword [rax]
0x00005340      4885c0         test rax, rax
0x00005343      ba80000000     mov edx, 0x80
0x00005348      480f44c2       cmove rax, rdx
0x0000534c      4885c0         test rax, rax
0x0000534f      79e1           jns 0x5332
0x00005351      4883ec08       sub rsp, 8
0x00005355      e8a6000000     call sym.xalloc_die
0x0000535a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005360      53             push rbx
0x00005361      4889fb         mov rbx, rdi
0x00005364      e847feffff     call sym.xmalloc
0x00005369      4889da         mov rdx, rbx
0x0000536c      31f6           xor esi, esi
0x0000536e      4889c7         mov rdi, rax
0x00005371      5b             pop rbx
0x00005372      e999c6ffff     jmp sym.imp.memset
0x00005377      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005380      4889f8         mov rax, rdi
0x00005383      4883ec08       sub rsp, 8
0x00005387      48f7e6         mul rsi
0x0000538a      0f90c2         seto dl
0x0000538d      4885c0         test rax, rax
0x00005390      7817           js 0x53a9
0x00005392      0fb6d2         movzx edx, dl
0x00005395      4885d2         test rdx, rdx
0x00005398      750f           jne 0x53a9
0x0000539a      e8f1c6ffff     call sym.imp.calloc
0x0000539f      4885c0         test rax, rax
0x000053a2      7405           je 0x53a9
0x000053a4      4883c408       add rsp, 8
0x000053a8      c3             ret
0x000053a9      e852000000     call sym.xalloc_die
0x000053ae      6690           nop
;-- xmemdup:
0x000053b0      55             push rbp
0x000053b1      53             push rbx
0x000053b2      4889fd         mov rbp, rdi
0x000053b5      4889f7         mov rdi, rsi
0x000053b8      4889f3         mov rbx, rsi
0x000053bb      4883ec08       sub rsp, 8
0x000053bf      e8ecfdffff     call sym.xmalloc
0x000053c4      4883c408       add rsp, 8
0x000053c8      4889da         mov rdx, rbx
0x000053cb      4889ee         mov rsi, rbp
0x000053ce      5b             pop rbx
0x000053cf      5d             pop rbp
0x000053d0      4889c7         mov rdi, rax
0x000053d3      e9e8c6ffff     jmp sym.imp.memcpy
0x000053d8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000053e0      53             push rbx
0x000053e1      4889fb         mov rbx, rdi
0x000053e4      e877c5ffff     call sym.imp.strlen
0x000053e9      4889df         mov rdi, rbx
0x000053ec      488d7001       lea rsi, [rax + 1]
0x000053f0      5b             pop rbx
0x000053f1      ebbd           jmp sym.xmemdup
0x000053f3      662e0f1f8400.  nop word cs:[rax + rax]
0x000053fd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005400      488d35085d00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xb10f ; "memory exhausted"
0x00005407      4883ec08       sub rsp, 8
0x0000540b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005410      31ff           xor edi, edi
0x00005412      e829c5ffff     call sym.imp.dcgettext
0x00005417      8b3dfb8b2000   mov edi, dword [obj.exit_failure]       ; [0x20e018:4]=1
0x0000541d      488d156d5400.  lea rdx, [0x0000a891]                   ; "%s"
0x00005424      4889c1         mov rcx, rax
0x00005427      31f6           xor esi, esi
0x00005429      31c0           xor eax, eax
0x0000542b      e870c7ffff     call sym.imp.error
0x00005430      e85bc4ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005435      662e0f1f8400.  nop word cs:[rax + rax]
0x0000543f      90             nop
;-- xfts_open:
0x00005440      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:35
0x00005444      81ce00020000   or esi, 0x200                           ; ../coreutils-8.31/lib/xfts.c:36
0x0000544a      e851160000     call sym.rpl_fts_open
0x0000544f      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xfts.c:37
0x00005452      740c           je 0x5460
0x00005454      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:46
0x00005458      c3             ret
0x00005459      0f1f80000000.  nop dword [rax]
0x00005460      e83bc4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xfts.c:41
0x00005465      833816         cmp dword [rax], 0x16
0x00005468      7406           je 0x5470
0x0000546a      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xfts.c:42
0x0000546f      90             nop
0x00005470      488d0dd95c00.  lea rcx, obj.__PRETTY_FUNCTION__.3434   ; ../coreutils-8.31/lib/xfts.c:41 ; 0xb150 ; "xfts_open"
0x00005477      488d35a25c00.  lea rsi, str..._coreutils_8.31_lib_xfts.c ; 0xb120 ; "../coreutils-8.31/lib/xfts.c"
0x0000547e      488d3db85c00.  lea rdi, str.errno____EINVAL            ; 0xb13d ; "errno != EINVAL"
0x00005485      ba29000000     mov edx, 0x29                           ; ')'
0x0000548a      e871c5ffff     call sym.imp.__assert_fail
0x0000548f      90             nop
;-- cycle_warning_required:
0x00005490      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/xfts.c:57
0x00005493      b801000000     mov eax, 1
0x00005498      83e211         and edx, 0x11
0x0000549b      83fa10         cmp edx, 0x10                           ; ../coreutils-8.31/lib/xfts.c:63
0x0000549e      7407           je 0x54a7
0x000054a0      31c0           xor eax, eax
0x000054a2      83fa11         cmp edx, 0x11
0x000054a5      7409           je 0x54b0
0x000054a7      f3c3           ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x000054a9      0f1f80000000.  nop dword [rax]
0x000054b0      48837e5800     cmp qword [rsi + 0x58], 0               ; ../coreutils-8.31/lib/xfts.c:64
0x000054b5      0f95c0         setne al
0x000054b8      c3             ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x000054b9      0f1f80000000.  nop dword [rax]
;-- AD_compare:
0x000054c0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:33
0x000054c2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:37
0x000054c6      48395708       cmp qword [rdi + 8], rdx
0x000054ca      7404           je 0x54d0
0x000054cc      f3c3           ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x000054ce      6690           nop
0x000054d0      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts-cycle.c:37
0x000054d3      483907         cmp qword [rdi], rax
0x000054d6      0f94c0         sete al
0x000054d9      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x000054da      660f1f440000   nop word [rax + rax]
;-- AD_hash:
0x000054e0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:42
0x000054e4      31d2           xor edx, edx
0x000054e6      48f7f6         div rsi
0x000054e9      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts-cycle.c:45
0x000054ec      c3             ret
0x000054ed      0f1f00         nop dword [rax]
;-- dev_type_hash:
0x000054f0      488b07         mov rax, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:690
0x000054f3      31d2           xor edx, edx
0x000054f5      48f7f6         div rsi
0x000054f8      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:694
0x000054fb      c3             ret
0x000054fc      0f1f4000       nop dword [rax]
;-- dev_type_compare:
0x00005500      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:698
0x00005503      483907         cmp qword [rdi], rax
0x00005506      0f94c0         sete al
0x00005509      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:702
0x0000550a      660f1f440000   nop word [rax + rax]
;-- fts_compare_ino:
0x00005510      488b17         mov rdx, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:1226
0x00005513      488b06         mov rax, qword [rsi]
0x00005516      488b80800000.  mov rax, qword [rax + 0x80]             ; ../coreutils-8.31/lib/fts.c:1228
0x0000551d      483982800000.  cmp qword [rdx + 0x80], rax
0x00005524      720a           jb 0x5530
0x00005526      0f97c0         seta al
0x00005529      0fb6c0         movzx eax, al
0x0000552c      c3             ret
0x0000552d      0f1f00         nop dword [rax]
0x00005530      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005535      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1229
0x00005536      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_stat:
0x00005540      4154           push r12                                ; ../coreutils-8.31/lib/fts.c:1800
0x00005542      55             push rbp
0x00005543      4889f5         mov rbp, rsi
0x00005546      53             push rbx
0x00005547      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1803
0x0000554c      488d5e78       lea rbx, [rsi + 0x78]                   ; ../coreutils-8.31/lib/fts.c:1801
0x00005550      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/fts.c:1800
0x00005553      8b4748         mov eax, dword [rdi + 0x48]
0x00005556      488b7630       mov rsi, qword [rsi + 0x30]
0x0000555a      7564           jne 0x55c0                              ; ../coreutils-8.31/lib/fts.c:1803
0x0000555c      a801           test al, 1
0x0000555e      7460           je 0x55c0
0x00005560      4889da         mov rdx, rbx                            ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x00005563      bf01000000     mov edi, 1
0x00005568      e873c5ffff     call sym.imp.__xstat
0x0000556d      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1812
0x0000556f      747a           je 0x55eb
0x00005571      e82ac3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1813
0x00005576      4989c4         mov r12, rax
0x00005579      8b00           mov eax, dword [rax]
0x0000557b      83f802         cmp eax, 2
0x0000557e      0f840c010000   je 0x5690
0x00005584      488d7b08       lea rdi, [rbx + 8]                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00005588      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:1823
0x0000558b      48c745780000.  mov qword [rbp + 0x78], 0               ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00005593      48c783880000.  mov qword [rbx + 0x88], 0
0x0000559e      31c0           xor eax, eax
0x000055a0      4883e7f8       and rdi, 0xfffffffffffffff8
0x000055a4      4829fb         sub rbx, rdi
0x000055a7      8d8b90000000   lea ecx, [rbx + 0x90]
0x000055ad      c1e903         shr ecx, 3
0x000055b0      f348ab         rep stosq qword [rdi], rax
0x000055b3      b80a000000     mov eax, 0xa                            ; ../coreutils-8.31/lib/fts.c:1825
0x000055b8      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x000055b9      5d             pop rbp
0x000055ba      415c           pop r12
0x000055bc      c3             ret
0x000055bd      0f1f00         nop dword [rax]
0x000055c0      a802           test al, 2                              ; ../coreutils-8.31/lib/fts.c:1811
0x000055c2      759c           jne 0x5560
0x000055c4      84d2           test dl, dl
0x000055c6      7598           jne 0x5560
0x000055c8      4889f2         mov rdx, rsi                            ; stat.h:473   return __fxstatat (_STAT_VER, __fd, __filename, __statbuf, __flag);
0x000055cb      418b74242c     mov esi, dword [r12 + 0x2c]
0x000055d0      41b800010000   mov r8d, 0x100
0x000055d6      4889d9         mov rcx, rbx
0x000055d9      bf01000000     mov edi, 1
0x000055de      e8edc3ffff     call sym.imp.__fxstatat
0x000055e3      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1821
0x000055e5      0f8595000000   jne 0x5680
0x000055eb      8b8590000000   mov eax, dword [rbp + 0x90]             ; ../coreutils-8.31/lib/fts.c:1828
0x000055f1      2500f00000     and eax, 0xf000
0x000055f6      3d00400000     cmp eax, 0x4000
0x000055fb      7423           je 0x5620
0x000055fd      3d00a00000     cmp eax, 0xa000                         ; ../coreutils-8.31/lib/fts.c:1841
0x00005602      0f84d0000000   je 0x56d8
0x00005608      3d00800000     cmp eax, 0x8000                         ; ../coreutils-8.31/lib/fts.c:1844
0x0000560d      0f94c0         sete al
0x00005610      0fb6c0         movzx eax, al
0x00005613      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00005614      8d448003       lea eax, [rax + rax*4 + 3]              ; ../coreutils-8.31/lib/fts.c:1844
0x00005618      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00005619      415c           pop r12
0x0000561b      c3             ret
0x0000561c      0f1f4000       nop dword [rax]
0x00005620      488b85880000.  mov rax, qword [rbp + 0x88]             ; ../coreutils-8.31/lib/fts.c:1830
0x00005627      4883f801       cmp rax, 1                              ; ../coreutils-8.31/lib/fts.c:1833
0x0000562b      0f867f000000   jbe 0x56b0
0x00005631      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1831
0x00005636      7e78           jle 0x56b0
0x00005638      41f644244820   test byte [r12 + 0x48], 0x20
0x0000563e      488d50fe       lea rdx, [rax - 2]
0x00005642      480f44c2       cmove rax, rdx
0x00005646      80bd08010000.  cmp byte [rbp + 0x108], 0x2e            ; ../coreutils-8.31/lib/fts.c:1834
0x0000564d      48894568       mov qword [rbp + 0x68], rax             ; ../coreutils-8.31/lib/fts.c:1830
0x00005651      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1839
0x00005656      0f855cffffff   jne 0x55b8                              ; ../coreutils-8.31/lib/fts.c:1834
0x0000565c      80bd09010000.  cmp byte [rbp + 0x109], 0
0x00005663      0f857f000000   jne 0x56e8
0x00005669      48837d5801     cmp qword [rbp + 0x58], 1               ; ../coreutils-8.31/lib/fts.c:1839
0x0000566e      19c0           sbb eax, eax
0x00005670      83e0fc         and eax, 0xfffffffc                     ; 4294967292
0x00005673      83c005         add eax, 5
0x00005676      e93dffffff     jmp 0x55b8
0x0000567b      0f1f440000     nop dword [rax + rax]
0x00005680      e81bc2ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1823
0x00005685      8b00           mov eax, dword [rax]
0x00005687      e9f8feffff     jmp 0x5584
0x0000568c      0f1f4000       nop dword [rax]
0x00005690      488b7530       mov rsi, qword [rbp + 0x30]             ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005694      4889da         mov rdx, rbx
0x00005697      bf01000000     mov edi, 1
0x0000569c      e8cfc2ffff     call sym.imp.__lxstat
0x000056a1      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1814
0x000056a3      741b           je 0x56c0
0x000056a5      418b0424       mov eax, dword [r12]
0x000056a9      e9d6feffff     jmp 0x5584
0x000056ae      6690           nop
0x000056b0      48c7c0ffffff.  mov rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/fts.c:1833
0x000056b7      eb8d           jmp 0x5646
0x000056b9      0f1f80000000.  nop dword [rax]
0x000056c0      41c704240000.  mov dword [r12], 0                      ; ../coreutils-8.31/lib/fts.c:1815
0x000056c8      b80d000000     mov eax, 0xd                            ; ../coreutils-8.31/lib/fts.c:1816
0x000056cd      e9e6feffff     jmp 0x55b8
0x000056d2      660f1f440000   nop word [rax + rax]
0x000056d8      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/fts.c:1842
0x000056dd      e9d6feffff     jmp 0x55b8
0x000056e2      660f1f440000   nop word [rax + rax]
0x000056e8      8b9508010000   mov edx, dword [rbp + 0x108]            ; ../coreutils-8.31/lib/fts.c:1834
0x000056ee      81e200ffff00   and edx, 0xffff00
0x000056f4      81fa002e0000   cmp edx, 0x2e00                         ; ")\xdaH\x83\xfa\x06~EH\x8dp\xfaH\x8d=\xbdz"
0x000056fa      0f85b8feffff   jne 0x55b8
0x00005700      e964ffffff     jmp 0x5669
0x00005705      90             nop
0x00005706      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_sort:
0x00005710      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1864
0x00005712      4154           push r12
0x00005714      4989d4         mov r12, rdx
0x00005717      55             push rbp
0x00005718      53             push rbx
0x00005719      4889fd         mov rbp, rdi
0x0000571c      4889f3         mov rbx, rsi
0x0000571f      4883ec08       sub rsp, 8
0x00005723      48395538       cmp qword [rbp + 0x38], rdx             ; ../coreutils-8.31/lib/fts.c:1888
0x00005727      4c8b6f40       mov r13, qword [rdi + 0x40]             ; ../coreutils-8.31/lib/fts.c:1875
0x0000572b      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000572f      7334           jae 0x5765                              ; ../coreutils-8.31/lib/fts.c:1888
0x00005731      488d7228       lea rsi, [rdx + 0x28]                   ; ../coreutils-8.31/lib/fts.c:1891
0x00005735      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; ../coreutils-8.31/lib/fts.c:1892 ; 2305843009213693951
0x0000573f      4839c6         cmp rsi, rax
0x00005742      48897538       mov qword [rbp + 0x38], rsi             ; ../coreutils-8.31/lib/fts.c:1891
0x00005746      0f8798000000   ja 0x57e4                               ; ../coreutils-8.31/lib/fts.c:1892
0x0000574c      48c1e603       shl rsi, 3                              ; ../coreutils-8.31/lib/fts.c:1893
0x00005750      e80bc4ffff     call sym.imp.realloc
0x00005755      4885c0         test rax, rax
0x00005758      4889c7         mov rdi, rax
0x0000575b      0f847f000000   je 0x57e0
0x00005761      48894510       mov qword [rbp + 0x10], rax             ; ../coreutils-8.31/lib/fts.c:1900
0x00005765      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:1902
0x00005768      7417           je 0x5781
0x0000576a      4889fa         mov rdx, rdi
0x0000576d      0f1f00         nop dword [rax]
0x00005770      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1903
0x00005774      48895af8       mov qword [rdx - 8], rbx
0x00005778      488b5b10       mov rbx, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1902
0x0000577c      4885db         test rbx, rbx
0x0000577f      75ef           jne 0x5770
0x00005781      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/fts.c:1904
0x00005784      ba08000000     mov edx, 8
0x00005789      4c89e6         mov rsi, r12
0x0000578c      e85fc1ffff     call sym.imp.qsort
0x00005791      4c8b4510       mov r8, qword [rbp + 0x10]              ; ../coreutils-8.31/lib/fts.c:1905
0x00005795      4c89e1         mov rcx, r12
0x00005798      4883e901       sub rcx, 1
0x0000579c      498b00         mov rax, qword [r8]
0x0000579f      746f           je 0x5810
0x000057a1      4889c7         mov rdi, rax
0x000057a4      4c89c2         mov rdx, r8
0x000057a7      eb0a           jmp 0x57b3
0x000057a9      0f1f80000000.  nop dword [rax]
0x000057b0      488b3a         mov rdi, qword [rdx]
0x000057b3      488b7208       mov rsi, qword [rdx + 8]                ; ../coreutils-8.31/lib/fts.c:1906
0x000057b7      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1905
0x000057bb      4883e901       sub rcx, 1
0x000057bf      48897710       mov qword [rdi + 0x10], rsi             ; ../coreutils-8.31/lib/fts.c:1906
0x000057c3      75eb           jne 0x57b0                              ; ../coreutils-8.31/lib/fts.c:1905
0x000057c5      4b8b54e0f8     mov rdx, qword [r8 + r12*8 - 8]
0x000057ca      48c742100000.  mov qword [rdx + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1907
0x000057d2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x000057d6      5b             pop rbx
0x000057d7      5d             pop rbp
0x000057d8      415c           pop r12
0x000057da      415d           pop r13
0x000057dc      c3             ret
0x000057dd      0f1f00         nop dword [rax]
0x000057e0      488b7d10       mov rdi, qword [rbp + 0x10]
0x000057e4      e8a7c4ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1895
0x000057e9      48c745100000.  mov qword [rbp + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1896
0x000057f1      48c745380000.  mov qword [rbp + 0x38], 0               ; ../coreutils-8.31/lib/fts.c:1897
0x000057f9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x000057fd      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fts.c:1898
0x00005800      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1909
0x00005801      5d             pop rbp
0x00005802      415c           pop r12
0x00005804      415d           pop r13
0x00005806      c3             ret
0x00005807      660f1f840000.  nop word [rax + rax]
0x00005810      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/fts.c:1905
0x00005813      ebb5           jmp 0x57ca
0x00005815      90             nop
0x00005816      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_alloc:
0x00005820      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1914
0x00005822      4154           push r12
0x00005824      4989fc         mov r12, rdi
0x00005827      55             push rbp
0x00005828      488dba100100.  lea rdi, [rdx + 0x110]                  ; ../coreutils-8.31/lib/fts.c:1922
0x0000582f      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1914
0x00005830      4989f5         mov r13, rsi
0x00005833      4889d5         mov rbp, rdx
0x00005836      4883ec08       sub rsp, 8
0x0000583a      4883e7f8       and rdi, 0xfffffffffffffff8             ; ../coreutils-8.31/lib/fts.c:1922
0x0000583e      e8bdc2ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/fts.c:1923
0x00005843      4885c0         test rax, rax
0x00005846      4889c3         mov rbx, rax
0x00005849      7451           je 0x589c
0x0000584b      488db8080100.  lea rdi, [rax + 0x108]                  ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005852      4889ea         mov rdx, rbp
0x00005855      4c89ee         mov rsi, r13
0x00005858      e863c2ffff     call sym.imp.memcpy
0x0000585d      498b442420     mov rax, qword [r12 + 0x20]             ; ../coreutils-8.31/lib/fts.c:1932
0x00005862      c6842b080100.  mov byte [rbx + rbp + 0x108], 0         ; ../coreutils-8.31/lib/fts.c:1928
0x0000586a      48896b60       mov qword [rbx + 0x60], rbp             ; ../coreutils-8.31/lib/fts.c:1930
0x0000586e      4c896350       mov qword [rbx + 0x50], r12             ; ../coreutils-8.31/lib/fts.c:1931
0x00005872      c74340000000.  mov dword [rbx + 0x40], 0               ; ../coreutils-8.31/lib/fts.c:1933
0x00005879      48c743180000.  mov qword [rbx + 0x18], 0               ; ../coreutils-8.31/lib/fts.c:1934
0x00005881      48894338       mov qword [rbx + 0x38], rax             ; ../coreutils-8.31/lib/fts.c:1932
0x00005885      c74372000003.  mov dword [rbx + 0x72], 0x30000         ; ../coreutils-8.31/lib/fts.c:1935 ; [0x30000:4]=-1
0x0000588c      48c743200000.  mov qword [rbx + 0x20], 0               ; ../coreutils-8.31/lib/fts.c:1937
0x00005894      48c743280000.  mov qword [rbx + 0x28], 0               ; ../coreutils-8.31/lib/fts.c:1938
0x0000589c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1940
0x000058a0      4889d8         mov rax, rbx
0x000058a3      5b             pop rbx
0x000058a4      5d             pop rbp
0x000058a5      415c           pop r12
0x000058a7      415d           pop r13
0x000058a9      c3             ret
0x000058aa      660f1f440000   nop word [rax + rax]
;-- fts_lfree:
0x000058b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1945
0x000058b3      743b           je 0x58f0
0x000058b5      55             push rbp
0x000058b6      53             push rbx
0x000058b7      4889fb         mov rbx, rdi
0x000058ba      4883ec08       sub rsp, 8
0x000058be      6690           nop
0x000058c0      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/fts.c:1951
0x000058c4      488b6b10       mov rbp, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1950
0x000058c8      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1951
0x000058cb      7405           je 0x58d2
0x000058cd      e87ec1ffff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/fts.c:1952
0x000058d2      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:1953
0x000058d5      4889eb         mov rbx, rbp
0x000058d8      e8b3c3ffff     call sym..plt.got
0x000058dd      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/fts.c:1949
0x000058e0      75de           jne 0x58c0
0x000058e2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1955
0x000058e6      5b             pop rbx
0x000058e7      5d             pop rbp
0x000058e8      c3             ret
0x000058e9      0f1f80000000.  nop dword [rax]
0x000058f0      f3c3           ret
0x000058f2      0f1f4000       nop dword [rax]
0x000058f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fd_ring_clear:
0x00005900      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:277
0x00005901      4889fb         mov rbx, rdi
0x00005904      eb16           jmp 0x591c                              ; ../coreutils-8.31/lib/fts.c:278
0x00005906      662e0f1f8400.  nop word cs:[rax + rax]
0x00005910      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:280
0x00005913      e8e8360000     call sym.i_ring_pop
0x00005918      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:281
0x0000591a      7914           jns 0x5930
0x0000591c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:278
0x0000591f      e88c360000     call sym.i_ring_empty
0x00005924      84c0           test al, al
0x00005926      74e8           je 0x5910
0x00005928      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:284
0x00005929      c3             ret
0x0000592a      660f1f440000   nop word [rax + rax]
0x00005930      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:282
0x00005932      e8f9c0ffff     call sym.imp.close
0x00005937      ebe3           jmp 0x591c
0x00005939      0f1f80000000.  nop dword [rax]
;-- filesystem_type:
0x00005940      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:710
0x00005942      4154           push r12
0x00005944      55             push rbp
0x00005945      53             push rbx
0x00005946      4881ec980000.  sub rsp, 0x98
0x0000594d      488b5f50       mov rbx, qword [rdi + 0x50]             ; ../coreutils-8.31/lib/fts.c:711
0x00005951      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/fts.c:710
0x0000595a      488984248800.  mov qword [rsp + 0x88], rax
0x00005962      31c0           xor eax, eax
0x00005964      f6434902       test byte [rbx + 0x49], 2               ; ../coreutils-8.31/lib/fts.c:718
0x00005968      7468           je 0x59d2
0x0000596a      4c8b6350       mov r12, qword [rbx + 0x50]             ; ../coreutils-8.31/lib/fts.c:712
0x0000596e      4889fd         mov rbp, rdi
0x00005971      4189f5         mov r13d, esi
0x00005974      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:721
0x00005977      7427           je 0x59a0
0x00005979      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:728
0x0000597d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts.c:729
0x00005980      4c89e7         mov rdi, r12
0x00005983      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/fts.c:728
0x00005987      e824290000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/fts.c:729
0x0000598c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:730
0x0000598f      743c           je 0x59cd
0x00005991      488b5808       mov rbx, qword [rax + 8]                ; ../coreutils-8.31/lib/fts.c:731
0x00005995      eb3d           jmp 0x59d4
0x00005997      660f1f840000.  nop word [rax + rax]
0x000059a0      4c8b05198620.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts.c:723 ; [0x20dfc0:8]=0
0x000059a7      488d0d52fbff.  lea rcx, sym.dev_type_compare           ; 0x5500 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x000059ae      488d153bfbff.  lea rdx, sym.dev_type_hash              ; 0x54f0 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x000059b5      31f6           xor esi, esi
0x000059b7      bf0d000000     mov edi, 0xd
0x000059bc      e85f2b0000     call sym.hash_initialize
0x000059c1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:725
0x000059c4      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:723
0x000059c7      48894350       mov qword [rbx + 0x50], rax
0x000059cb      75ac           jne 0x5979                              ; ../coreutils-8.31/lib/fts.c:725
0x000059cd      4585ed         test r13d, r13d                         ; ../coreutils-8.31/lib/fts.c:735
0x000059d0      792e           jns 0x5a00
0x000059d2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:719
0x000059d4      488b94248800.  mov rdx, qword [rsp + 0x88]             ; ../coreutils-8.31/lib/fts.c:755
0x000059dc      644833142528.  xor rdx, qword fs:[0x28]
0x000059e5      4889d8         mov rax, rbx
0x000059e8      7578           jne 0x5a62
0x000059ea      4881c4980000.  add rsp, 0x98
0x000059f1      5b             pop rbx
0x000059f2      5d             pop rbp
0x000059f3      415c           pop r12
0x000059f5      415d           pop r13
0x000059f7      c3             ret
0x000059f8      0f1f84000000.  nop dword [rax + rax]
0x00005a00      488d742410     lea rsi, [rsp + 0x10]                   ; ../coreutils-8.31/lib/fts.c:735
0x00005a05      4489ef         mov edi, r13d
0x00005a08      e8f3c1ffff     call sym.imp.fstatfs
0x00005a0d      85c0           test eax, eax
0x00005a0f      75c1           jne 0x59d2
0x00005a11      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:738
0x00005a14      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00005a19      74b9           je 0x59d4
0x00005a1b      bf10000000     mov edi, 0x10                           ; ../coreutils-8.31/lib/fts.c:740
0x00005a20      e8dbc0ffff     call sym.imp.malloc
0x00005a25      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:741
0x00005a28      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:740
0x00005a2b      74a7           je 0x59d4                               ; ../coreutils-8.31/lib/fts.c:741
0x00005a2d      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:743
0x00005a31      49895d08       mov qword [r13 + 8], rbx                ; ../coreutils-8.31/lib/fts.c:744
0x00005a35      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/fts.c:746
0x00005a38      4c89e7         mov rdi, r12
0x00005a3b      49894500       mov qword [r13], rax                    ; ../coreutils-8.31/lib/fts.c:743
0x00005a3f      e8dc320000     call sym.hash_insert                    ; ../coreutils-8.31/lib/fts.c:746
0x00005a44      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:747
0x00005a47      740f           je 0x5a58
0x00005a49      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/fts.c:748
0x00005a4c      7519           jne 0x5a67
0x00005a4e      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00005a53      e97cffffff     jmp 0x59d4                              ; ../coreutils-8.31/lib/fts.c:754
0x00005a58      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/fts.c:750
0x00005a5b      e830c2ffff     call sym..plt.got
0x00005a60      ebec           jmp 0x5a4e
0x00005a62      e839bfffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts.c:755
0x00005a67      e824beffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:748
0x00005a6c      0f1f4000       nop dword [rax]
;-- leaf_optimization:
0x00005a70      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/fts.c:793
0x00005a74      e8c7feffff     call sym.filesystem_type                ; ../coreutils-8.31/lib/fts.c:794
0x00005a79      483d73496552   cmp rax, 0x52654973
0x00005a7f      744f           je 0x5ad0
0x00005a81      7e2d           jle 0x5ab0
0x00005a83      483d42534658   cmp rax, 0x58465342
0x00005a89      7445           je 0x5ad0
0x00005a8b      ba424d53ff     mov edx, 0xff534d42
0x00005a90      4839d0         cmp rax, rdx
0x00005a93      7430           je 0x5ac5
0x00005a95      483d4f414653   cmp rax, 0x5346414f
0x00005a9b      7428           je 0x5ac5
0x00005a9d      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:825
0x00005aa2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00005aa6      c3             ret
0x00005aa7      660f1f840000.  nop word [rax + rax]
0x00005ab0      483d69690000   cmp rax, 0x6969                         ; ../coreutils-8.31/lib/fts.c:794
0x00005ab6      740d           je 0x5ac5
0x00005ab8      483da09f0000   cmp rax, 0x9fa0
0x00005abe      7405           je 0x5ac5
0x00005ac0      4885c0         test rax, rax
0x00005ac3      75d8           jne 0x5a9d
0x00005ac5      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:822
0x00005ac7      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00005acb      c3             ret
0x00005acc      0f1f4000       nop dword [rax]
0x00005ad0      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/fts.c:800
0x00005ad5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00005ad9      c3             ret
0x00005ada      660f1f440000   nop word [rax + rax]
;-- cwd_advance_fd:
0x00005ae0      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:306
0x00005ae1      53             push rbx
0x00005ae2      89f5           mov ebp, esi
0x00005ae4      4889fb         mov rbx, rdi
0x00005ae7      4883ec08       sub rsp, 8
0x00005aeb      8b772c         mov esi, dword [rdi + 0x2c]             ; ../coreutils-8.31/lib/fts.c:307
0x00005aee      39ee           cmp esi, ebp                            ; ../coreutils-8.31/lib/fts.c:308
0x00005af0      7505           jne 0x5af7
0x00005af2      83fe9c         cmp esi, 0xffffff9c
0x00005af5      754a           jne 0x5b41
0x00005af7      84d2           test dl, dl                             ; ../coreutils-8.31/lib/fts.c:310
0x00005af9      7515           jne 0x5b10
0x00005afb      f6434804       test byte [rbx + 0x48], 4               ; ../coreutils-8.31/lib/fts.c:321
0x00005aff      7504           jne 0x5b05
0x00005b01      85f6           test esi, esi
0x00005b03      792b           jns 0x5b30
0x00005b05      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00005b08      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x00005b0c      5b             pop rbx
0x00005b0d      5d             pop rbp
0x00005b0e      c3             ret
0x00005b0f      90             nop
0x00005b10      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:314
0x00005b14      e8a7340000     call sym.i_ring_push
0x00005b19      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:316
0x00005b1b      78e8           js 0x5b05
0x00005b1d      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:317
0x00005b1f      e80cbfffff     call sym.imp.close
0x00005b24      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00005b27      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x00005b2b      5b             pop rbx
0x00005b2c      5d             pop rbp
0x00005b2d      c3             ret
0x00005b2e      6690           nop
0x00005b30      89f7           mov edi, esi                            ; ../coreutils-8.31/lib/fts.c:322
0x00005b32      e8f9beffff     call sym.imp.close
0x00005b37      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00005b3a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x00005b3e      5b             pop rbx
0x00005b3f      5d             pop rbp
0x00005b40      c3             ret
0x00005b41      e84abdffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:308
0x00005b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- restore_initial_cwd:
0x00005b50      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:334
0x00005b51      53             push rbx
0x00005b52      4889fb         mov rbx, rdi
0x00005b55      4883ec08       sub rsp, 8
0x00005b59      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/fts.c:335
0x00005b5c      89d5           mov ebp, edx
0x00005b5e      83e504         and ebp, 4
0x00005b61      7545           jne 0x5ba8
0x00005b63      80e602         and dh, 2
0x00005b66      7528           jne 0x5b90
0x00005b68      8b7f28         mov edi, dword [rdi + 0x28]
0x00005b6b      31ed           xor ebp, ebp
0x00005b6d      e8debfffff     call sym.imp.fchdir
0x00005b72      85c0           test eax, eax
0x00005b74      400f95c5       setne bpl
0x00005b78      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:336
0x00005b7c      e87ffdffff     call sym.fd_ring_clear
0x00005b81      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:338
0x00005b85      89e8           mov eax, ebp
0x00005b87      5b             pop rbx
0x00005b88      5d             pop rbp
0x00005b89      c3             ret
0x00005b8a      660f1f440000   nop word [rax + rax]
0x00005b90      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:335
0x00005b95      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00005b9a      e841ffffff     call sym.cwd_advance_fd
0x00005b9f      ebd7           jmp 0x5b78
0x00005ba1      0f1f80000000.  nop dword [rax]
0x00005ba8      31ed           xor ebp, ebp
0x00005baa      ebcc           jmp 0x5b78
0x00005bac      0f1f4000       nop dword [rax]
;-- fts_palloc.isra.2:
0x00005bb0      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1966
0x00005bb1      488b0e         mov rcx, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:1969
0x00005bb4      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/fts.c:1966
0x00005bb7      488b3f         mov rdi, qword [rdi]
0x00005bba      488d84110001.  lea rax, [rcx + rdx + 0x100]            ; ../coreutils-8.31/lib/fts.c:1969
0x00005bc2      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/fts.c:1974
0x00005bc5      7721           ja 0x5be8
0x00005bc7      488906         mov qword [rsi], rax                    ; ../coreutils-8.31/lib/fts.c:1980
0x00005bca      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/fts.c:1981
0x00005bcd      e88ebfffff     call sym.imp.realloc
0x00005bd2      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1982
0x00005bd5      7431           je 0x5c08
0x00005bd7      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts.c:1987
0x00005bda      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1988
0x00005bdf      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00005be0      c3             ret
0x00005be1      0f1f80000000.  nop dword [rax]
0x00005be8      e8a3c0ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1975
0x00005bed      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1976
0x00005bf4      e8a7bcffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1977
0x00005bf9      c70024000000   mov dword [rax], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x00005bff      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:1978
0x00005c01      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00005c02      c3             ret
0x00005c03      0f1f440000     nop dword [rax + rax]
0x00005c08      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/fts.c:1983
0x00005c0b      e880c0ffff     call sym..plt.got
0x00005c10      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1984
0x00005c17      31c0           xor eax, eax
0x00005c19      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00005c1a      c3             ret
0x00005c1b      0f1f440000     nop dword [rax + rax]
;-- setup_dir.isra.4:
0x00005c20      81e702010000   and edi, 0x102                          ; ../coreutils-8.31/lib/fts-cycle.c:50
0x00005c26      53             push rbx
0x00005c27      4889f3         mov rbx, rsi
0x00005c2a      7434           je 0x5c60                               ; ../coreutils-8.31/lib/fts-cycle.c:52
0x00005c2c      4c8b058d8320.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts-cycle.c:55 ; [0x20dfc0:8]=0
0x00005c33      488d0d86f8ff.  lea rcx, sym.AD_compare                 ; 0x54c0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x00005c3a      488d159ff8ff.  lea rdx, sym.AD_hash                    ; 0x54e0 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x00005c41      31f6           xor esi, esi
0x00005c43      bf1f000000     mov edi, 0x1f
0x00005c48      e8d3280000     call sym.hash_initialize
0x00005c4d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:57
0x00005c50      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts-cycle.c:55
0x00005c53      0f95c0         setne al                                ; ../coreutils-8.31/lib/fts-cycle.c:57
0x00005c56      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x00005c57      c3             ret
0x00005c58      0f1f84000000.  nop dword [rax + rax]
0x00005c60      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/fts-cycle.c:62 ; "@"
0x00005c65      e896beffff     call sym.imp.malloc
0x00005c6a      4889c7         mov rdi, rax
0x00005c6d      488903         mov qword [rbx], rax
0x00005c70      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:64
0x00005c72      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts-cycle.c:63
0x00005c75      74df           je 0x5c56
0x00005c77      e8c41e0000     call sym.cycle_check_init               ; ../coreutils-8.31/lib/fts-cycle.c:65
0x00005c7c      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts-cycle.c:68
0x00005c81      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x00005c82      c3             ret
0x00005c83      0f1f00         nop dword [rax]
0x00005c86      662e0f1f8400.  nop word cs:[rax + rax]
;-- diropen.isra.6:
0x00005c90      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:346
0x00005c93      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/fts.c:349
0x00005c95      c1e20d         shl edx, 0xd
0x00005c98      81e200000200   and edx, 0x20000
0x00005c9e      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/fts.c:348
0x00005ca4      81e600020000   and esi, 0x200                          ; ../coreutils-8.31/lib/fts.c:353
0x00005caa      7514           jne 0x5cc0
0x00005cac      4889c7         mov rdi, rax
0x00005caf      89d6           mov esi, edx
0x00005cb1      31c0           xor eax, eax
0x00005cb3      e9281f0000     jmp sym.open_safer
0x00005cb8      0f1f84000000.  nop dword [rax + rax]
0x00005cc0      4889c6         mov rsi, rax
0x00005cc3      31c0           xor eax, eax
0x00005cc5      e916340000     jmp sym.openat_safer
0x00005cca      660f1f440000   nop word [rax + rax]
;-- fts_safe_changedir:
0x00005cd0      4157           push r15                                ; ../coreutils-8.31/lib/fts.c:2044
0x00005cd2      4156           push r14
0x00005cd4      4989f6         mov r14, rsi
0x00005cd7      4155           push r13
0x00005cd9      4154           push r12
0x00005cdb      4989fd         mov r13, rdi
0x00005cde      55             push rbp
0x00005cdf      53             push rbx
0x00005ce0      4189d4         mov r12d, edx
0x00005ce3      4889cd         mov rbp, rcx
0x00005ce6      4881ecb80000.  sub rsp, 0xb8
0x00005ced      8b5f48         mov ebx, dword [rdi + 0x48]
0x00005cf0      64488b042528.  mov rax, qword fs:[0x28]
0x00005cf9      48898424a800.  mov qword [rsp + 0xa8], rax
0x00005d01      31c0           xor eax, eax
0x00005d03      4189d9         mov r9d, ebx
0x00005d06      4183e104       and r9d, 4
0x00005d0a      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/fts.c:2046
0x00005d0d      0f84ad000000   je 0x5dc0
0x00005d13      488d15405400.  lea rdx, [0x0000b15a]                   ; ".."
0x00005d1a      b903000000     mov ecx, 3
0x00005d1f      4889ee         mov rsi, rbp
0x00005d22      4889d7         mov rdi, rdx
0x00005d25      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005d27      0f97c0         seta al
0x00005d2a      1c00           sbb al, 0
0x00005d2c      84c0           test al, al
0x00005d2e      0f858c000000   jne 0x5dc0
0x00005d34      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x00005d37      0f8588000000   jne 0x5dc5
0x00005d3d      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2060
0x00005d40      0f89e4010000   jns 0x5f2a
0x00005d46      f6c702         test bh, 2
0x00005d49      0f8541010000   jne 0x5e90
0x00005d4f      c644240f01     mov byte [rsp + 0xf], 1
0x00005d54      418b7d2c       mov edi, dword [r13 + 0x2c]             ; ../coreutils-8.31/lib/fts.c:2082
0x00005d58      4889ea         mov rdx, rbp
0x00005d5b      89de           mov esi, ebx
0x00005d5d      e82effffff     call sym.diropen.isra.6
0x00005d62      85c0           test eax, eax
0x00005d64      4189c7         mov r15d, eax
0x00005d67      0f88ae010000   js 0x5f1b
0x00005d6d      418b5d48       mov ebx, dword [r13 + 0x48]
0x00005d71      f6c302         test bl, 2                              ; ../coreutils-8.31/lib/fts.c:2092
0x00005d74      0f84a0000000   je 0x5e1a
0x00005d7a      660f1f440000   nop word [rax + rax]
0x00005d80      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x00005d85      4489fe         mov esi, r15d
0x00005d88      bf01000000     mov edi, 1
0x00005d8d      e89ebdffff     call sym.imp.__fxstat
0x00005d92      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:2096
0x00005d94      0f84c6000000   je 0x5e60
0x00005d9a      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:2099 ; -1
0x00005d9f      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2118
0x00005da2      7931           jns 0x5dd5
0x00005da4      e8f7baffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:2120
0x00005da9      448b20         mov r12d, dword [rax]
0x00005dac      4889c5         mov rbp, rax
0x00005daf      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts.c:2121
0x00005db2      e879bcffff     call sym.imp.close
0x00005db7      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fts.c:2122
0x00005dbb      eb18           jmp 0x5dd5
0x00005dbd      0f1f00         nop dword [rax]
0x00005dc0      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x00005dc3      743b           je 0x5e00
0x00005dc5      80e702         and bh, 2                               ; ../coreutils-8.31/lib/fts.c:2055
0x00005dc8      7409           je 0x5dd3
0x00005dca      4585e4         test r12d, r12d
0x00005dcd      0f89ad000000   jns 0x5e80
0x00005dd3      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:2057
0x00005dd5      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x00005ddd      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005de6      89d8           mov eax, ebx
0x00005de8      0f8537010000   jne 0x5f25
0x00005dee      4881c4b80000.  add rsp, 0xb8
0x00005df5      5b             pop rbx
0x00005df6      5d             pop rbp
0x00005df7      415c           pop r12
0x00005df9      415d           pop r13                                 ; ../coreutils-8.31/lib/fts-cycle.c:2014
0x00005dfb      415e           pop r14
0x00005dfd      415f           pop r15
0x00005dff      c3             ret
0x00005e00      4585e4         test r12d, r12d
0x00005e03      0f8837010000   js 0x5f40
0x00005e09      f6c302         test bl, 2
0x00005e0c      4589e7         mov r15d, r12d
0x00005e0f      c644240f00     mov byte [rsp + 0xf], 0
0x00005e14      0f8566ffffff   jne 0x5d80
0x00005e1a      4885ed         test rbp, rbp
0x00005e1d      7421           je 0x5e40
0x00005e1f      488d15345300.  lea rdx, [0x0000b15a]                   ; ".."
0x00005e26      b903000000     mov ecx, 3
0x00005e2b      4889ee         mov rsi, rbp
0x00005e2e      4889d7         mov rdi, rdx
0x00005e31      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005e33      0f97c0         seta al                                 ; ../coreutils-8.31/lib/fts-cycle.c:2010
0x00005e36      1c00           sbb al, 0
0x00005e38      84c0           test al, al
0x00005e3a      0f8440ffffff   je 0x5d80
0x00005e40      80e702         and bh, 2
0x00005e43      0f858f000000   jne 0x5ed8
0x00005e49      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:1971
0x00005e4c      e8ffbcffff     call sym.imp.fchdir
0x00005e51      89c3           mov ebx, eax
0x00005e53      e947ffffff     jmp 0x5d9f
0x00005e58      0f1f84000000.  nop dword [rax + rax]
0x00005e60      488b442410     mov rax, qword [rsp + 0x10]
0x00005e65      49394678       cmp qword [r14 + 0x78], rax
0x00005e69      0f8491000000   je 0x5f00                               ; ../coreutils-8.31/lib/fts-cycle.c:1977
0x00005e6f      e82cbaffff     call sym.imp.__errno_location
0x00005e74      c70002000000   mov dword [rax], 2
0x00005e7a      e91bffffff     jmp 0x5d9a
0x00005e7f      90             nop
0x00005e80      4489e7         mov edi, r12d
0x00005e83      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00005e85      e8a6bbffff     call sym.imp.close
0x00005e8a      e946ffffff     jmp 0x5dd5
0x00005e8f      90             nop
0x00005e90      4d8d7d60       lea r15, [r13 + 0x60]
0x00005e94      4c89ff         mov rdi, r15
0x00005e97      e814310000     call sym.i_ring_empty
0x00005e9c      84c0           test al, al
0x00005e9e      8844240f       mov byte [rsp + 0xf], al
0x00005ea2      0f85acfeffff   jne 0x5d54
0x00005ea8      4c89ff         mov rdi, r15
0x00005eab      e850310000     call sym.i_ring_pop
0x00005eb0      85c0           test eax, eax
0x00005eb2      4189c7         mov r15d, eax
0x00005eb5      418b5d48       mov ebx, dword [r13 + 0x48]
0x00005eb9      0f8890feffff   js 0x5d4f                               ; ../coreutils-8.31/lib/fts-cycle.c:2006
0x00005ebf      f6c302         test bl, 2
0x00005ec2      4189c4         mov r12d, eax
0x00005ec5      c644240f01     mov byte [rsp + 0xf], 1
0x00005eca      0f8470ffffff   je 0x5e40
0x00005ed0      e9abfeffff     jmp 0x5d80
0x00005ed5      0f1f00         nop dword [rax]
0x00005ed8      440fb674240f   movzx r14d, byte [rsp + 0xf]
0x00005ede      4489fe         mov esi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:2029
0x00005ee1      4c89ef         mov rdi, r13
0x00005ee4      31db           xor ebx, ebx
0x00005ee6      4183f601       xor r14d, 1
0x00005eea      410fb6d6       movzx edx, r14b
0x00005eee      e8edfbffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00005ef3      e9ddfeffff     jmp 0x5dd5
0x00005ef8      0f1f84000000.  nop dword [rax + rax]
0x00005f00      488b442418     mov rax, qword [rsp + 0x18]
0x00005f05      493986800000.  cmp qword [r14 + 0x80], rax
0x00005f0c      0f855dffffff   jne 0x5e6f
0x00005f12      418b5d48       mov ebx, dword [r13 + 0x48]
0x00005f16      e925ffffff     jmp 0x5e40                              ; ../coreutils-8.31/lib/fts-cycle.c:-22
0x00005f1b      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts-cycle.c:-17 ; -1
0x00005f20      e9b0feffff     jmp 0x5dd5
0x00005f25      e876baffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts-cycle.c:-14
0x00005f2a      f6c302         test bl, 2
0x00005f2d      4589e7         mov r15d, r12d
0x00005f30      c644240f01     mov byte [rsp + 0xf], 1
0x00005f35      0f84ebfeffff   je 0x5e26                               ; ../coreutils-8.31/lib/fts-cycle.c:-4
0x00005f3b      e940feffff     jmp 0x5d80
0x00005f40      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/fts-cycle.c:-11
0x00005f45      e90afeffff     jmp 0x5d54
0x00005f4a      660f1f440000   nop word [rax + rax]
;-- enter_dir.isra.10:
0x00005f50      81e702010000   and edi, 0x102
0x00005f56      4154           push r12
0x00005f58      4989f4         mov r12, rsi
0x00005f5b      55             push rbp
0x00005f5c      53             push rbx                                ; ../coreutils-8.31/lib/fts-cycle.c:0
0x00005f5d      4889d3         mov rbx, rdx
0x00005f60      746e           je 0x5fd0
0x00005f62      bf18000000     mov edi, 0x18
0x00005f67      e894bbffff     call sym.imp.malloc
0x00005f6c      4885c0         test rax, rax
0x00005f6f      4889c5         mov rbp, rax
0x00005f72      0f8480000000   je 0x5ff8
0x00005f78      488b4378       mov rax, qword [rbx + 0x78]
0x00005f7c      498b3c24       mov rdi, qword [r12]
0x00005f80      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts-cycle.c:24
0x00005f83      48895d10       mov qword [rbp + 0x10], rbx
0x00005f87      48894500       mov qword [rbp], rax
0x00005f8b      488b83800000.  mov rax, qword [rbx + 0x80]
0x00005f92      48894508       mov qword [rbp + 8], rax
0x00005f96      e8852d0000     call sym.hash_insert
0x00005f9b      4839c5         cmp rbp, rax
0x00005f9e      4989c4         mov r12, rax
0x00005fa1      741e           je 0x5fc1
0x00005fa3      4889ef         mov rdi, rbp
0x00005fa6      e8e5bcffff     call sym..plt.got
0x00005fab      4d85e4         test r12, r12
0x00005fae      7448           je 0x5ff8
0x00005fb0      498b442410     mov rax, qword [r12 + 0x10]
0x00005fb5      b902000000     mov ecx, 2
0x00005fba      66894b70       mov word [rbx + 0x70], cx
0x00005fbe      488903         mov qword [rbx], rax
0x00005fc1      5b             pop rbx
0x00005fc2      b801000000     mov eax, 1
0x00005fc7      5d             pop rbp
0x00005fc8      415c           pop r12
0x00005fca      c3             ret
0x00005fcb      0f1f440000     nop dword [rax + rax]
0x00005fd0      498b3c24       mov rdi, qword [r12]                    ; ../coreutils-8.31/lib/fts-cycle.c:32
0x00005fd4      488d7278       lea rsi, [rdx + 0x78]
0x00005fd8      e8731b0000     call sym.cycle_check                    ; ../coreutils-8.31/lib/fts-cycle.c:45
0x00005fdd      84c0           test al, al
0x00005fdf      74e0           je 0x5fc1
0x00005fe1      ba02000000     mov edx, 2
0x00005fe6      48891b         mov qword [rbx], rbx
0x00005fe9      66895370       mov word [rbx + 0x70], dx
0x00005fed      5b             pop rbx
0x00005fee      5d             pop rbp
0x00005fef      415c           pop r12
0x00005ff1      c3             ret
0x00005ff2      660f1f440000   nop word [rax + rax]
0x00005ff8      5b             pop rbx
0x00005ff9      31c0           xor eax, eax
0x00005ffb      5d             pop rbp
0x00005ffc      415c           pop r12
0x00005ffe      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:50
0x00005fff      90             nop
;-- leave_dir.isra.12:
0x00006000      4883ec28       sub rsp, 0x28
0x00006004      4889f1         mov rcx, rsi
0x00006007      64488b042528.  mov rax, qword fs:[0x28]
0x00006010      4889442418     mov qword [rsp + 0x18], rax
0x00006015      31c0           xor eax, eax
0x00006017      81e702010000   and edi, 0x102
0x0000601d      7541           jne 0x6060                              ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0000601f      488b4208       mov rax, qword [rdx + 8]
0x00006023      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:36
0x00006026      741d           je 0x6045
0x00006028      4883785800     cmp qword [rax + 0x58], 0
0x0000602d      7816           js 0x6045
0x0000602f      488b0e         mov rcx, qword [rsi]
0x00006032      4883791000     cmp qword [rcx + 0x10], 0
0x00006037      747a           je 0x60b3
0x00006039      488bb2800000.  mov rsi, qword [rdx + 0x80]
0x00006040      483931         cmp qword [rcx], rsi
0x00006043      744b           je 0x6090
0x00006045      488b442418     mov rax, qword [rsp + 0x18]
0x0000604a      644833042528.  xor rax, qword fs:[0x28]
0x00006053      7559           jne 0x60ae
0x00006055      4883c428       add rsp, 0x28
0x00006059      c3             ret
0x0000605a      660f1f440000   nop word [rax + rax]
0x00006060      488b4278       mov rax, qword [rdx + 0x78]
0x00006064      488b39         mov rdi, qword [rcx]
0x00006067      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts-cycle.c:50
0x0000606a      48890424       mov qword [rsp], rax
0x0000606e      488b82800000.  mov rax, qword [rdx + 0x80]
0x00006075      4889442408     mov qword [rsp + 8], rax
0x0000607a      e8012d0000     call sym.hash_delete
0x0000607f      4885c0         test rax, rax
0x00006082      742f           je 0x60b3
0x00006084      4889c7         mov rdi, rax
0x00006087      e804bcffff     call sym..plt.got
0x0000608c      ebb7           jmp 0x6045
0x0000608e      6690           nop
0x00006090      488b7278       mov rsi, qword [rdx + 0x78]
0x00006094      48397108       cmp qword [rcx + 8], rsi
0x00006098      75ab           jne 0x6045
0x0000609a      488b5078       mov rdx, qword [rax + 0x78]
0x0000609e      488b80800000.  mov rax, qword [rax + 0x80]
0x000060a5      48895108       mov qword [rcx + 8], rdx                ; ../coreutils-8.31/lib/fts.c:1225
0x000060a9      488901         mov qword [rcx], rax
0x000060ac      eb97           jmp 0x6045
0x000060ae      e8edb8ffff     call sym.imp.__stack_chk_fail
0x000060b3      e8d8b7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:1228
0x000060b8      0f1f84000000.  nop dword [rax + rax]
;-- fts_build:
0x000060c0      4157           push r15
0x000060c2      4156           push r14
0x000060c4      4989ff         mov r15, rdi
0x000060c7      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1282
0x000060c9      4154           push r12
0x000060cb      55             push rbp
0x000060cc      53             push rbx
0x000060cd      4883ec78       sub rsp, 0x78
0x000060d1      488b2f         mov rbp, qword [rdi]
0x000060d4      64488b042528.  mov rax, qword fs:[0x28]
0x000060dd      4889442468     mov qword [rsp + 0x68], rax
0x000060e2      31c0           xor eax, eax
0x000060e4      89742458       mov dword [rsp + 0x58], esi             ; ../coreutils-8.31/lib/fts.c:1343
0x000060e8      488b4518       mov rax, qword [rbp + 0x18]
0x000060ec      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1349
0x000060ef      4889442450     mov qword [rsp + 0x50], rax
0x000060f4      0f8436040000   je 0x6530
0x000060fa      4889c7         mov rdi, rax
0x000060fd      e8aeb9ffff     call sym.imp.dirfd
0x00006102      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1344
0x00006104      89442464       mov dword [rsp + 0x64], eax
0x00006108      0f8852050000   js 0x6660
0x0000610e      49837f4000     cmp qword [r15 + 0x40], 0
0x00006113      0f84cf070000   je 0x68e8
0x00006119      48c7442438ff.  mov qword [rsp + 0x38], 0xffffffffffffffff
0x00006122      418b7f48       mov edi, dword [r15 + 0x48]
0x00006126      c644245f01     mov byte [rsp + 0x5f], 1
0x0000612b      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000612f      488b5538       mov rdx, qword [rbp + 0x38]             ; ../coreutils-8.31/lib/fts.c:1359
0x00006133      48c744244000.  mov qword [rsp + 0x40], 0
0x0000613c      807c0aff2f     cmp byte [rdx + rcx - 1], 0x2f
0x00006141      488d41ff       lea rax, [rcx - 1]                      ; ../coreutils-8.31/lib/fts.c:1351
0x00006145      480f45c1       cmovne rax, rcx
0x00006149      83e704         and edi, 4
0x0000614c      4889442448     mov qword [rsp + 0x48], rax
0x00006151      7410           je 0x6163
0x00006153      49034720       add rax, qword [r15 + 0x20]
0x00006157      488d5801       lea rbx, [rax + 1]
0x0000615b      c6002f         mov byte [rax], 0x2f                    ; ../coreutils-8.31/lib/fts.c:1360 ; '/'
                                                                       ; [0x2f:1]=0
0x0000615e      48895c2440     mov qword [rsp + 0x40], rbx
0x00006163      488b442448     mov rax, qword [rsp + 0x48]
0x00006168      498b5f30       mov rbx, qword [r15 + 0x30]
0x0000616c      c644245e00     mov byte [rsp + 0x5e], 0
0x00006171      c644245d00     mov byte [rsp + 0x5d], 0
0x00006176      48c744240800.  mov qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/fts.c:1298
0x0000617f      48c744241000.  mov qword [rsp + 0x10], 0
0x00006188      4883c001       add rax, 1
0x0000618c      48896c2420     mov qword [rsp + 0x20], rbp             ; ../coreutils-8.31/lib/fts.c:1306
0x00006191      4829c3         sub rbx, rax
0x00006194      4889442418     mov qword [rsp + 0x18], rax
0x00006199      488b4558       mov rax, qword [rbp + 0x58]
0x0000619d      48895c2428     mov qword [rsp + 0x28], rbx
0x000061a2      31db           xor ebx, ebx
0x000061a4      4883c001       add rax, 1
0x000061a8      4889442430     mov qword [rsp + 0x30], rax
0x000061ad      e9dd000000     jmp 0x628f
0x000061b2      660f1f440000   nop word [rax + rax]
0x000061b8      4d89f1         mov r9, r14                             ; ../coreutils-8.31/lib/fts.c:1328
0x000061bb      4c034c2418     add r9, qword [rsp + 0x18]
0x000061c0      0f825a080000   jb 0x6a20
0x000061c6      488b442430     mov rax, qword [rsp + 0x30]
0x000061cb      498db5080100.  lea rsi, [r13 + 0x108]
0x000061d2      49894558       mov qword [r13 + 0x58], rax
0x000061d6      498b07         mov rax, qword [r15]
0x000061d9      4d894d48       mov qword [r13 + 0x48], r9
0x000061dd      49894508       mov qword [r13 + 8], rax
0x000061e1      488b4500       mov rax, qword [rbp]
0x000061e5      498985800000.  mov qword [r13 + 0x80], rax             ; ../coreutils-8.31/lib/fts.c:71
0x000061ec      418b4748       mov eax, dword [r15 + 0x48]
0x000061f0      a804           test al, 4
0x000061f2      0f8568020000   jne 0x6460
0x000061f8      49897530       mov qword [r13 + 0x30], rsi
0x000061fc      49837f4000     cmp qword [r15 + 0x40], 0
0x00006201      7409           je 0x620c
0x00006203      f6c404         test ah, 4
0x00006206      0f84fc020000   je 0x6508
0x0000620c      0fb65512       movzx edx, byte [rbp + 0x12]
0x00006210      83e018         and eax, 0x18
0x00006213      89d6           mov esi, edx
0x00006215      83ea01         sub edx, 1
0x00006218      83f818         cmp eax, 0x18
0x0000621b      0f84af020000   je 0x64d0                               ; ../coreutils-8.31/lib/fts.c:1359
0x00006221      b90b000000     mov ecx, 0xb
0x00006226      83fa0b         cmp edx, 0xb
0x00006229      6641894d70     mov word [r13 + 0x70], cx
0x0000622e      0f8764020000   ja 0x6498
0x00006234      488d05254f00.  lea rax, obj.CSWTCH.53                  ; 0xb160
0x0000623b      8b0490         mov eax, dword [rax + rdx*4]
0x0000623e      418985900000.  mov dword [r13 + 0x90], eax
0x00006245      b802000000     mov eax, 2
0x0000624a      498985a80000.  mov qword [r13 + 0xa8], rax
0x00006251      48837c241000   cmp qword [rsp + 0x10], 0
0x00006257      49c745100000.  mov qword [r13 + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1237
0x0000625f      0f8423020000   je 0x6488
0x00006265      488b442408     mov rax, qword [rsp + 8]
0x0000626a      4c896810       mov qword [rax + 0x10], r13             ; ../coreutils-8.31/lib/fts.c:1247
0x0000626e      4881fb102700.  cmp rbx, 0x2710
0x00006275      0f84f5000000   je 0x6370
0x0000627b      4883c301       add rbx, 1
0x0000627f      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x00006284      0f833e010000   jae 0x63c8
0x0000628a      4c896c2408     mov qword [rsp + 8], r13
0x0000628f      488b442420     mov rax, qword [rsp + 0x20]
0x00006294      4c8b6818       mov r13, qword [rax + 0x18]             ; ../coreutils-8.31/lib/fts.c:1251
0x00006298      4d85ed         test r13, r13
0x0000629b      0f84c7040000   je 0x6768
0x000062a1      e8fab5ffff     call sym.imp.__errno_location
0x000062a6      4c89ef         mov rdi, r13
0x000062a9      c70000000000   mov dword [rax], 0
0x000062af      4989c4         mov r12, rax
0x000062b2      e839b8ffff     call sym.imp.readdir
0x000062b7      4885c0         test rax, rax
0x000062ba      4889c5         mov rbp, rax
0x000062bd      0f847d050000   je 0x6840
0x000062c3      41f6474820     test byte [r15 + 0x48], 0x20
0x000062c8      750a           jne 0x62d4
0x000062ca      8078132e       cmp byte [rax + 0x13], 0x2e
0x000062ce      0f84dc010000   je 0x64b0
0x000062d4      4c8d6d13       lea r13, [rbp + 0x13]
0x000062d8      4c89ef         mov rdi, r13
0x000062db      e880b6ffff     call sym.imp.strlen
0x000062e0      4c89ee         mov rsi, r13
0x000062e3      4889c2         mov rdx, rax
0x000062e6      4c89ff         mov rdi, r15
0x000062e9      4989c6         mov r14, rax
0x000062ec      e82ff5ffff     call sym.fts_alloc
0x000062f1      4885c0         test rax, rax
0x000062f4      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:1278
0x000062f7      0f8413040000   je 0x6710
0x000062fd      4c39742428     cmp qword [rsp + 0x28], r14
0x00006302      0f87b0feffff   ja 0x61b8
0x00006308      498b4720       mov rax, qword [r15 + 0x20]
0x0000630c      498d7730       lea rsi, [r15 + 0x30]
0x00006310      498d7f20       lea rdi, [r15 + 0x20]
0x00006314      4889442428     mov qword [rsp + 0x28], rax
0x00006319      488b442448     mov rax, qword [rsp + 0x48]
0x0000631e      4a8d543002     lea rdx, [rax + r14 + 2]
0x00006323      e888f8ffff     call sym.fts_palloc.isra.2
0x00006328      84c0           test al, al
0x0000632a      0f84e0030000   je 0x6710
0x00006330      498b5720       mov rdx, qword [r15 + 0x20]
0x00006334      483b542428     cmp rdx, qword [rsp + 0x28]
0x00006339      0f84e1010000   je 0x6520
0x0000633f      4803542418     add rdx, qword [rsp + 0x18]
0x00006344      41f6474804     test byte [r15 + 0x48], 4
0x00006349      480f44542440   cmove rdx, qword [rsp + 0x40]
0x0000634f      4889542440     mov qword [rsp + 0x40], rdx
0x00006354      498b4f30       mov rcx, qword [r15 + 0x30]
0x00006358      482b4c2418     sub rcx, qword [rsp + 0x18]
0x0000635d      8844245d       mov byte [rsp + 0x5d], al
0x00006361      48894c2428     mov qword [rsp + 0x28], rcx
0x00006366      e94dfeffff     jmp 0x61b8
0x0000636b      0f1f440000     nop dword [rax + rax]
0x00006370      49837f4000     cmp qword [r15 + 0x40], 0
0x00006375      0f8500ffffff   jne 0x627b
0x0000637b      8b742464       mov esi, dword [rsp + 0x64]
0x0000637f      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00006384      e8b7f5ffff     call sym.filesystem_type
0x00006389      483d94190201   cmp rax, 0x1021994
0x0000638f      0f846b030000   je 0x6700
0x00006395      b9424d53ff     mov ecx, 0xff534d42
0x0000639a      4839c8         cmp rax, rcx
0x0000639d      0f845d030000   je 0x6700
0x000063a3      483d69690000   cmp rax, 0x6969
0x000063a9      0f8451030000   je 0x6700
0x000063af      4883c301       add rbx, 1
0x000063b3      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x000063b8      c644245e01     mov byte [rsp + 0x5e], 1
0x000063bd      0f82c7feffff   jb 0x628a
0x000063c3      0f1f440000     nop dword [rax + rax]
0x000063c8      807c245d00     cmp byte [rsp + 0x5d], 0
0x000063cd      488b6c2420     mov rbp, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/fts.c:1664
0x000063d2      0f849e030000   je 0x6776
0x000063d8      498b4708       mov rax, qword [r15 + 8]
0x000063dc      498b4f20       mov rcx, qword [r15 + 0x20]
0x000063e0      4885c0         test rax, rax
0x000063e3      742b           je 0x6410
0x000063e5      0f1f00         nop dword [rax]
0x000063e8      488b5030       mov rdx, qword [rax + 0x30]             ; string_fortified.h:-312
0x000063ec      488db0080100.  lea rsi, [rax + 0x108]
0x000063f3      4839f2         cmp rdx, rsi
0x000063f6      740b           je 0x6403
0x000063f8      482b5038       sub rdx, qword [rax + 0x38]
0x000063fc      4801ca         add rdx, rcx
0x000063ff      48895030       mov qword [rax + 0x30], rdx
0x00006403      48894838       mov qword [rax + 0x38], rcx
0x00006407      488b4010       mov rax, qword [rax + 0x10]
0x0000640b      4885c0         test rax, rax
0x0000640e      75d8           jne 0x63e8
0x00006410      488b442410     mov rax, qword [rsp + 0x10]
0x00006415      eb0c           jmp 0x6423
0x00006417      660f1f840000.  nop word [rax + rax]
0x00006420      4889d0         mov rax, rdx
0x00006423      4883785800     cmp qword [rax + 0x58], 0
0x00006428      0f8848030000   js 0x6776
0x0000642e      488b5030       mov rdx, qword [rax + 0x30]
0x00006432      488db0080100.  lea rsi, [rax + 0x108]
0x00006439      4839f2         cmp rdx, rsi
0x0000643c      740b           je 0x6449
0x0000643e      482b5038       sub rdx, qword [rax + 0x38]
0x00006442      4801ca         add rdx, rcx
0x00006445      48895030       mov qword [rax + 0x30], rdx
0x00006449      488b5010       mov rdx, qword [rax + 0x10]
0x0000644d      48894838       mov qword [rax + 0x38], rcx
0x00006451      4885d2         test rdx, rdx
0x00006454      75ca           jne 0x6420
0x00006456      488b5008       mov rdx, qword [rax + 8]
0x0000645a      ebc4           jmp 0x6420
0x0000645c      0f1f4000       nop dword [rax]
0x00006460      498b4538       mov rax, qword [r13 + 0x38]
0x00006464      488b7c2440     mov rdi, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/fts.c:-185
0x00006469      49894530       mov qword [r13 + 0x30], rax
0x0000646d      498b4560       mov rax, qword [r13 + 0x60]
0x00006471      488d5001       lea rdx, [rax + 1]
0x00006475      e816b7ffff     call sym.imp.memmove
0x0000647a      418b4748       mov eax, dword [r15 + 0x48]
0x0000647e      e979fdffff     jmp 0x61fc
0x00006483      0f1f440000     nop dword [rax + rax]
0x00006488      4c896c2410     mov qword [rsp + 0x10], r13
0x0000648d      e9dcfdffff     jmp 0x626e
0x00006492      660f1f440000   nop word [rax + rax]
0x00006498      41c785900000.  mov dword [r13 + 0x90], 0
0x000064a3      b802000000     mov eax, 2
0x000064a8      e99dfdffff     jmp 0x624a
0x000064ad      0f1f00         nop dword [rax]
0x000064b0      80781400       cmp byte [rax + 0x14], 0
0x000064b4      740b           je 0x64c1
0x000064b6      668378142e     cmp word [rax + 0x14], 0x2e
0x000064bb      0f8513feffff   jne 0x62d4
0x000064c1      4c8b6c2408     mov r13, qword [rsp + 8]
0x000064c6      e9bffdffff     jmp 0x628a                              ; ../coreutils-8.31/lib/fts.c:860
0x000064cb      0f1f440000     nop dword [rax + rax]
0x000064d0      81e6fb000000   and esi, 0xfb
0x000064d6      0f8445fdffff   je 0x6221
0x000064dc      b80b000000     mov eax, 0xb
0x000064e1      83fa0b         cmp edx, 0xb                            ; ../coreutils-8.31/lib/fts.c:872
0x000064e4      6641894570     mov word [r13 + 0x70], ax
0x000064e9      0f8687050000   jbe 0x6a76
0x000064ef      41c785900000.  mov dword [r13 + 0x90], 0
0x000064fa      b801000000     mov eax, 1
0x000064ff      e946fdffff     jmp 0x624a
0x00006504      0f1f4000       nop dword [rax]
0x00006508      31d2           xor edx, edx
0x0000650a      4c89ee         mov rsi, r13
0x0000650d      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:926
0x00006510      e82bf0ffff     call sym.fts_stat
0x00006515      6641894570     mov word [r13 + 0x70], ax
0x0000651a      e932fdffff     jmp 0x6251
0x0000651f      90             nop
0x00006520      0fb644245d     movzx eax, byte [rsp + 0x5d]
0x00006525      e92afeffff     jmp 0x6354
0x0000652a      660f1f440000   nop word [rax + rax]
0x00006530      8b4748         mov eax, dword [rdi + 0x48]
0x00006533      89c2           mov edx, eax
0x00006535      83e210         and edx, 0x10
0x00006538      740d           je 0x6547
0x0000653a      a801           test al, 1
0x0000653c      ba00000200     mov edx, 0x20000                        ; ../coreutils-8.31/lib/fts.c:931
0x00006541      0f8501010000   jne 0x6648
0x00006547      2504020000     and eax, 0x204
0x0000654c      488b7530       mov rsi, qword [rbp + 0x30]
0x00006550      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00006555      3d00020000     cmp eax, 0x200
0x0000655a      7504           jne 0x6560
0x0000655c      418b7f2c       mov edi, dword [r15 + 0x2c]
0x00006560      488d4c2464     lea rcx, [rsp + 0x64]
0x00006565      e8e62b0000     call sym.opendirat                      ; ../coreutils-8.31/lib/fts.c:938
0x0000656a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:940
0x0000656d      48894518       mov qword [rbp + 0x18], rax
0x00006571      0f8419030000   je 0x6890
0x00006577      66837d700b     cmp word [rbp + 0x70], 0xb
0x0000657c      0f848e030000   je 0x6910
0x00006582      418b7f48       mov edi, dword [r15 + 0x48]
0x00006586      f7c700010000   test edi, 0x100
0x0000658c      0f851e010000   jne 0x66b0
0x00006592      49837f4001     cmp qword [r15 + 0x40], 1
0x00006597      4819c0         sbb rax, rax
0x0000659a      25a1860100     and eax, 0x186a1                        ; ../coreutils-8.31/lib/fts.c:943
0x0000659f      4883e801       sub rax, 1
0x000065a3      837c245802     cmp dword [rsp + 0x58], 2
0x000065a8      4889442438     mov qword [rsp + 0x38], rax
0x000065ad      0f844d030000   je 0x6900
0x000065b3      418b5748       mov edx, dword [r15 + 0x48]
0x000065b7      8b442464       mov eax, dword [rsp + 0x64]
0x000065bb      83e238         and edx, 0x38
0x000065be      83fa18         cmp edx, 0x18
0x000065c1      0f849d030000   je 0x6964
0x000065c7      837c245803     cmp dword [rsp + 0x58], 3
0x000065cc      41bc01000000   mov r12d, 1
0x000065d2      0f94c3         sete bl
0x000065d5      41f6474902     test byte [r15 + 0x49], 2
0x000065da      0f85dc030000   jne 0x69bc
0x000065e0      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:848
0x000065e2      0f8960030000   jns 0x6948
0x000065e8      84db           test bl, bl
0x000065ea      740f           je 0x65fb
0x000065ec      4584e4         test r12b, r12b
0x000065ef      740a           je 0x65fb                               ; ../coreutils-8.31/lib/fts.c:1170
0x000065f1      e8aab2ffff     call sym.imp.__errno_location
0x000065f6      8b00           mov eax, dword [rax]
0x000065f8      894540         mov dword [rbp + 0x40], eax
0x000065fb      66834d7201     or word [rbp + 0x72], 1
0x00006600      488b7d18       mov rdi, qword [rbp + 0x18]
0x00006604      e847b4ffff     call sym.imp.closedir
0x00006609      418b7f48       mov edi, dword [r15 + 0x48]
0x0000660d      48c745180000.  mov qword [rbp + 0x18], 0
0x00006615      f7c700020000   test edi, 0x200
0x0000661b      7413           je 0x6630
0x0000661d      8b442464       mov eax, dword [rsp + 0x64]
0x00006621      85c0           test eax, eax
0x00006623      780b           js 0x6630
0x00006625      89c7           mov edi, eax
0x00006627      e804b4ffff     call sym.imp.close
0x0000662c      418b7f48       mov edi, dword [r15 + 0x48]
0x00006630      48c745180000.  mov qword [rbp + 0x18], 0
0x00006638      c644245f00     mov byte [rsp + 0x5f], 0
0x0000663d      e9e9faffff     jmp 0x612b
0x00006642      660f1f440000   nop word [rax + rax]
0x00006648      31d2           xor edx, edx
0x0000664a      48837d5800     cmp qword [rbp + 0x58], 0
0x0000664f      0f95c2         setne dl
0x00006652      c1e211         shl edx, 0x11                           ; ../coreutils-8.31/lib/fts.c:886
0x00006655      e9edfeffff     jmp 0x6547
0x0000665a      660f1f440000   nop word [rax + rax]
0x00006660      488b7d18       mov rdi, qword [rbp + 0x18]
0x00006664      e8e7b3ffff     call sym.imp.closedir
0x00006669      837c245803     cmp dword [rsp + 0x58], 3
0x0000666e      48c745180000.  mov qword [rbp + 0x18], 0
0x00006676      0f841f020000   je 0x689b
0x0000667c      48c744241000.  mov qword [rsp + 0x10], 0
0x00006685      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000668a      6448331c2528.  xor rbx, qword fs:[0x28]
0x00006693      488b442410     mov rax, qword [rsp + 0x10]
0x00006698      0f85d3030000   jne 0x6a71
0x0000669e      4883c478       add rsp, 0x78                           ; ../coreutils-8.31/lib/fts.c:1011
0x000066a2      5b             pop rbx
0x000066a3      5d             pop rbp
0x000066a4      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:1010
0x000066a6      415d           pop r13
0x000066a8      415e           pop r14
0x000066aa      415f           pop r15
0x000066ac      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1014
0x000066ad      0f1f00         nop dword [rax]
0x000066b0      498d5f58       lea rbx, [r15 + 0x58]
0x000066b4      4889ea         mov rdx, rbp
0x000066b7      4889de         mov rsi, rbx
0x000066ba      e841f9ffff     call sym.leave_dir.isra.12              ; ../coreutils-8.31/lib/fts.c:1012
0x000066bf      31d2           xor edx, edx
0x000066c1      4889ee         mov rsi, rbp
0x000066c4      4c89ff         mov rdi, r15
0x000066c7      e874eeffff     call sym.fts_stat
0x000066cc      418b7f48       mov edi, dword [r15 + 0x48]             ; ../coreutils-8.31/lib/fts.c:994
0x000066d0      4889ea         mov rdx, rbp
0x000066d3      4889de         mov rsi, rbx
0x000066d6      e875f8ffff     call sym.enter_dir.isra.10
0x000066db      84c0           test al, al
0x000066dd      0f85affeffff   jne 0x6592
0x000066e3      e8b8b1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1004
0x000066e8      48c744241000.  mov qword [rsp + 0x10], 0
0x000066f1      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000066f7      eb8c           jmp 0x6685
0x000066f9      0f1f80000000.  nop dword [rax]
0x00006700      c644245e00     mov byte [rsp + 0x5e], 0
0x00006705      e971fbffff     jmp 0x627b
0x0000670a      660f1f440000   nop word [rax + rax]
0x00006710      4c89ef         mov rdi, r13
0x00006713      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00006718      418b1c24       mov ebx, dword [r12]
0x0000671c      e86fb5ffff     call sym..plt.got
0x00006721      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006726      e885f1ffff     call sym.fts_lfree
0x0000672b      488b7d18       mov rdi, qword [rbp + 0x18]
0x0000672f      e81cb3ffff     call sym.imp.closedir
0x00006734      41b907000000   mov r9d, 7                              ; ../coreutils-8.31/lib/fts.c:1006
0x0000673a      48c745180000.  mov qword [rbp + 0x18], 0
0x00006742      48c744241000.  mov qword [rsp + 0x10], 0
0x0000674b      6644894d70     mov word [rbp + 0x70], r9w
0x00006750      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0x69850fc5
0x00006758      41891c24       mov dword [r12], ebx
0x0000675c      e924ffffff     jmp 0x6685
0x00006761      0f1f80000000.  nop dword [rax]
0x00006768      4889c5         mov rbp, rax
0x0000676b      807c245d00     cmp byte [rsp + 0x5d], 0
0x00006770      0f8562fcffff   jne 0x63d8
0x00006776      41f6474804     test byte [r15 + 0x48], 4
0x0000677b      741e           je 0x679b
0x0000677d      488b442418     mov rax, qword [rsp + 0x18]
0x00006782      49394730       cmp qword [r15 + 0x30], rax
0x00006786      7405           je 0x678d                               ; ../coreutils-8.31/lib/fts.c:849
0x00006788      4885db         test rbx, rbx
0x0000678b      7506           jne 0x6793
0x0000678d      48836c244001   sub qword [rsp + 0x40], 1
0x00006793      488b442440     mov rax, qword [rsp + 0x40]
0x00006798      c60000         mov byte [rax], 0
0x0000679b      48837c245000   cmp qword [rsp + 0x50], 0
0x000067a1      756d           jne 0x6810
0x000067a3      807c245f00     cmp byte [rsp + 0x5f], 0
0x000067a8      7466           je 0x6810
0x000067aa      837c245801     cmp dword [rsp + 0x58], 1
0x000067af      743f           je 0x67f0
0x000067b1      4885db         test rbx, rbx
0x000067b4      743a           je 0x67f0
0x000067b6      807c245e00     cmp byte [rsp + 0x5e], 0
0x000067bb      0f85f7000000   jne 0x68b8
0x000067c1      49837f4000     cmp qword [r15 + 0x40], 0
0x000067c6      0f84b9feffff   je 0x6685
0x000067cc      4883fb01       cmp rbx, 1
0x000067d0      0f84affeffff   je 0x6685
0x000067d6      488b742410     mov rsi, qword [rsp + 0x10]
0x000067db      4889da         mov rdx, rbx
0x000067de      4c89ff         mov rdi, r15
0x000067e1      e82aefffff     call sym.fts_sort
0x000067e6      4889442410     mov qword [rsp + 0x10], rax
0x000067eb      e995feffff     jmp 0x6685
0x000067f0      48837d5800     cmp qword [rbp + 0x58], 0
0x000067f5      0f852b010000   jne 0x6926
0x000067fb      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:897
0x000067fe      e84df3ffff     call sym.restore_initial_cwd
0x00006803      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:896
0x00006805      0f95c0         setne al
0x00006808      84c0           test al, al
0x0000680a      0f8583010000   jne 0x6993
0x00006810      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:632
0x00006813      75a1           jne 0x67b6
0x00006815      837c245803     cmp dword [rsp + 0x58], 3
0x0000681a      0f84b8010000   je 0x69d8
0x00006820      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006825      e886f0ffff     call sym.fts_lfree
0x0000682a      48c744241000.  mov qword [rsp + 0x10], 0
0x00006833      e94dfeffff     jmp 0x6685
0x00006838      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fts.c:607
0x00006840      418b0424       mov eax, dword [r12]
0x00006844      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00006849      85c0           test eax, eax
0x0000684b      7421           je 0x686e
0x0000684d      4885db         test rbx, rbx
0x00006850      894540         mov dword [rbp + 0x40], eax
0x00006853      0f8530010000   jne 0x6989
0x00006859      48837c245000   cmp qword [rsp + 0x50], 0
0x0000685f      b804000000     mov eax, 4
0x00006864      0f851f010000   jne 0x6989
0x0000686a      66894570       mov word [rbp + 0x70], ax
0x0000686e      488b7d18       mov rdi, qword [rbp + 0x18]
0x00006872      4885ff         test rdi, rdi
0x00006875      0f84f0feffff   je 0x676b
0x0000687b      e8d0b1ffff     call sym.imp.closedir
0x00006880      48c745180000.  mov qword [rbp + 0x18], 0
0x00006888      e9defeffff     jmp 0x676b
0x0000688d      0f1f00         nop dword [rax]
0x00006890      837c245803     cmp dword [rsp + 0x58], 3
0x00006895      0f85e1fdffff   jne 0x667c
0x0000689b      41ba04000000   mov r10d, 4
0x000068a1      6644895570     mov word [rbp + 0x70], r10w
0x000068a6      e8f5afffff     call sym.imp.__errno_location
0x000068ab      8b00           mov eax, dword [rax]
0x000068ad      894540         mov dword [rbp + 0x40], eax
0x000068b0      e9c7fdffff     jmp 0x667c
0x000068b5      0f1f00         nop dword [rax]
0x000068b8      488d0551ecff.  lea rax, sym.fts_compare_ino            ; 0x5510 ; "H\x8b\x17H\x8b\x06H\x8b\x80\x80"
0x000068bf      488b742410     mov rsi, qword [rsp + 0x10]
0x000068c4      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/fts.c:880
0x000068c7      4c89ff         mov rdi, r15
0x000068ca      49894740       mov qword [r15 + 0x40], rax
0x000068ce      e83deeffff     call sym.fts_sort
0x000068d3      49c747400000.  mov qword [r15 + 0x40], 0
0x000068db      4889442410     mov qword [rsp + 0x10], rax
0x000068e0      e9a0fdffff     jmp 0x6685
0x000068e5      0f1f00         nop dword [rax]
0x000068e8      48c7442438a0.  mov qword [rsp + 0x38], 0x186a0         ; [0x186a0:8]=-1
0x000068f1      c644245f01     mov byte [rsp + 0x5f], 1
0x000068f6      418b7f48       mov edi, dword [r15 + 0x48]
0x000068fa      e92cf8ffff     jmp 0x612b
0x000068ff      90             nop
0x00006900      c644245f00     mov byte [rsp + 0x5f], 0                ; ../coreutils-8.31/lib/fts.c:888
0x00006905      418b7f48       mov edi, dword [r15 + 0x48]
0x00006909      e91df8ffff     jmp 0x612b
0x0000690e      6690           nop
0x00006910      31d2           xor edx, edx
0x00006912      4889ee         mov rsi, rbp
0x00006915      4c89ff         mov rdi, r15
0x00006918      e823ecffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:889
0x0000691d      66894570       mov word [rbp + 0x70], ax
0x00006921      e96cfcffff     jmp 0x6592
0x00006926      488b7508       mov rsi, qword [rbp + 8]                ; ../coreutils-8.31/lib/fts.c:665
0x0000692a      488d0d294800.  lea rcx, [0x0000b15a]                   ; ".."
0x00006931      baffffffff     mov edx, 0xffffffff                     ; -1
0x00006936      4c89ff         mov rdi, r15
0x00006939      e892f3ffff     call sym.fts_safe_changedir
0x0000693e      85c0           test eax, eax
0x00006940      0f95c0         setne al
0x00006943      e9c0feffff     jmp 0x6808
0x00006948      31c9           xor ecx, ecx
0x0000694a      89c2           mov edx, eax
0x0000694c      4889ee         mov rsi, rbp
0x0000694f      4c89ff         mov rdi, r15
0x00006952      e879f3ffff     call sym.fts_safe_changedir
0x00006957      85c0           test eax, eax
0x00006959      0f8589fcffff   jne 0x65e8
0x0000695f      e9bef7ffff     jmp 0x6122
0x00006964      4883bd880000.  cmp qword [rbp + 0x88], 2
0x0000696c      0f8555fcffff   jne 0x65c7
0x00006972      89c6           mov esi, eax
0x00006974      4889ef         mov rdi, rbp
0x00006977      e8f4f0ffff     call sym.leaf_optimization
0x0000697c      85c0           test eax, eax
0x0000697e      757e           jne 0x69fe
0x00006980      8b442464       mov eax, dword [rsp + 0x64]
0x00006984      e93efcffff     jmp 0x65c7
0x00006989      b807000000     mov eax, 7
0x0000698e      e9d7feffff     jmp 0x686a
0x00006993      bf07000000     mov edi, 7
0x00006998      66897d70       mov word [rbp + 0x70], di
0x0000699c      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0x69850fc5
0x000069a4      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000069a9      e802efffff     call sym.fts_lfree
0x000069ae      48c744241000.  mov qword [rsp + 0x10], 0
0x000069b7      e9c9fcffff     jmp 0x6685
0x000069bc      89c7           mov edi, eax
0x000069be      ba03000000     mov edx, 3
0x000069c3      be06040000     mov esi, 0x406
0x000069c8      31c0           xor eax, eax
0x000069ca      e8c12c0000     call sym.rpl_fcntl                      ; ../coreutils-8.31/lib/fts.c:-617
0x000069cf      89442464       mov dword [rsp + 0x64], eax
0x000069d3      e908fcffff     jmp 0x65e0
0x000069d8      0fb74570       movzx eax, word [rbp + 0x70]            ; ../coreutils-8.31/lib/fts.c:1018
0x000069dc      6683f807       cmp ax, 7                               ; ../coreutils-8.31/lib/fts.c:-620
0x000069e0      0f843afeffff   je 0x6820
0x000069e6      6683f804       cmp ax, 4                               ; ../coreutils-8.31/lib/fts.c:1018
0x000069ea      0f8430feffff   je 0x6820
0x000069f0      be06000000     mov esi, 6
0x000069f5      66897570       mov word [rbp + 0x70], si
0x000069f9      e922feffff     jmp 0x6820                              ; ../coreutils-8.31/lib/fts.c:1019
0x000069fe      837c245803     cmp dword [rsp + 0x58], 3
0x00006a03      0f85f7feffff   jne 0x6900
0x00006a09      8b442464       mov eax, dword [rsp + 0x64]
0x00006a0d      4531e4         xor r12d, r12d
0x00006a10      bb01000000     mov ebx, 1
0x00006a15      e9bbfbffff     jmp 0x65d5
0x00006a1a      660f1f440000   nop word [rax + rax]
0x00006a20      4c89ef         mov rdi, r13
0x00006a23      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00006a28      e863b2ffff     call sym..plt.got
0x00006a2d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006a32      e879eeffff     call sym.fts_lfree
0x00006a37      488b7d18       mov rdi, qword [rbp + 0x18]
0x00006a3b      e810b0ffff     call sym.imp.closedir
0x00006a40      41b807000000   mov r8d, 7
0x00006a46      48c745180000.  mov qword [rbp + 0x18], 0
0x00006a4e      48c744241000.  mov qword [rsp + 0x10], 0
0x00006a57      6644894570     mov word [rbp + 0x70], r8w
0x00006a5c      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0x69850fc5
0x00006a64      41c704242400.  mov dword [r12], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x00006a6c      e914fcffff     jmp 0x6685
0x00006a71      e82aafffff     call sym.imp.__stack_chk_fail
0x00006a76      488d05e34600.  lea rax, obj.CSWTCH.53                  ; 0xb160
0x00006a7d      8b0490         mov eax, dword [rax + rdx*4]
0x00006a80      418985900000.  mov dword [r13 + 0x90], eax
0x00006a87      b801000000     mov eax, 1
0x00006a8c      e9b9f7ffff     jmp 0x624a
0x00006a91      0f1f440000     nop dword [rax + rax]
0x00006a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_open:
0x00006aa0      4157           push r15
0x00006aa2      4156           push r14
0x00006aa4      4155           push r13
0x00006aa6      4154           push r12
0x00006aa8      55             push rbp
0x00006aa9      53             push rbx
0x00006aaa      4883ec28       sub rsp, 0x28
0x00006aae      f7c600f0ffff   test esi, 0xfffff000
0x00006ab4      0f857e030000   jne 0x6e38
0x00006aba      89f0           mov eax, esi
0x00006abc      89f5           mov ebp, esi
0x00006abe      2504020000     and eax, 0x204
0x00006ac3      3d04020000     cmp eax, 0x204
0x00006ac8      0f846a030000   je 0x6e38
0x00006ace      40f6c612       test sil, 0x12
0x00006ad2      0f8460030000   je 0x6e38
0x00006ad8      4989fd         mov r13, rdi
0x00006adb      be01000000     mov esi, 1
0x00006ae0      bf80000000     mov edi, 0x80
0x00006ae5      4989d6         mov r14, rdx
0x00006ae8      e8a3afffff     call sym.imp.calloc
0x00006aed      4885c0         test rax, rax
0x00006af0      4889c3         mov rbx, rax
0x00006af3      0f8455020000   je 0x6d4e
0x00006af9      40f6c502       test bpl, 2
0x00006afd      4c897040       mov qword [rax + 0x40], r14
0x00006b01      0f8559020000   jne 0x6d60
0x00006b07      498b7d00       mov rdi, qword [r13]
0x00006b0b      896848         mov dword [rax + 0x48], ebp
0x00006b0e      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x00006b15      4885ff         test rdi, rdi
0x00006b18      0f8461020000   je 0x6d7f
0x00006b1e      4d89ef         mov r15, r13
0x00006b21      4531e4         xor r12d, r12d
0x00006b24      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-683
0x00006b28      e833aeffff     call sym.imp.strlen
0x00006b2d      4939c4         cmp r12, rax
0x00006b30      4c0f42e0       cmovb r12, rax
0x00006b34      4983c708       add r15, 8
0x00006b38      498b3f         mov rdi, qword [r15]
0x00006b3b      4885ff         test rdi, rdi
0x00006b3e      75e8           jne 0x6b28
0x00006b40      498d542401     lea rdx, [r12 + 1]
0x00006b45      b800100000     mov eax, 0x1000
0x00006b4a      4881fa001000.  cmp rdx, 0x1000
0x00006b51      480f42d0       cmovb rdx, rax
0x00006b55      488d7330       lea rsi, [rbx + 0x30]
0x00006b59      488d7b20       lea rdi, [rbx + 0x20]
0x00006b5d      e84ef0ffff     call sym.fts_palloc.isra.2
0x00006b62      84c0           test al, al
0x00006b64      88442416       mov byte [rsp + 0x16], al
0x00006b68      0f849b020000   je 0x6e09
0x00006b6e      498b7500       mov rsi, qword [r13]
0x00006b72      4885f6         test rsi, rsi
0x00006b75      0f84a5020000   je 0x6e20
0x00006b7b      488d357f4200.  lea rsi, [0x0000ae01]
0x00006b82      31d2           xor edx, edx
0x00006b84      4889df         mov rdi, rbx
0x00006b87      e894ecffff     call sym.fts_alloc
0x00006b8c      4885c0         test rax, rax
0x00006b8f      4989c7         mov r15, rax
0x00006b92      0f8468020000   je 0x6e00
0x00006b98      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00006b9f      4d85f6         test r14, r14
0x00006ba2      498b7500       mov rsi, qword [r13]
0x00006ba6      49894758       mov qword [r15 + 0x58], rax
0x00006baa      49894768       mov qword [r15 + 0x68], rax
0x00006bae      740d           je 0x6bbd
0x00006bb0      8b4348         mov eax, dword [rbx + 0x48]
0x00006bb3      c1e80a         shr eax, 0xa
0x00006bb6      83e001         and eax, 1
0x00006bb9      88442416       mov byte [rsp + 0x16], al               ; ../coreutils-8.31/lib/fts.c:-626
0x00006bbd      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/fts.c:-629
0x00006bc0      0f8466020000   je 0x6e2c
0x00006bc6      c1ed0b         shr ebp, 0xb
0x00006bc9      48c744241800.  mov qword [rsp + 0x18], 0
0x00006bd2      4531e4         xor r12d, r12d
0x00006bd5      83f501         xor ebp, 1
0x00006bd8      89e8           mov eax, ebp
0x00006bda      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/fts.c:-616
0x00006bdc      83e001         and eax, 1
0x00006bdf      88442417       mov byte [rsp + 0x17], al
0x00006be3      eb77           jmp 0x6c5c
0x00006be5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-615
0x00006be8      4889c2         mov rdx, rax
0x00006beb      4889df         mov rdi, rbx
0x00006bee      e82decffff     call sym.fts_alloc
0x00006bf3      4885c0         test rax, rax
0x00006bf6      4889c1         mov rcx, rax
0x00006bf9      0f84f1010000   je 0x6df0
0x00006bff      48c740580000.  mov qword [rax + 0x58], 0
0x00006c07      4c897808       mov qword [rax + 8], r15
0x00006c0b      488d80080100.  lea rax, [rax + 0x108]
0x00006c12      4d85e4         test r12, r12
0x00006c15      48894130       mov qword [rcx + 0x30], rax
0x00006c19      0f8471010000   je 0x6d90
0x00006c1f      807c241600     cmp byte [rsp + 0x16], 0
0x00006c24      0f8466010000   je 0x6d90
0x00006c2a      be0b000000     mov esi, 0xb
0x00006c2f      4d85f6         test r14, r14
0x00006c32      48c781a80000.  mov qword [rcx + 0xa8], 2
0x00006c3d      66897170       mov word [rcx + 0x70], si
0x00006c41      0f8489010000   je 0x6dd0                               ; ../coreutils-8.31/lib/fts.c:876
0x00006c47      4c896110       mov qword [rcx + 0x10], r12
0x00006c4b      4989cc         mov r12, rcx
0x00006c4e      4883c501       add rbp, 1
0x00006c52      498b74ed00     mov rsi, qword [r13 + rbp*8]
0x00006c57      4885f6         test rsi, rsi
0x00006c5a      7454           je 0x6cb0
0x00006c5c      4889f7         mov rdi, rsi
0x00006c5f      4889742408     mov qword [rsp + 8], rsi
0x00006c64      e8f7acffff     call sym.imp.strlen
0x00006c69      4883f802       cmp rax, 2
0x00006c6d      488b742408     mov rsi, qword [rsp + 8]
0x00006c72      0f8670ffffff   jbe 0x6be8                              ; ../coreutils-8.31/lib/fts.c:-659
0x00006c78      807c241700     cmp byte [rsp + 0x17], 0
0x00006c7d      0f8465ffffff   je 0x6be8
0x00006c83      807c06ff2f     cmp byte [rsi + rax - 1], 0x2f
0x00006c88      0f855affffff   jne 0x6be8
0x00006c8e      6690           nop
0x00006c90      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x00006c95      0f854dffffff   jne 0x6be8
0x00006c9b      4883e801       sub rax, 1
0x00006c9f      4883f801       cmp rax, 1
0x00006ca3      75eb           jne 0x6c90
0x00006ca5      e93effffff     jmp 0x6be8
0x00006caa      660f1f440000   nop word [rax + rax]
0x00006cb0      4d85f6         test r14, r14
0x00006cb3      7417           je 0x6ccc
0x00006cb5      4883fd01       cmp rbp, 1
0x00006cb9      7611           jbe 0x6ccc
0x00006cbb      4c89e6         mov rsi, r12
0x00006cbe      4889ea         mov rdx, rbp
0x00006cc1      4889df         mov rdi, rbx
0x00006cc4      e847eaffff     call sym.fts_sort
0x00006cc9      4989c4         mov r12, rax
0x00006ccc      488d352e4100.  lea rsi, [0x0000ae01]
0x00006cd3      31d2           xor edx, edx
0x00006cd5      4889df         mov rdi, rbx
0x00006cd8      e843ebffff     call sym.fts_alloc
0x00006cdd      4885c0         test rax, rax
0x00006ce0      488903         mov qword [rbx], rax
0x00006ce3      0f8407010000   je 0x6df0
0x00006ce9      8b7b48         mov edi, dword [rbx + 0x48]
0x00006cec      ba09000000     mov edx, 9
0x00006cf1      488d7358       lea rsi, [rbx + 0x58]
0x00006cf5      4c896010       mov qword [rax + 0x10], r12
0x00006cf9      66895070       mov word [rax + 0x70], dx               ; ../coreutils-8.31/lib/fts.c:-901
0x00006cfd      48c740580100.  mov qword [rax + 0x58], 1
0x00006d05      e816efffff     call sym.setup_dir.isra.4
0x00006d0a      84c0           test al, al
0x00006d0c      0f84de000000   je 0x6df0                               ; ../coreutils-8.31/lib/fts.c:-707
0x00006d12      8b7348         mov esi, dword [rbx + 0x48]
0x00006d15      f7c604020000   test esi, 0x204
0x00006d1b      7523           jne 0x6d40                              ; ../coreutils-8.31/lib/fts.c:-697
0x00006d1d      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00006d20      488d15344400.  lea rdx, [0x0000b15b]                   ; "."
0x00006d27      e864efffff     call sym.diropen.isra.6
0x00006d2c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:-694
0x00006d2e      894328         mov dword [rbx + 0x28], eax
0x00006d31      790d           jns 0x6d40                              ; ../coreutils-8.31/lib/fts.c:-697
0x00006d33      834b4804       or dword [rbx + 0x48], 4
0x00006d37      660f1f840000.  nop word [rax + rax]
0x00006d40      488d7b60       lea rdi, [rbx + 0x60]
0x00006d44      beffffffff     mov esi, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:-695 ; -1
0x00006d49      e842220000     call sym.i_ring_init
0x00006d4e      4883c428       add rsp, 0x28
0x00006d52      4889d8         mov rax, rbx
0x00006d55      5b             pop rbx
0x00006d56      5d             pop rbp
0x00006d57      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-692
0x00006d59      415d           pop r13
0x00006d5b      415e           pop r14
0x00006d5d      415f           pop r15
0x00006d5f      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:-688
0x00006d60      498b7d00       mov rdi, qword [r13]
0x00006d64      89e8           mov eax, ebp
0x00006d66      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x00006d6d      80e4fd         and ah, 0xfd                            ; ../coreutils-8.31/lib/fts.c:-686
0x00006d70      83c804         or eax, 4
0x00006d73      4885ff         test rdi, rdi
0x00006d76      894348         mov dword [rbx + 0x48], eax             ; ../coreutils-8.31/lib/fts.c:-685
0x00006d79      0f859ffdffff   jne 0x6b1e
0x00006d7f      ba00100000     mov edx, 0x1000                         ; ../coreutils-8.31/lib/fts.c:-683
0x00006d84      e9ccfdffff     jmp 0x6b55
0x00006d89      0f1f80000000.  nop dword [rax]
0x00006d90      31d2           xor edx, edx
0x00006d92      4889ce         mov rsi, rcx                            ; ../coreutils-8.31/lib/fts.c:-705
0x00006d95      4889df         mov rdi, rbx
0x00006d98      48894c2408     mov qword [rsp + 8], rcx
0x00006d9d      e89ee7ffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:-662
0x00006da2      488b4c2408     mov rcx, qword [rsp + 8]
0x00006da7      4d85f6         test r14, r14
0x00006daa      66894170       mov word [rcx + 0x70], ax
0x00006dae      0f8593feffff   jne 0x6c47
0x00006db4      4d85e4         test r12, r12
0x00006db7      48c741100000.  mov qword [rcx + 0x10], 0
0x00006dbf      7517           jne 0x6dd8
0x00006dc1      48894c2418     mov qword [rsp + 0x18], rcx
0x00006dc6      4989cc         mov r12, rcx
0x00006dc9      e980feffff     jmp 0x6c4e
0x00006dce      6690           nop
0x00006dd0      48c741100000.  mov qword [rcx + 0x10], 0
0x00006dd8      488b442418     mov rax, qword [rsp + 0x18]
0x00006ddd      48894c2418     mov qword [rsp + 0x18], rcx
0x00006de2      48894810       mov qword [rax + 0x10], rcx
0x00006de6      e963feffff     jmp 0x6c4e
0x00006deb      0f1f440000     nop dword [rax + rax]
0x00006df0      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-674
0x00006df3      e8b8eaffff     call sym.fts_lfree
0x00006df8      4c89ff         mov rdi, r15
0x00006dfb      e890aeffff     call sym..plt.got
0x00006e00      488b7b20       mov rdi, qword [rbx + 0x20]
0x00006e04      e887aeffff     call sym..plt.got
0x00006e09      4889df         mov rdi, rbx
0x00006e0c      31db           xor ebx, ebx
0x00006e0e      e87daeffff     call sym..plt.got
0x00006e13      e936ffffff     jmp 0x6d4e
0x00006e18      0f1f84000000.  nop dword [rax + rax]
0x00006e20      4531ff         xor r15d, r15d
0x00006e23      4d85f6         test r14, r14
0x00006e26      0f8584fdffff   jne 0x6bb0
0x00006e2c      4531e4         xor r12d, r12d
0x00006e2f      e998feffff     jmp 0x6ccc
0x00006e34      0f1f4000       nop dword [rax]
0x00006e38      e863aaffff     call sym.imp.__errno_location
0x00006e3d      31db           xor ebx, ebx
0x00006e3f      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/fts.c:-692 ; [0x16:4]=0x27900000
0x00006e45      e904ffffff     jmp 0x6d4e
0x00006e4a      660f1f440000   nop word [rax + rax]
;-- rpl_fts_close:
0x00006e50      4154           push r12
0x00006e52      55             push rbp
0x00006e53      4889fd         mov rbp, rdi
0x00006e56      53             push rbx
0x00006e57      488b3f         mov rdi, qword [rdi]
0x00006e5a      4885ff         test rdi, rdi
0x00006e5d      7444           je 0x6ea3
0x00006e5f      48837f5800     cmp qword [rdi + 0x58], 0
0x00006e64      7919           jns 0x6e7f
0x00006e66      e915010000     jmp 0x6f80
0x00006e6b      0f1f440000     nop dword [rax + rax]
0x00006e70      e81baeffff     call sym..plt.got
0x00006e75      48837b5800     cmp qword [rbx + 0x58], 0
0x00006e7a      4889df         mov rdi, rbx
0x00006e7d      781c           js 0x6e9b                               ; ../coreutils-8.31/lib/fts.c:-652
0x00006e7f      488b5f10       mov rbx, qword [rdi + 0x10]
0x00006e83      4885db         test rbx, rbx
0x00006e86      75e8           jne 0x6e70
0x00006e88      488b5f08       mov rbx, qword [rdi + 8]
0x00006e8c      e8ffadffff     call sym..plt.got
0x00006e91      48837b5800     cmp qword [rbx + 0x58], 0
0x00006e96      4889df         mov rdi, rbx
0x00006e99      79e4           jns 0x6e7f
0x00006e9b      4889df         mov rdi, rbx
0x00006e9e      e8edadffff     call sym..plt.got
0x00006ea3      488b7d08       mov rdi, qword [rbp + 8]
0x00006ea7      4885ff         test rdi, rdi
0x00006eaa      7405           je 0x6eb1
0x00006eac      e8ffe9ffff     call sym.fts_lfree
0x00006eb1      488b7d10       mov rdi, qword [rbp + 0x10]
0x00006eb5      e8d6adffff     call sym..plt.got
0x00006eba      488b7d20       mov rdi, qword [rbp + 0x20]
0x00006ebe      e8cdadffff     call sym..plt.got
0x00006ec3      8b4548         mov eax, dword [rbp + 0x48]
0x00006ec6      f6c402         test ah, 2
0x00006ec9      7465           je 0x6f30
0x00006ecb      8b7d2c         mov edi, dword [rbp + 0x2c]
0x00006ece      85ff           test edi, edi
0x00006ed0      0f898a000000   jns 0x6f60
0x00006ed6      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:-398
0x00006ed8      488d7d60       lea rdi, [rbp + 0x60]
0x00006edc      e81feaffff     call sym.fd_ring_clear
0x00006ee1      488b7d50       mov rdi, qword [rbp + 0x50]
0x00006ee5      4885ff         test rdi, rdi
0x00006ee8      7405           je 0x6eef
0x00006eea      e881180000     call sym.hash_free
0x00006eef      f74548020100.  test dword [rbp + 0x48], 0x102          ; ../coreutils-8.31/lib/fts.c:-413
0x00006ef6      488b7d58       mov rdi, qword [rbp + 0x58]
0x00006efa      7424           je 0x6f20
0x00006efc      4885ff         test rdi, rdi
0x00006eff      7405           je 0x6f06
0x00006f01      e86a180000     call sym.hash_free
0x00006f06      4889ef         mov rdi, rbp
0x00006f09      e882adffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:-455
0x00006f0e      85db           test ebx, ebx
0x00006f10      0f85ab000000   jne 0x6fc1
0x00006f16      89d8           mov eax, ebx
0x00006f18      5b             pop rbx
0x00006f19      5d             pop rbp
0x00006f1a      415c           pop r12
0x00006f1c      c3             ret
0x00006f1d      0f1f00         nop dword [rax]
0x00006f20      e86badffff     call sym..plt.got
0x00006f25      ebdf           jmp 0x6f06
0x00006f27      660f1f840000.  nop word [rax + rax]
0x00006f30      a804           test al, 4
0x00006f32      75a2           jne 0x6ed6
0x00006f34      8b7d28         mov edi, dword [rbp + 0x28]
0x00006f37      e814acffff     call sym.imp.fchdir                     ; ../coreutils-8.31/lib/fts.c:-449
0x00006f3c      85c0           test eax, eax
0x00006f3e      7550           jne 0x6f90
0x00006f40      8b7d28         mov edi, dword [rbp + 0x28]
0x00006f43      e8e8aaffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fts.c:-448
0x00006f48      85c0           test eax, eax
0x00006f4a      748a           je 0x6ed6
0x00006f4c      e84fa9ffff     call sym.imp.__errno_location
0x00006f51      4989c4         mov r12, rax
0x00006f54      eb62           jmp 0x6fb8
0x00006f56      662e0f1f8400.  nop word cs:[rax + rax]
0x00006f60      e8cbaaffff     call sym.imp.close
0x00006f65      85c0           test eax, eax
0x00006f67      0f8469ffffff   je 0x6ed6
0x00006f6d      e82ea9ffff     call sym.imp.__errno_location
0x00006f72      8b18           mov ebx, dword [rax]
0x00006f74      e95fffffff     jmp 0x6ed8
0x00006f79      0f1f80000000.  nop dword [rax]
0x00006f80      4889fb         mov rbx, rdi
0x00006f83      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:-429
0x00006f86      e805adffff     call sym..plt.got
0x00006f8b      e913ffffff     jmp 0x6ea3
0x00006f90      e80ba9ffff     call sym.imp.__errno_location
0x00006f95      8b7d28         mov edi, dword [rbp + 0x28]             ; ../coreutils-8.31/lib/fts.c:-664
0x00006f98      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:-665
0x00006f9b      8b18           mov ebx, dword [rax]
0x00006f9d      e88eaaffff     call sym.imp.close
0x00006fa2      85c0           test eax, eax
0x00006fa4      0f842effffff   je 0x6ed8
0x00006faa      85db           test ebx, ebx
0x00006fac      0f8526ffffff   jne 0x6ed8
0x00006fb2      660f1f440000   nop word [rax + rax]
0x00006fb8      418b1c24       mov ebx, dword [r12]
0x00006fbc      e917ffffff     jmp 0x6ed8
0x00006fc1      e8daa8ffff     call sym.imp.__errno_location
0x00006fc6      8918           mov dword [rax], ebx
0x00006fc8      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00006fcd      e944ffffff     jmp 0x6f16
0x00006fd2      0f1f4000       nop dword [rax]
0x00006fd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_read:
0x00006fe0      4156           push r14
0x00006fe2      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:-640
0x00006fe4      4154           push r12
0x00006fe6      55             push rbp
0x00006fe7      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:-641
0x00006fe8      488b2f         mov rbp, qword [rdi]
0x00006feb      4885ed         test rbp, rbp
0x00006fee      0f840a010000   je 0x70fe
0x00006ff4      8b5748         mov edx, dword [rdi + 0x48]
0x00006ff7      f6c620         test dh, 0x20                           ; ../coreutils-8.31/lib/fts.c:-640 ; "@"
0x00006ffa      0f85fe000000   jne 0x70fe
0x00007000      0fb74574       movzx eax, word [rbp + 0x74]
0x00007004      bb03000000     mov ebx, 3
0x00007009      4989fc         mov r12, rdi
0x0000700c      66895d74       mov word [rbp + 0x74], bx
0x00007010      6683f801       cmp ax, 1
0x00007014      0f8446020000   je 0x7260
0x0000701a      6683f802       cmp ax, 2
0x0000701e      0fb74d70       movzx ecx, word [rbp + 0x70]
0x00007022      0f84e8000000   je 0x7110                               ; ../coreutils-8.31/lib/fts.c:-662
0x00007028      6683f901       cmp cx, 1
0x0000702c      7532           jne 0x7060
0x0000702e      e91d020000     jmp 0x7250
0x00007033      0f1f440000     nop dword [rax + rax]
0x00007038      49891c24       mov qword [r12], rbx                    ; ../coreutils-8.31/lib/fts.c:-525
0x0000703c      4889ef         mov rdi, rbp
0x0000703f      e84cacffff     call sym..plt.got
0x00007044      48837b5800     cmp qword [rbx + 0x58], 0
0x00007049      0f8431020000   je 0x7280
0x0000704f      0fb74374       movzx eax, word [rbx + 0x74]
0x00007053      4889dd         mov rbp, rbx
0x00007056      6683f804       cmp ax, 4
0x0000705a      0f8528030000   jne 0x7388
0x00007060      488b5d10       mov rbx, qword [rbp + 0x10]
0x00007064      4885db         test rbx, rbx
0x00007067      75cf           jne 0x7038
0x00007069      488b5d08       mov rbx, qword [rbp + 8]
0x0000706d      48837b1800     cmp qword [rbx + 0x18], 0
0x00007072      0f8568050000   jne 0x75e0
0x00007078      49891c24       mov qword [r12], rbx
0x0000707c      4889ef         mov rdi, rbp
0x0000707f      e80cacffff     call sym..plt.got
0x00007084      48837b58ff     cmp qword [rbx + 0x58], 0xffffffffffffffff
0x00007089      0f84b3040000   je 0x7542
0x0000708f      66837b700b     cmp word [rbx + 0x70], 0xb
0x00007094      0f8435010000   je 0x71cf
0x0000709a      498b542420     mov rdx, qword [r12 + 0x20]
0x0000709f      488b4348       mov rax, qword [rbx + 0x48]             ; ../coreutils-8.31/lib/fts.c:-613
0x000070a3      c6040200       mov byte [rdx + rax], 0
0x000070a7      48837b5800     cmp qword [rbx + 0x58], 0
0x000070ac      0f84be030000   je 0x7470
0x000070b2      0fb74372       movzx eax, word [rbx + 0x72]
0x000070b6      a802           test al, 2
0x000070b8      0f846a030000   je 0x7428
0x000070be      418b442448     mov eax, dword [r12 + 0x48]
0x000070c3      8b7b44         mov edi, dword [rbx + 0x44]
0x000070c6      a804           test al, 4
0x000070c8      0f84fe030000   je 0x74cc
0x000070ce      e85da9ffff     call sym.imp.close
0x000070d3      418b7c2448     mov edi, dword [r12 + 0x48]
0x000070d8      66837b7002     cmp word [rbx + 0x70], 2
0x000070dd      7414           je 0x70f3
0x000070df      8b4b40         mov ecx, dword [rbx + 0x40]
0x000070e2      85c9           test ecx, ecx
0x000070e4      0f849e030000   je 0x7488
0x000070ea      ba07000000     mov edx, 7
0x000070ef      66895370       mov word [rbx + 0x70], dx
0x000070f3      81e700200000   and edi, 0x2000                         ; ../coreutils-8.31/lib/fts.c:-428
0x000070f9      4889dd         mov rbp, rbx
0x000070fc      747c           je 0x717a
0x000070fe      31ed           xor ebp, ebp
0x00007100      5b             pop rbx
0x00007101      4889e8         mov rax, rbp
0x00007104      5d             pop rbp
0x00007105      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-559
0x00007107      415d           pop r13
0x00007109      415e           pop r14
0x0000710b      c3             ret
0x0000710c      0f1f4000       nop dword [rax]
0x00007110      8d41f4         lea eax, [rcx - 0xc]
0x00007113      6683f801       cmp ax, 1
0x00007117      7677           jbe 0x7190
0x00007119      6683f901       cmp cx, 1
0x0000711d      0f853dffffff   jne 0x7060
0x00007123      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/fts-cycle.c:-1395 ; segment.PHDR
0x00007126      0f84ac000000   je 0x71d8
0x0000712c      498b442418     mov rax, qword [r12 + 0x18]
0x00007131      48394578       cmp qword [rbp + 0x78], rax
0x00007135      0f849d000000   je 0x71d8
0x0000713b      f6457202       test byte [rbp + 0x72], 2
0x0000713f      0f85db040000   jne 0x7620
0x00007145      498b7c2408     mov rdi, qword [r12 + 8]
0x0000714a      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:-985
0x0000714d      740e           je 0x715d
0x0000714f      e85ce7ffff     call sym.fts_lfree
0x00007154      49c744240800.  mov qword [r12 + 8], 0
0x0000715d      418b7c2448     mov edi, dword [r12 + 0x48]
0x00007162      41ba06000000   mov r10d, 6
0x00007168      498d742458     lea rsi, [r12 + 0x58]
0x0000716d      6644895570     mov word [rbp + 0x70], r10w
0x00007172      4889ea         mov rdx, rbp
0x00007175      e886eeffff     call sym.leave_dir.isra.12
0x0000717a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:-982
0x0000717b      4889e8         mov rax, rbp
0x0000717e      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:-983
0x0000717f      415c           pop r12
0x00007181      415d           pop r13                                 ; string_fortified.h:-1508
0x00007183      415e           pop r14
0x00007185      c3             ret
0x00007186      662e0f1f8400.  nop word cs:[rax + rax]
0x00007190      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:-979
0x00007195      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts.c:-553
0x00007198      e8a3e3ffff     call sym.fts_stat
0x0000719d      6683f801       cmp ax, 1
0x000071a1      66894570       mov word [rbp + 0x70], ax
0x000071a5      0f8441030000   je 0x74ec
0x000071ab      6683f80b       cmp ax, 0xb
0x000071af      49892c24       mov qword [r12], rbp
0x000071b3      75c5           jne 0x717a                              ; ../coreutils-8.31/lib/fts.c:-525
0x000071b5      0f1f00         nop dword [rax]
0x000071b8      488b85a80000.  mov rax, qword [rbp + 0xa8]
0x000071bf      4883f802       cmp rax, 2
0x000071c3      0f849f030000   je 0x7568
0x000071c9      4883f801       cmp rax, 1
0x000071cd      74ab           je 0x717a
0x000071cf      e8bca6ffff     call sym.imp.abort
0x000071d4      0f1f4000       nop dword [rax]
0x000071d8      498b7c2408     mov rdi, qword [r12 + 8]
0x000071dd      4885ff         test rdi, rdi
0x000071e0      0f8412020000   je 0x73f8
0x000071e6      f6c610         test dh, 0x10
0x000071e9      0f85f3010000   jne 0x73e2
0x000071ef      488b4d30       mov rcx, qword [rbp + 0x30]
0x000071f3      baffffffff     mov edx, 0xffffffff                     ; -1
0x000071f8      4889ee         mov rsi, rbp
0x000071fb      4c89e7         mov rdi, r12
0x000071fe      e8cdeaffff     call sym.fts_safe_changedir
0x00007203      85c0           test eax, eax
0x00007205      0f84b7020000   je 0x74c2
0x0000720b      e890a6ffff     call sym.imp.__errno_location
0x00007210      8b00           mov eax, dword [rax]
0x00007212      66834d7201     or word [rbp + 0x72], 1
0x00007217      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:-530
0x0000721a      498b6c2408     mov rbp, qword [r12 + 8]
0x0000721f      4885ed         test rbp, rbp
0x00007222      0f84ee010000   je 0x7416
0x00007228      4889e8         mov rax, rbp
0x0000722b      0f1f440000     nop dword [rax + rax]
0x00007230      488b5008       mov rdx, qword [rax + 8]
0x00007234      488b5230       mov rdx, qword [rdx + 0x30]
0x00007238      48895030       mov qword [rax + 0x30], rdx
0x0000723c      488b4010       mov rax, qword [rax + 0x10]             ; ../coreutils-8.31/lib/fts.c:-529
0x00007240      4885c0         test rax, rax
0x00007243      75eb           jne 0x7230
0x00007245      e9cc010000     jmp 0x7416
0x0000724a      660f1f440000   nop word [rax + rax]
0x00007250      6683f804       cmp ax, 4
0x00007254      0f85c9feffff   jne 0x7123
0x0000725a      e9dcfeffff     jmp 0x713b
0x0000725f      90             nop
0x00007260      4889ee         mov rsi, rbp
0x00007263      31d2           xor edx, edx
0x00007265      e8d6e2ffff     call sym.fts_stat
0x0000726a      66894570       mov word [rbp + 0x70], ax
0x0000726e      4889e8         mov rax, rbp
0x00007271      5b             pop rbx
0x00007272      5d             pop rbp
0x00007273      415c           pop r12
0x00007275      415d           pop r13
0x00007277      415e           pop r14
0x00007279      c3             ret
0x0000727a      660f1f440000   nop word [rax + rax]
0x00007280      4c89e7         mov rdi, r12
0x00007283      e8c8e8ffff     call sym.restore_initial_cwd
0x00007288      85c0           test eax, eax
0x0000728a      0f8501040000   jne 0x7691
0x00007290      41f744244802.  test dword [r12 + 0x48], 0x102
0x00007299      498b7c2458     mov rdi, qword [r12 + 0x58]
0x0000729e      0f8434010000   je 0x73d8
0x000072a4      4885ff         test rdi, rdi
0x000072a7      7405           je 0x72ae
0x000072a9      e8c2140000     call sym.hash_free
0x000072ae      488b5360       mov rdx, qword [rbx + 0x60]
0x000072b2      488dab080100.  lea rbp, [rbx + 0x108]
0x000072b9      498b7c2420     mov rdi, qword [r12 + 0x20]
0x000072be      4889ee         mov rsi, rbp
0x000072c1      48895348       mov qword [rbx + 0x48], rdx
0x000072c5      4883c201       add rdx, 1
0x000072c9      e8c2a8ffff     call sym.imp.memmove
0x000072ce      be2f000000     mov esi, 0x2f                           ; '/'
0x000072d3      4889ef         mov rdi, rbp
0x000072d6      e805a7ffff     call sym.imp.strrchr
0x000072db      4885c0         test rax, rax
0x000072de      742b           je 0x730b
0x000072e0      4839c5         cmp rbp, rax
0x000072e3      0f84c7010000   je 0x74b0                               ; ../coreutils-8.31/lib/fts.c:-581
0x000072e9      4c8d6801       lea r13, [rax + 1]
0x000072ed      4c89ef         mov rdi, r13
0x000072f0      e86ba6ffff     call sym.imp.strlen
0x000072f5      488d5001       lea rdx, [rax + 1]
0x000072f9      4989c6         mov r14, rax
0x000072fc      4c89ee         mov rsi, r13
0x000072ff      4889ef         mov rdi, rbp
0x00007302      e889a8ffff     call sym.imp.memmove
0x00007307      4c897360       mov qword [rbx + 0x60], r14
0x0000730b      498b442420     mov rax, qword [r12 + 0x20]
0x00007310      418b7c2448     mov edi, dword [r12 + 0x48]
0x00007315      498d742458     lea rsi, [r12 + 0x58]
0x0000731a      4889dd         mov rbp, rbx
0x0000731d      48894338       mov qword [rbx + 0x38], rax
0x00007321      48894330       mov qword [rbx + 0x30], rax
0x00007325      e8f6e8ffff     call sym.setup_dir.isra.4
0x0000732a      0fb74370       movzx eax, word [rbx + 0x70]
0x0000732e      6683f80b       cmp ax, 0xb
0x00007332      49892c24       mov qword [r12], rbp
0x00007336      0f847cfeffff   je 0x71b8
0x0000733c      6683f801       cmp ax, 1
0x00007340      0f8534feffff   jne 0x717a
0x00007346      48837d5800     cmp qword [rbp + 0x58], 0
0x0000734b      7509           jne 0x7356
0x0000734d      488b4578       mov rax, qword [rbp + 0x78]
0x00007351      4989442418     mov qword [r12 + 0x18], rax
0x00007356      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000735b      498d742458     lea rsi, [r12 + 0x58]
0x00007360      4889ea         mov rdx, rbp
0x00007363      e8e8ebffff     call sym.enter_dir.isra.10
0x00007368      84c0           test al, al
0x0000736a      0f850afeffff   jne 0x717a
0x00007370      e82ba5ffff     call sym.imp.__errno_location
0x00007375      31ed           xor ebp, ebp
0x00007377      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/fts.c:-735 ; [0xc:4]=0
0x0000737d      e9f8fdffff     jmp 0x717a
0x00007382      660f1f440000   nop word [rax + rax]
0x00007388      6683f802       cmp ax, 2                               ; ../coreutils-8.31/lib/fts.c:-730
0x0000738c      0f849b020000   je 0x762d
0x00007392      488b4508       mov rax, qword [rbp + 8]
0x00007396      488db5080100.  lea rsi, [rbp + 0x108]
0x0000739d      488b7848       mov rdi, qword [rax + 0x48]
0x000073a1      488b4038       mov rax, qword [rax + 0x38]
0x000073a5      807c38ff2f     cmp byte [rax + rdi - 1], 0x2f
0x000073aa      488d57ff       lea rdx, [rdi - 1]
0x000073ae      480f44fa       cmove rdi, rdx
0x000073b2      49037c2420     add rdi, qword [r12 + 0x20]
0x000073b7      c6072f         mov byte [rdi], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x000073ba      488b4560       mov rax, qword [rbp + 0x60]             ; ../coreutils-8.31/lib/fts.c:-598
0x000073be      4883c701       add rdi, 1
0x000073c2      488d5001       lea rdx, [rax + 1]
0x000073c6      e8c5a7ffff     call sym.imp.memmove
0x000073cb      0fb74570       movzx eax, word [rbp + 0x70]
0x000073cf      e95affffff     jmp 0x732e
0x000073d4      0f1f4000       nop dword [rax]
0x000073d8      e8b3a8ffff     call sym..plt.got
0x000073dd      e9ccfeffff     jmp 0x72ae
0x000073e2      80e6ef         and dh, 0xef
0x000073e5      4189542448     mov dword [r12 + 0x48], edx
0x000073ea      e8c1e4ffff     call sym.fts_lfree
0x000073ef      49c744240800.  mov qword [r12 + 8], 0
0x000073f8      be03000000     mov esi, 3
0x000073fd      4c89e7         mov rdi, r12
0x00007400      e8bbecffff     call sym.fts_build
0x00007405      4885c0         test rax, rax
0x00007408      4989442408     mov qword [r12 + 8], rax
0x0000740d      0f84f1000000   je 0x7504
0x00007413      4889c5         mov rbp, rax
0x00007416      49c744240800.  mov qword [r12 + 8], 0
0x0000741f      e96effffff     jmp 0x7392
0x00007424      0f1f4000       nop dword [rax]
0x00007428      a801           test al, 1
0x0000742a      0f85a3fcffff   jne 0x70d3
0x00007430      488b7308       mov rsi, qword [rbx + 8]
0x00007434      488d0d1f3d00.  lea rcx, [0x0000b15a]                   ; ".."
0x0000743b      baffffffff     mov edx, 0xffffffff                     ; -1
0x00007440      4c89e7         mov rdi, r12
0x00007443      e888e8ffff     call sym.fts_safe_changedir
0x00007448      85c0           test eax, eax
0x0000744a      0f8483fcffff   je 0x70d3
0x00007450      e84ba4ffff     call sym.imp.__errno_location
0x00007455      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000745a      8b00           mov eax, dword [rax]
0x0000745c      81cf00200000   or edi, 0x2000                          ; ../coreutils-8.31/lib/fts.c:-708
0x00007462      894340         mov dword [rbx + 0x40], eax
0x00007465      41897c2448     mov dword [r12 + 0x48], edi
0x0000746a      e969fcffff     jmp 0x70d8
0x0000746f      90             nop
0x00007470      4c89e7         mov rdi, r12
0x00007473      e8d8e6ffff     call sym.restore_initial_cwd
0x00007478      85c0           test eax, eax
0x0000747a      75d4           jne 0x7450
0x0000747c      e952fcffff     jmp 0x70d3                              ; ../coreutils-8.31/lib/fts.c:-700
0x00007481      0f1f80000000.  nop dword [rax]
0x00007488      b806000000     mov eax, 6
0x0000748d      498d742458     lea rsi, [r12 + 0x58]
0x00007492      4889da         mov rdx, rbx
0x00007495      66894370       mov word [rbx + 0x70], ax               ; ../coreutils-8.31/lib/fts.c:-790
0x00007499      e862ebffff     call sym.leave_dir.isra.12
0x0000749e      418b7c2448     mov edi, dword [r12 + 0x48]
0x000074a3      e94bfcffff     jmp 0x70f3
0x000074a8      0f1f84000000.  nop dword [rax + rax]
0x000074b0      80bb09010000.  cmp byte [rbx + 0x109], 0
0x000074b7      0f852cfeffff   jne 0x72e9
0x000074bd      e949feffff     jmp 0x730b
0x000074c2      498b6c2408     mov rbp, qword [r12 + 8]
0x000074c7      e94affffff     jmp 0x7416
0x000074cc      f6c402         test ah, 2
0x000074cf      0f8498010000   je 0x766d
0x000074d5      89fe           mov esi, edi
0x000074d7      ba01000000     mov edx, 1
0x000074dc      4c89e7         mov rdi, r12
0x000074df      e8fce5ffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts.c:-815
0x000074e4      8b7b44         mov edi, dword [rbx + 0x44]
0x000074e7      e9e2fbffff     jmp 0x70ce
0x000074ec      418b742448     mov esi, dword [r12 + 0x48]
0x000074f1      40f6c604       test sil, 4
0x000074f5      0f8401020000   je 0x76fc
0x000074fb      49892c24       mov qword [r12], rbp
0x000074ff      e942feffff     jmp 0x7346
0x00007504      418b7c2448     mov edi, dword [r12 + 0x48]
0x00007509      f7c700200000   test edi, 0x2000
0x0000750f      0f85e9fbffff   jne 0x70fe
0x00007515      448b4d40       mov r9d, dword [rbp + 0x40]
0x00007519      4585c9         test r9d, r9d
0x0000751c      7412           je 0x7530                               ; ../coreutils-8.31/lib/fts.c:-755
0x0000751e      66837d7004     cmp word [rbp + 0x70], 4
0x00007523      740b           je 0x7530
0x00007525      41b807000000   mov r8d, 7
0x0000752b      6644894570     mov word [rbp + 0x70], r8w              ; ../coreutils-8.31/lib/fts.c:-774
0x00007530      498d742458     lea rsi, [r12 + 0x58]
0x00007535      4889ea         mov rdx, rbp
0x00007538      e8c3eaffff     call sym.leave_dir.isra.12
0x0000753d      e938fcffff     jmp 0x717a
0x00007542      4889df         mov rdi, rbx
0x00007545      31ed           xor ebp, ebp
0x00007547      e844a7ffff     call sym..plt.got
0x0000754c      e84fa3ffff     call sym.imp.__errno_location
0x00007551      c70000000000   mov dword [rax], 0
0x00007557      49c704240000.  mov qword [r12], 0
0x0000755f      e916fcffff     jmp 0x717a
0x00007564      0f1f4000       nop dword [rax]
0x00007568      488b5d08       mov rbx, qword [rbp + 8]
0x0000756c      48837b6800     cmp qword [rbx + 0x68], 0
0x00007571      7511           jne 0x7584
0x00007573      418b442448     mov eax, dword [r12 + 0x48]
0x00007578      83e018         and eax, 0x18
0x0000757b      83f818         cmp eax, 0x18
0x0000757e      0f8459010000   je 0x76dd
0x00007584      31d2           xor edx, edx
0x00007586      4889ee         mov rsi, rbp
0x00007589      4c89e7         mov rdi, r12
0x0000758c      e8afdfffff     call sym.fts_stat
0x00007591      8b9590000000   mov edx, dword [rbp + 0x90]
0x00007597      66894570       mov word [rbp + 0x70], ax
0x0000759b      81e200f00000   and edx, 0xf000
0x000075a1      81fa00400000   cmp edx, 0x4000
0x000075a7      0f858ffdffff   jne 0x733c
0x000075ad      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:-805
0x000075b2      0f8416010000   je 0x76ce
0x000075b8      488b4b68       mov rcx, qword [rbx + 0x68]             ; ../coreutils-8.31/lib/fts.c:-804
0x000075bc      488d51ff       lea rdx, [rcx - 1]
0x000075c0      4883fafd       cmp rdx, 0xfffffffffffffffd
0x000075c4      7704           ja 0x75ca
0x000075c6      48895368       mov qword [rbx + 0x68], rdx
0x000075ca      6683f801       cmp ax, 1
0x000075ce      0f85a6fbffff   jne 0x717a
0x000075d4      e97dfdffff     jmp 0x7356                              ; ../coreutils-8.31/lib/fts.c:-796
0x000075d9      0f1f80000000.  nop dword [rax]
0x000075e0      488b4348       mov rax, qword [rbx + 0x48]
0x000075e4      498b542420     mov rdx, qword [r12 + 0x20]
0x000075e9      be03000000     mov esi, 3
0x000075ee      49891c24       mov qword [r12], rbx
0x000075f2      4c89e7         mov rdi, r12
0x000075f5      c6040200       mov byte [rdx + rax], 0                 ; ../coreutils-8.31/lib/fts.c:-777
0x000075f9      e8c2eaffff     call sym.fts_build
0x000075fe      4885c0         test rax, rax
0x00007601      4889c3         mov rbx, rax
0x00007604      7452           je 0x7658
0x00007606      4889ef         mov rdi, rbp
0x00007609      4889dd         mov rbp, rbx
0x0000760c      e87fa6ffff     call sym..plt.got
0x00007611      e97cfdffff     jmp 0x7392
0x00007616      662e0f1f8400.  nop word cs:[rax + rax]
0x00007620      8b7d44         mov edi, dword [rbp + 0x44]             ; ../coreutils-8.31/lib/fts.c:-754
0x00007623      e808a4ffff     call sym.imp.close
0x00007628      e918fbffff     jmp 0x7145                              ; ../coreutils-8.31/lib/fts.c:-757
0x0000762d      ba01000000     mov edx, 1
0x00007632      4889de         mov rsi, rbx
0x00007635      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-745
0x00007638      e803dfffff     call sym.fts_stat
0x0000763d      6683f801       cmp ax, 1
0x00007641      66894370       mov word [rbx + 0x70], ax
0x00007645      745a           je 0x76a1                               ; ../coreutils-8.31/lib/fts.c:-744
0x00007647      be03000000     mov esi, 3
0x0000764c      4889dd         mov rbp, rbx
0x0000764f      66897374       mov word [rbx + 0x74], si
0x00007653      e93afdffff     jmp 0x7392
0x00007658      41f644244920   test byte [r12 + 0x49], 0x20
0x0000765e      0f859afaffff   jne 0x70fe
0x00007664      488b5d08       mov rbx, qword [rbp + 8]
0x00007668      e90bfaffff     jmp 0x7078
0x0000766d      e8dea4ffff     call sym.imp.fchdir
0x00007672      85c0           test eax, eax
0x00007674      7413           je 0x7689
0x00007676      e825a2ffff     call sym.imp.__errno_location
0x0000767b      8b00           mov eax, dword [rax]
0x0000767d      894340         mov dword [rbx + 0x40], eax
0x00007680      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0x69850fc5
0x00007689      8b7b44         mov edi, dword [rbx + 0x44]             ; ../coreutils-8.31/lib/fts.c:-741
0x0000768c      e93dfaffff     jmp 0x70ce
0x00007691      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0x69850fc5
0x0000769a      31ed           xor ebp, ebp
0x0000769c      e9d9faffff     jmp 0x717a
0x000076a1      418b742448     mov esi, dword [r12 + 0x48]
0x000076a6      40f6c604       test sil, 4
0x000076aa      759b           jne 0x7647
0x000076ac      418b7c242c     mov edi, dword [r12 + 0x2c]
0x000076b1      488d15a33a00.  lea rdx, [0x0000b15b]                   ; ../coreutils-8.31/lib/fts.c:-738 ; "."
0x000076b8      e8d3e5ffff     call sym.diropen.isra.6
0x000076bd      85c0           test eax, eax
0x000076bf      894344         mov dword [rbx + 0x44], eax
0x000076c2      787c           js 0x7740
0x000076c4      66834b7202     or word [rbx + 0x72], 2
0x000076c9      e979ffffff     jmp 0x7647
0x000076ce      6683f801       cmp ax, 1
0x000076d2      0f85a2faffff   jne 0x717a
0x000076d8      e970fcffff     jmp 0x734d
0x000076dd      418b74242c     mov esi, dword [r12 + 0x2c]
0x000076e2      4889df         mov rdi, rbx
0x000076e5      e886e3ffff     call sym.leaf_optimization
0x000076ea      83f802         cmp eax, 2
0x000076ed      0f8591feffff   jne 0x7584
0x000076f3      0fb74570       movzx eax, word [rbp + 0x70]
0x000076f7      e940fcffff     jmp 0x733c
0x000076fc      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00007701      488d15533a00.  lea rdx, [0x0000b15b]                   ; ../coreutils-8.31/lib/fts.c:-730 ; "."
0x00007708      e883e5ffff     call sym.diropen.isra.6
0x0000770d      85c0           test eax, eax
0x0000770f      894544         mov dword [rbp + 0x44], eax
0x00007712      780e           js 0x7722                               ; ../coreutils-8.31/lib/fts.c:-727
0x00007714      66834d7202     or word [rbp + 0x72], 2
0x00007719      0fb74570       movzx eax, word [rbp + 0x70]
0x0000771d      e90cfcffff     jmp 0x732e
0x00007722      e879a1ffff     call sym.imp.__errno_location
0x00007727      8b00           mov eax, dword [rax]
0x00007729      41bb07000000   mov r11d, 7
0x0000772f      6644895d70     mov word [rbp + 0x70], r11w
0x00007734      894540         mov dword [rbp + 0x40], eax
0x00007737      49892c24       mov qword [r12], rbp
0x0000773b      e93afaffff     jmp 0x717a
0x00007740      e85ba1ffff     call sym.imp.__errno_location
0x00007745      8b00           mov eax, dword [rax]
0x00007747      bf07000000     mov edi, 7
0x0000774c      66897b70       mov word [rbx + 0x70], di
0x00007750      894340         mov dword [rbx + 0x40], eax
0x00007753      e9effeffff     jmp 0x7647
0x00007758      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fts_set:
0x00007760      83fa04         cmp edx, 4
0x00007763      770b           ja 0x7770
0x00007765      66895674       mov word [rsi + 0x74], dx
0x00007769      31c0           xor eax, eax
0x0000776b      c3             ret
0x0000776c      0f1f4000       nop dword [rax]
0x00007770      4883ec08       sub rsp, 8
0x00007774      e827a1ffff     call sym.imp.__errno_location
0x00007779      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x27900000
0x0000777f      b801000000     mov eax, 1
0x00007784      4883c408       add rsp, 8
0x00007788      c3             ret
0x00007789      0f1f80000000.  nop dword [rax]
;-- rpl_fts_children:
0x00007790      4156           push r14
0x00007792      4155           push r13
0x00007794      4154           push r12
0x00007796      55             push rbp
0x00007797      4189f4         mov r12d, esi
0x0000779a      53             push rbx
0x0000779b      4889fb         mov rbx, rdi
0x0000779e      e8fda0ffff     call sym.imp.__errno_location
0x000077a3      41f7c4ffefff.  test r12d, 0xffffefff
0x000077aa      4989c5         mov r13, rax
0x000077ad      0f85e5000000   jne 0x7898
0x000077b3      488b2b         mov rbp, qword [rbx]
0x000077b6      c70000000000   mov dword [rax], 0
0x000077bc      f6434920       test byte [rbx + 0x49], 0x20
0x000077c0      757e           jne 0x7840
0x000077c2      0fb74570       movzx eax, word [rbp + 0x70]
0x000077c6      6683f809       cmp ax, 9
0x000077ca      7464           je 0x7830
0x000077cc      6683f801       cmp ax, 1
0x000077d0      756e           jne 0x7840
0x000077d2      488b7b08       mov rdi, qword [rbx + 8]
0x000077d6      4885ff         test rdi, rdi
0x000077d9      7405           je 0x77e0
0x000077db      e8d0e0ffff     call sym.fts_lfree
0x000077e0      4181fc001000.  cmp r12d, 0x1000
0x000077e7      41be01000000   mov r14d, 1
0x000077ed      750d           jne 0x77fc
0x000077ef      814b48001000.  or dword [rbx + 0x48], 0x1000           ; [0x1000:4]=0xa8ef
0x000077f6      41be02000000   mov r14d, 2
0x000077fc      48837d5800     cmp qword [rbp + 0x58], 0
0x00007801      7512           jne 0x7815
0x00007803      488b4530       mov rax, qword [rbp + 0x30]
0x00007807      80382f         cmp byte [rax], 0x2f
0x0000780a      7409           je 0x7815
0x0000780c      8b7348         mov esi, dword [rbx + 0x48]
0x0000780f      40f6c604       test sil, 4
0x00007813      743b           je 0x7850
0x00007815      4489f6         mov esi, r14d
0x00007818      4889df         mov rdi, rbx
0x0000781b      e8a0e8ffff     call sym.fts_build
0x00007820      48894308       mov qword [rbx + 8], rax
0x00007824      5b             pop rbx
0x00007825      5d             pop rbp
0x00007826      415c           pop r12
0x00007828      415d           pop r13
0x0000782a      415e           pop r14
0x0000782c      c3             ret
0x0000782d      0f1f00         nop dword [rax]
0x00007830      5b             pop rbx
0x00007831      488b4510       mov rax, qword [rbp + 0x10]
0x00007835      5d             pop rbp
0x00007836      415c           pop r12
0x00007838      415d           pop r13
0x0000783a      415e           pop r14
0x0000783c      c3             ret
0x0000783d      0f1f00         nop dword [rax]
0x00007840      5b             pop rbx
0x00007841      31c0           xor eax, eax
0x00007843      5d             pop rbp
0x00007844      415c           pop r12
0x00007846      415d           pop r13
0x00007848      415e           pop r14
0x0000784a      c3             ret
0x0000784b      0f1f440000     nop dword [rax + rax]
0x00007850      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00007853      488d15013900.  lea rdx, [0x0000b15b]                   ; "."
0x0000785a      e831e4ffff     call sym.diropen.isra.6
0x0000785f      85c0           test eax, eax
0x00007861      89c5           mov ebp, eax
0x00007863      7854           js 0x78b9
0x00007865      4489f6         mov esi, r14d
0x00007868      4889df         mov rdi, rbx
0x0000786b      e850e8ffff     call sym.fts_build
0x00007870      f6434902       test byte [rbx + 0x49], 2
0x00007874      48894308       mov qword [rbx + 8], rax
0x00007878      752e           jne 0x78a8
0x0000787a      89ef           mov edi, ebp
0x0000787c      e8cfa2ffff     call sym.imp.fchdir
0x00007881      85c0           test eax, eax
0x00007883      7543           jne 0x78c8
0x00007885      89ef           mov edi, ebp
0x00007887      e8a4a1ffff     call sym.imp.close
0x0000788c      488b4308       mov rax, qword [rbx + 8]
0x00007890      eb92           jmp 0x7824
0x00007892      660f1f440000   nop word [rax + rax]
0x00007898      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x27900000
0x0000789e      31c0           xor eax, eax
0x000078a0      e97fffffff     jmp 0x7824
0x000078a5      0f1f00         nop dword [rax]
0x000078a8      ba01000000     mov edx, 1
0x000078ad      89ee           mov esi, ebp
0x000078af      4889df         mov rdi, rbx
0x000078b2      e829e2ffff     call sym.cwd_advance_fd
0x000078b7      ebd3           jmp 0x788c
0x000078b9      48c743080000.  mov qword [rbx + 8], 0
0x000078c1      31c0           xor eax, eax
0x000078c3      e95cffffff     jmp 0x7824
0x000078c8      418b5d00       mov ebx, dword [r13]
0x000078cc      89ef           mov edi, ebp
0x000078ce      e85da1ffff     call sym.imp.close
0x000078d3      31c0           xor eax, eax
0x000078d5      41895d00       mov dword [r13], ebx
0x000078d9      e946ffffff     jmp 0x7824
0x000078de      6690           nop
;-- rpl_mbrtowc:
0x000078e0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000078e2      4154           push r12
0x000078e4      4989f5         mov r13, rsi
0x000078e7      55             push rbp
0x000078e8      53             push rbx
0x000078e9      4889fb         mov rbx, rdi
0x000078ec      4989d4         mov r12, rdx
0x000078ef      4883ec18       sub rsp, 0x18
0x000078f3      64488b042528.  mov rax, qword fs:[0x28]
0x000078fc      4889442408     mov qword [rsp + 8], rax
0x00007901      31c0           xor eax, eax
0x00007903      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00007908      4885ff         test rdi, rdi
0x0000790b      480f44d8       cmove rbx, rax
0x0000790f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00007912      e8a9a0ffff     call sym.imp.mbrtowc
0x00007917      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000791b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000791e      7620           jbe 0x7940                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00007920      4d85e4         test r12, r12
0x00007923      741b           je 0x7940
0x00007925      31ff           xor edi, edi
0x00007927      e824030000     call sym.hard_locale
0x0000792c      84c0           test al, al
0x0000792e      7510           jne 0x7940
0x00007930      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00007935      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000793a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000793c      0f1f4000       nop dword [rax]
0x00007940      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00007945      644833142528.  xor rdx, qword fs:[0x28]
0x0000794e      4889e8         mov rax, rbp
0x00007951      750b           jne 0x795e
0x00007953      4883c418       add rsp, 0x18
0x00007957      5b             pop rbx
0x00007958      5d             pop rbp
0x00007959      415c           pop r12
0x0000795b      415d           pop r13
0x0000795d      c3             ret
0x0000795e      e83da0ffff     call sym.imp.__stack_chk_fail
0x00007963      662e0f1f8400.  nop word cs:[rax + rax]
0x0000796d      0f1f00         nop dword [rax]
;-- getfileconat:
0x00007970      4155           push r13
0x00007972      4154           push r12
0x00007974      4989f4         mov r12, rsi
0x00007977      55             push rbp
0x00007978      53             push rbx
0x00007979      89fb           mov ebx, edi
0x0000797b      4881ece80f00.  sub rsp, 0xfe8
0x00007982      64488b042528.  mov rax, qword fs:[0x28]
0x0000798b      48898424d80f.  mov qword [rsp + 0xfd8], rax
0x00007993      31c0           xor eax, eax
0x00007995      e8069fffff     call sym.imp.__errno_location
0x0000799a      83fb9c         cmp ebx, 0xffffff9c
0x0000799d      4889c5         mov rbp, rax
0x000079a0      747e           je 0x7a20
0x000079a2      41803c242f     cmp byte [r12], 0x2f
0x000079a7      7477           je 0x7a20
0x000079a9      4c8d6c2410     lea r13, [rsp + 0x10]
0x000079ae      4c89e2         mov rdx, r12
0x000079b1      89de           mov esi, ebx
0x000079b3      4c89ef         mov rdi, r13
0x000079b6      e8f51f0000     call sym.openat_proc_name
0x000079bb      4885c0         test rax, rax
0x000079be      7414           je 0x79d4
0x000079c0      4c39e8         cmp rax, r13
0x000079c3      c745005f0000.  mov dword [rbp], 0x5f                   ; '_'
0x000079ca      7408           je 0x79d4
0x000079cc      4889c7         mov rdi, rax
0x000079cf      e8bca2ffff     call sym..plt.got
0x000079d4      4989e4         mov r12, rsp
0x000079d7      4c89e7         mov rdi, r12
0x000079da      e8f1170000     call sym.save_cwd
0x000079df      85c0           test eax, eax
0x000079e1      0f8597000000   jne 0x7a7e
0x000079e7      85db           test ebx, ebx
0x000079e9      7805           js 0x79f0
0x000079eb      391c24         cmp dword [rsp], ebx
0x000079ee      7470           je 0x7a60
0x000079f0      89df           mov edi, ebx
0x000079f2      e859a1ffff     call sym.imp.fchdir
0x000079f7      85c0           test eax, eax
0x000079f9      7555           jne 0x7a50
0x000079fb      c745005f0000.  mov dword [rbp], 0x5f                   ; '_'
0x00007a02      4c89e7         mov rdi, r12
0x00007a05      e816180000     call sym.restore_cwd
0x00007a0a      85c0           test eax, eax
0x00007a0c      7568           jne 0x7a76
0x00007a0e      4c89e7         mov rdi, r12
0x00007a11      e82a180000     call sym.free_cwd
0x00007a16      662e0f1f8400.  nop word cs:[rax + rax]
0x00007a20      c745005f0000.  mov dword [rbp], 0x5f                   ; '_'
0x00007a27      488b8c24d80f.  mov rcx, qword [rsp + 0xfd8]
0x00007a2f      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007a38      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007a3d      7532           jne 0x7a71
0x00007a3f      4881c4e80f00.  add rsp, 0xfe8
0x00007a46      5b             pop rbx
0x00007a47      5d             pop rbp
0x00007a48      415c           pop r12
0x00007a4a      415d           pop r13
0x00007a4c      c3             ret
0x00007a4d      0f1f00         nop dword [rax]
0x00007a50      8b5d00         mov ebx, dword [rbp]
0x00007a53      4c89e7         mov rdi, r12
0x00007a56      e8e5170000     call sym.free_cwd
0x00007a5b      895d00         mov dword [rbp], ebx
0x00007a5e      ebc7           jmp 0x7a27
0x00007a60      4c89e7         mov rdi, r12
0x00007a63      e8d8170000     call sym.free_cwd
0x00007a68      c74500090000.  mov dword [rbp], 9
0x00007a6f      ebb6           jmp 0x7a27
0x00007a71      e82a9fffff     call sym.imp.__stack_chk_fail
0x00007a76      8b7d00         mov edi, dword [rbp]
0x00007a79      e832160000     call sym.openat_restore_fail
0x00007a7e      8b7d00         mov edi, dword [rbp]
0x00007a81      e8fa150000     call sym.openat_save_fail
0x00007a86      662e0f1f8400.  nop word cs:[rax + rax]
;-- lgetfileconat:
0x00007a90      e9dbfeffff     jmp sym.getfileconat
0x00007a95      90             nop
0x00007a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- setfileconat:
0x00007aa0      e9cbfeffff     jmp sym.getfileconat
0x00007aa5      90             nop
0x00007aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- lsetfileconat:
0x00007ab0      e9bbfeffff     jmp sym.getfileconat
0x00007ab5      662e0f1f8400.  nop word cs:[rax + rax]
0x00007abf      90             nop
;-- close_stream:
0x00007ac0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00007ac2      55             push rbp
0x00007ac3      4889fd         mov rbp, rdi
0x00007ac6      53             push rbx
0x00007ac7      e8149effff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00007acc      8b5d00         mov ebx, dword [rbp]
0x00007acf      4889ef         mov rdi, rbp
0x00007ad2      4989c4         mov r12, rax
0x00007ad5      e8361b0000     call sym.rpl_fclose
0x00007ada      83e320         and ebx, 0x20                           ; "@"
0x00007add      85db           test ebx, ebx
0x00007adf      7517           jne 0x7af8
0x00007ae1      85c0           test eax, eax
0x00007ae3      740a           je 0x7aef                               ; stdio.h:-186
0x00007ae5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00007ae8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007aed      7439           je 0x7b28
0x00007aef      5b             pop rbx
0x00007af0      5d             pop rbp
0x00007af1      415c           pop r12
0x00007af3      c3             ret
0x00007af4      0f1f4000       nop dword [rax]
0x00007af8      85c0           test eax, eax
0x00007afa      751c           jne 0x7b18
0x00007afc      e89f9dffff     call sym.imp.__errno_location
0x00007b01      c70000000000   mov dword [rax], 0
0x00007b07      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007b0c      5b             pop rbx
0x00007b0d      5d             pop rbp
0x00007b0e      415c           pop r12
0x00007b10      c3             ret
0x00007b11      0f1f80000000.  nop dword [rax]
0x00007b18      5b             pop rbx
0x00007b19      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007b1e      5d             pop rbp                                 ; stdio.h:-186
0x00007b1f      415c           pop r12
0x00007b21      c3             ret
0x00007b22      660f1f440000   nop word [rax + rax]
0x00007b28      e8739dffff     call sym.imp.__errno_location
0x00007b2d      833809         cmp dword [rax], 9
0x00007b30      5b             pop rbx
0x00007b31      5d             pop rbp
0x00007b32      415c           pop r12                                 ; stdio.h:-178
0x00007b34      0f95c0         setne al
0x00007b37      0fb6c0         movzx eax, al
0x00007b3a      f7d8           neg eax
0x00007b3c      c3             ret
0x00007b3d      0f1f00         nop dword [rax]
;-- cycle_check_init:
0x00007b40      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/cycle-check.c:44
0x00007b48      c7471816f695.  mov dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:46 ; [0x95f616:4]=-1
0x00007b4f      c3             ret                                     ; ../coreutils-8.31/lib/cycle-check.c:47
;-- cycle_check:
0x00007b50      817f1816f695.  cmp dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:59
0x00007b57      755e           jne 0x7bb7
0x00007b59      488b5710       mov rdx, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/cycle-check.c:65
0x00007b5d      488b4e08       mov rcx, qword [rsi + 8]
0x00007b61      4885d2         test rdx, rdx
0x00007b64      741a           je 0x7b80
0x00007b66      48390f         cmp qword [rdi], rcx
0x00007b69      742d           je 0x7b98
0x00007b6b      4c8d4201       lea r8, [rdx + 1]                       ; ../coreutils-8.31/lib/cycle-check.c:70
0x00007b6f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00007b71      4c85c2         test rdx, r8                            ; ../coreutils-8.31/lib/cycle-check.c:70
0x00007b74      4c894710       mov qword [rdi + 0x10], r8
0x00007b78      7436           je 0x7bb0
0x00007b7a      f3c3           ret                                     ; ../coreutils-8.31/lib/cycle-check.c:85
0x00007b7c      0f1f4000       nop dword [rax]
0x00007b80      48c747100100.  mov qword [rdi + 0x10], 1               ; ../coreutils-8.31/lib/cycle-check.c:70
0x00007b88      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/cycle-check.c:80
0x00007b8b      48890f         mov qword [rdi], rcx                    ; ../coreutils-8.31/lib/cycle-check.c:81
0x00007b8e      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/cycle-check.c:80
0x00007b92      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00007b94      c3             ret
0x00007b95      0f1f00         nop dword [rax]
0x00007b98      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/cycle-check.c:65
0x00007b9c      483906         cmp qword [rsi], rax
0x00007b9f      75ca           jne 0x7b6b
0x00007ba1      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/cycle-check.c:66
0x00007ba6      c3             ret
0x00007ba7      660f1f840000.  nop word [rax + rax]
0x00007bb0      4d85c0         test r8, r8                             ; ../coreutils-8.31/lib/cycle-check.c:77
0x00007bb3      74ec           je 0x7ba1
0x00007bb5      ebd1           jmp 0x7b88
0x00007bb7      488d0d123600.  lea rcx, obj.__PRETTY_FUNCTION__.3994   ; ../coreutils-8.31/lib/cycle-check.c:60 ; 0xb1d0 ; "cycle_check"
0x00007bbe      488d35cb3500.  lea rsi, str..._coreutils_8.31_lib_cycle_check.c ; 0xb190 ; "../coreutils-8.31/lib/cycle-check.c"
0x00007bc5      488d3de83500.  lea rdi, str.state__magic____9827862    ; 0xb1b4 ; "state->magic == 9827862"
0x00007bcc      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/cycle-check.c:59
0x00007bd0      ba3c000000     mov edx, 0x3c                           ; ../coreutils-8.31/lib/cycle-check.c:60 ; '<'
0x00007bd5      e8269effff     call sym.imp.__assert_fail
0x00007bda      660f1f440000   nop word [rax + rax]
;-- open_safer:
0x00007be0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x00007be4      4889542430     mov qword [rsp + 0x30], rdx
0x00007be9      31d2           xor edx, edx
0x00007beb      64488b042528.  mov rax, qword fs:[0x28]
0x00007bf4      4889442418     mov qword [rsp + 0x18], rax
0x00007bf9      31c0           xor eax, eax
0x00007bfb      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x00007bff      7527           jne 0x7c28
0x00007c01      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00007c03      e8b89fffff     call sym.imp.open
0x00007c08      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x00007c0a      e851160000     call sym.fd_safer
0x00007c0f      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x00007c14      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007c1d      752a           jne 0x7c49
0x00007c1f      4883c458       add rsp, 0x58
0x00007c23      c3             ret
0x00007c24      0f1f4000       nop dword [rax]
0x00007c28      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x00007c2d      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00007c34      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x00007c38      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x00007c3d      488d442420     lea rax, [rsp + 0x20]
0x00007c42      4889442410     mov qword [rsp + 0x10], rax
0x00007c47      ebb8           jmp 0x7c01
0x00007c49      e8529dffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x00007c4e      6690           nop
;-- hard_locale:
0x00007c50      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00007c54      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00007c56      e8159fffff     call sym.imp.setlocale
0x00007c5b      4889c2         mov rdx, rax
0x00007c5e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00007c63      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00007c66      741d           je 0x7c85
0x00007c68      488d3d6d3500.  lea rdi, [0x0000b1dc]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00007c6f      b902000000     mov ecx, 2
0x00007c74      4889d6         mov rsi, rdx
0x00007c77      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007c79      0f97c1         seta cl
0x00007c7c      80d900         sbb cl, 0
0x00007c7f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00007c81      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00007c83      750b           jne 0x7c90
0x00007c85      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00007c89      c3             ret
0x00007c8a      660f1f440000   nop word [rax + rax]
0x00007c90      488d3d473500.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xb1de ; "POSIX"
0x00007c97      b906000000     mov ecx, 6
0x00007c9c      4889d6         mov rsi, rdx
0x00007c9f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007ca1      0f97c0         seta al
0x00007ca4      1c00           sbb al, 0
0x00007ca6      84c0           test al, al
0x00007ca8      0f95c0         setne al
0x00007cab      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00007caf      c3             ret
;-- next_prime:
0x00007cb0      4883ff0a       cmp rdi, 0xa
0x00007cb4      b80a000000     mov eax, 0xa
0x00007cb9      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x00007cc3      480f42f8       cmovb rdi, rax
0x00007cc7      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x00007ccb      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00007ccf      746e           je 0x7d3f
0x00007cd1      0f1f80000000.  nop dword [rax]
0x00007cd8      4889f8         mov rax, rdi
0x00007cdb      4889f9         mov rcx, rdi
0x00007cde      49f7e1         mul r9
0x00007ce1      4889d0         mov rax, rdx
0x00007ce4      48d1e8         shr rax, 1
0x00007ce7      488d0440       lea rax, [rax + rax*2]
0x00007ceb      4829c1         sub rcx, rax
0x00007cee      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x00007cf2      4889c8         mov rax, rcx
0x00007cf5      7639           jbe 0x7d30
0x00007cf7      4885c9         test rcx, rcx
0x00007cfa      7439           je 0x7d35
0x00007cfc      41b810000000   mov r8d, 0x10
0x00007d02      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x00007d07      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x00007d0c      eb0b           jmp 0x7d19
0x00007d0e      6690           nop
0x00007d10      4983c008       add r8, 8
0x00007d14      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00007d17      741c           je 0x7d35
0x00007d19      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x00007d1d      31d2           xor edx, edx
0x00007d1f      4889f8         mov rax, rdi
0x00007d22      48f7f1         div rcx
0x00007d25      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00007d28      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x00007d2b      4889d0         mov rax, rdx
0x00007d2e      72e0           jb 0x7d10
0x00007d30      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00007d33      750a           jne 0x7d3f
0x00007d35      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00007d39      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00007d3d      7599           jne 0x7cd8
0x00007d3f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00007d42      c3             ret
0x00007d43      0f1f00         nop dword [rax]
0x00007d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00007d50      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00007d53      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00007d55      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00007d59      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x00007d5c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x00007d5f      c3             ret
;-- raw_comparator:
0x00007d60      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00007d63      0f94c0         sete al
0x00007d66      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00007d67      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00007d70      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00007d71      4889fb         mov rbx, rdi
0x00007d74      4889f7         mov rdi, rsi
0x00007d77      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x00007d7b      ff5330         call qword [rbx + 0x30]
0x00007d7e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x00007d82      7609           jbe 0x7d8d
0x00007d84      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x00007d88      480303         add rax, qword [rbx]
0x00007d8b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x00007d8c      c3             ret
0x00007d8d      e8fe9affff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x00007d92      0f1f4000       nop dword [rax]
0x00007d96      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x00007da0      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x00007da2      4155           push r13
0x00007da4      4989d6         mov r14, rdx
0x00007da7      4154           push r12
0x00007da9      55             push rbp
0x00007daa      4989fc         mov r12, rdi
0x00007dad      53             push rbx
0x00007dae      4889f5         mov rbp, rsi
0x00007db1      4189cd         mov r13d, ecx
0x00007db4      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x00007db9      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x00007dbc      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x00007dbf      4885f6         test rsi, rsi
0x00007dc2      0f84e8000000   je 0x7eb0
0x00007dc8      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x00007dcb      4889c3         mov rbx, rax
0x00007dce      0f848f000000   je 0x7e63
0x00007dd4      4889ef         mov rdi, rbp
0x00007dd7      41ff542438     call qword [r12 + 0x38]
0x00007ddc      84c0           test al, al
0x00007dde      0f857c000000   jne 0x7e60
0x00007de4      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00007de8      4885c0         test rax, rax
0x00007deb      0f84bf000000   je 0x7eb0
0x00007df1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00007df4      4839f5         cmp rbp, rsi
0x00007df7      7520           jne 0x7e19
0x00007df9      eb31           jmp 0x7e2c
0x00007dfb      0f1f440000     nop dword [rax + rax]
0x00007e00      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00007e04      488b4308       mov rax, qword [rbx + 8]
0x00007e08      4885c0         test rax, rax
0x00007e0b      0f849f000000   je 0x7eb0
0x00007e11      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00007e14      4839ee         cmp rsi, rbp
0x00007e17      7413           je 0x7e2c
0x00007e19      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x00007e1c      41ff542438     call qword [r12 + 0x38]
0x00007e21      84c0           test al, al
0x00007e23      74db           je 0x7e00
0x00007e25      488b4308       mov rax, qword [rbx + 8]
0x00007e29      488b30         mov rsi, qword [rax]
0x00007e2c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x00007e2f      741d           je 0x7e4e
0x00007e31      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00007e35      48895308       mov qword [rbx + 8], rdx
0x00007e39      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00007e40      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00007e45      48895008       mov qword [rax + 8], rdx
0x00007e49      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x00007e4e      5b             pop rbx
0x00007e4f      4889f0         mov rax, rsi
0x00007e52      5d             pop rbp
0x00007e53      415c           pop r12
0x00007e55      415d           pop r13
0x00007e57      415e           pop r14
0x00007e59      c3             ret
0x00007e5a      660f1f440000   nop word [rax + rax]
0x00007e60      488b33         mov rsi, qword [rbx]
0x00007e63      4584ed         test r13b, r13b
0x00007e66      74e6           je 0x7e4e
0x00007e68      488b4308       mov rax, qword [rbx + 8]
0x00007e6c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x00007e6f      742f           je 0x7ea0
0x00007e71      f30f6f00       movdqu xmm0, xmmword [rax]
0x00007e75      0f1103         movups xmmword [rbx], xmm0
0x00007e78      48c700000000.  mov qword [rax], 0
0x00007e7f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x00007e84      48895008       mov qword [rax + 8], rdx
0x00007e88      4989442448     mov qword [r12 + 0x48], rax
0x00007e8d      4889f0         mov rax, rsi
0x00007e90      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x00007e91      5d             pop rbp
0x00007e92      415c           pop r12
0x00007e94      415d           pop r13
0x00007e96      415e           pop r14
0x00007e98      c3             ret
0x00007e99      0f1f80000000.  nop dword [rax]
0x00007ea0      48c703000000.  mov qword [rbx], 0
0x00007ea7      eba5           jmp 0x7e4e
0x00007ea9      0f1f80000000.  nop dword [rax]
0x00007eb0      31f6           xor esi, esi
0x00007eb2      5b             pop rbx
0x00007eb3      4889f0         mov rax, rsi
0x00007eb6      5d             pop rbp
0x00007eb7      415c           pop r12
0x00007eb9      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x00007ebb      415e           pop r14
0x00007ebd      c3             ret
0x00007ebe      6690           nop
;-- check_tuning.isra.0:
0x00007ec0      488b17         mov rdx, qword [rdi]
0x00007ec3      488d0d963300.  lea rcx, obj.default_tuning             ; 0xb260
0x00007eca      b801000000     mov eax, 1
0x00007ecf      4839ca         cmp rdx, rcx
0x00007ed2      7461           je 0x7f35
0x00007ed4      f30f104208     movss xmm0, dword [rdx + 8]
0x00007ed9      0f2e05943300.  ucomiss xmm0, dword [0x0000b274]
0x00007ee0      764e           jbe 0x7f30
0x00007ee2      f30f100d8e33.  movss xmm1, dword [0x0000b278]          ; [0xb278:4]=0x3f666666
0x00007eea      0f2ec8         ucomiss xmm1, xmm0
0x00007eed      7641           jbe 0x7f30
0x00007eef      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x00007ef4      0f2e0d813300.  ucomiss xmm1, dword [0x0000b27c]
0x00007efb      7633           jbe 0x7f30
0x00007efd      f30f100a       movss xmm1, dword [rdx]
0x00007f01      0f2e0d783300.  ucomiss xmm1, dword [0x0000b280]
0x00007f08      7226           jb 0x7f30
0x00007f0a      f30f580d6233.  addss xmm1, dword [0x0000b274]          ; ../coreutils-8.31/lib/hash.c:737
0x00007f12      f30f105204     movss xmm2, dword [rdx + 4]
0x00007f17      0f2ed1         ucomiss xmm2, xmm1
0x00007f1a      7614           jbe 0x7f30
0x00007f1c      f30f101d6033.  movss xmm3, dword [0x0000b284]          ; [0xb284:4]=0x3f800000
0x00007f24      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00007f27      7207           jb 0x7f30
0x00007f29      0f2ec1         ucomiss xmm0, xmm1
0x00007f2c      7707           ja 0x7f35
0x00007f2e      6690           nop
0x00007f30      48890f         mov qword [rdi], rcx
0x00007f33      31c0           xor eax, eax
0x00007f35      f3c3           ret
0x00007f37      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00007f40      4157           push r15
0x00007f42      4156           push r14
0x00007f44      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00007f46      4154           push r12
0x00007f48      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00007f49      53             push rbx
0x00007f4a      4883ec08       sub rsp, 8
0x00007f4e      4c8b26         mov r12, qword [rsi]
0x00007f51      4c3b6608       cmp r12, qword [rsi + 8]
0x00007f55      0f83dd000000   jae 0x8038
0x00007f5b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x00007f5e      4989f5         mov r13, rsi
0x00007f61      4189d6         mov r14d, edx
0x00007f64      0f1f4000       nop dword [rax]
0x00007f68      4d8b3c24       mov r15, qword [r12]
0x00007f6c      4d85ff         test r15, r15
0x00007f6f      0f84b5000000   je 0x802a
0x00007f75      498b5c2408     mov rbx, qword [r12 + 8]
0x00007f7a      4885db         test rbx, rbx
0x00007f7d      751d           jne 0x7f9c
0x00007f7f      eb5a           jmp 0x7fdb
0x00007f81      0f1f80000000.  nop dword [rax]
0x00007f88      488b4808       mov rcx, qword [rax + 8]
0x00007f8c      4885d2         test rdx, rdx
0x00007f8f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x00007f93      48895808       mov qword [rax + 8], rbx
0x00007f97      4889d3         mov rbx, rdx
0x00007f9a      743b           je 0x7fd7
0x00007f9c      4c8b3b         mov r15, qword [rbx]
0x00007f9f      4889ef         mov rdi, rbp
0x00007fa2      4c89fe         mov rsi, r15
0x00007fa5      e8c6fdffff     call sym.safe_hasher
0x00007faa      48833800       cmp qword [rax], 0
0x00007fae      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x00007fb2      75d4           jne 0x7f88
0x00007fb4      4c8938         mov qword [rax], r15
0x00007fb7      4883451801     add qword [rbp + 0x18], 1
0x00007fbc      4885d2         test rdx, rdx
0x00007fbf      48c703000000.  mov qword [rbx], 0
0x00007fc6      488b4548       mov rax, qword [rbp + 0x48]
0x00007fca      48894308       mov qword [rbx + 8], rax
0x00007fce      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x00007fd2      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x00007fd5      75c5           jne 0x7f9c
0x00007fd7      4d8b3c24       mov r15, qword [r12]
0x00007fdb      4584f6         test r14b, r14b
0x00007fde      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x00007fe7      7541           jne 0x802a
0x00007fe9      4c89fe         mov rsi, r15
0x00007fec      4889ef         mov rdi, rbp
0x00007fef      e87cfdffff     call sym.safe_hasher
0x00007ff4      48833800       cmp qword [rax], 0
0x00007ff8      4889c3         mov rbx, rax
0x00007ffb      7453           je 0x8050
0x00007ffd      488b4548       mov rax, qword [rbp + 0x48]
0x00008001      4885c0         test rax, rax
0x00008004      745a           je 0x8060
0x00008006      488b5008       mov rdx, qword [rax + 8]
0x0000800a      48895548       mov qword [rbp + 0x48], rdx
0x0000800e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x00008012      4c8938         mov qword [rax], r15
0x00008015      48895008       mov qword [rax + 8], rdx
0x00008019      48894308       mov qword [rbx + 8], rax
0x0000801d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00008025      49836d1801     sub qword [r13 + 0x18], 1
0x0000802a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000802e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00008032      0f8730ffffff   ja 0x7f68
0x00008038      4883c408       add rsp, 8
0x0000803c      b801000000     mov eax, 1
0x00008041      5b             pop rbx
0x00008042      5d             pop rbp
0x00008043      415c           pop r12
0x00008045      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x00008047      415e           pop r14
0x00008049      415f           pop r15
0x0000804b      c3             ret
0x0000804c      0f1f4000       nop dword [rax]
0x00008050      4c8938         mov qword [rax], r15
0x00008053      4883451801     add qword [rbp + 0x18], 1
0x00008058      ebc3           jmp 0x801d
0x0000805a      660f1f440000   nop word [rax + rax]
0x00008060      bf10000000     mov edi, 0x10
0x00008065      e8969affff     call sym.imp.malloc
0x0000806a      4885c0         test rax, rax
0x0000806d      759f           jne 0x800e
0x0000806f      4883c408       add rsp, 8
0x00008073      31c0           xor eax, eax
0x00008075      5b             pop rbx
0x00008076      5d             pop rbp
0x00008077      415c           pop r12
0x00008079      415d           pop r13
0x0000807b      415e           pop r14
0x0000807d      415f           pop r15
0x0000807f      c3             ret
;-- hash_get_n_buckets:
0x00008080      488b4710       mov rax, qword [rdi + 0x10]
0x00008084      c3             ret
0x00008085      90             nop
0x00008086      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x00008090      488b4718       mov rax, qword [rdi + 0x18]
0x00008094      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x00008095      90             nop
0x00008096      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x000080a0      488b4720       mov rax, qword [rdi + 0x20]
0x000080a4      c3             ret
0x000080a5      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x000080a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x000080b0      488b37         mov rsi, qword [rdi]
0x000080b3      488b7f08       mov rdi, qword [rdi + 8]
0x000080b7      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x000080b9      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x000080bc      7339           jae 0x80f7
0x000080be      6690           nop
0x000080c0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x000080c4      7426           je 0x80ec                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x000080c6      488b5608       mov rdx, qword [rsi + 8]
0x000080ca      b901000000     mov ecx, 1
0x000080cf      4885d2         test rdx, rdx
0x000080d2      7411           je 0x80e5
0x000080d4      0f1f4000       nop dword [rax]
0x000080d8      488b5208       mov rdx, qword [rdx + 8]
0x000080dc      4883c101       add rcx, 1
0x000080e0      4885d2         test rdx, rdx
0x000080e3      75f3           jne 0x80d8
0x000080e5      4839c8         cmp rax, rcx
0x000080e8      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x000080ec      4883c610       add rsi, 0x10
0x000080f0      4839fe         cmp rsi, rdi
0x000080f3      72cb           jb 0x80c0
0x000080f5      f3c3           ret
0x000080f7      f3c3           ret
0x000080f9      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x00008100      488b0f         mov rcx, qword [rdi]
0x00008103      4c8b4708       mov r8, qword [rdi + 8]
0x00008107      31d2           xor edx, edx
0x00008109      31f6           xor esi, esi
0x0000810b      4c39c1         cmp rcx, r8
0x0000810e      7336           jae 0x8146
0x00008110      48833900       cmp qword [rcx], 0
0x00008114      7427           je 0x813d
0x00008116      488b4108       mov rax, qword [rcx + 8]
0x0000811a      4883c601       add rsi, 1
0x0000811e      4883c201       add rdx, 1
0x00008122      4885c0         test rax, rax
0x00008125      7416           je 0x813d
0x00008127      660f1f840000.  nop word [rax + rax]
0x00008130      488b4008       mov rax, qword [rax + 8]
0x00008134      4883c201       add rdx, 1
0x00008138      4885c0         test rax, rax
0x0000813b      75f3           jne 0x8130
0x0000813d      4883c110       add rcx, 0x10
0x00008141      4c39c1         cmp rcx, r8
0x00008144      72ca           jb 0x8110
0x00008146      31c0           xor eax, eax
0x00008148      48397718       cmp qword [rdi + 0x18], rsi
0x0000814c      7402           je 0x8150
0x0000814e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00008150      48395720       cmp qword [rdi + 0x20], rdx
0x00008154      0f94c0         sete al
0x00008157      c3             ret
0x00008158      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x00008160      4155           push r13
0x00008162      4154           push r12
0x00008164      4989f4         mov r12, rsi
0x00008167      55             push rbp
0x00008168      53             push rbx
0x00008169      31db           xor ebx, ebx
0x0000816b      4883ec08       sub rsp, 8
0x0000816f      488b37         mov rsi, qword [rdi]
0x00008172      488b4f20       mov rcx, qword [rdi + 0x20]
0x00008176      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000817a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000817e      488b7f08       mov rdi, qword [rdi + 8]
0x00008182      4839fe         cmp rsi, rdi
0x00008185      733e           jae 0x81c5
0x00008187      660f1f840000.  nop word [rax + rax]
0x00008190      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x00008194      7426           je 0x81bc
0x00008196      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000819a      ba01000000     mov edx, 1
0x0000819f      4885c0         test rax, rax
0x000081a2      7411           je 0x81b5
0x000081a4      0f1f4000       nop dword [rax]
0x000081a8      488b4008       mov rax, qword [rax + 8]
0x000081ac      4883c201       add rdx, 1
0x000081b0      4885c0         test rax, rax
0x000081b3      75f3           jne 0x81a8
0x000081b5      4839d3         cmp rbx, rdx
0x000081b8      480f42da       cmovb rbx, rdx
0x000081bc      4883c610       add rsi, 0x10
0x000081c0      4839fe         cmp rsi, rdi
0x000081c3      72cb           jb 0x8190
0x000081c5      488d15183000.  lea rdx, str.entries:__________lu       ; 0xb1e4 ; "# entries:         %lu\n"
0x000081cc      be01000000     mov esi, 1
0x000081d1      4c89e7         mov rdi, r12
0x000081d4      31c0           xor eax, eax
0x000081d6      e8659affff     call sym.imp.__fprintf_chk
0x000081db      488d151a3000.  lea rdx, str.buckets:__________lu       ; 0xb1fc ; "# buckets:         %lu\n"
0x000081e2      31c0           xor eax, eax
0x000081e4      4889e9         mov rcx, rbp
0x000081e7      be01000000     mov esi, 1
0x000081ec      4c89e7         mov rdi, r12
0x000081ef      e84c9affff     call sym.imp.__fprintf_chk
0x000081f4      4d85ed         test r13, r13
0x000081f7      7867           js 0x8260
0x000081f9      660fefc0       pxor xmm0, xmm0
0x000081fd      4885ed         test rbp, rbp
0x00008200      f2490f2ac5     cvtsi2sd xmm0, r13
0x00008205      f20f59058b30.  mulsd xmm0, qword [0x0000b298]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000820d      787a           js 0x8289                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000820f      660fefc9       pxor xmm1, xmm1
0x00008213      f2480f2acd     cvtsi2sd xmm1, rbp
0x00008218      f20f5ec1       divsd xmm0, xmm1
0x0000821c      488d150d3000.  lea rdx, str.buckets_used:_____lu___.2f ; 0xb230 ; "# buckets used:    %lu (%.2f%%)\n"
0x00008223      4c89e9         mov rcx, r13
0x00008226      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x00008229      be01000000     mov esi, 1
0x0000822e      b801000000     mov eax, 1
0x00008233      e8089affff     call sym.imp.__fprintf_chk
0x00008238      4883c408       add rsp, 8
0x0000823c      4889d9         mov rcx, rbx
0x0000823f      4c89e7         mov rdi, r12
0x00008242      5b             pop rbx
0x00008243      5d             pop rbp
0x00008244      415c           pop r12
0x00008246      415d           pop r13
0x00008248      488d15c52f00.  lea rdx, str.max_bucket_length:__lu     ; 0xb214 ; "max bucket length: %lu\n"
0x0000824f      be01000000     mov esi, 1
0x00008254      31c0           xor eax, eax
0x00008256      e9e599ffff     jmp sym.imp.__fprintf_chk
0x0000825b      0f1f440000     nop dword [rax + rax]
0x00008260      4c89e8         mov rax, r13
0x00008263      4c89ea         mov rdx, r13
0x00008266      660fefc0       pxor xmm0, xmm0
0x0000826a      48d1e8         shr rax, 1
0x0000826d      83e201         and edx, 1
0x00008270      4809d0         or rax, rdx
0x00008273      4885ed         test rbp, rbp
0x00008276      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000827b      f20f58c0       addsd xmm0, xmm0
0x0000827f      f20f59051130.  mulsd xmm0, qword [0x0000b298]
0x00008287      7986           jns 0x820f                              ; ../coreutils-8.31/lib/hash.c:-138
0x00008289      4889e8         mov rax, rbp
0x0000828c      660fefc9       pxor xmm1, xmm1
0x00008290      48d1e8         shr rax, 1
0x00008293      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x00008296      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x00008299      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000829e      f20f58c9       addsd xmm1, xmm1
0x000082a2      e971ffffff     jmp 0x8218
0x000082a7      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x000082b0      4154           push r12
0x000082b2      55             push rbp
0x000082b3      4989fc         mov r12, rdi
0x000082b6      53             push rbx
0x000082b7      4889f5         mov rbp, rsi
0x000082ba      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x000082bf      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x000082c2      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x000082c5      7426           je 0x82ed                               ; ../coreutils-8.31/lib/hash.c:-120
0x000082c7      4889c3         mov rbx, rax
0x000082ca      eb07           jmp 0x82d3
0x000082cc      0f1f4000       nop dword [rax]
0x000082d0      488b33         mov rsi, qword [rbx]
0x000082d3      4839ee         cmp rsi, rbp
0x000082d6      7417           je 0x82ef                               ; ../coreutils-8.31/lib/hash.c:-116
0x000082d8      4889ef         mov rdi, rbp
0x000082db      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x000082e0      84c0           test al, al
0x000082e2      751c           jne 0x8300
0x000082e4      488b5b08       mov rbx, qword [rbx + 8]
0x000082e8      4885db         test rbx, rbx
0x000082eb      75e3           jne 0x82d0
0x000082ed      31f6           xor esi, esi
0x000082ef      5b             pop rbx
0x000082f0      4889f0         mov rax, rsi
0x000082f3      5d             pop rbp
0x000082f4      415c           pop r12
0x000082f6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x000082f7      660f1f840000.  nop word [rax + rax]
0x00008300      488b33         mov rsi, qword [rbx]
0x00008303      5b             pop rbx
0x00008304      5d             pop rbp
0x00008305      4889f0         mov rax, rsi
0x00008308      415c           pop r12
0x0000830a      c3             ret
0x0000830b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x00008310      48837f2000     cmp qword [rdi + 0x20], 0
0x00008315      742c           je 0x8343
0x00008317      488b17         mov rdx, qword [rdi]
0x0000831a      488b4f08       mov rcx, qword [rdi + 8]
0x0000831e      4839ca         cmp rdx, rcx
0x00008321      7325           jae 0x8348
0x00008323      488b02         mov rax, qword [rdx]
0x00008326      4885c0         test rax, rax
0x00008329      751b           jne 0x8346
0x0000832b      0f1f440000     nop dword [rax + rax]
0x00008330      4883c210       add rdx, 0x10
0x00008334      4839ca         cmp rdx, rcx
0x00008337      730f           jae 0x8348                              ; ../coreutils-8.31/lib/hash.c:-97
0x00008339      488b02         mov rax, qword [rdx]
0x0000833c      4885c0         test rax, rax
0x0000833f      74ef           je 0x8330
0x00008341      f3c3           ret
0x00008343      31c0           xor eax, eax
0x00008345      c3             ret
0x00008346      f3c3           ret
0x00008348      4883ec08       sub rsp, 8
0x0000834c      e83f95ffff     call sym.imp.abort
0x00008351      0f1f440000     nop dword [rax + rax]
0x00008356      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x00008360      55             push rbp
0x00008361      53             push rbx
0x00008362      4889fd         mov rbp, rdi
0x00008365      4889f3         mov rbx, rsi
0x00008368      4883ec08       sub rsp, 8
0x0000836c      e8fff9ffff     call sym.safe_hasher
0x00008371      4889c2         mov rdx, rax
0x00008374      4889c1         mov rcx, rax
0x00008377      488b02         mov rax, qword [rdx]
0x0000837a      488b5208       mov rdx, qword [rdx + 8]
0x0000837e      4839d8         cmp rax, rbx
0x00008381      7416           je 0x8399
0x00008383      0f1f440000     nop dword [rax + rax]
0x00008388      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000838b      7411           je 0x839e
0x0000838d      488b02         mov rax, qword [rdx]
0x00008390      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x00008394      4839d8         cmp rax, rbx
0x00008397      75ef           jne 0x8388
0x00008399      4885d2         test rdx, rdx
0x0000839c      752a           jne 0x83c8
0x0000839e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x000083a2      eb0c           jmp 0x83b0
0x000083a4      0f1f4000       nop dword [rax]
0x000083a8      488b01         mov rax, qword [rcx]
0x000083ab      4885c0         test rax, rax
0x000083ae      750b           jne 0x83bb
0x000083b0      4883c110       add rcx, 0x10
0x000083b4      4839ca         cmp rdx, rcx
0x000083b7      77ef           ja 0x83a8
0x000083b9      31c0           xor eax, eax
0x000083bb      4883c408       add rsp, 8
0x000083bf      5b             pop rbx
0x000083c0      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x000083c1      c3             ret
0x000083c2      660f1f440000   nop word [rax + rax]
0x000083c8      488b02         mov rax, qword [rdx]
0x000083cb      4883c408       add rsp, 8
0x000083cf      5b             pop rbx
0x000083d0      5d             pop rbp
0x000083d1      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x000083d2      0f1f4000       nop dword [rax]
0x000083d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x000083e0      4c8b0f         mov r9, qword [rdi]
0x000083e3      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x000083e7      7659           jbe 0x8442
0x000083e9      4531c0         xor r8d, r8d
0x000083ec      498b09         mov rcx, qword [r9]
0x000083ef      4885c9         test rcx, rcx
0x000083f2      7439           je 0x842d                               ; ../coreutils-8.31/lib/hash.c:-47
0x000083f4      4c39c2         cmp rdx, r8
0x000083f7      763e           jbe 0x8437
0x000083f9      4a890cc6       mov qword [rsi + r8*8], rcx
0x000083fd      498b4908       mov rcx, qword [r9 + 8]
0x00008401      498d4001       lea rax, [r8 + 1]
0x00008405      4885c9         test rcx, rcx
0x00008408      7420           je 0x842a
0x0000840a      660f1f440000   nop word [rax + rax]
0x00008410      4839c2         cmp rdx, rax
0x00008413      742b           je 0x8440                               ; ../coreutils-8.31/lib/hash.c:-3
0x00008415      4c8b01         mov r8, qword [rcx]
0x00008418      4883c001       add rax, 1
0x0000841c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x00008421      488b4908       mov rcx, qword [rcx + 8]
0x00008425      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x00008428      75e6           jne 0x8410
0x0000842a      4989c0         mov r8, rax
0x0000842d      4983c110       add r9, 0x10
0x00008431      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x00008435      77b5           ja 0x83ec
0x00008437      4c89c0         mov rax, r8
0x0000843a      c3             ret
0x0000843b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x00008440      f3c3           ret
0x00008442      31c0           xor eax, eax
0x00008444      c3             ret
0x00008445      90             nop
0x00008446      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00008450      4157           push r15
0x00008452      4156           push r14
0x00008454      4155           push r13
0x00008456      4154           push r12
0x00008458      55             push rbp
0x00008459      53             push rbx
0x0000845a      4883ec08       sub rsp, 8
0x0000845e      4c8b37         mov r14, qword [rdi]
0x00008461      4c397708       cmp qword [rdi + 8], r14
0x00008465      764f           jbe 0x84b6
0x00008467      4989d5         mov r13, rdx
0x0000846a      4989f4         mov r12, rsi
0x0000846d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x00008470      31ed           xor ebp, ebp
0x00008472      498b3e         mov rdi, qword [r14]
0x00008475      4885ff         test rdi, rdi
0x00008478      7420           je 0x849a
0x0000847a      4c89f3         mov rbx, r14
0x0000847d      eb04           jmp 0x8483
0x0000847f      90             nop
0x00008480      488b3b         mov rdi, qword [rbx]
0x00008483      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x00008486      41ffd4         call r12
0x00008489      84c0           test al, al
0x0000848b      7417           je 0x84a4
0x0000848d      488b5b08       mov rbx, qword [rbx + 8]
0x00008491      4883c501       add rbp, 1
0x00008495      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x00008498      75e6           jne 0x8480
0x0000849a      4983c610       add r14, 0x10
0x0000849e      4d397708       cmp qword [r15 + 8], r14
0x000084a2      77ce           ja 0x8472
0x000084a4      4883c408       add rsp, 8
0x000084a8      4889e8         mov rax, rbp
0x000084ab      5b             pop rbx
0x000084ac      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x000084ad      415c           pop r12
0x000084af      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x000084b1      415e           pop r14
0x000084b3      415f           pop r15
0x000084b5      c3             ret
0x000084b6      31ed           xor ebp, ebp
0x000084b8      ebea           jmp 0x84a4                              ; ../coreutils-8.31/lib/hash.c:41
0x000084ba      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x000084c0      0fb60f         movzx ecx, byte [rdi]
0x000084c3      31d2           xor edx, edx
0x000084c5      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x000084c7      7424           je 0x84ed
0x000084c9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x000084d0      4889d0         mov rax, rdx
0x000084d3      4883c701       add rdi, 1
0x000084d7      48c1e005       shl rax, 5
0x000084db      4829d0         sub rax, rdx
0x000084de      31d2           xor edx, edx
0x000084e0      4801c8         add rax, rcx
0x000084e3      0fb60f         movzx ecx, byte [rdi]
0x000084e6      48f7f6         div rsi
0x000084e9      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x000084eb      75e3           jne 0x84d0
0x000084ed      4889d0         mov rax, rdx
0x000084f0      c3             ret
0x000084f1      0f1f440000     nop dword [rax + rax]
0x000084f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x00008500      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000850a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000850e      488907         mov qword [rdi], rax
0x00008511      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000851b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000851f      c3             ret
;-- hash_initialize:
0x00008520      4157           push r15
0x00008522      4156           push r14
0x00008524      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x7d50 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000852b      4155           push r13
0x0000852d      4154           push r12
0x0000852f      4989d4         mov r12, rdx
0x00008532      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x00008533      53             push rbx
0x00008534      4989cd         mov r13, rcx
0x00008537      4889fd         mov rbp, rdi
0x0000853a      bf50000000     mov edi, 0x50                           ; 'P'
0x0000853f      4989f7         mov r15, rsi
0x00008542      4883ec08       sub rsp, 8
0x00008546      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x00008549      4d89c6         mov r14, r8
0x0000854c      4c0f44e0       cmove r12, rax
0x00008550      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x7d60 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00008557      4885c9         test rcx, rcx
0x0000855a      4c0f44e8       cmove r13, rax
0x0000855e      e89d95ffff     call sym.imp.malloc
0x00008563      4885c0         test rax, rax
0x00008566      4889c3         mov rbx, rax
0x00008569      0f84ab000000   je 0x861a
0x0000856f      4d85ff         test r15, r15
0x00008572      488d7828       lea rdi, [rax + 0x28]
0x00008576      0f84b4000000   je 0x8630
0x0000857c      4c897828       mov qword [rax + 0x28], r15
0x00008580      e83bf9ffff     call sym.check_tuning.isra.0
0x00008585      84c0           test al, al
0x00008587      0f8483000000   je 0x8610
0x0000858d      41807f1000     cmp byte [r15 + 0x10], 0
0x00008592      0f84f8000000   je 0x8690
0x00008598      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x0000859b      e810f7ffff     call sym.next_prime
0x000085a0      ba08000000     mov edx, 8
0x000085a5      4889c5         mov rbp, rax
0x000085a8      31c9           xor ecx, ecx
0x000085aa      4889d0         mov rax, rdx
0x000085ad      48f7e5         mul rbp
0x000085b0      0f8014010000   jo 0x86ca
0x000085b6      4885c0         test rax, rax
0x000085b9      7855           js 0x8610
0x000085bb      4885c9         test rcx, rcx
0x000085be      7550           jne 0x8610
0x000085c0      4885ed         test rbp, rbp
0x000085c3      48896b10       mov qword [rbx + 0x10], rbp
0x000085c7      7447           je 0x8610
0x000085c9      be10000000     mov esi, 0x10
0x000085ce      4889ef         mov rdi, rbp
0x000085d1      e8ba94ffff     call sym.imp.calloc
0x000085d6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x000085d9      488903         mov qword [rbx], rax
0x000085dc      7432           je 0x8610
0x000085de      48c1e504       shl rbp, 4
0x000085e2      48c743180000.  mov qword [rbx + 0x18], 0
0x000085ea      48c743200000.  mov qword [rbx + 0x20], 0
0x000085f2      4801c5         add rbp, rax
0x000085f5      4c896330       mov qword [rbx + 0x30], r12
0x000085f9      4c896b38       mov qword [rbx + 0x38], r13
0x000085fd      48896b08       mov qword [rbx + 8], rbp
0x00008601      4c897340       mov qword [rbx + 0x40], r14
0x00008605      48c743480000.  mov qword [rbx + 0x48], 0
0x0000860d      eb0b           jmp 0x861a
0x0000860f      90             nop
0x00008610      4889df         mov rdi, rbx
0x00008613      31db           xor ebx, ebx
0x00008615      e87696ffff     call sym..plt.got
0x0000861a      4883c408       add rsp, 8
0x0000861e      4889d8         mov rax, rbx
0x00008621      5b             pop rbx
0x00008622      5d             pop rbp
0x00008623      415c           pop r12
0x00008625      415d           pop r13
0x00008627      415e           pop r14
0x00008629      415f           pop r15
0x0000862b      c3             ret
0x0000862c      0f1f4000       nop dword [rax]
0x00008630      488d05292c00.  lea rax, obj.default_tuning             ; 0xb260
0x00008637      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000863b      e880f8ffff     call sym.check_tuning.isra.0
0x00008640      84c0           test al, al
0x00008642      f30f100d3e2c.  movss xmm1, dword [0x0000b288]          ; [0xb288:4]=0x3f4ccccd
0x0000864a      74c4           je 0x8610
0x0000864c      4885ed         test rbp, rbp
0x0000864f      784a           js 0x869b
0x00008651      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00008655      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000865a      f30f5ec1       divss xmm0, xmm1
0x0000865e      0f2e05272c00.  ucomiss xmm0, dword [0x0000b28c]
0x00008665      73a9           jae 0x8610
0x00008667      0f2e05222c00.  ucomiss xmm0, dword [0x0000b290]
0x0000866e      7250           jb 0x86c0
0x00008670      f30f5c05182c.  subss xmm0, dword [0x0000b290]
0x00008678      48b800000000.  movabs rax, 0x8000000000000000
0x00008682      f3480f2ce8     cvttss2si rbp, xmm0
0x00008687      4831c5         xor rbp, rax
0x0000868a      e909ffffff     jmp 0x8598
0x0000868f      90             nop
0x00008690      4885ed         test rbp, rbp
0x00008693      f3410f104f08   movss xmm1, dword [r15 + 8]
0x00008699      79b6           jns 0x8651                              ; ../coreutils-8.31/lib/hash.c:-146
0x0000869b      4889e8         mov rax, rbp
0x0000869e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x000086a2      48d1e8         shr rax, 1
0x000086a5      83e501         and ebp, 1
0x000086a8      4809e8         or rax, rbp
0x000086ab      f3480f2ac0     cvtsi2ss xmm0, rax
0x000086b0      f30f58c0       addss xmm0, xmm0
0x000086b4      eba4           jmp 0x865a
0x000086b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000086c0      f3480f2ce8     cvttss2si rbp, xmm0
0x000086c5      e9cefeffff     jmp 0x8598
0x000086ca      b901000000     mov ecx, 1
0x000086cf      e9e2feffff     jmp 0x85b6
0x000086d4      6690           nop
0x000086d6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x000086e0      4154           push r12
0x000086e2      55             push rbp
0x000086e3      4889fd         mov rbp, rdi
0x000086e6      53             push rbx
0x000086e7      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x000086ea      4c3b6708       cmp r12, qword [rdi + 8]
0x000086ee      736b           jae 0x875b
0x000086f0      49833c2400     cmp qword [r12], 0
0x000086f5      745a           je 0x8751
0x000086f7      498b5c2408     mov rbx, qword [r12 + 8]
0x000086fc      488b4540       mov rax, qword [rbp + 0x40]
0x00008700      4885db         test rbx, rbx
0x00008703      7430           je 0x8735
0x00008705      0f1f00         nop dword [rax]
0x00008708      4885c0         test rax, rax
0x0000870b      7409           je 0x8716
0x0000870d      488b3b         mov rdi, qword [rbx]
0x00008710      ffd0           call rax
0x00008712      488b4540       mov rax, qword [rbp + 0x40]
0x00008716      488b5308       mov rdx, qword [rbx + 8]
0x0000871a      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000871e      48c703000000.  mov qword [rbx], 0
0x00008725      4885d2         test rdx, rdx
0x00008728      48894b08       mov qword [rbx + 8], rcx
0x0000872c      48895d48       mov qword [rbp + 0x48], rbx
0x00008730      4889d3         mov rbx, rdx
0x00008733      75d3           jne 0x8708
0x00008735      4885c0         test rax, rax
0x00008738      7406           je 0x8740
0x0000873a      498b3c24       mov rdi, qword [r12]
0x0000873e      ffd0           call rax
0x00008740      49c704240000.  mov qword [r12], 0
0x00008748      49c744240800.  mov qword [r12 + 8], 0
0x00008751      4983c410       add r12, 0x10
0x00008755      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00008759      7795           ja 0x86f0
0x0000875b      48c745180000.  mov qword [rbp + 0x18], 0
0x00008763      48c745200000.  mov qword [rbp + 0x20], 0
0x0000876b      5b             pop rbx
0x0000876c      5d             pop rbp
0x0000876d      415c           pop r12
0x0000876f      c3             ret
;-- hash_free:
0x00008770      4154           push r12
0x00008772      55             push rbp
0x00008773      4989fc         mov r12, rdi
0x00008776      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00008777      48837f4000     cmp qword [rdi + 0x40], 0
0x0000877c      488b2f         mov rbp, qword [rdi]
0x0000877f      488b4708       mov rax, qword [rdi + 8]
0x00008783      744e           je 0x87d3                               ; ../coreutils-8.31/lib/hash.c:-305
0x00008785      48837f2000     cmp qword [rdi + 0x20], 0
0x0000878a      7447           je 0x87d3
0x0000878c      4839c5         cmp rbp, rax
0x0000878f      737b           jae 0x880c
0x00008791      0f1f80000000.  nop dword [rax]
0x00008798      488b7d00       mov rdi, qword [rbp]
0x0000879c      4885ff         test rdi, rdi
0x0000879f      7425           je 0x87c6
0x000087a1      4889eb         mov rbx, rbp
0x000087a4      eb0d           jmp 0x87b3
0x000087a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000087b0      488b3b         mov rdi, qword [rbx]
0x000087b3      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x000087b8      488b5b08       mov rbx, qword [rbx + 8]
0x000087bc      4885db         test rbx, rbx
0x000087bf      75ef           jne 0x87b0
0x000087c1      498b442408     mov rax, qword [r12 + 8]
0x000087c6      4883c510       add rbp, 0x10
0x000087ca      4839e8         cmp rax, rbp
0x000087cd      77c9           ja 0x8798
0x000087cf      498b2c24       mov rbp, qword [r12]
0x000087d3      4839c5         cmp rbp, rax
0x000087d6      7334           jae 0x880c
0x000087d8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x000087e0      488b7d08       mov rdi, qword [rbp + 8]
0x000087e4      4885ff         test rdi, rdi
0x000087e7      7418           je 0x8801
0x000087e9      0f1f80000000.  nop dword [rax]
0x000087f0      488b5f08       mov rbx, qword [rdi + 8]
0x000087f4      e89794ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x000087f9      4885db         test rbx, rbx
0x000087fc      4889df         mov rdi, rbx
0x000087ff      75ef           jne 0x87f0
0x00008801      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00008805      49396c2408     cmp qword [r12 + 8], rbp
0x0000880a      77d4           ja 0x87e0
0x0000880c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00008811      4885ff         test rdi, rdi
0x00008814      741b           je 0x8831
0x00008816      662e0f1f8400.  nop word cs:[rax + rax]
0x00008820      488b5f08       mov rbx, qword [rdi + 8]
0x00008824      e86794ffff     call sym..plt.got
0x00008829      4885db         test rbx, rbx
0x0000882c      4889df         mov rdi, rbx
0x0000882f      75ef           jne 0x8820
0x00008831      498b3c24       mov rdi, qword [r12]
0x00008835      e85694ffff     call sym..plt.got
0x0000883a      5b             pop rbx
0x0000883b      4c89e7         mov rdi, r12
0x0000883e      5d             pop rbp
0x0000883f      415c           pop r12
0x00008841      e94a94ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x00008846      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00008850      4154           push r12
0x00008852      55             push rbp
0x00008853      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00008856      53             push rbx
0x00008857      4883ec60       sub rsp, 0x60
0x0000885b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000885f      64488b042528.  mov rax, qword fs:[0x28]
0x00008868      4889442458     mov qword [rsp + 0x58], rax
0x0000886d      31c0           xor eax, eax
0x0000886f      41807c241000   cmp byte [r12 + 0x10], 0
0x00008875      7551           jne 0x88c8
0x00008877      4885f6         test rsi, rsi
0x0000887a      0f8878010000   js 0x89f8
0x00008880      660fefc0       pxor xmm0, xmm0
0x00008884      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x00008889      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x00008890      0f2e05f52900.  ucomiss xmm0, dword [0x0000b28c]
0x00008897      0f8333010000   jae 0x89d0
0x0000889d      0f2e05ec2900.  ucomiss xmm0, dword [0x0000b290]
0x000088a4      0f8276010000   jb 0x8a20
0x000088aa      f30f5c05de29.  subss xmm0, dword [0x0000b290]          ; ../coreutils-8.31/lib/hash.c:161
0x000088b2      48b800000000.  movabs rax, 0x8000000000000000
0x000088bc      f3480f2cf0     cvttss2si rsi, xmm0
0x000088c1      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x000088c4      0f1f4000       nop dword [rax]
0x000088c8      4889f7         mov rdi, rsi
0x000088cb      e8e0f3ffff     call sym.next_prime
0x000088d0      ba08000000     mov edx, 8
0x000088d5      4889c3         mov rbx, rax
0x000088d8      31c9           xor ecx, ecx
0x000088da      4889d0         mov rax, rdx
0x000088dd      48f7e3         mul rbx
0x000088e0      0f8099010000   jo 0x8a7f
0x000088e6      4885c0         test rax, rax
0x000088e9      b801000000     mov eax, 1
0x000088ee      480f48c8       cmovs rcx, rax
0x000088f2      4885db         test rbx, rbx
0x000088f5      0f84d5000000   je 0x89d0
0x000088fb      83e101         and ecx, 1
0x000088fe      0f85cc000000   jne 0x89d0
0x00008904      48395d10       cmp qword [rbp + 0x10], rbx
0x00008908      0f8422010000   je 0x8a30
0x0000890e      be10000000     mov esi, 0x10
0x00008913      4889df         mov rdi, rbx
0x00008916      e87591ffff     call sym.imp.calloc
0x0000891b      4885c0         test rax, rax
0x0000891e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00008922      0f84a8000000   je 0x89d0
0x00008928      48895c2410     mov qword [rsp + 0x10], rbx
0x0000892d      48c1e304       shl rbx, 4
0x00008931      4c89642428     mov qword [rsp + 0x28], r12
0x00008936      4801c3         add rbx, rax
0x00008939      488b4530       mov rax, qword [rbp + 0x30]
0x0000893d      4989e4         mov r12, rsp
0x00008940      31d2           xor edx, edx
0x00008942      4889ee         mov rsi, rbp
0x00008945      4c89e7         mov rdi, r12
0x00008948      48895c2408     mov qword [rsp + 8], rbx
0x0000894d      48c744241800.  mov qword [rsp + 0x18], 0
0x00008956      4889442430     mov qword [rsp + 0x30], rax
0x0000895b      488b4538       mov rax, qword [rbp + 0x38]
0x0000895f      48c744242000.  mov qword [rsp + 0x20], 0
0x00008968      4889442438     mov qword [rsp + 0x38], rax
0x0000896d      488b4540       mov rax, qword [rbp + 0x40]
0x00008971      4889442440     mov qword [rsp + 0x40], rax
0x00008976      488b4548       mov rax, qword [rbp + 0x48]
0x0000897a      4889442448     mov qword [rsp + 0x48], rax
0x0000897f      e8bcf5ffff     call sym.transfer_entries
0x00008984      84c0           test al, al
0x00008986      89c3           mov ebx, eax
0x00008988      0f85b2000000   jne 0x8a40
0x0000898e      488b442448     mov rax, qword [rsp + 0x48]
0x00008993      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x00008998      4c89e6         mov rsi, r12
0x0000899b      4889ef         mov rdi, rbp
0x0000899e      48894548       mov qword [rbp + 0x48], rax
0x000089a2      e899f5ffff     call sym.transfer_entries
0x000089a7      84c0           test al, al
0x000089a9      0f84da000000   je 0x8a89
0x000089af      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x000089b1      4c89e6         mov rsi, r12
0x000089b4      4889ef         mov rdi, rbp
0x000089b7      e884f5ffff     call sym.transfer_entries
0x000089bc      84c0           test al, al
0x000089be      0f84c5000000   je 0x8a89
0x000089c4      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x000089c8      e8c392ffff     call sym..plt.got
0x000089cd      eb03           jmp 0x89d2
0x000089cf      90             nop
0x000089d0      31db           xor ebx, ebx
0x000089d2      488b4c2458     mov rcx, qword [rsp + 0x58]
0x000089d7      6448330c2528.  xor rcx, qword fs:[0x28]
0x000089e0      89d8           mov eax, ebx
0x000089e2      0f8592000000   jne 0x8a7a
0x000089e8      4883c460       add rsp, 0x60
0x000089ec      5b             pop rbx
0x000089ed      5d             pop rbp
0x000089ee      415c           pop r12
0x000089f0      c3             ret
0x000089f1      0f1f80000000.  nop dword [rax]
0x000089f8      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x000089fb      660fefc0       pxor xmm0, xmm0
0x000089ff      48d1e8         shr rax, 1
0x00008a02      83e601         and esi, 1
0x00008a05      4809f0         or rax, rsi
0x00008a08      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008a0d      f30f58c0       addss xmm0, xmm0
0x00008a11      e973feffff     jmp 0x8889
0x00008a16      662e0f1f8400.  nop word cs:[rax + rax]
0x00008a20      f3480f2cf0     cvttss2si rsi, xmm0
0x00008a25      e99efeffff     jmp 0x88c8
0x00008a2a      660f1f440000   nop word [rax + rax]
0x00008a30      bb01000000     mov ebx, 1
0x00008a35      eb9b           jmp 0x89d2
0x00008a37      660f1f840000.  nop word [rax + rax]
0x00008a40      488b7d00       mov rdi, qword [rbp]
0x00008a44      e84792ffff     call sym..plt.got
0x00008a49      488b0424       mov rax, qword [rsp]
0x00008a4d      48894500       mov qword [rbp], rax
0x00008a51      488b442408     mov rax, qword [rsp + 8]
0x00008a56      48894508       mov qword [rbp + 8], rax
0x00008a5a      488b442410     mov rax, qword [rsp + 0x10]
0x00008a5f      48894510       mov qword [rbp + 0x10], rax
0x00008a63      488b442418     mov rax, qword [rsp + 0x18]
0x00008a68      48894518       mov qword [rbp + 0x18], rax
0x00008a6c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00008a71      48894548       mov qword [rbp + 0x48], rax
0x00008a75      e958ffffff     jmp 0x89d2
0x00008a7a      e8218fffff     call sym.imp.__stack_chk_fail
0x00008a7f      b901000000     mov ecx, 1
0x00008a84      e95dfeffff     jmp 0x88e6
0x00008a89      e8028effff     call sym.imp.abort
0x00008a8e      6690           nop
;-- hash_insert_if_absent:
0x00008a90      4155           push r13
0x00008a92      4154           push r12
0x00008a94      55             push rbp
0x00008a95      53             push rbx
0x00008a96      4883ec18       sub rsp, 0x18
0x00008a9a      64488b042528.  mov rax, qword fs:[0x28]
0x00008aa3      4889442408     mov qword [rsp + 8], rax
0x00008aa8      31c0           xor eax, eax
0x00008aaa      4885f6         test rsi, rsi
0x00008aad      0f84ba010000   je 0x8c6d
0x00008ab3      4989e4         mov r12, rsp
0x00008ab6      31c9           xor ecx, ecx
0x00008ab8      4989d5         mov r13, rdx
0x00008abb      4c89e2         mov rdx, r12
0x00008abe      4889fb         mov rbx, rdi
0x00008ac1      4889f5         mov rbp, rsi
0x00008ac4      e8d7f2ffff     call sym.hash_find_entry
0x00008ac9      4885c0         test rax, rax
0x00008acc      4889c2         mov rdx, rax
0x00008acf      742f           je 0x8b00
0x00008ad1      31c0           xor eax, eax
0x00008ad3      4d85ed         test r13, r13
0x00008ad6      7404           je 0x8adc
0x00008ad8      49895500       mov qword [r13], rdx
0x00008adc      488b4c2408     mov rcx, qword [rsp + 8]
0x00008ae1      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008aea      0f851f020000   jne 0x8d0f
0x00008af0      4883c418       add rsp, 0x18
0x00008af4      5b             pop rbx
0x00008af5      5d             pop rbp
0x00008af6      415c           pop r12
0x00008af8      415d           pop r13
0x00008afa      c3             ret
0x00008afb      0f1f440000     nop dword [rax + rax]
0x00008b00      488b4318       mov rax, qword [rbx + 0x18]
0x00008b04      4885c0         test rax, rax
0x00008b07      7877           js 0x8b80
0x00008b09      660fefc9       pxor xmm1, xmm1
0x00008b0d      488b5328       mov rdx, qword [rbx + 0x28]
0x00008b11      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008b16      488b4310       mov rax, qword [rbx + 0x10]
0x00008b1a      4885c0         test rax, rax
0x00008b1d      0f8887000000   js 0x8baa
0x00008b23      660fefc0       pxor xmm0, xmm0
0x00008b27      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008b2c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00008b31      0f2ec8         ucomiss xmm1, xmm0
0x00008b34      0f8796000000   ja 0x8bd0
0x00008b3a      4c8b2424       mov r12, qword [rsp]
0x00008b3e      49833c2400     cmp qword [r12], 0
0x00008b43      0f842f010000   je 0x8c78
0x00008b49      488b4348       mov rax, qword [rbx + 0x48]
0x00008b4d      4885c0         test rax, rax
0x00008b50      0f843a010000   je 0x8c90
0x00008b56      488b5008       mov rdx, qword [rax + 8]
0x00008b5a      48895348       mov qword [rbx + 0x48], rdx
0x00008b5e      498b542408     mov rdx, qword [r12 + 8]
0x00008b63      488928         mov qword [rax], rbp
0x00008b66      48895008       mov qword [rax + 8], rdx
0x00008b6a      4989442408     mov qword [r12 + 8], rax
0x00008b6f      b801000000     mov eax, 1
0x00008b74      4883432001     add qword [rbx + 0x20], 1
0x00008b79      e95effffff     jmp 0x8adc
0x00008b7e      6690           nop
0x00008b80      4889c2         mov rdx, rax
0x00008b83      660fefc9       pxor xmm1, xmm1
0x00008b87      83e001         and eax, 1
0x00008b8a      48d1ea         shr rdx, 1
0x00008b8d      4809c2         or rdx, rax
0x00008b90      488b4310       mov rax, qword [rbx + 0x10]
0x00008b94      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00008b99      488b5328       mov rdx, qword [rbx + 0x28]
0x00008b9d      4885c0         test rax, rax
0x00008ba0      f30f58c9       addss xmm1, xmm1
0x00008ba4      0f8979ffffff   jns 0x8b23
0x00008baa      4889c1         mov rcx, rax
0x00008bad      660fefc0       pxor xmm0, xmm0
0x00008bb1      48d1e9         shr rcx, 1
0x00008bb4      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x00008bb7      4809c1         or rcx, rax
0x00008bba      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00008bbf      f30f58c0       addss xmm0, xmm0
0x00008bc3      e964ffffff     jmp 0x8b2c
0x00008bc8      0f1f84000000.  nop dword [rax + rax]
0x00008bd0      488d7b28       lea rdi, [rbx + 0x28]
0x00008bd4      e8e7f2ffff     call sym.check_tuning.isra.0
0x00008bd9      488b4310       mov rax, qword [rbx + 0x10]
0x00008bdd      488b5328       mov rdx, qword [rbx + 0x28]
0x00008be1      4885c0         test rax, rax
0x00008be4      f30f105208     movss xmm2, dword [rdx + 8]
0x00008be9      0f88c1000000   js 0x8cb0
0x00008bef      660fefc0       pxor xmm0, xmm0
0x00008bf3      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008bf8      488b4318       mov rax, qword [rbx + 0x18]
0x00008bfc      4885c0         test rax, rax
0x00008bff      0f88cb000000   js 0x8cd0
0x00008c05      660fefc9       pxor xmm1, xmm1
0x00008c09      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008c0e      0f28da         movaps xmm3, xmm2
0x00008c11      f30f59d8       mulss xmm3, xmm0
0x00008c15      0f2ecb         ucomiss xmm1, xmm3
0x00008c18      0f861cffffff   jbe 0x8b3a
0x00008c1e      807a1000       cmp byte [rdx + 0x10], 0
0x00008c22      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00008c27      7504           jne 0x8c2d
0x00008c29      f30f59c2       mulss xmm0, xmm2
0x00008c2d      0f2e05582600.  ucomiss xmm0, dword [0x0000b28c]
0x00008c34      736d           jae 0x8ca3
0x00008c36      0f2e05532600.  ucomiss xmm0, dword [0x0000b290]
0x00008c3d      0f83ad000000   jae 0x8cf0
0x00008c43      f3480f2cf0     cvttss2si rsi, xmm0
0x00008c48      4889df         mov rdi, rbx
0x00008c4b      e800fcffff     call sym.hash_rehash
0x00008c50      84c0           test al, al
0x00008c52      744f           je 0x8ca3
0x00008c54      31c9           xor ecx, ecx
0x00008c56      4c89e2         mov rdx, r12
0x00008c59      4889ee         mov rsi, rbp
0x00008c5c      4889df         mov rdi, rbx
0x00008c5f      e83cf1ffff     call sym.hash_find_entry
0x00008c64      4885c0         test rax, rax
0x00008c67      0f84cdfeffff   je 0x8b3a
0x00008c6d      e81e8cffff     call sym.imp.abort
0x00008c72      660f1f440000   nop word [rax + rax]
0x00008c78      49892c24       mov qword [r12], rbp
0x00008c7c      b801000000     mov eax, 1
0x00008c81      4883432001     add qword [rbx + 0x20], 1
0x00008c86      4883431801     add qword [rbx + 0x18], 1
0x00008c8b      e94cfeffff     jmp 0x8adc
0x00008c90      bf10000000     mov edi, 0x10
0x00008c95      e8668effff     call sym.imp.malloc
0x00008c9a      4885c0         test rax, rax
0x00008c9d      0f85bbfeffff   jne 0x8b5e
0x00008ca3      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008ca8      e92ffeffff     jmp 0x8adc
0x00008cad      0f1f00         nop dword [rax]
0x00008cb0      4889c1         mov rcx, rax
0x00008cb3      660fefc0       pxor xmm0, xmm0
0x00008cb7      48d1e9         shr rcx, 1
0x00008cba      83e001         and eax, 1
0x00008cbd      4809c1         or rcx, rax
0x00008cc0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00008cc5      f30f58c0       addss xmm0, xmm0
0x00008cc9      e92affffff     jmp 0x8bf8
0x00008cce      6690           nop
0x00008cd0      4889c1         mov rcx, rax
0x00008cd3      660fefc9       pxor xmm1, xmm1
0x00008cd7      48d1e9         shr rcx, 1
0x00008cda      83e001         and eax, 1
0x00008cdd      4809c1         or rcx, rax
0x00008ce0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00008ce5      f30f58c9       addss xmm1, xmm1
0x00008ce9      e920ffffff     jmp 0x8c0e
0x00008cee      6690           nop
0x00008cf0      f30f5c059825.  subss xmm0, dword [0x0000b290]
0x00008cf8      48b800000000.  movabs rax, 0x8000000000000000
0x00008d02      f3480f2cf0     cvttss2si rsi, xmm0
0x00008d07      4831c6         xor rsi, rax
0x00008d0a      e939ffffff     jmp 0x8c48
0x00008d0f      e88c8cffff     call sym.imp.__stack_chk_fail
0x00008d14      6690           nop
0x00008d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x00008d20      53             push rbx
0x00008d21      4889f3         mov rbx, rsi
0x00008d24      4883ec10       sub rsp, 0x10
0x00008d28      4889e2         mov rdx, rsp
0x00008d2b      64488b042528.  mov rax, qword fs:[0x28]
0x00008d34      4889442408     mov qword [rsp + 8], rax
0x00008d39      31c0           xor eax, eax
0x00008d3b      e850fdffff     call sym.hash_insert_if_absent
0x00008d40      83f8ff         cmp eax, 0xffffffff
0x00008d43      742b           je 0x8d70
0x00008d45      85c0           test eax, eax
0x00008d47      7504           jne 0x8d4d
0x00008d49      488b1c24       mov rbx, qword [rsp]
0x00008d4d      488b4c2408     mov rcx, qword [rsp + 8]
0x00008d52      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008d5b      4889d8         mov rax, rbx
0x00008d5e      7514           jne 0x8d74
0x00008d60      4883c410       add rsp, 0x10
0x00008d64      5b             pop rbx
0x00008d65      c3             ret
0x00008d66      662e0f1f8400.  nop word cs:[rax + rax]
0x00008d70      31db           xor ebx, ebx
0x00008d72      ebd9           jmp 0x8d4d
0x00008d74      e8278cffff     call sym.imp.__stack_chk_fail
0x00008d79      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x00008d80      4154           push r12
0x00008d82      55             push rbp
0x00008d83      b901000000     mov ecx, 1
0x00008d88      53             push rbx
0x00008d89      4889fb         mov rbx, rdi
0x00008d8c      4883ec10       sub rsp, 0x10
0x00008d90      4889e2         mov rdx, rsp
0x00008d93      64488b042528.  mov rax, qword fs:[0x28]
0x00008d9c      4889442408     mov qword [rsp + 8], rax
0x00008da1      31c0           xor eax, eax
0x00008da3      e8f8efffff     call sym.hash_find_entry
0x00008da8      4885c0         test rax, rax
0x00008dab      4889c5         mov rbp, rax
0x00008dae      740f           je 0x8dbf
0x00008db0      488b0424       mov rax, qword [rsp]
0x00008db4      48836b2001     sub qword [rbx + 0x20], 1
0x00008db9      48833800       cmp qword [rax], 0
0x00008dbd      7421           je 0x8de0
0x00008dbf      488b4c2408     mov rcx, qword [rsp + 8]
0x00008dc4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008dcd      4889e8         mov rax, rbp
0x00008dd0      0f85a8010000   jne 0x8f7e
0x00008dd6      4883c410       add rsp, 0x10
0x00008dda      5b             pop rbx
0x00008ddb      5d             pop rbp
0x00008ddc      415c           pop r12
0x00008dde      c3             ret
0x00008ddf      90             nop
0x00008de0      488b4318       mov rax, qword [rbx + 0x18]
0x00008de4      4883e801       sub rax, 1
0x00008de8      4885c0         test rax, rax
0x00008deb      48894318       mov qword [rbx + 0x18], rax
0x00008def      0f88fb000000   js 0x8ef0
0x00008df5      660fefc0       pxor xmm0, xmm0
0x00008df9      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008dfe      488b4310       mov rax, qword [rbx + 0x10]
0x00008e02      488b5328       mov rdx, qword [rbx + 0x28]
0x00008e06      4885c0         test rax, rax
0x00008e09      0f88c1000000   js 0x8ed0
0x00008e0f      660fefc9       pxor xmm1, xmm1
0x00008e13      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008e18      f30f590a       mulss xmm1, dword [rdx]
0x00008e1c      0f2ec8         ucomiss xmm1, xmm0
0x00008e1f      769e           jbe 0x8dbf
0x00008e21      488d7b28       lea rdi, [rbx + 0x28]
0x00008e25      e896f0ffff     call sym.check_tuning.isra.0
0x00008e2a      488b4310       mov rax, qword [rbx + 0x10]
0x00008e2e      488b5328       mov rdx, qword [rbx + 0x28]
0x00008e32      4885c0         test rax, rax
0x00008e35      0f8825010000   js 0x8f60
0x00008e3b      660fefc0       pxor xmm0, xmm0
0x00008e3f      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008e44      488b4318       mov rax, qword [rbx + 0x18]
0x00008e48      4885c0         test rax, rax
0x00008e4b      0f88ef000000   js 0x8f40
0x00008e51      660fefc9       pxor xmm1, xmm1
0x00008e55      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008e5a      f30f1012       movss xmm2, dword [rdx]
0x00008e5e      f30f59d0       mulss xmm2, xmm0
0x00008e62      0f2ed1         ucomiss xmm2, xmm1
0x00008e65      0f8654ffffff   jbe 0x8dbf
0x00008e6b      807a1000       cmp byte [rdx + 0x10], 0
0x00008e6f      f30f594204     mulss xmm0, dword [rdx + 4]
0x00008e74      0f84b6000000   je 0x8f30
0x00008e7a      0f2e050f2400.  ucomiss xmm0, dword [0x0000b290]
0x00008e81      0f8389000000   jae 0x8f10
0x00008e87      f3480f2cf0     cvttss2si rsi, xmm0
0x00008e8c      4889df         mov rdi, rbx
0x00008e8f      e8bcf9ffff     call sym.hash_rehash
0x00008e94      84c0           test al, al
0x00008e96      0f8523ffffff   jne 0x8dbf
0x00008e9c      488b7b48       mov rdi, qword [rbx + 0x48]
0x00008ea0      4885ff         test rdi, rdi
0x00008ea3      7414           je 0x8eb9
0x00008ea5      0f1f00         nop dword [rax]
0x00008ea8      4c8b6708       mov r12, qword [rdi + 8]
0x00008eac      e8df8dffff     call sym..plt.got
0x00008eb1      4d85e4         test r12, r12
0x00008eb4      4c89e7         mov rdi, r12
0x00008eb7      75ef           jne 0x8ea8
0x00008eb9      48c743480000.  mov qword [rbx + 0x48], 0
0x00008ec1      e9f9feffff     jmp 0x8dbf
0x00008ec6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008ed0      4889c1         mov rcx, rax
0x00008ed3      660fefc9       pxor xmm1, xmm1
0x00008ed7      48d1e9         shr rcx, 1
0x00008eda      83e001         and eax, 1
0x00008edd      4809c1         or rcx, rax
0x00008ee0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00008ee5      f30f58c9       addss xmm1, xmm1
0x00008ee9      e92affffff     jmp 0x8e18
0x00008eee      6690           nop
0x00008ef0      4889c2         mov rdx, rax
0x00008ef3      660fefc0       pxor xmm0, xmm0
0x00008ef7      48d1ea         shr rdx, 1
0x00008efa      83e001         and eax, 1
0x00008efd      4809c2         or rdx, rax
0x00008f00      f3480f2ac2     cvtsi2ss xmm0, rdx
0x00008f05      f30f58c0       addss xmm0, xmm0
0x00008f09      e9f0feffff     jmp 0x8dfe
0x00008f0e      6690           nop
0x00008f10      f30f5c057823.  subss xmm0, dword [0x0000b290]
0x00008f18      48b800000000.  movabs rax, 0x8000000000000000
0x00008f22      f3480f2cf0     cvttss2si rsi, xmm0
0x00008f27      4831c6         xor rsi, rax
0x00008f2a      e95dffffff     jmp 0x8e8c
0x00008f2f      90             nop
0x00008f30      f30f594208     mulss xmm0, dword [rdx + 8]
0x00008f35      e940ffffff     jmp 0x8e7a
0x00008f3a      660f1f440000   nop word [rax + rax]
0x00008f40      4889c1         mov rcx, rax
0x00008f43      660fefc9       pxor xmm1, xmm1
0x00008f47      48d1e9         shr rcx, 1
0x00008f4a      83e001         and eax, 1
0x00008f4d      4809c1         or rcx, rax
0x00008f50      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00008f55      f30f58c9       addss xmm1, xmm1
0x00008f59      e9fcfeffff     jmp 0x8e5a
0x00008f5e      6690           nop
0x00008f60      4889c1         mov rcx, rax
0x00008f63      660fefc0       pxor xmm0, xmm0
0x00008f67      48d1e9         shr rcx, 1
0x00008f6a      83e001         and eax, 1
0x00008f6d      4809c1         or rcx, rax
0x00008f70      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00008f75      f30f58c0       addss xmm0, xmm0
0x00008f79      e9c6feffff     jmp 0x8e44
0x00008f7e      e81d8affff     call sym.imp.__stack_chk_fail
0x00008f83      662e0f1f8400.  nop word cs:[rax + rax]
0x00008f8d      0f1f00         nop dword [rax]
;-- i_ring_init:
0x00008f90      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:26
0x00008f94      48c747140000.  mov qword [rdi + 0x14], 0               ; ../coreutils-8.31/lib/i-ring.c:29
0x00008f9c      8937           mov dword [rdi], esi                    ; ../coreutils-8.31/lib/i-ring.c:32
0x00008f9e      897704         mov dword [rdi + 4], esi
0x00008fa1      897708         mov dword [rdi + 8], esi
0x00008fa4      89770c         mov dword [rdi + 0xc], esi
0x00008fa7      897710         mov dword [rdi + 0x10], esi             ; ../coreutils-8.31/lib/i-ring.c:33
0x00008faa      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:34
0x00008fab      0f1f440000     nop dword [rax + rax]
;-- i_ring_empty:
0x00008fb0      0fb6471c       movzx eax, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:38
0x00008fb4      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:40
0x00008fb5      90             nop
0x00008fb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_push:
0x00008fc0      0fb6571c       movzx edx, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:44
0x00008fc4      8b4f14         mov ecx, dword [rdi + 0x14]
0x00008fc7      83f201         xor edx, 1
0x00008fca      0fb6d2         movzx edx, dl
0x00008fcd      01d1           add ecx, edx
0x00008fcf      83e103         and ecx, 3
0x00008fd2      89c8           mov eax, ecx
0x00008fd4      4c8d0487       lea r8, [rdi + rax*4]
0x00008fd8      418b00         mov eax, dword [r8]                     ; ../coreutils-8.31/lib/i-ring.c:46
0x00008fdb      418930         mov dword [r8], esi                     ; ../coreutils-8.31/lib/i-ring.c:47
0x00008fde      8b7718         mov esi, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:49
0x00008fe1      894f14         mov dword [rdi + 0x14], ecx             ; ../coreutils-8.31/lib/i-ring.c:48
0x00008fe4      39ce           cmp esi, ecx                            ; ../coreutils-8.31/lib/i-ring.c:49
0x00008fe6      7508           jne 0x8ff0
0x00008fe8      01f2           add edx, esi                            ; ../coreutils-8.31/lib/i-ring.c:50
0x00008fea      83e203         and edx, 3
0x00008fed      895718         mov dword [rdi + 0x18], edx
0x00008ff0      c6471c00       mov byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:51
0x00008ff4      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:53
0x00008ff5      90             nop
0x00008ff6      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_pop:
0x00009000      807f1c00       cmp byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:57
0x00009004      752f           jne 0x9035
0x00009006      8b4714         mov eax, dword [rdi + 0x14]             ; ../coreutils-8.31/lib/i-ring.c:61
0x00009009      8b7710         mov esi, dword [rdi + 0x10]             ; ../coreutils-8.31/lib/i-ring.c:62
0x0000900c      488d0c87       lea rcx, [rdi + rax*4]
0x00009010      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/i-ring.c:61
0x00009013      8b01           mov eax, dword [rcx]
0x00009015      8931           mov dword [rcx], esi                    ; ../coreutils-8.31/lib/i-ring.c:62
0x00009017      3b5718         cmp edx, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:63
0x0000901a      7414           je 0x9030
0x0000901c      83c203         add edx, 3                              ; ../coreutils-8.31/lib/i-ring.c:66
0x0000901f      83e203         and edx, 3
0x00009022      895714         mov dword [rdi + 0x14], edx
0x00009025      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:68
0x00009026      662e0f1f8400.  nop word cs:[rax + rax]
0x00009030      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:64
0x00009034      c3             ret
0x00009035      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/i-ring.c:57
0x00009039      e85288ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/i-ring.c:60
0x0000903e      6690           nop
;-- locale_charset:
0x00009040      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00009044      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00009049      e8d28affff     call sym.imp.nl_langinfo
0x0000904e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00009051      741d           je 0x9070
0x00009053      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00009056      488d15432200.  lea rdx, [0x0000b2a0]                   ; "ASCII"
0x0000905d      480f44c2       cmove rax, rdx
0x00009061      4883c408       add rsp, 8
0x00009065      c3             ret
0x00009066      662e0f1f8400.  nop word cs:[rax + rax]
0x00009070      488d05292200.  lea rax, [0x0000b2a0]                   ; "ASCII"
0x00009077      4883c408       add rsp, 8
0x0000907b      c3             ret
0x0000907c      0f1f4000       nop dword [rax]
;-- openat_save_fail:
0x00009080      53             push rbx                                ; ../coreutils-8.31/lib/openat-die.c:35
0x00009081      488d35202200.  lea rsi, str.unable_to_record_current_working_directory ; ../coreutils-8.31/lib/openat-die.c:38 ; 0xb2a8 ; "unable to record current working directory"
0x00009088      89fb           mov ebx, edi                            ; ../coreutils-8.31/lib/openat-die.c:35
0x0000908a      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/openat-die.c:38
0x0000908f      31ff           xor edi, edi
0x00009091      e8aa88ffff     call sym.imp.dcgettext
0x00009096      8b3d7c4f2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/openat-die.c:37 ; [0x20e018:4]=1
0x0000909c      4889c2         mov rdx, rax
0x0000909f      89de           mov esi, ebx
0x000090a1      31c0           xor eax, eax
0x000090a3      e8f88affff     call sym.imp.error
0x000090a8      e8e387ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/openat-die.c:44
0x000090ad      0f1f00         nop dword [rax]
;-- openat_restore_fail:
0x000090b0      53             push rbx                                ; ../coreutils-8.31/lib/openat-die.c:54
0x000090b1      488d35202200.  lea rsi, str.failed_to_return_to_initial_working_directory ; ../coreutils-8.31/lib/openat-die.c:57 ; 0xb2d8 ; "failed to return to initial working directory"
0x000090b8      89fb           mov ebx, edi                            ; ../coreutils-8.31/lib/openat-die.c:54
0x000090ba      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/openat-die.c:57
0x000090bf      31ff           xor edi, edi
0x000090c1      e87a88ffff     call sym.imp.dcgettext
0x000090c6      8b3d4c4f2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/openat-die.c:56 ; [0x20e018:4]=1
0x000090cc      4889c2         mov rdx, rax
0x000090cf      89de           mov esi, ebx
0x000090d1      31c0           xor eax, eax
0x000090d3      e8c88affff     call sym.imp.error
0x000090d8      e8b387ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/openat-die.c:61
0x000090dd      0f1f00         nop dword [rax]
;-- openat_safer:
0x000090e0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x000090e4      48894c2438     mov qword [rsp + 0x38], rcx
0x000090e9      31c9           xor ecx, ecx
0x000090eb      64488b042528.  mov rax, qword fs:[0x28]
0x000090f4      4889442418     mov qword [rsp + 0x18], rax
0x000090f9      31c0           xor eax, eax
0x000090fb      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x000090fe      7528           jne 0x9128
0x00009100      31c0           xor eax, eax
0x00009102      e87988ffff     call sym.imp.openat                     ; fcntl2.h:-83
0x00009107      89c7           mov edi, eax
0x00009109      e852010000     call sym.fd_safer                       ; fcntl2.h:-82
0x0000910e      488b742418     mov rsi, qword [rsp + 0x18]
0x00009113      644833342528.  xor rsi, qword fs:[0x28]
0x0000911c      752b           jne 0x9149
0x0000911e      4883c458       add rsp, 0x58
0x00009122      c3             ret
0x00009123      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x00009128      488d442460     lea rax, [rsp + 0x60]
0x0000912d      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x2790 rip
0x00009134      8b4c2438       mov ecx, dword [rsp + 0x38]
0x00009138      4889442408     mov qword [rsp + 8], rax
0x0000913d      488d442420     lea rax, [rsp + 0x20]
0x00009142      4889442410     mov qword [rsp + 0x10], rax
0x00009147      ebb7           jmp 0x9100
0x00009149      e85288ffff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x0000914e      6690           nop
;-- opendirat:
0x00009150      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x00009152      4154           push r12
0x00009154      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x0000915a      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000915b      53             push rbx
0x0000915c      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x0000915e      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x00009161      4883ec08       sub rsp, 8
0x00009165      e876ffffff     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x0000916a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x0000916c      7852           js 0x91c0
0x0000916e      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x00009170      89c3           mov ebx, eax
0x00009172      e8798affff     call sym.imp.fdopendir
0x00009177      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x0000917a      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000917d      7419           je 0x9198                               ; ../coreutils-8.31/lib/opendirat.c:45
0x0000917f      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x00009183      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x00009187      4889e8         mov rax, rbp
0x0000918a      5b             pop rbx
0x0000918b      5d             pop rbp
0x0000918c      415c           pop r12
0x0000918e      415d           pop r13
0x00009190      c3             ret
0x00009191      0f1f80000000.  nop dword [rax]
0x00009198      e80387ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x0000919d      448b28         mov r13d, dword [rax]
0x000091a0      4989c4         mov r12, rax
0x000091a3      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x000091a5      e88688ffff     call sym.imp.close
0x000091aa      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x000091ad      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x000091b1      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x000091b5      5b             pop rbx
0x000091b6      5d             pop rbp
0x000091b7      415c           pop r12
0x000091b9      415d           pop r13
0x000091bb      c3             ret
0x000091bc      0f1f4000       nop dword [rax]
0x000091c0      4883c408       add rsp, 8
0x000091c4      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x000091c6      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x000091c7      4889e8         mov rax, rbp
0x000091ca      5d             pop rbp
0x000091cb      415c           pop r12
0x000091cd      415d           pop r13
0x000091cf      c3             ret
;-- save_cwd:
0x000091d0      53             push rbx
0x000091d1      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/save-cwd.c:63
0x000091d4      48c747080000.  mov qword [rdi + 8], 0                  ; ../coreutils-8.31/lib/save-cwd.c:64
0x000091dc      488d3d781f00.  lea rdi, [0x0000b15b]                   ; ../coreutils-8.31/lib/save-cwd.c:66 ; "."
0x000091e3      31c0           xor eax, eax
0x000091e5      be00000800     mov esi, 0x80000
0x000091ea      e8f1e9ffff     call sym.open_safer
0x000091ef      89c2           mov edx, eax
0x000091f1      8903           mov dword [rbx], eax
0x000091f3      31c0           xor eax, eax
0x000091f5      85d2           test edx, edx                           ; ../coreutils-8.31/lib/save-cwd.c:69
0x000091f7      7807           js 0x9200
0x000091f9      5b             pop rbx                                 ; ../coreutils-8.31/lib/save-cwd.c:76
0x000091fa      c3             ret
0x000091fb      0f1f440000     nop dword [rax + rax]
0x00009200      31f6           xor esi, esi                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x00009202      31ff           xor edi, edi
0x00009204      e81788ffff     call sym.imp.getcwd
0x00009209      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/save-cwd.c:72
0x0000920c      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/save-cwd.c:71
0x00009210      0f94c0         sete al                                 ; ../coreutils-8.31/lib/save-cwd.c:72
0x00009213      0fb6c0         movzx eax, al
0x00009216      f7d8           neg eax
0x00009218      5b             pop rbx                                 ; ../coreutils-8.31/lib/save-cwd.c:76
0x00009219      c3             ret
0x0000921a      660f1f440000   nop word [rax + rax]
;-- restore_cwd:
0x00009220      8b07           mov eax, dword [rdi]                    ; ../coreutils-8.31/lib/save-cwd.c:84
0x00009222      85c0           test eax, eax
0x00009224      780a           js 0x9230
0x00009226      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/save-cwd.c:86
0x00009228      e92389ffff     jmp sym.imp.fchdir
0x0000922d      0f1f00         nop dword [rax]
0x00009230      488b7f08       mov rdi, qword [rdi + 8]                ; ../coreutils-8.31/lib/save-cwd.c:88
0x00009234      e9f7000000     jmp sym.chdir_long
0x00009239      0f1f80000000.  nop dword [rax]
;-- free_cwd:
0x00009240      53             push rbx                                ; ../coreutils-8.31/lib/save-cwd.c:93
0x00009241      4889fb         mov rbx, rdi
0x00009244      8b3f           mov edi, dword [rdi]                    ; ../coreutils-8.31/lib/save-cwd.c:94
0x00009246      85ff           test edi, edi
0x00009248      7805           js 0x924f
0x0000924a      e8e187ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/save-cwd.c:95
0x0000924f      488b7b08       mov rdi, qword [rbx + 8]                ; ../coreutils-8.31/lib/save-cwd.c:96
0x00009253      5b             pop rbx                                 ; ../coreutils-8.31/lib/save-cwd.c:97
0x00009254      e9378affff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/save-cwd.c:96
0x00009259      0f1f80000000.  nop dword [rax]
;-- fd_safer:
0x00009260      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x00009262      4154           push r12
0x00009264      55             push rbp
0x00009265      53             push rbx
0x00009266      89fb           mov ebx, edi
0x00009268      4883ec08       sub rsp, 8
0x0000926c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0000926f      7721           ja 0x9292
0x00009271      e89a080000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x00009276      4189c4         mov r12d, eax
0x00009279      e82286ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0000927e      448b28         mov r13d, dword [rax]
0x00009281      4889c5         mov rbp, rax
0x00009284      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x00009286      e8a587ffff     call sym.imp.close
0x0000928b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0000928e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x00009292      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x00009296      89d8           mov eax, ebx
0x00009298      5b             pop rbx
0x00009299      5d             pop rbp
0x0000929a      415c           pop r12
0x0000929c      415d           pop r13
0x0000929e      c3             ret
0x0000929f      90             nop
;-- cdb_free:
0x000092a0      8b3f           mov edi, dword [rdi]                    ; ../coreutils-8.31/lib/chdir-long.c:60
0x000092a2      85ff           test edi, edi
0x000092a4      781a           js 0x92c0
0x000092a6      4883ec08       sub rsp, 8
0x000092aa      e88187ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/chdir-long.c:63
0x000092af      85c0           test eax, eax                           ; ../coreutils-8.31/lib/chdir-long.c:64
0x000092b1      750f           jne 0x92c2
0x000092b3      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/chdir-long.c:66
0x000092b7      c3             ret
0x000092b8      0f1f84000000.  nop dword [rax + rax]
0x000092c0      f3c3           ret
0x000092c2      488d0db72000.  lea rcx, obj.__PRETTY_FUNCTION__.5081   ; ../coreutils-8.31/lib/chdir-long.c:64 ; 0xb380 ; "cdb_free"
0x000092c9      488d35382000.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0xb308 ; "../coreutils-8.31/lib/chdir-long.c"
0x000092d0      488d3d592000.  lea rdi, str.close_fail                 ; 0xb330 ; "! close_fail"
0x000092d7      ba40000000     mov edx, 0x40                           ; segment.PHDR
0x000092dc      e81f87ffff     call sym.imp.__assert_fail
0x000092e1      0f1f440000     nop dword [rax + rax]
0x000092e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- cdb_advance_fd:
0x000092f0      55             push rbp                                ; ../coreutils-8.31/lib/chdir-long.c:74
0x000092f1      53             push rbx
0x000092f2      4889fb         mov rbx, rdi
0x000092f5      31c0           xor eax, eax                            ; fcntl2.h:129       return __openat_alias (__fd, __path, __oflag, __va_arg_pack ());
0x000092f7      ba00090100     mov edx, 0x10900
0x000092fc      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/chdir-long.c:74
0x00009300      8b3f           mov edi, dword [rdi]                    ; fcntl2.h:129       return __openat_alias (__fd, __path, __oflag, __va_arg_pack ());
0x00009302      e87986ffff     call sym.imp.openat
0x00009307      85c0           test eax, eax                           ; ../coreutils-8.31/lib/chdir-long.c:77
0x00009309      7815           js 0x9320
0x0000930b      89c5           mov ebp, eax
0x0000930d      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/chdir-long.c:80
0x00009310      e88bffffff     call sym.cdb_free
0x00009315      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/chdir-long.c:81
0x00009317      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/chdir-long.c:83
0x00009319      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/chdir-long.c:84
0x0000931d      5b             pop rbx
0x0000931e      5d             pop rbp
0x0000931f      c3             ret
0x00009320      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/chdir-long.c:78 ; -1
0x00009325      ebf2           jmp 0x9319
0x00009327      660f1f840000.  nop word [rax + rax]
;-- chdir_long:
0x00009330      4157           push r15                                ; ../coreutils-8.31/lib/chdir-long.c:111
0x00009332      4156           push r14
0x00009334      4155           push r13
0x00009336      4154           push r12
0x00009338      55             push rbp
0x00009339      53             push rbx
0x0000933a      4889fd         mov rbp, rdi
0x0000933d      4883ec18       sub rsp, 0x18
0x00009341      64488b042528.  mov rax, qword fs:[0x28]
0x0000934a      4889442408     mov qword [rsp + 8], rax
0x0000934f      31c0           xor eax, eax
0x00009351      e83a86ffff     call sym.imp.chdir                      ; ../coreutils-8.31/lib/chdir-long.c:112
0x00009356      85c0           test eax, eax                           ; ../coreutils-8.31/lib/chdir-long.c:113
0x00009358      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/chdir-long.c:112
0x0000935a      740d           je 0x9369                               ; ../coreutils-8.31/lib/chdir-long.c:113
0x0000935c      e83f85ffff     call sym.imp.__errno_location
0x00009361      833824         cmp dword [rax], 0x24
0x00009364      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/chdir-long.c:77
0x00009367      7427           je 0x9390
0x00009369      488b4c2408     mov rcx, qword [rsp + 8]
0x0000936e      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009377      89d8           mov eax, ebx
0x00009379      0f8502020000   jne 0x9581
0x0000937f      4883c418       add rsp, 0x18
0x00009383      5b             pop rbx
0x00009384      5d             pop rbp
0x00009385      415c           pop r12
0x00009387      415d           pop r13
0x00009389      415e           pop r14
0x0000938b      415f           pop r15
0x0000938d      c3             ret
0x0000938e      6690           nop
0x00009390      4889ef         mov rdi, rbp
0x00009393      e8c885ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/chdir-long.c:86
0x00009398      4885c0         test rax, rax
0x0000939b      4989c4         mov r12, rax
0x0000939e      c74424049cff.  mov dword [rsp + 4], 0xffffff9c         ; [0xffffff9c:4]=-1 ; 4294967196
0x000093a6      0f84da010000   je 0x9586
0x000093ac      483dff0f0000   cmp rax, 0xfff                          ; ../coreutils-8.31/lib/chdir-long.c:-42
0x000093b2      0f86ed010000   jbe 0x95a5
0x000093b8      488d35112000.  lea rsi, [0x0000b3d0]                   ; "/"
0x000093bf      4889ef         mov rdi, rbp
0x000093c2      e87986ffff     call sym.imp.strspn
0x000093c7      4883f802       cmp rax, 2
0x000093cb      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/chdir-long.c:-54
0x000093ce      0f84cc000000   je 0x94a0                               ; ../coreutils-8.31/lib/chdir-long.c:-9
0x000093d4      4885c0         test rax, rax
0x000093d7      4989ef         mov r15, rbp                            ; ../coreutils-8.31/lib/chdir-long.c:-7
0x000093da      0f8560010000   jne 0x9540                              ; ../coreutils-8.31/lib/chdir-long.c:8
0x000093e0      41803f2f       cmp byte [r15], 0x2f
0x000093e4      0f84f9010000   je 0x95e3
0x000093ea      4c01e5         add rbp, r12
0x000093ed      4939ef         cmp r15, rbp
0x000093f0      0f87ce010000   ja 0x95c4
0x000093f6      4889e8         mov rax, rbp
0x000093f9      4c8d642404     lea r12, [rsp + 4]                      ; ../coreutils-8.31/lib/chdir-long.c:6
0x000093fe      4c29f8         sub rax, r15
0x00009401      483dff0f0000   cmp rax, 0xfff
0x00009407      4d89e5         mov r13, r12
0x0000940a      7f60           jg 0x946c
0x0000940c      e9ff000000     jmp 0x9510
0x00009411      0f1f80000000.  nop dword [rax]
0x00009418      c60000         mov byte [rax], 0
0x0000941b      4c29f8         sub rax, r15                            ; ../coreutils-8.31/lib/chdir-long.c:9
0x0000941e      483dff0f0000   cmp rax, 0xfff                          ; ../coreutils-8.31/lib/chdir-long.c:10
0x00009424      0f8f38010000   jg 0x9562                               ; ../coreutils-8.31/lib/chdir-long.c:13
0x0000942a      4c89fe         mov rsi, r15
0x0000942d      4c89e7         mov rdi, r12
0x00009430      4d89e5         mov r13, r12
0x00009433      e8b8feffff     call sym.cdb_advance_fd
0x00009438      85c0           test eax, eax                           ; ../coreutils-8.31/lib/chdir-long.c:-129
0x0000943a      c6032f         mov byte [rbx], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000943d      0f85b5000000   jne 0x94f8
0x00009443      4883c301       add rbx, 1
0x00009447      488d35821f00.  lea rsi, [0x0000b3d0]                   ; "/"
0x0000944e      4889df         mov rdi, rbx
0x00009451      e8ea85ffff     call sym.imp.strspn
0x00009456      4c8d3c03       lea r15, [rbx + rax]
0x0000945a      4889e8         mov rax, rbp
0x0000945d      4c29f8         sub rax, r15
0x00009460      483dff0f0000   cmp rax, 0xfff
0x00009466      0f8ea4000000   jle 0x9510
0x0000946c      ba00100000     mov edx, 0x1000                         ; ../coreutils-8.31/lib/chdir-long.c:-158
0x00009471      be2f000000     mov esi, 0x2f                           ; '/'
0x00009476      4c89ff         mov rdi, r15
0x00009479      e83287ffff     call sym.imp.memrchr
0x0000947e      4885c0         test rax, rax
0x00009481      4889c3         mov rbx, rax
0x00009484      7592           jne 0x9418
0x00009486      41c706240000.  mov dword [r14], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x0000948d      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00009492      e9d2feffff     jmp 0x9369
0x00009497      660f1f840000.  nop word [rax + rax]
0x000094a0      498d5424fd     lea rdx, [r12 - 3]
0x000094a5      488d7d03       lea rdi, [rbp + 3]                      ; ../coreutils-8.31/lib/chdir-long.c:-210
0x000094a9      be2f000000     mov esi, 0x2f                           ; '/'
0x000094ae      e8ad85ffff     call sym.imp.memchr
0x000094b3      4885c0         test rax, rax
0x000094b6      4889c3         mov rbx, rax
0x000094b9      744b           je 0x9506
0x000094bb      4c8d6c2404     lea r13, [rsp + 4]
0x000094c0      c60000         mov byte [rax], 0
0x000094c3      4889ee         mov rsi, rbp
0x000094c6      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/chdir-long.c:-240
0x000094c9      e822feffff     call sym.cdb_advance_fd
0x000094ce      85c0           test eax, eax
0x000094d0      c6032f         mov byte [rbx], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x000094d3      7523           jne 0x94f8
0x000094d5      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/chdir-long.c:-375
0x000094d9      488d35f01e00.  lea rsi, [0x0000b3d0]                   ; "/"
0x000094e0      4889df         mov rdi, rbx
0x000094e3      e85885ffff     call sym.imp.strspn
0x000094e8      4c8d3c03       lea r15, [rbx + rax]
0x000094ec      e9effeffff     jmp 0x93e0                              ; ../coreutils-8.31/lib/chdir-long.c:-232
0x000094f1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/chdir-long.c:-273
0x000094f8      418b1e         mov ebx, dword [r14]
0x000094fb      4c89ef         mov rdi, r13
0x000094fe      e89dfdffff     call sym.cdb_free
0x00009503      41891e         mov dword [r14], ebx
0x00009506      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000950b      e959feffff     jmp 0x9369
0x00009510      4c39fd         cmp rbp, r15
0x00009513      760f           jbe 0x9524                              ; ../coreutils-8.31/lib/chdir-long.c:-251
0x00009515      4c89fe         mov rsi, r15
0x00009518      4c89ef         mov rdi, r13
0x0000951b      e8d0fdffff     call sym.cdb_advance_fd
0x00009520      85c0           test eax, eax
0x00009522      75d4           jne 0x94f8
0x00009524      8b7c2404       mov edi, dword [rsp + 4]
0x00009528      e82386ffff     call sym.imp.fchdir
0x0000952d      85c0           test eax, eax
0x0000952f      89c3           mov ebx, eax
0x00009531      75c5           jne 0x94f8
0x00009533      4c89ef         mov rdi, r13
0x00009536      e865fdffff     call sym.cdb_free
0x0000953b      e929feffff     jmp 0x9369
0x00009540      4c8d6c2404     lea r13, [rsp + 4]
0x00009545      488d35841e00.  lea rsi, [0x0000b3d0]                   ; "/"
0x0000954c      4c89ef         mov rdi, r13
0x0000954f      e89cfdffff     call sym.cdb_advance_fd
0x00009554      85c0           test eax, eax
0x00009556      75a0           jne 0x94f8                              ; ../coreutils-8.31/lib/chdir-long.c:-303
0x00009558      4c8d7c1d00     lea r15, [rbp + rbx]
0x0000955d      e97efeffff     jmp 0x93e0
0x00009562      488d0d271e00.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0xb390 ; "chdir_long"
0x00009569      488d35981d00.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0xb308 ; "../coreutils-8.31/lib/chdir-long.c"
0x00009570      488d3df51d00.  lea rdi, str.slash___dir___4096         ; 0xb36c ; "slash - dir < 4096"
0x00009577      bab3000000     mov edx, 0xb3
0x0000957c      e87f84ffff     call sym.imp.__assert_fail
0x00009581      e81a84ffff     call sym.imp.__stack_chk_fail
0x00009586      488d0d031e00.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0xb390 ; "chdir_long"
0x0000958d      488d35741d00.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0xb308 ; "../coreutils-8.31/lib/chdir-long.c"
0x00009594      488d3da21d00.  lea rdi, str.0___len                    ; ../coreutils-8.31/lib/chdir-long.c:-268 ; 0xb33d ; "0 < len"
0x0000959b      ba7e000000     mov edx, 0x7e                           ; '~'
0x000095a0      e85b84ffff     call sym.imp.__assert_fail
0x000095a5      488d0de41d00.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0xb390 ; "chdir_long"
0x000095ac      488d35551d00.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0xb308 ; "../coreutils-8.31/lib/chdir-long.c"
0x000095b3      488d3d8b1d00.  lea rdi, str.4096____len                ; 0xb345 ; "4096 <= len"
0x000095ba      ba7f000000     mov edx, 0x7f
0x000095bf      e83c84ffff     call sym.imp.__assert_fail
0x000095c4      488d0dc51d00.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0xb390 ; "chdir_long"
0x000095cb      488d35361d00.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0xb308 ; "../coreutils-8.31/lib/chdir-long.c"
0x000095d2      488d3d841d00.  lea rdi, str.dir____dir_end             ; 0xb35d ; "dir <= dir_end"
0x000095d9      baa3000000     mov edx, 0xa3
0x000095de      e81d84ffff     call sym.imp.__assert_fail
0x000095e3      488d0da61d00.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0xb390 ; "chdir_long"
0x000095ea      488d35171d00.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0xb308 ; "../coreutils-8.31/lib/chdir-long.c"
0x000095f1      488d3d591d00.  lea rdi, str.dir                        ; 0xb351 ; "*dir != '/'"
0x000095f8      baa2000000     mov edx, 0xa2
0x000095fd      e8fe83ffff     call sym.imp.__assert_fail
0x00009602      662e0f1f8400.  nop word cs:[rax + rax]
0x0000960c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00009610      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00009612      55             push rbp
0x00009613      53             push rbx
0x00009614      4889fb         mov rbx, rdi
0x00009617      e8b484ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000961c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000961e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00009621      7854           js 0x9677                               ; ../coreutils-8.31/lib/fclose.c:66
0x00009623      e81885ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00009628      85c0           test eax, eax
0x0000962a      752c           jne 0x9658
0x0000962c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000962f      e8dc020000     call sym.rpl_fflush
0x00009634      85c0           test eax, eax
0x00009636      743c           je 0x9674
0x00009638      e86382ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000963d      448b20         mov r12d, dword [rax]
0x00009640      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00009643      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00009646      e8d582ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000964b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000964e      7530           jne 0x9680
0x00009650      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00009651      5d             pop rbp
0x00009652      415c           pop r12
0x00009654      c3             ret
0x00009655      0f1f00         nop dword [rax]
0x00009658      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000965b      e87084ffff     call sym.imp.fileno
0x00009660      31f6           xor esi, esi
0x00009662      ba01000000     mov edx, 1
0x00009667      89c7           mov edi, eax
0x00009669      e88283ffff     call sym.imp.lseek
0x0000966e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009672      75b8           jne 0x962c
0x00009674      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00009677      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00009678      5d             pop rbp
0x00009679      415c           pop r12
0x0000967b      e9a082ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00009680      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00009684      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00009689      ebc5           jmp 0x9650
0x0000968b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00009690      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00009692      55             push rbp
0x00009693      89fd           mov ebp, edi
0x00009695      53             push rbx
0x00009696      4883ec50       sub rsp, 0x50
0x0000969a      64488b042528.  mov rax, qword fs:[0x28]
0x000096a3      4889442418     mov qword [rsp + 0x18], rax
0x000096a8      31c0           xor eax, eax
0x000096aa      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x000096af      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x000096b1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x000096b6      48894c2438     mov qword [rsp + 0x38], rcx
0x000096bb      4c89442440     mov qword [rsp + 0x40], r8
0x000096c0      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x000096c5      488d442420     lea rax, [rsp + 0x20]
0x000096ca      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x000096cf      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x000096d6      4889442410     mov qword [rsp + 0x10], rax
0x000096db      0f8401020000   je 0x98e2                               ; ../coreutils-8.31/lib/fcntl.c:210
0x000096e1      81fe06040000   cmp esi, 0x406
0x000096e7      7547           jne 0x9730
0x000096e9      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x000096ee      833d634b2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20e258:4]=0
0x000096f5      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2790 rip
0x000096fc      448b6010       mov r12d, dword [rax + 0x10]
0x00009700      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00009703      0f882a010000   js 0x9833                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00009709      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000970b      be06040000     mov esi, 0x406
0x00009710      e8eb81ffff     call sym.imp.fcntl
0x00009715      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00009717      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00009719      0f8889010000   js 0x98a8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000971f      c7052f4b2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20e258:4]=0
0x00009729      eb45           jmp 0x9770
0x0000972b      0f1f440000     nop dword [rax + rax]
0x00009730      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00009733      742b           je 0x9760
0x00009735      7f59           jg 0x9790
0x00009737      83fe04         cmp esi, 4
0x0000973a      0f84d0000000   je 0x9810
0x00009740      0f8fba000000   jg 0x9800
0x00009746      83fe02         cmp esi, 2
0x00009749      0f84c1000000   je 0x9810
0x0000974f      7f0f           jg 0x9760
0x00009751      83fe01         cmp esi, 1
0x00009754      7562           jne 0x97b8
0x00009756      662e0f1f8400.  nop word cs:[rax + rax]
0x00009760      89ef           mov edi, ebp
0x00009762      31c0           xor eax, eax
0x00009764      e89781ffff     call sym.imp.fcntl
0x00009769      89c3           mov ebx, eax
0x0000976b      0f1f440000     nop dword [rax + rax]
0x00009770      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00009775      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000977e      89d8           mov eax, ebx
0x00009780      0f8557010000   jne 0x98dd                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00009786      4883c450       add rsp, 0x50
0x0000978a      5b             pop rbx
0x0000978b      5d             pop rbp
0x0000978c      415c           pop r12
0x0000978e      c3             ret
0x0000978f      90             nop
0x00009790      81fe07040000   cmp esi, 0x407
0x00009796      7f48           jg 0x97e0
0x00009798      81fe06040000   cmp esi, 0x406
0x0000979e      7d70           jge 0x9810
0x000097a0      81fe01040000   cmp esi, 0x401
0x000097a6      74b8           je 0x9760
0x000097a8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x000097ae      7460           je 0x9810
0x000097b0      81fe00040000   cmp esi, 0x400
0x000097b6      7458           je 0x9810
0x000097b8      8b0424         mov eax, dword [rsp]
0x000097bb      83f82f         cmp eax, 0x2f
0x000097be      0f8736010000   ja 0x98fa
0x000097c4      4803442410     add rax, qword [rsp + 0x10]
0x000097c9      488b10         mov rdx, qword [rax]
0x000097cc      89ef           mov edi, ebp
0x000097ce      31c0           xor eax, eax
0x000097d0      e82b81ffff     call sym.imp.fcntl
0x000097d5      89c3           mov ebx, eax
0x000097d7      eb97           jmp 0x9770
0x000097d9      0f1f80000000.  nop dword [rax]
0x000097e0      81fe09040000   cmp esi, 0x409
0x000097e6      7428           je 0x9810
0x000097e8      0f8c72ffffff   jl 0x9760
0x000097ee      81fe0a040000   cmp esi, 0x40a
0x000097f4      75c2           jne 0x97b8
0x000097f6      e965ffffff     jmp 0x9760                              ; ../coreutils-8.31/lib/fcntl.c:350
0x000097fb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00009800      83fe09         cmp esi, 9
0x00009803      0f8457ffffff   je 0x9760
0x00009809      7f05           jg 0x9810
0x0000980b      83fe08         cmp esi, 8
0x0000980e      75a8           jne 0x97b8
0x00009810      8b0424         mov eax, dword [rsp]
0x00009813      83f82f         cmp eax, 0x2f
0x00009816      0f87e8000000   ja 0x9904
0x0000981c      4803442410     add rax, qword [rsp + 0x10]
0x00009821      8b10           mov edx, dword [rax]
0x00009823      89ef           mov edi, ebp
0x00009825      31c0           xor eax, eax
0x00009827      e8d480ffff     call sym.imp.fcntl
0x0000982c      89c3           mov ebx, eax
0x0000982e      e93dffffff     jmp 0x9770
0x00009833      31f6           xor esi, esi
0x00009835      31c0           xor eax, eax
0x00009837      e8c480ffff     call sym.imp.fcntl
0x0000983c      85c0           test eax, eax
0x0000983e      89c3           mov ebx, eax
0x00009840      0f882affffff   js 0x9770
0x00009846      833d0b4a2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e258:4]=0
0x0000984d      0f851dffffff   jne 0x9770
0x00009853      31c0           xor eax, eax
0x00009855      be01000000     mov esi, 1
0x0000985a      89df           mov edi, ebx
0x0000985c      e89f80ffff     call sym.imp.fcntl
0x00009861      85c0           test eax, eax
0x00009863      781c           js 0x9881
0x00009865      83c801         or eax, 1
0x00009868      be02000000     mov esi, 2
0x0000986d      89df           mov edi, ebx
0x0000986f      89c2           mov edx, eax
0x00009871      31c0           xor eax, eax
0x00009873      e88880ffff     call sym.imp.fcntl
0x00009878      83f8ff         cmp eax, 0xffffffff
0x0000987b      0f85effeffff   jne 0x9770
0x00009881      e81a80ffff     call sym.imp.__errno_location
0x00009886      448b20         mov r12d, dword [rax]
0x00009889      4889c5         mov rbp, rax
0x0000988c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000988e      e89d81ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00009893      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00009898      44896500       mov dword [rbp], r12d
0x0000989c      e9cffeffff     jmp 0x9770
0x000098a1      0f1f80000000.  nop dword [rax]
0x000098a8      e8f37fffff     call sym.imp.__errno_location
0x000098ad      833816         cmp dword [rax], 0x16
0x000098b0      0f8569feffff   jne 0x971f
0x000098b6      31f6           xor esi, esi
0x000098b8      31c0           xor eax, eax
0x000098ba      4489e2         mov edx, r12d
0x000098bd      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x000098bf      e83c80ffff     call sym.imp.fcntl
0x000098c4      85c0           test eax, eax
0x000098c6      89c3           mov ebx, eax
0x000098c8      0f88a2feffff   js 0x9770
0x000098ce      c70580492000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e258:4]=0
0x000098d8      e976ffffff     jmp 0x9853
0x000098dd      e8be80ffff     call sym.imp.__stack_chk_fail
0x000098e2      488b442410     mov rax, qword [rsp + 0x10]
0x000098e7      31f6           xor esi, esi
0x000098e9      8b5010         mov edx, dword [rax + 0x10]
0x000098ec      31c0           xor eax, eax
0x000098ee      e80d80ffff     call sym.imp.fcntl
0x000098f3      89c3           mov ebx, eax
0x000098f5      e976feffff     jmp 0x9770
0x000098fa      488b442408     mov rax, qword [rsp + 8]
0x000098ff      e9c5feffff     jmp 0x97c9
0x00009904      488b442408     mov rax, qword [rsp + 8]
0x00009909      e913ffffff     jmp 0x9821
0x0000990e      6690           nop
;-- rpl_fflush:
0x00009910      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00009913      53             push rbx
0x00009914      4889fb         mov rbx, rdi
0x00009917      7411           je 0x992a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00009919      e82282ffff     call sym.imp.__freading
0x0000991e      85c0           test eax, eax
0x00009920      7408           je 0x992a
0x00009922      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00009928      750e           jne 0x9938
0x0000992a      4889df         mov rdi, rbx
0x0000992d      5b             pop rbx
0x0000992e      e9dd81ffff     jmp sym.imp.fflush
0x00009933      0f1f440000     nop dword [rax + rax]
0x00009938      4889df         mov rdi, rbx
0x0000993b      ba01000000     mov edx, 1
0x00009940      31f6           xor esi, esi
0x00009942      e809000000     call sym.rpl_fseeko
0x00009947      4889df         mov rdi, rbx
0x0000994a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000994b      e9c081ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00009950      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00009954      48394710       cmp qword [rdi + 0x10], rax
0x00009958      7406           je 0x9960                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000995a      e98182ffff     jmp sym.imp.fseeko
0x0000995f      90             nop
0x00009960      488b4720       mov rax, qword [rdi + 0x20]
0x00009964      48394728       cmp qword [rdi + 0x28], rax
0x00009968      75f0           jne 0x995a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000996a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000996f      75e9           jne 0x995a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00009971      4154           push r12
0x00009973      55             push rbp
0x00009974      4189d4         mov r12d, edx
0x00009977      53             push rbx
0x00009978      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000997b      4889fb         mov rbx, rdi
0x0000997e      e84d81ffff     call sym.imp.fileno
0x00009983      4489e2         mov edx, r12d
0x00009986      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00009989      89c7           mov edi, eax
0x0000998b      e86080ffff     call sym.imp.lseek
0x00009990      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009994      740c           je 0x99a2
0x00009996      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00009999      488983900000.  mov qword [rbx + 0x90], rax
0x000099a0      31c0           xor eax, eax
0x000099a2      5b             pop rbx
0x000099a3      5d             pop rbp
0x000099a4      415c           pop r12
0x000099a6      c3             ret
0x000099a7      660f1f840000.  nop word [rax + rax]
;-- openat_proc_name:
0x000099b0      4156           push r14                                ; ../coreutils-8.31/lib/openat-proc.c:45
0x000099b2      4155           push r13
0x000099b4      4154           push r12
0x000099b6      55             push rbp
0x000099b7      53             push rbx
0x000099b8      4889fb         mov rbx, rdi
0x000099bb      4883ec30       sub rsp, 0x30
0x000099bf      64488b042528.  mov rax, qword fs:[0x28]
0x000099c8      4889442428     mov qword [rsp + 0x28], rax
0x000099cd      31c0           xor eax, eax
0x000099cf      803a00         cmp byte [rdx], 0                       ; ../coreutils-8.31/lib/openat-proc.c:50
0x000099d2      0f8498000000   je 0x9a70
0x000099d8      8b057e482000   mov eax, dword [obj.proc_status.5461]   ; ../coreutils-8.31/lib/openat-proc.c:66 ; [0x20e25c:4]=0
0x000099de      4189f4         mov r12d, esi
0x000099e1      4889d5         mov rbp, rdx
0x000099e4      85c0           test eax, eax
0x000099e6      0f8494000000   je 0x9a80
0x000099ec      85c0           test eax, eax                           ; ../coreutils-8.31/lib/openat-proc.c:94
0x000099ee      0f880c010000   js 0x9b00
0x000099f4      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/openat-proc.c:98
0x000099f7      e8647fffff     call sym.imp.strlen
0x000099fc      488d781b       lea rdi, [rax + 0x1b]
0x00009a00      4881ffc00f00.  cmp rdi, 0xfc0                          ; ../coreutils-8.31/lib/openat-proc.c:99
0x00009a07      7611           jbe 0x9a1a
0x00009a09      e8f280ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/openat-proc.c:101
0x00009a0e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/openat-proc.c:102
0x00009a11      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/openat-proc.c:101
0x00009a14      0f84e6000000   je 0x9b00                               ; ../coreutils-8.31/lib/openat-proc.c:102
0x00009a1a      488d0d9f1900.  lea rcx, str.proc_self_fd__d            ; stdio2.h:33   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1, ; 0xb3c0 ; "/proc/self/fd/%d/"
0x00009a21      4589e0         mov r8d, r12d
0x00009a24      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00009a2b      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/openat-proc.c:6
0x00009a30      4889df         mov rdi, rbx
0x00009a33      31c0           xor eax, eax
0x00009a35      e84682ffff     call sym.imp.__sprintf_chk
0x00009a3a      4863f8         movsxd rdi, eax
0x00009a3d      4889ee         mov rsi, rbp
0x00009a40      4801df         add rdi, rbx
0x00009a43      e8887effff     call sym.imp.strcpy
0x00009a48      4889d8         mov rax, rbx
0x00009a4b      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00009a50      6448330c2528.  xor rcx, qword fs:[0x28]                ; ../coreutils-8.31/lib/openat-proc.c:-76
0x00009a59      0f85a8000000   jne 0x9b07
0x00009a5f      4883c430       add rsp, 0x30
0x00009a63      5b             pop rbx
0x00009a64      5d             pop rbp
0x00009a65      415c           pop r12
0x00009a67      415d           pop r13
0x00009a69      415e           pop r14
0x00009a6b      c3             ret
0x00009a6c      0f1f4000       nop dword [rax]
0x00009a70      c60700         mov byte [rdi], 0
0x00009a73      4889f8         mov rax, rdi                            ; fcntl2.h:-75
0x00009a76      ebd3           jmp 0x9a4b                              ; ../coreutils-8.31/lib/openat-proc.c:-50
0x00009a78      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/openat-proc.c:-49
0x00009a80      488d3d141900.  lea rdi, str.proc_self_fd               ; 0xb39b ; "/proc/self/fd"
0x00009a87      be00090100     mov esi, 0x10900
0x00009a8c      e82f81ffff     call sym.imp.open
0x00009a91      85c0           test eax, eax
0x00009a93      4189c5         mov r13d, eax
0x00009a96      7918           jns 0x9ab0
0x00009a98      c705ba472000.  mov dword [obj.proc_status.5461], 0xffffffff ; [0x20e25c:4]=0
0x00009aa2      31c0           xor eax, eax
0x00009aa4      eba5           jmp 0x9a4b
0x00009aa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009ab0      488d0df21800.  lea rcx, str.proc_self_fd__d_.._fd      ; 0xb3a9 ; "/proc/self/fd/%d/../fd"
0x00009ab7      4989e6         mov r14, rsp
0x00009aba      4189c0         mov r8d, eax
0x00009abd      ba20000000     mov edx, 0x20                           ; .//<built-in>:5 ; "@"
0x00009ac2      be01000000     mov esi, 1
0x00009ac7      4c89f7         mov rdi, r14
0x00009aca      31c0           xor eax, eax
0x00009acc      e8af81ffff     call sym.imp.__sprintf_chk
0x00009ad1      31f6           xor esi, esi
0x00009ad3      4c89f7         mov rdi, r14
0x00009ad6      e8f580ffff     call sym.imp.access
0x00009adb      83f801         cmp eax, 1
0x00009ade      4489ef         mov edi, r13d
0x00009ae1      19c0           sbb eax, eax
0x00009ae3      83e002         and eax, 2
0x00009ae6      83e801         sub eax, 1
0x00009ae9      89056d472000   mov dword [obj.proc_status.5461], eax   ; [0x20e25c:4]=0
0x00009aef      e83c7fffff     call sym.imp.close
0x00009af4      8b0562472000   mov eax, dword [obj.proc_status.5461]   ; [0x20e25c:4]=0
0x00009afa      e9edfeffff     jmp 0x99ec
0x00009aff      90             nop
0x00009b00      31c0           xor eax, eax
0x00009b02      e944ffffff     jmp 0x9a4b
0x00009b07      e8947effff     call sym.imp.__stack_chk_fail
0x00009b0c      0f1f4000       nop dword [rax]
;-- dup_safer:
0x00009b10      ba03000000     mov edx, 3
0x00009b15      31f6           xor esi, esi
0x00009b17      31c0           xor eax, eax
0x00009b19      e972fbffff     jmp sym.rpl_fcntl
0x00009b1e      6690           nop
;-- __libc_csu_init:
0x00009b20      4157           push r15
0x00009b22      4156           push r14
0x00009b24      4989d7         mov r15, rdx
0x00009b27      4155           push r13
0x00009b29      4154           push r12
0x00009b2b      4c8d255e3e20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20d990
0x00009b32      55             push rbp
0x00009b33      488d2d5e3e20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20d998 ; "P("
0x00009b3a      53             push rbx
0x00009b3b      4189fd         mov r13d, edi
0x00009b3e      4989f6         mov r14, rsi
0x00009b41      4c29e5         sub rbp, r12
0x00009b44      4883ec08       sub rsp, 8
0x00009b48      48c1fd03       sar rbp, 3
0x00009b4c      e80f7dffff     call sym._init
0x00009b51      4885ed         test rbp, rbp
0x00009b54      7420           je 0x9b76
0x00009b56      31db           xor ebx, ebx
0x00009b58      0f1f84000000.  nop dword [rax + rax]
0x00009b60      4c89fa         mov rdx, r15
0x00009b63      4c89f6         mov rsi, r14
0x00009b66      4489ef         mov edi, r13d
0x00009b69      41ff14dc       call qword [r12 + rbx*8]
0x00009b6d      4883c301       add rbx, 1
0x00009b71      4839dd         cmp rbp, rbx
0x00009b74      75ea           jne 0x9b60
0x00009b76      4883c408       add rsp, 8
0x00009b7a      5b             pop rbx
0x00009b7b      5d             pop rbp
0x00009b7c      415c           pop r12
0x00009b7e      415d           pop r13
0x00009b80      415e           pop r14
0x00009b82      415f           pop r15
0x00009b84      c3             ret
0x00009b85      90             nop
0x00009b86      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00009b90      f3c3           ret
0x00009b92      662e0f1f8400.  nop word cs:[rax + rax]
0x00009b9c      0f1f4000       nop dword [rax]
;-- atexit:
0x00009ba0      488b15614420.  mov rdx, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x00009ba7      31f6           xor esi, esi
0x00009ba9      e96280ffff     jmp sym.imp.__cxa_atexit
0x00009bae      0000           add byte [rax], al
