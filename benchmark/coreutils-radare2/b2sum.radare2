;-- section..plt:
;-- .plt:
0x000017e0      ff350ab62000   push qword [0x0020cdf0]                 ; [12] -r-x section size 960 named .plt
0x000017e6      ff250cb62000   jmp qword [0x0020cdf8]                  ; [0x20cdf8:8]=0
0x000017ec      0f1f4000       nop dword [rax]
;-- imp.free:
0x000017f0      ff250ab62000   jmp qword [reloc.free]                  ; [0x20ce00:8]=0x17f6
0x000017f6      6800000000     push 0
0x000017fb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x00001800      ff2502b62000   jmp qword [reloc.abort]                 ; [0x20ce08:8]=0x1806
0x00001806      6801000000     push 1
0x0000180b      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001810      ff25fab52000   jmp qword [reloc.__errno_location]      ; [0x20ce10:8]=0x1816
0x00001816      6802000000     push 2
0x0000181b      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001820      ff25f2b52000   jmp qword [reloc.strncmp]               ; [0x20ce18:8]=0x1826 ; "&\x18"
0x00001826      6803000000     push 3
0x0000182b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001830      ff25eab52000   jmp qword [reloc._exit]                 ; [0x20ce20:8]=0x1836 ; "6\x18"
0x00001836      6804000000     push 4
0x0000183b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001840      ff25e2b52000   jmp qword [reloc.__fpending]            ; [0x20ce28:8]=0x1846 ; "F\x18"
0x00001846      6805000000     push 5
0x0000184b      e990ffffff     jmp sym..plt
;-- imp.ferror:
0x00001850      ff25dab52000   jmp qword [reloc.ferror]                ; [0x20ce30:8]=0x1856 ; "V\x18"
0x00001856      6806000000     push 6
0x0000185b      e980ffffff     jmp sym..plt
;-- imp.fread:
0x00001860      ff25d2b52000   jmp qword [reloc.fread]                 ; [0x20ce38:8]=0x1866 ; "f\x18"
0x00001866      6807000000     push 7
0x0000186b      e970ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001870      ff25cab52000   jmp qword [reloc.fcntl]                 ; [0x20ce40:8]=0x1876 ; "v\x18"
0x00001876      6808000000     push 8
0x0000187b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001880      ff25c2b52000   jmp qword [reloc.textdomain]            ; [0x20ce48:8]=0x1886
0x00001886      6809000000     push 9
0x0000188b      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x00001890      ff25bab52000   jmp qword [reloc.fclose]                ; [0x20ce50:8]=0x1896
0x00001896      680a000000     push 0xa
0x0000189b      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000018a0      ff25b2b52000   jmp qword [reloc.bindtextdomain]        ; [0x20ce58:8]=0x18a6
0x000018a6      680b000000     push 0xb
0x000018ab      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000018b0      ff25aab52000   jmp qword [reloc.dcgettext]             ; [0x20ce60:8]=0x18b6
0x000018b6      680c000000     push 0xc
0x000018bb      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000018c0      ff25a2b52000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ce68:8]=0x18c6
0x000018c6      680d000000     push 0xd
0x000018cb      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x000018d0      ff259ab52000   jmp qword [reloc.strlen]                ; [0x20ce70:8]=0x18d6
0x000018d6      680e000000     push 0xe
0x000018db      e900ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000018e0      ff2592b52000   jmp qword [reloc.__stack_chk_fail]      ; [0x20ce78:8]=0x18e6
0x000018e6      680f000000     push 0xf
0x000018eb      e9f0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000018f0      ff258ab52000   jmp qword [reloc.getopt_long]           ; [0x20ce80:8]=0x18f6
0x000018f6      6810000000     push 0x10
0x000018fb      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001900      ff2582b52000   jmp qword [reloc.mbrtowc]               ; [0x20ce88:8]=0x1906
0x00001906      6811000000     push 0x11
0x0000190b      e9d0feffff     jmp sym..plt
;-- imp.strchr:
0x00001910      ff257ab52000   jmp qword [reloc.strchr]                ; [0x20ce90:8]=0x1916
0x00001916      6812000000     push 0x12
0x0000191b      e9c0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001920      ff2572b52000   jmp qword [reloc.__overflow]            ; [0x20ce98:8]=0x1926 ; "&\x19"
0x00001926      6813000000     push 0x13
0x0000192b      e9b0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001930      ff256ab52000   jmp qword [reloc.strrchr]               ; [0x20cea0:8]=0x1936 ; "6\x19"
0x00001936      6814000000     push 0x14
0x0000193b      e9a0feffff     jmp sym..plt
;-- imp.lseek:
0x00001940      ff2562b52000   jmp qword [reloc.lseek]                 ; [0x20cea8:8]=0x1946 ; "F\x19"
0x00001946      6815000000     push 0x15
0x0000194b      e990feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001950      ff255ab52000   jmp qword [reloc.__assert_fail]         ; [0x20ceb0:8]=0x1956 ; "V\x19"
0x00001956      6816000000     push 0x16
0x0000195b      e980feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001960      ff2552b52000   jmp qword [reloc.__strtoul_internal]    ; [0x20ceb8:8]=0x1966 ; "f\x19"
0x00001966      6817000000     push 0x17
0x0000196b      e970feffff     jmp sym..plt
;-- imp.memset:
0x00001970      ff254ab52000   jmp qword [0x0020cec0]                  ; [0x20cec0:8]=0x1976
0x00001976      6818000000     push 0x18
0x0000197b      e960feffff     jmp sym..plt
;-- imp.close:
0x00001980      ff2542b52000   jmp qword [reloc.close]                 ; [0x20cec8:8]=0x1986
0x00001986      6819000000     push 0x19
0x0000198b      e950feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001990      ff253ab52000   jmp qword [reloc.posix_fadvise]         ; [0x20ced0:8]=0x1996
0x00001996      681a000000     push 0x1a
0x0000199b      e940feffff     jmp sym..plt
;-- imp.memcmp:
0x000019a0      ff2532b52000   jmp qword [reloc.memcmp]                ; [0x20ced8:8]=0x19a6
0x000019a6      681b000000     push 0x1b
0x000019ab      e930feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000019b0      ff252ab52000   jmp qword [reloc.fputs_unlocked]        ; [0x20cee0:8]=0x19b6
0x000019b6      681c000000     push 0x1c
0x000019bb      e920feffff     jmp sym..plt
;-- imp.calloc:
0x000019c0      ff2522b52000   jmp qword [reloc.calloc]                ; [0x20cee8:8]=0x19c6
0x000019c6      681d000000     push 0x1d
0x000019cb      e910feffff     jmp sym..plt
;-- imp.__getdelim:
0x000019d0      ff251ab52000   jmp qword [reloc.__getdelim]            ; [0x20cef0:8]=0x19d6
0x000019d6      681e000000     push 0x1e
0x000019db      e900feffff     jmp sym..plt
;-- imp.strcmp:
0x000019e0      ff2512b52000   jmp qword [reloc.strcmp]                ; [0x20cef8:8]=0x19e6
0x000019e6      681f000000     push 0x1f
0x000019eb      e9f0fdffff     jmp sym..plt
;-- imp.__memcpy_chk:
0x000019f0      ff250ab52000   jmp qword [reloc.__memcpy_chk]          ; [0x20cf00:8]=0x19f6
0x000019f6      6820000000     push 0x20                               ; "@"
0x000019fb      e9e0fdffff     jmp sym..plt
;-- imp.feof:
0x00001a00      ff2502b52000   jmp qword [reloc.feof]                  ; [0x20cf08:8]=0x1a06
0x00001a06      6821000000     push 0x21                               ; '!'
0x00001a0b      e9d0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001a10      ff25fab42000   jmp qword [reloc.memcpy]                ; [0x20cf10:8]=0x1a16
0x00001a16      6822000000     push 0x22                               ; '"'
0x00001a1b      e9c0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001a20      ff25f2b42000   jmp qword [reloc.fileno]                ; [0x20cf18:8]=0x1a26 ; "&\x1a"
0x00001a26      6823000000     push 0x23                               ; '#'
0x00001a2b      e9b0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001a30      ff25eab42000   jmp qword [reloc.malloc]                ; [0x20cf20:8]=0x1a36 ; "6\x1a"
0x00001a36      6824000000     push 0x24                               ; '$'
0x00001a3b      e9a0fdffff     jmp sym..plt
;-- imp.fflush:
0x00001a40      ff25e2b42000   jmp qword [reloc.fflush]                ; [0x20cf28:8]=0x1a46 ; "F\x1a"
0x00001a46      6825000000     push 0x25                               ; '%'
0x00001a4b      e990fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001a50      ff25dab42000   jmp qword [reloc.nl_langinfo]           ; [0x20cf30:8]=0x1a56 ; "V\x1a"
0x00001a56      6826000000     push 0x26                               ; '&'
0x00001a5b      e980fdffff     jmp sym..plt
;-- imp.__freading:
0x00001a60      ff25d2b42000   jmp qword [reloc.__freading]            ; [0x20cf38:8]=0x1a66 ; "f\x1a"
0x00001a66      6827000000     push 0x27                               ; '''
0x00001a6b      e970fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001a70      ff25cab42000   jmp qword [reloc.fwrite_unlocked]       ; [0x20cf40:8]=0x1a76 ; "v\x1a"
0x00001a76      6828000000     push 0x28                               ; '('
0x00001a7b      e960fdffff     jmp sym..plt
;-- imp.realloc:
0x00001a80      ff25c2b42000   jmp qword [reloc.realloc]               ; [0x20cf48:8]=0x1a86
0x00001a86      6829000000     push 0x29                               ; ')'
0x00001a8b      e950fdffff     jmp sym..plt
;-- imp.fdopen:
0x00001a90      ff25bab42000   jmp qword [reloc.fdopen]                ; [0x20cf50:8]=0x1a96
0x00001a96      682a000000     push 0x2a                               ; '*'
0x00001a9b      e940fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001aa0      ff25b2b42000   jmp qword [reloc.setlocale]             ; [0x20cf58:8]=0x1aa6
0x00001aa6      682b000000     push 0x2b                               ; '+'
0x00001aab      e930fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001ab0      ff25aab42000   jmp qword [reloc.__printf_chk]          ; [0x20cf60:8]=0x1ab6
0x00001ab6      682c000000     push 0x2c                               ; ','
0x00001abb      e920fdffff     jmp sym..plt
;-- imp.setvbuf:
0x00001ac0      ff25a2b42000   jmp qword [reloc.setvbuf]               ; [0x20cf68:8]=0x1ac6
0x00001ac6      682d000000     push 0x2d                               ; '-'
0x00001acb      e910fdffff     jmp sym..plt
;-- imp.error:
0x00001ad0      ff259ab42000   jmp qword [reloc.error]                 ; [0x20cf70:8]=0x1ad6
0x00001ad6      682e000000     push 0x2e                               ; '.'
0x00001adb      e900fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001ae0      ff2592b42000   jmp qword [reloc.fseeko]                ; [0x20cf78:8]=0x1ae6
0x00001ae6      682f000000     push 0x2f                               ; '/'
0x00001aeb      e9f0fcffff     jmp sym..plt
;-- imp.fopen:
0x00001af0      ff258ab42000   jmp qword [reloc.fopen]                 ; [0x20cf80:8]=0x1af6
0x00001af6      6830000000     push 0x30                               ; '0'
0x00001afb      e9e0fcffff     jmp sym..plt
;-- imp.dcngettext:
0x00001b00      ff2582b42000   jmp qword [reloc.dcngettext]            ; [0x20cf88:8]=0x1b06
0x00001b06      6831000000     push 0x31                               ; '1'
0x00001b0b      e9d0fcffff     jmp sym..plt
;-- imp.strtoul:
0x00001b10      ff257ab42000   jmp qword [reloc.strtoul]               ; [0x20cf90:8]=0x1b16
0x00001b16      6832000000     push 0x32                               ; '2'
0x00001b1b      e9c0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001b20      ff2572b42000   jmp qword [reloc.__cxa_atexit]          ; [0x20cf98:8]=0x1b26 ; "&\x1b"
0x00001b26      6833000000     push 0x33                               ; '3'
0x00001b2b      e9b0fcffff     jmp sym..plt
;-- imp.exit:
0x00001b30      ff256ab42000   jmp qword [reloc.exit]                  ; [0x20cfa0:8]=0x1b36 ; "6\x1b"
0x00001b36      6834000000     push 0x34                               ; '4'
0x00001b3b      e9a0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001b40      ff2562b42000   jmp qword [reloc.fwrite]                ; [0x20cfa8:8]=0x1b46 ; "F\x1b"
0x00001b46      6835000000     push 0x35                               ; '5'
0x00001b4b      e990fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001b50      ff255ab42000   jmp qword [reloc.__fprintf_chk]         ; [0x20cfb0:8]=0x1b56 ; "V\x1b"
0x00001b56      6836000000     push 0x36                               ; '6'
0x00001b5b      e980fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001b60      ff2552b42000   jmp qword [reloc.mbsinit]               ; [0x20cfb8:8]=0x1b66 ; "f\x1b"
0x00001b66      6837000000     push 0x37                               ; '7'
0x00001b6b      e970fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001b70      ff254ab42000   jmp qword [reloc.iswprint]              ; [0x20cfc0:8]=0x1b76 ; "v\x1b"
0x00001b76      6838000000     push 0x38                               ; '8'
0x00001b7b      e960fcffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x00001b80      ff2542b42000   jmp qword [reloc.__ctype_tolower_loc]   ; [0x20cfc8:8]=0x1b86
0x00001b86      6839000000     push 0x39                               ; '9'
0x00001b8b      e950fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001b90      ff253ab42000   jmp qword [reloc.__ctype_b_loc]         ; [0x20cfd0:8]=0x1b96
0x00001b96      683a000000     push 0x3a                               ; ':'
0x00001b9b      e940fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001ba0      .qword 0x90660020b45225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001ba8      0000           add byte [rax], al
0x00001baa      0000           add byte [rax], al
0x00001bac      0000           add byte [rax], al
0x00001bae      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001bb0      4157           push r15                                ; [14] -r-x section size 30238 named .text
0x00001bb2      4156           push r14
0x00001bb4      4531f6         xor r14d, r14d
0x00001bb7      4155           push r13
0x00001bb9      4154           push r12
0x00001bbb      4189fc         mov r12d, edi
0x00001bbe      55             push rbp
0x00001bbf      53             push rbx
0x00001bc0      4889f3         mov rbx, rsi
0x00001bc3      4c8d2dd78800.  lea r13, [0x0000a4a1]
0x00001bca      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00001bcf      4881ec480100.  sub rsp, 0x148
0x00001bd6      488b3e         mov rdi, qword [rsi]
0x00001bd9      64488b042528.  mov rax, qword fs:[0x28]
0x00001be2      488984243801.  mov qword [rsp + 0x138], rax
0x00001bea      31c0           xor eax, eax
0x00001bec      e89f400000     call sym.set_program_name
0x00001bf1      488d35a98800.  lea rsi, [0x0000a4a1]
0x00001bf8      bf06000000     mov edi, 6
0x00001bfd      e89efeffff     call sym.imp.setlocale
0x00001c02      488d359a7600.  lea rsi, str.usr_local_share_locale     ; 0x92a3 ; "/usr/local/share/locale"
0x00001c09      488d3d6a7600.  lea rdi, [0x0000927a]                   ; "coreutils"
0x00001c10      e88bfcffff     call sym.imp.bindtextdomain
0x00001c15      488d3d5e7600.  lea rdi, [0x0000927a]                   ; "coreutils"
0x00001c1c      e85ffcffff     call sym.imp.textdomain
0x00001c21      488d3dd83e00.  lea rdi, sym.close_stdout               ; 0x5b00 ; "USH\x83\xec\bH\x8b=\x9bu "
0x00001c28      e893750000     call sym.atexit
0x00001c2d      488b3d74b420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00001c34      31c9           xor ecx, ecx
0x00001c36      ba01000000     mov edx, 1
0x00001c3b      31f6           xor esi, esi
0x00001c3d      e87efeffff     call sym.imp.setvbuf
0x00001c42      c644247800     mov byte [rsp + 0x78], 0
0x00001c47      660f1f840000.  nop word [rax + rax]
0x00001c50      488d0d69ad20.  lea rcx, obj.long_options               ; 0x20c9c0
0x00001c57      488d15b87600.  lea rdx, str.l:bctwz                    ; 0x9316 ; "l:bctwz"
0x00001c5e      4531c0         xor r8d, r8d
0x00001c61      4889de         mov rsi, rbx
0x00001c64      4489e7         mov edi, r12d
0x00001c67      e884fcffff     call sym.imp.getopt_long
0x00001c6c      83f8ff         cmp eax, 0xffffffff
0x00001c6f      0f8427020000   je 0x1e9c
0x00001c75      83f877         cmp eax, 0x77
0x00001c78      0f8452010000   je 0x1dd0
0x00001c7e      7e38           jle 0x1cb8
0x00001c80      3d81000000     cmp eax, 0x81
0x00001c85      0f84e5000000   je 0x1d70
0x00001c8b      7e6b           jle 0x1cf8
0x00001c8d      3d83000000     cmp eax, 0x83
0x00001c92      0f8418010000   je 0x1db0
0x00001c98      0f8cf2000000   jl 0x1d90
0x00001c9e      3d84000000     cmp eax, 0x84
0x00001ca3      7535           jne 0x1cda
0x00001ca5      c644247801     mov byte [rsp + 0x78], 1
0x00001caa      bd01000000     mov ebp, 1
0x00001caf      eb9f           jmp 0x1c50
0x00001cb1      0f1f80000000.  nop dword [rax]
0x00001cb8      83f862         cmp eax, 0x62
0x00001cbb      0f84ff000000   je 0x1dc0
0x00001cc1      7e55           jle 0x1d18
0x00001cc3      83f86c         cmp eax, 0x6c
0x00001cc6      0f8424010000   je 0x1df0
0x00001ccc      83f874         cmp eax, 0x74
0x00001ccf      0f8493000000   je 0x1d68
0x00001cd5      83f863         cmp eax, 0x63
0x00001cd8      740e           je 0x1ce8
0x00001cda      bf01000000     mov edi, 1
0x00001cdf      e89c170000     call sym.usage
0x00001ce4      0f1f4000       nop dword [rax]
0x00001ce8      41be01000000   mov r14d, 1
0x00001cee      e95dffffff     jmp 0x1c50
0x00001cf3      0f1f440000     nop dword [rax + rax]
0x00001cf8      83f87a         cmp eax, 0x7a
0x00001cfb      0f848f010000   je 0x1e90
0x00001d01      83c080         add eax, 0xffffff80
0x00001d04      75d4           jne 0x1cda
0x00001d06      c605f1b32000.  mov byte [obj.ignore_missing], 1        ; [0x20d0fe:1]=0
0x00001d0d      e93effffff     jmp 0x1c50
0x00001d12      660f1f440000   nop word [rax + rax]
0x00001d18      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001d1d      0f85d8110000   jne 0x2efb
0x00001d23      4883ec08       sub rsp, 8
0x00001d27      488b3d7ab320.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00001d2e      488b0debb220.  mov rcx, qword [obj.Version]            ; [0x20d020:8]=0x9eb0
0x00001d35      6a00           push 0
0x00001d37      4c8d0dbd7500.  lea r9, str.Samuel_Neves                ; 0x92fb ; "Samuel Neves"
0x00001d3e      4c8d05c37500.  lea r8, str.Padraig_Brady               ; 0x9308 ; "Padraig Brady"
0x00001d45      488d152a7500.  lea rdx, str.GNU_coreutils              ; 0x9276 ; "GNU coreutils"
0x00001d4c      488d35977400.  lea rsi, str.b2sum                      ; 0x91ea ; "b2sum"
0x00001d53      31c0           xor eax, eax
0x00001d55      e836610000     call sym.version_etc
0x00001d5a      31ff           xor edi, edi
0x00001d5c      e8cffdffff     call sym.imp.exit
0x00001d61      0f1f80000000.  nop dword [rax]
0x00001d68      31ed           xor ebp, ebp
0x00001d6a      e9e1feffff     jmp 0x1c50
0x00001d6f      90             nop
0x00001d70      c60589b32000.  mov byte [obj.status_only], 1           ; [0x20d100:1]=0
0x00001d77      c60581b32000.  mov byte [obj.warn], 0                  ; [0x20d0ff:1]=0
0x00001d7e      c60578b32000.  mov byte [obj.quiet], 0                 ; [0x20d0fd:1]=0
0x00001d85      e9c6feffff     jmp 0x1c50
0x00001d8a      660f1f440000   nop word [rax + rax]
0x00001d90      c60569b32000.  mov byte [obj.status_only], 0           ; [0x20d100:1]=0
0x00001d97      c60561b32000.  mov byte [obj.warn], 0                  ; [0x20d0ff:1]=0
0x00001d9e      c60558b32000.  mov byte [obj.quiet], 1                 ; [0x20d0fd:1]=0
0x00001da5      e9a6feffff     jmp 0x1c50
0x00001daa      660f1f440000   nop word [rax + rax]
0x00001db0      c60545b32000.  mov byte [obj.strict], 1                ; [0x20d0fc:1]=0
0x00001db7      e994feffff     jmp 0x1c50
0x00001dbc      0f1f4000       nop dword [rax]
0x00001dc0      bd01000000     mov ebp, 1
0x00001dc5      e986feffff     jmp 0x1c50
0x00001dca      660f1f440000   nop word [rax + rax]
0x00001dd0      c60529b32000.  mov byte [obj.status_only], 0           ; [0x20d100:1]=0
0x00001dd7      c60521b32000.  mov byte [obj.warn], 1                  ; [0x20d0ff:1]=0
0x00001dde      c60518b32000.  mov byte [obj.quiet], 0                 ; [0x20d0fd:1]=0
0x00001de5      e966feffff     jmp 0x1c50
0x00001dea      660f1f440000   nop word [rax + rax]
0x00001df0      488d35c47400.  lea rsi, str.invalid_length             ; 0x92bb ; "invalid length"
0x00001df7      31ff           xor edi, edi
0x00001df9      ba05000000     mov edx, 5
0x00001dfe      e8adfaffff     call sym.imp.dcgettext
0x00001e03      488b3db6b220.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20d0c0:8]=0
0x00001e0a      488d0d908600.  lea rcx, [0x0000a4a1]
0x00001e11      4531c9         xor r9d, r9d
0x00001e14      31f6           xor esi, esi
0x00001e16      4989c0         mov r8, rax
0x00001e19      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00001e20      e85b650000     call sym.xdectoumax
0x00001e25      a807           test al, 7
0x00001e27      488905c2b220.  mov qword [obj.b2_length], rax          ; [0x20d0f0:8]=0
0x00001e2e      4c8b2d8bb220.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20d0c0:8]=0
0x00001e35      0f8415feffff   je 0x1c50
0x00001e3b      4c89ef         mov rdi, r13
0x00001e3e      e85d5b0000     call sym.quote
0x00001e43      488d35807400.  lea rsi, str.invalid_length:__s         ; 0x92ca ; "invalid length: %s"
0x00001e4a      4889c3         mov rbx, rax
0x00001e4d      ba05000000     mov edx, 5
0x00001e52      31ff           xor edi, edi
0x00001e54      e857faffff     call sym.imp.dcgettext
0x00001e59      4889d9         mov rcx, rbx
0x00001e5c      4889c2         mov rdx, rax
0x00001e5f      31f6           xor esi, esi
0x00001e61      31ff           xor edi, edi
0x00001e63      31c0           xor eax, eax
0x00001e65      e866fcffff     call sym.imp.error
0x00001e6a      488d356c7400.  lea rsi, str.length_is_not_a_multiple_of_8 ; 0x92dd ; "length is not a multiple of 8"
0x00001e71      ba05000000     mov edx, 5
0x00001e76      31ff           xor edi, edi
0x00001e78      e833faffff     call sym.imp.dcgettext
0x00001e7d      31f6           xor esi, esi
0x00001e7f      4889c2         mov rdx, rax
0x00001e82      bf01000000     mov edi, 1
0x00001e87      31c0           xor eax, eax
0x00001e89      e842fcffff     call sym.imp.error
0x00001e8e      6690           nop
0x00001e90      c60579b12000.  mov byte [obj.delim], 0                 ; [0x20d010:1]=10 ; "\n"
0x00001e97      e9b4fdffff     jmp 0x1c50
0x00001e9c      488b054db220.  mov rax, qword [obj.b2_length]          ; [0x20d0f0:8]=0
0x00001ea3      48c70562b220.  mov qword [obj.min_digest_line_length], 3 ; [0x20d110:8]=0
0x00001eae      483d00020000   cmp rax, 0x200
0x00001eb4      0f8753100000   ja 0x2f0d
0x00001eba      4885c0         test rax, rax
0x00001ebd      7515           jne 0x1ed4
0x00001ebf      4584f6         test r14b, r14b
0x00001ec2      7510           jne 0x1ed4
0x00001ec4      48c70521b220.  mov qword [obj.b2_length], 0x200        ; [0x20d0f0:8]=0
0x00001ecf      b800020000     mov eax, 0x200
0x00001ed4      48c1e802       shr rax, 2
0x00001ed8      85ed           test ebp, ebp
0x00001eda      48890527b220.  mov qword [obj.digest_hex_bytes], rax   ; [0x20d108:8]=0
0x00001ee1      0f94c0         sete al
0x00001ee4      84442478       test byte [rsp + 0x78], al
0x00001ee8      0f85fc100000   jne 0x2fea
0x00001eee      803d1bb12000.  cmp byte [obj.delim], 0xa               ; [0x20d010:1]=10 ; "\n"
0x00001ef5      0f8468030000   je 0x2263
0x00001efb      4584f6         test r14b, r14b
0x00001efe      ba05000000     mov edx, 5
0x00001f03      488d35f67b00.  lea rsi, str.the___zero_option_is_not_supported_when_verifying_checksums ; 0x9b00 ; "the --zero option is not supported when verifying checksums"
0x00001f0a      0f8580030000   jne 0x2290
0x00001f10      803de7b12000.  cmp byte [obj.ignore_missing], 0        ; [0x20d0fe:1]=0
0x00001f17      0f85bc100000   jne 0x2fd9
0x00001f1d      803ddcb12000.  cmp byte [obj.status_only], 0           ; [0x20d100:1]=0
0x00001f24      0f859e100000   jne 0x2fc8
0x00001f2a      803dceb12000.  cmp byte [obj.warn], 0                  ; [0x20d0ff:1]=0
0x00001f31      0f84a3030000   je 0x22da
0x00001f37      4584f6         test r14b, r14b
0x00001f3a      ba05000000     mov edx, 5
0x00001f3f      488d35127d00.  lea rsi, str.the___warn_option_is_meaningful_only_when_verifying_checksums ; 0x9c58 ; "the --warn option is meaningful only when verifying checksums"
0x00001f46      0f8444030000   je 0x2290
0x00001f4c      83fdff         cmp ebp, 0xffffffff
0x00001f4f      7502           jne 0x1f53
0x00001f51      31ed           xor ebp, ebp
0x00001f53      4963c4         movsxd rax, r12d
0x00001f56      488d04c3       lea rax, [rbx + rax*8]
0x00001f5a      4889442460     mov qword [rsp + 0x60], rax
0x00001f5f      48630552b120.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20d0b8:4]=0
0x00001f66      4439e0         cmp eax, r12d
0x00001f69      7519           jne 0x1f84
0x00001f6b      488b742460     mov rsi, qword [rsp + 0x60]
0x00001f70      488d3df37f00.  lea rdi, [0x00009f6a]                   ; "-"
0x00001f77      4883c608       add rsi, 8
0x00001f7b      48897ef8       mov qword [rsi - 8], rdi
0x00001f7f      4889742460     mov qword [rsp + 0x60], rsi
0x00001f84      488d04c3       lea rax, [rbx + rax*8]
0x00001f88      4839442460     cmp qword [rsp + 0x60], rax
0x00001f8d      4889442418     mov qword [rsp + 0x18], rax
0x00001f92      0f86e20e0000   jbe 0x2e7a
0x00001f98      83fd01         cmp ebp, 1
0x00001f9b      c644247901     mov byte [rsp + 0x79], 1
0x00001fa0      19c0           sbb eax, eax
0x00001fa2      83e0f6         and eax, 0xfffffff6                     ; 4294967286
0x00001fa5      83c02a         add eax, 0x2a
0x00001fa8      8944247c       mov dword [rsp + 0x7c], eax
0x00001fac      8844247b       mov byte [rsp + 0x7b], al
0x00001fb0      488b442418     mov rax, qword [rsp + 0x18]
0x00001fb5      4584f6         test r14b, r14b
0x00001fb8      488b38         mov rdi, qword [rax]
0x00001fbb      48897c2428     mov qword [rsp + 0x28], rdi
0x00001fc0      0f841f060000   je 0x25e5
0x00001fc6      488d359d7f00.  lea rsi, [0x00009f6a]                   ; "-"
0x00001fcd      e80efaffff     call sym.imp.strcmp
0x00001fd2      85c0           test eax, eax
0x00001fd4      8944244c       mov dword [rsp + 0x4c], eax
0x00001fd8      0f8512070000   jne 0x26f0
0x00001fde      488d35397300.  lea rsi, str.standard_input             ; 0x931e ; "standard input"
0x00001fe5      ba05000000     mov edx, 5
0x00001fea      31ff           xor edi, edi
0x00001fec      c60525b12000.  mov byte [obj.have_read_stdin], 1       ; [0x20d118:1]=0
0x00001ff3      e8b8f8ffff     call sym.imp.dcgettext
0x00001ff8      4c8b2db1b020.  mov r13, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20d0b0:8]=0
0x00001fff      4889442428     mov qword [rsp + 0x28], rax
0x00002004      488d84249000.  lea rax, [rsp + 0x90]
0x0000200c      48c784248800.  mov qword [rsp + 0x88], 0
0x00002018      48c784249000.  mov qword [rsp + 0x90], 0
0x00002024      c644247a00     mov byte [rsp + 0x7a], 0
0x00002029      c644245000     mov byte [rsp + 0x50], 0
0x0000202e      41bc01000000   mov r12d, 1
0x00002034      4889442410     mov qword [rsp + 0x10], rax
0x00002039      488d84248800.  lea rax, [rsp + 0x88]
0x00002041      48c744247000.  mov qword [rsp + 0x70], 0
0x0000204a      48c744246800.  mov qword [rsp + 0x68], 0
0x00002053      48c744243000.  mov qword [rsp + 0x30], 0
0x0000205c      4889442408     mov qword [rsp + 8], rax
0x00002061      488d84249800.  lea rax, [rsp + 0x98]
0x00002069      4889442458     mov qword [rsp + 0x58], rax
0x0000206e      6690           nop
0x00002070      488b742410     mov rsi, qword [rsp + 0x10]
0x00002075      488b7c2408     mov rdi, qword [rsp + 8]
0x0000207a      4c89e9         mov rcx, r13
0x0000207d      ba0a000000     mov edx, 0xa
0x00002082      e849f9ffff     call sym.imp.__getdelim
0x00002087      4885c0         test rax, rax
0x0000208a      0f8e1d040000   jle 0x24ad
0x00002090      488bac248800.  mov rbp, qword [rsp + 0x88]
0x00002098      0fb64d00       movzx ecx, byte [rbp]
0x0000209c      80f923         cmp cl, 0x23
0x0000209f      0f846e010000   je 0x2213
0x000020a5      807c05ff0a     cmp byte [rbp + rax - 1], 0xa
0x000020aa      4989c7         mov r15, rax
0x000020ad      7516           jne 0x20c5
0x000020af      4983ef01       sub r15, 1
0x000020b3      42c6443d0000   mov byte [rbp + r15], 0
0x000020b9      488bac248800.  mov rbp, qword [rsp + 0x88]
0x000020c1      0fb64d00       movzx ecx, byte [rbp]
0x000020c5      80f920         cmp cl, 0x20                            ; "@"
0x000020c8      7407           je 0x20d1
0x000020ca      31d2           xor edx, edx
0x000020cc      80f909         cmp cl, 9
0x000020cf      751a           jne 0x20eb
0x000020d1      31d2           xor edx, edx
0x000020d3      0f1f440000     nop dword [rax + rax]
0x000020d8      4883c201       add rdx, 1
0x000020dc      0fb64c1500     movzx ecx, byte [rbp + rdx]
0x000020e1      80f920         cmp cl, 0x20                            ; "@"
0x000020e4      74f2           je 0x20d8
0x000020e6      80f909         cmp cl, 9
0x000020e9      74ed           je 0x20d8
0x000020eb      80f95c         cmp cl, 0x5c
0x000020ee      c644242000     mov byte [rsp + 0x20], 0
0x000020f3      7509           jne 0x20fe
0x000020f5      4883c201       add rdx, 1
0x000020f9      4488742420     mov byte [rsp + 0x20], r14b
0x000020fe      4c8d441500     lea r8, [rbp + rdx]
0x00002103      488d3de67000.  lea rdi, str.BLAKE2                     ; 0x91f0 ; "BLAKE2"
0x0000210a      b906000000     mov ecx, 6
0x0000210f      4c89c6         mov rsi, r8
0x00002112      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002114      0f97c0         seta al
0x00002117      1c00           sbb al, 0
0x00002119      84c0           test al, al
0x0000211b      0f85ff010000   jne 0x2320
0x00002121      4c8d4a06       lea r9, [rdx + 6]
0x00002125      4e8d5c0d00     lea r11, [rbp + r9]
0x0000212a      410fb61b       movzx ebx, byte [r11]
0x0000212e      84db           test bl, bl
0x00002130      7460           je 0x2192
0x00002132      80fb20         cmp bl, 0x20                            ; "@"
0x00002135      0f842a050000   je 0x2665
0x0000213b      80fb09         cmp bl, 9
0x0000213e      0f8421050000   je 0x2665
0x00002144      80fb2d         cmp bl, 0x2d
0x00002147      7449           je 0x2192
0x00002149      80fb28         cmp bl, 0x28
0x0000214c      0f845b050000   je 0x26ad
0x00002152      488d441507     lea rax, [rbp + rdx + 7]
0x00002157      eb2b           jmp 0x2184
0x00002159      0f1f80000000.  nop dword [rax]
0x00002160      80fb20         cmp bl, 0x20                            ; "@"
0x00002163      0f84fc040000   je 0x2665
0x00002169      80fb09         cmp bl, 9
0x0000216c      0f84f3040000   je 0x2665
0x00002172      80fb2d         cmp bl, 0x2d
0x00002175      741b           je 0x2192
0x00002177      4883c001       add rax, 1
0x0000217b      80fb28         cmp bl, 0x28
0x0000217e      0f8429050000   je 0x26ad
0x00002184      0fb618         movzx ebx, byte [rax]
0x00002187      4983c101       add r9, 1
0x0000218b      4989c3         mov r11, rax
0x0000218e      84db           test bl, bl
0x00002190      75ce           jne 0x2160
0x00002192      488d35e7a920.  lea rsi, obj.algorithm_out_string       ; 0x20cb80
0x00002199      31c9           xor ecx, ecx
0x0000219b      31d2           xor edx, edx
0x0000219d      41c60300       mov byte [r11], 0
0x000021a1      4c89c7         mov rdi, r8
0x000021a4      4c894c2438     mov qword [rsp + 0x38], r9
0x000021a9      e8b2350000     call sym.argmatch
0x000021ae      4885c0         test rax, rax
0x000021b1      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x000021b6      7848           js 0x2200
0x000021b8      4983c101       add r9, 1
0x000021bc      890536af2000   mov dword [obj.b2_algorithm], eax       ; [0x20d0f8:4]=0
0x000021c2      80fb2d         cmp bl, 0x2d
0x000021c5      0f8477050000   je 0x2742
0x000021cb      48c7051aaf20.  mov qword [obj.b2_length], 0x200        ; [0x20d0f0:8]=0
0x000021d6      b880000000     mov eax, 0x80
0x000021db      48890526af20.  mov qword [obj.digest_hex_bytes], rax   ; [0x20d108:8]=0
0x000021e2      420fb6440d00   movzx eax, byte [rbp + r9]
0x000021e8      3c20           cmp al, 0x20                            ; "@"
0x000021ea      750a           jne 0x21f6
0x000021ec      420fb6440d01   movzx eax, byte [rbp + r9 + 1]
0x000021f2      4983c101       add r9, 1
0x000021f6      3c28           cmp al, 0x28
0x000021f8      0f8460060000   je 0x285e
0x000021fe      6690           nop
0x00002200      488344243001   add qword [rsp + 0x30], 1
0x00002206      803df2ae2000.  cmp byte [obj.warn], 0                  ; [0x20d0ff:1]=0
0x0000220d      0f854d020000   jne 0x2460
0x00002213      41f6450030     test byte [r13], 0x30
0x00002218      0f858f020000   jne 0x24ad
0x0000221e      4983c401       add r12, 1
0x00002222      0f8548feffff   jne 0x2070
0x00002228      488b542428     mov rdx, qword [rsp + 0x28]
0x0000222d      be03000000     mov esi, 3
0x00002232      31ff           xor edi, edi
0x00002234      e897550000     call sym.quotearg_n_style_colon
0x00002239      488d35ed7000.  lea rsi, str.s:_too_many_checksum_lines ; 0x932d ; "%s: too many checksum lines"
0x00002240      4889c3         mov rbx, rax
0x00002243      ba05000000     mov edx, 5
0x00002248      31ff           xor edi, edi
0x0000224a      e861f6ffff     call sym.imp.dcgettext
0x0000224f      4889d9         mov rcx, rbx
0x00002252      4889c2         mov rdx, rax
0x00002255      31f6           xor esi, esi
0x00002257      bf01000000     mov edi, 1
0x0000225c      31c0           xor eax, eax
0x0000225e      e86df8ffff     call sym.imp.error
0x00002263      4584f6         test r14b, r14b
0x00002266      7413           je 0x227b
0x00002268      807c247800     cmp byte [rsp + 0x78], 0
0x0000226d      ba05000000     mov edx, 5
0x00002272      488d35c77800.  lea rsi, str.the___tag_option_is_meaningless_when_verifying_checksums ; 0x9b40 ; "the --tag option is meaningless when verifying checksums"
0x00002279      7515           jne 0x2290
0x0000227b      85ed           test ebp, ebp
0x0000227d      782b           js 0x22aa
0x0000227f      4584f6         test r14b, r14b
0x00002282      ba05000000     mov edx, 5
0x00002287      488d35f27800.  lea rsi, str.the___binary_and___text_options_are_meaningless_when_verifying_checksums ; 0x9b80 ; "the --binary and --text options are meaningless when verifying checksums"
0x0000228e      741a           je 0x22aa
0x00002290      31ff           xor edi, edi
0x00002292      e819f6ffff     call sym.imp.dcgettext
0x00002297      31f6           xor esi, esi
0x00002299      4889c2         mov rdx, rax
0x0000229c      31ff           xor edi, edi
0x0000229e      31c0           xor eax, eax
0x000022a0      e82bf8ffff     call sym.imp.error
0x000022a5      e930faffff     jmp 0x1cda
0x000022aa      803d4dae2000.  cmp byte [obj.ignore_missing], 0        ; [0x20d0fe:1]=0
0x000022b1      0f84fb0c0000   je 0x2fb2
0x000022b7      4584f6         test r14b, r14b
0x000022ba      0f84190d0000   je 0x2fd9
0x000022c0      803d39ae2000.  cmp byte [obj.status_only], 0           ; [0x20d100:1]=0
0x000022c7      0f8430060000   je 0x28fd
0x000022cd      803d2bae2000.  cmp byte [obj.warn], 0                  ; [0x20d0ff:1]=0
0x000022d4      0f8572fcffff   jne 0x1f4c
0x000022da      803d1cae2000.  cmp byte [obj.quiet], 1                 ; [0x20d0fd:1]=0
0x000022e1      7511           jne 0x22f4
0x000022e3      4584f6         test r14b, r14b
0x000022e6      ba05000000     mov edx, 5
0x000022eb      488d35a67900.  lea rsi, str.the___quiet_option_is_meaningful_only_when_verifying_checksums ; 0x9c98 ; "the --quiet option is meaningful only when verifying checksums"
0x000022f2      749c           je 0x2290
0x000022f4      803d01ae2000.  cmp byte [obj.strict], 0                ; [0x20d0fc:1]=0
0x000022fb      0f844bfcffff   je 0x1f4c
0x00002301      4584f6         test r14b, r14b
0x00002304      ba05000000     mov edx, 5
0x00002309      488d35c87900.  lea rsi, str.the___strict_option_is_meaningful_only_when_verifying_checksums ; 0x9cd8 ; "the --strict option is meaningful only when verifying checksums"
0x00002310      0f8536fcffff   jne 0x1f4c
0x00002316      e975ffffff     jmp 0x2290
0x0000231b      0f1f440000     nop dword [rax + rax]
0x00002320      4c89f9         mov rcx, r15
0x00002323      4889542440     mov qword [rsp + 0x40], rdx
0x00002328      4c89442438     mov qword [rsp + 0x38], r8
0x0000232d      4829d1         sub rcx, rdx
0x00002330      4180385c       cmp byte [r8], 0x5c
0x00002334      0f94c0         sete al
0x00002337      0fb6c0         movzx eax, al
0x0000233a      480305cfad20.  add rax, qword [obj.min_digest_line_length] ; [0x20d110:8]=0
0x00002341      4839c1         cmp rcx, rax
0x00002344      0f82b6feffff   jb 0x2200
0x0000234a      48c705b3ad20.  mov qword [obj.digest_hex_bytes], 0     ; [0x20d108:8]=0
0x00002355      e836f8ffff     call sym.imp.__ctype_b_loc
0x0000235a      4531c9         xor r9d, r9d
0x0000235d      488b38         mov rdi, qword [rax]
0x00002360      488b542440     mov rdx, qword [rsp + 0x40]
0x00002365      31c0           xor eax, eax
0x00002367      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000236c      eb08           jmp 0x2376
0x0000236e      6690           nop
0x00002370      4889f0         mov rax, rsi
0x00002373      4589f1         mov r9d, r14d
0x00002376      410fb60c00     movzx ecx, byte [r8 + rax]
0x0000237b      488d7001       lea rsi, [rax + 1]
0x0000237f      f6444f0110     test byte [rdi + rcx*2 + 1], 0x10
0x00002384      75ea           jne 0x2370
0x00002386      4584c9         test r9b, r9b
0x00002389      0f8471feffff   je 0x2200
0x0000238f      488d48fe       lea rcx, [rax - 2]
0x00002393      4889056ead20.  mov qword [obj.digest_hex_bytes], rax   ; [0x20d108:8]=0
0x0000239a      4883f97e       cmp rcx, 0x7e
0x0000239e      0f875cfeffff   ja 0x2200
0x000023a4      a801           test al, 1
0x000023a6      0f8554feffff   jne 0x2200
0x000023ac      488d1c02       lea rbx, [rdx + rax]
0x000023b0      488d0c850000.  lea rcx, [rax*4]
0x000023b8      488d541d00     lea rdx, [rbp + rbx]
0x000023bd      48890d2cad20.  mov qword [obj.b2_length], rcx          ; [0x20d0f0:8]=0
0x000023c4      0fb602         movzx eax, byte [rdx]
0x000023c7      3c20           cmp al, 0x20                            ; "@"
0x000023c9      7408           je 0x23d3
0x000023cb      3c09           cmp al, 9
0x000023cd      0f852dfeffff   jne 0x2200
0x000023d3      c60200         mov byte [rdx], 0
0x000023d6      4c89c7         mov rdi, r8
0x000023d9      4c89442438     mov qword [rsp + 0x38], r8
0x000023de      e8ad0d0000     call sym.hex_digits
0x000023e3      84c0           test al, al
0x000023e5      0f8415feffff   je 0x2200
0x000023eb      488d4301       lea rax, [rbx + 1]
0x000023ef      4c89f9         mov rcx, r15
0x000023f2      8b151cac2000   mov edx, dword [obj.bsd_reversed]       ; [0x20d014:4]=-1
0x000023f8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000023fd      4829c1         sub rcx, rax
0x00002400      4883e901       sub rcx, 1
0x00002404      7417           je 0x241d
0x00002406      0fb64c1d01     movzx ecx, byte [rbp + rbx + 1]
0x0000240b      80f920         cmp cl, 0x20                            ; "@"
0x0000240e      0f84730b0000   je 0x2f87
0x00002414      80f92a         cmp cl, 0x2a
0x00002417      0f846a0b0000   je 0x2f87
0x0000241d      85d2           test edx, edx
0x0000241f      0f84dbfdffff   je 0x2200
0x00002425      c705e5ab2000.  mov dword [obj.bsd_reversed], 1         ; [0x20d014:4]=-1
0x0000242f      4801c5         add rbp, rax
0x00002432      807c242000     cmp byte [rsp + 0x20], 0
0x00002437      0f8444070000   je 0x2b81
0x0000243d      4c89fe         mov rsi, r15
0x00002440      4889ef         mov rdi, rbp
0x00002443      4c89442420     mov qword [rsp + 0x20], r8
0x00002448      4829c6         sub rsi, rax
0x0000244b      e8c00c0000     call sym.filename_unescape
0x00002450      4885c0         test rax, rax
0x00002453      4c8b442420     mov r8, qword [rsp + 0x20]
0x00002458      0f95c0         setne al
0x0000245b      e919070000     jmp 0x2b79
0x00002460      488b542428     mov rdx, qword [rsp + 0x28]
0x00002465      31ff           xor edi, edi
0x00002467      be03000000     mov esi, 3
0x0000246c      e85f530000     call sym.quotearg_n_style_colon
0x00002471      488d35a07800.  lea rsi, str.s:__lu:_improperly_formatted__s_checksum_line ; 0x9d18 ; "%s: %lu: improperly formatted %s checksum line"
0x00002478      31ff           xor edi, edi
0x0000247a      ba05000000     mov edx, 5
0x0000247f      4889c3         mov rbx, rax
0x00002482      e829f4ffff     call sym.imp.dcgettext
0x00002487      4c8d0d626d00.  lea r9, str.BLAKE2                      ; 0x91f0 ; "BLAKE2"
0x0000248e      4889c2         mov rdx, rax
0x00002491      31f6           xor esi, esi
0x00002493      31ff           xor edi, edi
0x00002495      31c0           xor eax, eax
0x00002497      4d89e0         mov r8, r12
0x0000249a      4889d9         mov rcx, rbx
0x0000249d      e82ef6ffff     call sym.imp.error
0x000024a2      41f6450030     test byte [r13], 0x30
0x000024a7      0f8471fdffff   je 0x221e
0x000024ad      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x000024b5      e836f3ffff     call sym.imp.free
0x000024ba      418b5d00       mov ebx, dword [r13]
0x000024be      83e320         and ebx, 0x20                           ; "@"
0x000024c1      0f85f7030000   jne 0x28be
0x000024c7      837c244c00     cmp dword [rsp + 0x4c], 0
0x000024cc      0f853d040000   jne 0x290f
0x000024d2      807c245000     cmp byte [rsp + 0x50], 0
0x000024d7      0f8447040000   je 0x2924
0x000024dd      803d1cac2000.  cmp byte [obj.status_only], 0           ; [0x20d100:1]=0
0x000024e4      0f85c4030000   jne 0x28ae
0x000024ea      48837c243000   cmp qword [rsp + 0x30], 0
0x000024f0      7434           je 0x2526
0x000024f2      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000024f7      488d15827800.  lea rdx, str.WARNING:__lu_lines_are_improperly_formatted ; 0x9d80 ; "WARNING: %lu lines are improperly formatted"
0x000024fe      488d35ab7800.  lea rsi, str.WARNING:__lu_line_is_improperly_formatted ; 0x9db0 ; "WARNING: %lu line is improperly formatted"
0x00002505      31ff           xor edi, edi
0x00002507      41b805000000   mov r8d, 5
0x0000250d      4c89f9         mov rcx, r15
0x00002510      e8ebf5ffff     call sym.imp.dcngettext
0x00002515      4c89f9         mov rcx, r15
0x00002518      4889c2         mov rdx, rax
0x0000251b      31f6           xor esi, esi
0x0000251d      31ff           xor edi, edi
0x0000251f      31c0           xor eax, eax
0x00002521      e8aaf5ffff     call sym.imp.error
0x00002526      48837c246800   cmp qword [rsp + 0x68], 0
0x0000252c      7434           je 0x2562
0x0000252e      4c8b7c2468     mov r15, qword [rsp + 0x68]
0x00002533      488d15a67800.  lea rdx, str.WARNING:__lu_listed_files_could_not_be_read ; 0x9de0 ; "WARNING: %lu listed files could not be read"
0x0000253a      488d35cf7800.  lea rsi, str.WARNING:__lu_listed_file_could_not_be_read ; 0x9e10 ; "WARNING: %lu listed file could not be read"
0x00002541      31ff           xor edi, edi
0x00002543      41b805000000   mov r8d, 5
0x00002549      4c89f9         mov rcx, r15
0x0000254c      e8aff5ffff     call sym.imp.dcngettext
0x00002551      4c89f9         mov rcx, r15
0x00002554      4889c2         mov rdx, rax
0x00002557      31f6           xor esi, esi
0x00002559      31ff           xor edi, edi
0x0000255b      31c0           xor eax, eax
0x0000255d      e86ef5ffff     call sym.imp.error
0x00002562      48837c247000   cmp qword [rsp + 0x70], 0
0x00002568      7434           je 0x259e
0x0000256a      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x0000256f      488d15ca7800.  lea rdx, str.WARNING:__lu_computed_checksums_did_NOT_match ; 0x9e40 ; "WARNING: %lu computed checksums did NOT match"
0x00002576      488d35f37800.  lea rsi, str.WARNING:__lu_computed_checksum_did_NOT_match ; 0x9e70 ; "WARNING: %lu computed checksum did NOT match"
0x0000257d      31ff           xor edi, edi
0x0000257f      41b805000000   mov r8d, 5
0x00002585      4c89f9         mov rcx, r15
0x00002588      e873f5ffff     call sym.imp.dcngettext
0x0000258d      4c89f9         mov rcx, r15
0x00002590      4889c2         mov rdx, rax
0x00002593      31f6           xor esi, esi
0x00002595      31ff           xor edi, edi
0x00002597      31c0           xor eax, eax
0x00002599      e832f5ffff     call sym.imp.error
0x0000259e      803d59ab2000.  cmp byte [obj.ignore_missing], 0        ; [0x20d0fe:1]=0
0x000025a5      0f8403030000   je 0x28ae
0x000025ab      807c247a00     cmp byte [rsp + 0x7a], 0
0x000025b0      0f84c7060000   je 0x2c7d
0x000025b6      488b442468     mov rax, qword [rsp + 0x68]
0x000025bb      480b442470     or rax, qword [rsp + 0x70]
0x000025c0      7518           jne 0x25da
0x000025c2      0fb60533ab20.  movzx eax, byte [obj.strict]            ; [0x20d0fc:1]=0
0x000025c9      83f001         xor eax, 1
0x000025cc      48837c243000   cmp qword [rsp + 0x30], 0
0x000025d2      0f94c3         sete bl
0x000025d5      09d8           or eax, ebx
0x000025d7      0fb6d8         movzx ebx, al
0x000025da      89d8           mov eax, ebx
0x000025dc      83e001         and eax, 1
0x000025df      20442479       and byte [rsp + 0x79], al
0x000025e3      eb29           jmp 0x260e
0x000025e5      488d9c24a000.  lea rbx, [rsp + 0xa0]
0x000025ed      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000025f2      488d94249800.  lea rdx, [rsp + 0x98]
0x000025fa      4889de         mov rsi, rbx
0x000025fd      e8be0c0000     call sym.digest_file.isra.1
0x00002602      84c0           test al, al
0x00002604      0f85a5010000   jne 0x27af
0x0000260a      88442479       mov byte [rsp + 0x79], al
0x0000260e      488344241808   add qword [rsp + 0x18], 8
0x00002614      488b442418     mov rax, qword [rsp + 0x18]
0x00002619      4839442460     cmp qword [rsp + 0x60], rax
0x0000261e      0f878cf9ffff   ja 0x1fb0
0x00002624      803dedaa2000.  cmp byte [obj.have_read_stdin], 0       ; [0x20d118:1]=0
0x0000262b      0f854d040000   jne 0x2a7e
0x00002631      0fb6442479     movzx eax, byte [rsp + 0x79]
0x00002636      83f001         xor eax, 1
0x00002639      488bb4243801.  mov rsi, qword [rsp + 0x138]
0x00002641      644833342528.  xor rsi, qword fs:[0x28]
0x0000264a      0fb6c0         movzx eax, al
0x0000264d      0f852f090000   jne 0x2f82
0x00002653      4881c4480100.  add rsp, 0x148
0x0000265a      5b             pop rbx
0x0000265b      5d             pop rbp
0x0000265c      415c           pop r12
0x0000265e      415d           pop r13
0x00002660      415e           pop r14
0x00002662      415f           pop r15
0x00002664      c3             ret
0x00002665      488d3514a520.  lea rsi, obj.algorithm_out_string       ; 0x20cb80
0x0000266c      31c9           xor ecx, ecx
0x0000266e      31d2           xor edx, edx
0x00002670      41c60300       mov byte [r11], 0
0x00002674      4c89c7         mov rdi, r8
0x00002677      4c894c2440     mov qword [rsp + 0x40], r9
0x0000267c      4c895c2438     mov qword [rsp + 0x38], r11
0x00002681      e8da300000     call sym.argmatch
0x00002686      4885c0         test rax, rax
0x00002689      0f8871fbffff   js 0x2200
0x0000268f      80fb28         cmp bl, 0x28
0x00002692      890560aa2000   mov dword [obj.b2_algorithm], eax       ; [0x20d0f8:4]=0
0x00002698      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000269d      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000026a2      7443           je 0x26e7
0x000026a4      4983c101       add r9, 1
0x000026a8      e915fbffff     jmp 0x21c2
0x000026ad      488d35cca420.  lea rsi, obj.algorithm_out_string       ; 0x20cb80
0x000026b4      41c60300       mov byte [r11], 0
0x000026b8      31c9           xor ecx, ecx
0x000026ba      31d2           xor edx, edx
0x000026bc      4c89c7         mov rdi, r8
0x000026bf      4c894c2440     mov qword [rsp + 0x40], r9
0x000026c4      4c895c2438     mov qword [rsp + 0x38], r11
0x000026c9      e892300000     call sym.argmatch
0x000026ce      4885c0         test rax, rax
0x000026d1      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000026d6      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000026db      0f881ffbffff   js 0x2200
0x000026e1      890511aa2000   mov dword [obj.b2_algorithm], eax       ; [0x20d0f8:4]=0
0x000026e7      41c60328       mov byte [r11], 0x28                    ; '('
                                                                       ; [0x28:1]=56
0x000026eb      e9dbfaffff     jmp 0x21cb
0x000026f0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000026f5      488d35786c00.  lea rsi, [0x00009374]                   ; "r"
0x000026fc      e8ef340000     call sym.fopen_safer
0x00002701      4885c0         test rax, rax
0x00002704      4989c5         mov r13, rax
0x00002707      0f85f7f8ffff   jne 0x2004
0x0000270d      488b542428     mov rdx, qword [rsp + 0x28]
0x00002712      be03000000     mov esi, 3
0x00002717      31ff           xor edi, edi
0x00002719      e8b2500000     call sym.quotearg_n_style_colon
0x0000271e      4889c3         mov rbx, rax
0x00002721      e8eaf0ffff     call sym.imp.__errno_location
0x00002726      8b30           mov esi, dword [rax]
0x00002728      488d15dd7700.  lea rdx, [0x00009f0c]                   ; "%s"
0x0000272f      31c0           xor eax, eax
0x00002731      4889d9         mov rcx, rbx
0x00002734      31ff           xor edi, edi
0x00002736      e895f3ffff     call sym.imp.error
0x0000273b      31c0           xor eax, eax
0x0000273d      e99dfeffff     jmp 0x25df
0x00002742      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00002747      4a8d7c0d00     lea rdi, [rbp + r9]
0x0000274c      4531c0         xor r8d, r8d
0x0000274f      31d2           xor edx, edx
0x00002751      31f6           xor esi, esi
0x00002753      4c894c2438     mov qword [rsp + 0x38], r9
0x00002758      e8535c0000     call sym.xstrtoul
0x0000275d      85c0           test eax, eax
0x0000275f      0f859bfaffff   jne 0x2200
0x00002765      488b84249800.  mov rax, qword [rsp + 0x98]
0x0000276d      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x00002772      488d50ff       lea rdx, [rax - 1]
0x00002776      4881faff0100.  cmp rdx, 0x1ff
0x0000277d      0f877dfaffff   ja 0x2200
0x00002783      a807           test al, 7
0x00002785      0f8575faffff   jne 0x2200
0x0000278b      4889055ea920.  mov qword [obj.b2_length], rax          ; [0x20d0f0:8]=0
0x00002792      eb04           jmp 0x2798
0x00002794      4983c101       add r9, 1
0x00002798      420fbe540d00   movsx edx, byte [rbp + r9]
0x0000279e      83ea30         sub edx, 0x30
0x000027a1      83fa09         cmp edx, 9
0x000027a4      76ee           jbe 0x2794
0x000027a6      48c1e802       shr rax, 2
0x000027aa      e92cfaffff     jmp 0x21db
0x000027af      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000027b4      be5c000000     mov esi, 0x5c                           ; '\'
0x000027b9      e852f1ffff     call sym.imp.strchr
0x000027be      4885c0         test rax, rax
0x000027c1      0f8438030000   je 0x2aff
0x000027c7      803d42a82000.  cmp byte [obj.delim], 0xa               ; [0x20d010:1]=10 ; "\n"
0x000027ce      0f84eb020000   je 0x2abf
0x000027d4      807c247800     cmp byte [rsp + 0x78], 0
0x000027d9      0f8589010000   jne 0x2968
0x000027df      488b0522a920.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20d108:8]=0
0x000027e6      31ed           xor ebp, ebp
0x000027e8      48d1e8         shr rax, 1
0x000027eb      0f8437020000   je 0x2a28
0x000027f1      4531e4         xor r12d, r12d
0x000027f4      0f1f4000       nop dword [rax]
0x000027f8      420fb61423     movzx edx, byte [rbx + r12]
0x000027fd      488d35986b00.  lea rsi, str.02x                        ; 0x939c ; "%02x"
0x00002804      31c0           xor eax, eax
0x00002806      bf01000000     mov edi, 1
0x0000280b      4983c401       add r12, 1
0x0000280f      e89cf2ffff     call sym.imp.__printf_chk
0x00002814      488b05eda820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20d108:8]=0
0x0000281b      48d1e8         shr rax, 1
0x0000281e      4c39e0         cmp rax, r12
0x00002821      77d5           ja 0x27f8
0x00002823      807c247800     cmp byte [rsp + 0x78], 0
0x00002828      0f84fa010000   je 0x2a28
0x0000282e      488b3d73a820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00002835      0fb615d4a720.  movzx edx, byte [obj.delim]             ; [0x20d010:1]=10 ; "\n"
0x0000283c      488b4728       mov rax, qword [rdi + 0x28]
0x00002840      483b4730       cmp rax, qword [rdi + 0x30]
0x00002844      0f8352060000   jae 0x2e9c
0x0000284a      488d4801       lea rcx, [rax + 1]
0x0000284e      48894f28       mov qword [rdi + 0x28], rcx
0x00002852      8810           mov byte [rax], dl
0x00002854      0fb6442479     movzx eax, byte [rsp + 0x79]
0x00002859      e9acfdffff     jmp 0x260a
0x0000285e      4983c101       add r9, 1
0x00002862      4d89fa         mov r10, r15
0x00002865      4d29ca         sub r10, r9
0x00002868      0f8492f9ffff   je 0x2200
0x0000286e      4d89d3         mov r11, r10
0x00002871      4c01cd         add rbp, r9
0x00002874      4983eb01       sub r11, 1
0x00002878      741f           je 0x2899
0x0000287a      42807c15ff29   cmp byte [rbp + r10 - 1], 0x29
0x00002880      7511           jne 0x2893
0x00002882      e995020000     jmp 0x2b1c
0x00002887      42807c1d0029   cmp byte [rbp + r11], 0x29
0x0000288d      0f8489020000   je 0x2b1c
0x00002893      4983eb01       sub r11, 1
0x00002897      75ee           jne 0x2887
0x00002899      807d0029       cmp byte [rbp], 0x29
0x0000289d      0f855df9ffff   jne 0x2200
0x000028a3      4989ea         mov r10, rbp
0x000028a6      4531db         xor r11d, r11d
0x000028a9      e973020000     jmp 0x2b21
0x000028ae      807c247a00     cmp byte [rsp + 0x7a], 0
0x000028b3      0f85fdfcffff   jne 0x25b6
0x000028b9      e91cfdffff     jmp 0x25da
0x000028be      488b542428     mov rdx, qword [rsp + 0x28]
0x000028c3      be03000000     mov esi, 3
0x000028c8      31ff           xor edi, edi
0x000028ca      e8014f0000     call sym.quotearg_n_style_colon
0x000028cf      488d35916a00.  lea rsi, str.s:_read_error              ; 0x9367 ; "%s: read error"
0x000028d6      4889c3         mov rbx, rax
0x000028d9      ba05000000     mov edx, 5
0x000028de      31ff           xor edi, edi
0x000028e0      e8cbefffff     call sym.imp.dcgettext
0x000028e5      4889d9         mov rcx, rbx
0x000028e8      4889c2         mov rdx, rax
0x000028eb      31f6           xor esi, esi
0x000028ed      31c0           xor eax, eax
0x000028ef      31ff           xor edi, edi
0x000028f1      e8daf1ffff     call sym.imp.error
0x000028f6      31c0           xor eax, eax
0x000028f8      e9e2fcffff     jmp 0x25df
0x000028fd      803dfba72000.  cmp byte [obj.warn], 0                  ; [0x20d0ff:1]=0
0x00002904      0f8542f6ffff   jne 0x1f4c
0x0000290a      e9e5f9ffff     jmp 0x22f4
0x0000290f      4c89ef         mov rdi, r13
0x00002912      e8d9620000     call sym.rpl_fclose
0x00002917      85c0           test eax, eax
0x00002919      0f84b3fbffff   je 0x24d2
0x0000291f      e9e9fdffff     jmp 0x270d
0x00002924      488b542428     mov rdx, qword [rsp + 0x28]
0x00002929      31ff           xor edi, edi
0x0000292b      be03000000     mov esi, 3
0x00002930      e89b4e0000     call sym.quotearg_n_style_colon
0x00002935      488d350c7400.  lea rsi, str.s:_no_properly_formatted__s_checksum_lines_found ; 0x9d48 ; "%s: no properly formatted %s checksum lines found"
0x0000293c      31ff           xor edi, edi
0x0000293e      ba05000000     mov edx, 5
0x00002943      4889c5         mov rbp, rax
0x00002946      e865efffff     call sym.imp.dcgettext
0x0000294b      4c8d059e6800.  lea r8, str.BLAKE2                      ; 0x91f0 ; "BLAKE2"
0x00002952      4889c2         mov rdx, rax
0x00002955      4889e9         mov rcx, rbp
0x00002958      31f6           xor esi, esi
0x0000295a      31ff           xor edi, edi
0x0000295c      31c0           xor eax, eax
0x0000295e      e86df1ffff     call sym.imp.error
0x00002963      e972fcffff     jmp 0x25da
0x00002968      4531e4         xor r12d, r12d
0x0000296b      31ed           xor ebp, ebp
0x0000296d      8b0585a72000   mov eax, dword [obj.b2_algorithm]       ; [0x20d0f8:4]=0
0x00002973      488d3506a220.  lea rsi, obj.algorithm_out_string       ; 0x20cb80
0x0000297a      488b3cc6       mov rdi, qword [rsi + rax*8]
0x0000297e      488b3523a720.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00002985      e826f0ffff     call sym.imp.fputs_unlocked
0x0000298a      488b155fa720.  mov rdx, qword [obj.b2_length]          ; [0x20d0f0:8]=0
0x00002991      4881faff0100.  cmp rdx, 0x1ff
0x00002998      0f86e6040000   jbe 0x2e84
0x0000299e      488b0d03a720.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x000029a5      488d3de86900.  lea rdi, [0x00009394]                   ; " ("
0x000029ac      ba02000000     mov edx, 2
0x000029b1      be01000000     mov esi, 1
0x000029b6      e8b5f0ffff     call sym.imp.fwrite_unlocked
0x000029bb      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000029c0      89ee           mov esi, ebp
0x000029c2      e829080000     call sym.print_filename
0x000029c7      488b0ddaa620.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x000029ce      488d3dc26900.  lea rdi, str.                           ; 0x9397 ; ") = "
0x000029d5      ba04000000     mov edx, 4
0x000029da      be01000000     mov esi, 1
0x000029df      e88cf0ffff     call sym.imp.fwrite_unlocked
0x000029e4      807c247800     cmp byte [rsp + 0x78], 0
0x000029e9      0f85ee020000   jne 0x2cdd
0x000029ef      4584e4         test r12b, r12b
0x000029f2      0f84e5020000   je 0x2cdd
0x000029f8      488b3da9a620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x000029ff      488b4728       mov rax, qword [rdi + 0x28]
0x00002a03      483b4730       cmp rax, qword [rdi + 0x30]
0x00002a07      0f83c6020000   jae 0x2cd3
0x00002a0d      488d5001       lea rdx, [rax + 1]
0x00002a11      48895728       mov qword [rdi + 0x28], rdx
0x00002a15      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002a18      488b05e9a620.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20d108:8]=0
0x00002a1f      48d1e8         shr rax, 1
0x00002a22      0f85c9fdffff   jne 0x27f1
0x00002a28      488b3d79a620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00002a2f      488b4728       mov rax, qword [rdi + 0x28]
0x00002a33      48394730       cmp qword [rdi + 0x30], rax
0x00002a37      0f8696040000   jbe 0x2ed3
0x00002a3d      488d5001       lea rdx, [rax + 1]
0x00002a41      48895728       mov qword [rdi + 0x28], rdx
0x00002a45      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00002a48      488b3d59a620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00002a4f      488b4728       mov rax, qword [rdi + 0x28]
0x00002a53      483b4730       cmp rax, qword [rdi + 0x30]
0x00002a57      0f8368040000   jae 0x2ec5
0x00002a5d      0fb674247b     movzx esi, byte [rsp + 0x7b]
0x00002a62      488d5001       lea rdx, [rax + 1]
0x00002a66      48895728       mov qword [rdi + 0x28], rdx
0x00002a6a      408830         mov byte [rax], sil
0x00002a6d      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002a72      89ee           mov esi, ebp
0x00002a74      e877070000     call sym.print_filename
0x00002a79      e9b0fdffff     jmp 0x282e
0x00002a7e      488b3d2ba620.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20d0b0:8]=0
0x00002a85      e866610000     call sym.rpl_fclose
0x00002a8a      83c001         add eax, 1
0x00002a8d      0f859efbffff   jne 0x2631
0x00002a93      488d35846800.  lea rsi, str.standard_input             ; 0x931e ; "standard input"
0x00002a9a      ba05000000     mov edx, 5
0x00002a9f      31ff           xor edi, edi
0x00002aa1      e80aeeffff     call sym.imp.dcgettext
0x00002aa6      4889c3         mov rbx, rax
0x00002aa9      e862edffff     call sym.imp.__errno_location
0x00002aae      8b30           mov esi, dword [rax]
0x00002ab0      4889da         mov rdx, rbx
0x00002ab3      bf01000000     mov edi, 1
0x00002ab8      31c0           xor eax, eax
0x00002aba      e811f0ffff     call sym.imp.error
0x00002abf      807c247800     cmp byte [rsp + 0x78], 0
0x00002ac4      bd01000000     mov ebp, 1
0x00002ac9      0f8429ffffff   je 0x29f8
0x00002acf      488b3dd2a520.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00002ad6      488b4728       mov rax, qword [rdi + 0x28]
0x00002ada      483b4730       cmp rax, qword [rdi + 0x30]
0x00002ade      0f830e020000   jae 0x2cf2
0x00002ae4      488d5001       lea rdx, [rax + 1]
0x00002ae8      440fb6642478   movzx r12d, byte [rsp + 0x78]
0x00002aee      bd01000000     mov ebp, 1
0x00002af3      48895728       mov qword [rdi + 0x28], rdx
0x00002af7      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002afa      e96efeffff     jmp 0x296d
0x00002aff      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002b04      be0a000000     mov esi, 0xa
0x00002b09      e802eeffff     call sym.imp.strchr
0x00002b0e      4885c0         test rax, rax
0x00002b11      0f85b0fcffff   jne 0x27c7
0x00002b17      e9b8fcffff     jmp 0x27d4
0x00002b1c      4e8d541d00     lea r10, [rbp + r11]
0x00002b21      807c242000     cmp byte [rsp + 0x20], 0
0x00002b26      0f858e010000   jne 0x2cba
0x00002b2c      4983c301       add r11, 1
0x00002b30      41c60200       mov byte [r10], 0
0x00002b34      eb04           jmp 0x2b3a
0x00002b36      4983c301       add r11, 1
0x00002b3a      420fb6441d00   movzx eax, byte [rbp + r11]
0x00002b40      3c20           cmp al, 0x20                            ; "@"
0x00002b42      74f2           je 0x2b36
0x00002b44      3c09           cmp al, 9
0x00002b46      74ee           je 0x2b36
0x00002b48      3c3d           cmp al, 0x3d
0x00002b4a      0f85b0f6ffff   jne 0x2200
0x00002b50      4a8d541d01     lea rdx, [rbp + r11 + 1]
0x00002b55      0fb602         movzx eax, byte [rdx]
0x00002b58      4989d0         mov r8, rdx
0x00002b5b      488d5201       lea rdx, [rdx + 1]
0x00002b5f      3c20           cmp al, 0x20                            ; "@"
0x00002b61      74f2           je 0x2b55
0x00002b63      3c09           cmp al, 9
0x00002b65      74ee           je 0x2b55
0x00002b67      4c89c7         mov rdi, r8
0x00002b6a      4c89442420     mov qword [rsp + 0x20], r8
0x00002b6f      e81c060000     call sym.hex_digits
0x00002b74      4c8b442420     mov r8, qword [rsp + 0x20]
0x00002b79      84c0           test al, al
0x00002b7b      0f847ff6ffff   je 0x2200
0x00002b81      8b44244c       mov eax, dword [rsp + 0x4c]
0x00002b85      85c0           test eax, eax
0x00002b87      751e           jne 0x2ba7
0x00002b89      488d3dda7300.  lea rdi, [0x00009f6a]                   ; "-"
0x00002b90      b902000000     mov ecx, 2
0x00002b95      4889ee         mov rsi, rbp
0x00002b98      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002b9a      0f97c0         seta al
0x00002b9d      1c00           sbb al, 0
0x00002b9f      84c0           test al, al
0x00002ba1      0f8459f6ffff   je 0x2200
0x00002ba7      803d52a52000.  cmp byte [obj.status_only], 0           ; [0x20d100:1]=0
0x00002bae      c74424200000.  mov dword [rsp + 0x20], 0
0x00002bb6      7524           jne 0x2bdc
0x00002bb8      be0a000000     mov esi, 0xa
0x00002bbd      4889ef         mov rdi, rbp
0x00002bc0      4c89442438     mov qword [rsp + 0x38], r8
0x00002bc5      e846edffff     call sym.imp.strchr
0x00002bca      4885c0         test rax, rax
0x00002bcd      4c8b442438     mov r8, qword [rsp + 0x38]
0x00002bd2      0f95c0         setne al
0x00002bd5      0fb6c0         movzx eax, al
0x00002bd8      89442420       mov dword [rsp + 0x20], eax
0x00002bdc      488d9c24f000.  lea rbx, [rsp + 0xf0]
0x00002be4      488b542458     mov rdx, qword [rsp + 0x58]
0x00002be9      4889ef         mov rdi, rbp
0x00002bec      4c89442438     mov qword [rsp + 0x38], r8
0x00002bf1      4889de         mov rsi, rbx
0x00002bf4      e8c7060000     call sym.digest_file.isra.1
0x00002bf9      84c0           test al, al
0x00002bfb      89c7           mov edi, eax
0x00002bfd      4c8b442438     mov r8, qword [rsp + 0x38]
0x00002c02      0f8508010000   jne 0x2d10
0x00002c08      488344246801   add qword [rsp + 0x68], 1
0x00002c0e      803deba42000.  cmp byte [obj.status_only], 0           ; [0x20d100:1]=0
0x00002c15      755c           jne 0x2c73
0x00002c17      837c242000     cmp dword [rsp + 0x20], 0
0x00002c1c      7420           je 0x2c3e
0x00002c1e      488b3d83a420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00002c25      488b4728       mov rax, qword [rdi + 0x28]
0x00002c29      483b4730       cmp rax, qword [rdi + 0x30]
0x00002c2d      0f8383020000   jae 0x2eb6
0x00002c33      488d5001       lea rdx, [rax + 1]
0x00002c37      48895728       mov qword [rdi + 0x28], rdx
0x00002c3b      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002c3e      8b742420       mov esi, dword [rsp + 0x20]
0x00002c42      4889ef         mov rdi, rbp
0x00002c45      e8a6050000     call sym.print_filename
0x00002c4a      488d35f86600.  lea rsi, str.FAILED_open_or_read        ; 0x9349 ; "FAILED open or read"
0x00002c51      ba05000000     mov edx, 5
0x00002c56      31ff           xor edi, edi
0x00002c58      e853ecffff     call sym.imp.dcgettext
0x00002c5d      488d354d7800.  lea rsi, [0x0000a4b1]                   ; ": %s\n"
0x00002c64      4889c2         mov rdx, rax
0x00002c67      bf01000000     mov edi, 1
0x00002c6c      31c0           xor eax, eax
0x00002c6e      e83deeffff     call sym.imp.__printf_chk
0x00002c73      4488742450     mov byte [rsp + 0x50], r14b
0x00002c78      e996f5ffff     jmp 0x2213
0x00002c7d      488b542428     mov rdx, qword [rsp + 0x28]
0x00002c82      31ff           xor edi, edi
0x00002c84      be03000000     mov esi, 3
0x00002c89      e8424b0000     call sym.quotearg_n_style_colon
0x00002c8e      488d35e16600.  lea rsi, str.s:_no_file_was_verified    ; 0x9376 ; "%s: no file was verified"
0x00002c95      4889c5         mov rbp, rax
0x00002c98      31ff           xor edi, edi
0x00002c9a      ba05000000     mov edx, 5
0x00002c9f      e80cecffff     call sym.imp.dcgettext
0x00002ca4      4889e9         mov rcx, rbp
0x00002ca7      4889c2         mov rdx, rax
0x00002caa      31f6           xor esi, esi
0x00002cac      31ff           xor edi, edi
0x00002cae      31c0           xor eax, eax
0x00002cb0      e81beeffff     call sym.imp.error
0x00002cb5      e920f9ffff     jmp 0x25da
0x00002cba      4c89de         mov rsi, r11
0x00002cbd      4889ef         mov rdi, rbp
0x00002cc0      e84b040000     call sym.filename_unescape
0x00002cc5      4885c0         test rax, rax
0x00002cc8      0f855efeffff   jne 0x2b2c
0x00002cce      e92df5ffff     jmp 0x2200
0x00002cd3      be5c000000     mov esi, 0x5c                           ; '\'
0x00002cd8      e843ecffff     call sym.imp.__overflow
0x00002cdd      488b0524a420.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20d108:8]=0
0x00002ce4      48d1e8         shr rax, 1
0x00002ce7      0f8504fbffff   jne 0x27f1
0x00002ced      e931fbffff     jmp 0x2823
0x00002cf2      be5c000000     mov esi, 0x5c                           ; '\'
0x00002cf7      bd01000000     mov ebp, 1
0x00002cfc      e81fecffff     call sym.imp.__overflow
0x00002d01      440fb6642478   movzx r12d, byte [rsp + 0x78]
0x00002d07      e961fcffff     jmp 0x296d
0x00002d0c      0f1f4000       nop dword [rax]
0x00002d10      803de7a32000.  cmp byte [obj.ignore_missing], 0        ; [0x20d0fe:1]=0
0x00002d17      740e           je 0x2d27
0x00002d19      80bc24980000.  cmp byte [rsp + 0x98], 0
0x00002d21      0f854cffffff   jne 0x2c73
0x00002d27      488b15daa320.  mov rdx, qword [obj.digest_hex_bytes]   ; [0x20d108:8]=0
0x00002d2e      4c89442450     mov qword [rsp + 0x50], r8
0x00002d33      48d1ea         shr rdx, 1
0x00002d36      0f8472010000   je 0x2eae
0x00002d3c      4889542440     mov qword [rsp + 0x40], rdx
0x00002d41      40887c2438     mov byte [rsp + 0x38], dil
0x00002d46      4531ff         xor r15d, r15d
0x00002d49      e832eeffff     call sym.imp.__ctype_tolower_loc
0x00002d4e      0fb67c2438     movzx edi, byte [rsp + 0x38]
0x00002d53      4c8b08         mov r9, qword [rax]
0x00002d56      488b542440     mov rdx, qword [rsp + 0x40]
0x00002d5b      4c8b442450     mov r8, qword [rsp + 0x50]
0x00002d60      eb23           jmp 0x2d85
0x00002d62      660f1f440000   nop word [rax + rax]
0x00002d68      430fb64c7801   movzx ecx, byte [r8 + r15*2 + 1]
0x00002d6e      83e00f         and eax, 0xf
0x00002d71      410fbe0402     movsx eax, byte [r10 + rax]
0x00002d76      41390489       cmp dword [r9 + rcx*4], eax
0x00002d7a      752d           jne 0x2da9
0x00002d7c      4983c701       add r15, 1
0x00002d80      4c39fa         cmp rdx, r15
0x00002d83      745e           je 0x2de3
0x00002d85      420fb6043b     movzx eax, byte [rbx + r15]
0x00002d8a      430fb63478     movzx esi, byte [r8 + r15*2]
0x00002d8f      4c8d150a7100.  lea r10, obj.bin2hex.7139               ; 0x9ea0 ; "0123456789abcdef8.31"
0x00002d96      89c1           mov ecx, eax
0x00002d98      c0e904         shr cl, 4
0x00002d9b      83e10f         and ecx, 0xf
0x00002d9e      410fbe0c0a     movsx ecx, byte [r10 + rcx]
0x00002da3      41390cb1       cmp dword [r9 + rsi*4], ecx
0x00002da7      74bf           je 0x2d68
0x00002da9      4c39fa         cmp rdx, r15
0x00002dac      7435           je 0x2de3
0x00002dae      488344247001   add qword [rsp + 0x70], 1
0x00002db4      803d45a32000.  cmp byte [obj.status_only], 0           ; [0x20d100:1]=0
0x00002dbb      0f85b2feffff   jne 0x2c73
0x00002dc1      837c242000     cmp dword [rsp + 0x20], 0
0x00002dc6      7554           jne 0x2e1c
0x00002dc8      31f6           xor esi, esi
0x00002dca      4889ef         mov rdi, rbp
0x00002dcd      e81e040000     call sym.print_filename
0x00002dd2      ba05000000     mov edx, 5
0x00002dd7      488d357f6500.  lea rsi, str.FAILED                     ; 0x935d ; "FAILED"
0x00002dde      e973feffff     jmp 0x2c56
0x00002de3      4989d7         mov r15, rdx
0x00002de6      0fb60513a320.  movzx eax, byte [obj.status_only]       ; [0x20d100:1]=0
0x00002ded      84c0           test al, al
0x00002def      8844247a       mov byte [rsp + 0x7a], al
0x00002df3      0f857afeffff   jne 0x2c73
0x00002df9      0fb605fda220.  movzx eax, byte [obj.quiet]             ; [0x20d0fd:1]=0
0x00002e00      84c0           test al, al
0x00002e02      8844247a       mov byte [rsp + 0x7a], al
0x00002e06      0f8567feffff   jne 0x2c73
0x00002e0c      837c242000     cmp dword [rsp + 0x20], 0
0x00002e11      40887c247a     mov byte [rsp + 0x7a], dil
0x00002e16      0f8487010000   je 0x2fa3
0x00002e1c      488b3d85a220.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00002e23      488b4728       mov rax, qword [rdi + 0x28]
0x00002e27      483b4730       cmp rax, qword [rdi + 0x30]
0x00002e2b      0f83b1000000   jae 0x2ee2
0x00002e31      488d4801       lea rcx, [rax + 1]
0x00002e35      48894f28       mov qword [rdi + 0x28], rcx
0x00002e39      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002e3c      be01000000     mov esi, 1
0x00002e41      4889ef         mov rdi, rbp
0x00002e44      4889542420     mov qword [rsp + 0x20], rdx
0x00002e49      e8a2030000     call sym.print_filename
0x00002e4e      488b542420     mov rdx, qword [rsp + 0x20]
0x00002e53      4c39fa         cmp rdx, r15
0x00002e56      0f8576ffffff   jne 0x2dd2
0x00002e5c      803d9aa22000.  cmp byte [obj.quiet], 0                 ; [0x20d0fd:1]=0
0x00002e63      0f850afeffff   jne 0x2c73
0x00002e69      ba05000000     mov edx, 5
0x00002e6e      488d35ef6400.  lea rsi, [0x00009364]                   ; "OK"
0x00002e75      e9dcfdffff     jmp 0x2c56
0x00002e7a      c644247901     mov byte [rsp + 0x79], 1
0x00002e7f      e9a0f7ffff     jmp 0x2624
0x00002e84      488d35046500.  lea rsi, str.lu                         ; 0x938f ; "-%lu"
0x00002e8b      bf01000000     mov edi, 1
0x00002e90      31c0           xor eax, eax
0x00002e92      e819ecffff     call sym.imp.__printf_chk
0x00002e97      e902fbffff     jmp 0x299e
0x00002e9c      0fb6f2         movzx esi, dl
0x00002e9f      e87ceaffff     call sym.imp.__overflow
0x00002ea4      0fb6442479     movzx eax, byte [rsp + 0x79]
0x00002ea9      e95cf7ffff     jmp 0x260a
0x00002eae      4531ff         xor r15d, r15d
0x00002eb1      e930ffffff     jmp 0x2de6
0x00002eb6      be5c000000     mov esi, 0x5c                           ; '\'
0x00002ebb      e860eaffff     call sym.imp.__overflow
0x00002ec0      e979fdffff     jmp 0x2c3e
0x00002ec5      8b74247c       mov esi, dword [rsp + 0x7c]
0x00002ec9      e852eaffff     call sym.imp.__overflow
0x00002ece      e99afbffff     jmp 0x2a6d
0x00002ed3      be20000000     mov esi, 0x20                           ; "@"
0x00002ed8      e843eaffff     call sym.imp.__overflow
0x00002edd      e966fbffff     jmp 0x2a48
0x00002ee2      be5c000000     mov esi, 0x5c                           ; '\'
0x00002ee7      4889542420     mov qword [rsp + 0x20], rdx
0x00002eec      e82feaffff     call sym.imp.__overflow
0x00002ef1      488b542420     mov rdx, qword [rsp + 0x20]
0x00002ef6      e941ffffff     jmp 0x2e3c
0x00002efb      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00002f00      0f85d4edffff   jne 0x1cda
0x00002f06      31ff           xor edi, edi
0x00002f08      e873050000     call sym.usage
0x00002f0d      4c89ef         mov rdi, r13
0x00002f10      e88b4a0000     call sym.quote
0x00002f15      488d35ae6300.  lea rsi, str.invalid_length:__s         ; 0x92ca ; "invalid length: %s"
0x00002f1c      4889c3         mov rbx, rax
0x00002f1f      ba05000000     mov edx, 5
0x00002f24      31ff           xor edi, edi
0x00002f26      e885e9ffff     call sym.imp.dcgettext
0x00002f2b      4889d9         mov rcx, rbx
0x00002f2e      4889c2         mov rdx, rax
0x00002f31      31f6           xor esi, esi
0x00002f33      31ff           xor edi, edi
0x00002f35      31c0           xor eax, eax
0x00002f37      e894ebffff     call sym.imp.error
0x00002f3c      8b15b6a12000   mov edx, dword [obj.b2_algorithm]       ; [0x20d0f8:4]=0
0x00002f42      488d05479c20.  lea rax, obj.algorithm_in_string        ; 0x20cb90
0x00002f49      488b3cd0       mov rdi, qword [rax + rdx*8]
0x00002f4d      e84e4a0000     call sym.quote
0x00002f52      488d354f6b00.  lea rsi, str.maximum_digest_length_for__s_is__lu_bits ; 0x9aa8 ; "maximum digest length for %s is %lu bits"
0x00002f59      4889c3         mov rbx, rax
0x00002f5c      ba05000000     mov edx, 5
0x00002f61      31ff           xor edi, edi
0x00002f63      e848e9ffff     call sym.imp.dcgettext
0x00002f68      41b800020000   mov r8d, 0x200
0x00002f6e      4889c2         mov rdx, rax
0x00002f71      4889d9         mov rcx, rbx
0x00002f74      31f6           xor esi, esi
0x00002f76      bf01000000     mov edi, 1
0x00002f7b      31c0           xor eax, eax
0x00002f7d      e84eebffff     call sym.imp.error
0x00002f82      e859e9ffff     call sym.imp.__stack_chk_fail
0x00002f87      83ea01         sub edx, 1
0x00002f8a      0f849ff4ffff   je 0x242f
0x00002f90      c7057aa02000.  mov dword [obj.bsd_reversed], 0         ; [0x20d014:4]=-1
0x00002f9a      488d4302       lea rax, [rbx + 2]
0x00002f9e      e98cf4ffff     jmp 0x242f
0x00002fa3      31f6           xor esi, esi
0x00002fa5      4889ef         mov rdi, rbp
0x00002fa8      e843020000     call sym.print_filename
0x00002fad      e9aafeffff     jmp 0x2e5c
0x00002fb2      803d47a12000.  cmp byte [obj.status_only], 0           ; [0x20d100:1]=0
0x00002fb9      0f846befffff   je 0x1f2a
0x00002fbf      4584f6         test r14b, r14b
0x00002fc2      0f8535f9ffff   jne 0x28fd
0x00002fc8      ba05000000     mov edx, 5
0x00002fcd      488d35446c00.  lea rsi, str.the___status_option_is_meaningful_only_when_verifying_checksums ; 0x9c18 ; "the --status option is meaningful only when verifying checksums"
0x00002fd4      e9b7f2ffff     jmp 0x2290
0x00002fd9      ba05000000     mov edx, 5
0x00002fde      488d35eb6b00.  lea rsi, str.the___ignore_missing_option_is_meaningful_only_when_verifying_checksums ; 0x9bd0 ; "the --ignore-missing option is meaningful only when verifying checksums"
0x00002fe5      e9a6f2ffff     jmp 0x2290
0x00002fea      ba05000000     mov edx, 5
0x00002fef      488d35e26a00.  lea rsi, str.tag_does_not_support___text_mode ; 0x9ad8 ; "--tag does not support --text mode"
0x00002ff6      e995f2ffff     jmp 0x2290
0x00002ffb      0f1f440000     nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00003000      31ed           xor ebp, ebp
0x00003002      4989d1         mov r9, rdx
0x00003005      5e             pop rsi
0x00003006      4889e2         mov rdx, rsp
0x00003009      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000300d      50             push rax
0x0000300e      54             push rsp
0x0000300f      4c8d059a6100.  lea r8, sym.__libc_csu_fini             ; 0x91b0
0x00003016      488d0d236100.  lea rcx, sym.__libc_csu_init            ; 0x9140 ; "AWAVI\x89\xd7AUATL\x8d%^8 "
0x0000301d      488d3d8cebff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1bb0 ; "AWAVE1\xf6AUATA\x89\xfcUSH\x89\xf3L\x8d-\u05c8"
0x00003024      ff15b69f2000   call qword [reloc.__libc_start_main]    ; [0x20cfe0:8]=0
0x0000302a      f4             hlt
0x0000302b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00003030      488d3d69a020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20d0a0
0x00003037      55             push rbp
0x00003038      488d0561a020.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20d0a0
0x0000303f      4839f8         cmp rax, rdi
0x00003042      4889e5         mov rbp, rsp
0x00003045      7419           je 0x3060
0x00003047      488b058a9f20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20cfd8:8]=0
0x0000304e      4885c0         test rax, rax
0x00003051      740d           je 0x3060
0x00003053      5d             pop rbp
0x00003054      ffe0           jmp rax
0x00003056      662e0f1f8400.  nop word cs:[rax + rax]
0x00003060      5d             pop rbp
0x00003061      c3             ret
0x00003062      0f1f4000       nop dword [rax]
0x00003066      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00003070      488d3d29a020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20d0a0
0x00003077      488d3522a020.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20d0a0
0x0000307e      55             push rbp
0x0000307f      4829fe         sub rsi, rdi
0x00003082      4889e5         mov rbp, rsp
0x00003085      48c1fe03       sar rsi, 3
0x00003089      4889f0         mov rax, rsi
0x0000308c      48c1e83f       shr rax, 0x3f
0x00003090      4801c6         add rsi, rax
0x00003093      48d1fe         sar rsi, 1
0x00003096      7418           je 0x30b0
0x00003098      488b05519f20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20cff0:8]=0
0x0000309f      4885c0         test rax, rax
0x000030a2      740c           je 0x30b0
0x000030a4      5d             pop rbp
0x000030a5      ffe0           jmp rax
0x000030a7      660f1f840000.  nop word [rax + rax]
0x000030b0      5d             pop rbp
0x000030b1      c3             ret
0x000030b2      0f1f4000       nop dword [rax]
0x000030b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000030c0      803d21a02000.  cmp byte [obj.completed.7697], 0        ; [0x20d0e8:1]=0
0x000030c7      752f           jne 0x30f8
0x000030c9      48833d279f20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20cff8:8]=0
0x000030d1      55             push rbp
0x000030d2      4889e5         mov rbp, rsp
0x000030d5      740c           je 0x30e3
0x000030d7      488b3d2a9f20.  mov rdi, qword [obj.__dso_handle]       ; [0x20d008:8]=0x20d008 obj.__dso_handle
0x000030de      e8bdeaffff     call sym..plt.got
0x000030e3      e848ffffff     call sym.deregister_tm_clones
0x000030e8      c605f99f2000.  mov byte [obj.completed.7697], 1        ; [0x20d0e8:1]=0
0x000030ef      5d             pop rbp
0x000030f0      c3             ret
0x000030f1      0f1f80000000.  nop dword [rax]
0x000030f8      f3c3           ret
0x000030fa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00003100      55             push rbp
0x00003101      4889e5         mov rbp, rsp
0x00003104      5d             pop rbp
0x00003105      e966ffffff     jmp sym.register_tm_clones
0x0000310a      660f1f440000   nop word [rax + rax]
;-- filename_unescape:
0x00003110      31d2           xor edx, edx                            ; /src:310
0x00003112      4885f6         test rsi, rsi
0x00003115      488d4f01       lea rcx, [rdi + 1]
0x00003119      4c8d46ff       lea r8, [rsi - 1]                       ; /src:318
0x0000311d      7458           je 0x3177                               ; /src:313
0x0000311f      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:315
0x00003123      84c0           test al, al
0x00003125      7429           je 0x3150
0x00003127      3c5c           cmp al, 0x5c
0x00003129      752d           jne 0x3158
0x0000312b      4939d0         cmp r8, rdx                             ; /src:318
0x0000312e      7420           je 0x3150
0x00003130      4883c201       add rdx, 1                              ; /src:323
0x00003134      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:324
0x00003138      3c5c           cmp al, 0x5c
0x0000313a      7444           je 0x3180
0x0000313c      3c6e           cmp al, 0x6e
0x0000313e      7510           jne 0x3150
0x00003140      4989c9         mov r9, rcx                             ; /src:327
0x00003143      c641ff0a       mov byte [rcx - 1], 0xa
0x00003147      eb15           jmp 0x315e                              ; /src:328
0x00003149      0f1f80000000.  nop dword [rax]
0x00003150      31c0           xor eax, eax                            ; /src:340
0x00003152      c3             ret                                     ; /src:351
0x00003153      0f1f440000     nop dword [rax + rax]
0x00003158      4989c9         mov r9, rcx                             ; /src:343
0x0000315b      8841ff         mov byte [rcx - 1], al
0x0000315e      4883c201       add rdx, 1                              ; /src:313
0x00003162      4883c101       add rcx, 1
0x00003166      4839d6         cmp rsi, rdx
0x00003169      77b4           ja 0x311f
0x0000316b      4801fe         add rsi, rdi                            ; /src:347
0x0000316e      4939f1         cmp r9, rsi
0x00003171      7304           jae 0x3177
0x00003173      41c60100       mov byte [r9], 0                        ; /src:348
0x00003177      4889f8         mov rax, rdi                            ; /src:350
0x0000317a      c3             ret
0x0000317b      0f1f440000     nop dword [rax + rax]
0x00003180      4989c9         mov r9, rcx                             ; /src:330
0x00003183      c641ff5c       mov byte [rcx - 1], 0x5c                ; '\'
                                                                       ; [0x5c:1]=0
0x00003187      ebd5           jmp 0x315e                              ; /src:331
0x00003189      0f1f80000000.  nop dword [rax]
;-- hex_digits:
0x00003190      55             push rbp                                ; /src:357
0x00003191      53             push rbx
0x00003192      4883ec08       sub rsp, 8
0x00003196      488b2d6b9f20.  mov rbp, qword [obj.digest_hex_bytes]   ; /src:358 ; [0x20d108:8]=0
0x0000319d      4885ed         test rbp, rbp
0x000031a0      743e           je 0x31e0
0x000031a2      4889fb         mov rbx, rdi
0x000031a5      e8e6e9ffff     call sym.imp.__ctype_b_loc              ; /src:360
0x000031aa      488b08         mov rcx, qword [rax]
0x000031ad      4889d8         mov rax, rbx
0x000031b0      eb13           jmp 0x31c5
0x000031b2      660f1f440000   nop word [rax + rax]
0x000031b8      4883c001       add rax, 1                              ; /src:362
0x000031bc      89c2           mov edx, eax                            ; /src:358
0x000031be      29da           sub edx, ebx
0x000031c0      4839ea         cmp rdx, rbp
0x000031c3      731e           jae 0x31e3
0x000031c5      0fb610         movzx edx, byte [rax]                   ; /src:360
0x000031c8      f644510110     test byte [rcx + rdx*2 + 1], 0x10
0x000031cd      75e9           jne 0x31b8
0x000031cf      4883c408       add rsp, 8                              ; /src:365
0x000031d3      31c0           xor eax, eax                            ; /src:361
0x000031d5      5b             pop rbx                                 ; /src:365
0x000031d6      5d             pop rbp
0x000031d7      c3             ret
0x000031d8      0f1f84000000.  nop dword [rax + rax]
0x000031e0      4889f8         mov rax, rdi                            ; /src:358
0x000031e3      803800         cmp byte [rax], 0                       ; /src:364
0x000031e6      0f94c0         sete al
0x000031e9      4883c408       add rsp, 8                              ; /src:365
0x000031ed      5b             pop rbx
0x000031ee      5d             pop rbp
0x000031ef      c3             ret
;-- print_filename:
0x000031f0      55             push rbp                                ; /src:551
0x000031f1      53             push rbx
0x000031f2      4889fb         mov rbx, rdi
0x000031f5      4883ec08       sub rsp, 8
0x000031f9      4084f6         test sil, sil                           ; /src:552
0x000031fc      0f848e000000   je 0x3290
0x00003202      0fb637         movzx esi, byte [rdi]                   ; /src:558
0x00003205      488d2dd85f00.  lea rbp, [0x000091e4]                   ; /src:563 ; "\n"
0x0000320c      4084f6         test sil, sil                           ; /src:558
0x0000320f      7529           jne 0x323a
0x00003211      eb5b           jmp 0x326e
0x00003213      0f1f440000     nop dword [rax + rax]
0x00003218      488d3dc85f00.  lea rdi, [0x000091e7]                   ; /src:567 ; "\\"
0x0000321f      ba02000000     mov edx, 2
0x00003224      be01000000     mov esi, 1
0x00003229      e842e8ffff     call sym.imp.fwrite_unlocked
0x0000322e      4883c301       add rbx, 1                              ; /src:574
0x00003232      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00003235      4084f6         test sil, sil
0x00003238      7434           je 0x326e
0x0000323a      4080fe0a       cmp sil, 0xa                            ; /src:560
0x0000323e      488b0d639e20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00003245      7431           je 0x3278
0x00003247      4080fe5c       cmp sil, 0x5c
0x0000324b      74cb           je 0x3218
0x0000324d      488b4128       mov rax, qword [rcx + 0x28]             ; /coreutils-8.31/lib:107
0x00003251      483b4130       cmp rax, qword [rcx + 0x30]
0x00003255      7351           jae 0x32a8
0x00003257      488d5001       lea rdx, [rax + 1]
0x0000325b      4883c301       add rbx, 1                              ; /src:574
0x0000325f      48895128       mov qword [rcx + 0x28], rdx             ; /coreutils-8.31/lib:107
0x00003263      408830         mov byte [rax], sil
0x00003266      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00003269      4084f6         test sil, sil
0x0000326c      75cc           jne 0x323a
0x0000326e      4883c408       add rsp, 8                              ; /src:576
0x00003272      5b             pop rbx
0x00003273      5d             pop rbp
0x00003274      c3             ret
0x00003275      0f1f00         nop dword [rax]
0x00003278      ba02000000     mov edx, 2                              ; /src:563
0x0000327d      be01000000     mov esi, 1
0x00003282      4889ef         mov rdi, rbp
0x00003285      e8e6e7ffff     call sym.imp.fwrite_unlocked
0x0000328a      eba2           jmp 0x322e
0x0000328c      0f1f4000       nop dword [rax]
0x00003290      488b35119e20.  mov rsi, qword [obj.stdout]             ; /src:554 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00003297      4883c408       add rsp, 8                              ; /src:576
0x0000329b      5b             pop rbx
0x0000329c      5d             pop rbp
0x0000329d      e90ee7ffff     jmp sym.imp.fputs_unlocked              ; /src:554
0x000032a2      660f1f440000   nop word [rax + rax]
0x000032a8      4889cf         mov rdi, rcx                            ; /coreutils-8.31/lib:107
0x000032ab      e870e6ffff     call sym.imp.__overflow
0x000032b0      e979ffffff     jmp 0x322e
0x000032b5      90             nop
0x000032b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- digest_file.isra.1:
0x000032c0      4155           push r13                                ; /src:591
0x000032c2      4154           push r12
0x000032c4      b902000000     mov ecx, 2                              ; /src:596
0x000032c9      55             push rbp                                ; /src:591
0x000032ca      53             push rbx
0x000032cb      4889fd         mov rbp, rdi
0x000032ce      488d3d956c00.  lea rdi, [0x00009f6a]                   ; /src:596 ; "-"
0x000032d5      4989f4         mov r12, rsi                            ; /src:591
0x000032d8      4889ee         mov rsi, rbp                            ; /src:596
0x000032db      4883ec08       sub rsp, 8                              ; /src:591
0x000032df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; /src:596
0x000032e1      c60200         mov byte [rdx], 0                       ; /src:598
0x000032e4      0f97c0         seta al                                 ; /src:596
0x000032e7      1c00           sbb al, 0
0x000032e9      84c0           test al, al                             ; /src:600
0x000032eb      0f859f000000   jne 0x3390
0x000032f1      488b1db89d20.  mov rbx, qword [obj.stdin]              ; /src:603 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20d0b0:8]=0
0x000032f8      be02000000     mov esi, 2                              ; /src:627
0x000032fd      c605149e2000.  mov byte [obj.have_read_stdin], 1       ; /src:602 ; [0x20d118:1]=0
0x00003304      4889df         mov rdi, rbx                            ; /src:627
0x00003307      e8b4280000     call sym.fadvise
0x0000330c      488b15dd9d20.  mov rdx, qword [obj.b2_length]          ; /src:630 ; [0x20d0f0:8]=0
0x00003313      4c89e6         mov rsi, r12
0x00003316      4889df         mov rdi, rbx
0x00003319      48c1ea03       shr rdx, 3
0x0000331d      e8fe220000     call sym.blake2b_stream
0x00003322      85c0           test eax, eax                           ; /src:634
0x00003324      751a           jne 0x3340
0x00003326      41bc01000000   mov r12d, 1                             ; /src:648
0x0000332c      4883c408       add rsp, 8                              ; /src:649
0x00003330      4489e0         mov eax, r12d
0x00003333      5b             pop rbx
0x00003334      5d             pop rbp
0x00003335      415c           pop r12
0x00003337      415d           pop r13
0x00003339      c3             ret
0x0000333a      660f1f440000   nop word [rax + rax]
0x00003340      4889ea         mov rdx, rbp                            ; /src:636
0x00003343      31ff           xor edi, edi
0x00003345      be03000000     mov esi, 3
0x0000334a      e881440000     call sym.quotearg_n_style_colon
0x0000334f      4889c5         mov rbp, rax
0x00003352      4531e4         xor r12d, r12d                          ; /src:639
0x00003355      e8b6e4ffff     call sym.imp.__errno_location           ; /src:636
0x0000335a      8b30           mov esi, dword [rax]
0x0000335c      488d15a96b00.  lea rdx, [0x00009f0c]                   ; "%s"
0x00003363      31ff           xor edi, edi
0x00003365      31c0           xor eax, eax
0x00003367      4889e9         mov rcx, rbp
0x0000336a      e861e7ffff     call sym.imp.error
0x0000336f      48391d3a9d20.  cmp qword [obj.stdin], rbx              ; /src:637 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20d0b0:8]=0
0x00003376      74b4           je 0x332c
0x00003378      4889df         mov rdi, rbx                            ; /src:638
0x0000337b      e870580000     call sym.rpl_fclose
0x00003380      4883c408       add rsp, 8                              ; /src:649
0x00003384      4489e0         mov eax, r12d
0x00003387      5b             pop rbx
0x00003388      5d             pop rbp
0x00003389      415c           pop r12
0x0000338b      415d           pop r13
0x0000338d      c3             ret
0x0000338e      6690           nop
0x00003390      488d35dd5f00.  lea rsi, [0x00009374]                   ; /src:614 ; "r"
0x00003397      4889ef         mov rdi, rbp
0x0000339a      4989d5         mov r13, rdx
0x0000339d      e84e280000     call sym.fopen_safer
0x000033a2      4885c0         test rax, rax                           ; /src:615
0x000033a5      4889c3         mov rbx, rax                            ; /src:614
0x000033a8      7476           je 0x3420                               ; /src:615
0x000033aa      4889c7         mov rdi, rax                            ; /src:627
0x000033ad      be02000000     mov esi, 2
0x000033b2      e809280000     call sym.fadvise
0x000033b7      488b15329d20.  mov rdx, qword [obj.b2_length]          ; /src:630 ; [0x20d0f0:8]=0
0x000033be      4c89e6         mov rsi, r12
0x000033c1      4889df         mov rdi, rbx
0x000033c4      48c1ea03       shr rdx, 3
0x000033c8      e853220000     call sym.blake2b_stream
0x000033cd      85c0           test eax, eax                           ; /src:634
0x000033cf      0f856bffffff   jne 0x3340
0x000033d5      4889df         mov rdi, rbx                            ; /src:642
0x000033d8      e813580000     call sym.rpl_fclose
0x000033dd      85c0           test eax, eax
0x000033df      0f8441ffffff   je 0x3326
0x000033e5      4889ea         mov rdx, rbp                            ; /src:644
0x000033e8      be03000000     mov esi, 3
0x000033ed      31ff           xor edi, edi
0x000033ef      e8dc430000     call sym.quotearg_n_style_colon
0x000033f4      4889c3         mov rbx, rax
0x000033f7      4531e4         xor r12d, r12d                          ; /src:645
0x000033fa      e811e4ffff     call sym.imp.__errno_location           ; /src:644
0x000033ff      8b30           mov esi, dword [rax]
0x00003401      488d15046b00.  lea rdx, [0x00009f0c]                   ; "%s"
0x00003408      4889d9         mov rcx, rbx
0x0000340b      31ff           xor edi, edi
0x0000340d      31c0           xor eax, eax
0x0000340f      e8bce6ffff     call sym.imp.error
0x00003414      e913ffffff     jmp 0x332c
0x00003419      0f1f80000000.  nop dword [rax]
0x00003420      440fb625d69c.  movzx r12d, byte [obj.ignore_missing]   ; /src:617 ; [0x20d0fe:1]=0
0x00003428      e8e3e3ffff     call sym.imp.__errno_location
0x0000342d      4889c3         mov rbx, rax
0x00003430      4584e4         test r12b, r12b
0x00003433      7405           je 0x343a
0x00003435      833802         cmp dword [rax], 2
0x00003438      7436           je 0x3470
0x0000343a      4889ea         mov rdx, rbp                            ; /src:622
0x0000343d      be03000000     mov esi, 3
0x00003442      31ff           xor edi, edi
0x00003444      e887430000     call sym.quotearg_n_style_colon
0x00003449      8b33           mov esi, dword [rbx]
0x0000344b      488d15ba6a00.  lea rdx, [0x00009f0c]                   ; "%s"
0x00003452      4889c1         mov rcx, rax
0x00003455      31ff           xor edi, edi
0x00003457      31c0           xor eax, eax
0x00003459      4531e4         xor r12d, r12d                          ; /src:623
0x0000345c      e86fe6ffff     call sym.imp.error                      ; /src:622
0x00003461      e9c6feffff     jmp 0x332c
0x00003466      662e0f1f8400.  nop word cs:[rax + rax]
0x00003470      41c6450001     mov byte [r13], 1                       ; /src:619
0x00003475      e9b2feffff     jmp 0x332c
0x0000347a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00003480      4155           push r13                                ; /src:224
0x00003482      4154           push r12
0x00003484      ba05000000     mov edx, 5                              ; /src:226
0x00003489      55             push rbp                                ; /src:224
0x0000348a      53             push rbx
0x0000348b      89fd           mov ebp, edi
0x0000348d      4881ec880000.  sub rsp, 0x88
0x00003494      488b1d959c20.  mov rbx, qword [obj.program_name]       ; [0x20d130:8]=0
0x0000349b      64488b042528.  mov rax, qword fs:[0x28]
0x000034a4      4889442478     mov qword [rsp + 0x78], rax
0x000034a9      31c0           xor eax, eax
0x000034ab      85ff           test edi, edi                           ; /src:225
0x000034ad      742e           je 0x34dd
0x000034af      488d35525f00.  lea rsi, str.Try___s___help__for_more_information. ; /src:226 ; 0x9408 ; "Try '%s --help' for more information.\n"
0x000034b6      31ff           xor edi, edi
0x000034b8      e8f3e3ffff     call sym.imp.dcgettext
0x000034bd      488b3d1c9c20.  mov rdi, qword [obj.stderr]             ; /coreutils-8.31/src/blake2:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0e0:8]=0
0x000034c4      4889c2         mov rdx, rax
0x000034c7      4889d9         mov rcx, rbx
0x000034ca      be01000000     mov esi, 1
0x000034cf      31c0           xor eax, eax
0x000034d1      e87ae6ffff     call sym.imp.__fprintf_chk
0x000034d6      89ef           mov edi, ebp                            ; /src:295
0x000034d8      e853e6ffff     call sym.imp.exit
0x000034dd      488d354c5f00.  lea rsi, str.Usage:__s__OPTION_...__FILE_...__Print_or_check__s___d_bit__checksums. ; /src:229 ; 0x9430 ; "Usage: %s [OPTION]... [FILE]...\nPrint or check %s (%d-bit) checksums.\n"
0x000034e4      31ff           xor edi, edi
0x000034e6      e8c5e3ffff     call sym.imp.dcgettext
0x000034eb      488d0dfe5c00.  lea rcx, str.BLAKE2                     ; /coreutils-8.31/src/blake2:104 ; 0x91f0 ; "BLAKE2"
0x000034f2      41b800020000   mov r8d, 0x200
0x000034f8      4889da         mov rdx, rbx
0x000034fb      4889c6         mov rsi, rax
0x000034fe      bf01000000     mov edi, 1
0x00003503      31c0           xor eax, eax
0x00003505      e8a6e5ffff     call sym.imp.__printf_chk
0x0000350a      488b1d979b20.  mov rbx, qword [obj.stdout]             ; .//ib:580 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00003511      488d35605f00.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x9478 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00003518      ba05000000     mov edx, 5
0x0000351d      31ff           xor edi, edi
0x0000351f      e88ce3ffff     call sym.imp.dcgettext
0x00003524      4889de         mov rsi, rbx
0x00003527      4889c7         mov rdi, rax
0x0000352a      e881e4ffff     call sym.imp.fputs_unlocked
0x0000352f      488b1d729b20.  mov rbx, qword [obj.stdout]             ; /src:244 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00003536      488d35735f00.  lea rsi, str.b____binary_________read_in_binary_mode ; 0x94b0 ; "\n  -b, --binary         read in binary mode\n"
0x0000353d      ba05000000     mov edx, 5
0x00003542      31ff           xor edi, edi
0x00003544      e867e3ffff     call sym.imp.dcgettext
0x00003549      4889de         mov rsi, rbx
0x0000354c      4889c7         mov rdi, rax
0x0000354f      e85ce4ffff     call sym.imp.fputs_unlocked
0x00003554      488d35855f00.  lea rsi, str.c____check__________read__s_sums_from_the_FILEs_and_check_them ; /src:249 ; 0x94e0 ; "  -c, --check          read %s sums from the FILEs and check them\n"
0x0000355b      31ff           xor edi, edi
0x0000355d      ba05000000     mov edx, 5
0x00003562      e849e3ffff     call sym.imp.dcgettext
0x00003567      488d15825c00.  lea rdx, str.BLAKE2                     ; /coreutils-8.31/src/blake2:104 ; 0x91f0 ; "BLAKE2"
0x0000356e      4889c6         mov rsi, rax
0x00003571      bf01000000     mov edi, 1
0x00003576      31c0           xor eax, eax
0x00003578      e833e5ffff     call sym.imp.__printf_chk
0x0000357d      488b1d249b20.  mov rbx, qword [obj.stdout]             ; /src:253 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00003584      488d359d5f00.  lea rsi, str.l____length_________digest_length_in_bits__must_not_exceed_the_maximum_for_________________________the_blake2_algorithm_and_must_be_a_multiple_of_8 ; 0x9528 ; "  -l, --length         digest length in bits; must not exceed the maximum for\n                       the blake2 algorithm and must be a multiple of 8\n"
0x0000358b      ba05000000     mov edx, 5
0x00003590      31ff           xor edi, edi
0x00003592      e819e3ffff     call sym.imp.dcgettext
0x00003597      4889de         mov rsi, rbx
0x0000359a      4889c7         mov rdi, rax
0x0000359d      e80ee4ffff     call sym.imp.fputs_unlocked
0x000035a2      488b1dff9a20.  mov rbx, qword [obj.stdout]             ; /src:258 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x000035a9      488d35106000.  lea rsi, str.tag____________create_a_BSD_style_checksum ; 0x95c0 ; "      --tag            create a BSD-style checksum\n"
0x000035b0      ba05000000     mov edx, 5
0x000035b5      31ff           xor edi, edi
0x000035b7      e8f4e2ffff     call sym.imp.dcgettext
0x000035bc      4889de         mov rsi, rbx
0x000035bf      4889c7         mov rdi, rax
0x000035c2      e8e9e3ffff     call sym.imp.fputs_unlocked
0x000035c7      488b1dda9a20.  mov rbx, qword [obj.stdout]             ; /src:266 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x000035ce      488d35236000.  lea rsi, str.t____text___________read_in_text_mode__default ; 0x95f8 ; "  -t, --text           read in text mode (default)\n"
0x000035d5      ba05000000     mov edx, 5
0x000035da      31ff           xor edi, edi
0x000035dc      e8cfe2ffff     call sym.imp.dcgettext
0x000035e1      4889de         mov rsi, rbx
0x000035e4      4889c7         mov rdi, rax
0x000035e7      e8c4e3ffff     call sym.imp.fputs_unlocked
0x000035ec      488b1db59a20.  mov rbx, qword [obj.stdout]             ; /src:269 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x000035f3      488d35366000.  lea rsi, str.z____zero___________end_each_output_line_with_NUL__not_newline__________________________and_disable_file_name_escaping ; 0x9630 ; "  -z, --zero           end each output line with NUL, not newline,\n                       and disable file name escaping\n"
0x000035fa      ba05000000     mov edx, 5
0x000035ff      31ff           xor edi, edi
0x00003601      e8aae2ffff     call sym.imp.dcgettext
0x00003606      4889de         mov rsi, rbx
0x00003609      4889c7         mov rdi, rax
0x0000360c      e89fe3ffff     call sym.imp.fputs_unlocked
0x00003611      488b1d909a20.  mov rbx, qword [obj.stdout]             ; /src:273 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00003618      488d35916000.  lea rsi, str.The_following_five_options_are_useful_only_when_verifying_checksums:__________ignore_missing__don_t_fail_or_report_status_for_missing_files__________quiet__________don_t_print_OK_for_each_successfully_verified_file__________status_________don_t_output_anything__status_code_shows_success__________strict_________exit_non_zero_for_improperly_formatted_checksum_lines_____w____warn___________warn_about_improperly_formatted_checksum_lines ; 0x96b0 ; "\nThe following five options are useful only when verifying checksums:\n      --ignore-missing  don't fail or report status for missing files\n      --quiet          don't print OK for each successfully verified file\n      --status         don't output anything, status code shows success\n      --strict         exit non-zero for improperly formatted checksum lines\n  -w, --warn           warn about improperly formatted checksum lines\n\n"
0x0000361f      ba05000000     mov edx, 5
0x00003624      31ff           xor edi, edi
0x00003626      e885e2ffff     call sym.imp.dcgettext
0x0000362b      4889de         mov rsi, rbx
0x0000362e      4889c7         mov rdi, rax
0x00003631      e87ae3ffff     call sym.imp.fputs_unlocked
0x00003636      488b1d6b9a20.  mov rbx, qword [obj.stdout]             ; /src:283 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x0000363d      488d35246200.  lea rsi, str.help_____display_this_help_and_exit ; 0x9868 ; "      --help     display this help and exit\n"
0x00003644      ba05000000     mov edx, 5
0x00003649      31ff           xor edi, edi
0x0000364b      e860e2ffff     call sym.imp.dcgettext
0x00003650      4889de         mov rsi, rbx
0x00003653      4889c7         mov rdi, rax
0x00003656      e855e3ffff     call sym.imp.fputs_unlocked
0x0000365b      488b1d469a20.  mov rbx, qword [obj.stdout]             ; /src:284 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00003662      488d352f6200.  lea rsi, str.version__output_version_information_and_exit ; 0x9898 ; "      --version  output version information and exit\n"
0x00003669      31ff           xor edi, edi
0x0000366b      ba05000000     mov edx, 5
0x00003670      e83be2ffff     call sym.imp.dcgettext
0x00003675      4889de         mov rsi, rbx
0x00003678      4889c7         mov rdi, rax
0x0000367b      488d1d685b00.  lea rbx, str.b2sum                      ; 0x91ea ; "b2sum"
0x00003682      e829e3ffff     call sym.imp.fputs_unlocked
0x00003687      488d35426200.  lea rsi, str.The_sums_are_computed_as_described_in__s.__When_checking__the_input__should_be_a_former_output_of_this_program.__The_default_mode_is_to_print_a__line_with_checksum__a_space__a_character_indicating_input_mode______for_binary_______for_text_or_where_binary_is_insignificant___and_name_for_each_FILE. ; /src:285 ; 0x98d0 ; "\nThe sums are computed as described in %s.  When checking, the input\nshould be a former output of this program.  The default mode is to print a\nline with checksum, a space, a character indicating input mode ('*' for binary,\n' ' for text or where binary is insignificant), and name for each FILE.\n"
0x0000368e      ba05000000     mov edx, 5
0x00003693      31ff           xor edi, edi
0x00003695      e816e2ffff     call sym.imp.dcgettext
0x0000369a      488d15565b00.  lea rdx, str.RFC_7693                   ; /coreutils-8.31/src/blake2:104 ; 0x91f7 ; "RFC 7693"
0x000036a1      4889c6         mov rsi, rax
0x000036a4      bf01000000     mov edi, 1
0x000036a9      31c0           xor eax, eax
0x000036ab      e800e4ffff     call sym.imp.__printf_chk
0x000036b0      488d05495b00.  lea rax, [0x00009200]                   ; .//ib:633 ; "["
0x000036b7      488d0d835b00.  lea rcx, str.sha256sum                  ; 0x9241 ; "sha256sum"
0x000036be      48c744246000.  mov qword [rsp + 0x60], 0
0x000036c7      48c744246800.  mov qword [rsp + 0x68], 0
0x000036d0      4889e2         mov rdx, rsp                            ; .//ib:644
0x000036d3      48890424       mov qword [rsp], rax                    ; .//ib:633
0x000036d7      488d05245b00.  lea rax, str.test_invocation            ; 0x9202 ; "test invocation"
0x000036de      48894c2430     mov qword [rsp + 0x30], rcx
0x000036e3      488d0d615b00.  lea rcx, str.sha384sum                  ; 0x924b ; "sha384sum"
0x000036ea      4889442408     mov qword [rsp + 8], rax
0x000036ef      488d05845b00.  lea rax, [0x0000927a]                   ; "coreutils"
0x000036f6      48894c2440     mov qword [rsp + 0x40], rcx
0x000036fb      488d0d535b00.  lea rcx, str.sha512sum                  ; 0x9255 ; "sha512sum"
0x00003702      4889442410     mov qword [rsp + 0x10], rax
0x00003707      488d05045b00.  lea rax, str.Multi_call_invocation      ; 0x9212 ; "Multi-call invocation"
0x0000370e      48894c2450     mov qword [rsp + 0x50], rcx
0x00003713      4889442418     mov qword [rsp + 0x18], rax
0x00003718      488d05095b00.  lea rax, str.sha224sum                  ; 0x9228 ; "sha224sum"
0x0000371f      4889442420     mov qword [rsp + 0x20], rax
0x00003724      488d05075b00.  lea rax, str.sha2_utilities             ; 0x9232 ; "sha2 utilities"
0x0000372b      4889442428     mov qword [rsp + 0x28], rax
0x00003730      4889442438     mov qword [rsp + 0x38], rax
0x00003735      4889442448     mov qword [rsp + 0x48], rax
0x0000373a      4889442458     mov qword [rsp + 0x58], rax
0x0000373f      90             nop
0x00003740      4883c210       add rdx, 0x10                           ; .//ib:647
0x00003744      488b3a         mov rdi, qword [rdx]                    ; .//ib:646
0x00003747      4885ff         test rdi, rdi
0x0000374a      7413           je 0x375f
0x0000374c      b906000000     mov ecx, 6
0x00003751      4889de         mov rsi, rbx
0x00003754      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003756      0f97c0         seta al
0x00003759      1c00           sbb al, 0
0x0000375b      84c0           test al, al
0x0000375d      75e1           jne 0x3740
0x0000375f      4c8b6208       mov r12, qword [rdx + 8]                ; .//ib:649
0x00003763      31ff           xor edi, edi                            ; .//ib:652
0x00003765      ba05000000     mov edx, 5
0x0000376a      488d35ee5a00.  lea rsi, str.s_online_help:___s         ; 0x925f ; "\n%s online help: <%s>\n"
0x00003771      4d85e4         test r12, r12                           ; .//ib:649
0x00003774      0f84c1000000   je 0x383b
0x0000377a      e831e1ffff     call sym.imp.dcgettext                  ; .//ib:652
0x0000377f      488d0d7a6200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; /coreutils-8.31/src/blake2:104 ; 0x9a00 ; "https://www.gnu.org/software/coreutils/"
0x00003786      488d15e95a00.  lea rdx, str.GNU_coreutils              ; 0x9276 ; "GNU coreutils"
0x0000378d      4889c6         mov rsi, rax
0x00003790      bf01000000     mov edi, 1
0x00003795      31c0           xor eax, eax
0x00003797      e814e3ffff     call sym.imp.__printf_chk
0x0000379c      31f6           xor esi, esi                            ; .//ib:656
0x0000379e      bf05000000     mov edi, 5
0x000037a3      e8f8e2ffff     call sym.imp.setlocale
0x000037a8      4885c0         test rax, rax                           ; .//ib:657
0x000037ab      741c           je 0x37c9
0x000037ad      488d35d05a00.  lea rsi, [0x00009284]                   ; "en_"
0x000037b4      ba03000000     mov edx, 3
0x000037b9      4889c7         mov rdi, rax
0x000037bc      e85fe0ffff     call sym.imp.strncmp
0x000037c1      85c0           test eax, eax
0x000037c3      0f8507010000   jne 0x38d0
0x000037c9      488d35b85a00.  lea rsi, str.Full_documentation___s_s   ; .//ib:666 ; 0x9288 ; "Full documentation <%s%s>\n"
0x000037d0      31ff           xor edi, edi
0x000037d2      ba05000000     mov edx, 5
0x000037d7      e8d4e0ffff     call sym.imp.dcgettext
0x000037dc      488d0d075a00.  lea rcx, str.b2sum                      ; /coreutils-8.31/src/blake2:104 ; 0x91ea ; "b2sum"
0x000037e3      488d15166200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x9a00 ; "https://www.gnu.org/software/coreutils/"
0x000037ea      4889c6         mov rsi, rax
0x000037ed      bf01000000     mov edi, 1
0x000037f2      31c0           xor eax, eax
0x000037f4      e8b7e2ffff     call sym.imp.__printf_chk
0x000037f9      4939dc         cmp r12, rbx                            ; .//ib:668
0x000037fc      488d0d195a00.  lea rcx, [0x0000921c]                   ; " invocation"
0x00003803      488d1d976c00.  lea rbx, [0x0000a4a1]
0x0000380a      480f44d9       cmove rbx, rcx
0x0000380e      488d355b6200.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x9a70 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003815      31ff           xor edi, edi
0x00003817      ba05000000     mov edx, 5
0x0000381c      e88fe0ffff     call sym.imp.dcgettext
0x00003821      4889d9         mov rcx, rbx                            ; /coreutils-8.31/src/blake2:104
0x00003824      4889c6         mov rsi, rax
0x00003827      4c89e2         mov rdx, r12
0x0000382a      bf01000000     mov edi, 1
0x0000382f      31c0           xor eax, eax
0x00003831      e87ae2ffff     call sym.imp.__printf_chk
0x00003836      e99bfcffff     jmp 0x34d6
0x0000383b      e870e0ffff     call sym.imp.dcgettext                  ; .//ib:652
0x00003840      488d0db96100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; /coreutils-8.31/src/blake2:104 ; 0x9a00 ; "https://www.gnu.org/software/coreutils/"
0x00003847      488d15285a00.  lea rdx, str.GNU_coreutils              ; 0x9276 ; "GNU coreutils"
0x0000384e      4889c6         mov rsi, rax
0x00003851      bf01000000     mov edi, 1
0x00003856      31c0           xor eax, eax
0x00003858      e853e2ffff     call sym.imp.__printf_chk
0x0000385d      31f6           xor esi, esi                            ; .//ib:656
0x0000385f      bf05000000     mov edi, 5
0x00003864      e837e2ffff     call sym.imp.setlocale
0x00003869      4885c0         test rax, rax                           ; .//ib:657
0x0000386c      7418           je 0x3886
0x0000386e      488d350f5a00.  lea rsi, [0x00009284]                   ; "en_"
0x00003875      ba03000000     mov edx, 3
0x0000387a      4889c7         mov rdi, rax
0x0000387d      e89edfffff     call sym.imp.strncmp
0x00003882      85c0           test eax, eax
0x00003884      7543           jne 0x38c9
0x00003886      488d35fb5900.  lea rsi, str.Full_documentation___s_s   ; .//ib:666 ; 0x9288 ; "Full documentation <%s%s>\n"
0x0000388d      ba05000000     mov edx, 5
0x00003892      31ff           xor edi, edi
0x00003894      4c8d254f5900.  lea r12, str.b2sum                      ; .//ib:643 ; 0x91ea ; "b2sum"
0x0000389b      488d1d7a5900.  lea rbx, [0x0000921c]                   ; .//ib:668 ; " invocation"
0x000038a2      e809e0ffff     call sym.imp.dcgettext                  ; .//ib:666
0x000038a7      488d0d3c5900.  lea rcx, str.b2sum                      ; /coreutils-8.31/src/blake2:104 ; 0x91ea ; "b2sum"
0x000038ae      488d154b6100.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x9a00 ; "https://www.gnu.org/software/coreutils/"
0x000038b5      4889c6         mov rsi, rax
0x000038b8      bf01000000     mov edi, 1
0x000038bd      31c0           xor eax, eax
0x000038bf      e8ece1ffff     call sym.imp.__printf_chk
0x000038c4      e945ffffff     jmp 0x380e
0x000038c9      4c8d251a5900.  lea r12, str.b2sum                      ; .//ib:643 ; 0x91ea ; "b2sum"
0x000038d0      4c8b2dd19720.  mov r13, qword [obj.stdout]             ; .//ib:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x000038d7      488d354a6100.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x9a28 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000038de      31ff           xor edi, edi
0x000038e0      ba05000000     mov edx, 5
0x000038e5      e8c6dfffff     call sym.imp.dcgettext
0x000038ea      4c89ee         mov rsi, r13
0x000038ed      4889c7         mov rdi, rax
0x000038f0      e8bbe0ffff     call sym.imp.fputs_unlocked
0x000038f5      e9cffeffff     jmp 0x37c9
0x000038fa      660f1f440000   nop word [rax + rax]
;-- blake2b_compress:
0x00003900      4157           push r15                                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:178
0x00003902      4156           push r14
0x00003904      4155           push r13
0x00003906      4154           push r12
0x00003908      55             push rbp
0x00003909      53             push rbx
0x0000390a      4881ec480100.  sub rsp, 0x148
0x00003911      64488b042528.  mov rax, qword fs:[0x28]
0x0000391a      488984243801.  mov qword [rsp + 0x138], rax
0x00003922      31c0           xor eax, eax
0x00003924      488d4c2430     lea rcx, [rsp + 0x30]
0x00003929      0f1f80000000.  nop dword [rax]
0x00003930      488b14c6       mov rdx, qword [rsi + rax*8]            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:184
0x00003934      488914c1       mov qword [rcx + rax*8], rdx
0x00003938      4883c001       add rax, 1                              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:183
0x0000393c      4883f810       cmp rax, 0x10
0x00003940      75ee           jne 0x3930
0x00003942      488d8c24b000.  lea rcx, [rsp + 0xb0]
0x0000394a      31c0           xor eax, eax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:187
0x0000394c      48894c2428     mov qword [rsp + 0x28], rcx
0x00003951      0f1f80000000.  nop dword [rax]
0x00003958      488b14c7       mov rdx, qword [rdi + rax*8]            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:188
0x0000395c      488914c1       mov qword [rcx + rax*8], rdx
0x00003960      4883c001       add rax, 1                              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:187
0x00003964      4883f808       cmp rax, 8
0x00003968      75ee           jne 0x3958
0x0000396a      4c8b8424d800.  mov r8, qword [rsp + 0xd8]              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003972      488b9c24b800.  mov rbx, qword [rsp + 0xb8]
0x0000397a      48b91f6c3e2b.  movabs rcx, 0x9b05688c2b3e6c1f
0x00003984      4c8bac24d000.  mov r13, qword [rsp + 0xd0]
0x0000398c      488bac24b000.  mov rbp, qword [rsp + 0xb0]
0x00003994      49b9d182e6ad.  movabs r9, 0x510e527fade682d1
0x0000399e      49bf3ba7ca84.  movabs r15, 0xbb67ae8584caa73b
0x000039a8      49be08c9bcf3.  movabs r14, 0x6a09e667f3bcc908
0x000039b2      488bb424e000.  mov rsi, qword [rsp + 0xe0]
0x000039ba      4c01c3         add rbx, r8
0x000039bd      48035c2440     add rbx, qword [rsp + 0x40]
0x000039c2      4c8b9c24c000.  mov r11, qword [rsp + 0xc0]
0x000039ca      4c01ed         add rbp, r13
0x000039cd      48036c2430     add rbp, qword [rsp + 0x30]
0x000039d2      4c8b9424c800.  mov r10, qword [rsp + 0xc8]
0x000039da      48ba6bbd41fb.  movabs rdx, 0x1f83d9abfb41bd6b
0x000039e4      49bc2bf894fe.  movabs r12, 0x3c6ef372fe94f82b
0x000039ee      4901f3         add r11, rsi
0x000039f1      4c035c2450     add r11, qword [rsp + 0x50]
0x000039f6      4831d9         xor rcx, rbx
0x000039f9      48334f48       xor rcx, qword [rdi + 0x48]
0x000039fd      48035c2448     add rbx, qword [rsp + 0x48]
0x00003a02      4931e9         xor r9, rbp
0x00003a05      4c334f40       xor r9, qword [rdi + 0x40]
0x00003a09      48036c2438     add rbp, qword [rsp + 0x38]
0x00003a0e      4c31da         xor rdx, r11
0x00003a11      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003a15      4901cf         add r15, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003a18      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003a1c      4d31f8         xor r8, r15                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003a1f      4d01ce         add r14, r9
0x00003a22      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003a26      4d31f5         xor r13, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003a29      4c01c3         add rbx, r8
0x00003a2c      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003a30      4831d9         xor rcx, rbx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003a33      4c01ed         add rbp, r13
0x00003a36      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003a3a      4931e9         xor r9, rbp                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003a3d      498d040f       lea rax, [r15 + rcx]
0x00003a41      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003a45      49bff1361d5f.  movabs r15, 0xa54ff53a5f1d36f1          ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003a4f      4d01ce         add r14, r9
0x00003a52      4931c0         xor r8, rax
0x00003a55      4889442408     mov qword [rsp + 8], rax
0x00003a5a      488b8424e800.  mov rax, qword [rsp + 0xe8]
0x00003a62      4d31f5         xor r13, r14
0x00003a65      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003a68      49d1c5         rol r13, 1
0x00003a6b      48335750       xor rdx, qword [rdi + 0x50]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003a6f      4c035c2458     add r11, qword [rsp + 0x58]
0x00003a74      4901c2         add r10, rax
0x00003a77      4c03542460     add r10, qword [rsp + 0x60]
0x00003a7c      4c896c2418     mov qword [rsp + 0x18], r13             ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003a81      49bd79217e13.  movabs r13, 0x5be0cd19137e2179          ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003a8b      48036c2470     add rbp, qword [rsp + 0x70]
0x00003a90      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003a94      4d31d5         xor r13, r10                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003a97      4c336f58       xor r13, qword [rdi + 0x58]
0x00003a9b      4c03542468     add r10, qword [rsp + 0x68]
0x00003aa0      4901d4         add r12, rdx
0x00003aa3      4c01c5         add rbp, r8
0x00003aa6      4c31e6         xor rsi, r12
0x00003aa9      48c1ce18       ror rsi, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003aad      49c1c520       rol r13, 0x20
0x00003ab1      4901f3         add r11, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003ab4      4d01ef         add r15, r13
0x00003ab7      4c31da         xor rdx, r11
0x00003aba      4c31f8         xor rax, r15
0x00003abd      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ac1      48c1c818       ror rax, 0x18
0x00003ac5      4901d4         add r12, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003ac8      4901c2         add r10, rax
0x00003acb      4c31e6         xor rsi, r12
0x00003ace      4d31d5         xor r13, r10
0x00003ad1      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ad4      49c1cd10       ror r13, 0x10
0x00003ad8      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003adb      4931ed         xor r13, rbp
0x00003ade      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ae2      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003ae5      4d01ec         add r12, r13
0x00003ae8      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003aeb      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003aee      48036c2478     add rbp, qword [rsp + 0x78]
0x00003af3      48039c248000.  add rbx, qword [rsp + 0x80]
0x00003afb      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003aff      4c039c249000.  add r11, qword [rsp + 0x90]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003b07      4c01c5         add rbp, r8
0x00003b0a      4801f3         add rbx, rsi
0x00003b0d      4931ed         xor r13, rbp
0x00003b10      4931d9         xor r9, rbx
0x00003b13      48039c248800.  add rbx, qword [rsp + 0x88]
0x00003b1b      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003b1f      49c1c120       rol r9, 0x20
0x00003b23      4901c3         add r11, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003b26      4d01ec         add r12, r13
0x00003b29      4c896c2420     mov qword [rsp + 0x20], r13
0x00003b2e      4f8d2c0f       lea r13, [r15 + r9]
0x00003b32      4c31d9         xor rcx, r11
0x00003b35      4c039c249800.  add r11, qword [rsp + 0x98]
0x00003b3d      4d31e0         xor r8, r12
0x00003b40      4c31ee         xor rsi, r13
0x00003b43      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003b47      49d1c0         rol r8, 1
0x00003b4a      48c1ce18       ror rsi, 0x18
0x00003b4e      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003b51      4801f3         add rbx, rsi
0x00003b54      4c31f0         xor rax, r14
0x00003b57      4931d9         xor r9, rbx
0x00003b5a      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003b5e      49c1c910       ror r9, 0x10
0x00003b62      4901c3         add r11, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003b65      4f8d7c0d00     lea r15, [r13 + r9]
0x00003b6a      4c31d9         xor rcx, r11
0x00003b6d      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00003b72      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003b76      4c31fe         xor rsi, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003b79      4c897c2410     mov qword [rsp + 0x10], r15
0x00003b7e      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003b81      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003b84      4c039424a000.  add r10, qword [rsp + 0xa0]
0x00003b8c      4c8b7c2408     mov r15, qword [rsp + 8]
0x00003b91      4803ac24a000.  add rbp, qword [rsp + 0xa0]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003b99      4c31f0         xor rax, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003b9c      48035c2450     add rbx, qword [rsp + 0x50]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003ba1      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ba4      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003ba7      4c31d2         xor rdx, r10
0x00003baa      4c039424a800.  add r10, qword [rsp + 0xa8]
0x00003bb2      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003bb6      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003bb9      4d31fd         xor r13, r15
0x00003bbc      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003bc0      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003bc3      4c31d2         xor rdx, r10
0x00003bc6      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003bca      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:200
0x00003bcd      4d31fd         xor r13, r15
0x00003bd0      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003bd3      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003bd6      4931e9         xor r9, rbp
0x00003bd9      4803ac248000.  add rbp, qword [rsp + 0x80]
0x00003be1      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003be5      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003be8      4d31f5         xor r13, r14
0x00003beb      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003bef      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003bf2      4931e9         xor r9, rbp
0x00003bf5      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003bf9      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003bfc      4d31f5         xor r13, r14
0x00003bff      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003c02      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003c05      4c035c2478     add r11, qword [rsp + 0x78]
0x00003c0a      4831d9         xor rcx, rbx
0x00003c0d      48035c2470     add rbx, qword [rsp + 0x70]
0x00003c12      4c0394249800.  add r10, qword [rsp + 0x98]
0x00003c1a      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003c1e      4c896c2418     mov qword [rsp + 0x18], r13
0x00003c23      4c8b6c2420     mov r13, qword [rsp + 0x20]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003c28      4901cf         add r15, rcx
0x00003c2b      4901f3         add r11, rsi
0x00003c2e      4d31f8         xor r8, r15
0x00003c31      4c31da         xor rdx, r11
0x00003c34      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003c38      4c039c24a800.  add r11, qword [rsp + 0xa8]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003c40      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003c44      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003c47      4901c2         add r10, rax
0x00003c4a      4901d4         add r12, rdx
0x00003c4d      4831d9         xor rcx, rbx
0x00003c50      4d31d5         xor r13, r10
0x00003c53      4c31e6         xor rsi, r12
0x00003c56      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003c5a      49c1c520       rol r13, 0x20
0x00003c5e      48c1ce18       ror rsi, 0x18
0x00003c62      4901cf         add r15, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003c65      4901f3         add r11, rsi
0x00003c68      4c897c2408     mov qword [rsp + 8], r15
0x00003c6d      4d31f8         xor r8, r15
0x00003c70      4c31da         xor rdx, r11
0x00003c73      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00003c78      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003c7b      48c1ca10       ror rdx, 0x10
0x00003c7f      4901d4         add r12, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003c82      4c31e6         xor rsi, r12
0x00003c85      4d01ef         add r15, r13
0x00003c88      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003c8b      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003c8e      4c03542460     add r10, qword [rsp + 0x60]
0x00003c93      48036c2438     add rbp, qword [rsp + 0x38]
0x00003c98      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003c9c      48035c2430     add rbx, qword [rsp + 0x30]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003ca1      4901c2         add r10, rax
0x00003ca4      4d31d5         xor r13, r10
0x00003ca7      4c01c5         add rbp, r8
0x00003caa      4801f3         add rbx, rsi
0x00003cad      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003cb1      4931d9         xor r9, rbx                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003cb4      48035c2440     add rbx, qword [rsp + 0x40]
0x00003cb9      4d01ef         add r15, r13
0x00003cbc      4931ed         xor r13, rbp
0x00003cbf      4803ac249000.  add rbp, qword [rsp + 0x90]
0x00003cc7      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ccb      49c1c120       rol r9, 0x20
0x00003ccf      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003cd2      4d01ec         add r12, r13
0x00003cd5      4d01cf         add r15, r9
0x00003cd8      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003cdb      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003cde      4c31fe         xor rsi, r15
0x00003ce1      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ce5      48c1ce18       ror rsi, 0x18
0x00003ce9      4c01c5         add rbp, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003cec      4801f3         add rbx, rsi
0x00003cef      4931ed         xor r13, rbp
0x00003cf2      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003cf6      4d01ec         add r12, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003cf9      4c896c2420     mov qword [rsp + 0x20], r13
0x00003cfe      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00003d03      4d31e0         xor r8, r12
0x00003d06      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003d09      4931d9         xor r9, rbx                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003d0c      4c039c248800.  add r11, qword [rsp + 0x88]
0x00003d14      4c03542458     add r10, qword [rsp + 0x58]
0x00003d19      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003d1d      4d01cf         add r15, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003d20      4c31fe         xor rsi, r15
0x00003d23      4c897c2410     mov qword [rsp + 0x10], r15
0x00003d28      4c8b7c2408     mov r15, qword [rsp + 8]
0x00003d2d      4901c3         add r11, rax
0x00003d30      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003d33      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003d36      4c31d9         xor rcx, r11
0x00003d39      4c035c2468     add r11, qword [rsp + 0x68]
0x00003d3e      4c31d2         xor rdx, r10
0x00003d41      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003d45      4c03542448     add r10, qword [rsp + 0x48]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003d4a      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003d4e      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003d51      4901d7         add r15, rdx
0x00003d54      4c31f0         xor rax, r14
0x00003d57      4d31fd         xor r13, r15
0x00003d5a      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003d5e      49c1cd18       ror r13, 0x18
0x00003d62      4901c3         add r11, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003d65      4d01ea         add r10, r13
0x00003d68      4c31d9         xor rcx, r11
0x00003d6b      4c31d2         xor rdx, r10
0x00003d6e      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003d72      48c1ca10       ror rdx, 0x10
0x00003d76      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:201
0x00003d79      4901d7         add r15, rdx
0x00003d7c      4c31f0         xor rax, r14
0x00003d7f      4d31fd         xor r13, r15
0x00003d82      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003d85      49d1c5         rol r13, 1
0x00003d88      4803ac248800.  add rbp, qword [rsp + 0x88]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003d90      48039c249000.  add rbx, qword [rsp + 0x90]
0x00003d98      4c01ed         add rbp, r13
0x00003d9b      4c01c3         add rbx, r8
0x00003d9e      4931e9         xor r9, rbp
0x00003da1      48036c2470     add rbp, qword [rsp + 0x70]
0x00003da6      4831d9         xor rcx, rbx
0x00003da9      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003dad      48c1c120       rol rcx, 0x20
0x00003db1      48035c2430     add rbx, qword [rsp + 0x30]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003db6      4d01ce         add r14, r9
0x00003db9      4901cf         add r15, rcx
0x00003dbc      4d31f5         xor r13, r14
0x00003dbf      4d31f8         xor r8, r15
0x00003dc2      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003dc6      49c1c818       ror r8, 0x18
0x00003dca      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003dcd      4c01c3         add rbx, r8
0x00003dd0      4931e9         xor r9, rbp
0x00003dd3      4831d9         xor rcx, rbx
0x00003dd6      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003dda      48c1c910       ror rcx, 0x10
0x00003dde      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003de1      4901cf         add r15, rcx
0x00003de4      4d31f5         xor r13, r14
0x00003de7      4c897c2408     mov qword [rsp + 8], r15
0x00003dec      4d31f8         xor r8, r15
0x00003def      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003df2      49d1c0         rol r8, 1
0x00003df5      4c896c2418     mov qword [rsp + 0x18], r13
0x00003dfa      4c035c2458     add r11, qword [rsp + 0x58]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003dff      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x00003e04      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00003e09      4901f3         add r11, rsi
0x00003e0c      4c31da         xor rdx, r11
0x00003e0f      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003e13      4c039424a800.  add r10, qword [rsp + 0xa8]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003e1b      4c035c2440     add r11, qword [rsp + 0x40]
0x00003e20      4901d4         add r12, rdx
0x00003e23      4803ac248000.  add rbp, qword [rsp + 0x80]
0x00003e2b      4c31e6         xor rsi, r12
0x00003e2e      48c1ce18       ror rsi, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003e32      4901c2         add r10, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003e35      4901f3         add r11, rsi
0x00003e38      4d31d5         xor r13, r10
0x00003e3b      4c0394249800.  add r10, qword [rsp + 0x98]
0x00003e43      4c31da         xor rdx, r11
0x00003e46      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003e4a      4c01c5         add rbp, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003e4d      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003e51      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003e54      4901d4         add r12, rdx
0x00003e57      4c31f8         xor rax, r15
0x00003e5a      4c31e6         xor rsi, r12
0x00003e5d      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003e61      48d1c6         rol rsi, 1
0x00003e64      4901c2         add r10, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003e67      4d31d5         xor r13, r10
0x00003e6a      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003e6e      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003e71      4931ed         xor r13, rbp
0x00003e74      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003e78      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003e7b      4d01ec         add r12, r13
0x00003e7e      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003e81      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003e84      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003e88      4803ac24a000.  add rbp, qword [rsp + 0xa0]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003e90      48035c2448     add rbx, qword [rsp + 0x48]
0x00003e95      4c035c2468     add r11, qword [rsp + 0x68]
0x00003e9a      4801f3         add rbx, rsi
0x00003e9d      4c01c5         add rbp, r8
0x00003ea0      4931d9         xor r9, rbx
0x00003ea3      4901c3         add r11, rax
0x00003ea6      48035c2460     add rbx, qword [rsp + 0x60]
0x00003eab      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003eaf      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003eb2      4c035c2438     add r11, qword [rsp + 0x38]
0x00003eb7      4d01cf         add r15, r9
0x00003eba      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ebe      4931ed         xor r13, rbp                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003ec1      4c31fe         xor rsi, r15
0x00003ec4      4901ce         add r14, rcx
0x00003ec7      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ecb      48c1ce18       ror rsi, 0x18
0x00003ecf      4c31f0         xor rax, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003ed2      4d01ec         add r12, r13
0x00003ed5      4801f3         add rbx, rsi
0x00003ed8      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003edc      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003edf      4931d9         xor r9, rbx
0x00003ee2      4901c3         add r11, rax
0x00003ee5      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ee8      49c1c910       ror r9, 0x10
0x00003eec      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003eef      4c896c2420     mov qword [rsp + 0x20], r13
0x00003ef4      4d01cf         add r15, r9
0x00003ef7      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003efb      4c8b6c2418     mov r13, qword [rsp + 0x18]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003f00      4c31fe         xor rsi, r15
0x00003f03      4c897c2410     mov qword [rsp + 0x10], r15
0x00003f08      4c8b7c2408     mov r15, qword [rsp + 8]
0x00003f0d      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f10      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003f13      4c03542478     add r10, qword [rsp + 0x78]
0x00003f18      48036c2468     add rbp, qword [rsp + 0x68]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003f1d      4c31f0         xor rax, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003f20      48035c2448     add rbx, qword [rsp + 0x48]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003f25      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f28      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003f2b      4c31d2         xor rdx, r10
0x00003f2e      4c03542450     add r10, qword [rsp + 0x50]
0x00003f33      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f37      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003f3a      4d31fd         xor r13, r15
0x00003f3d      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f41      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003f44      4c31d2         xor rdx, r10
0x00003f47      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f4b      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:202
0x00003f4e      4d31fd         xor r13, r15
0x00003f51      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f54      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003f57      4931e9         xor r9, rbp
0x00003f5a      48036c2478     add rbp, qword [rsp + 0x78]
0x00003f5f      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f63      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003f66      4d31f5         xor r13, r14
0x00003f69      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f6d      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003f70      4931e9         xor r9, rbp
0x00003f73      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f77      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003f7a      4d31f5         xor r13, r14
0x00003f7d      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f80      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003f83      4c039c249800.  add r11, qword [rsp + 0x98]
0x00003f8b      4831d9         xor rcx, rbx
0x00003f8e      48035c2438     add rbx, qword [rsp + 0x38]
0x00003f93      4c0394248800.  add r10, qword [rsp + 0x88]
0x00003f9b      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003f9f      4c896c2418     mov qword [rsp + 0x18], r13
0x00003fa4      4c8b6c2420     mov r13, qword [rsp + 0x20]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003fa9      4901cf         add r15, rcx
0x00003fac      4901f3         add r11, rsi
0x00003faf      4d31f8         xor r8, r15
0x00003fb2      4c31da         xor rdx, r11
0x00003fb5      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003fb9      4c039c249000.  add r11, qword [rsp + 0x90]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003fc1      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003fc5      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003fc8      4901c2         add r10, rax
0x00003fcb      4901d4         add r12, rdx
0x00003fce      4831d9         xor rcx, rbx
0x00003fd1      4d31d5         xor r13, r10
0x00003fd4      4c31e6         xor rsi, r12
0x00003fd7      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003fdb      49c1c520       rol r13, 0x20
0x00003fdf      48c1ce18       ror rsi, 0x18
0x00003fe3      4901cf         add r15, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00003fe6      4901f3         add r11, rsi
0x00003fe9      4d31f8         xor r8, r15
0x00003fec      4c897c2408     mov qword [rsp + 8], r15
0x00003ff1      4c31da         xor rdx, r11
0x00003ff4      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00003ff9      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00003ffc      48c1ca10       ror rdx, 0x10
0x00004000      4901d4         add r12, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00004003      4c31e6         xor rsi, r12
0x00004006      4d01ef         add r15, r13
0x00004009      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000400c      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x0000400f      4c039424a000.  add r10, qword [rsp + 0xa0]
0x00004017      48036c2440     add rbp, qword [rsp + 0x40]
0x0000401c      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004020      4901c2         add r10, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00004023      4d31d5         xor r13, r10
0x00004026      4c01c5         add rbp, r8
0x00004029      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000402d      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00004030      4931ed         xor r13, rbp
0x00004033      48036c2460     add rbp, qword [rsp + 0x60]
0x00004038      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000403c      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x0000403f      4d01ec         add r12, r13
0x00004042      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004045      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00004048      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000404c      4c01c5         add rbp, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x0000404f      4931ed         xor r13, rbp
0x00004052      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004056      4c896c2420     mov qword [rsp + 0x20], r13             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x0000405b      48035c2458     add rbx, qword [rsp + 0x58]
0x00004060      4d01ec         add r12, r13
0x00004063      4d31e0         xor r8, r12
0x00004066      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0000406b      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000406e      4801f3         add rbx, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00004071      4931d9         xor r9, rbx
0x00004074      48039c248000.  add rbx, qword [rsp + 0x80]
0x0000407c      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004080      4d01cf         add r15, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x00004083      4c31fe         xor rsi, r15
0x00004086      48c1ce18       ror rsi, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000408a      4801f3         add rbx, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x0000408d      4931d9         xor r9, rbx
0x00004090      4c035c2450     add r11, qword [rsp + 0x50]
0x00004095      4c039424a800.  add r10, qword [rsp + 0xa8]
0x0000409d      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000040a1      4d01cf         add r15, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x000040a4      4c897c2410     mov qword [rsp + 0x10], r15
0x000040a9      4c31fe         xor rsi, r15
0x000040ac      4c8b7c2408     mov r15, qword [rsp + 8]
0x000040b1      4901c3         add r11, rax
0x000040b4      4d01ea         add r10, r13
0x000040b7      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000040ba      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x000040bd      4c31d2         xor rdx, r10
0x000040c0      4c035c2430     add r11, qword [rsp + 0x30]
0x000040c5      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000040c9      48c1c220       rol rdx, 0x20
0x000040cd      4c03542470     add r10, qword [rsp + 0x70]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x000040d2      4901ce         add r14, rcx
0x000040d5      4901d7         add r15, rdx
0x000040d8      4c31f0         xor rax, r14
0x000040db      4d31fd         xor r13, r15
0x000040de      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000040e2      49c1cd18       ror r13, 0x18
0x000040e6      4901c3         add r11, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x000040e9      4d01ea         add r10, r13
0x000040ec      4c31d9         xor rcx, r11
0x000040ef      4c31d2         xor rdx, r10
0x000040f2      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000040f6      48c1ca10       ror rdx, 0x10
0x000040fa      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:203
0x000040fd      4901d7         add r15, rdx
0x00004100      4c31f0         xor rax, r14
0x00004103      4d31fd         xor r13, r15
0x00004106      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004109      49d1c5         rol r13, 1
0x0000410c      48036c2478     add rbp, qword [rsp + 0x78]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004111      48035c2458     add rbx, qword [rsp + 0x58]
0x00004116      4c035c2440     add r11, qword [rsp + 0x40]
0x0000411b      4c01ed         add rbp, r13
0x0000411e      4c01c3         add rbx, r8
0x00004121      4931e9         xor r9, rbp
0x00004124      48036c2430     add rbp, qword [rsp + 0x30]
0x00004129      4831d9         xor rcx, rbx
0x0000412c      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004130      48035c2468     add rbx, qword [rsp + 0x68]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004135      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004139      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x0000413c      4901f3         add r11, rsi
0x0000413f      4901cf         add r15, rcx
0x00004142      4d31f5         xor r13, r14
0x00004145      4c31da         xor rdx, r11
0x00004148      4d31f8         xor r8, r15
0x0000414b      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000414f      49c1c818       ror r8, 0x18
0x00004153      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004156      4c01c3         add rbx, r8
0x00004159      4931e9         xor r9, rbp
0x0000415c      4831d9         xor rcx, rbx
0x0000415f      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004163      48c1c910       ror rcx, 0x10
0x00004167      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x0000416a      4901cf         add r15, rcx
0x0000416d      4d31f5         xor r13, r14
0x00004170      4d31f8         xor r8, r15
0x00004173      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004176      4c897c2408     mov qword [rsp + 8], r15                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x0000417b      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000417e      48c1c220       rol rdx, 0x20
0x00004182      4c0394248000.  add r10, qword [rsp + 0x80]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x0000418a      4c896c2418     mov qword [rsp + 0x18], r13             ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000418f      4c8b6c2420     mov r13, qword [rsp + 0x20]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004194      4901d4         add r12, rdx
0x00004197      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000419c      4c035c2450     add r11, qword [rsp + 0x50]
0x000041a1      4c31e6         xor rsi, r12
0x000041a4      4803ac24a000.  add rbp, qword [rsp + 0xa0]
0x000041ac      48c1ce18       ror rsi, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000041b0      4901c2         add r10, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x000041b3      4d31d5         xor r13, r10
0x000041b6      4c039424a800.  add r10, qword [rsp + 0xa8]
0x000041be      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000041c2      4901f3         add r11, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x000041c5      4d01ef         add r15, r13
0x000041c8      4c31da         xor rdx, r11
0x000041cb      4c01c5         add rbp, r8
0x000041ce      4c31f8         xor rax, r15
0x000041d1      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000041d5      48c1c818       ror rax, 0x18
0x000041d9      4901d4         add r12, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x000041dc      4901c2         add r10, rax
0x000041df      4c31e6         xor rsi, r12
0x000041e2      4d31d5         xor r13, r10
0x000041e5      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000041e8      49c1cd10       ror r13, 0x10
0x000041ec      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x000041ef      4931ed         xor r13, rbp
0x000041f2      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000041f6      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x000041f9      4d01ec         add r12, r13
0x000041fc      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000041ff      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004202      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004206      48036c2438     add rbp, qword [rsp + 0x38]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x0000420b      48039c248800.  add rbx, qword [rsp + 0x88]
0x00004213      4c035c2460     add r11, qword [rsp + 0x60]
0x00004218      4801f3         add rbx, rsi
0x0000421b      4c01c5         add rbp, r8
0x0000421e      4931d9         xor r9, rbx
0x00004221      4901c3         add r11, rax
0x00004224      48039c249000.  add rbx, qword [rsp + 0x90]
0x0000422c      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004230      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004233      4c035c2470     add r11, qword [rsp + 0x70]
0x00004238      4d01cf         add r15, r9
0x0000423b      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000423f      4931ed         xor r13, rbp                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004242      4c31fe         xor rsi, r15
0x00004245      4901ce         add r14, rcx
0x00004248      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000424c      48c1ce18       ror rsi, 0x18
0x00004250      4c31f0         xor rax, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004253      4d01ec         add r12, r13
0x00004256      4801f3         add rbx, rsi
0x00004259      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000425d      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004260      4931d9         xor r9, rbx
0x00004263      4901c3         add r11, rax
0x00004266      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004269      49c1c910       ror r9, 0x10
0x0000426d      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004270      4c896c2420     mov qword [rsp + 0x20], r13
0x00004275      4d01cf         add r15, r9
0x00004278      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000427c      4c8b6c2418     mov r13, qword [rsp + 0x18]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004281      4c31fe         xor rsi, r15
0x00004284      4c897c2410     mov qword [rsp + 0x10], r15
0x00004289      4c8b7c2408     mov r15, qword [rsp + 8]
0x0000428e      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004291      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x00004294      4c03542448     add r10, qword [rsp + 0x48]
0x00004299      4c31f0         xor rax, r14
0x0000429c      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000429f      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x000042a2      4c31d2         xor rdx, r10
0x000042a5      4c0394249800.  add r10, qword [rsp + 0x98]
0x000042ad      48036c2440     add rbp, qword [rsp + 0x40]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000042b2      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000042b6      48035c2460     add rbx, qword [rsp + 0x60]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000042bb      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x000042be      4d31fd         xor r13, r15
0x000042c1      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000042c5      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x000042c8      4c31d2         xor rdx, r10
0x000042cb      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000042cf      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:204
0x000042d2      4d31fd         xor r13, r15
0x000042d5      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000042d8      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000042db      4931e9         xor r9, rbp
0x000042de      4803ac249000.  add rbp, qword [rsp + 0x90]
0x000042e6      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000042ea      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000042ed      4d31f5         xor r13, r14
0x000042f0      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000042f4      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000042f7      4931e9         xor r9, rbp
0x000042fa      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000042fe      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x00004301      4d31f5         xor r13, r14
0x00004304      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004307      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x0000430a      4c035c2430     add r11, qword [rsp + 0x30]
0x0000430f      4831d9         xor rcx, rbx
0x00004312      48039c248000.  add rbx, qword [rsp + 0x80]
0x0000431a      4c03542470     add r10, qword [rsp + 0x70]
0x0000431f      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004323      4c896c2418     mov qword [rsp + 0x18], r13
0x00004328      4c8b6c2420     mov r13, qword [rsp + 0x20]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x0000432d      4901cf         add r15, rcx
0x00004330      4901f3         add r11, rsi
0x00004333      4d31f8         xor r8, r15
0x00004336      4c31da         xor rdx, r11
0x00004339      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000433d      4c039c248800.  add r11, qword [rsp + 0x88]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x00004345      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004349      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x0000434c      4901c2         add r10, rax
0x0000434f      4901d4         add r12, rdx
0x00004352      4831d9         xor rcx, rbx
0x00004355      4d31d5         xor r13, r10
0x00004358      4c31e6         xor rsi, r12
0x0000435b      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000435f      49c1c520       rol r13, 0x20
0x00004363      48c1ce18       ror rsi, 0x18
0x00004367      4901cf         add r15, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x0000436a      4901f3         add r11, rsi
0x0000436d      4c897c2408     mov qword [rsp + 8], r15
0x00004372      4d31f8         xor r8, r15
0x00004375      4c31da         xor rdx, r11
0x00004378      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000437d      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004380      48c1ca10       ror rdx, 0x10
0x00004384      4901d4         add r12, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x00004387      4c31e6         xor rsi, r12
0x0000438a      4d01ef         add r15, r13
0x0000438d      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004390      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x00004393      4c03542448     add r10, qword [rsp + 0x48]
0x00004398      48036c2450     add rbp, qword [rsp + 0x50]
0x0000439d      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000043a1      48035c2468     add rbx, qword [rsp + 0x68]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000043a6      4901c2         add r10, rax
0x000043a9      4d31d5         xor r13, r10
0x000043ac      4c01c5         add rbp, r8
0x000043af      4801f3         add rbx, rsi
0x000043b2      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000043b6      4931d9         xor r9, rbx                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000043b9      48035c2458     add rbx, qword [rsp + 0x58]
0x000043be      4d01ef         add r15, r13
0x000043c1      4931ed         xor r13, rbp
0x000043c4      4803ac249800.  add rbp, qword [rsp + 0x98]
0x000043cc      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000043d0      49c1c120       rol r9, 0x20
0x000043d4      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000043d7      4d01ec         add r12, r13
0x000043da      4d01cf         add r15, r9
0x000043dd      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000043e0      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000043e3      4c31fe         xor rsi, r15
0x000043e6      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000043ea      48c1ce18       ror rsi, 0x18
0x000043ee      4c01c5         add rbp, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000043f1      4801f3         add rbx, rsi
0x000043f4      4931ed         xor r13, rbp
0x000043f7      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000043fb      4d01ec         add r12, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x000043fe      4c896c2420     mov qword [rsp + 0x20], r13
0x00004403      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00004408      4d31e0         xor r8, r12
0x0000440b      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000440e      4931d9         xor r9, rbx                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x00004411      4c039c24a800.  add r11, qword [rsp + 0xa8]
0x00004419      4c03542438     add r10, qword [rsp + 0x38]
0x0000441e      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004422      4d01cf         add r15, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x00004425      4c31fe         xor rsi, r15
0x00004428      4c897c2410     mov qword [rsp + 0x10], r15
0x0000442d      4c8b7c2408     mov r15, qword [rsp + 8]
0x00004432      4901c3         add r11, rax
0x00004435      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004438      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x0000443b      4c31d9         xor rcx, r11
0x0000443e      4c039c24a000.  add r11, qword [rsp + 0xa0]
0x00004446      4c31d2         xor rdx, r10
0x00004449      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000444d      4c03542478     add r10, qword [rsp + 0x78]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x00004452      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004456      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x00004459      4901d7         add r15, rdx
0x0000445c      4c31f0         xor rax, r14
0x0000445f      4d31fd         xor r13, r15
0x00004462      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004466      49c1cd18       ror r13, 0x18
0x0000446a      4901c3         add r11, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x0000446d      4d01ea         add r10, r13
0x00004470      4c31d9         xor rcx, r11
0x00004473      4c31d2         xor rdx, r10
0x00004476      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000447a      48c1ca10       ror rdx, 0x10
0x0000447e      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:205
0x00004481      4901d7         add r15, rdx
0x00004484      4c31f0         xor rax, r14
0x00004487      4d31fd         xor r13, r15
0x0000448a      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000448d      49d1c5         rol r13, 1
0x00004490      4803ac249000.  add rbp, qword [rsp + 0x90]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004498      48035c2438     add rbx, qword [rsp + 0x38]
0x0000449d      4c039c24a000.  add r11, qword [rsp + 0xa0]
0x000044a5      4c01ed         add rbp, r13
0x000044a8      4c01c3         add rbx, r8
0x000044ab      4931e9         xor r9, rbp
0x000044ae      4831d9         xor rcx, rbx
0x000044b1      48036c2458     add rbp, qword [rsp + 0x58]
0x000044b6      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000044ba      48c1c120       rol rcx, 0x20
0x000044be      48039c24a800.  add rbx, qword [rsp + 0xa8]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x000044c6      4d01ce         add r14, r9
0x000044c9      4901cf         add r15, rcx
0x000044cc      4901f3         add r11, rsi
0x000044cf      4d31f5         xor r13, r14
0x000044d2      4d31f8         xor r8, r15
0x000044d5      4c31da         xor rdx, r11
0x000044d8      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000044dc      49c1c818       ror r8, 0x18
0x000044e0      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x000044e3      4c01c3         add rbx, r8
0x000044e6      4931e9         xor r9, rbp
0x000044e9      4831d9         xor rcx, rbx
0x000044ec      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000044f0      48c1c910       ror rcx, 0x10
0x000044f4      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x000044f7      4901cf         add r15, rcx
0x000044fa      4d31f5         xor r13, r14
0x000044fd      4d31f8         xor r8, r15
0x00004500      4c897c2408     mov qword [rsp + 8], r15
0x00004505      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004508      49d1c0         rol r8, 1
0x0000450b      48c1c220       rol rdx, 0x20
0x0000450f      4c896c2418     mov qword [rsp + 0x18], r13
0x00004514      4c039c249800.  add r11, qword [rsp + 0x98]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x0000451c      4901d4         add r12, rdx
0x0000451f      4c03542450     add r10, qword [rsp + 0x50]
0x00004524      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x00004529      4c31e6         xor rsi, r12
0x0000452c      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00004531      48036c2430     add rbp, qword [rsp + 0x30]
0x00004536      48c1ce18       ror rsi, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000453a      4901f3         add r11, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x0000453d      4901c2         add r10, rax
0x00004540      4c31da         xor rdx, r11
0x00004543      4d31d5         xor r13, r10
0x00004546      4c0394248000.  add r10, qword [rsp + 0x80]
0x0000454e      4c01c5         add rbp, r8
0x00004551      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004555      48c1ca10       ror rdx, 0x10
0x00004559      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x0000455c      4901d4         add r12, rdx
0x0000455f      4c31f8         xor rax, r15
0x00004562      4c31e6         xor rsi, r12
0x00004565      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004569      48d1c6         rol rsi, 1
0x0000456c      4901c2         add r10, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x0000456f      4d31d5         xor r13, r10
0x00004572      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004576      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004579      4931ed         xor r13, rbp
0x0000457c      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004580      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004583      4d01ec         add r12, r13
0x00004586      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004589      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x0000458c      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004590      48036c2468     add rbp, qword [rsp + 0x68]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004595      48035c2460     add rbx, qword [rsp + 0x60]
0x0000459a      4c035c2478     add r11, qword [rsp + 0x78]
0x0000459f      4801f3         add rbx, rsi
0x000045a2      4c01c5         add rbp, r8
0x000045a5      4931d9         xor r9, rbx
0x000045a8      4901c3         add r11, rax
0x000045ab      48035c2448     add rbx, qword [rsp + 0x48]
0x000045b0      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000045b4      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x000045b7      4c035c2440     add r11, qword [rsp + 0x40]
0x000045bc      4d01cf         add r15, r9
0x000045bf      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000045c3      4931ed         xor r13, rbp                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x000045c6      4c31fe         xor rsi, r15
0x000045c9      4901ce         add r14, rcx
0x000045cc      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000045d0      48c1ce18       ror rsi, 0x18
0x000045d4      4c31f0         xor rax, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x000045d7      4d01ec         add r12, r13
0x000045da      4801f3         add rbx, rsi
0x000045dd      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000045e1      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x000045e4      4931d9         xor r9, rbx
0x000045e7      4901c3         add r11, rax
0x000045ea      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000045ed      49c1c910       ror r9, 0x10
0x000045f1      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x000045f4      4c896c2420     mov qword [rsp + 0x20], r13
0x000045f9      4d01cf         add r15, r9
0x000045fc      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004600      4c8b6c2418     mov r13, qword [rsp + 0x18]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004605      4c31fe         xor rsi, r15
0x00004608      4c897c2410     mov qword [rsp + 0x10], r15
0x0000460d      4c8b7c2408     mov r15, qword [rsp + 8]
0x00004612      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004615      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004618      4c03542470     add r10, qword [rsp + 0x70]
0x0000461d      4803ac249800.  add rbp, qword [rsp + 0x98]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004625      4c31f0         xor rax, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004628      48035c2468     add rbx, qword [rsp + 0x68]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x0000462d      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004630      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004633      4c31d2         xor rdx, r10
0x00004636      4c0394248800.  add r10, qword [rsp + 0x88]
0x0000463e      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004642      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004645      4d31fd         xor r13, r15
0x00004648      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000464c      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x0000464f      4c31d2         xor rdx, r10
0x00004652      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004656      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:206
0x00004659      4d31fd         xor r13, r15
0x0000465c      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000465f      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004662      4931e9         xor r9, rbp
0x00004665      4803ac248800.  add rbp, qword [rsp + 0x88]
0x0000466d      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004671      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004674      4d31f5         xor r13, r14
0x00004677      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000467b      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x0000467e      4931e9         xor r9, rbp
0x00004681      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004685      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004688      4d31f5         xor r13, r14
0x0000468b      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000468e      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004691      4c039c249000.  add r11, qword [rsp + 0x90]
0x00004699      4831d9         xor rcx, rbx
0x0000469c      48039c24a000.  add rbx, qword [rsp + 0xa0]
0x000046a4      4c03542448     add r10, qword [rsp + 0x48]
0x000046a9      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000046ad      4c896c2418     mov qword [rsp + 0x18], r13
0x000046b2      4c8b6c2420     mov r13, qword [rsp + 0x20]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x000046b7      4901cf         add r15, rcx
0x000046ba      4901f3         add r11, rsi
0x000046bd      4d31f8         xor r8, r15
0x000046c0      4c31da         xor rdx, r11
0x000046c3      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000046c7      4c035c2438     add r11, qword [rsp + 0x38]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x000046cc      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000046d0      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x000046d3      4901c2         add r10, rax
0x000046d6      4901d4         add r12, rdx
0x000046d9      4831d9         xor rcx, rbx
0x000046dc      4d31d5         xor r13, r10
0x000046df      4c31e6         xor rsi, r12
0x000046e2      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000046e6      49c1c520       rol r13, 0x20
0x000046ea      48c1ce18       ror rsi, 0x18
0x000046ee      4901cf         add r15, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x000046f1      4901f3         add r11, rsi
0x000046f4      4d31f8         xor r8, r15
0x000046f7      4c897c2408     mov qword [rsp + 8], r15
0x000046fc      4c31da         xor rdx, r11
0x000046ff      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00004704      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004707      48c1ca10       ror rdx, 0x10
0x0000470b      4901d4         add r12, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x0000470e      4c31e6         xor rsi, r12
0x00004711      4d01ef         add r15, r13
0x00004714      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004717      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x0000471a      4c03542478     add r10, qword [rsp + 0x78]
0x0000471f      48036c2458     add rbp, qword [rsp + 0x58]
0x00004724      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004728      4901c2         add r10, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x0000472b      4d31d5         xor r13, r10
0x0000472e      4c01c5         add rbp, r8
0x00004731      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004735      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004738      4931ed         xor r13, rbp
0x0000473b      48036c2430     add rbp, qword [rsp + 0x30]
0x00004740      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004744      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004747      4d01ec         add r12, r13
0x0000474a      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000474d      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004750      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004754      4c01c5         add rbp, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004757      4931ed         xor r13, rbp
0x0000475a      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000475e      4c896c2420     mov qword [rsp + 0x20], r13             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004763      48039c24a800.  add rbx, qword [rsp + 0xa8]
0x0000476b      4d01ec         add r12, r13
0x0000476e      4d31e0         xor r8, r12
0x00004771      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00004776      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004779      4801f3         add rbx, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x0000477c      4931d9         xor r9, rbx
0x0000477f      48035c2450     add rbx, qword [rsp + 0x50]
0x00004784      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004788      4d01cf         add r15, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x0000478b      4c31fe         xor rsi, r15
0x0000478e      48c1ce18       ror rsi, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004792      4801f3         add rbx, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004795      4931d9         xor r9, rbx
0x00004798      4c035c2470     add r11, qword [rsp + 0x70]
0x0000479d      4c03542440     add r10, qword [rsp + 0x40]
0x000047a2      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000047a6      4d01cf         add r15, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x000047a9      4c897c2410     mov qword [rsp + 0x10], r15
0x000047ae      4c31fe         xor rsi, r15
0x000047b1      4c8b7c2408     mov r15, qword [rsp + 8]
0x000047b6      4901c3         add r11, rax
0x000047b9      4d01ea         add r10, r13
0x000047bc      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000047bf      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x000047c2      4c31d2         xor rdx, r10
0x000047c5      4c035c2460     add r11, qword [rsp + 0x60]
0x000047ca      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000047ce      48c1c220       rol rdx, 0x20
0x000047d2      4c0394248000.  add r10, qword [rsp + 0x80]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x000047da      4901ce         add r14, rcx
0x000047dd      4901d7         add r15, rdx
0x000047e0      4c31f0         xor rax, r14
0x000047e3      4d31fd         xor r13, r15
0x000047e6      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000047ea      49c1cd18       ror r13, 0x18
0x000047ee      4901c3         add r11, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x000047f1      4d01ea         add r10, r13
0x000047f4      4c31d9         xor rcx, r11
0x000047f7      4c31d2         xor rdx, r10
0x000047fa      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000047fe      48c1ca10       ror rdx, 0x10
0x00004802      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:207
0x00004805      4901d7         add r15, rdx
0x00004808      4c31f0         xor rax, r14
0x0000480b      4d31fd         xor r13, r15
0x0000480e      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004811      49d1c5         rol r13, 1
0x00004814      48036c2460     add rbp, qword [rsp + 0x60]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x00004819      48039c24a000.  add rbx, qword [rsp + 0xa0]
0x00004821      4c039c248800.  add r11, qword [rsp + 0x88]
0x00004829      4c01ed         add rbp, r13
0x0000482c      4c01c3         add rbx, r8
0x0000482f      4931e9         xor r9, rbp
0x00004832      4803ac24a800.  add rbp, qword [rsp + 0xa8]
0x0000483a      4831d9         xor rcx, rbx
0x0000483d      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004841      48035c2478     add rbx, qword [rsp + 0x78]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x00004846      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000484a      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x0000484d      4901f3         add r11, rsi
0x00004850      4901cf         add r15, rcx
0x00004853      4d31f5         xor r13, r14
0x00004856      4c31da         xor rdx, r11
0x00004859      4d31f8         xor r8, r15
0x0000485c      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004860      49c1c818       ror r8, 0x18
0x00004864      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x00004867      4c01c3         add rbx, r8
0x0000486a      4931e9         xor r9, rbp
0x0000486d      4831d9         xor rcx, rbx
0x00004870      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004874      48c1c910       ror rcx, 0x10
0x00004878      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x0000487b      4901cf         add r15, rcx
0x0000487e      4d31f5         xor r13, r14
0x00004881      4d31f8         xor r8, r15
0x00004884      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004887      4c897c2408     mov qword [rsp + 8], r15                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x0000488c      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000488f      48c1c220       rol rdx, 0x20
0x00004893      4c03542430     add r10, qword [rsp + 0x30]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x00004898      4c896c2418     mov qword [rsp + 0x18], r13             ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000489d      4c8b6c2420     mov r13, qword [rsp + 0x20]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x000048a2      4901d4         add r12, rdx
0x000048a5      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x000048aa      4c035c2448     add r11, qword [rsp + 0x48]
0x000048af      4c31e6         xor rsi, r12
0x000048b2      4803ac249000.  add rbp, qword [rsp + 0x90]
0x000048ba      48c1ce18       ror rsi, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000048be      4901c2         add r10, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x000048c1      4d31d5         xor r13, r10
0x000048c4      4c03542470     add r10, qword [rsp + 0x70]
0x000048c9      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000048cd      4901f3         add r11, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x000048d0      4d01ef         add r15, r13
0x000048d3      4c31da         xor rdx, r11
0x000048d6      4c01c5         add rbp, r8
0x000048d9      4c31f8         xor rax, r15
0x000048dc      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000048e0      48c1c818       ror rax, 0x18
0x000048e4      4901d4         add r12, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x000048e7      4901c2         add r10, rax
0x000048ea      4c31e6         xor rsi, r12
0x000048ed      4d31d5         xor r13, r10
0x000048f0      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000048f3      49c1cd10       ror r13, 0x10
0x000048f7      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x000048fa      4931ed         xor r13, rbp
0x000048fd      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004901      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x00004904      4d01ec         add r12, r13
0x00004907      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x0000490a      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x0000490d      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004911      48036c2440     add rbp, qword [rsp + 0x40]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x00004916      48039c249800.  add rbx, qword [rsp + 0x98]
0x0000491e      4c035c2438     add r11, qword [rsp + 0x38]
0x00004923      4801f3         add rbx, rsi
0x00004926      4c01c5         add rbp, r8
0x00004929      4931d9         xor r9, rbx
0x0000492c      4901c3         add r11, rax
0x0000492f      48035c2468     add rbx, qword [rsp + 0x68]
0x00004934      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004938      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x0000493b      4c035c2450     add r11, qword [rsp + 0x50]
0x00004940      4d01cf         add r15, r9
0x00004943      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004947      4931ed         xor r13, rbp                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x0000494a      4c31fe         xor rsi, r15
0x0000494d      4901ce         add r14, rcx
0x00004950      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004954      48c1ce18       ror rsi, 0x18
0x00004958      4c31f0         xor rax, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x0000495b      4d01ec         add r12, r13
0x0000495e      4801f3         add rbx, rsi
0x00004961      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004965      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x00004968      4931d9         xor r9, rbx
0x0000496b      4901c3         add r11, rax
0x0000496e      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004971      49c1c910       ror r9, 0x10
0x00004975      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x00004978      4c896c2420     mov qword [rsp + 0x20], r13
0x0000497d      4d01cf         add r15, r9
0x00004980      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004984      4c8b6c2418     mov r13, qword [rsp + 0x18]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x00004989      4c31fe         xor rsi, r15
0x0000498c      4c897c2410     mov qword [rsp + 0x10], r15
0x00004991      4c8b7c2408     mov r15, qword [rsp + 8]
0x00004996      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004999      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x0000499c      4c0394248000.  add r10, qword [rsp + 0x80]
0x000049a4      4c31f0         xor rax, r14
0x000049a7      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000049aa      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x000049ad      4c31d2         xor rdx, r10
0x000049b0      4c03542458     add r10, qword [rsp + 0x58]
0x000049b5      4803ac248000.  add rbp, qword [rsp + 0x80]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x000049bd      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000049c1      48035c2470     add rbx, qword [rsp + 0x70]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x000049c6      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x000049c9      4d31fd         xor r13, r15
0x000049cc      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000049d0      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x000049d3      4c31d2         xor rdx, r10
0x000049d6      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000049da      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:208
0x000049dd      4d31fd         xor r13, r15
0x000049e0      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000049e3      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x000049e6      4931e9         xor r9, rbp
0x000049e9      48036c2440     add rbp, qword [rsp + 0x40]
0x000049ee      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000049f2      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x000049f5      4d31f5         xor r13, r14
0x000049f8      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x000049fc      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x000049ff      4931e9         xor r9, rbp
0x00004a02      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004a06      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004a09      4d31f5         xor r13, r14
0x00004a0c      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004a0f      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004a12      4c035c2468     add r11, qword [rsp + 0x68]
0x00004a17      4831d9         xor rcx, rbx
0x00004a1a      48035c2450     add rbx, qword [rsp + 0x50]
0x00004a1f      4c03542438     add r10, qword [rsp + 0x38]
0x00004a24      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004a28      4c896c2418     mov qword [rsp + 0x18], r13
0x00004a2d      4c8b6c2420     mov r13, qword [rsp + 0x20]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004a32      4901cf         add r15, rcx
0x00004a35      4901f3         add r11, rsi
0x00004a38      4d31f8         xor r8, r15
0x00004a3b      4c31da         xor rdx, r11
0x00004a3e      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004a42      4c035c2460     add r11, qword [rsp + 0x60]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004a47      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004a4b      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004a4e      4901c2         add r10, rax
0x00004a51      4901d4         add r12, rdx
0x00004a54      4831d9         xor rcx, rbx
0x00004a57      4d31d5         xor r13, r10
0x00004a5a      4c31e6         xor rsi, r12
0x00004a5d      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004a61      49c1c520       rol r13, 0x20
0x00004a65      48c1ce18       ror rsi, 0x18
0x00004a69      4901cf         add r15, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004a6c      4901f3         add r11, rsi
0x00004a6f      4c897c2408     mov qword [rsp + 8], r15
0x00004a74      4d31f8         xor r8, r15
0x00004a77      4c31da         xor rdx, r11
0x00004a7a      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00004a7f      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004a82      48c1ca10       ror rdx, 0x10
0x00004a86      4901d4         add r12, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004a89      4c31e6         xor rsi, r12
0x00004a8c      4d01ef         add r15, r13
0x00004a8f      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004a92      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004a95      4c03542458     add r10, qword [rsp + 0x58]
0x00004a9a      4803ac24a800.  add rbp, qword [rsp + 0xa8]
0x00004aa2      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004aa6      48035c2478     add rbx, qword [rsp + 0x78]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004aab      4901c2         add r10, rax
0x00004aae      4d31d5         xor r13, r10
0x00004ab1      4c01c5         add rbp, r8
0x00004ab4      4801f3         add rbx, rsi
0x00004ab7      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004abb      4931d9         xor r9, rbx                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004abe      48039c24a000.  add rbx, qword [rsp + 0xa0]
0x00004ac6      4d01ef         add r15, r13
0x00004ac9      4931ed         xor r13, rbp
0x00004acc      4803ac248800.  add rbp, qword [rsp + 0x88]
0x00004ad4      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004ad8      49c1c120       rol r9, 0x20
0x00004adc      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004adf      4d01ec         add r12, r13
0x00004ae2      4d01cf         add r15, r9
0x00004ae5      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004ae8      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004aeb      4c31fe         xor rsi, r15
0x00004aee      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004af2      48c1ce18       ror rsi, 0x18
0x00004af6      4c01c5         add rbp, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004af9      4801f3         add rbx, rsi
0x00004afc      4931ed         xor r13, rbp
0x00004aff      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004b03      4d01ec         add r12, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004b06      4c896c2420     mov qword [rsp + 0x20], r13
0x00004b0b      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00004b10      4d31e0         xor r8, r12
0x00004b13      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004b16      4931d9         xor r9, rbx                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004b19      4c035c2448     add r11, qword [rsp + 0x48]
0x00004b1e      4c0394249800.  add r10, qword [rsp + 0x98]
0x00004b26      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004b2a      4d01cf         add r15, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004b2d      4c31fe         xor rsi, r15
0x00004b30      4c897c2410     mov qword [rsp + 0x10], r15
0x00004b35      4c8b7c2408     mov r15, qword [rsp + 8]
0x00004b3a      4901c3         add r11, rax
0x00004b3d      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004b40      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004b43      4c31d9         xor rcx, r11
0x00004b46      4c039c249000.  add r11, qword [rsp + 0x90]
0x00004b4e      4c31d2         xor rdx, r10
0x00004b51      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004b55      4c03542430     add r10, qword [rsp + 0x30]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004b5a      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004b5e      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004b61      4901d7         add r15, rdx
0x00004b64      4c31f0         xor rax, r14
0x00004b67      4d31fd         xor r13, r15
0x00004b6a      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004b6e      49c1cd18       ror r13, 0x18
0x00004b72      4901c3         add r11, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004b75      4d01ea         add r10, r13
0x00004b78      4c31d9         xor rcx, r11
0x00004b7b      4c31d2         xor rdx, r10
0x00004b7e      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004b82      48c1ca10       ror rdx, 0x10
0x00004b86      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:209
0x00004b89      4901d7         add r15, rdx
0x00004b8c      4c31f0         xor rax, r14
0x00004b8f      4d31fd         xor r13, r15
0x00004b92      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004b95      49d1c5         rol r13, 1
0x00004b98      48036c2430     add rbp, qword [rsp + 0x30]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004b9d      48035c2440     add rbx, qword [rsp + 0x40]
0x00004ba2      4c035c2450     add r11, qword [rsp + 0x50]
0x00004ba7      4c01ed         add rbp, r13
0x00004baa      4c01c3         add rbx, r8
0x00004bad      4931e9         xor r9, rbp
0x00004bb0      4831d9         xor rcx, rbx
0x00004bb3      48036c2438     add rbp, qword [rsp + 0x38]
0x00004bb8      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004bbc      48c1c120       rol rcx, 0x20
0x00004bc0      48035c2448     add rbx, qword [rsp + 0x48]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004bc5      4d01ce         add r14, r9
0x00004bc8      4901cf         add r15, rcx
0x00004bcb      4901f3         add r11, rsi
0x00004bce      4d31f5         xor r13, r14
0x00004bd1      4d31f8         xor r8, r15
0x00004bd4      4c31da         xor rdx, r11
0x00004bd7      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004bdb      49c1c818       ror r8, 0x18
0x00004bdf      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004be2      4c01c3         add rbx, r8
0x00004be5      4931e9         xor r9, rbp
0x00004be8      4831d9         xor rcx, rbx
0x00004beb      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004bef      48c1c910       ror rcx, 0x10
0x00004bf3      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004bf6      4901cf         add r15, rcx
0x00004bf9      4d31f5         xor r13, r14
0x00004bfc      4d31f8         xor r8, r15
0x00004bff      4c897c2408     mov qword [rsp + 8], r15
0x00004c04      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004c07      49d1c0         rol r8, 1
0x00004c0a      48c1c220       rol rdx, 0x20
0x00004c0e      4c896c2418     mov qword [rsp + 0x18], r13
0x00004c13      4c035c2458     add r11, qword [rsp + 0x58]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004c18      4901d4         add r12, rdx
0x00004c1b      4c03542460     add r10, qword [rsp + 0x60]
0x00004c20      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x00004c25      4c31e6         xor rsi, r12
0x00004c28      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00004c2d      48036c2470     add rbp, qword [rsp + 0x70]
0x00004c32      48c1ce18       ror rsi, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004c36      4901f3         add r11, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004c39      4901c2         add r10, rax
0x00004c3c      4c31da         xor rdx, r11
0x00004c3f      4d31d5         xor r13, r10
0x00004c42      4c03542468     add r10, qword [rsp + 0x68]
0x00004c47      4c01c5         add rbp, r8
0x00004c4a      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004c4e      48c1ca10       ror rdx, 0x10
0x00004c52      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004c55      4901d4         add r12, rdx
0x00004c58      4c31f8         xor rax, r15
0x00004c5b      4c31e6         xor rsi, r12
0x00004c5e      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004c62      48d1c6         rol rsi, 1
0x00004c65      4901c2         add r10, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004c68      4d31d5         xor r13, r10
0x00004c6b      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004c6f      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004c72      4931ed         xor r13, rbp
0x00004c75      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004c79      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004c7c      4d01ec         add r12, r13
0x00004c7f      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004c82      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004c85      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004c89      48036c2478     add rbp, qword [rsp + 0x78]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004c8e      48039c248000.  add rbx, qword [rsp + 0x80]
0x00004c96      4c039c249000.  add r11, qword [rsp + 0x90]
0x00004c9e      4801f3         add rbx, rsi
0x00004ca1      4c01c5         add rbp, r8
0x00004ca4      4931d9         xor r9, rbx
0x00004ca7      4901c3         add r11, rax
0x00004caa      48039c248800.  add rbx, qword [rsp + 0x88]
0x00004cb2      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004cb6      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004cb9      4c039c249800.  add r11, qword [rsp + 0x98]
0x00004cc1      4d01cf         add r15, r9
0x00004cc4      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004cc8      4931ed         xor r13, rbp                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004ccb      4c31fe         xor rsi, r15
0x00004cce      4901ce         add r14, rcx
0x00004cd1      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004cd5      48c1ce18       ror rsi, 0x18
0x00004cd9      4c31f0         xor rax, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004cdc      4d01ec         add r12, r13
0x00004cdf      4801f3         add rbx, rsi
0x00004ce2      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004ce6      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004ce9      4931d9         xor r9, rbx
0x00004cec      4901c3         add r11, rax
0x00004cef      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004cf2      49c1c910       ror r9, 0x10
0x00004cf6      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004cf9      4c896c2420     mov qword [rsp + 0x20], r13
0x00004cfe      4d01cf         add r15, r9
0x00004d01      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d05      4c8b6c2418     mov r13, qword [rsp + 0x18]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004d0a      4c31fe         xor rsi, r15
0x00004d0d      4c897c2410     mov qword [rsp + 0x10], r15
0x00004d12      4c8b7c2408     mov r15, qword [rsp + 8]
0x00004d17      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d1a      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004d1d      4c039424a000.  add r10, qword [rsp + 0xa0]
0x00004d25      4803ac24a000.  add rbp, qword [rsp + 0xa0]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004d2d      4c31f0         xor rax, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004d30      48035c2450     add rbx, qword [rsp + 0x50]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004d35      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d38      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004d3b      4c31d2         xor rdx, r10
0x00004d3e      4c039424a800.  add r10, qword [rsp + 0xa8]
0x00004d46      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d4a      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004d4d      4d31fd         xor r13, r15
0x00004d50      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d54      4d01ea         add r10, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004d57      4c31d2         xor rdx, r10
0x00004d5a      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d5e      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:210
0x00004d61      4d31fd         xor r13, r15
0x00004d64      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d67      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004d6a      4931e9         xor r9, rbp
0x00004d6d      4803ac248000.  add rbp, qword [rsp + 0x80]
0x00004d75      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d79      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004d7c      4d31f5         xor r13, r14
0x00004d7f      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d83      4c01ed         add rbp, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004d86      4931e9         xor r9, rbp
0x00004d89      49c1c910       ror r9, 0x10                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d8d      4d01ce         add r14, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004d90      4d31f5         xor r13, r14
0x00004d93      49d1c5         rol r13, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004d96      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004d99      4c035c2478     add r11, qword [rsp + 0x78]
0x00004d9e      4831d9         xor rcx, rbx
0x00004da1      48035c2470     add rbx, qword [rsp + 0x70]
0x00004da6      4c0394249800.  add r10, qword [rsp + 0x98]
0x00004dae      48c1c120       rol rcx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004db2      4c896c2418     mov qword [rsp + 0x18], r13
0x00004db7      4c8b6c2420     mov r13, qword [rsp + 0x20]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004dbc      4901cf         add r15, rcx
0x00004dbf      4901f3         add r11, rsi
0x00004dc2      4d31f8         xor r8, r15
0x00004dc5      4c31da         xor rdx, r11
0x00004dc8      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004dcc      4c039c24a800.  add r11, qword [rsp + 0xa8]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004dd4      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004dd8      4c01c3         add rbx, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004ddb      4901c2         add r10, rax
0x00004dde      4901d4         add r12, rdx
0x00004de1      4831d9         xor rcx, rbx
0x00004de4      4d31d5         xor r13, r10
0x00004de7      4c31e6         xor rsi, r12
0x00004dea      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004dee      49c1c520       rol r13, 0x20
0x00004df2      48c1ce18       ror rsi, 0x18
0x00004df6      4901cf         add r15, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004df9      4901f3         add r11, rsi
0x00004dfc      4d31f8         xor r8, r15
0x00004dff      4c897c2408     mov qword [rsp + 8], r15
0x00004e04      4c31da         xor rdx, r11
0x00004e07      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00004e0c      49d1c0         rol r8, 1                               ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004e0f      48c1ca10       ror rdx, 0x10
0x00004e13      4901d4         add r12, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004e16      4c31e6         xor rsi, r12
0x00004e19      4d01ef         add r15, r13
0x00004e1c      48d1c6         rol rsi, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004e1f      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004e22      4c03542460     add r10, qword [rsp + 0x60]
0x00004e27      48036c2438     add rbp, qword [rsp + 0x38]
0x00004e2c      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004e30      4901c2         add r10, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004e33      4d31d5         xor r13, r10
0x00004e36      4c01c5         add rbp, r8
0x00004e39      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004e3d      4d01ef         add r15, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004e40      4931ed         xor r13, rbp
0x00004e43      4803ac249000.  add rbp, qword [rsp + 0x90]
0x00004e4b      49c1c520       rol r13, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004e4f      4c31f8         xor rax, r15                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004e52      4d01ec         add r12, r13
0x00004e55      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004e58      4d31e0         xor r8, r12                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004e5b      49c1c818       ror r8, 0x18                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004e5f      4c01c5         add rbp, r8                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004e62      4931ed         xor r13, rbp
0x00004e65      4889ac24b000.  mov qword [rsp + 0xb0], rbp
0x00004e6d      49c1cd10       ror r13, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004e71      4c89ac242801.  mov qword [rsp + 0x128], r13            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004e79      48035c2430     add rbx, qword [rsp + 0x30]
0x00004e7e      4d01ec         add r12, r13
0x00004e81      4c89a4240001.  mov qword [rsp + 0x100], r12
0x00004e89      4d31c4         xor r12, r8
0x00004e8c      49d1c4         rol r12, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004e8f      4c89a424d800.  mov qword [rsp + 0xd8], r12
0x00004e97      4801f3         add rbx, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004e9a      4931d9         xor r9, rbx
0x00004e9d      48035c2440     add rbx, qword [rsp + 0x40]
0x00004ea2      49c1c120       rol r9, 0x20                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004ea6      4d01cf         add r15, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004ea9      4c31fe         xor rsi, r15
0x00004eac      48c1ce18       ror rsi, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004eb0      4801f3         add rbx, rsi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004eb3      48899c24b800.  mov qword [rsp + 0xb8], rbx
0x00004ebb      4c31cb         xor rbx, r9
0x00004ebe      4c039c248800.  add r11, qword [rsp + 0x88]
0x00004ec6      48c1cb10       ror rbx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004eca      4901df         add r15, rbx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004ecd      48899c241001.  mov qword [rsp + 0x110], rbx
0x00004ed5      4c89bc240801.  mov qword [rsp + 0x108], r15
0x00004edd      4931f7         xor r15, rsi
0x00004ee0      4901c3         add r11, rax
0x00004ee3      49d1c7         rol r15, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004ee6      4c31d9         xor rcx, r11                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004ee9      4c035c2468     add r11, qword [rsp + 0x68]
0x00004eee      4c89bc24e000.  mov qword [rsp + 0xe0], r15             ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004ef6      48c1c120       rol rcx, 0x20
0x00004efa      4c8b7c2408     mov r15, qword [rsp + 8]                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004eff      4901ce         add r14, rcx
0x00004f02      4c31f0         xor rax, r14
0x00004f05      48c1c818       ror rax, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004f09      4901c3         add r11, rax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004f0c      4c31d9         xor rcx, r11
0x00004f0f      4c899c24c000.  mov qword [rsp + 0xc0], r11
0x00004f17      48c1c910       ror rcx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004f1b      4901ce         add r14, rcx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004f1e      48898c241801.  mov qword [rsp + 0x118], rcx
0x00004f26      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00004f2b      4c31f0         xor rax, r14
0x00004f2e      4c89b424f000.  mov qword [rsp + 0xf0], r14
0x00004f36      48d1c0         rol rax, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004f39      48898424e800.  mov qword [rsp + 0xe8], rax
0x00004f41      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004f46      4c01d1         add rcx, r10
0x00004f49      4801c1         add rcx, rax
0x00004f4c      4831ca         xor rdx, rcx
0x00004f4f      48034c2448     add rcx, qword [rsp + 0x48]
0x00004f54      48c1c220       rol rdx, 0x20                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004f58      4901d7         add r15, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004f5b      4c31f8         xor rax, r15
0x00004f5e      4989c5         mov r13, rax
0x00004f61      49c1cd18       ror r13, 0x18                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004f65      4a8d0429       lea rax, [rcx + r13]                    ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004f69      4831c2         xor rdx, rax
0x00004f6c      48898424c800.  mov qword [rsp + 0xc8], rax
0x00004f74      48c1ca10       ror rdx, 0x10                           ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004f78      488994242001.  mov qword [rsp + 0x120], rdx            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:211
0x00004f80      4c01fa         add rdx, r15
0x00004f83      48899424f800.  mov qword [rsp + 0xf8], rdx
0x00004f8b      4c31ea         xor rdx, r13
0x00004f8e      48d1c2         rol rdx, 1                              ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004f91      31c0           xor eax, eax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:213
0x00004f93      48899424d000.  mov qword [rsp + 0xd0], rdx             ; ../coreutils-8.31/src/blake2/blake2-impl.h:150
0x00004f9b      488b542428     mov rdx, qword [rsp + 0x28]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:213
0x00004fa0      eb0f           jmp 0x4fb1
0x00004fa2      660f1f440000   nop word [rax + rax]
0x00004fa8      488b2cc2       mov rbp, qword [rdx + rax*8]
0x00004fac      4c8b74c240     mov r14, qword [rdx + rax*8 + 0x40]
0x00004fb1      4c31f5         xor rbp, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:214
0x00004fb4      48312cc7       xor qword [rdi + rax*8], rbp
0x00004fb8      4883c001       add rax, 1                              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:213
0x00004fbc      4883f808       cmp rax, 8
0x00004fc0      75e6           jne 0x4fa8
0x00004fc2      488b84243801.  mov rax, qword [rsp + 0x138]            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:216
0x00004fca      644833042528.  xor rax, qword fs:[0x28]
0x00004fd3      7512           jne 0x4fe7
0x00004fd5      4881c4480100.  add rsp, 0x148
0x00004fdc      5b             pop rbx
0x00004fdd      5d             pop rbp
0x00004fde      415c           pop r12
0x00004fe0      415d           pop r13
0x00004fe2      415e           pop r14
0x00004fe4      415f           pop r15
0x00004fe6      c3             ret
0x00004fe7      e8f4c8ffff     call sym.imp.__stack_chk_fail
0x00004fec      0f1f4000       nop dword [rax]
;-- blake2b_update.part.3:
0x00004ff0      4157           push r15                                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:221
0x00004ff2      4156           push r14
0x00004ff4      4155           push r13
0x00004ff6      4154           push r12
0x00004ff8      41bd80000000   mov r13d, 0x80                          ; ../coreutils-8.31/src/blake2/blake2b-ref.c:227
0x00004ffe      55             push rbp                                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:221
0x00004fff      53             push rbx
0x00005000      4889fb         mov rbx, rdi
0x00005003      4c8d7360       lea r14, [rbx + 0x60]
0x00005007      4889f5         mov rbp, rsi
0x0000500a      4989d4         mov r12, rdx
0x0000500d      4883ec08       sub rsp, 8
0x00005011      488bbfe00000.  mov rdi, qword [rdi + 0xe0]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:226
0x00005018      4929fd         sub r13, rdi                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:227
0x0000501b      4c01f7         add rdi, r14
0x0000501e      4939d5         cmp r13, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:228
0x00005021      7225           jb 0x5048
0x00005023      4c89e2         mov rdx, r12                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005026      4889ee         mov rsi, rbp
0x00005029      e8e2c9ffff     call sym.imp.memcpy
0x0000502e      4c01a3e00000.  add qword [rbx + 0xe0], r12             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:243
0x00005035      4883c408       add rsp, 8                              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:246
0x00005039      5b             pop rbx
0x0000503a      5d             pop rbp
0x0000503b      415c           pop r12
0x0000503d      415d           pop r13
0x0000503f      415e           pop r14
0x00005041      415f           pop r15
0x00005043      c3             ret
0x00005044      0f1f4000       nop dword [rax]
0x00005048      4c89ea         mov rdx, r13                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000504b      48c783e00000.  mov qword [rbx + 0xe0], 0               ; ../coreutils-8.31/src/blake2/blake2b-ref.c:230
0x00005056      e8b5c9ffff     call sym.imp.memcpy                     ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000505b      488b4340       mov rax, qword [rbx + 0x40]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:68
0x0000505f      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:233
0x00005062      4889df         mov rdi, rbx
0x00005065      4883e880       sub rax, 0xffffffffffffff80             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:68
0x00005069      4883f87f       cmp rax, 0x7f                           ; ../coreutils-8.31/src/blake2/blake2b-ref.c:69
0x0000506d      48894340       mov qword [rbx + 0x40], rax             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:68
0x00005071      0f96c0         setbe al                                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:69
0x00005074      4d29ec         sub r12, r13                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:234
0x00005077      4c01ed         add rbp, r13
0x0000507a      0fb6c0         movzx eax, al                           ; ../coreutils-8.31/src/blake2/blake2b-ref.c:69
0x0000507d      48014348       add qword [rbx + 0x48], rax
0x00005081      e87ae8ffff     call sym.blake2b_compress               ; ../coreutils-8.31/src/blake2/blake2b-ref.c:233
0x00005086      4981fc800000.  cmp r12, 0x80                           ; ../coreutils-8.31/src/blake2/blake2b-ref.c:235
0x0000508d      765b           jbe 0x50ea
0x0000508f      4d8dbc247fff.  lea r15, [r12 - 0x81]
0x00005097      49c1ef07       shr r15, 7
0x0000509b      4d8d6f01       lea r13, [r15 + 1]
0x0000509f      49c1e507       shl r13, 7
0x000050a3      4901ed         add r13, rbp
0x000050a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000050b0      488b4340       mov rax, qword [rbx + 0x40]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:68
0x000050b4      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:237
0x000050b7      4889df         mov rdi, rbx
0x000050ba      4883e880       sub rax, 0xffffffffffffff80             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:68
0x000050be      4883f87f       cmp rax, 0x7f                           ; ../coreutils-8.31/src/blake2/blake2b-ref.c:69
0x000050c2      48894340       mov qword [rbx + 0x40], rax             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:68
0x000050c6      0f96c0         setbe al                                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:69
0x000050c9      4883ed80       sub rbp, 0xffffffffffffff80             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:238
0x000050cd      0fb6c0         movzx eax, al                           ; ../coreutils-8.31/src/blake2/blake2b-ref.c:69
0x000050d0      48014348       add qword [rbx + 0x48], rax
0x000050d4      e827e8ffff     call sym.blake2b_compress               ; ../coreutils-8.31/src/blake2/blake2b-ref.c:237
0x000050d9      4939ed         cmp r13, rbp                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:235
0x000050dc      75d2           jne 0x50b0
0x000050de      49f7df         neg r15
0x000050e1      49c1e707       shl r15, 7
0x000050e5      4f8d643c80     lea r12, [r12 + r15 - 0x80]
0x000050ea      488bbbe00000.  mov rdi, qword [rbx + 0xe0]
0x000050f1      4c01f7         add rdi, r14
0x000050f4      e92affffff     jmp 0x5023
0x000050f9      0f1f80000000.  nop dword [rax]
;-- blake2b_init_param:
0x00005100      48c747400000.  mov qword [rdi + 0x40], 0               ; ../coreutils-8.31/src/blake2/blake2b-ref.c:82
0x00005108      48c787f00000.  mov qword [rdi + 0xf0], 0
0x00005113      4989f8         mov r8, rdi
0x00005116      488d7f48       lea rdi, [rdi + 0x48]                   ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x0000511a      4489c0         mov eax, r8d
0x0000511d      48ba08c9bcf3.  movabs rdx, 0x6a09e667f3bcc908          ; ../coreutils-8.31/src/blake2/blake2b-ref.c:77
0x00005127      4883e7f8       and rdi, 0xfffffffffffffff8             ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x0000512b      29f8           sub eax, edi
0x0000512d      8d88f8000000   lea ecx, [rax + 0xf8]
0x00005133      31c0           xor eax, eax
0x00005135      c1e903         shr ecx, 3
0x00005138      f348ab         rep stosq qword [rdi], rax
0x0000513b      48b83ba7ca84.  movabs rax, 0xbb67ae8584caa73b          ; ../coreutils-8.31/src/blake2/blake2b-ref.c:77
0x00005145      498910         mov qword [r8], rdx
0x00005148      49894008       mov qword [r8 + 8], rax
0x0000514c      48b82bf894fe.  movabs rax, 0x3c6ef372fe94f82b
0x00005156      49894010       mov qword [r8 + 0x10], rax
0x0000515a      48b8f1361d5f.  movabs rax, 0xa54ff53a5f1d36f1
0x00005164      49894018       mov qword [r8 + 0x18], rax
0x00005168      48b8d182e6ad.  movabs rax, 0x510e527fade682d1
0x00005172      49894020       mov qword [r8 + 0x20], rax
0x00005176      48b81f6c3e2b.  movabs rax, 0x9b05688c2b3e6c1f
0x00005180      49894028       mov qword [r8 + 0x28], rax
0x00005184      48b86bbd41fb.  movabs rax, 0x1f83d9abfb41bd6b
0x0000518e      49894030       mov qword [r8 + 0x30], rax
0x00005192      48b879217e13.  movabs rax, 0x5be0cd19137e2179
0x0000519c      49894038       mov qword [r8 + 0x38], rax
0x000051a0      31c0           xor eax, eax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:89
0x000051a2      eb08           jmp 0x51ac
0x000051a4      0f1f4000       nop dword [rax]
0x000051a8      498b14c0       mov rdx, qword [r8 + rax*8]
0x000051ac      483314c6       xor rdx, qword [rsi + rax*8]            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:90
0x000051b0      498914c0       mov qword [r8 + rax*8], rdx
0x000051b4      4883c001       add rax, 1                              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:89
0x000051b8      4883f808       cmp rax, 8
0x000051bc      75ea           jne 0x51a8
0x000051be      0fb606         movzx eax, byte [rsi]                   ; ../coreutils-8.31/src/blake2/blake2b-ref.c:92
0x000051c1      498980e80000.  mov qword [r8 + 0xe8], rax
0x000051c8      31c0           xor eax, eax                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:94
0x000051ca      c3             ret
0x000051cb      0f1f440000     nop dword [rax + rax]
;-- blake2b_init:
0x000051d0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/src/blake2/blake2b-ref.c:99
0x000051d4      64488b042528.  mov rax, qword fs:[0x28]
0x000051dd      4889442448     mov qword [rsp + 0x48], rax
0x000051e2      31c0           xor eax, eax
0x000051e4      488d46ff       lea rax, [rsi - 1]                      ; ../coreutils-8.31/src/blake2/blake2b-ref.c:102
0x000051e8      4883f83f       cmp rax, 0x3f
0x000051ec      7762           ja 0x5250
0x000051ee      660fefc0       pxor xmm0, xmm0                         ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x000051f2      40883424       mov byte [rsp], sil                     ; ../coreutils-8.31/src/blake2/blake2b-ref.c:104
0x000051f6      31c0           xor eax, eax                            ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x000051f8      4889e6         mov rsi, rsp
0x000051fb      48c744241200.  mov qword [rsp + 0x12], 0
0x00005204      48c744240100.  mov qword [rsp + 1], 0x10100            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:105 ; [0x10100:8]=-1
0x0000520d      c7461a000000.  mov dword [rsi + 0x1a], 0               ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00005214      6689461e       mov word [rsi + 0x1e], ax
0x00005218      48c744240900.  mov qword [rsp + 9], 0                  ; ../coreutils-8.31/src/blake2/blake2-impl.h:97
0x00005221      c644241100     mov byte [rsp + 0x11], 0                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:111
0x00005226      0f29442420     movaps xmmword [rsp + 0x20], xmm0       ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x0000522b      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x00005230      e8cbfeffff     call sym.blake2b_init_param             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:116
0x00005235      488b542448     mov rdx, qword [rsp + 0x48]             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:117
0x0000523a      644833142528.  xor rdx, qword fs:[0x28]
0x00005243      7512           jne 0x5257
0x00005245      4883c458       add rsp, 0x58
0x00005249      c3             ret
0x0000524a      660f1f440000   nop word [rax + rax]
0x00005250      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/src/blake2/blake2b-ref.c:102 ; -1
0x00005255      ebde           jmp 0x5235
0x00005257      e884c6ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/src/blake2/blake2b-ref.c:117
0x0000525c      0f1f4000       nop dword [rax]
;-- blake2b_init_key:
0x00005260      55             push rbp                                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:121
0x00005261      53             push rbx
0x00005262      4881ecd80000.  sub rsp, 0xd8
0x00005269      64488b042528.  mov rax, qword fs:[0x28]
0x00005272      48898424c800.  mov qword [rsp + 0xc8], rax
0x0000527a      31c0           xor eax, eax
0x0000527c      488d46ff       lea rax, [rsi - 1]                      ; ../coreutils-8.31/src/blake2/blake2b-ref.c:124
0x00005280      4883f83f       cmp rax, 0x3f
0x00005284      0f87d6000000   ja 0x5360
0x0000528a      488d41ff       lea rax, [rcx - 1]                      ; ../coreutils-8.31/src/blake2/blake2b-ref.c:126
0x0000528e      4989c9         mov r9, rcx
0x00005291      4883f83f       cmp rax, 0x3f
0x00005295      0f87c5000000   ja 0x5360
0x0000529b      4885d2         test rdx, rdx
0x0000529e      4989d2         mov r10, rdx
0x000052a1      0f84b9000000   je 0x5360
0x000052a7      660fefc0       pxor xmm0, xmm0                         ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x000052ab      31c0           xor eax, eax
0x000052ad      40883424       mov byte [rsp], sil                     ; ../coreutils-8.31/src/blake2/blake2b-ref.c:128
0x000052b1      4889e6         mov rsi, rsp                            ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x000052b4      48c744241200.  mov qword [rsp + 0x12], 0
0x000052bd      4889fd         mov rbp, rdi
0x000052c0      c7461a000000.  mov dword [rsi + 0x1a], 0
0x000052c7      6689461e       mov word [rsi + 0x1e], ax
0x000052cb      884c2401       mov byte [rsp + 1], cl                  ; ../coreutils-8.31/src/blake2/blake2b-ref.c:129
0x000052cf      48c744240201.  mov qword [rsp + 2], 0x101              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:130 ; [0x101:8]=0xf0000000000020c9
0x000052d8      48c744240a00.  mov qword [rsp + 0xa], 0                ; ../coreutils-8.31/src/blake2/blake2-impl.h:98
0x000052e1      0f29442420     movaps xmmword [rsp + 0x20], xmm0       ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x000052e6      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x000052eb      e810feffff     call sym.blake2b_init_param
0x000052f0      85c0           test eax, eax
0x000052f2      786c           js 0x5360
0x000052f4      488d5c2440     lea rbx, [rsp + 0x40]
0x000052f9      31c0           xor eax, eax
0x000052fb      b910000000     mov ecx, 0x10
0x00005300      4c89ca         mov rdx, r9                             ; ../coreutils-8.31/src/blake2/blake2b-ref.c:6
0x00005303      4c89d6         mov rsi, r10
0x00005306      4889df         mov rdi, rbx
0x00005309      f348ab         rep stosq qword [rdi], rax
0x0000530c      b980000000     mov ecx, 0x80
0x00005311      4889df         mov rdi, rbx
0x00005314      e8d7c6ffff     call sym.imp.__memcpy_chk
0x00005319      ba80000000     mov edx, 0x80
0x0000531e      4889de         mov rsi, rbx
0x00005321      4889ef         mov rdi, rbp
0x00005324      e8c7fcffff     call sym.blake2b_update.part.3          ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-20
0x00005329      488b05e87c20.  mov rax, qword [obj.memset_v.3512]      ; [0x20d018:8]=0
0x00005330      ba80000000     mov edx, 0x80
0x00005335      31f6           xor esi, esi
0x00005337      4889df         mov rdi, rbx
0x0000533a      ffd0           call rax
0x0000533c      31c0           xor eax, eax
0x0000533e      488b9424c800.  mov rdx, qword [rsp + 0xc8]
0x00005346      644833142528.  xor rdx, qword fs:[0x28]                ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-23
0x0000534f      7516           jne 0x5367
0x00005351      4881c4d80000.  add rsp, 0xd8
0x00005358      5b             pop rbx
0x00005359      5d             pop rbp
0x0000535a      c3             ret
0x0000535b      0f1f440000     nop dword [rax + rax]
0x00005360      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005365      ebd7           jmp 0x533e                              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-22
0x00005367      e874c5ffff     call sym.imp.__stack_chk_fail
0x0000536c      0f1f4000       nop dword [rax]
;-- blake2b_update:
0x00005370      4885d2         test rdx, rdx
0x00005373      7413           je 0x5388
0x00005375      4883ec08       sub rsp, 8
0x00005379      e872fcffff     call sym.blake2b_update.part.3
0x0000537e      31c0           xor eax, eax
0x00005380      4883c408       add rsp, 8
0x00005384      c3             ret
0x00005385      0f1f00         nop dword [rax]
0x00005388      31c0           xor eax, eax
0x0000538a      c3             ret
0x0000538b      0f1f440000     nop dword [rax + rax]
;-- blake2b_final:
0x00005390      4154           push r12
0x00005392      55             push rbp
0x00005393      53             push rbx
0x00005394      660fefc0       pxor xmm0, xmm0
0x00005398      4883ec50       sub rsp, 0x50
0x0000539c      64488b042528.  mov rax, qword fs:[0x28]
0x000053a5      4889442448     mov qword [rsp + 0x48], rax
0x000053aa      31c0           xor eax, eax
0x000053ac      4885f6         test rsi, rsi
0x000053af      0f290424       movaps xmmword [rsp], xmm0              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-203
0x000053b3      0f29442410     movaps xmmword [rsp + 0x10], xmm0       ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-211
0x000053b8      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000053bd      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x000053c2      0f842d010000   je 0x54f5
0x000053c8      4889fb         mov rbx, rdi
0x000053cb      483997e80000.  cmp qword [rdi + 0xe8], rdx
0x000053d2      0f871d010000   ja 0x54f5                               ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-209
0x000053d8      48837f5000     cmp qword [rdi + 0x50], 0
0x000053dd      0f8512010000   jne 0x54f5                              ; string_fortified.h:-201
0x000053e3      488bbfe00000.  mov rdi, qword [rdi + 0xe0]
0x000053ea      31c0           xor eax, eax
0x000053ec      4989f4         mov r12, rsi
0x000053ef      4889fa         mov rdx, rdi
0x000053f2      48035340       add rdx, qword [rbx + 0x40]
0x000053f6      0f92c0         setb al
0x000053f9      48014348       add qword [rbx + 0x48], rax
0x000053fd      80bbf0000000.  cmp byte [rbx + 0xf0], 0
0x00005404      48895340       mov qword [rbx + 0x40], rdx
0x00005408      0f85da000000   jne 0x54e8
0x0000540e      488d6b60       lea rbp, [rbx + 0x60]
0x00005412      ba80000000     mov edx, 0x80
0x00005417      31f6           xor esi, esi                            ; ../coreutils-8.31/src/blake2/blake2-impl.h:-160
0x00005419      4829fa         sub rdx, rdi
0x0000541c      48c74350ffff.  mov qword [rbx + 0x50], 0xffffffffffffffff
0x00005424      4801ef         add rdi, rbp
0x00005427      e844c5ffff     call sym.imp.memset
0x0000542c      4889ee         mov rsi, rbp
0x0000542f      4889df         mov rdi, rbx
0x00005432      4889e5         mov rbp, rsp
0x00005435      e8c6e4ffff     call sym.blake2b_compress
0x0000543a      488d7d40       lea rdi, [rbp + 0x40]
0x0000543e      4889d9         mov rcx, rbx
0x00005441      4889e8         mov rax, rbp
0x00005444      0f1f4000       nop dword [rax]
0x00005448      488b11         mov rdx, qword [rcx]
0x0000544b      4883c008       add rax, 8
0x0000544f      4883c108       add rcx, 8
0x00005453      4889d6         mov rsi, rdx
0x00005456      8850f8         mov byte [rax - 8], dl
0x00005459      48c1ee08       shr rsi, 8
0x0000545d      408870f9       mov byte [rax - 7], sil
0x00005461      4889d6         mov rsi, rdx
0x00005464      48c1ee10       shr rsi, 0x10
0x00005468      408870fa       mov byte [rax - 6], sil
0x0000546c      4889d6         mov rsi, rdx
0x0000546f      48c1ee18       shr rsi, 0x18
0x00005473      408870fb       mov byte [rax - 5], sil
0x00005477      4889d6         mov rsi, rdx
0x0000547a      48c1ee20       shr rsi, 0x20
0x0000547e      408870fc       mov byte [rax - 4], sil
0x00005482      4889d6         mov rsi, rdx
0x00005485      48c1ee28       shr rsi, 0x28
0x00005489      408870fd       mov byte [rax - 3], sil
0x0000548d      4889d6         mov rsi, rdx                            ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-258
0x00005490      48c1ea38       shr rdx, 0x38
0x00005494      48c1ee30       shr rsi, 0x30
0x00005498      8850ff         mov byte [rax - 1], dl
0x0000549b      408870fe       mov byte [rax - 2], sil
0x0000549f      4839f8         cmp rax, rdi
0x000054a2      75a4           jne 0x5448
0x000054a4      488b93e80000.  mov rdx, qword [rbx + 0xe8]
0x000054ab      4889ee         mov rsi, rbp
0x000054ae      4c89e7         mov rdi, r12
0x000054b1      e85ac5ffff     call sym.imp.memcpy
0x000054b6      488b055b7b20.  mov rax, qword [obj.memset_v.3512]      ; [0x20d018:8]=0
0x000054bd      ba40000000     mov edx, 0x40                           ; segment.PHDR
0x000054c2      31f6           xor esi, esi
0x000054c4      4889ef         mov rdi, rbp
0x000054c7      ffd0           call rax
0x000054c9      31c0           xor eax, eax
0x000054cb      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000054d0      6448331c2528.  xor rbx, qword fs:[0x28]
0x000054d9      7521           jne 0x54fc
0x000054db      4883c450       add rsp, 0x50
0x000054df      5b             pop rbx
0x000054e0      5d             pop rbp
0x000054e1      415c           pop r12
0x000054e3      c3             ret
0x000054e4      0f1f4000       nop dword [rax]
0x000054e8      48c74358ffff.  mov qword [rbx + 0x58], 0xffffffffffffffff
0x000054f0      e919ffffff     jmp 0x540e
0x000054f5      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000054fa      ebcf           jmp 0x54cb                              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-242
0x000054fc      e8dfc3ffff     call sym.imp.__stack_chk_fail
0x00005501      0f1f440000     nop dword [rax + rax]
0x00005506      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-240
;-- blake2b:
0x00005510      4156           push r14
0x00005512      4155           push r13
0x00005514      4989d6         mov r14, rdx
0x00005517      4154           push r12
0x00005519      55             push rbp
0x0000551a      53             push rbx
0x0000551b      4881ec000100.  sub rsp, 0x100
0x00005522      64488b042528.  mov rax, qword fs:[0x28]
0x0000552b      48898424f800.  mov qword [rsp + 0xf8], rax
0x00005533      31c0           xor eax, eax
0x00005535      4885d2         test rdx, rdx
0x00005538      0f94c2         sete dl
0x0000553b      4885c9         test rcx, rcx
0x0000553e      0f95c0         setne al
0x00005541      84c2           test dl, al
0x00005543      0f8597000000   jne 0x55e0
0x00005549      4885ff         test rdi, rdi
0x0000554c      4989fd         mov r13, rdi
0x0000554f      0f848b000000   je 0x55e0
0x00005555      4d85c0         test r8, r8
0x00005558      4889f3         mov rbx, rsi
0x0000555b      4889cd         mov rbp, rcx
0x0000555e      7505           jne 0x5565                              ; ../coreutils-8.31/src/blake2/blake2b-ref.c:-377
0x00005560      4d85c9         test r9, r9
0x00005563      757b           jne 0x55e0
0x00005565      488d43ff       lea rax, [rbx - 1]
0x00005569      4883f83f       cmp rax, 0x3f
0x0000556d      7771           ja 0x55e0
0x0000556f      4983f940       cmp r9, 0x40                            ; segment.PHDR
0x00005573      776b           ja 0x55e0
0x00005575      4d85c9         test r9, r9
0x00005578      4989e4         mov r12, rsp
0x0000557b      754b           jne 0x55c8
0x0000557d      4889de         mov rsi, rbx
0x00005580      4c89e7         mov rdi, r12
0x00005583      e848fcffff     call sym.blake2b_init
0x00005588      85c0           test eax, eax
0x0000558a      7854           js 0x55e0
0x0000558c      4885ed         test rbp, rbp
0x0000558f      755f           jne 0x55f0
0x00005591      4889da         mov rdx, rbx
0x00005594      4c89ee         mov rsi, r13
0x00005597      4c89e7         mov rdi, r12
0x0000559a      e8f1fdffff     call sym.blake2b_final
0x0000559f      31c0           xor eax, eax
0x000055a1      488b8c24f800.  mov rcx, qword [rsp + 0xf8]
0x000055a9      6448330c2528.  xor rcx, qword fs:[0x28]
0x000055b2      754c           jne 0x5600
0x000055b4      4881c4000100.  add rsp, 0x100
0x000055bb      5b             pop rbx
0x000055bc      5d             pop rbp
0x000055bd      415c           pop r12
0x000055bf      415d           pop r13
0x000055c1      415e           pop r14
0x000055c3      c3             ret
0x000055c4      0f1f4000       nop dword [rax]
0x000055c8      4c89c9         mov rcx, r9
0x000055cb      4c89c2         mov rdx, r8
0x000055ce      4889de         mov rsi, rbx
0x000055d1      4c89e7         mov rdi, r12
0x000055d4      e887fcffff     call sym.blake2b_init_key
0x000055d9      85c0           test eax, eax
0x000055db      79af           jns 0x558c
0x000055dd      0f1f00         nop dword [rax]
0x000055e0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000055e5      ebba           jmp 0x55a1
0x000055e7      660f1f840000.  nop word [rax + rax]
0x000055f0      4889ea         mov rdx, rbp
0x000055f3      4c89f6         mov rsi, r14
0x000055f6      4c89e7         mov rdi, r12
0x000055f9      e8f2f9ffff     call sym.blake2b_update.part.3
0x000055fe      eb91           jmp 0x5591
0x00005600      e8dbc2ffff     call sym.imp.__stack_chk_fail
0x00005605      90             nop
0x00005606      662e0f1f8400.  nop word cs:[rax + rax]
;-- blake2:
0x00005610      e9fbfeffff     jmp sym.blake2b
0x00005615      662e0f1f8400.  nop word cs:[rax + rax]
0x0000561f      90             nop
;-- blake2b_stream:
0x00005620      4157           push r15                                ; ../coreutils-8.31/src/blake2/b2sum.c:31
0x00005622      4156           push r14
0x00005624      4989d6         mov r14, rdx
0x00005627      4155           push r13
0x00005629      4154           push r12
0x0000562b      55             push rbp
0x0000562c      53             push rbx
0x0000562d      4889fb         mov rbx, rdi
0x00005630      bf00800000     mov edi, 0x8000                         ; ../coreutils-8.31/src/blake2/b2sum.c:36
0x00005635      4881ec180100.  sub rsp, 0x118                          ; ../coreutils-8.31/src/blake2/b2sum.c:31
0x0000563c      64488b042528.  mov rax, qword fs:[0x28]
0x00005645      488984240801.  mov qword [rsp + 0x108], rax
0x0000564d      31c0           xor eax, eax
0x0000564f      4889742408     mov qword [rsp + 8], rsi
0x00005654      e8d7c3ffff     call sym.imp.malloc                     ; ../coreutils-8.31/src/blake2/b2sum.c:36
0x00005659      4885c0         test rax, rax                           ; ../coreutils-8.31/src/blake2/b2sum.c:38
0x0000565c      0f84d6000000   je 0x5738
0x00005662      4c8d6c2410     lea r13, [rsp + 0x10]                   ; ../coreutils-8.31/src/blake2/b2sum.c:40
0x00005667      4c89f6         mov rsi, r14
0x0000566a      41bc00800000   mov r12d, 0x8000                        ; ../coreutils-8.31/src/blake2/b2sum.c:48
0x00005670      4889c5         mov rbp, rax
0x00005673      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/src/blake2/b2sum.c:40
0x00005676      e855fbffff     call sym.blake2b_init
0x0000567b      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/src/blake2/b2sum.c:44
0x0000567e      eb11           jmp 0x5691
0x00005680      4885c0         test rax, rax                           ; ../coreutils-8.31/src/blake2/b2sum.c:54
0x00005683      4889df         mov rdi, rbx                            ; ../coreutils-8.31/src/blake2/b2sum.c:56
0x00005686      7448           je 0x56d0                               ; ../coreutils-8.31/src/blake2/b2sum.c:54
0x00005688      e873c3ffff     call sym.imp.feof                       ; ../coreutils-8.31/src/blake2/b2sum.c:62
0x0000568d      85c0           test eax, eax
0x0000568f      754d           jne 0x56de
0x00005691      4a8d7c3d00     lea rdi, [rbp + r15]                    ; ../coreutils-8.31/src/blake2/b2sum.c:48
0x00005696      4c89e2         mov rdx, r12
0x00005699      4889d9         mov rcx, rbx                            ; stdio2.h:294   return __fread_alias (__ptr, __size, __n, __stream);
0x0000569c      4c29fa         sub rdx, r15                            ; ../coreutils-8.31/src/blake2/b2sum.c:48
0x0000569f      be01000000     mov esi, 1                              ; stdio2.h:294   return __fread_alias (__ptr, __size, __n, __stream);
0x000056a4      e8b7c1ffff     call sym.imp.fread
0x000056a9      4901c7         add r15, rax                            ; ../coreutils-8.31/src/blake2/b2sum.c:49
0x000056ac      4981ff008000.  cmp r15, 0x8000                         ; ../coreutils-8.31/src/blake2/b2sum.c:51
0x000056b3      75cb           jne 0x5680
0x000056b5      ba00800000     mov edx, 0x8000                         ; ../coreutils-8.31/src/blake2/b2sum.c:66
0x000056ba      4889ee         mov rsi, rbp
0x000056bd      4c89ef         mov rdi, r13
0x000056c0      e8abfcffff     call sym.blake2b_update
0x000056c5      ebb4           jmp 0x567b                              ; ../coreutils-8.31/src/blake2/b2sum.c:44
0x000056c7      660f1f840000.  nop word [rax + rax]
0x000056d0      e87bc1ffff     call sym.imp.ferror                     ; ../coreutils-8.31/src/blake2/b2sum.c:56
0x000056d5      85c0           test eax, eax
0x000056d7      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/src/blake2/b2sum.c:32 ; -1
0x000056dc      7517           jne 0x56f5                              ; ../coreutils-8.31/src/blake2/b2sum.c:56
0x000056de      4d85ff         test r15, r15                           ; ../coreutils-8.31/src/blake2/b2sum.c:71
0x000056e1      7545           jne 0x5728
0x000056e3      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/src/blake2/b2sum.c:73
0x000056e8      4c89f2         mov rdx, r14
0x000056eb      4c89ef         mov rdi, r13
0x000056ee      31db           xor ebx, ebx                            ; ../coreutils-8.31/src/blake2/b2sum.c:74
0x000056f0      e89bfcffff     call sym.blake2b_final                  ; ../coreutils-8.31/src/blake2/b2sum.c:73
0x000056f5      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/src/blake2/b2sum.c:76
0x000056f8      e8f3c0ffff     call sym.imp.free
0x000056fd      488b8c240801.  mov rcx, qword [rsp + 0x108]            ; ../coreutils-8.31/src/blake2/b2sum.c:78
0x00005705      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000570e      89d8           mov eax, ebx
0x00005710      752d           jne 0x573f
0x00005712      4881c4180100.  add rsp, 0x118
0x00005719      5b             pop rbx
0x0000571a      5d             pop rbp
0x0000571b      415c           pop r12
0x0000571d      415d           pop r13
0x0000571f      415e           pop r14
0x00005721      415f           pop r15
0x00005723      c3             ret
0x00005724      0f1f4000       nop dword [rax]
0x00005728      4c89fa         mov rdx, r15                            ; ../coreutils-8.31/src/blake2/b2sum.c:71
0x0000572b      4889ee         mov rsi, rbp
0x0000572e      4c89ef         mov rdi, r13
0x00005731      e83afcffff     call sym.blake2b_update
0x00005736      ebab           jmp 0x56e3
0x00005738      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/src/blake2/b2sum.c:38 ; -1
0x0000573d      ebbe           jmp 0x56fd
0x0000573f      e89cc1ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/src/blake2/b2sum.c:78
0x00005744      662e0f1f8400.  nop word cs:[rax + rax]
0x0000574e      6690           nop
;-- __argmatch_die:
0x00005750      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00005755      e926ddffff     jmp sym.usage
0x0000575a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00005760      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00005762      4156           push r14
0x00005764      4989f7         mov r15, rsi
0x00005767      4155           push r13
0x00005769      4154           push r12
0x0000576b      4989cd         mov r13, rcx
0x0000576e      55             push rbp
0x0000576f      53             push rbx
0x00005770      4889d5         mov rbp, rdx
0x00005773      4883ec28       sub rsp, 0x28
0x00005777      48897c2408     mov qword [rsp + 8], rdi
0x0000577c      4889542418     mov qword [rsp + 0x18], rdx
0x00005781      e84ac1ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00005786      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00005789      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00005791      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00005794      0f84b3000000   je 0x584d
0x0000579a      4989c4         mov r12, rax
0x0000579d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x000057a2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x000057a4      eb51           jmp 0x57f7
0x000057a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057b0      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x000057b5      4885c0         test rax, rax
0x000057b8      0f84a2000000   je 0x5860
0x000057be      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x000057c2      4c89ea         mov rdx, r13
0x000057c5      4889ee         mov rsi, rbp
0x000057c8      490faffd       imul rdi, r13
0x000057cc      4801c7         add rdi, rax
0x000057cf      e8ccc1ffff     call sym.imp.memcmp
0x000057d4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x000057d6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x000057db      b901000000     mov ecx, 1
0x000057e0      0f45c1         cmovne eax, ecx
0x000057e3      88442417       mov byte [rsp + 0x17], al
0x000057e7      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x000057eb      4c01ed         add rbp, r13
0x000057ee      4d8b34df       mov r14, qword [r15 + rbx*8]
0x000057f2      4d85f6         test r14, r14
0x000057f5      7441           je 0x5838
0x000057f7      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x000057fc      4c89e2         mov rdx, r12
0x000057ff      4c89f7         mov rdi, r14
0x00005802      e819c0ffff     call sym.imp.strncmp
0x00005807      85c0           test eax, eax
0x00005809      75dc           jne 0x57e7
0x0000580b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000580e      e8bdc0ffff     call sym.imp.strlen
0x00005813      4c39e0         cmp rax, r12
0x00005816      7458           je 0x5870
0x00005818      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0000581d      7591           jne 0x57b0
0x0000581f      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00005823      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00005827      4c01ed         add rbp, r13
0x0000582a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000582e      4d85f6         test r14, r14
0x00005831      75c4           jne 0x57f7
0x00005833      0f1f440000     nop dword [rax + rax]
0x00005838      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0000583d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00005844      480f440424     cmove rax, qword [rsp]
0x00005849      48890424       mov qword [rsp], rax
0x0000584d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00005851      4883c428       add rsp, 0x28
0x00005855      5b             pop rbx
0x00005856      5d             pop rbp
0x00005857      415c           pop r12
0x00005859      415d           pop r13
0x0000585b      415e           pop r14
0x0000585d      415f           pop r15
0x0000585f      c3             ret
0x00005860      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00005865      eb80           jmp 0x57e7
0x00005867      660f1f840000.  nop word [rax + rax]
0x00005870      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00005874      ebd7           jmp 0x584d
0x00005876      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00005880      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00005884      4154           push r12
0x00005886      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000588b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000588c      4989f4         mov r12, rsi
0x0000588f      53             push rbx
0x00005890      4889fd         mov rbp, rdi
0x00005893      744b           je 0x58e0                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00005895      488d35344600.  lea rsi, str.ambiguous_argument__s_for__s ; 0x9ed0 ; "ambiguous argument %s for %s"
0x0000589c      31ff           xor edi, edi
0x0000589e      e80dc0ffff     call sym.imp.dcgettext
0x000058a3      4889c3         mov rbx, rax
0x000058a6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x000058a9      bf01000000     mov edi, 1
0x000058ae      e8cd200000     call sym.quote_n
0x000058b3      4c89e2         mov rdx, r12
0x000058b6      4889c5         mov rbp, rax
0x000058b9      be08000000     mov esi, 8
0x000058be      31ff           xor edi, edi
0x000058c0      e8eb1c0000     call sym.quotearg_n_style
0x000058c5      4989e8         mov r8, rbp
0x000058c8      4889da         mov rdx, rbx
0x000058cb      4889c1         mov rcx, rax
0x000058ce      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x000058cf      5d             pop rbp
0x000058d0      415c           pop r12
0x000058d2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x000058d4      31ff           xor edi, edi
0x000058d6      31c0           xor eax, eax
0x000058d8      e9f3c1ffff     jmp sym.imp.error
0x000058dd      0f1f00         nop dword [rax]
0x000058e0      488d35ce4500.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x9eb5 ; "invalid argument %s for %s"
0x000058e7      31ff           xor edi, edi
0x000058e9      e8c2bfffff     call sym.imp.dcgettext
0x000058ee      4889c3         mov rbx, rax
0x000058f1      ebb3           jmp 0x58a6
0x000058f3      0f1f00         nop dword [rax]
0x000058f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00005900      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00005902      4156           push r14
0x00005904      4989fe         mov r14, rdi
0x00005907      4155           push r13
0x00005909      4154           push r12
0x0000590b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000590d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000590e      53             push rbx
0x0000590f      4889f5         mov rbp, rsi
0x00005912      488d35d44500.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x9eed ; "Valid arguments are:"
0x00005919      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0000591c      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00005921      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00005925      488b1db47720.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0e0:8]=0
0x0000592c      e87fbfffff     call sym.imp.dcgettext
0x00005931      4889c7         mov rdi, rax
0x00005934      4889de         mov rsi, rbx
0x00005937      e874c0ffff     call sym.imp.fputs_unlocked
0x0000593c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000593f      4d85ff         test r15, r15
0x00005942      0f8490000000   je 0x59d8
0x00005948      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000594b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000594d      eb39           jmp 0x5988
0x0000594f      90             nop
0x00005950      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00005953      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00005957      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000595a      e841200000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000595f      488b3d7a7720.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0e0:8]=0
0x00005966      488d15954500.  lea rdx, [0x00009f02]                   ; "\n  - %s"
0x0000596d      4889c1         mov rcx, rax
0x00005970      be01000000     mov esi, 1
0x00005975      31c0           xor eax, eax
0x00005977      4c01e5         add rbp, r12
0x0000597a      e8d1c1ffff     call sym.imp.__fprintf_chk
0x0000597f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00005983      4d85ff         test r15, r15
0x00005986      7450           je 0x59d8
0x00005988      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000598b      74c3           je 0x5950
0x0000598d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00005990      4889ee         mov rsi, rbp
0x00005993      4c89ef         mov rdi, r13
0x00005996      e805c0ffff     call sym.imp.memcmp
0x0000599b      85c0           test eax, eax
0x0000599d      75b1           jne 0x5950
0x0000599f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x000059a2      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x000059a6      4c01e5         add rbp, r12
0x000059a9      e8f21f0000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x000059ae      488b3d2b7720.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0e0:8]=0
0x000059b5      488d154e4500.  lea rdx, str.s                          ; 0x9f0a ; ", %s"
0x000059bc      4889c1         mov rcx, rax
0x000059bf      be01000000     mov esi, 1
0x000059c4      31c0           xor eax, eax
0x000059c6      e885c1ffff     call sym.imp.__fprintf_chk
0x000059cb      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x000059cf      4d85ff         test r15, r15
0x000059d2      75b4           jne 0x5988
0x000059d4      0f1f4000       nop dword [rax]
0x000059d8      488b3d017720.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0e0:8]=0
0x000059df      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x000059e3      483b4730       cmp rax, qword [rdi + 0x30]
0x000059e7      731f           jae 0x5a08
0x000059e9      488d5001       lea rdx, [rax + 1]
0x000059ed      48895728       mov qword [rdi + 0x28], rdx
0x000059f1      c6000a         mov byte [rax], 0xa
0x000059f4      4883c408       add rsp, 8
0x000059f8      5b             pop rbx
0x000059f9      5d             pop rbp
0x000059fa      415c           pop r12
0x000059fc      415d           pop r13
0x000059fe      415e           pop r14
0x00005a00      415f           pop r15
0x00005a02      c3             ret
0x00005a03      0f1f440000     nop dword [rax + rax]
0x00005a08      4883c408       add rsp, 8
0x00005a0c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x00005a11      5b             pop rbx
0x00005a12      5d             pop rbp
0x00005a13      415c           pop r12
0x00005a15      415d           pop r13
0x00005a17      415e           pop r14
0x00005a19      415f           pop r15
0x00005a1b      e900bfffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00005a20      4157           push r15
0x00005a22      4156           push r14
0x00005a24      4989fe         mov r14, rdi
0x00005a27      4155           push r13
0x00005a29      4154           push r12
0x00005a2b      4989f4         mov r12, rsi
0x00005a2e      55             push rbp
0x00005a2f      53             push rbx
0x00005a30      4889cd         mov rbp, rcx
0x00005a33      4889d3         mov rbx, rdx
0x00005a36      4c89c1         mov rcx, r8
0x00005a39      4889ea         mov rdx, rbp
0x00005a3c      4883ec08       sub rsp, 8
0x00005a40      4889de         mov rsi, rbx
0x00005a43      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00005a46      4d89c7         mov r15, r8
0x00005a49      4d89cd         mov r13, r9
0x00005a4c      e80ffdffff     call sym.argmatch
0x00005a51      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00005a54      780f           js 0x5a65                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x00005a56      4883c408       add rsp, 8
0x00005a5a      5b             pop rbx
0x00005a5b      5d             pop rbp
0x00005a5c      415c           pop r12
0x00005a5e      415d           pop r13
0x00005a60      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00005a62      415f           pop r15
0x00005a64      c3             ret
0x00005a65      4889c2         mov rdx, rax
0x00005a68      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x00005a6b      4c89f7         mov rdi, r14
0x00005a6e      e80dfeffff     call sym.argmatch_invalid
0x00005a73      4c89fa         mov rdx, r15
0x00005a76      4889ee         mov rsi, rbp
0x00005a79      4889df         mov rdi, rbx
0x00005a7c      e87ffeffff     call sym.argmatch_valid
0x00005a81      41ffd5         call r13
0x00005a84      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00005a8b      ebc9           jmp 0x5a56
0x00005a8d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00005a90      4156           push r14
0x00005a92      4155           push r13
0x00005a94      4154           push r12
0x00005a96      55             push rbp
0x00005a97      53             push rbx
0x00005a98      4c8b36         mov r14, qword [rsi]
0x00005a9b      4d85f6         test r14, r14
0x00005a9e      7431           je 0x5ad1
0x00005aa0      4989cc         mov r12, rcx
0x00005aa3      4989fd         mov r13, rdi
0x00005aa6      4889d5         mov rbp, rdx
0x00005aa9      488d5e08       lea rbx, [rsi + 8]
0x00005aad      eb10           jmp 0x5abf                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x00005aaf      90             nop
0x00005ab0      4c8b33         mov r14, qword [rbx]
0x00005ab3      4c01e5         add rbp, r12
0x00005ab6      4883c308       add rbx, 8
0x00005aba      4d85f6         test r14, r14
0x00005abd      7412           je 0x5ad1
0x00005abf      4c89e2         mov rdx, r12
0x00005ac2      4889ee         mov rsi, rbp
0x00005ac5      4c89ef         mov rdi, r13
0x00005ac8      e8d3beffff     call sym.imp.memcmp
0x00005acd      85c0           test eax, eax
0x00005acf      75df           jne 0x5ab0
0x00005ad1      5b             pop rbx
0x00005ad2      4c89f0         mov rax, r14
0x00005ad5      5d             pop rbp
0x00005ad6      415c           pop r12
0x00005ad8      415d           pop r13
0x00005ada      415e           pop r14
0x00005adc      c3             ret
0x00005add      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00005ae0      48893d417620.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20d128:8]=0
0x00005ae7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00005ae8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005af0      40883d297620.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20d120:1]=0
0x00005af7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005af8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005b00      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005b01      53             push rbx
0x00005b02      4883ec08       sub rsp, 8
0x00005b06      488b3d9b7520.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00005b0d      e80e350000     call sym.close_stream
0x00005b12      85c0           test eax, eax
0x00005b14      7416           je 0x5b2c
0x00005b16      e8f5bcffff     call sym.imp.__errno_location
0x00005b1b      803dfe752000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20d120:1]=0
0x00005b22      4889c3         mov rbx, rax
0x00005b25      741c           je 0x5b43
0x00005b27      833820         cmp dword [rax], 0x20
0x00005b2a      7517           jne 0x5b43
0x00005b2c      488b3dad7520.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0e0:8]=0
0x00005b33      e8e8340000     call sym.close_stream
0x00005b38      85c0           test eax, eax
0x00005b3a      7546           jne 0x5b82
0x00005b3c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00005b40      5b             pop rbx
0x00005b41      5d             pop rbp
0x00005b42      c3             ret
0x00005b43      488d35c54300.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x9f0f ; "write error"
0x00005b4a      31ff           xor edi, edi
0x00005b4c      ba05000000     mov edx, 5
0x00005b51      e85abdffff     call sym.imp.dcgettext
0x00005b56      488b3dcb7520.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20d128:8]=0
0x00005b5d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00005b60      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00005b63      7428           je 0x5b8d
0x00005b65      e8361c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00005b6a      8b33           mov esi, dword [rbx]
0x00005b6c      488d15a84300.  lea rdx, str.s:__s                      ; 0x9f1b ; "%s: %s"
0x00005b73      4889c1         mov rcx, rax
0x00005b76      4989e8         mov r8, rbp
0x00005b79      31ff           xor edi, edi
0x00005b7b      31c0           xor eax, eax
0x00005b7d      e84ebfffff     call sym.imp.error
0x00005b82      8b3da8742000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20d030:4]=1
0x00005b88      e8a3bcffff     call sym.imp._exit
0x00005b8d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00005b8f      488d15764300.  lea rdx, [0x00009f0c]                   ; "%s"
0x00005b96      4889c1         mov rcx, rax
0x00005b99      31ff           xor edi, edi
0x00005b9b      31c0           xor eax, eax
0x00005b9d      e82ebfffff     call sym.imp.error
0x00005ba2      ebde           jmp 0x5b82
0x00005ba4      662e0f1f8400.  nop word cs:[rax + rax]
0x00005bae      6690           nop
;-- fdadvise:
0x00005bb0      e9dbbdffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00005bb5      90             nop
0x00005bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00005bc0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00005bc3      741b           je 0x5be0
0x00005bc5      53             push rbx
0x00005bc6      89f3           mov ebx, esi
0x00005bc8      e853beffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x00005bcd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00005bcf      31d2           xor edx, edx
0x00005bd1      31f6           xor esi, esi
0x00005bd3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00005bd4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00005bd6      e9b5bdffff     jmp sym.imp.posix_fadvise
0x00005bdb      0f1f440000     nop dword [rax + rax]
0x00005be0      f3c3           ret
0x00005be2      662e0f1f8400.  nop word cs:[rax + rax]
0x00005bec      0f1f4000       nop dword [rax]
;-- fopen_safer:
0x00005bf0      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00005bf2      55             push rbp
0x00005bf3      4889f5         mov rbp, rsi
0x00005bf6      53             push rbx
0x00005bf7      e8f4beffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00005bfc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00005bff      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00005c02      740d           je 0x5c11                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00005c04      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00005c07      e814beffff     call sym.imp.fileno
0x00005c0c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x00005c0f      760f           jbe 0x5c20
0x00005c11      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00005c14      5b             pop rbx
0x00005c15      5d             pop rbp
0x00005c16      415c           pop r12
0x00005c18      c3             ret
0x00005c19      0f1f80000000.  nop dword [rax]
0x00005c20      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00005c22      e8991d0000     call sym.dup_safer
0x00005c27      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00005c29      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00005c2c      783a           js 0x5c68                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00005c2e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00005c31      e8ba2f0000     call sym.rpl_fclose
0x00005c36      85c0           test eax, eax
0x00005c38      7513           jne 0x5c4d
0x00005c3a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x00005c3d      4489e7         mov edi, r12d
0x00005c40      e84bbeffff     call sym.imp.fdopen
0x00005c45      4885c0         test rax, rax
0x00005c48      4889c3         mov rbx, rax
0x00005c4b      75c4           jne 0x5c11
0x00005c4d      e8bebbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00005c52      8b28           mov ebp, dword [rax]
0x00005c54      4889c3         mov rbx, rax
0x00005c57      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x00005c5a      e821bdffff     call sym.imp.close
0x00005c5f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00005c61      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00005c63      ebac           jmp 0x5c11
0x00005c65      0f1f00         nop dword [rax]
0x00005c68      e8a3bbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x00005c6d      448b20         mov r12d, dword [rax]
0x00005c70      4889c5         mov rbp, rax
0x00005c73      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00005c76      e8752f0000     call sym.rpl_fclose
0x00005c7b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00005c7d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00005c81      eb8e           jmp 0x5c11                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00005c83      662e0f1f8400.  nop word cs:[rax + rax]
0x00005c8d      0f1f00         nop dword [rax]
;-- set_program_name:
0x00005c90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00005c93      53             push rbx
0x00005c94      7477           je 0x5d0d                               ; ../coreutils-8.31/lib/progname.c:51
0x00005c96      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00005c9b      4889fb         mov rbx, rdi
0x00005c9e      e88dbcffff     call sym.imp.strrchr
0x00005ca3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00005ca6      7455           je 0x5cfd
0x00005ca8      4c8d4001       lea r8, [rax + 1]
0x00005cac      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00005caf      4829da         sub rdx, rbx
0x00005cb2      4883fa06       cmp rdx, 6
0x00005cb6      7e45           jle 0x5cfd
0x00005cb8      488d70fa       lea rsi, [rax - 6]
0x00005cbc      488d3d9d4200.  lea rdi, str..libs                      ; 0x9f60 ; "/.libs/"
0x00005cc3      b907000000     mov ecx, 7
0x00005cc8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005cca      0f97c2         seta dl
0x00005ccd      80da00         sbb dl, 0
0x00005cd0      84d2           test dl, dl
0x00005cd2      7529           jne 0x5cfd
0x00005cd4      488d3d8d4200.  lea rdi, [0x00009f68]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00005cdb      b903000000     mov ecx, 3
0x00005ce0      4c89c6         mov rsi, r8
0x00005ce3      4c89c3         mov rbx, r8
0x00005ce6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005ce8      0f97c2         seta dl
0x00005ceb      80da00         sbb dl, 0
0x00005cee      84d2           test dl, dl
0x00005cf0      750b           jne 0x5cfd
0x00005cf2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00005cf6      48891da37320.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20d0a0:8]=0
0x00005cfd      48891d2c7420.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20d130:8]=0
0x00005d04      48891dbd7320.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20d0c8:8]=0
0x00005d0b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00005d0c      c3             ret
0x00005d0d      488b0dcc7320.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0e0:8]=0
0x00005d14      488d3d0d4200.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x9f28 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00005d1b      ba37000000     mov edx, 0x37                           ; '7'
0x00005d20      be01000000     mov esi, 1
0x00005d25      e816beffff     call sym.imp.fwrite
0x00005d2a      e8d1baffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00005d2f      90             nop
;-- gettext_quote.part.1:
0x00005d30      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00005d31      53             push rbx
0x00005d32      4889fd         mov rbp, rdi
0x00005d35      89f3           mov ebx, esi
0x00005d37      4883ec08       sub rsp, 8
0x00005d3b      e8c0330000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00005d40      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00005d43      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005d46      80fa55         cmp dl, 0x55
0x00005d49      7475           je 0x5dc0
0x00005d4b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00005d4e      7420           je 0x5d70
0x00005d50      488d05244200.  lea rax, str.l______l                   ; 0x9f7b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005d57      488d151f4200.  lea rdx, [0x00009f7d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005d5e      83fb09         cmp ebx, 9
0x00005d61      480f45c2       cmovne rax, rdx
0x00005d65      4883c408       add rsp, 8
0x00005d69      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00005d6a      5d             pop rbp
0x00005d6b      c3             ret
0x00005d6c      0f1f4000       nop dword [rax]
0x00005d70      0fb65001       movzx edx, byte [rax + 1]
0x00005d74      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005d77      80fa42         cmp dl, 0x42
0x00005d7a      75d4           jne 0x5d50
0x00005d7c      80780231       cmp byte [rax + 2], 0x31
0x00005d80      75ce           jne 0x5d50
0x00005d82      80780338       cmp byte [rax + 3], 0x38
0x00005d86      75c8           jne 0x5d50
0x00005d88      80780430       cmp byte [rax + 4], 0x30
0x00005d8c      75c2           jne 0x5d50
0x00005d8e      80780533       cmp byte [rax + 5], 0x33
0x00005d92      75bc           jne 0x5d50
0x00005d94      80780630       cmp byte [rax + 6], 0x30
0x00005d98      75b6           jne 0x5d50
0x00005d9a      80780700       cmp byte [rax + 7], 0
0x00005d9e      75b0           jne 0x5d50
0x00005da0      807d0060       cmp byte [rbp], 0x60
0x00005da4      488d05c94100.  lea rax, [0x00009f74]
0x00005dab      488d15c64100.  lea rdx, [0x00009f78]
0x00005db2      480f45c2       cmovne rax, rdx
0x00005db6      4883c408       add rsp, 8
0x00005dba      5b             pop rbx
0x00005dbb      5d             pop rbp
0x00005dbc      c3             ret
0x00005dbd      0f1f00         nop dword [rax]
0x00005dc0      0fb65001       movzx edx, byte [rax + 1]
0x00005dc4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005dc7      80fa54         cmp dl, 0x54
0x00005dca      7584           jne 0x5d50
0x00005dcc      0fb65002       movzx edx, byte [rax + 2]
0x00005dd0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005dd3      80fa46         cmp dl, 0x46
0x00005dd6      0f8574ffffff   jne 0x5d50
0x00005ddc      8078032d       cmp byte [rax + 3], 0x2d
0x00005de0      0f856affffff   jne 0x5d50
0x00005de6      80780438       cmp byte [rax + 4], 0x38
0x00005dea      0f8560ffffff   jne 0x5d50
0x00005df0      80780500       cmp byte [rax + 5], 0
0x00005df4      0f8556ffffff   jne 0x5d50
0x00005dfa      807d0060       cmp byte [rbp], 0x60
0x00005dfe      488d05674100.  lea rax, [0x00009f6c]                   ; "\u2018"
0x00005e05      488d15644100.  lea rdx, [0x00009f70]                   ; "\u2019"
0x00005e0c      480f45c2       cmovne rax, rdx
0x00005e10      4883c408       add rsp, 8
0x00005e14      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00005e15      5d             pop rbp
0x00005e16      c3             ret
0x00005e17      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00005e20      4157           push r15
0x00005e22      4156           push r14
0x00005e24      4589c7         mov r15d, r8d
0x00005e27      4155           push r13
0x00005e29      4154           push r12
0x00005e2b      4989fe         mov r14, rdi
0x00005e2e      55             push rbp
0x00005e2f      53             push rbx
0x00005e30      4489cb         mov ebx, r9d
0x00005e33      4989f5         mov r13, rsi
0x00005e36      4889cd         mov rbp, rcx
0x00005e39      83e302         and ebx, 2
0x00005e3c      4881ecb80000.  sub rsp, 0xb8
0x00005e43      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00005e4b      4889542410     mov qword [rsp + 0x10], rdx
0x00005e50      4489442408     mov dword [rsp + 8], r8d
0x00005e55      44894c2478     mov dword [rsp + 0x78], r9d
0x00005e5a      4889442420     mov qword [rsp + 0x20], rax
0x00005e5f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00005e67      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00005e6c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00005e74      4889442460     mov qword [rsp + 0x60], rax
0x00005e79      64488b042528.  mov rax, qword fs:[0x28]
0x00005e82      48898424a800.  mov qword [rsp + 0xa8], rax
0x00005e8a      31c0           xor eax, eax
0x00005e8c      e82fbaffff     call sym.imp.__ctype_get_mb_cur_max
0x00005e91      4183ff0a       cmp r15d, 0xa
0x00005e95      4889442458     mov qword [rsp + 0x58], rax
0x00005e9a      0f87af110000   ja 0x704f
0x00005ea0      488d0d394100.  lea rcx, [0x00009fe0]
0x00005ea7      4489fa         mov edx, r15d
0x00005eaa      48630491       movsxd rax, dword [rcx + rdx*4]
0x00005eae      4801c8         add rax, rcx
0x00005eb1      ffe0           jmp rax
0x00005eb3      c644240e01     mov byte [rsp + 0xe], 1
0x00005eb8      c644247c00     mov byte [rsp + 0x7c], 0
0x00005ebd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00005ec0      48c744245000.  mov qword [rsp + 0x50], 0
0x00005ec9      c644240f01     mov byte [rsp + 0xf], 1
0x00005ece      c644240d00     mov byte [rsp + 0xd], 0
0x00005ed3      488d05a34000.  lea rax, [0x00009f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005eda      48c744241801.  mov qword [rsp + 0x18], 1
0x00005ee3      4531ff         xor r15d, r15d
0x00005ee6      c74424080200.  mov dword [rsp + 8], 2
0x00005eee      4889442448     mov qword [rsp + 0x48], rax
0x00005ef3      4531db         xor r11d, r11d
0x00005ef6      4889e8         mov rax, rbp
0x00005ef9      4589e0         mov r8d, r12d
0x00005efc      4c89dd         mov rbp, r11
0x00005eff      4989c3         mov r11, rax
0x00005f02      660f1f440000   nop word [rax + rax]
0x00005f08      4939eb         cmp r11, rbp
0x00005f0b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00005f0f      4983fbff       cmp r11, 0xffffffffffffffff
0x00005f13      750d           jne 0x5f22
0x00005f15      488b442410     mov rax, qword [rsp + 0x10]
0x00005f1a      803c2800       cmp byte [rax + rbp], 0
0x00005f1e      410f95c4       setne r12b
0x00005f22      4584e4         test r12b, r12b
0x00005f25      0f8455060000   je 0x6580
0x00005f2b      837c240802     cmp dword [rsp + 8], 2
0x00005f30      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005f35      4c8d0c2f       lea r9, [rdi + rbp]
0x00005f39      0f95c0         setne al
0x00005f3c      2244240d       and al, byte [rsp + 0xd]
0x00005f40      4189c2         mov r10d, eax
0x00005f43      0f84a7000000   je 0x5ff0
0x00005f49      488b442418     mov rax, qword [rsp + 0x18]
0x00005f4e      4885c0         test rax, rax
0x00005f51      0f8429040000   je 0x6380
0x00005f57      4983fbff       cmp r11, 0xffffffffffffffff
0x00005f5b      488d5c0500     lea rbx, [rbp + rax]
0x00005f60      752e           jne 0x5f90
0x00005f62      4883f801       cmp rax, 1
0x00005f66      7628           jbe 0x5f90
0x00005f68      4488442438     mov byte [rsp + 0x38], r8b
0x00005f6d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00005f72      4c894c2428     mov qword [rsp + 0x28], r9
0x00005f77      e854b9ffff     call sym.imp.strlen
0x00005f7c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00005f82      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00005f88      4989c3         mov r11, rax
0x00005f8b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005f90      4c39db         cmp rbx, r11
0x00005f93      4488542428     mov byte [rsp + 0x28], r10b
0x00005f98      0f87b2050000   ja 0x6550
0x00005f9e      488b542418     mov rdx, qword [rsp + 0x18]
0x00005fa3      488b742448     mov rsi, qword [rsp + 0x48]
0x00005fa8      4c89cf         mov rdi, r9
0x00005fab      4c895c2440     mov qword [rsp + 0x40], r11
0x00005fb0      4488442438     mov byte [rsp + 0x38], r8b
0x00005fb5      4c894c2430     mov qword [rsp + 0x30], r9
0x00005fba      e8e1b9ffff     call sym.imp.memcmp
0x00005fbf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00005fc1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005fc6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00005fcc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00005fd1      0f8579050000   jne 0x6550
0x00005fd7      807c240f00     cmp byte [rsp + 0xf], 0
0x00005fdc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00005fe2      0f857d0f0000   jne 0x6f65
0x00005fe8      0f1f84000000.  nop dword [rax + rax]
0x00005ff0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00005ff4      80fb7e         cmp bl, 0x7e
0x00005ff7      0f871b030000   ja 0x6318
0x00005ffd      488d0d084000.  lea rcx, [0x0000a00c]
0x00006004      0fb6d3         movzx edx, bl
0x00006007      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000600b      4801c8         add rax, rcx
0x0000600e      ffe0           jmp rax
0x00006010      4531d2         xor r10d, r10d
0x00006013      4983fb01       cmp r11, 1
0x00006017      0f95c0         setne al
0x0000601a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000601e      750c           jne 0x602c
0x00006020      488b442410     mov rax, qword [rsp + 0x10]
0x00006025      80780100       cmp byte [rax + 1], 0
0x00006029      0f95c0         setne al
0x0000602c      837c240802     cmp dword [rsp + 8], 2
0x00006031      0f94c2         sete dl
0x00006034      84c0           test al, al
0x00006036      0f844c020000   je 0x6288
0x0000603c      4531e4         xor r12d, r12d
0x0000603f      31c0           xor eax, eax
0x00006041      0f1f80000000.  nop dword [rax]
0x00006048      807c240d01     cmp byte [rsp + 0xd], 1
0x0000604d      0f850f010000   jne 0x6162
0x00006053      84d2           test dl, dl
0x00006055      0f8507010000   jne 0x6162
0x0000605b      488b742420     mov rsi, qword [rsp + 0x20]
0x00006060      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00006063      7414           je 0x6079
0x00006065      89da           mov edx, ebx
0x00006067      c0ea05         shr dl, 5
0x0000606a      0fb6d2         movzx edx, dl
0x0000606d      8b1496         mov edx, dword [rsi + rdx*4]
0x00006070      0fa3da         bt edx, ebx
0x00006073      0f824a010000   jb 0x61c3
0x00006079      4584d2         test r10b, r10b
0x0000607c      0f8541010000   jne 0x61c3
0x00006082      83f001         xor eax, 1
0x00006085      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00006089      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000608c      84c0           test al, al
0x0000608e      7420           je 0x60b0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00006090      4d39fd         cmp r13, r15
0x00006093      7605           jbe 0x609a
0x00006095      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000609a      498d4701       lea rax, [r15 + 1]
0x0000609e      4939c5         cmp r13, rax
0x000060a1      7606           jbe 0x60a9
0x000060a3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000060a9      4983c702       add r15, 2
0x000060ad      4531c0         xor r8d, r8d
0x000060b0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000060b3      7304           jae 0x60b9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000060b5      43881c3e       mov byte [r14 + r15], bl
0x000060b9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000060be      4983c701       add r15, 1
0x000060c2      b800000000     mov eax, 0
0x000060c7      4584e4         test r12b, r12b
0x000060ca      0f44f8         cmove edi, eax
0x000060cd      40887c240e     mov byte [rsp + 0xe], dil
0x000060d2      e931feffff     jmp 0x5f08
0x000060d7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000060e0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000060e3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000060e7      83f802         cmp eax, 2
0x000060ea      0f84b8050000   je 0x66a8
0x000060f0      83f805         cmp eax, 5
0x000060f3      0f846f050000   je 0x6668
0x000060f9      83f802         cmp eax, 2
0x000060fc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00006101      0f94c2         sete dl
0x00006104      4531e4         xor r12d, r12d
0x00006107      31c0           xor eax, eax
0x00006109      e93affffff     jmp 0x6048
0x0000610e      6690           nop
0x00006110      4531d2         xor r10d, r10d
0x00006113      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00006118      0f8402050000   je 0x6620
0x0000611e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00006123      31d2           xor edx, edx
0x00006125      31c0           xor eax, eax
0x00006127      bb27000000     mov ebx, 0x27                           ; '''
0x0000612c      e917ffffff     jmp 0x6048
0x00006131      0f1f80000000.  nop dword [rax]
0x00006138      ba09000000     mov edx, 9
0x0000613d      bb74000000     mov ebx, 0x74                           ; 't'
0x00006142      837c240802     cmp dword [rsp + 8], 2
0x00006147      0f94c0         sete al
0x0000614a      2244240f       and al, byte [rsp + 0xf]
0x0000614e      0f854a010000   jne 0x629e
0x00006154      807c240d00     cmp byte [rsp + 0xd], 0
0x00006159      7565           jne 0x61c0
0x0000615b      89d3           mov ebx, edx
0x0000615d      4531e4         xor r12d, r12d
0x00006160      31c0           xor eax, eax
0x00006162      807c240f00     cmp byte [rsp + 0xf], 0
0x00006167      0f85eefeffff   jne 0x605b
0x0000616d      e907ffffff     jmp 0x6079                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00006172      660f1f440000   nop word [rax + rax]
0x00006178      ba08000000     mov edx, 8
0x0000617d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00006182      ebd0           jmp 0x6154
0x00006184      0f1f4000       nop dword [rax]
0x00006188      837c240802     cmp dword [rsp + 8], 2
0x0000618d      0f84cd030000   je 0x6560
0x00006193      807c240d00     cmp byte [rsp + 0xd], 0
0x00006198      0f8412020000   je 0x63b0
0x0000619e      807c240f00     cmp byte [rsp + 0xf], 0
0x000061a3      0f8407020000   je 0x63b0
0x000061a9      48837c241800   cmp qword [rsp + 0x18], 0
0x000061af      0f85b6030000   jne 0x656b
0x000061b5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000061ba      660f1f440000   nop word [rax + rax]
0x000061c0      4531e4         xor r12d, r12d
0x000061c3      837c240802     cmp dword [rsp + 8], 2
0x000061c8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000061cb      807c240f00     cmp byte [rsp + 0xf], 0
0x000061d0      89d0           mov eax, edx
0x000061d2      0f8550080000   jne 0x6a28
0x000061d8      4489c0         mov eax, r8d
0x000061db      83f001         xor eax, 1
0x000061de      20d0           and al, dl
0x000061e0      742f           je 0x6211
0x000061e2      4d39fd         cmp r13, r15
0x000061e5      7605           jbe 0x61ec
0x000061e7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000061ec      498d5701       lea rdx, [r15 + 1]
0x000061f0      4939d5         cmp r13, rdx
0x000061f3      7606           jbe 0x61fb
0x000061f5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000061fb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000061ff      4939d5         cmp r13, rdx
0x00006202      7606           jbe 0x620a
0x00006204      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000620a      4983c703       add r15, 3
0x0000620e      4189c0         mov r8d, eax
0x00006211      4d39fd         cmp r13, r15
0x00006214      7605           jbe 0x621b
0x00006216      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000621b      4983c701       add r15, 1
0x0000621f      4883c501       add rbp, 1
0x00006223      e988feffff     jmp 0x60b0
0x00006228      0f1f84000000.  nop dword [rax + rax]
0x00006230      807c240d00     cmp byte [rsp + 0xd], 0
0x00006235      0f85c8010000   jne 0x6403
0x0000623b      31d2           xor edx, edx
0x0000623d      f644247801     test byte [rsp + 0x78], 1
0x00006242      0f8413ffffff   je 0x615b
0x00006248      4883c501       add rbp, 1
0x0000624c      e9b7fcffff     jmp 0x5f08
0x00006251      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00006258      837c240802     cmp dword [rsp + 8], 2
0x0000625d      0f94c2         sete dl
0x00006260      31c0           xor eax, eax
0x00006262      e9e1fdffff     jmp 0x6048
0x00006267      660f1f840000.  nop word [rax + rax]
0x00006270      ba07000000     mov edx, 7
0x00006275      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000627a      e9d5feffff     jmp 0x6154
0x0000627f      90             nop
0x00006280      837c240802     cmp dword [rsp + 8], 2
0x00006285      0f94c2         sete dl
0x00006288      4885ed         test rbp, rbp
0x0000628b      0f85abfdffff   jne 0x603c
0x00006291      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006296      20d0           and al, dl
0x00006298      0f84aafdffff   je 0x6048
0x0000629e      4c89dd         mov rbp, r11
0x000062a1      c74424080200.  mov dword [rsp + 8], 2
0x000062a9      e9fb060000     jmp 0x69a9
0x000062ae      6690           nop
0x000062b0      837c240802     cmp dword [rsp + 8], 2
0x000062b5      0f94c2         sete dl
0x000062b8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000062bb      ebd4           jmp 0x6291
0x000062bd      0f1f00         nop dword [rax]
0x000062c0      837c240802     cmp dword [rsp + 8], 2
0x000062c5      bb20000000     mov ebx, 0x20                           ; "@"
0x000062ca      0f94c2         sete dl
0x000062cd      ebc2           jmp 0x6291
0x000062cf      90             nop
0x000062d0      ba0d000000     mov edx, 0xd
0x000062d5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000062da      e963feffff     jmp 0x6142
0x000062df      90             nop
0x000062e0      ba0c000000     mov edx, 0xc
0x000062e5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000062ea      e965feffff     jmp 0x6154
0x000062ef      90             nop
0x000062f0      ba0b000000     mov edx, 0xb
0x000062f5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000062fa      e955feffff     jmp 0x6154
0x000062ff      90             nop
0x00006300      ba0a000000     mov edx, 0xa
0x00006305      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000630a      e933feffff     jmp 0x6142
0x0000630f      90             nop
0x00006310      4531d2         xor r10d, r10d
0x00006313      0f1f440000     nop dword [rax + rax]
0x00006318      48837c245801   cmp qword [rsp + 0x58], 1
0x0000631e      0f85a4030000   jne 0x66c8
0x00006324      4c895c2438     mov qword [rsp + 0x38], r11
0x00006329      4488442430     mov byte [rsp + 0x30], r8b
0x0000632e      4488542428     mov byte [rsp + 0x28], r10b
0x00006333      e858b8ffff     call sym.imp.__ctype_b_loc
0x00006338      488b08         mov rcx, qword [rax]
0x0000633b      0fb6d3         movzx edx, bl
0x0000633e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00006344      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000634a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000634f      bf01000000     mov edi, 1
0x00006354      0fb70451       movzx eax, word [rcx + rdx*2]
0x00006358      66250040       and ax, 0x4000                          ; "I\x01\xd4L1\xe6M\x01\xefH\xd1\xc6L1\xf8L\x03\x94$\xa0"
0x0000635c      410f95c4       setne r12b
0x00006360      0f94c0         sete al
0x00006363      2244240d       and al, byte [rsp + 0xd]
0x00006367      84c0           test al, al
0x00006369      0f8592090000   jne 0x6d01
0x0000636f      837c240802     cmp dword [rsp + 8], 2
0x00006374      0f94c2         sete dl
0x00006377      e9ccfcffff     jmp 0x6048
0x0000637c      0f1f4000       nop dword [rax]
0x00006380      410fb619       movzx ebx, byte [r9]
0x00006384      80fb7e         cmp bl, 0x7e
0x00006387      7787           ja 0x6310
0x00006389      488d0d783e00.  lea rcx, [0x0000a208]
0x00006390      0fb6d3         movzx edx, bl
0x00006393      48630491       movsxd rax, dword [rcx + rdx*4]
0x00006397      4801c8         add rax, rcx
0x0000639a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000639c      0f1f4000       nop dword [rax]
0x000063a0      4531d2         xor r10d, r10d
0x000063a3      807c240d00     cmp byte [rsp + 0xd], 0
0x000063a8      0f85f0fdffff   jne 0x619e
0x000063ae      6690           nop
0x000063b0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000063b5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000063ba      e995fdffff     jmp 0x6154
0x000063bf      90             nop
0x000063c0      ba0c000000     mov edx, 0xc
0x000063c5      4531d2         xor r10d, r10d
0x000063c8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000063cd      e982fdffff     jmp 0x6154
0x000063d2      660f1f440000   nop word [rax + rax]
0x000063d8      ba0a000000     mov edx, 0xa
0x000063dd      4531d2         xor r10d, r10d
0x000063e0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000063e5      e958fdffff     jmp 0x6142
0x000063ea      660f1f440000   nop word [rax + rax]
0x000063f0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000063f5      e9c6fdffff     jmp 0x61c0
0x000063fa      660f1f440000   nop word [rax + rax]
0x00006400      4531d2         xor r10d, r10d
0x00006403      837c240802     cmp dword [rsp + 8], 2
0x00006408      0f94c2         sete dl
0x0000640b      807c240f00     cmp byte [rsp + 0xf], 0
0x00006410      0f85940b0000   jne 0x6faa
0x00006416      4489c0         mov eax, r8d
0x00006419      4c89f9         mov rcx, r15
0x0000641c      83f001         xor eax, 1
0x0000641f      20d0           and al, dl
0x00006421      742d           je 0x6450
0x00006423      4d39fd         cmp r13, r15
0x00006426      7605           jbe 0x642d
0x00006428      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000642d      498d4f01       lea rcx, [r15 + 1]
0x00006431      4939cd         cmp r13, rcx
0x00006434      7606           jbe 0x643c
0x00006436      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000643c      498d4f02       lea rcx, [r15 + 2]
0x00006440      4939cd         cmp r13, rcx
0x00006443      0f8730060000   ja 0x6a79
0x00006449      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000644d      4189c0         mov r8d, eax
0x00006450      4939cd         cmp r13, rcx
0x00006453      7605           jbe 0x645a
0x00006455      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000645a      837c240802     cmp dword [rsp + 8], 2
0x0000645f      4c8d7901       lea r15, [rcx + 1]
0x00006463      0f8400060000   je 0x6a69
0x00006469      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000646d      4c39d8         cmp rax, r11
0x00006470      7319           jae 0x648b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00006472      488b442410     mov rax, qword [rsp + 0x10]
0x00006477      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000647c      88442428       mov byte [rsp + 0x28], al
0x00006480      83e830         sub eax, 0x30
0x00006483      3c09           cmp al, 9
0x00006485      0f862e080000   jbe 0x6cb9
0x0000648b      4489e0         mov eax, r12d
0x0000648e      bb30000000     mov ebx, 0x30                           ; '0'
0x00006493      4531e4         xor r12d, r12d
0x00006496      e9adfbffff     jmp 0x6048                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000649b      0f1f440000     nop dword [rax + rax]
0x000064a0      837c240802     cmp dword [rsp + 8], 2
0x000064a5      4589d4         mov r12d, r10d
0x000064a8      0f94c2         sete dl
0x000064ab      4531d2         xor r10d, r10d
0x000064ae      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000064b0      e993fbffff     jmp 0x6048                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000064b5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000064b8      837c240802     cmp dword [rsp + 8], 2
0x000064bd      0f94c2         sete dl
0x000064c0      4531d2         xor r10d, r10d
0x000064c3      e9c0fdffff     jmp 0x6288
0x000064c8      0f1f84000000.  nop dword [rax + rax]
0x000064d0      837c240802     cmp dword [rsp + 8], 2
0x000064d5      0f94c2         sete dl
0x000064d8      4531d2         xor r10d, r10d
0x000064db      4531e4         xor r12d, r12d
0x000064de      e9aefdffff     jmp 0x6291
0x000064e3      0f1f440000     nop dword [rax + rax]
0x000064e8      837c240802     cmp dword [rsp + 8], 2
0x000064ed      4589d4         mov r12d, r10d
0x000064f0      bb20000000     mov ebx, 0x20                           ; "@"
0x000064f5      0f94c2         sete dl
0x000064f8      4531d2         xor r10d, r10d
0x000064fb      e991fdffff     jmp 0x6291
0x00006500      ba0d000000     mov edx, 0xd
0x00006505      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00006508      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000650d      e930fcffff     jmp 0x6142
0x00006512      660f1f440000   nop word [rax + rax]
0x00006518      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000651d      e99efcffff     jmp 0x61c0
0x00006522      660f1f440000   nop word [rax + rax]
0x00006528      ba09000000     mov edx, 9
0x0000652d      4531d2         xor r10d, r10d
0x00006530      bb74000000     mov ebx, 0x74                           ; 't'
0x00006535      e908fcffff     jmp 0x6142
0x0000653a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00006540      bb62000000     mov ebx, 0x62                           ; 'b'
0x00006545      e976fcffff     jmp 0x61c0
0x0000654a      660f1f440000   nop word [rax + rax]
0x00006550      4531d2         xor r10d, r10d
0x00006553      e998faffff     jmp 0x5ff0
0x00006558      0f1f84000000.  nop dword [rax + rax]
0x00006560      807c240f00     cmp byte [rsp + 0xf], 0
0x00006565      0f8565090000   jne 0x6ed0
0x0000656b      4883c501       add rbp, 1
0x0000656f      4489c0         mov eax, r8d
0x00006572      4531e4         xor r12d, r12d
0x00006575      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000657a      e90dfbffff     jmp 0x608c
0x0000657f      90             nop
0x00006580      837c240802     cmp dword [rsp + 8], 2
0x00006585      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000658a      4589c4         mov r12d, r8d
0x0000658d      4c89dd         mov rbp, r11
0x00006590      0f94c2         sete dl
0x00006593      89d8           mov eax, ebx
0x00006595      4d85ff         test r15, r15
0x00006598      0f94c1         sete cl
0x0000659b      21d0           and eax, edx
0x0000659d      20c8           and al, cl
0x0000659f      0f85610a0000   jne 0x7006                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000065a5      89d8           mov eax, ebx
0x000065a7      83f001         xor eax, 1
0x000065aa      20c2           and dl, al
0x000065ac      0f846a090000   je 0x6f1c
0x000065b2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000065b7      0f845d090000   je 0x6f1a
0x000065bd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000065c2      0f85f5090000   jne 0x6fbd
0x000065c8      4d85ed         test r13, r13
0x000065cb      0f94c0         sete al
0x000065ce      48837c245000   cmp qword [rsp + 0x50], 0
0x000065d4      0f95c2         setne dl
0x000065d7      20d0           and al, dl
0x000065d9      0f841d0a0000   je 0x6ffc
0x000065df      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000065e4      488d1d923900.  lea rbx, [0x00009f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000065eb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000065ef      c74424080200.  mov dword [rsp + 8], 2
0x000065f7      41bf01000000   mov r15d, 1
0x000065fd      48c744241801.  mov qword [rsp + 0x18], 1
0x00006606      c644240f00     mov byte [rsp + 0xf], 0
0x0000660b      48895c2448     mov qword [rsp + 0x48], rbx
0x00006610      8844247c       mov byte [rsp + 0x7c], al
0x00006614      e9daf8ffff     jmp 0x5ef3
0x00006619      0f1f80000000.  nop dword [rax]
0x00006620      807c240f00     cmp byte [rsp + 0xf], 0
0x00006625      0f85a5080000   jne 0x6ed0
0x0000662b      4d85ed         test r13, r13
0x0000662e      0f84fc030000   je 0x6a30                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00006634      31d2           xor edx, edx
0x00006636      48837c245000   cmp qword [rsp + 0x50], 0
0x0000663c      0f85ee030000   jne 0x6a30                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00006642      4c896c2450     mov qword [rsp + 0x50], r13
0x00006647      4983c703       add r15, 3
0x0000664b      31c0           xor eax, eax
0x0000664d      448864247c     mov byte [rsp + 0x7c], r12b
0x00006652      4531c0         xor r8d, r8d
0x00006655      4989d5         mov r13, rdx
0x00006658      bb27000000     mov ebx, 0x27                           ; '''
0x0000665d      e917faffff     jmp 0x6079
0x00006662      660f1f440000   nop word [rax + rax]
0x00006668      f644247804     test byte [rsp + 0x78], 4
0x0000666d      7421           je 0x6690
0x0000666f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00006673      4c39d9         cmp rcx, r11
0x00006676      7318           jae 0x6690
0x00006678      488b442410     mov rax, qword [rsp + 0x10]
0x0000667d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00006682      0f848a070000   je 0x6e12
0x00006688      0f1f84000000.  nop dword [rax + rax]
0x00006690      31d2           xor edx, edx
0x00006692      4531e4         xor r12d, r12d
0x00006695      31c0           xor eax, eax
0x00006697      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000669c      e9a7f9ffff     jmp 0x6048
0x000066a1      0f1f80000000.  nop dword [rax]
0x000066a8      807c240f00     cmp byte [rsp + 0xf], 0
0x000066ad      0f851d080000   jne 0x6ed0
0x000066b3      4531e4         xor r12d, r12d
0x000066b6      31c0           xor eax, eax
0x000066b8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000066bd      e9b7f9ffff     jmp 0x6079                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000066c2      660f1f440000   nop word [rax + rax]
0x000066c8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000066d0      4983fbff       cmp r11, 0xffffffffffffffff
0x000066d4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000066e0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000066e5      752d           jne 0x6714
0x000066e7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000066ec      4488442440     mov byte [rsp + 0x40], r8b
0x000066f1      4488542438     mov byte [rsp + 0x38], r10b
0x000066f6      4c894c2430     mov qword [rsp + 0x30], r9
0x000066fb      e8d0b1ffff     call sym.imp.strlen
0x00006700      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00006706      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000670c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000670f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006714      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000671c      31c9           xor ecx, ecx
0x0000671e      885c247e       mov byte [rsp + 0x7e], bl
0x00006722      448844247d     mov byte [rsp + 0x7d], r8b
0x00006727      4889cb         mov rbx, rcx
0x0000672a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00006732      4889442438     mov qword [rsp + 0x38], rax
0x00006737      448854247f     mov byte [rsp + 0x7f], r10b
0x0000673c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00006744      4c89742440     mov qword [rsp + 0x40], r14
0x00006749      4c896c2470     mov qword [rsp + 0x70], r13
0x0000674e      4c895c2430     mov qword [rsp + 0x30], r11
0x00006753      488b442410     mov rax, qword [rsp + 0x10]
0x00006758      4c8d741d00     lea r14, [rbp + rbx]
0x0000675d      488b542430     mov rdx, qword [rsp + 0x30]
0x00006762      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00006767      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000676c      4e8d2c30       lea r13, [rax + r14]
0x00006770      4c29f2         sub rdx, r14
0x00006773      4c89ee         mov rsi, r13
0x00006776      e815280000     call sym.rpl_mbrtowc
0x0000677b      4885c0         test rax, rax
0x0000677e      4989c7         mov r15, rax
0x00006781      744e           je 0x67d1
0x00006783      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006787      0f8418060000   je 0x6da5
0x0000678d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006791      0f849a050000   je 0x6d31
0x00006797      837c240802     cmp dword [rsp + 8], 2
0x0000679c      0f94c0         sete al
0x0000679f      2244240f       and al, byte [rsp + 0xf]
0x000067a3      0f8597010000   jne 0x6940
0x000067a9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000067b0      e8bbb3ffff     call sym.imp.iswprint
0x000067b5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000067ba      85c0           test eax, eax
0x000067bc      b800000000     mov eax, 0
0x000067c1      440f44e0       cmove r12d, eax
0x000067c5      4c01fb         add rbx, r15
0x000067c8      e893b3ffff     call sym.imp.mbsinit
0x000067cd      85c0           test eax, eax
0x000067cf      7482           je 0x6753
0x000067d1      4489e2         mov edx, r12d
0x000067d4      4889df         mov rdi, rbx
0x000067d7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000067dd      83f201         xor edx, 1
0x000067e0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000067e5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000067eb      2254240d       and dl, byte [rsp + 0xd]
0x000067ef      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000067f7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000067fc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006801      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006806      4883ff01       cmp rdi, 1
0x0000680a      0f86fb050000   jbe 0x6e0b
0x00006810      4889f9         mov rcx, rdi
0x00006813      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00006815      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000681b      4801e9         add rcx, rbp
0x0000681e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006823      e9b6000000     jmp 0x68de
0x00006828      0f1f84000000.  nop dword [rax + rax]
0x00006830      837c240802     cmp dword [rsp + 8], 2
0x00006835      0f94c0         sete al
0x00006838      4584c9         test r9b, r9b
0x0000683b      0f85af040000   jne 0x6cf0
0x00006841      4489c6         mov esi, r8d
0x00006844      83f601         xor esi, 1
0x00006847      4020f0         and al, sil
0x0000684a      742f           je 0x687b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000684c      4d39fd         cmp r13, r15
0x0000684f      7605           jbe 0x6856
0x00006851      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006856      498d7701       lea rsi, [r15 + 1]
0x0000685a      4939f5         cmp r13, rsi
0x0000685d      7606           jbe 0x6865                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000685f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00006865      498d7702       lea rsi, [r15 + 2]
0x00006869      4939f5         cmp r13, rsi
0x0000686c      7606           jbe 0x6874
0x0000686e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006874      4983c703       add r15, 3
0x00006878      4189c0         mov r8d, eax
0x0000687b      4d39fd         cmp r13, r15
0x0000687e      7605           jbe 0x6885
0x00006880      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006885      498d4701       lea rax, [r15 + 1]
0x00006889      4939c5         cmp r13, rax
0x0000688c      760d           jbe 0x689b
0x0000688e      89d8           mov eax, ebx
0x00006890      c0e806         shr al, 6
0x00006893      83c030         add eax, 0x30
0x00006896      4388443e01     mov byte [r14 + r15 + 1], al
0x0000689b      498d4702       lea rax, [r15 + 2]
0x0000689f      4939c5         cmp r13, rax
0x000068a2      7610           jbe 0x68b4
0x000068a4      89d8           mov eax, ebx
0x000068a6      c0e803         shr al, 3
0x000068a9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000068ac      83c030         add eax, 0x30
0x000068af      4388443e02     mov byte [r14 + r15 + 2], al
0x000068b4      83e307         and ebx, 7
0x000068b7      4883c501       add rbp, 1
0x000068bb      4983c703       add r15, 3
0x000068bf      83c330         add ebx, 0x30
0x000068c2      4839cd         cmp rbp, rcx
0x000068c5      0f83e5f7ffff   jae 0x60b0
0x000068cb      89d6           mov esi, edx
0x000068cd      4d39fd         cmp r13, r15
0x000068d0      7604           jbe 0x68d6
0x000068d2      43881c3e       mov byte [r14 + r15], bl
0x000068d6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000068da      4983c701       add r15, 1
0x000068de      84d2           test dl, dl
0x000068e0      0f854affffff   jne 0x6830
0x000068e6      89f0           mov eax, esi
0x000068e8      83f001         xor eax, 1
0x000068eb      4421c0         and eax, r8d
0x000068ee      4584d2         test r10b, r10b
0x000068f1      740e           je 0x6901
0x000068f3      4d39fd         cmp r13, r15
0x000068f6      7605           jbe 0x68fd
0x000068f8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000068fd      4983c701       add r15, 1
0x00006901      4883c501       add rbp, 1
0x00006905      4839cd         cmp rbp, rcx
0x00006908      0f837ef7ffff   jae 0x608c
0x0000690e      84c0           test al, al
0x00006910      0f84f8030000   je 0x6d0e
0x00006916      4d39fd         cmp r13, r15
0x00006919      7605           jbe 0x6920
0x0000691b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006920      498d4701       lea rax, [r15 + 1]
0x00006924      4939c5         cmp r13, rax
0x00006927      7606           jbe 0x692f
0x00006929      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000692f      4983c702       add r15, 2
0x00006933      4531d2         xor r10d, r10d
0x00006936      4531c0         xor r8d, r8d
0x00006939      eb92           jmp 0x68cd
0x0000693b      0f1f440000     nop dword [rax + rax]
0x00006940      4983ff01       cmp r15, 1
0x00006944      0f845ffeffff   je 0x67a9
0x0000694a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000694f      4a8d0c3f       lea rcx, [rdi + r15]
0x00006953      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00006958      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000695c      eb0f           jmp 0x696d
0x0000695e      6690           nop
0x00006960      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00006964      4939d0         cmp r8, rdx
0x00006967      0f843cfeffff   je 0x67a9
0x0000696d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00006970      83e95b         sub ecx, 0x5b
0x00006973      80f921         cmp cl, 0x21
0x00006976      77e8           ja 0x6960                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00006978      be01000000     mov esi, 1
0x0000697d      48d3e6         shl rsi, cl
0x00006980      4889f1         mov rcx, rsi
0x00006983      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000698d      4885f1         test rcx, rsi
0x00006990      74ce           je 0x6960
0x00006992      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006997      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000699c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000069a1      c74424080200.  mov dword [rsp + 8], 2
0x000069a9      807c240d00     cmp byte [rsp + 0xd], 0
0x000069ae      7410           je 0x69c0
0x000069b0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000069b2      b804000000     mov eax, 4
0x000069b7      0f44442408     cmove eax, dword [rsp + 8]
0x000069bc      89442408       mov dword [rsp + 8], eax
0x000069c0      4883ec08       sub rsp, 8
0x000069c4      4889e9         mov rcx, rbp
0x000069c7      4c89ee         mov rsi, r13
0x000069ca      ff742468       push qword [rsp + 0x68]
0x000069ce      ff742478       push qword [rsp + 0x78]
0x000069d2      4c89f7         mov rdi, r14
0x000069d5      6a00           push 0
0x000069d7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000069df      448b442428     mov r8d, dword [rsp + 0x28]
0x000069e4      488b542430     mov rdx, qword [rsp + 0x30]
0x000069e9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000069ed      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000069f2      4883c420       add rsp, 0x20
0x000069f6      4989c7         mov r15, rax
0x000069f9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00006a01      6448331c2528.  xor rbx, qword fs:[0x28]
0x00006a0a      4c89f8         mov rax, r15
0x00006a0d      0f8500060000   jne 0x7013
0x00006a13      4881c4b80000.  add rsp, 0xb8
0x00006a1a      5b             pop rbx
0x00006a1b      5d             pop rbp
0x00006a1c      415c           pop r12
0x00006a1e      415d           pop r13
0x00006a20      415e           pop r14
0x00006a22      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00006a24      c3             ret
0x00006a25      0f1f00         nop dword [rax]
0x00006a28      4c89dd         mov rbp, r11
0x00006a2b      e979ffffff     jmp 0x69a9
0x00006a30      4d39fd         cmp r13, r15
0x00006a33      7605           jbe 0x6a3a
0x00006a35      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006a3a      498d4701       lea rax, [r15 + 1]
0x00006a3e      4939c5         cmp r13, rax
0x00006a41      7606           jbe 0x6a49
0x00006a43      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00006a49      498d4702       lea rax, [r15 + 2]
0x00006a4d      4939c5         cmp r13, rax
0x00006a50      0f86ec050000   jbe 0x7042
0x00006a56      4c89ea         mov rdx, r13
0x00006a59      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006a5f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00006a64      e9d9fbffff     jmp 0x6642
0x00006a69      4489e0         mov eax, r12d
0x00006a6c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00006a71      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00006a74      e900f6ffff     jmp 0x6079                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00006a79      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006a7f      e9c5f9ffff     jmp 0x6449
0x00006a84      85db           test ebx, ebx
0x00006a86      0f8527f4ffff   jne 0x5eb3
0x00006a8c      c644240d01     mov byte [rsp + 0xd], 1
0x00006a91      4d85ed         test r13, r13
0x00006a94      0f8590050000   jne 0x702a
0x00006a9a      488d05dc3400.  lea rax, [0x00009f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006aa1      48c744245000.  mov qword [rsp + 0x50], 0
0x00006aaa      c644240e01     mov byte [rsp + 0xe], 1
0x00006aaf      c644247c00     mov byte [rsp + 0x7c], 0
0x00006ab4      4531e4         xor r12d, r12d
0x00006ab7      c644240f00     mov byte [rsp + 0xf], 0
0x00006abc      48c744241801.  mov qword [rsp + 0x18], 1
0x00006ac5      4889442448     mov qword [rsp + 0x48], rax
0x00006aca      41bf01000000   mov r15d, 1
0x00006ad0      c74424080200.  mov dword [rsp + 8], 2
0x00006ad8      e916f4ffff     jmp 0x5ef3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00006add      0f1f00         nop dword [rax]
0x00006ae0      85db           test ebx, ebx
0x00006ae2      0f85f5030000   jne 0x6edd
0x00006ae8      4d85ed         test r13, r13
0x00006aeb      0f8425020000   je 0x6d16
0x00006af1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00006af5      c644240e01     mov byte [rsp + 0xe], 1
0x00006afa      4531e4         xor r12d, r12d
0x00006afd      c644247c00     mov byte [rsp + 0x7c], 0
0x00006b02      48c744245000.  mov qword [rsp + 0x50], 0
0x00006b0b      488d05693400.  lea rax, str.l______l                   ; 0x9f7b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006b12      c644240f00     mov byte [rsp + 0xf], 0
0x00006b17      c644240d01     mov byte [rsp + 0xd], 1
0x00006b1c      48c744241801.  mov qword [rsp + 0x18], 1
0x00006b25      41bf01000000   mov r15d, 1
0x00006b2b      4889442448     mov qword [rsp + 0x48], rax
0x00006b30      e9bef3ffff     jmp 0x5ef3
0x00006b35      488d053f3400.  lea rax, str.l______l                   ; 0x9f7b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006b3c      c644240e01     mov byte [rsp + 0xe], 1
0x00006b41      c644247c00     mov byte [rsp + 0x7c], 0
0x00006b46      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00006b49      48c744245000.  mov qword [rsp + 0x50], 0
0x00006b52      c644240f01     mov byte [rsp + 0xf], 1
0x00006b57      c644240d01     mov byte [rsp + 0xd], 1
0x00006b5c      48c744241801.  mov qword [rsp + 0x18], 1
0x00006b65      4531ff         xor r15d, r15d
0x00006b68      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00006b6d      c74424080500.  mov dword [rsp + 8], 5
0x00006b75      e979f3ffff     jmp 0x5ef3
0x00006b7a      c644240e01     mov byte [rsp + 0xe], 1
0x00006b7f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006b84      4531e4         xor r12d, r12d
0x00006b87      48c744245000.  mov qword [rsp + 0x50], 0
0x00006b90      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00006b95      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00006b98      c644240d01     mov byte [rsp + 0xd], 1
0x00006b9d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006ba6      48c744244800.  mov qword [rsp + 0x48], 0
0x00006baf      e93ff3ffff     jmp 0x5ef3
0x00006bb4      837c24080a     cmp dword [rsp + 8], 0xa
0x00006bb9      7456           je 0x6c11
0x00006bbb      488d35bd3300.  lea rsi, [0x00009f7f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00006bc2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00006bc4      ba05000000     mov edx, 5
0x00006bc9      e8e2acffff     call sym.imp.dcgettext
0x00006bce      4889c1         mov rcx, rax
0x00006bd1      4889442468     mov qword [rsp + 0x68], rax
0x00006bd6      488d05a23300.  lea rax, [0x00009f7f]                   ; "`"
0x00006bdd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00006be0      0f8498030000   je 0x6f7e
0x00006be6      488d35903300.  lea rsi, [0x00009f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006bed      31ff           xor edi, edi
0x00006bef      ba05000000     mov edx, 5
0x00006bf4      e8b7acffff     call sym.imp.dcgettext
0x00006bf9      4889c1         mov rcx, rax
0x00006bfc      4889442460     mov qword [rsp + 0x60], rax
0x00006c01      488d05753300.  lea rax, [0x00009f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006c08      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00006c0b      0f8483030000   je 0x6f94
0x00006c11      4531ff         xor r15d, r15d
0x00006c14      85db           test ebx, ebx
0x00006c16      0f84c1010000   je 0x6ddd
0x00006c1c      85db           test ebx, ebx
0x00006c1e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00006c23      0f9544240f     setne byte [rsp + 0xf]
0x00006c28      4531e4         xor r12d, r12d
0x00006c2b      4889df         mov rdi, rbx
0x00006c2e      e89dacffff     call sym.imp.strlen
0x00006c33      48895c2448     mov qword [rsp + 0x48], rbx
0x00006c38      4889442418     mov qword [rsp + 0x18], rax
0x00006c3d      c644240e01     mov byte [rsp + 0xe], 1
0x00006c42      c644247c00     mov byte [rsp + 0x7c], 0
0x00006c47      48c744245000.  mov qword [rsp + 0x50], 0
0x00006c50      c644240d01     mov byte [rsp + 0xd], 1
0x00006c55      e999f2ffff     jmp 0x5ef3
0x00006c5a      c644240e01     mov byte [rsp + 0xe], 1
0x00006c5f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006c64      4531e4         xor r12d, r12d
0x00006c67      48c744245000.  mov qword [rsp + 0x50], 0
0x00006c70      c644240f00     mov byte [rsp + 0xf], 0
0x00006c75      4531ff         xor r15d, r15d
0x00006c78      c644240d00     mov byte [rsp + 0xd], 0
0x00006c7d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006c86      48c744244800.  mov qword [rsp + 0x48], 0
0x00006c8f      e95ff2ffff     jmp 0x5ef3
0x00006c94      c644240e01     mov byte [rsp + 0xe], 1
0x00006c99      c644247c00     mov byte [rsp + 0x7c], 0
0x00006c9e      4531e4         xor r12d, r12d
0x00006ca1      48c744245000.  mov qword [rsp + 0x50], 0
0x00006caa      c644240f01     mov byte [rsp + 0xf], 1
0x00006caf      c644240d01     mov byte [rsp + 0xd], 1
0x00006cb4      e91af2ffff     jmp 0x5ed3
0x00006cb9      4d39fd         cmp r13, r15
0x00006cbc      7605           jbe 0x6cc3
0x00006cbe      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00006cc3      488d4102       lea rax, [rcx + 2]
0x00006cc7      4939c5         cmp r13, rax
0x00006cca      7606           jbe 0x6cd2
0x00006ccc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00006cd2      4489e0         mov eax, r12d
0x00006cd5      4c8d7903       lea r15, [rcx + 3]
0x00006cd9      4531e4         xor r12d, r12d
0x00006cdc      bb30000000     mov ebx, 0x30                           ; '0'
0x00006ce1      e962f3ffff     jmp 0x6048
0x00006ce6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006cf0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006cf5      4c89dd         mov rbp, r11
0x00006cf8      885c240d       mov byte [rsp + 0xd], bl
0x00006cfc      e9a8fcffff     jmp 0x69a9
0x00006d01      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006d06      4531e4         xor r12d, r12d
0x00006d09      e902fbffff     jmp 0x6810
0x00006d0e      4531d2         xor r10d, r10d
0x00006d11      e9b7fbffff     jmp 0x68cd
0x00006d16      48c744245000.  mov qword [rsp + 0x50], 0
0x00006d1f      c644240e01     mov byte [rsp + 0xe], 1
0x00006d24      4531e4         xor r12d, r12d
0x00006d27      c644247c00     mov byte [rsp + 0x7c], 0
0x00006d2c      e9dafdffff     jmp 0x6b0b
0x00006d31      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006d36      4c89f6         mov rsi, r14
0x00006d39      4c89e9         mov rcx, r13
0x00006d3c      4889d8         mov rax, rbx
0x00006d3f      4889df         mov rdi, rbx
0x00006d42      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00006d48      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006d4d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00006d55      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00006d58      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00006d5e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006d66      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006d6b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006d70      7326           jae 0x6d98
0x00006d72      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00006d75      7510           jne 0x6d87
0x00006d77      eb1f           jmp 0x6d98
0x00006d79      0f1f80000000.  nop dword [rax]
0x00006d80      41803c0100     cmp byte [r9 + rax], 0
0x00006d85      740e           je 0x6d95
0x00006d87      4883c001       add rax, 1
0x00006d8b      488d540500     lea rdx, [rbp + rax]
0x00006d90      4939d3         cmp r11, rdx
0x00006d93      77eb           ja 0x6d80
0x00006d95      4889c7         mov rdi, rax
0x00006d98      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006d9d      4531e4         xor r12d, r12d
0x00006da0      e961faffff     jmp 0x6806
0x00006da5      4889df         mov rdi, rbx
0x00006da8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00006dae      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006db3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00006db9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006dc1      4531e4         xor r12d, r12d
0x00006dc4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006dc9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006dce      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006dd3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006dd8      e929faffff     jmp 0x6806
0x00006ddd      488b542468     mov rdx, qword [rsp + 0x68]
0x00006de2      0fb602         movzx eax, byte [rdx]
0x00006de5      84c0           test al, al
0x00006de7      0f842ffeffff   je 0x6c1c
0x00006ded      0f1f00         nop dword [rax]
0x00006df0      4d39fd         cmp r13, r15
0x00006df3      7604           jbe 0x6df9
0x00006df5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00006df9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00006dfd      420fb6043a     movzx eax, byte [rdx + r15]
0x00006e02      84c0           test al, al
0x00006e04      75ea           jne 0x6df0
0x00006e06      e911feffff     jmp 0x6c1c
0x00006e0b      89d0           mov eax, edx
0x00006e0d      e955f5ffff     jmp 0x6367
0x00006e12      0fb61c08       movzx ebx, byte [rax + rcx]
0x00006e16      80fb3e         cmp bl, 0x3e
0x00006e19      0f8771f8ffff   ja 0x6690
0x00006e1f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00006e29      480fa3d8       bt rax, rbx
0x00006e2d      0f835df8ffff   jae 0x6690
0x00006e33      807c240f00     cmp byte [rsp + 0xf], 0
0x00006e38      0f85e4010000   jne 0x7022                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00006e3e      4d39fd         cmp r13, r15
0x00006e41      7605           jbe 0x6e48
0x00006e43      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00006e48      498d4701       lea rax, [r15 + 1]
0x00006e4c      4939c5         cmp r13, rax
0x00006e4f      7606           jbe 0x6e57
0x00006e51      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00006e57      498d4702       lea rax, [r15 + 2]
0x00006e5b      4939c5         cmp r13, rax
0x00006e5e      7606           jbe 0x6e66
0x00006e60      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00006e66      498d4703       lea rax, [r15 + 3]
0x00006e6a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00006e6d      7606           jbe 0x6e75
0x00006e6f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00006e75      4983c704       add r15, 4
0x00006e79      31d2           xor edx, edx
0x00006e7b      4531e4         xor r12d, r12d
0x00006e7e      31c0           xor eax, eax
0x00006e80      4889cd         mov rbp, rcx
0x00006e83      e9c0f1ffff     jmp 0x6048
0x00006e88      85db           test ebx, ebx
0x00006e8a      0f8488010000   je 0x7018
0x00006e90      488d05e63000.  lea rax, [0x00009f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006e97      c644240e01     mov byte [rsp + 0xe], 1
0x00006e9c      c644247c00     mov byte [rsp + 0x7c], 0
0x00006ea1      4531e4         xor r12d, r12d
0x00006ea4      48c744245000.  mov qword [rsp + 0x50], 0
0x00006ead      c644240f01     mov byte [rsp + 0xf], 1
0x00006eb2      c644240d00     mov byte [rsp + 0xd], 0
0x00006eb7      48c744241801.  mov qword [rsp + 0x18], 1
0x00006ec0      4531ff         xor r15d, r15d
0x00006ec3      4889442448     mov qword [rsp + 0x48], rax
0x00006ec8      e926f0ffff     jmp 0x5ef3
0x00006ecd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00006ed0      4c89dd         mov rbp, r11
0x00006ed3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006ed8      e9ccfaffff     jmp 0x69a9
0x00006edd      488d05973000.  lea rax, str.l______l                   ; 0x9f7b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006ee4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00006ee9      c644247c00     mov byte [rsp + 0x7c], 0
0x00006eee      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00006ef1      48c744245000.  mov qword [rsp + 0x50], 0
0x00006efa      c644240f01     mov byte [rsp + 0xf], 1
0x00006eff      c644240d01     mov byte [rsp + 0xd], 1
0x00006f04      48c744241801.  mov qword [rsp + 0x18], 1
0x00006f0d      4531ff         xor r15d, r15d
0x00006f10      4889442448     mov qword [rsp + 0x48], rax
0x00006f15      e9d9efffff     jmp 0x5ef3
0x00006f1a      89d0           mov eax, edx
0x00006f1c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00006f21      4885db         test rbx, rbx
0x00006f24      742c           je 0x6f52
0x00006f26      84c0           test al, al
0x00006f28      7428           je 0x6f52
0x00006f2a      0fb60b         movzx ecx, byte [rbx]
0x00006f2d      4889d8         mov rax, rbx
0x00006f30      84c9           test cl, cl
0x00006f32      741e           je 0x6f52
0x00006f34      4c89fa         mov rdx, r15
0x00006f37      4c29f8         sub rax, r15
0x00006f3a      4939d5         cmp r13, rdx
0x00006f3d      7604           jbe 0x6f43
0x00006f3f      41880c16       mov byte [r14 + rdx], cl
0x00006f43      4883c201       add rdx, 1
0x00006f47      0fb60c10       movzx ecx, byte [rax + rdx]
0x00006f4b      84c9           test cl, cl
0x00006f4d      75eb           jne 0x6f3a
0x00006f4f      4989d7         mov r15, rdx
0x00006f52      4d39fd         cmp r13, r15
0x00006f55      0f869efaffff   jbe 0x69f9
0x00006f5b      43c6043e00     mov byte [r14 + r15], 0
0x00006f60      e994faffff     jmp 0x69f9
0x00006f65      837c240802     cmp dword [rsp + 8], 2
0x00006f6a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006f6f      4c89dd         mov rbp, r11
0x00006f72      0f94c0         sete al
0x00006f75      885c240d       mov byte [rsp + 0xd], bl
0x00006f79      e92bfaffff     jmp 0x69a9
0x00006f7e      8b742408       mov esi, dword [rsp + 8]
0x00006f82      4889cf         mov rdi, rcx
0x00006f85      e8a6edffff     call sym.gettext_quote.part.1
0x00006f8a      4889442468     mov qword [rsp + 0x68], rax
0x00006f8f      e952fcffff     jmp 0x6be6
0x00006f94      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00006f98      4889cf         mov rdi, rcx
0x00006f9b      e890edffff     call sym.gettext_quote.part.1
0x00006fa0      4889442460     mov qword [rsp + 0x60], rax
0x00006fa5      e967fcffff     jmp 0x6c11
0x00006faa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006faf      4c89dd         mov rbp, r11
0x00006fb2      89d0           mov eax, edx
0x00006fb4      885c240d       mov byte [rsp + 0xd], bl
0x00006fb8      e9ecf9ffff     jmp 0x69a9
0x00006fbd      4883ec08       sub rsp, 8
0x00006fc1      41b805000000   mov r8d, 5
0x00006fc7      4c89d9         mov rcx, r11
0x00006fca      ff742468       push qword [rsp + 0x68]
0x00006fce      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00006fd2      4c89f7         mov rdi, r14
0x00006fd5      ff742438       push qword [rsp + 0x38]
0x00006fd9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00006fe1      488b542430     mov rdx, qword [rsp + 0x30]
0x00006fe6      488b742470     mov rsi, qword [rsp + 0x70]
0x00006feb      e830eeffff     call sym.quotearg_buffer_restyled
0x00006ff0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00006ff4      4989c7         mov r15, rax
0x00006ff7      e9fdf9ffff     jmp 0x69f9
0x00006ffc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00007001      e916ffffff     jmp 0x6f1c
0x00007006      c74424080200.  mov dword [rsp + 8], 2
0x0000700e      e996f9ffff     jmp 0x69a9
0x00007013      e8c8a8ffff     call sym.imp.__stack_chk_fail
0x00007018      c644240d00     mov byte [rsp + 0xd], 0
0x0000701d      e96ffaffff     jmp 0x6a91
0x00007022      4c89dd         mov rbp, r11
0x00007025      e996f9ffff     jmp 0x69c0
0x0000702a      c644240e01     mov byte [rsp + 0xe], 1
0x0000702f      31c0           xor eax, eax
0x00007031      4531e4         xor r12d, r12d
0x00007034      48c744245000.  mov qword [rsp + 0x50], 0
0x0000703d      e9a2f5ffff     jmp 0x65e4
0x00007042      4c89ea         mov rdx, r13
0x00007045      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000704a      e9f3f5ffff     jmp 0x6642
0x0000704f      e8aca7ffff     call sym.imp.abort
0x00007054      6690           nop
0x00007056      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00007060      4157           push r15
0x00007062      4156           push r14
0x00007064      4c63ff         movsxd r15, edi
0x00007067      4155           push r13
0x00007069      4154           push r12
0x0000706b      4989d6         mov r14, rdx
0x0000706e      55             push rbp
0x0000706f      53             push rbx
0x00007070      4889cd         mov rbp, rcx
0x00007073      4883ec28       sub rsp, 0x28
0x00007077      4889742408     mov qword [rsp + 8], rsi
0x0000707c      e88fa7ffff     call sym.imp.__errno_location
0x00007081      4989c5         mov r13, rax
0x00007084      8b00           mov eax, dword [rax]
0x00007086      4585ff         test r15d, r15d
0x00007089      488b1df05f20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20d080:8]=0x20d090 obj.slotvec0
0x00007090      89442418       mov dword [rsp + 0x18], eax
0x00007094      0f8867010000   js 0x7201
0x0000709a      44393dd75f20.  cmp dword [obj.nslots], r15d            ; [0x20d078:4]=1
0x000070a1      7f62           jg 0x7105
0x000070a3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000070aa      0f8456010000   je 0x7206
0x000070b0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000070b4      488d05d55f20.  lea rax, obj.slotvec0                   ; 0x20d090
0x000070bb      4963f4         movsxd rsi, r12d
0x000070be      48c1e604       shl rsi, 4
0x000070c2      4839c3         cmp rbx, rax
0x000070c5      0f8415010000   je 0x71e0
0x000070cb      4889df         mov rdi, rbx
0x000070ce      e87d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000070d3      4889c3         mov rbx, rax
0x000070d6      488905a35f20.  mov qword [obj.slotvec], rax            ; [0x20d080:8]=0x20d090 obj.slotvec0
0x000070dd      48633d945f20.  movsxd rdi, dword [obj.nslots]          ; [0x20d078:4]=1
0x000070e4      4489e2         mov edx, r12d
0x000070e7      31f6           xor esi, esi
0x000070e9      29fa           sub edx, edi
0x000070eb      48c1e704       shl rdi, 4
0x000070ef      4863d2         movsxd rdx, edx
0x000070f2      4801df         add rdi, rbx
0x000070f5      48c1e204       shl rdx, 4
0x000070f9      e872a8ffff     call sym.imp.memset
0x000070fe      448925735f20.  mov dword [obj.nslots], r12d            ; [0x20d078:4]=1
0x00007105      8b4504         mov eax, dword [rbp + 4]
0x00007108      49c1e704       shl r15, 4
0x0000710c      4883ec08       sub rsp, 8
0x00007110      4c01fb         add rbx, r15
0x00007113      4c8d7d08       lea r15, [rbp + 8]
0x00007117      448b4500       mov r8d, dword [rbp]
0x0000711b      4c8b1b         mov r11, qword [rbx]
0x0000711e      4c8b6308       mov r12, qword [rbx + 8]
0x00007122      4c89f1         mov rcx, r14
0x00007125      83c801         or eax, 1
0x00007128      89442424       mov dword [rsp + 0x24], eax
0x0000712c      ff7530         push qword [rbp + 0x30]
0x0000712f      4189c1         mov r9d, eax
0x00007132      ff7528         push qword [rbp + 0x28]
0x00007135      4157           push r15
0x00007137      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000713a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000713f      4c89e7         mov rdi, r12
0x00007142      4c895c2430     mov qword [rsp + 0x30], r11
0x00007147      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000714c      4883c420       add rsp, 0x20
0x00007150      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00007155      4939c3         cmp r11, rax
0x00007158      7767           ja 0x71c1
0x0000715a      488d7001       lea rsi, [rax + 1]
0x0000715e      488d05db5f20.  lea rax, obj.slot0                      ; 0x20d140
0x00007165      4939c4         cmp r12, rax
0x00007168      488933         mov qword [rbx], rsi
0x0000716b      7412           je 0x717f
0x0000716d      4c89e7         mov rdi, r12
0x00007170      4889742410     mov qword [rsp + 0x10], rsi
0x00007175      e876a6ffff     call sym.imp.free
0x0000717a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000717f      4889f7         mov rdi, rsi
0x00007182      4889742410     mov qword [rsp + 0x10], rsi
0x00007187      e8640e0000     call sym.xmalloc
0x0000718c      4883ec08       sub rsp, 8
0x00007190      48894308       mov qword [rbx + 8], rax
0x00007194      448b4500       mov r8d, dword [rbp]
0x00007198      ff7530         push qword [rbp + 0x30]
0x0000719b      ff7528         push qword [rbp + 0x28]
0x0000719e      4c89f1         mov rcx, r14
0x000071a1      4157           push r15
0x000071a3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000071a8      4889c7         mov rdi, rax
0x000071ab      488b542428     mov rdx, qword [rsp + 0x28]
0x000071b0      488b742430     mov rsi, qword [rsp + 0x30]
0x000071b5      4989c4         mov r12, rax
0x000071b8      e863ecffff     call sym.quotearg_buffer_restyled
0x000071bd      4883c420       add rsp, 0x20
0x000071c1      8b442418       mov eax, dword [rsp + 0x18]
0x000071c5      41894500       mov dword [r13], eax
0x000071c9      4883c428       add rsp, 0x28
0x000071cd      4c89e0         mov rax, r12
0x000071d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000071d1      5d             pop rbp
0x000071d2      415c           pop r12
0x000071d4      415d           pop r13
0x000071d6      415e           pop r14
0x000071d8      415f           pop r15
0x000071da      c3             ret
0x000071db      0f1f440000     nop dword [rax + rax]
0x000071e0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000071e2      e8690e0000     call sym.xrealloc
0x000071e7      660f6f05a15e.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000071ef      4889c3         mov rbx, rax
0x000071f2      488905875e20.  mov qword [obj.slotvec], rax            ; [0x20d080:8]=0x20d090 obj.slotvec0
0x000071f9      0f1100         movups xmmword [rax], xmm0
0x000071fc      e9dcfeffff     jmp 0x70dd
0x00007201      e8faa5ffff     call sym.imp.abort
0x00007206      e835100000     call sym.xalloc_die
0x0000720b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00007210      4154           push r12
0x00007212      55             push rbp
0x00007213      53             push rbx
0x00007214      4889fb         mov rbx, rdi
0x00007217      e8f4a5ffff     call sym.imp.__errno_location
0x0000721c      448b20         mov r12d, dword [rax]
0x0000721f      4889c5         mov rbp, rax
0x00007222      488d05176020.  lea rax, obj.default_quoting_options    ; 0x20d240
0x00007229      4885db         test rbx, rbx
0x0000722c      be38000000     mov esi, 0x38                           ; '8'
0x00007231      480f44d8       cmove rbx, rax
0x00007235      4889df         mov rdi, rbx
0x00007238      e8b30f0000     call sym.xmemdup
0x0000723d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00007241      5b             pop rbx
0x00007242      5d             pop rbp
0x00007243      415c           pop r12
0x00007245      c3             ret
0x00007246      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00007250      488d05e95f20.  lea rax, obj.default_quoting_options    ; 0x20d240
0x00007257      4885ff         test rdi, rdi
0x0000725a      480f44f8       cmove rdi, rax
0x0000725e      8b07           mov eax, dword [rdi]
0x00007260      c3             ret
0x00007261      0f1f440000     nop dword [rax + rax]
0x00007266      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00007270      488d05c95f20.  lea rax, obj.default_quoting_options    ; 0x20d240
0x00007277      4885ff         test rdi, rdi
0x0000727a      480f44f8       cmove rdi, rax
0x0000727e      8937           mov dword [rdi], esi
0x00007280      c3             ret
0x00007281      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00007286      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00007290      488d05a95f20.  lea rax, obj.default_quoting_options    ; 0x20d240
0x00007297      4885ff         test rdi, rdi
0x0000729a      89f1           mov ecx, esi
0x0000729c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000072a0      89f0           mov eax, esi
0x000072a2      83e11f         and ecx, 0x1f
0x000072a5      c0e805         shr al, 5
0x000072a8      0fb6c0         movzx eax, al
0x000072ab      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000072b0      8b37           mov esi, dword [rdi]
0x000072b2      89f0           mov eax, esi
0x000072b4      d3e8           shr eax, cl
0x000072b6      31c2           xor edx, eax
0x000072b8      83e001         and eax, 1
0x000072bb      83e201         and edx, 1
0x000072be      d3e2           shl edx, cl
0x000072c0      31f2           xor edx, esi
0x000072c2      8917           mov dword [rdi], edx
0x000072c4      c3             ret
0x000072c5      90             nop
0x000072c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000072d0      488d05695f20.  lea rax, obj.default_quoting_options    ; 0x20d240
0x000072d7      4885ff         test rdi, rdi
0x000072da      480f44f8       cmove rdi, rax
0x000072de      8b4704         mov eax, dword [rdi + 4]
0x000072e1      897704         mov dword [rdi + 4], esi
0x000072e4      c3             ret
0x000072e5      90             nop
0x000072e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000072f0      488d05495f20.  lea rax, obj.default_quoting_options    ; 0x20d240
0x000072f7      4885ff         test rdi, rdi
0x000072fa      480f44f8       cmove rdi, rax
0x000072fe      4885f6         test rsi, rsi
0x00007301      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00007307      740e           je 0x7317
0x00007309      4885d2         test rdx, rdx
0x0000730c      7409           je 0x7317
0x0000730e      48897728       mov qword [rdi + 0x28], rsi
0x00007312      48895730       mov qword [rdi + 0x30], rdx
0x00007316      c3             ret
0x00007317      4883ec08       sub rsp, 8
0x0000731b      e8e0a4ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00007320      4157           push r15
0x00007322      4156           push r14
0x00007324      488d05155f20.  lea rax, obj.default_quoting_options    ; 0x20d240
0x0000732b      4155           push r13
0x0000732d      4154           push r12
0x0000732f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00007332      55             push rbp
0x00007333      53             push rbx
0x00007334      4c89c3         mov rbx, r8
0x00007337      4989f6         mov r14, rsi
0x0000733a      4989d7         mov r15, rdx
0x0000733d      4883ec18       sub rsp, 0x18
0x00007341      4d85c0         test r8, r8
0x00007344      480f44d8       cmove rbx, rax
0x00007348      48894c2408     mov qword [rsp + 8], rcx
0x0000734d      e8bea4ffff     call sym.imp.__errno_location
0x00007352      448b20         mov r12d, dword [rax]
0x00007355      4889c5         mov rbp, rax
0x00007358      488d4308       lea rax, [rbx + 8]
0x0000735c      4883ec08       sub rsp, 8
0x00007360      448b4b04       mov r9d, dword [rbx + 4]
0x00007364      ff7330         push qword [rbx + 0x30]
0x00007367      448b03         mov r8d, dword [rbx]
0x0000736a      ff7328         push qword [rbx + 0x28]
0x0000736d      4c89fa         mov rdx, r15
0x00007370      50             push rax
0x00007371      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00007376      4c89f6         mov rsi, r14
0x00007379      4c89ef         mov rdi, r13
0x0000737c      e89feaffff     call sym.quotearg_buffer_restyled
0x00007381      44896500       mov dword [rbp], r12d
0x00007385      4883c438       add rsp, 0x38
0x00007389      5b             pop rbx
0x0000738a      5d             pop rbp
0x0000738b      415c           pop r12
0x0000738d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000738f      415e           pop r14
0x00007391      415f           pop r15
0x00007393      c3             ret
0x00007394      6690           nop
0x00007396      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000073a0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000073a2      4156           push r14
0x000073a4      488d05955e20.  lea rax, obj.default_quoting_options    ; 0x20d240
0x000073ab      4155           push r13
0x000073ad      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000073af      4989d4         mov r12, rdx
0x000073b2      55             push rbp
0x000073b3      53             push rbx
0x000073b4      4889cb         mov rbx, rcx
0x000073b7      4989fe         mov r14, rdi
0x000073ba      4989f7         mov r15, rsi
0x000073bd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000073c1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000073c4      480f44d8       cmove rbx, rax
0x000073c8      31ed           xor ebp, ebp
0x000073ca      e841a4ffff     call sym.imp.__errno_location
0x000073cf      4d85e4         test r12, r12
0x000073d2      4989c5         mov r13, rax
0x000073d5      8b00           mov eax, dword [rax]
0x000073d7      400f94c5       sete bpl
0x000073db      0b6b04         or ebp, dword [rbx + 4]
0x000073de      4c8d5308       lea r10, [rbx + 8]
0x000073e2      4883ec08       sub rsp, 8
0x000073e6      448b03         mov r8d, dword [rbx]
0x000073e9      4c89f9         mov rcx, r15
0x000073ec      89442414       mov dword [rsp + 0x14], eax
0x000073f0      ff7330         push qword [rbx + 0x30]
0x000073f3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000073f6      ff7328         push qword [rbx + 0x28]
0x000073f9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000073fb      31f6           xor esi, esi
0x000073fd      4189e9         mov r9d, ebp
0x00007400      31ff           xor edi, edi
0x00007402      4c89542440     mov qword [rsp + 0x40], r10
0x00007407      e814eaffff     call sym.quotearg_buffer_restyled
0x0000740c      488d7001       lea rsi, [rax + 1]
0x00007410      4889442448     mov qword [rsp + 0x48], rax
0x00007415      4883c420       add rsp, 0x20
0x00007419      4889f7         mov rdi, rsi
0x0000741c      4889742418     mov qword [rsp + 0x18], rsi
0x00007421      e8ca0b0000     call sym.xmalloc
0x00007426      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000742b      4883ec08       sub rsp, 8
0x0000742f      ff7330         push qword [rbx + 0x30]
0x00007432      ff7328         push qword [rbx + 0x28]
0x00007435      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000743a      4189e9         mov r9d, ebp
0x0000743d      448b03         mov r8d, dword [rbx]
0x00007440      4c89f9         mov rcx, r15
0x00007443      4c89f2         mov rdx, r14
0x00007446      4889c7         mov rdi, rax
0x00007449      4152           push r10
0x0000744b      488b742438     mov rsi, qword [rsp + 0x38]
0x00007450      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00007455      8b44242c       mov eax, dword [rsp + 0x2c]
0x00007459      4883c420       add rsp, 0x20
0x0000745d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00007460      41894500       mov dword [r13], eax
0x00007464      7409           je 0x746f
0x00007466      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000746b      4d891c24       mov qword [r12], r11
0x0000746f      488b442410     mov rax, qword [rsp + 0x10]
0x00007474      4883c438       add rsp, 0x38
0x00007478      5b             pop rbx
0x00007479      5d             pop rbp
0x0000747a      415c           pop r12
0x0000747c      415d           pop r13
0x0000747e      415e           pop r14
0x00007480      415f           pop r15
0x00007482      c3             ret
0x00007483      0f1f00         nop dword [rax]
0x00007486      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00007490      4889d1         mov rcx, rdx
0x00007493      31d2           xor edx, edx
0x00007495      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000749a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000074a0      8b05d25b2000   mov eax, dword [obj.nslots]             ; [0x20d078:4]=1
0x000074a6      4154           push r12
0x000074a8      4c8b25d15b20.  mov r12, qword [obj.slotvec]            ; [0x20d080:8]=0x20d090 obj.slotvec0
0x000074af      55             push rbp
0x000074b0      53             push rbx
0x000074b1      83f801         cmp eax, 1
0x000074b4      7e2b           jle 0x74e1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000074b6      83e802         sub eax, 2
0x000074b9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000074be      48c1e004       shl rax, 4
0x000074c2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000074c7      660f1f840000.  nop word [rax + rax]
0x000074d0      488b3b         mov rdi, qword [rbx]
0x000074d3      4883c310       add rbx, 0x10
0x000074d7      e814a3ffff     call sym.imp.free
0x000074dc      4839eb         cmp rbx, rbp
0x000074df      75ef           jne 0x74d0
0x000074e1      498b7c2408     mov rdi, qword [r12 + 8]
0x000074e6      488d1d535c20.  lea rbx, obj.slot0                      ; 0x20d140
0x000074ed      4839df         cmp rdi, rbx
0x000074f0      7417           je 0x7509
0x000074f2      e8f9a2ffff     call sym.imp.free
0x000074f7      48c7058e5b20.  mov qword [obj.slotvec0], 0x100         ; [0x20d090:8]=256
0x00007502      48891d8f5b20.  mov qword [0x0020d098], rbx             ; [0x20d098:8]=0x20d140 obj.slot0
0x00007509      488d1d805b20.  lea rbx, obj.slotvec0                   ; 0x20d090
0x00007510      4939dc         cmp r12, rbx
0x00007513      740f           je 0x7524
0x00007515      4c89e7         mov rdi, r12
0x00007518      e8d3a2ffff     call sym.imp.free
0x0000751d      48891d5c5b20.  mov qword [obj.slotvec], rbx            ; [0x20d080:8]=0x20d090 obj.slotvec0
0x00007524      5b             pop rbx
0x00007525      c705495b2000.  mov dword [obj.nslots], 1               ; [0x20d078:4]=1
0x0000752f      5d             pop rbp
0x00007530      415c           pop r12
0x00007532      c3             ret
0x00007533      0f1f00         nop dword [rax]
0x00007536      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00007540      488d0df95c20.  lea rcx, obj.default_quoting_options    ; 0x20d240
0x00007547      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000754e      e90dfbffff     jmp sym.quotearg_n_options
0x00007553      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00007556      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00007560      488d0dd95c20.  lea rcx, obj.default_quoting_options    ; 0x20d240
0x00007567      e9f4faffff     jmp sym.quotearg_n_options
0x0000756c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00007570      488d0dc95c20.  lea rcx, obj.default_quoting_options    ; 0x20d240
0x00007577      4889fe         mov rsi, rdi
0x0000757a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007581      31ff           xor edi, edi
0x00007583      e9d8faffff     jmp sym.quotearg_n_options
0x00007588      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00007590      488d0da95c20.  lea rcx, obj.default_quoting_options    ; 0x20d240
0x00007597      4889f2         mov rdx, rsi
0x0000759a      4889fe         mov rsi, rdi
0x0000759d      31ff           xor edi, edi
0x0000759f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000075a4      6690           nop
0x000075a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000075b0      4883ec48       sub rsp, 0x48
0x000075b4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000075b7      64488b142528.  mov rdx, qword fs:[0x28]
0x000075c0      4889542438     mov qword [rsp + 0x38], rdx
0x000075c5      31d2           xor edx, edx
0x000075c7      83fe0a         cmp esi, 0xa
0x000075ca      7468           je 0x7634
0x000075cc      893424         mov dword [rsp], esi
0x000075cf      4889e1         mov rcx, rsp
0x000075d2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000075d9      4889c6         mov rsi, rax
0x000075dc      48c744240400.  mov qword [rsp + 4], 0
0x000075e5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000075ee      48c744241400.  mov qword [rsp + 0x14], 0
0x000075f7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00007600      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00007609      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00007612      c74424340000.  mov dword [rsp + 0x34], 0
0x0000761a      e841faffff     call sym.quotearg_n_options
0x0000761f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00007624      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000762d      750a           jne 0x7639                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000762f      4883c448       add rsp, 0x48
0x00007633      c3             ret
0x00007634      e8c7a1ffff     call sym.imp.abort
0x00007639      e8a2a2ffff     call sym.imp.__stack_chk_fail
0x0000763e      6690           nop
;-- quotearg_n_style_mem:
0x00007640      4883ec48       sub rsp, 0x48
0x00007644      4889d0         mov rax, rdx
0x00007647      4889ca         mov rdx, rcx
0x0000764a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00007653      48894c2438     mov qword [rsp + 0x38], rcx
0x00007658      31c9           xor ecx, ecx
0x0000765a      83fe0a         cmp esi, 0xa
0x0000765d      7461           je 0x76c0
0x0000765f      893424         mov dword [rsp], esi
0x00007662      4889e1         mov rcx, rsp
0x00007665      4889c6         mov rsi, rax
0x00007668      48c744240400.  mov qword [rsp + 4], 0
0x00007671      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000767a      48c744241400.  mov qword [rsp + 0x14], 0
0x00007683      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000768c      48c744242400.  mov qword [rsp + 0x24], 0
0x00007695      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000769e      c74424340000.  mov dword [rsp + 0x34], 0
0x000076a6      e8b5f9ffff     call sym.quotearg_n_options
0x000076ab      488b542438     mov rdx, qword [rsp + 0x38]
0x000076b0      644833142528.  xor rdx, qword fs:[0x28]
0x000076b9      750a           jne 0x76c5
0x000076bb      4883c448       add rsp, 0x48
0x000076bf      c3             ret
0x000076c0      e83ba1ffff     call sym.imp.abort
0x000076c5      e816a2ffff     call sym.imp.__stack_chk_fail
0x000076ca      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000076d0      4889f2         mov rdx, rsi
0x000076d3      89fe           mov esi, edi
0x000076d5      31ff           xor edi, edi
0x000076d7      e9d4feffff     jmp sym.quotearg_n_style
0x000076dc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000076e0      4889d1         mov rcx, rdx
0x000076e3      4889f2         mov rdx, rsi
0x000076e6      89fe           mov esi, edi
0x000076e8      31ff           xor edi, edi
0x000076ea      e951ffffff     jmp sym.quotearg_n_style_mem
0x000076ef      90             nop
;-- quotearg_char_mem:
0x000076f0      4883ec48       sub rsp, 0x48
0x000076f4      89d1           mov ecx, edx
0x000076f6      64488b042528.  mov rax, qword fs:[0x28]
0x000076ff      4889442438     mov qword [rsp + 0x38], rax
0x00007704      31c0           xor eax, eax
0x00007706      488b05635b20.  mov rax, qword [0x0020d270]             ; [0x20d270:8]=0
0x0000770d      4989e0         mov r8, rsp
0x00007710      83e11f         and ecx, 0x1f
0x00007713      660f6f05255b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000771b      4889442430     mov qword [rsp + 0x30], rax
0x00007720      89d0           mov eax, edx
0x00007722      0f290424       movaps xmmword [rsp], xmm0
0x00007726      c0e805         shr al, 5
0x00007729      0fb6c0         movzx eax, al
0x0000772c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00007731      660f6f05175b.  movdqa xmm0, xmmword [0x0020d250]
0x00007739      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000773e      660f6f051a5b.  movdqa xmm0, xmmword [0x0020d260]
0x00007746      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000774b      418b11         mov edx, dword [r9]
0x0000774e      89d0           mov eax, edx
0x00007750      d3e8           shr eax, cl
0x00007752      f7d0           not eax
0x00007754      83e001         and eax, 1
0x00007757      d3e0           shl eax, cl
0x00007759      4c89c1         mov rcx, r8
0x0000775c      31d0           xor eax, edx
0x0000775e      4889f2         mov rdx, rsi
0x00007761      4889fe         mov rsi, rdi
0x00007764      418901         mov dword [r9], eax
0x00007767      31ff           xor edi, edi
0x00007769      e8f2f8ffff     call sym.quotearg_n_options
0x0000776e      488b742438     mov rsi, qword [rsp + 0x38]
0x00007773      644833342528.  xor rsi, qword fs:[0x28]
0x0000777c      7505           jne 0x7783
0x0000777e      4883c448       add rsp, 0x48
0x00007782      c3             ret
0x00007783      e858a1ffff     call sym.imp.__stack_chk_fail
0x00007788      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00007790      400fbed6       movsx edx, sil
0x00007794      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000779b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000077a0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000077a5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000077ac      e93fffffff     jmp sym.quotearg_char_mem
0x000077b1      0f1f440000     nop dword [rax + rax]
0x000077b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000077c0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000077c5      e926ffffff     jmp sym.quotearg_char_mem
0x000077ca      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000077d0      4883ec48       sub rsp, 0x48
0x000077d4      4889d0         mov rax, rdx
0x000077d7      64488b142528.  mov rdx, qword fs:[0x28]
0x000077e0      4889542438     mov qword [rsp + 0x38], rdx
0x000077e5      31d2           xor edx, edx
0x000077e7      83fe0a         cmp esi, 0xa
0x000077ea      7468           je 0x7854
0x000077ec      893424         mov dword [rsp], esi
0x000077ef      4889e1         mov rcx, rsp
0x000077f2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000077f9      4889c6         mov rsi, rax
0x000077fc      48c744240400.  mov qword [rsp + 4], 0
0x00007805      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000780e      48c744241400.  mov qword [rsp + 0x14], 0
0x00007817      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00007820      48c744242400.  mov qword [rsp + 0x24], 0
0x00007829      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00007832      c74424340000.  mov dword [rsp + 0x34], 0
0x0000783a      e821f8ffff     call sym.quotearg_n_options
0x0000783f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00007844      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000784d      750a           jne 0x7859
0x0000784f      4883c448       add rsp, 0x48
0x00007853      c3             ret
0x00007854      e8a79fffff     call sym.imp.abort
0x00007859      e882a0ffff     call sym.imp.__stack_chk_fail
0x0000785e      6690           nop
;-- quotearg_n_custom_mem:
0x00007860      4883ec48       sub rsp, 0x48
0x00007864      4989c9         mov r9, rcx
0x00007867      488b0d025a20.  mov rcx, qword [0x0020d270]             ; [0x20d270:8]=0
0x0000786e      660f6f05ca59.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00007876      64488b042528.  mov rax, qword fs:[0x28]
0x0000787f      4889442438     mov qword [rsp + 0x38], rax
0x00007884      31c0           xor eax, eax
0x00007886      0f290424       movaps xmmword [rsp], xmm0
0x0000788a      4885f6         test rsi, rsi
0x0000788d      48894c2430     mov qword [rsp + 0x30], rcx
0x00007892      c704240a0000.  mov dword [rsp], 0xa
0x00007899      660f6f05af59.  movdqa xmm0, xmmword [0x0020d250]
0x000078a1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000078a6      660f6f05b259.  movdqa xmm0, xmmword [0x0020d260]
0x000078ae      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000078b3      7432           je 0x78e7
0x000078b5      4885d2         test rdx, rdx
0x000078b8      742d           je 0x78e7
0x000078ba      4889742428     mov qword [rsp + 0x28], rsi
0x000078bf      4889542430     mov qword [rsp + 0x30], rdx
0x000078c4      4889e1         mov rcx, rsp
0x000078c7      4c89c2         mov rdx, r8
0x000078ca      4c89ce         mov rsi, r9
0x000078cd      e88ef7ffff     call sym.quotearg_n_options
0x000078d2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000078d7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000078e0      750a           jne 0x78ec
0x000078e2      4883c448       add rsp, 0x48
0x000078e6      c3             ret
0x000078e7      e8149fffff     call sym.imp.abort
0x000078ec      e8ef9fffff     call sym.imp.__stack_chk_fail
0x000078f1      0f1f440000     nop dword [rax + rax]
0x000078f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00007900      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00007907      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000790c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00007910      4889d1         mov rcx, rdx
0x00007913      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000791a      4889f2         mov rdx, rsi
0x0000791d      4889fe         mov rsi, rdi
0x00007920      31ff           xor edi, edi
0x00007922      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00007927      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00007930      4989c8         mov r8, rcx
0x00007933      4889d1         mov rcx, rdx
0x00007936      4889f2         mov rdx, rsi
0x00007939      4889fe         mov rsi, rdi
0x0000793c      31ff           xor edi, edi
0x0000793e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00007943      0f1f00         nop dword [rax]
0x00007946      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00007950      488d0de95620.  lea rcx, obj.quote_quoting_options      ; 0x20d040
0x00007957      e904f7ffff     jmp sym.quotearg_n_options
0x0000795c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00007960      488d0dd95620.  lea rcx, obj.quote_quoting_options      ; 0x20d040
0x00007967      4889f2         mov rdx, rsi
0x0000796a      4889fe         mov rsi, rdi
0x0000796d      31ff           xor edi, edi
0x0000796f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00007974      6690           nop
0x00007976      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00007980      488d0db95620.  lea rcx, obj.quote_quoting_options      ; 0x20d040
0x00007987      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000798e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00007993      0f1f00         nop dword [rax]
0x00007996      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000079a0      488d0d995620.  lea rcx, obj.quote_quoting_options      ; 0x20d040
0x000079a7      4889fe         mov rsi, rdi
0x000079aa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000079b1      31ff           xor edi, edi
0x000079b3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000079b8      0f1f84000000.  nop dword [rax + rax]
;-- dup_safer:
0x000079c0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x000079c5      31f6           xor esi, esi
0x000079c7      31c0           xor eax, eax
0x000079c9      e9a2120000     jmp sym.rpl_fcntl
0x000079ce      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x000079d0      4157           push r15
0x000079d2      4156           push r14
0x000079d4      4155           push r13
0x000079d6      4154           push r12
0x000079d8      4d89cc         mov r12, r9
0x000079db      55             push rbp
0x000079dc      53             push rbx
0x000079dd      4889fd         mov rbp, rdi
0x000079e0      4c89c3         mov rbx, r8
0x000079e3      4883ec28       sub rsp, 0x28
0x000079e7      4885f6         test rsi, rsi
0x000079ea      0f8418010000   je 0x7b08
0x000079f0      4989d0         mov r8, rdx
0x000079f3      488d154e2a00.  lea rdx, [0x0000a448]                   ; "%s (%s) %s\n"
0x000079fa      4989c9         mov r9, rcx
0x000079fd      31c0           xor eax, eax
0x000079ff      4889f1         mov rcx, rsi
0x00007a02      be01000000     mov esi, 1
0x00007a07      e844a1ffff     call sym.imp.__fprintf_chk
0x00007a0c      488d35482a00.  lea rsi, [0x0000a45b]                   ; "(C)"
0x00007a13      31ff           xor edi, edi
0x00007a15      ba05000000     mov edx, 5
0x00007a1a      e8919effff     call sym.imp.dcgettext
0x00007a1f      488d155a2d00.  lea rdx, obj.version_etc_copyright      ; 0xa780 ; "Copyright %s %d Free Software Foundation, Inc."
0x00007a26      4889c1         mov rcx, rax
0x00007a29      41b8e3070000   mov r8d, 0x7e3
0x00007a2f      be01000000     mov esi, 1
0x00007a34      4889ef         mov rdi, rbp
0x00007a37      31c0           xor eax, eax
0x00007a39      e812a1ffff     call sym.imp.__fprintf_chk
0x00007a3e      488d35a32a00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xa4e8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00007a45      31ff           xor edi, edi
0x00007a47      ba05000000     mov edx, 5
0x00007a4c      e85f9effff     call sym.imp.dcgettext
0x00007a51      4889ee         mov rsi, rbp
0x00007a54      4889c7         mov rdi, rax
0x00007a57      e8549fffff     call sym.imp.fputs_unlocked
0x00007a5c      4983fc09       cmp r12, 9
0x00007a60      0f873a030000   ja 0x7da0
0x00007a66      488d15d72c00.  lea rdx, [0x0000a744]
0x00007a6d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00007a71      4801d0         add rax, rdx
0x00007a74      ffe0           jmp rax
0x00007a76      662e0f1f8400.  nop word cs:[rax + rax]
0x00007a80      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007a84      488b4310       mov rax, qword [rbx + 0x10]
0x00007a88      488d35c92b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xa658 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00007a8f      4c8b4308       mov r8, qword [rbx + 8]
0x00007a93      ba05000000     mov edx, 5
0x00007a98      31ff           xor edi, edi
0x00007a9a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007a9e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007aa2      4c894c2410     mov qword [rsp + 0x10], r9
0x00007aa7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007aab      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007aaf      48890424       mov qword [rsp], rax
0x00007ab3      4c89442408     mov qword [rsp + 8], r8
0x00007ab8      488b1b         mov rbx, qword [rbx]
0x00007abb      e8f09dffff     call sym.imp.dcgettext
0x00007ac0      4883ec08       sub rsp, 8
0x00007ac4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00007ac9      4889c2         mov rdx, rax
0x00007acc      4889d9         mov rcx, rbx
0x00007acf      be01000000     mov esi, 1
0x00007ad4      4889ef         mov rdi, rbp
0x00007ad7      31c0           xor eax, eax
0x00007ad9      4151           push r9
0x00007adb      4155           push r13
0x00007add      4154           push r12
0x00007adf      4157           push r15
0x00007ae1      4156           push r14
0x00007ae3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007ae8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007aed      e85ea0ffff     call sym.imp.__fprintf_chk
0x00007af2      4883c430       add rsp, 0x30
0x00007af6      4883c428       add rsp, 0x28
0x00007afa      5b             pop rbx
0x00007afb      5d             pop rbp
0x00007afc      415c           pop r12
0x00007afe      415d           pop r13
0x00007b00      415e           pop r14
0x00007b02      415f           pop r15
0x00007b04      c3             ret
0x00007b05      0f1f00         nop dword [rax]
0x00007b08      4989c8         mov r8, rcx
0x00007b0b      4889d1         mov rcx, rdx
0x00007b0e      488d153f2900.  lea rdx, str.s__s                       ; 0xa454 ; "%s %s\n"
0x00007b15      be01000000     mov esi, 1
0x00007b1a      31c0           xor eax, eax
0x00007b1c      e82fa0ffff     call sym.imp.__fprintf_chk
0x00007b21      e9e6feffff     jmp 0x7a0c
0x00007b26      662e0f1f8400.  nop word cs:[rax + rax]
0x00007b30      4c8b5340       mov r10, qword [rbx + 0x40]
0x00007b34      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007b38      488d35492b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xa688 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00007b3f      488b4310       mov rax, qword [rbx + 0x10]
0x00007b43      4c8b4308       mov r8, qword [rbx + 8]
0x00007b47      ba05000000     mov edx, 5
0x00007b4c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007b50      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007b54      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007b58      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007b5c      488b1b         mov rbx, qword [rbx]
0x00007b5f      4c89542418     mov qword [rsp + 0x18], r10
0x00007b64      4c894c2410     mov qword [rsp + 0x10], r9
0x00007b69      48890424       mov qword [rsp], rax
0x00007b6d      4c89442408     mov qword [rsp + 8], r8
0x00007b72      31ff           xor edi, edi
0x00007b74      e8379dffff     call sym.imp.dcgettext
0x00007b79      4c8b542418     mov r10, qword [rsp + 0x18]
0x00007b7e      4152           push r10
0x00007b80      e93fffffff     jmp 0x7ac4
0x00007b85      0f1f00         nop dword [rax]
0x00007b88      488b1b         mov rbx, qword [rbx]
0x00007b8b      488d35cd2800.  lea rsi, str.Written_by__s.             ; 0xa45f ; "Written by %s.\n"
0x00007b92      ba05000000     mov edx, 5
0x00007b97      31ff           xor edi, edi
0x00007b99      e8129dffff     call sym.imp.dcgettext
0x00007b9e      4883c428       add rsp, 0x28
0x00007ba2      4889d9         mov rcx, rbx
0x00007ba5      4889ef         mov rdi, rbp
0x00007ba8      5b             pop rbx
0x00007ba9      5d             pop rbp
0x00007baa      415c           pop r12
0x00007bac      415d           pop r13
0x00007bae      415e           pop r14
0x00007bb0      415f           pop r15
0x00007bb2      4889c2         mov rdx, rax
0x00007bb5      be01000000     mov esi, 1
0x00007bba      31c0           xor eax, eax
0x00007bbc      e98f9fffff     jmp sym.imp.__fprintf_chk
0x00007bc1      0f1f80000000.  nop dword [rax]
0x00007bc8      4c8b6308       mov r12, qword [rbx + 8]
0x00007bcc      488d359c2800.  lea rsi, str.Written_by__s_and__s.      ; 0xa46f ; "Written by %s and %s.\n"
0x00007bd3      488b1b         mov rbx, qword [rbx]
0x00007bd6      ba05000000     mov edx, 5
0x00007bdb      31ff           xor edi, edi
0x00007bdd      e8ce9cffff     call sym.imp.dcgettext
0x00007be2      4883c428       add rsp, 0x28
0x00007be6      4d89e0         mov r8, r12
0x00007be9      4889d9         mov rcx, rbx
0x00007bec      4889ef         mov rdi, rbp
0x00007bef      4889c2         mov rdx, rax
0x00007bf2      be01000000     mov esi, 1
0x00007bf7      5b             pop rbx
0x00007bf8      5d             pop rbp
0x00007bf9      415c           pop r12
0x00007bfb      415d           pop r13
0x00007bfd      415e           pop r14
0x00007bff      415f           pop r15
0x00007c01      31c0           xor eax, eax
0x00007c03      e9489fffff     jmp sym.imp.__fprintf_chk
0x00007c08      0f1f84000000.  nop dword [rax + rax]
0x00007c10      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007c14      4c8b6308       mov r12, qword [rbx + 8]
0x00007c18      488d35672800.  lea rsi, str.Written_by__s___s__and__s. ; 0xa486 ; "Written by %s, %s, and %s.\n"
0x00007c1f      488b1b         mov rbx, qword [rbx]
0x00007c22      ba05000000     mov edx, 5
0x00007c27      31ff           xor edi, edi
0x00007c29      e8829cffff     call sym.imp.dcgettext
0x00007c2e      4883c428       add rsp, 0x28
0x00007c32      4d89e9         mov r9, r13
0x00007c35      4d89e0         mov r8, r12
0x00007c38      4889d9         mov rcx, rbx
0x00007c3b      4889ef         mov rdi, rbp
0x00007c3e      4889c2         mov rdx, rax
0x00007c41      5b             pop rbx
0x00007c42      5d             pop rbp
0x00007c43      415c           pop r12
0x00007c45      415d           pop r13
0x00007c47      415e           pop r14
0x00007c49      415f           pop r15
0x00007c4b      be01000000     mov esi, 1
0x00007c50      31c0           xor eax, eax
0x00007c52      e9f99effff     jmp sym.imp.__fprintf_chk
0x00007c57      660f1f840000.  nop word [rax + rax]
0x00007c60      488d35512900.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xa5b8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00007c67      ba05000000     mov edx, 5
0x00007c6c      31ff           xor edi, edi
0x00007c6e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007c72      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007c76      4c8b6308       mov r12, qword [rbx + 8]
0x00007c7a      488b1b         mov rbx, qword [rbx]
0x00007c7d      e82e9cffff     call sym.imp.dcgettext
0x00007c82      4883ec08       sub rsp, 8
0x00007c86      4156           push r14
0x00007c88      4889c2         mov rdx, rax
0x00007c8b      4d89e9         mov r9, r13
0x00007c8e      4d89e0         mov r8, r12
0x00007c91      4889d9         mov rcx, rbx
0x00007c94      4889ef         mov rdi, rbp
0x00007c97      be01000000     mov esi, 1
0x00007c9c      31c0           xor eax, eax
0x00007c9e      e8ad9effff     call sym.imp.__fprintf_chk
0x00007ca3      58             pop rax
0x00007ca4      5a             pop rdx
0x00007ca5      4883c428       add rsp, 0x28
0x00007ca9      5b             pop rbx
0x00007caa      5d             pop rbp
0x00007cab      415c           pop r12
0x00007cad      415d           pop r13
0x00007caf      415e           pop r14
0x00007cb1      415f           pop r15
0x00007cb3      c3             ret
0x00007cb4      0f1f4000       nop dword [rax]
0x00007cb8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007cbc      488d35152900.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xa5d8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00007cc3      ba05000000     mov edx, 5
0x00007cc8      31ff           xor edi, edi
0x00007cca      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007cce      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007cd2      4c8b6308       mov r12, qword [rbx + 8]
0x00007cd6      488b1b         mov rbx, qword [rbx]
0x00007cd9      e8d29bffff     call sym.imp.dcgettext
0x00007cde      4157           push r15
0x00007ce0      eba4           jmp 0x7c86
0x00007ce2      660f1f440000   nop word [rax + rax]
0x00007ce8      4c8b4308       mov r8, qword [rbx + 8]
0x00007cec      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007cf0      488d35092900.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xa600 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00007cf7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007cfb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007cff      ba05000000     mov edx, 5
0x00007d04      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007d08      31ff           xor edi, edi
0x00007d0a      488b1b         mov rbx, qword [rbx]
0x00007d0d      4c890424       mov qword [rsp], r8
0x00007d11      e89a9bffff     call sym.imp.dcgettext
0x00007d16      4883ec08       sub rsp, 8
0x00007d1a      4d89e9         mov r9, r13
0x00007d1d      4154           push r12
0x00007d1f      4157           push r15
0x00007d21      4156           push r14
0x00007d23      4c8b442420     mov r8, qword [rsp + 0x20]
0x00007d28      4889d9         mov rcx, rbx
0x00007d2b      4889c2         mov rdx, rax
0x00007d2e      4889ef         mov rdi, rbp
0x00007d31      be01000000     mov esi, 1
0x00007d36      31c0           xor eax, eax
0x00007d38      e8139effff     call sym.imp.__fprintf_chk
0x00007d3d      4883c420       add rsp, 0x20
0x00007d41      4883c428       add rsp, 0x28
0x00007d45      5b             pop rbx
0x00007d46      5d             pop rbp
0x00007d47      415c           pop r12
0x00007d49      415d           pop r13
0x00007d4b      415e           pop r14
0x00007d4d      415f           pop r15
0x00007d4f      c3             ret
0x00007d50      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00007d54      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007d58      488d35c92800.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xa628 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00007d5f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007d63      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007d67      ba05000000     mov edx, 5
0x00007d6c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007d70      4c8b4308       mov r8, qword [rbx + 8]
0x00007d74      31ff           xor edi, edi
0x00007d76      4c894c2408     mov qword [rsp + 8], r9
0x00007d7b      488b1b         mov rbx, qword [rbx]
0x00007d7e      4c890424       mov qword [rsp], r8
0x00007d82      e8299bffff     call sym.imp.dcgettext
0x00007d87      4155           push r13
0x00007d89      4154           push r12
0x00007d8b      4157           push r15
0x00007d8d      4156           push r14
0x00007d8f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00007d94      eb8d           jmp 0x7d23
0x00007d96      662e0f1f8400.  nop word cs:[rax + rax]
0x00007da0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00007da4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007da8      ba05000000     mov edx, 5
0x00007dad      488b4310       mov rax, qword [rbx + 0x10]
0x00007db1      4c8b4308       mov r8, qword [rbx + 8]
0x00007db5      488d35042900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xa6c0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00007dbc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007dc0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007dc4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007dc8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007dcc      4c89542418     mov qword [rsp + 0x18], r10
0x00007dd1      4c894c2410     mov qword [rsp + 0x10], r9
0x00007dd6      48890424       mov qword [rsp], rax
0x00007dda      4c89442408     mov qword [rsp + 8], r8
0x00007ddf      488b1b         mov rbx, qword [rbx]
0x00007de2      e98bfdffff     jmp 0x7b72
0x00007de7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00007df0      4531c9         xor r9d, r9d
0x00007df3      49833800       cmp qword [r8], 0
0x00007df7      7412           je 0x7e0b
0x00007df9      0f1f80000000.  nop dword [rax]
0x00007e00      4983c101       add r9, 1
0x00007e04      4b833cc800     cmp qword [r8 + r9*8], 0
0x00007e09      75f5           jne 0x7e00
0x00007e0b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00007e10      4883ec68       sub rsp, 0x68
0x00007e14      4d89c2         mov r10, r8
0x00007e17      4531c9         xor r9d, r9d
0x00007e1a      64488b042528.  mov rax, qword fs:[0x28]
0x00007e23      4889442458     mov qword [rsp + 0x58], rax
0x00007e28      31c0           xor eax, eax
0x00007e2a      4989e0         mov r8, rsp
0x00007e2d      0f1f00         nop dword [rax]
0x00007e30      418b02         mov eax, dword [r10]
0x00007e33      83f82f         cmp eax, 0x2f
0x00007e36      7742           ja 0x7e7a
0x00007e38      4189c3         mov r11d, eax
0x00007e3b      4d035a10       add r11, qword [r10 + 0x10]
0x00007e3f      83c008         add eax, 8
0x00007e42      418902         mov dword [r10], eax
0x00007e45      498b03         mov rax, qword [r11]
0x00007e48      4885c0         test rax, rax
0x00007e4b      4b8904c8       mov qword [r8 + r9*8], rax
0x00007e4f      740a           je 0x7e5b
0x00007e51      4983c101       add r9, 1
0x00007e55      4983f90a       cmp r9, 0xa
0x00007e59      75d5           jne 0x7e30
0x00007e5b      e870fbffff     call sym.version_etc_arn
0x00007e60      488b442458     mov rax, qword [rsp + 0x58]
0x00007e65      644833042528.  xor rax, qword fs:[0x28]
0x00007e6e      7505           jne 0x7e75
0x00007e70      4883c468       add rsp, 0x68
0x00007e74      c3             ret
0x00007e75      e8669affff     call sym.imp.__stack_chk_fail
0x00007e7a      4d8b5a08       mov r11, qword [r10 + 8]
0x00007e7e      498d4308       lea rax, [r11 + 8]
0x00007e82      49894208       mov qword [r10 + 8], rax
0x00007e86      ebbd           jmp 0x7e45
0x00007e88      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00007e90      55             push rbp
0x00007e91      53             push rbx
0x00007e92      41ba20000000   mov r10d, 0x20                          ; "@"
0x00007e98      4531db         xor r11d, r11d
0x00007e9b      4881ecb80000.  sub rsp, 0xb8
0x00007ea2      64488b042528.  mov rax, qword fs:[0x28]
0x00007eab      4889442478     mov qword [rsp + 0x78], rax
0x00007eb0      31c0           xor eax, eax
0x00007eb2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00007eba      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00007ec2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00007eca      4c8d442420     lea r8, [rsp + 0x20]
0x00007ecf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00007ed7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00007edf      4889442410     mov qword [rsp + 0x10], rax
0x00007ee4      488d84248000.  lea rax, [rsp + 0x80]
0x00007eec      4531c9         xor r9d, r9d
0x00007eef      4889442418     mov qword [rsp + 0x18], rax
0x00007ef4      4889c5         mov rbp, rax
0x00007ef7      660f1f840000.  nop word [rax + rax]
0x00007f00      4183fa2f       cmp r10d, 0x2f
0x00007f04      7756           ja 0x7f5c
0x00007f06      4489d0         mov eax, r10d
0x00007f09      41bb01000000   mov r11d, 1
0x00007f0f      4183c208       add r10d, 8
0x00007f13      4801e8         add rax, rbp
0x00007f16      488b00         mov rax, qword [rax]
0x00007f19      4885c0         test rax, rax
0x00007f1c      4b8904c8       mov qword [r8 + r9*8], rax
0x00007f20      740a           je 0x7f2c
0x00007f22      4983c101       add r9, 1
0x00007f26      4983f90a       cmp r9, 0xa
0x00007f2a      75d4           jne 0x7f00
0x00007f2c      4584db         test r11b, r11b
0x00007f2f      7524           jne 0x7f55
0x00007f31      e89afaffff     call sym.version_etc_arn
0x00007f36      488b442478     mov rax, qword [rsp + 0x78]
0x00007f3b      644833042528.  xor rax, qword fs:[0x28]
0x00007f44      750a           jne 0x7f50
0x00007f46      4881c4b80000.  add rsp, 0xb8
0x00007f4d      5b             pop rbx
0x00007f4e      5d             pop rbp
0x00007f4f      c3             ret
0x00007f50      e88b99ffff     call sym.imp.__stack_chk_fail
0x00007f55      4489542408     mov dword [rsp + 8], r10d
0x00007f5a      ebd5           jmp 0x7f31
0x00007f5c      4889d8         mov rax, rbx
0x00007f5f      4883c308       add rbx, 8
0x00007f63      ebb1           jmp 0x7f16
0x00007f65      90             nop
0x00007f66      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00007f70      53             push rbx
0x00007f71      488d352a2500.  lea rsi, str.Report_bugs_to:__s         ; 0xa4a2 ; "\nReport bugs to: %s\n"
0x00007f78      ba05000000     mov edx, 5
0x00007f7d      31ff           xor edi, edi
0x00007f7f      e82c99ffff     call sym.imp.dcgettext
0x00007f84      488d152c2500.  lea rdx, str.bug_coreutils_gnu.org      ; 0xa4b7 ; "bug-coreutils@gnu.org"
0x00007f8b      4889c6         mov rsi, rax
0x00007f8e      bf01000000     mov edi, 1
0x00007f93      31c0           xor eax, eax
0x00007f95      e8169bffff     call sym.imp.__printf_chk
0x00007f9a      488d352c2500.  lea rsi, str.s_home_page:___s           ; 0xa4cd ; "%s home page: <%s>\n"
0x00007fa1      ba05000000     mov edx, 5
0x00007fa6      31ff           xor edi, edi
0x00007fa8      e80399ffff     call sym.imp.dcgettext
0x00007fad      488d0d4c1a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x9a00 ; "https://www.gnu.org/software/coreutils/"
0x00007fb4      488d15bb1200.  lea rdx, str.GNU_coreutils              ; 0x9276 ; "GNU coreutils"
0x00007fbb      4889c6         mov rsi, rax
0x00007fbe      bf01000000     mov edi, 1
0x00007fc3      31c0           xor eax, eax
0x00007fc5      e8e69affff     call sym.imp.__printf_chk
0x00007fca      488b1dd75020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x00007fd1      488d35282700.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xa700 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00007fd8      31ff           xor edi, edi
0x00007fda      ba05000000     mov edx, 5
0x00007fdf      e8cc98ffff     call sym.imp.dcgettext
0x00007fe4      4889de         mov rsi, rbx
0x00007fe7      4889c7         mov rdi, rax
0x00007fea      5b             pop rbx
0x00007feb      e9c099ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00007ff0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00007ff1      4889fb         mov rbx, rdi
0x00007ff4      e8379affff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00007ff9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00007ffc      7505           jne 0x8003
0x00007ffe      4885db         test rbx, rbx
0x00008001      7502           jne 0x8005
0x00008003      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00008004      c3             ret
0x00008005      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000800a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00008010      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00008013      48f7e6         mul rsi
0x00008016      4889c7         mov rdi, rax
0x00008019      0f90c0         seto al
0x0000801c      4885ff         test rdi, rdi
0x0000801f      780a           js 0x802b
0x00008021      0fb6c0         movzx eax, al
0x00008024      4885c0         test rax, rax
0x00008027      7502           jne 0x802b
0x00008029      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000802b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000802f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00008034      6690           nop
0x00008036      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00008040      ebae           jmp sym.xmalloc
0x00008042      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00008046      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00008050      4885f6         test rsi, rsi
0x00008053      53             push rbx
0x00008054      4889f3         mov rbx, rsi
0x00008057      7505           jne 0x805e
0x00008059      4885ff         test rdi, rdi
0x0000805c      751a           jne 0x8078
0x0000805e      4889de         mov rsi, rbx
0x00008061      e81a9affff     call sym.imp.realloc
0x00008066      4885c0         test rax, rax
0x00008069      7505           jne 0x8070
0x0000806b      4885db         test rbx, rbx
0x0000806e      7511           jne 0x8081                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00008070      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00008071      c3             ret
0x00008072      660f1f440000   nop word [rax + rax]
0x00008078      e87397ffff     call sym.imp.free
0x0000807d      31c0           xor eax, eax
0x0000807f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00008080      c3             ret
0x00008081      e8ba010000     call sym.xalloc_die
0x00008086      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00008090      4889f0         mov rax, rsi
0x00008093      48f7e2         mul rdx
0x00008096      4889c6         mov rsi, rax
0x00008099      0f90c0         seto al
0x0000809c      4885f6         test rsi, rsi
0x0000809f      780a           js 0x80ab
0x000080a1      0fb6c0         movzx eax, al
0x000080a4      4885c0         test rax, rax
0x000080a7      7502           jne 0x80ab
0x000080a9      eba5           jmp sym.xrealloc
0x000080ab      4883ec08       sub rsp, 8
0x000080af      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000080b4      6690           nop
0x000080b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000080c0      4885ff         test rdi, rdi
0x000080c3      4989d1         mov r9, rdx
0x000080c6      488b0e         mov rcx, qword [rsi]
0x000080c9      7435           je 0x8100
0x000080cb      31d2           xor edx, edx
0x000080cd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000080d7      49f7f1         div r9
0x000080da      4839c8         cmp rax, rcx
0x000080dd      763c           jbe 0x811b
0x000080df      4889c8         mov rax, rcx
0x000080e2      48d1e8         shr rax, 1
0x000080e5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000080ea      48890e         mov qword [rsi], rcx
0x000080ed      490fafc9       imul rcx, r9
0x000080f1      4889ce         mov rsi, rcx
0x000080f4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000080f9      0f1f80000000.  nop dword [rax]
0x00008100      4885c9         test rcx, rcx
0x00008103      7423           je 0x8128
0x00008105      4889c8         mov rax, rcx
0x00008108      49f7e1         mul r9
0x0000810b      0f90c2         seto dl
0x0000810e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00008111      0fb6d2         movzx edx, dl
0x00008114      7805           js 0x811b
0x00008116      4885d2         test rdx, rdx
0x00008119      74cf           je 0x80ea
0x0000811b      4883ec08       sub rsp, 8
0x0000811f      e81c010000     call sym.xalloc_die
0x00008124      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00008128      31d2           xor edx, edx
0x0000812a      b880000000     mov eax, 0x80
0x0000812f      4531c0         xor r8d, r8d
0x00008132      49f7f1         div r9
0x00008135      4885c0         test rax, rax
0x00008138      410f94c0       sete r8b
0x0000813c      498d0c00       lea rcx, [r8 + rax]
0x00008140      ebc3           jmp 0x8105
0x00008142      0f1f4000       nop dword [rax]
0x00008146      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00008150      4885ff         test rdi, rdi
0x00008153      488b06         mov rax, qword [rsi]
0x00008156      7428           je 0x8180
0x00008158      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00008162      4839d0         cmp rax, rdx
0x00008165      772a           ja 0x8191
0x00008167      4889c2         mov rdx, rax
0x0000816a      48d1ea         shr rdx, 1
0x0000816d      488d440201     lea rax, [rdx + rax + 1]
0x00008172      488906         mov qword [rsi], rax
0x00008175      4889c6         mov rsi, rax
0x00008178      e9d3feffff     jmp sym.xrealloc
0x0000817d      0f1f00         nop dword [rax]
0x00008180      4885c0         test rax, rax
0x00008183      ba80000000     mov edx, 0x80
0x00008188      480f44c2       cmove rax, rdx
0x0000818c      4885c0         test rax, rax
0x0000818f      79e1           jns 0x8172
0x00008191      4883ec08       sub rsp, 8
0x00008195      e8a6000000     call sym.xalloc_die
0x0000819a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000081a0      53             push rbx
0x000081a1      4889fb         mov rbx, rdi
0x000081a4      e847feffff     call sym.xmalloc
0x000081a9      4889da         mov rdx, rbx
0x000081ac      31f6           xor esi, esi
0x000081ae      4889c7         mov rdi, rax
0x000081b1      5b             pop rbx
0x000081b2      e9b997ffff     jmp sym.imp.memset
0x000081b7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000081c0      4889f8         mov rax, rdi
0x000081c3      4883ec08       sub rsp, 8
0x000081c7      48f7e6         mul rsi
0x000081ca      0f90c2         seto dl
0x000081cd      4885c0         test rax, rax
0x000081d0      7817           js 0x81e9
0x000081d2      0fb6d2         movzx edx, dl
0x000081d5      4885d2         test rdx, rdx
0x000081d8      750f           jne 0x81e9
0x000081da      e8e197ffff     call sym.imp.calloc
0x000081df      4885c0         test rax, rax
0x000081e2      7405           je 0x81e9
0x000081e4      4883c408       add rsp, 8
0x000081e8      c3             ret
0x000081e9      e852000000     call sym.xalloc_die
0x000081ee      6690           nop
;-- xmemdup:
0x000081f0      55             push rbp
0x000081f1      53             push rbx
0x000081f2      4889fd         mov rbp, rdi
0x000081f5      4889f7         mov rdi, rsi
0x000081f8      4889f3         mov rbx, rsi
0x000081fb      4883ec08       sub rsp, 8
0x000081ff      e8ecfdffff     call sym.xmalloc
0x00008204      4883c408       add rsp, 8
0x00008208      4889da         mov rdx, rbx
0x0000820b      4889ee         mov rsi, rbp
0x0000820e      5b             pop rbx
0x0000820f      5d             pop rbp
0x00008210      4889c7         mov rdi, rax
0x00008213      e9f897ffff     jmp sym.imp.memcpy
0x00008218      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00008220      53             push rbx
0x00008221      4889fb         mov rbx, rdi
0x00008224      e8a796ffff     call sym.imp.strlen
0x00008229      4889df         mov rdi, rbx
0x0000822c      488d7001       lea rsi, [rax + 1]
0x00008230      5b             pop rbx
0x00008231      ebbd           jmp sym.xmemdup
0x00008233      662e0f1f8400.  nop word cs:[rax + rax]
0x0000823d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00008240      488d35682500.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xa7af ; "memory exhausted"
0x00008247      4883ec08       sub rsp, 8
0x0000824b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00008250      31ff           xor edi, edi
0x00008252      e85996ffff     call sym.imp.dcgettext
0x00008257      8b3dd34d2000   mov edi, dword [obj.exit_failure]       ; [0x20d030:4]=1
0x0000825d      488d15a81c00.  lea rdx, [0x00009f0c]                   ; "%s"
0x00008264      4889c1         mov rcx, rax
0x00008267      31f6           xor esi, esi
0x00008269      31c0           xor eax, eax
0x0000826b      e86098ffff     call sym.imp.error
0x00008270      e88b95ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00008275      662e0f1f8400.  nop word cs:[rax + rax]
0x0000827f      90             nop
;-- xnumtoumax:
0x00008280      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00008282      4156           push r14
0x00008284      4989cf         mov r15, rcx
0x00008287      4155           push r13
0x00008289      4154           push r12
0x0000828b      4989d6         mov r14, rdx
0x0000828e      55             push rbp
0x0000828f      53             push rbx
0x00008290      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00008292      31f6           xor esi, esi
0x00008294      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00008297      4d89cd         mov r13, r9
0x0000829a      4883ec18       sub rsp, 0x18
0x0000829e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x000082a1      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x000082a5      64488b042528.  mov rax, qword fs:[0x28]
0x000082ae      4889442408     mov qword [rsp + 8], rax
0x000082b3      31c0           xor eax, eax
0x000082b5      e816050000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x000082ba      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x000082bc      0f858e000000   jne 0x8350
0x000082c2      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x000082c6      4c39f5         cmp rbp, r14
0x000082c9      7205           jb 0x82d0
0x000082cb      4c39fd         cmp rbp, r15
0x000082ce      7654           jbe 0x8324
0x000082d0      e83b95ffff     call sym.imp.__errno_location
0x000082d5      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x000082dc      4989c6         mov r14, rax
0x000082df      19c0           sbb eax, eax
0x000082e1      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x000082e4      83c04b         add eax, 0x4b
0x000082e7      418906         mov dword [r14], eax
0x000082ea      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x000082ed      e8aef6ffff     call sym.quote
0x000082f2      418b36         mov esi, dword [r14]
0x000082f5      4989c0         mov r8, rax
0x000082f8      b800000000     mov eax, 0
0x000082fd      488d15171c00.  lea rdx, str.s:__s                      ; 0x9f1b ; "%s: %s"
0x00008304      4c89e9         mov rcx, r13
0x00008307      83fe16         cmp esi, 0x16
0x0000830a      0f44f0         cmove esi, eax
0x0000830d      85db           test ebx, ebx
0x0000830f      b801000000     mov eax, 1
0x00008314      0f44d8         cmove ebx, eax
0x00008317      31c0           xor eax, eax
0x00008319      89df           mov edi, ebx
0x0000831b      e8b097ffff     call sym.imp.error
0x00008320      488b2c24       mov rbp, qword [rsp]
0x00008324      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00008329      644833142528.  xor rdx, qword fs:[0x28]
0x00008332      4889e8         mov rax, rbp
0x00008335      7544           jne 0x837b
0x00008337      4883c418       add rsp, 0x18
0x0000833b      5b             pop rbx
0x0000833c      5d             pop rbp
0x0000833d      415c           pop r12
0x0000833f      415d           pop r13
0x00008341      415e           pop r14
0x00008343      415f           pop r15
0x00008345      c3             ret
0x00008346      662e0f1f8400.  nop word cs:[rax + rax]
0x00008350      89c5           mov ebp, eax
0x00008352      e8b994ffff     call sym.imp.__errno_location
0x00008357      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x0000835a      4989c6         mov r14, rax
0x0000835d      7411           je 0x8370
0x0000835f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00008362      7586           jne 0x82ea
0x00008364      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x0000836a      e97bffffff     jmp 0x82ea
0x0000836f      90             nop
0x00008370      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00008376      e96fffffff     jmp 0x82ea
0x0000837b      e86095ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x00008380      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00008384      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00008386      4d89c1         mov r9, r8
0x00008389      4989c8         mov r8, rcx
0x0000838c      4889d1         mov rcx, rdx
0x0000838f      4889f2         mov rdx, rsi
0x00008392      be0a000000     mov esi, 0xa
0x00008397      e8e4feffff     call sym.xnumtoumax
0x0000839c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x000083a0      c3             ret
0x000083a1      662e0f1f8400.  nop word cs:[rax + rax]
0x000083ab      0f1f440000     nop dword [rax + rax]
;-- xstrtoul:
0x000083b0      4157           push r15
0x000083b2      4156           push r14
0x000083b4      4155           push r13
0x000083b6      4154           push r12
0x000083b8      55             push rbp
0x000083b9      53             push rbx
0x000083ba      4883ec28       sub rsp, 0x28
0x000083be      64488b042528.  mov rax, qword fs:[0x28]
0x000083c7      4889442418     mov qword [rsp + 0x18], rax
0x000083cc      31c0           xor eax, eax
0x000083ce      83fa24         cmp edx, 0x24
0x000083d1      0f875e030000   ja 0x8735
0x000083d7      488d442410     lea rax, [rsp + 0x10]
0x000083dc      4989f7         mov r15, rsi
0x000083df      4885f6         test rsi, rsi
0x000083e2      4889fd         mov rbp, rdi
0x000083e5      89542408       mov dword [rsp + 8], edx
0x000083e9      4989ce         mov r14, rcx
0x000083ec      4d89c5         mov r13, r8
0x000083ef      4c0f44f8       cmove r15, rax
0x000083f3      e81894ffff     call sym.imp.__errno_location
0x000083f8      c70000000000   mov dword [rax], 0
0x000083fe      4989c4         mov r12, rax
0x00008401      0fb65d00       movzx ebx, byte [rbp]
0x00008405      e88697ffff     call sym.imp.__ctype_b_loc
0x0000840a      8b542408       mov edx, dword [rsp + 8]
0x0000840e      488b30         mov rsi, qword [rax]
0x00008411      4889e8         mov rax, rbp
0x00008414      eb11           jmp 0x8427
0x00008416      662e0f1f8400.  nop word cs:[rax + rax]
0x00008420      4883c001       add rax, 1
0x00008424      0fb618         movzx ebx, byte [rax]
0x00008427      0fb6cb         movzx ecx, bl
0x0000842a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000842f      75ef           jne 0x8420
0x00008431      80fb2d         cmp bl, 0x2d
0x00008434      7452           je 0x8488
0x00008436      4c89fe         mov rsi, r15
0x00008439      4889ef         mov rdi, rbp
0x0000843c      e8cf96ffff     call sym.imp.strtoul
0x00008441      498b0f         mov rcx, qword [r15]
0x00008444      4889c3         mov rbx, rax
0x00008447      4839e9         cmp rcx, rbp
0x0000844a      742c           je 0x8478
0x0000844c      418b0424       mov eax, dword [r12]
0x00008450      85c0           test eax, eax
0x00008452      7464           je 0x84b8
0x00008454      83f822         cmp eax, 0x22
0x00008457      bd01000000     mov ebp, 1
0x0000845c      752a           jne 0x8488
0x0000845e      4d85ed         test r13, r13
0x00008461      7409           je 0x846c
0x00008463      440fb621       movzx r12d, byte [rcx]
0x00008467      4584e4         test r12b, r12b
0x0000846a      757b           jne 0x84e7
0x0000846c      49891e         mov qword [r14], rbx
0x0000846f      eb1c           jmp 0x848d
0x00008471      0f1f80000000.  nop dword [rax]
0x00008478      4d85ed         test r13, r13
0x0000847b      48894c2408     mov qword [rsp + 8], rcx
0x00008480      753e           jne 0x84c0
0x00008482      660f1f440000   nop word [rax + rax]
0x00008488      bd04000000     mov ebp, 4
0x0000848d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00008492      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000849b      89e8           mov eax, ebp
0x0000849d      0f858d020000   jne 0x8730
0x000084a3      4883c428       add rsp, 0x28
0x000084a7      5b             pop rbx
0x000084a8      5d             pop rbp
0x000084a9      415c           pop r12
0x000084ab      415d           pop r13
0x000084ad      415e           pop r14
0x000084af      415f           pop r15
0x000084b1      c3             ret
0x000084b2      660f1f440000   nop word [rax + rax]
0x000084b8      31ed           xor ebp, ebp
0x000084ba      eba2           jmp 0x845e
0x000084bc      0f1f4000       nop dword [rax]
0x000084c0      440fb66500     movzx r12d, byte [rbp]
0x000084c5      4584e4         test r12b, r12b
0x000084c8      74be           je 0x8488
0x000084ca      410fbef4       movsx esi, r12b
0x000084ce      4c89ef         mov rdi, r13
0x000084d1      31ed           xor ebp, ebp
0x000084d3      e83894ffff     call sym.imp.strchr
0x000084d8      4885c0         test rax, rax
0x000084db      bb01000000     mov ebx, 1
0x000084e0      488b4c2408     mov rcx, qword [rsp + 8]
0x000084e5      74a1           je 0x8488
0x000084e7      410fbef4       movsx esi, r12b
0x000084eb      4c89ef         mov rdi, r13
0x000084ee      48894c2408     mov qword [rsp + 8], rcx
0x000084f3      e81894ffff     call sym.imp.strchr
0x000084f8      4885c0         test rax, rax
0x000084fb      488b4c2408     mov rcx, qword [rsp + 8]
0x00008500      0f84c6000000   je 0x85cc
0x00008506      418d4424bb     lea eax, [r12 - 0x45]
0x0000850b      3c2f           cmp al, 0x2f
0x0000850d      7751           ja 0x8560
0x0000850f      48ba45893000.  movabs rdx, 0x814400308945
0x00008519      480fa3c2       bt rdx, rax
0x0000851d      7341           jae 0x8560
0x0000851f      be30000000     mov esi, 0x30                           ; '0'
0x00008524      4c89ef         mov rdi, r13
0x00008527      48894c2408     mov qword [rsp + 8], rcx
0x0000852c      e8df93ffff     call sym.imp.strchr
0x00008531      4885c0         test rax, rax
0x00008534      488b4c2408     mov rcx, qword [rsp + 8]
0x00008539      7425           je 0x8560
0x0000853b      0fb64101       movzx eax, byte [rcx + 1]
0x0000853f      3c44           cmp al, 0x44
0x00008541      740c           je 0x854f
0x00008543      3c69           cmp al, 0x69
0x00008545      0f84cd010000   je 0x8718
0x0000854b      3c42           cmp al, 0x42
0x0000854d      7511           jne 0x8560
0x0000854f      bf02000000     mov edi, 2
0x00008554      bee8030000     mov esi, 0x3e8
0x00008559      eb0f           jmp 0x856a
0x0000855b      0f1f440000     nop dword [rax + rax]
0x00008560      bf01000000     mov edi, 1
0x00008565      be00040000     mov esi, 0x400
0x0000856a      4183ec42       sub r12d, 0x42
0x0000856e      4180fc35       cmp r12b, 0x35
0x00008572      7758           ja 0x85cc
0x00008574      488d158d2200.  lea rdx, [0x0000a808]
0x0000857b      450fb6e4       movzx r12d, r12b
0x0000857f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00008583      4801d0         add rax, rdx
0x00008586      ffe0           jmp rax
0x00008588      4889d8         mov rax, rbx
0x0000858b      48f7e6         mul rsi
0x0000858e      0f80ed010000   jo 0x8781
0x00008594      4531c0         xor r8d, r8d
0x00008597      48f7e6         mul rsi
0x0000859a      0f80d2010000   jo 0x8772
0x000085a0      4889c3         mov rbx, rax
0x000085a3      4409c5         or ebp, r8d
0x000085a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000085b0      4863ff         movsxd rdi, edi
0x000085b3      89e8           mov eax, ebp
0x000085b5      4801f9         add rcx, rdi
0x000085b8      83c802         or eax, 2
0x000085bb      49890f         mov qword [r15], rcx
0x000085be      803900         cmp byte [rcx], 0
0x000085c1      49891e         mov qword [r14], rbx
0x000085c4      0f45e8         cmovne ebp, eax
0x000085c7      e9c1feffff     jmp 0x848d
0x000085cc      49891e         mov qword [r14], rbx
0x000085cf      83cd02         or ebp, 2
0x000085d2      e9b6feffff     jmp 0x848d
0x000085d7      ba02000000     mov edx, 2
0x000085dc      4889d0         mov rax, rdx
0x000085df      48f7e3         mul rbx
0x000085e2      0f8096000000   jo 0x867e
0x000085e8      4801db         add rbx, rbx
0x000085eb      ebc3           jmp 0x85b0
0x000085ed      ba00020000     mov edx, 0x200
0x000085f2      4889d0         mov rax, rdx
0x000085f5      48f7e3         mul rbx
0x000085f8      0f8080000000   jo 0x867e
0x000085fe      48c1e309       shl rbx, 9
0x00008602      ebac           jmp 0x85b0
0x00008604      41b807000000   mov r8d, 7
0x0000860a      4531c9         xor r9d, r9d
0x0000860d      0f1f00         nop dword [rax]
0x00008610      4889d8         mov rax, rbx
0x00008613      48f7e6         mul rsi
0x00008616      4889c3         mov rbx, rax
0x00008619      0f808f010000   jo 0x87ae
0x0000861f      4183e801       sub r8d, 1
0x00008623      75eb           jne 0x8610
0x00008625      4409cd         or ebp, r9d
0x00008628      eb86           jmp 0x85b0
0x0000862a      41b808000000   mov r8d, 8
0x00008630      4531c9         xor r9d, r9d
0x00008633      0f1f440000     nop dword [rax + rax]
0x00008638      4889d8         mov rax, rbx
0x0000863b      48f7e6         mul rsi
0x0000863e      4889c3         mov rbx, rax
0x00008641      0f8049010000   jo 0x8790
0x00008647      4183e801       sub r8d, 1
0x0000864b      75eb           jne 0x8638
0x0000864d      ebd6           jmp 0x8625
0x0000864f      41b804000000   mov r8d, 4
0x00008655      4531c9         xor r9d, r9d
0x00008658      4889d8         mov rax, rbx
0x0000865b      48f7e6         mul rsi
0x0000865e      4889c3         mov rbx, rax
0x00008661      0f80fc000000   jo 0x8763
0x00008667      4183e801       sub r8d, 1
0x0000866b      75eb           jne 0x8658
0x0000866d      ebb6           jmp 0x8625
0x0000866f      4889d8         mov rax, rbx
0x00008672      48f7e6         mul rsi
0x00008675      4889c3         mov rbx, rax
0x00008678      0f8132ffffff   jno 0x85b0
0x0000867e      bd01000000     mov ebp, 1
0x00008683      4883cbff       or rbx, 0xffffffffffffffff
0x00008687      e924ffffff     jmp 0x85b0
0x0000868c      0f1f4000       nop dword [rax]
0x00008690      41b805000000   mov r8d, 5
0x00008696      4531c9         xor r9d, r9d
0x00008699      4889d8         mov rax, rbx
0x0000869c      48f7e6         mul rsi
0x0000869f      4889c3         mov rbx, rax
0x000086a2      0f80f7000000   jo 0x879f
0x000086a8      4183e801       sub r8d, 1
0x000086ac      75eb           jne 0x8699
0x000086ae      e972ffffff     jmp 0x8625
0x000086b3      41b806000000   mov r8d, 6
0x000086b9      4531c9         xor r9d, r9d
0x000086bc      4889d8         mov rax, rbx
0x000086bf      48f7e6         mul rsi
0x000086c2      4889c3         mov rbx, rax
0x000086c5      0f8089000000   jo 0x8754
0x000086cb      4183e801       sub r8d, 1
0x000086cf      75eb           jne 0x86bc
0x000086d1      e94fffffff     jmp 0x8625
0x000086d6      ba00040000     mov edx, 0x400
0x000086db      4889d0         mov rax, rdx
0x000086de      48f7e3         mul rbx
0x000086e1      709b           jo 0x867e
0x000086e3      48c1e30a       shl rbx, 0xa
0x000086e7      e9c4feffff     jmp 0x85b0
0x000086ec      4889d8         mov rax, rbx
0x000086ef      48f7e6         mul rsi
0x000086f2      0f80c5000000   jo 0x87bd
0x000086f8      4531c0         xor r8d, r8d
0x000086fb      48f7e6         mul rsi
0x000086fe      0f8193feffff   jno 0x8597
0x00008704      41b801000000   mov r8d, 1
0x0000870a      4883c8ff       or rax, 0xffffffffffffffff
0x0000870e      e984feffff     jmp 0x8597
0x00008713      0f1f440000     nop dword [rax + rax]
0x00008718      31ff           xor edi, edi
0x0000871a      80790242       cmp byte [rcx + 2], 0x42
0x0000871e      be00040000     mov esi, 0x400
0x00008723      400f94c7       sete dil
0x00008727      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000872b      e93afeffff     jmp 0x856a
0x00008730      e8ab91ffff     call sym.imp.__stack_chk_fail
0x00008735      488d0da42100.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xa8e0 ; "xstrtoul"
0x0000873c      488d357d2000.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xa7c0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00008743      488d3d962000.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xa7e0 ; "0 <= strtol_base && strtol_base <= 36"
0x0000874a      ba54000000     mov edx, 0x54                           ; 'T'
0x0000874f      e8fc91ffff     call sym.imp.__assert_fail
0x00008754      41b901000000   mov r9d, 1
0x0000875a      4883cbff       or rbx, 0xffffffffffffffff
0x0000875e      e968ffffff     jmp 0x86cb
0x00008763      41b901000000   mov r9d, 1
0x00008769      4883cbff       or rbx, 0xffffffffffffffff
0x0000876d      e9f5feffff     jmp 0x8667
0x00008772      41b801000000   mov r8d, 1
0x00008778      4883cbff       or rbx, 0xffffffffffffffff
0x0000877c      e922feffff     jmp 0x85a3
0x00008781      4883c8ff       or rax, 0xffffffffffffffff
0x00008785      41b801000000   mov r8d, 1
0x0000878b      e907feffff     jmp 0x8597
0x00008790      41b901000000   mov r9d, 1
0x00008796      4883cbff       or rbx, 0xffffffffffffffff
0x0000879a      e9a8feffff     jmp 0x8647
0x0000879f      41b901000000   mov r9d, 1
0x000087a5      4883cbff       or rbx, 0xffffffffffffffff
0x000087a9      e9fafeffff     jmp 0x86a8
0x000087ae      41b901000000   mov r9d, 1
0x000087b4      4883cbff       or rbx, 0xffffffffffffffff
0x000087b8      e962feffff     jmp 0x861f
0x000087bd      41b801000000   mov r8d, 1
0x000087c3      4883c8ff       or rax, 0xffffffffffffffff
0x000087c7      e92fffffff     jmp 0x86fb
0x000087cc      0f1f4000       nop dword [rax]
;-- xstrtoumax:
0x000087d0      4157           push r15
0x000087d2      4156           push r14
0x000087d4      4155           push r13
0x000087d6      4154           push r12
0x000087d8      55             push rbp
0x000087d9      53             push rbx
0x000087da      4883ec28       sub rsp, 0x28
0x000087de      64488b042528.  mov rax, qword fs:[0x28]
0x000087e7      4889442418     mov qword [rsp + 0x18], rax
0x000087ec      31c0           xor eax, eax
0x000087ee      83fa24         cmp edx, 0x24
0x000087f1      0f875e030000   ja 0x8b55
0x000087f7      488d442410     lea rax, [rsp + 0x10]
0x000087fc      4989f7         mov r15, rsi
0x000087ff      4885f6         test rsi, rsi
0x00008802      4889fd         mov rbp, rdi
0x00008805      89542408       mov dword [rsp + 8], edx
0x00008809      4989ce         mov r14, rcx
0x0000880c      4d89c5         mov r13, r8
0x0000880f      4c0f44f8       cmove r15, rax
0x00008813      e8f88fffff     call sym.imp.__errno_location
0x00008818      c70000000000   mov dword [rax], 0
0x0000881e      4989c4         mov r12, rax
0x00008821      0fb65d00       movzx ebx, byte [rbp]
0x00008825      e86693ffff     call sym.imp.__ctype_b_loc
0x0000882a      8b542408       mov edx, dword [rsp + 8]
0x0000882e      488b30         mov rsi, qword [rax]
0x00008831      4889e8         mov rax, rbp
0x00008834      eb11           jmp 0x8847
0x00008836      662e0f1f8400.  nop word cs:[rax + rax]
0x00008840      4883c001       add rax, 1
0x00008844      0fb618         movzx ebx, byte [rax]
0x00008847      0fb6cb         movzx ecx, bl
0x0000884a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000884f      75ef           jne 0x8840
0x00008851      80fb2d         cmp bl, 0x2d
0x00008854      7452           je 0x88a8
0x00008856      31c9           xor ecx, ecx
0x00008858      4c89fe         mov rsi, r15
0x0000885b      4889ef         mov rdi, rbp
0x0000885e      e8fd90ffff     call sym.imp.__strtoul_internal
0x00008863      498b0f         mov rcx, qword [r15]
0x00008866      4889c3         mov rbx, rax
0x00008869      4839e9         cmp rcx, rbp
0x0000886c      742a           je 0x8898
0x0000886e      418b0424       mov eax, dword [r12]
0x00008872      85c0           test eax, eax
0x00008874      7462           je 0x88d8
0x00008876      83f822         cmp eax, 0x22
0x00008879      bd01000000     mov ebp, 1
0x0000887e      7528           jne 0x88a8
0x00008880      4d85ed         test r13, r13
0x00008883      7409           je 0x888e
0x00008885      440fb621       movzx r12d, byte [rcx]
0x00008889      4584e4         test r12b, r12b
0x0000888c      7579           jne 0x8907
0x0000888e      49891e         mov qword [r14], rbx
0x00008891      eb1a           jmp 0x88ad
0x00008893      0f1f440000     nop dword [rax + rax]
0x00008898      4d85ed         test r13, r13
0x0000889b      48894c2408     mov qword [rsp + 8], rcx
0x000088a0      753e           jne 0x88e0
0x000088a2      660f1f440000   nop word [rax + rax]
0x000088a8      bd04000000     mov ebp, 4
0x000088ad      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000088b2      6448333c2528.  xor rdi, qword fs:[0x28]
0x000088bb      89e8           mov eax, ebp
0x000088bd      0f858d020000   jne 0x8b50
0x000088c3      4883c428       add rsp, 0x28
0x000088c7      5b             pop rbx
0x000088c8      5d             pop rbp
0x000088c9      415c           pop r12
0x000088cb      415d           pop r13
0x000088cd      415e           pop r14
0x000088cf      415f           pop r15
0x000088d1      c3             ret
0x000088d2      660f1f440000   nop word [rax + rax]
0x000088d8      31ed           xor ebp, ebp
0x000088da      eba4           jmp 0x8880
0x000088dc      0f1f4000       nop dword [rax]
0x000088e0      440fb66500     movzx r12d, byte [rbp]
0x000088e5      4584e4         test r12b, r12b
0x000088e8      74be           je 0x88a8
0x000088ea      410fbef4       movsx esi, r12b
0x000088ee      4c89ef         mov rdi, r13
0x000088f1      31ed           xor ebp, ebp
0x000088f3      e81890ffff     call sym.imp.strchr
0x000088f8      4885c0         test rax, rax
0x000088fb      bb01000000     mov ebx, 1
0x00008900      488b4c2408     mov rcx, qword [rsp + 8]
0x00008905      74a1           je 0x88a8
0x00008907      410fbef4       movsx esi, r12b
0x0000890b      4c89ef         mov rdi, r13
0x0000890e      48894c2408     mov qword [rsp + 8], rcx
0x00008913      e8f88fffff     call sym.imp.strchr
0x00008918      4885c0         test rax, rax
0x0000891b      488b4c2408     mov rcx, qword [rsp + 8]
0x00008920      0f84c6000000   je 0x89ec
0x00008926      418d4424bb     lea eax, [r12 - 0x45]
0x0000892b      3c2f           cmp al, 0x2f
0x0000892d      7751           ja 0x8980
0x0000892f      48ba45893000.  movabs rdx, 0x814400308945
0x00008939      480fa3c2       bt rdx, rax
0x0000893d      7341           jae 0x8980
0x0000893f      be30000000     mov esi, 0x30                           ; '0'
0x00008944      4c89ef         mov rdi, r13
0x00008947      48894c2408     mov qword [rsp + 8], rcx
0x0000894c      e8bf8fffff     call sym.imp.strchr
0x00008951      4885c0         test rax, rax
0x00008954      488b4c2408     mov rcx, qword [rsp + 8]
0x00008959      7425           je 0x8980
0x0000895b      0fb64101       movzx eax, byte [rcx + 1]
0x0000895f      3c44           cmp al, 0x44
0x00008961      740c           je 0x896f
0x00008963      3c69           cmp al, 0x69
0x00008965      0f84cd010000   je 0x8b38
0x0000896b      3c42           cmp al, 0x42
0x0000896d      7511           jne 0x8980
0x0000896f      bf02000000     mov edi, 2
0x00008974      bee8030000     mov esi, 0x3e8
0x00008979      eb0f           jmp 0x898a
0x0000897b      0f1f440000     nop dword [rax + rax]
0x00008980      bf01000000     mov edi, 1
0x00008985      be00040000     mov esi, 0x400
0x0000898a      4183ec42       sub r12d, 0x42
0x0000898e      4180fc35       cmp r12b, 0x35
0x00008992      7758           ja 0x89ec
0x00008994      488d15551f00.  lea rdx, [0x0000a8f0]
0x0000899b      450fb6e4       movzx r12d, r12b
0x0000899f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000089a3      4801d0         add rax, rdx
0x000089a6      ffe0           jmp rax
0x000089a8      4889d8         mov rax, rbx
0x000089ab      48f7e6         mul rsi
0x000089ae      0f80ed010000   jo 0x8ba1
0x000089b4      4531c0         xor r8d, r8d
0x000089b7      48f7e6         mul rsi
0x000089ba      0f80d2010000   jo 0x8b92
0x000089c0      4889c3         mov rbx, rax
0x000089c3      4409c5         or ebp, r8d
0x000089c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000089d0      4863ff         movsxd rdi, edi
0x000089d3      89e8           mov eax, ebp
0x000089d5      4801f9         add rcx, rdi
0x000089d8      83c802         or eax, 2
0x000089db      49890f         mov qword [r15], rcx
0x000089de      803900         cmp byte [rcx], 0
0x000089e1      49891e         mov qword [r14], rbx
0x000089e4      0f45e8         cmovne ebp, eax
0x000089e7      e9c1feffff     jmp 0x88ad
0x000089ec      49891e         mov qword [r14], rbx
0x000089ef      83cd02         or ebp, 2
0x000089f2      e9b6feffff     jmp 0x88ad
0x000089f7      ba02000000     mov edx, 2
0x000089fc      4889d0         mov rax, rdx
0x000089ff      48f7e3         mul rbx
0x00008a02      0f8096000000   jo 0x8a9e
0x00008a08      4801db         add rbx, rbx
0x00008a0b      ebc3           jmp 0x89d0
0x00008a0d      ba00020000     mov edx, 0x200
0x00008a12      4889d0         mov rax, rdx
0x00008a15      48f7e3         mul rbx
0x00008a18      0f8080000000   jo 0x8a9e
0x00008a1e      48c1e309       shl rbx, 9
0x00008a22      ebac           jmp 0x89d0
0x00008a24      41b807000000   mov r8d, 7
0x00008a2a      4531c9         xor r9d, r9d
0x00008a2d      0f1f00         nop dword [rax]
0x00008a30      4889d8         mov rax, rbx
0x00008a33      48f7e6         mul rsi
0x00008a36      4889c3         mov rbx, rax
0x00008a39      0f808f010000   jo 0x8bce
0x00008a3f      4183e801       sub r8d, 1
0x00008a43      75eb           jne 0x8a30
0x00008a45      4409cd         or ebp, r9d
0x00008a48      eb86           jmp 0x89d0
0x00008a4a      41b808000000   mov r8d, 8
0x00008a50      4531c9         xor r9d, r9d
0x00008a53      0f1f440000     nop dword [rax + rax]
0x00008a58      4889d8         mov rax, rbx
0x00008a5b      48f7e6         mul rsi
0x00008a5e      4889c3         mov rbx, rax
0x00008a61      0f8049010000   jo 0x8bb0
0x00008a67      4183e801       sub r8d, 1
0x00008a6b      75eb           jne 0x8a58
0x00008a6d      ebd6           jmp 0x8a45
0x00008a6f      41b804000000   mov r8d, 4
0x00008a75      4531c9         xor r9d, r9d
0x00008a78      4889d8         mov rax, rbx
0x00008a7b      48f7e6         mul rsi
0x00008a7e      4889c3         mov rbx, rax
0x00008a81      0f80fc000000   jo 0x8b83
0x00008a87      4183e801       sub r8d, 1
0x00008a8b      75eb           jne 0x8a78
0x00008a8d      ebb6           jmp 0x8a45
0x00008a8f      4889d8         mov rax, rbx
0x00008a92      48f7e6         mul rsi
0x00008a95      4889c3         mov rbx, rax
0x00008a98      0f8132ffffff   jno 0x89d0
0x00008a9e      bd01000000     mov ebp, 1
0x00008aa3      4883cbff       or rbx, 0xffffffffffffffff
0x00008aa7      e924ffffff     jmp 0x89d0
0x00008aac      0f1f4000       nop dword [rax]
0x00008ab0      41b805000000   mov r8d, 5
0x00008ab6      4531c9         xor r9d, r9d
0x00008ab9      4889d8         mov rax, rbx
0x00008abc      48f7e6         mul rsi
0x00008abf      4889c3         mov rbx, rax
0x00008ac2      0f80f7000000   jo 0x8bbf
0x00008ac8      4183e801       sub r8d, 1
0x00008acc      75eb           jne 0x8ab9
0x00008ace      e972ffffff     jmp 0x8a45
0x00008ad3      41b806000000   mov r8d, 6
0x00008ad9      4531c9         xor r9d, r9d
0x00008adc      4889d8         mov rax, rbx
0x00008adf      48f7e6         mul rsi
0x00008ae2      4889c3         mov rbx, rax
0x00008ae5      0f8089000000   jo 0x8b74
0x00008aeb      4183e801       sub r8d, 1
0x00008aef      75eb           jne 0x8adc
0x00008af1      e94fffffff     jmp 0x8a45
0x00008af6      ba00040000     mov edx, 0x400
0x00008afb      4889d0         mov rax, rdx
0x00008afe      48f7e3         mul rbx
0x00008b01      709b           jo 0x8a9e
0x00008b03      48c1e30a       shl rbx, 0xa
0x00008b07      e9c4feffff     jmp 0x89d0
0x00008b0c      4889d8         mov rax, rbx
0x00008b0f      48f7e6         mul rsi
0x00008b12      0f80c5000000   jo 0x8bdd
0x00008b18      4531c0         xor r8d, r8d
0x00008b1b      48f7e6         mul rsi
0x00008b1e      0f8193feffff   jno 0x89b7
0x00008b24      41b801000000   mov r8d, 1
0x00008b2a      4883c8ff       or rax, 0xffffffffffffffff
0x00008b2e      e984feffff     jmp 0x89b7
0x00008b33      0f1f440000     nop dword [rax + rax]
0x00008b38      31ff           xor edi, edi
0x00008b3a      80790242       cmp byte [rcx + 2], 0x42
0x00008b3e      be00040000     mov esi, 0x400
0x00008b43      400f94c7       sete dil
0x00008b47      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00008b4b      e93afeffff     jmp 0x898a
0x00008b50      e88b8dffff     call sym.imp.__stack_chk_fail
0x00008b55      488d0d6c1e00.  lea rcx, obj.__PRETTY_FUNCTION__.4162_1 ; 0xa9c8 ; "xstrtoumax"
0x00008b5c      488d355d1c00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xa7c0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00008b63      488d3d761c00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xa7e0 ; "0 <= strtol_base && strtol_base <= 36"
0x00008b6a      ba54000000     mov edx, 0x54                           ; 'T'
0x00008b6f      e8dc8dffff     call sym.imp.__assert_fail
0x00008b74      41b901000000   mov r9d, 1
0x00008b7a      4883cbff       or rbx, 0xffffffffffffffff
0x00008b7e      e968ffffff     jmp 0x8aeb
0x00008b83      41b901000000   mov r9d, 1
0x00008b89      4883cbff       or rbx, 0xffffffffffffffff
0x00008b8d      e9f5feffff     jmp 0x8a87
0x00008b92      41b801000000   mov r8d, 1
0x00008b98      4883cbff       or rbx, 0xffffffffffffffff
0x00008b9c      e922feffff     jmp 0x89c3
0x00008ba1      4883c8ff       or rax, 0xffffffffffffffff
0x00008ba5      41b801000000   mov r8d, 1
0x00008bab      e907feffff     jmp 0x89b7
0x00008bb0      41b901000000   mov r9d, 1
0x00008bb6      4883cbff       or rbx, 0xffffffffffffffff
0x00008bba      e9a8feffff     jmp 0x8a67
0x00008bbf      41b901000000   mov r9d, 1
0x00008bc5      4883cbff       or rbx, 0xffffffffffffffff
0x00008bc9      e9fafeffff     jmp 0x8ac8
0x00008bce      41b901000000   mov r9d, 1
0x00008bd4      4883cbff       or rbx, 0xffffffffffffffff
0x00008bd8      e962feffff     jmp 0x8a3f
0x00008bdd      41b801000000   mov r8d, 1
0x00008be3      4883c8ff       or rax, 0xffffffffffffffff
0x00008be7      e92fffffff     jmp 0x8b1b
0x00008bec      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00008bf0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00008bf2      55             push rbp
0x00008bf3      53             push rbx
0x00008bf4      4889fb         mov rbx, rdi
0x00008bf7      e8248effff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00008bfc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00008bfe      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00008c01      7854           js 0x8c57                               ; ../coreutils-8.31/lib/fclose.c:66
0x00008c03      e8588effff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00008c08      85c0           test eax, eax
0x00008c0a      752c           jne 0x8c38
0x00008c0c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00008c0f      e8dc020000     call sym.rpl_fflush
0x00008c14      85c0           test eax, eax
0x00008c16      743c           je 0x8c54
0x00008c18      e8f38bffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00008c1d      448b20         mov r12d, dword [rax]
0x00008c20      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00008c23      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00008c26      e8658cffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00008c2b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00008c2e      7530           jne 0x8c60
0x00008c30      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00008c31      5d             pop rbp
0x00008c32      415c           pop r12
0x00008c34      c3             ret
0x00008c35      0f1f00         nop dword [rax]
0x00008c38      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00008c3b      e8e08dffff     call sym.imp.fileno
0x00008c40      31f6           xor esi, esi
0x00008c42      ba01000000     mov edx, 1
0x00008c47      89c7           mov edi, eax
0x00008c49      e8f28cffff     call sym.imp.lseek
0x00008c4e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008c52      75b8           jne 0x8c0c
0x00008c54      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00008c57      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00008c58      5d             pop rbp
0x00008c59      415c           pop r12
0x00008c5b      e9308cffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00008c60      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00008c64      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00008c69      ebc5           jmp 0x8c30
0x00008c6b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00008c70      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00008c72      55             push rbp
0x00008c73      89fd           mov ebp, edi
0x00008c75      53             push rbx
0x00008c76      4883ec50       sub rsp, 0x50
0x00008c7a      64488b042528.  mov rax, qword fs:[0x28]
0x00008c83      4889442418     mov qword [rsp + 0x18], rax
0x00008c88      31c0           xor eax, eax
0x00008c8a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00008c8f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00008c91      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00008c96      48894c2438     mov qword [rsp + 0x38], rcx
0x00008c9b      4c89442440     mov qword [rsp + 0x40], r8
0x00008ca0      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00008ca5      488d442420     lea rax, [rsp + 0x20]
0x00008caa      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00008caf      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00008cb6      4889442410     mov qword [rsp + 0x10], rax
0x00008cbb      0f8401020000   je 0x8ec2                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00008cc1      81fe06040000   cmp esi, 0x406
0x00008cc7      7547           jne 0x8d10
0x00008cc9      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00008cce      833da3452000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20d278:4]=0
0x00008cd5      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x3000 rip
0x00008cdc      448b6010       mov r12d, dword [rax + 0x10]
0x00008ce0      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00008ce3      0f882a010000   js 0x8e13                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00008ce9      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008ceb      be06040000     mov esi, 0x406
0x00008cf0      e87b8bffff     call sym.imp.fcntl
0x00008cf5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00008cf7      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008cf9      0f8889010000   js 0x8e88                               ; ../coreutils-8.31/lib/fcntl.c:510
0x00008cff      c7056f452000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20d278:4]=0
0x00008d09      eb45           jmp 0x8d50
0x00008d0b      0f1f440000     nop dword [rax + rax]
0x00008d10      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00008d13      742b           je 0x8d40
0x00008d15      7f59           jg 0x8d70
0x00008d17      83fe04         cmp esi, 4
0x00008d1a      0f84d0000000   je 0x8df0
0x00008d20      0f8fba000000   jg 0x8de0
0x00008d26      83fe02         cmp esi, 2
0x00008d29      0f84c1000000   je 0x8df0
0x00008d2f      7f0f           jg 0x8d40
0x00008d31      83fe01         cmp esi, 1
0x00008d34      7562           jne 0x8d98
0x00008d36      662e0f1f8400.  nop word cs:[rax + rax]
0x00008d40      89ef           mov edi, ebp
0x00008d42      31c0           xor eax, eax
0x00008d44      e8278bffff     call sym.imp.fcntl
0x00008d49      89c3           mov ebx, eax
0x00008d4b      0f1f440000     nop dword [rax + rax]
0x00008d50      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00008d55      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008d5e      89d8           mov eax, ebx
0x00008d60      0f8557010000   jne 0x8ebd                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00008d66      4883c450       add rsp, 0x50
0x00008d6a      5b             pop rbx
0x00008d6b      5d             pop rbp
0x00008d6c      415c           pop r12
0x00008d6e      c3             ret
0x00008d6f      90             nop
0x00008d70      81fe07040000   cmp esi, 0x407
0x00008d76      7f48           jg 0x8dc0
0x00008d78      81fe06040000   cmp esi, 0x406
0x00008d7e      7d70           jge 0x8df0
0x00008d80      81fe01040000   cmp esi, 0x401
0x00008d86      74b8           je 0x8d40
0x00008d88      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00008d8e      7460           je 0x8df0
0x00008d90      81fe00040000   cmp esi, 0x400
0x00008d96      7458           je 0x8df0
0x00008d98      8b0424         mov eax, dword [rsp]
0x00008d9b      83f82f         cmp eax, 0x2f
0x00008d9e      0f8736010000   ja 0x8eda
0x00008da4      4803442410     add rax, qword [rsp + 0x10]
0x00008da9      488b10         mov rdx, qword [rax]
0x00008dac      89ef           mov edi, ebp
0x00008dae      31c0           xor eax, eax
0x00008db0      e8bb8affff     call sym.imp.fcntl
0x00008db5      89c3           mov ebx, eax
0x00008db7      eb97           jmp 0x8d50
0x00008db9      0f1f80000000.  nop dword [rax]
0x00008dc0      81fe09040000   cmp esi, 0x409
0x00008dc6      7428           je 0x8df0
0x00008dc8      0f8c72ffffff   jl 0x8d40
0x00008dce      81fe0a040000   cmp esi, 0x40a
0x00008dd4      75c2           jne 0x8d98
0x00008dd6      e965ffffff     jmp 0x8d40                              ; ../coreutils-8.31/lib/fcntl.c:350
0x00008ddb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00008de0      83fe09         cmp esi, 9
0x00008de3      0f8457ffffff   je 0x8d40
0x00008de9      7f05           jg 0x8df0
0x00008deb      83fe08         cmp esi, 8
0x00008dee      75a8           jne 0x8d98
0x00008df0      8b0424         mov eax, dword [rsp]
0x00008df3      83f82f         cmp eax, 0x2f
0x00008df6      0f87e8000000   ja 0x8ee4
0x00008dfc      4803442410     add rax, qword [rsp + 0x10]
0x00008e01      8b10           mov edx, dword [rax]
0x00008e03      89ef           mov edi, ebp
0x00008e05      31c0           xor eax, eax
0x00008e07      e8648affff     call sym.imp.fcntl
0x00008e0c      89c3           mov ebx, eax
0x00008e0e      e93dffffff     jmp 0x8d50
0x00008e13      31f6           xor esi, esi
0x00008e15      31c0           xor eax, eax
0x00008e17      e8548affff     call sym.imp.fcntl
0x00008e1c      85c0           test eax, eax
0x00008e1e      89c3           mov ebx, eax
0x00008e20      0f882affffff   js 0x8d50
0x00008e26      833d4b442000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20d278:4]=0
0x00008e2d      0f851dffffff   jne 0x8d50
0x00008e33      31c0           xor eax, eax
0x00008e35      be01000000     mov esi, 1
0x00008e3a      89df           mov edi, ebx
0x00008e3c      e82f8affff     call sym.imp.fcntl
0x00008e41      85c0           test eax, eax
0x00008e43      781c           js 0x8e61
0x00008e45      83c801         or eax, 1
0x00008e48      be02000000     mov esi, 2
0x00008e4d      89df           mov edi, ebx
0x00008e4f      89c2           mov edx, eax
0x00008e51      31c0           xor eax, eax
0x00008e53      e8188affff     call sym.imp.fcntl
0x00008e58      83f8ff         cmp eax, 0xffffffff
0x00008e5b      0f85effeffff   jne 0x8d50
0x00008e61      e8aa89ffff     call sym.imp.__errno_location
0x00008e66      448b20         mov r12d, dword [rax]
0x00008e69      4889c5         mov rbp, rax
0x00008e6c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00008e6e      e80d8bffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00008e73      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00008e78      44896500       mov dword [rbp], r12d
0x00008e7c      e9cffeffff     jmp 0x8d50
0x00008e81      0f1f80000000.  nop dword [rax]
0x00008e88      e88389ffff     call sym.imp.__errno_location
0x00008e8d      833816         cmp dword [rax], 0x16
0x00008e90      0f8569feffff   jne 0x8cff
0x00008e96      31f6           xor esi, esi
0x00008e98      31c0           xor eax, eax
0x00008e9a      4489e2         mov edx, r12d
0x00008e9d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00008e9f      e8cc89ffff     call sym.imp.fcntl
0x00008ea4      85c0           test eax, eax
0x00008ea6      89c3           mov ebx, eax
0x00008ea8      0f88a2feffff   js 0x8d50
0x00008eae      c705c0432000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20d278:4]=0
0x00008eb8      e976ffffff     jmp 0x8e33
0x00008ebd      e81e8affff     call sym.imp.__stack_chk_fail
0x00008ec2      488b442410     mov rax, qword [rsp + 0x10]
0x00008ec7      31f6           xor esi, esi
0x00008ec9      8b5010         mov edx, dword [rax + 0x10]
0x00008ecc      31c0           xor eax, eax
0x00008ece      e89d89ffff     call sym.imp.fcntl
0x00008ed3      89c3           mov ebx, eax
0x00008ed5      e976feffff     jmp 0x8d50
0x00008eda      488b442408     mov rax, qword [rsp + 8]
0x00008edf      e9c5feffff     jmp 0x8da9
0x00008ee4      488b442408     mov rax, qword [rsp + 8]
0x00008ee9      e913ffffff     jmp 0x8e01
0x00008eee      6690           nop
;-- rpl_fflush:
0x00008ef0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00008ef3      53             push rbx
0x00008ef4      4889fb         mov rbx, rdi
0x00008ef7      7411           je 0x8f0a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00008ef9      e8628bffff     call sym.imp.__freading
0x00008efe      85c0           test eax, eax
0x00008f00      7408           je 0x8f0a
0x00008f02      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00008f08      750e           jne 0x8f18
0x00008f0a      4889df         mov rdi, rbx
0x00008f0d      5b             pop rbx
0x00008f0e      e92d8bffff     jmp sym.imp.fflush
0x00008f13      0f1f440000     nop dword [rax + rax]
0x00008f18      4889df         mov rdi, rbx
0x00008f1b      ba01000000     mov edx, 1
0x00008f20      31f6           xor esi, esi
0x00008f22      e809000000     call sym.rpl_fseeko
0x00008f27      4889df         mov rdi, rbx
0x00008f2a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00008f2b      e9108bffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00008f30      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00008f34      48394710       cmp qword [rdi + 0x10], rax
0x00008f38      7406           je 0x8f40                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00008f3a      e9a18bffff     jmp sym.imp.fseeko
0x00008f3f      90             nop
0x00008f40      488b4720       mov rax, qword [rdi + 0x20]
0x00008f44      48394728       cmp qword [rdi + 0x28], rax
0x00008f48      75f0           jne 0x8f3a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00008f4a      48837f4800     cmp qword [rdi + 0x48], 0
0x00008f4f      75e9           jne 0x8f3a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00008f51      4154           push r12
0x00008f53      55             push rbp
0x00008f54      4189d4         mov r12d, edx
0x00008f57      53             push rbx
0x00008f58      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00008f5b      4889fb         mov rbx, rdi
0x00008f5e      e8bd8affff     call sym.imp.fileno
0x00008f63      4489e2         mov edx, r12d
0x00008f66      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00008f69      89c7           mov edi, eax
0x00008f6b      e8d089ffff     call sym.imp.lseek
0x00008f70      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008f74      740c           je 0x8f82
0x00008f76      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00008f79      488983900000.  mov qword [rbx + 0x90], rax
0x00008f80      31c0           xor eax, eax
0x00008f82      5b             pop rbx
0x00008f83      5d             pop rbp
0x00008f84      415c           pop r12
0x00008f86      c3             ret
0x00008f87      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00008f90      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00008f92      4154           push r12
0x00008f94      4989f5         mov r13, rsi
0x00008f97      55             push rbp
0x00008f98      53             push rbx
0x00008f99      4889fb         mov rbx, rdi
0x00008f9c      4989d4         mov r12, rdx
0x00008f9f      4883ec18       sub rsp, 0x18
0x00008fa3      64488b042528.  mov rax, qword fs:[0x28]
0x00008fac      4889442408     mov qword [rsp + 8], rax
0x00008fb1      31c0           xor eax, eax
0x00008fb3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00008fb8      4885ff         test rdi, rdi
0x00008fbb      480f44d8       cmove rbx, rax
0x00008fbf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008fc2      e83989ffff     call sym.imp.mbrtowc
0x00008fc7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008fcb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008fce      7620           jbe 0x8ff0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008fd0      4d85e4         test r12, r12
0x00008fd3      741b           je 0x8ff0
0x00008fd5      31ff           xor edi, edi
0x00008fd7      e8c4000000     call sym.hard_locale
0x00008fdc      84c0           test al, al
0x00008fde      7510           jne 0x8ff0
0x00008fe0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008fe5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00008fea      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008fec      0f1f4000       nop dword [rax]
0x00008ff0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00008ff5      644833142528.  xor rdx, qword fs:[0x28]
0x00008ffe      4889e8         mov rax, rbp
0x00009001      750b           jne 0x900e
0x00009003      4883c418       add rsp, 0x18
0x00009007      5b             pop rbx
0x00009008      5d             pop rbp
0x00009009      415c           pop r12
0x0000900b      415d           pop r13
0x0000900d      c3             ret
0x0000900e      e8cd88ffff     call sym.imp.__stack_chk_fail
0x00009013      662e0f1f8400.  nop word cs:[rax + rax]
0x0000901d      0f1f00         nop dword [rax]
;-- close_stream:
0x00009020      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00009022      55             push rbp
0x00009023      4889fd         mov rbp, rdi
0x00009026      53             push rbx
0x00009027      e81488ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000902c      8b5d00         mov ebx, dword [rbp]
0x0000902f      4889ef         mov rdi, rbp
0x00009032      4989c4         mov r12, rax
0x00009035      e8b6fbffff     call sym.rpl_fclose
0x0000903a      83e320         and ebx, 0x20                           ; "@"
0x0000903d      85db           test ebx, ebx
0x0000903f      7517           jne 0x9058
0x00009041      85c0           test eax, eax
0x00009043      740a           je 0x904f                               ; stdio.h:-186
0x00009045      4d85e4         test r12, r12                           ; stdio.h:-178
0x00009048      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000904d      7439           je 0x9088
0x0000904f      5b             pop rbx
0x00009050      5d             pop rbp
0x00009051      415c           pop r12
0x00009053      c3             ret
0x00009054      0f1f4000       nop dword [rax]
0x00009058      85c0           test eax, eax
0x0000905a      751c           jne 0x9078
0x0000905c      e8af87ffff     call sym.imp.__errno_location
0x00009061      c70000000000   mov dword [rax], 0
0x00009067      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000906c      5b             pop rbx
0x0000906d      5d             pop rbp
0x0000906e      415c           pop r12
0x00009070      c3             ret
0x00009071      0f1f80000000.  nop dword [rax]
0x00009078      5b             pop rbx
0x00009079      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000907e      5d             pop rbp                                 ; stdio.h:-186
0x0000907f      415c           pop r12
0x00009081      c3             ret
0x00009082      660f1f440000   nop word [rax + rax]
0x00009088      e88387ffff     call sym.imp.__errno_location
0x0000908d      833809         cmp dword [rax], 9
0x00009090      5b             pop rbx
0x00009091      5d             pop rbp
0x00009092      415c           pop r12                                 ; stdio.h:-178
0x00009094      0f95c0         setne al
0x00009097      0fb6c0         movzx eax, al
0x0000909a      f7d8           neg eax
0x0000909c      c3             ret
0x0000909d      0f1f00         nop dword [rax]
;-- hard_locale:
0x000090a0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000090a4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000090a6      e8f589ffff     call sym.imp.setlocale
0x000090ab      4889c2         mov rdx, rax
0x000090ae      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000090b3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000090b6      741d           je 0x90d5
0x000090b8      488d3d141900.  lea rdi, [0x0000a9d3]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000090bf      b902000000     mov ecx, 2
0x000090c4      4889d6         mov rsi, rdx
0x000090c7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000090c9      0f97c1         seta cl
0x000090cc      80d900         sbb cl, 0
0x000090cf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000090d1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000090d3      750b           jne 0x90e0
0x000090d5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000090d9      c3             ret
0x000090da      660f1f440000   nop word [rax + rax]
0x000090e0      488d3dee1800.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xa9d5 ; "POSIX"
0x000090e7      b906000000     mov ecx, 6
0x000090ec      4889d6         mov rsi, rdx
0x000090ef      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000090f1      0f97c0         seta al
0x000090f4      1c00           sbb al, 0
0x000090f6      84c0           test al, al
0x000090f8      0f95c0         setne al
0x000090fb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000090ff      c3             ret
;-- locale_charset:
0x00009100      4883ec08       sub rsp, 8
0x00009104      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00009109      e84289ffff     call sym.imp.nl_langinfo
0x0000910e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00009111      741d           je 0x9130
0x00009113      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00009116      488d15be1800.  lea rdx, str.ASCII                      ; 0xa9db ; "ASCII"
0x0000911d      480f44c2       cmove rax, rdx
0x00009121      4883c408       add rsp, 8
0x00009125      c3             ret
0x00009126      662e0f1f8400.  nop word cs:[rax + rax]
0x00009130      488d05a41800.  lea rax, str.ASCII                      ; 0xa9db ; "ASCII"
0x00009137      4883c408       add rsp, 8
0x0000913b      c3             ret
0x0000913c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00009140      4157           push r15
0x00009142      4156           push r14
0x00009144      4989d7         mov r15, rdx
0x00009147      4155           push r13
0x00009149      4154           push r12
0x0000914b      4c8d255e3820.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20c9b0
0x00009152      55             push rbp
0x00009153      488d2d5e3820.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20c9b8
0x0000915a      53             push rbx
0x0000915b      4189fd         mov r13d, edi
0x0000915e      4989f6         mov r14, rsi
0x00009161      4c29e5         sub rbp, r12
0x00009164      4883ec08       sub rsp, 8
0x00009168      48c1fd03       sar rbp, 3
0x0000916c      e85786ffff     call sym._init
0x00009171      4885ed         test rbp, rbp
0x00009174      7420           je 0x9196
0x00009176      31db           xor ebx, ebx
0x00009178      0f1f84000000.  nop dword [rax + rax]
0x00009180      4c89fa         mov rdx, r15
0x00009183      4c89f6         mov rsi, r14
0x00009186      4489ef         mov edi, r13d
0x00009189      41ff14dc       call qword [r12 + rbx*8]
0x0000918d      4883c301       add rbx, 1
0x00009191      4839dd         cmp rbp, rbx
0x00009194      75ea           jne 0x9180
0x00009196      4883c408       add rsp, 8
0x0000919a      5b             pop rbx
0x0000919b      5d             pop rbp
0x0000919c      415c           pop r12
0x0000919e      415d           pop r13
0x000091a0      415e           pop r14
0x000091a2      415f           pop r15
0x000091a4      c3             ret
0x000091a5      90             nop
0x000091a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000091b0      f3c3           ret
0x000091b2      662e0f1f8400.  nop word cs:[rax + rax]
0x000091bc      0f1f4000       nop dword [rax]
;-- atexit:
0x000091c0      488b15413e20.  mov rdx, qword [obj.__dso_handle]       ; [0x20d008:8]=0x20d008 obj.__dso_handle
0x000091c7      31f6           xor esi, esi
0x000091c9      e95289ffff     jmp sym.imp.__cxa_atexit
0x000091ce      0000           add byte [rax], al
