;-- section..plt:
;-- .plt:
0x00001d90      ff359adf2000   push qword [0x0020fd30]                 ; [12] -r-x section size 1312 named .plt
0x00001d96      ff259cdf2000   jmp qword [0x0020fd38]                  ; [0x20fd38:8]=0
0x00001d9c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00001da0      ff259adf2000   jmp qword [reloc.getenv]                ; [0x20fd40:8]=0x1da6
0x00001da6      6800000000     push 0
0x00001dab      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001db0      ff2592df2000   jmp qword [reloc.free]                  ; [0x20fd48:8]=0x1db6
0x00001db6      6801000000     push 1
0x00001dbb      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001dc0      ff258adf2000   jmp qword [reloc.abort]                 ; [0x20fd50:8]=0x1dc6
0x00001dc6      6802000000     push 2
0x00001dcb      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001dd0      ff2582df2000   jmp qword [reloc.__errno_location]      ; [0x20fd58:8]=0x1dd6
0x00001dd6      6803000000     push 3
0x00001ddb      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001de0      ff257adf2000   jmp qword [reloc.strncmp]               ; [0x20fd60:8]=0x1de6
0x00001de6      6804000000     push 4
0x00001deb      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001df0      ff2572df2000   jmp qword [reloc._exit]                 ; [0x20fd68:8]=0x1df6
0x00001df6      6805000000     push 5
0x00001dfb      e990ffffff     jmp sym..plt
;-- imp.strcpy:
0x00001e00      ff256adf2000   jmp qword [reloc.strcpy]                ; [0x20fd70:8]=0x1e06
0x00001e06      6806000000     push 6
0x00001e0b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001e10      ff2562df2000   jmp qword [reloc.__fpending]            ; [0x20fd78:8]=0x1e16
0x00001e16      6807000000     push 7
0x00001e1b      e970ffffff     jmp sym..plt
;-- imp.__read_chk:
0x00001e20      ff255adf2000   jmp qword [reloc.__read_chk]            ; [0x20fd80:8]=0x1e26 ; "&\x1e"
0x00001e26      6808000000     push 8
0x00001e2b      e960ffffff     jmp sym..plt
;-- imp.mkdir:
0x00001e30      ff2552df2000   jmp qword [reloc.mkdir]                 ; [0x20fd88:8]=0x1e36 ; "6\x1e"
0x00001e36      6809000000     push 9
0x00001e3b      e950ffffff     jmp sym..plt
;-- imp.unlinkat:
0x00001e40      ff254adf2000   jmp qword [reloc.unlinkat]              ; [0x20fd90:8]=0x1e46 ; "F\x1e"
0x00001e46      680a000000     push 0xa
0x00001e4b      e940ffffff     jmp sym..plt
;-- imp.readlink:
0x00001e50      ff2542df2000   jmp qword [reloc.readlink]              ; [0x20fd98:8]=0x1e56 ; "V\x1e"
0x00001e56      680b000000     push 0xb
0x00001e5b      e930ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001e60      ff253adf2000   jmp qword [reloc.fcntl]                 ; [0x20fda0:8]=0x1e66 ; "f\x1e"
0x00001e66      680c000000     push 0xc
0x00001e6b      e920ffffff     jmp sym..plt
;-- imp.getpid:
0x00001e70      ff2532df2000   jmp qword [reloc.getpid]                ; [0x20fda8:8]=0x1e76 ; "v\x1e"
0x00001e76      680d000000     push 0xd
0x00001e7b      e910ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001e80      ff252adf2000   jmp qword [reloc.fread_unlocked]        ; [0x20fdb0:8]=0x1e86
0x00001e86      680e000000     push 0xe
0x00001e8b      e900ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001e90      ff2522df2000   jmp qword [reloc.textdomain]            ; [0x20fdb8:8]=0x1e96
0x00001e96      680f000000     push 0xf
0x00001e9b      e9f0feffff     jmp sym..plt
;-- imp.pathconf:
0x00001ea0      ff251adf2000   jmp qword [reloc.pathconf]              ; [0x20fdc0:8]=0x1ea6
0x00001ea6      6810000000     push 0x10
0x00001eab      e9e0feffff     jmp sym..plt
;-- imp.fclose:
0x00001eb0      ff2512df2000   jmp qword [reloc.fclose]                ; [0x20fdc8:8]=0x1eb6
0x00001eb6      6811000000     push 0x11
0x00001ebb      e9d0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001ec0      ff250adf2000   jmp qword [reloc.bindtextdomain]        ; [0x20fdd0:8]=0x1ec6
0x00001ec6      6812000000     push 0x12
0x00001ecb      e9c0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001ed0      ff2502df2000   jmp qword [reloc.dcgettext]             ; [0x20fdd8:8]=0x1ed6
0x00001ed6      6813000000     push 0x13
0x00001edb      e9b0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001ee0      ff25fade2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20fde0:8]=0x1ee6
0x00001ee6      6814000000     push 0x14
0x00001eeb      e9a0feffff     jmp sym..plt
;-- imp.strlen:
0x00001ef0      ff25f2de2000   jmp qword [reloc.strlen]                ; [0x20fde8:8]=0x1ef6
0x00001ef6      6815000000     push 0x15
0x00001efb      e990feffff     jmp sym..plt
;-- imp.__lxstat:
0x00001f00      ff25eade2000   jmp qword [reloc.__lxstat]              ; [0x20fdf0:8]=0x1f06
0x00001f06      6816000000     push 0x16
0x00001f0b      e980feffff     jmp sym..plt
;-- imp.openat:
0x00001f10      ff25e2de2000   jmp qword [reloc.openat]                ; [0x20fdf8:8]=0x1f16
0x00001f16      6817000000     push 0x17
0x00001f1b      e970feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001f20      ff25dade2000   jmp qword [reloc.__stack_chk_fail]      ; [0x20fe00:8]=0x1f26 ; "&\x1f"
0x00001f26      6818000000     push 0x18
0x00001f2b      e960feffff     jmp sym..plt
;-- imp.getuid:
0x00001f30      ff25d2de2000   jmp qword [reloc.getuid]                ; [0x20fe08:8]=0x1f36 ; "6\x1f"
0x00001f36      6819000000     push 0x19
0x00001f3b      e950feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001f40      ff25cade2000   jmp qword [reloc.getopt_long]           ; [0x20fe10:8]=0x1f46 ; "F\x1f"
0x00001f46      681a000000     push 0x1a
0x00001f4b      e940feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001f50      ff25c2de2000   jmp qword [reloc.mbrtowc]               ; [0x20fe18:8]=0x1f56 ; "V\x1f"
0x00001f56      681b000000     push 0x1b
0x00001f5b      e930feffff     jmp sym..plt
;-- imp.__fxstatat:
0x00001f60      ff25bade2000   jmp qword [reloc.__fxstatat]            ; [0x20fe20:8]=0x1f66 ; "f\x1f"
0x00001f66      681c000000     push 0x1c
0x00001f6b      e920feffff     jmp sym..plt
;-- imp.__overflow:
0x00001f70      ff25b2de2000   jmp qword [reloc.__overflow]            ; [0x20fe28:8]=0x1f76 ; "v\x1f"
0x00001f76      681d000000     push 0x1d
0x00001f7b      e910feffff     jmp sym..plt
;-- imp.strrchr:
0x00001f80      ff25aade2000   jmp qword [reloc.strrchr]               ; [0x20fe30:8]=0x1f86
0x00001f86      681e000000     push 0x1e
0x00001f8b      e900feffff     jmp sym..plt
;-- imp.lseek:
0x00001f90      ff25a2de2000   jmp qword [reloc.lseek]                 ; [0x20fe38:8]=0x1f96
0x00001f96      681f000000     push 0x1f
0x00001f9b      e9f0fdffff     jmp sym..plt
;-- imp.gettimeofday:
0x00001fa0      ff259ade2000   jmp qword [reloc.gettimeofday]          ; [0x20fe40:8]=0x1fa6
0x00001fa6      6820000000     push 0x20                               ; "@"
0x00001fab      e9e0fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001fb0      ff2592de2000   jmp qword [reloc.__assert_fail]         ; [0x20fe48:8]=0x1fb6
0x00001fb6      6821000000     push 0x21                               ; '!'
0x00001fbb      e9d0fdffff     jmp sym..plt
;-- imp.memset:
0x00001fc0      ff258ade2000   jmp qword [reloc.memset]                ; [0x20fe50:8]=0x1fc6
0x00001fc6      6822000000     push 0x22                               ; '"'
0x00001fcb      e9c0fdffff     jmp sym..plt
;-- imp.getcwd:
0x00001fd0      ff2582de2000   jmp qword [reloc.getcwd]                ; [0x20fe58:8]=0x1fd6
0x00001fd6      6823000000     push 0x23                               ; '#'
0x00001fdb      e9b0fdffff     jmp sym..plt
;-- imp.close:
0x00001fe0      ff257ade2000   jmp qword [reloc.close]                 ; [0x20fe60:8]=0x1fe6
0x00001fe6      6824000000     push 0x24                               ; '$'
0x00001feb      e9a0fdffff     jmp sym..plt
;-- imp.rewinddir:
0x00001ff0      ff2572de2000   jmp qword [reloc.rewinddir]             ; [0x20fe68:8]=0x1ff6
0x00001ff6      6825000000     push 0x25                               ; '%'
0x00001ffb      e990fdffff     jmp sym..plt
;-- imp.strspn:
0x00002000      ff256ade2000   jmp qword [reloc.strspn]                ; [0x20fe70:8]=0x2006
0x00002006      6826000000     push 0x26                               ; '&'
0x0000200b      e980fdffff     jmp sym..plt
;-- imp.closedir:
0x00002010      ff2562de2000   jmp qword [reloc.closedir]              ; [0x20fe78:8]=0x2016
0x00002016      6827000000     push 0x27                               ; '''
0x0000201b      e970fdffff     jmp sym..plt
;-- imp.memcmp:
0x00002020      ff255ade2000   jmp qword [reloc.memcmp]                ; [0x20fe80:8]=0x2026 ; "& "
0x00002026      6828000000     push 0x28                               ; '('
0x0000202b      e960fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00002030      ff2552de2000   jmp qword [reloc.fputs_unlocked]        ; [0x20fe88:8]=0x2036 ; "6 "
0x00002036      6829000000     push 0x29                               ; ')'
0x0000203b      e950fdffff     jmp sym..plt
;-- imp.calloc:
0x00002040      ff254ade2000   jmp qword [reloc.calloc]                ; [0x20fe90:8]=0x2046 ; "F "
0x00002046      682a000000     push 0x2a                               ; '*'
0x0000204b      e940fdffff     jmp sym..plt
;-- imp.__getdelim:
0x00002050      ff2542de2000   jmp qword [reloc.__getdelim]            ; [0x20fe98:8]=0x2056 ; "V "
0x00002056      682b000000     push 0x2b                               ; '+'
0x0000205b      e930fdffff     jmp sym..plt
;-- imp.strcmp:
0x00002060      ff253ade2000   jmp qword [reloc.strcmp]                ; [0x20fea0:8]=0x2066 ; "f "
0x00002066      682c000000     push 0x2c                               ; ','
0x0000206b      e920fdffff     jmp sym..plt
;-- imp.fpathconf:
0x00002070      ff2532de2000   jmp qword [reloc.fpathconf]             ; [0x20fea8:8]=0x2076 ; "v "
0x00002076      682d000000     push 0x2d                               ; '-'
0x0000207b      e910fdffff     jmp sym..plt
;-- imp.rpmatch:
0x00002080      ff252ade2000   jmp qword [reloc.rpmatch]               ; [0x20feb0:8]=0x2086
0x00002086      682e000000     push 0x2e                               ; '.'
0x0000208b      e900fdffff     jmp sym..plt
;-- imp.syscall:
0x00002090      ff2522de2000   jmp qword [reloc.syscall]               ; [0x20feb8:8]=0x2096
0x00002096      682f000000     push 0x2f                               ; '/'
0x0000209b      e9f0fcffff     jmp sym..plt
;-- imp.memcpy:
0x000020a0      ff251ade2000   jmp qword [reloc.memcpy]                ; [0x20fec0:8]=0x20a6
0x000020a6      6830000000     push 0x30                               ; '0'
0x000020ab      e9e0fcffff     jmp sym..plt
;-- imp.fileno:
0x000020b0      ff2512de2000   jmp qword [reloc.fileno]                ; [0x20fec8:8]=0x20b6
0x000020b6      6831000000     push 0x31                               ; '1'
0x000020bb      e9d0fcffff     jmp sym..plt
;-- imp.getgid:
0x000020c0      ff250ade2000   jmp qword [reloc.getgid]                ; [0x20fed0:8]=0x20c6
0x000020c6      6832000000     push 0x32                               ; '2'
0x000020cb      e9c0fcffff     jmp sym..plt
;-- imp.__xstat:
0x000020d0      ff2502de2000   jmp qword [reloc.__xstat]               ; [0x20fed8:8]=0x20d6
0x000020d6      6833000000     push 0x33                               ; '3'
0x000020db      e9b0fcffff     jmp sym..plt
;-- imp.readdir:
0x000020e0      ff25fadd2000   jmp qword [reloc.readdir]               ; [0x20fee0:8]=0x20e6
0x000020e6      6834000000     push 0x34                               ; '4'
0x000020eb      e9a0fcffff     jmp sym..plt
;-- imp.malloc:
0x000020f0      ff25f2dd2000   jmp qword [reloc.malloc]                ; [0x20fee8:8]=0x20f6
0x000020f6      6835000000     push 0x35                               ; '5'
0x000020fb      e990fcffff     jmp sym..plt
;-- imp.fflush:
0x00002100      ff25eadd2000   jmp qword [reloc.fflush]                ; [0x20fef0:8]=0x2106
0x00002106      6836000000     push 0x36                               ; '6'
0x0000210b      e980fcffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00002110      ff25e2dd2000   jmp qword [reloc.nl_langinfo]           ; [0x20fef8:8]=0x2116
0x00002116      6837000000     push 0x37                               ; '7'
0x0000211b      e970fcffff     jmp sym..plt
;-- imp.__freading:
0x00002120      ff25dadd2000   jmp qword [reloc.__freading]            ; [0x20ff00:8]=0x2126 ; "&!"
0x00002126      6838000000     push 0x38                               ; '8'
0x0000212b      e960fcffff     jmp sym..plt
;-- imp.realloc:
0x00002130      ff25d2dd2000   jmp qword [reloc.realloc]               ; [0x20ff08:8]=0x2136 ; "6!"
0x00002136      6839000000     push 0x39                               ; '9'
0x0000213b      e950fcffff     jmp sym..plt
;-- imp.fdopen:
0x00002140      ff25cadd2000   jmp qword [reloc.fdopen]                ; [0x20ff10:8]=0x2146 ; "F!"
0x00002146      683a000000     push 0x3a                               ; ':'
0x0000214b      e940fcffff     jmp sym..plt
;-- imp.linkat:
0x00002150      ff25c2dd2000   jmp qword [reloc.linkat]                ; [0x20ff18:8]=0x2156 ; "V!"
0x00002156      683b000000     push 0x3b                               ; ';'
0x0000215b      e930fcffff     jmp sym..plt
;-- imp.setlocale:
0x00002160      ff25badd2000   jmp qword [reloc.setlocale]             ; [0x20ff20:8]=0x2166 ; "f!"
0x00002166      683c000000     push 0x3c                               ; '<'
0x0000216b      e920fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00002170      ff25b2dd2000   jmp qword [reloc.__printf_chk]          ; [0x20ff28:8]=0x2176 ; "v!"
0x00002176      683d000000     push 0x3d                               ; '='
0x0000217b      e910fcffff     jmp sym..plt
;-- imp.setvbuf:
0x00002180      ff25aadd2000   jmp qword [reloc.setvbuf]               ; [0x20ff30:8]=0x2186
0x00002186      683e000000     push 0x3e                               ; '>'
0x0000218b      e900fcffff     jmp sym..plt
;-- imp.mempcpy:
0x00002190      ff25a2dd2000   jmp qword [reloc.mempcpy]               ; [0x20ff38:8]=0x2196
0x00002196      683f000000     push 0x3f                               ; '?'
0x0000219b      e9f0fbffff     jmp sym..plt
;-- imp.memmove:
0x000021a0      ff259add2000   jmp qword [reloc.memmove]               ; [0x20ff40:8]=0x21a6
0x000021a6      6840000000     push 0x40                               ; segment.PHDR
0x000021ab      e9e0fbffff     jmp sym..plt
;-- imp.error:
0x000021b0      ff2592dd2000   jmp qword [reloc.error]                 ; [0x20ff48:8]=0x21b6
0x000021b6      6841000000     push 0x41                               ; 'A'
0x000021bb      e9d0fbffff     jmp sym..plt
;-- imp.__explicit_bzero_chk:
0x000021c0      ff258add2000   jmp qword [reloc.__explicit_bzero_chk]  ; [0x20ff50:8]=0x21c6
0x000021c6      6842000000     push 0x42                               ; 'B'
0x000021cb      e9c0fbffff     jmp sym..plt
;-- imp.open:
0x000021d0      ff2582dd2000   jmp qword [reloc.open]                  ; [0x20ff58:8]=0x21d6
0x000021d6      6843000000     push 0x43                               ; 'C'
0x000021db      e9b0fbffff     jmp sym..plt
;-- imp.fseeko:
0x000021e0      ff257add2000   jmp qword [reloc.fseeko]                ; [0x20ff60:8]=0x21e6
0x000021e6      6844000000     push 0x44                               ; 'D'
0x000021eb      e9a0fbffff     jmp sym..plt
;-- imp.fopen:
0x000021f0      ff2572dd2000   jmp qword [reloc.fopen]                 ; [0x20ff68:8]=0x21f6
0x000021f6      6845000000     push 0x45                               ; 'E'
0x000021fb      e990fbffff     jmp sym..plt
;-- imp.fdopendir:
0x00002200      ff256add2000   jmp qword [reloc.fdopendir]             ; [0x20ff70:8]=0x2206
0x00002206      6846000000     push 0x46                               ; 'F'
0x0000220b      e980fbffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00002210      ff2562dd2000   jmp qword [reloc.__cxa_atexit]          ; [0x20ff78:8]=0x2216
0x00002216      6847000000     push 0x47                               ; 'G'
0x0000221b      e970fbffff     jmp sym..plt
;-- imp.renameat:
0x00002220      ff255add2000   jmp qword [reloc.renameat]              ; [0x20ff80:8]=0x2226 ; "&\""
0x00002226      6848000000     push 0x48                               ; 'H'
0x0000222b      e960fbffff     jmp sym..plt
;-- imp.getppid:
0x00002230      ff2552dd2000   jmp qword [reloc.getppid]               ; [0x20ff88:8]=0x2236 ; "6\""
0x00002236      6849000000     push 0x49                               ; 'I'
0x0000223b      e950fbffff     jmp sym..plt
;-- imp.exit:
0x00002240      ff254add2000   jmp qword [reloc.exit]                  ; [0x20ff90:8]=0x2246 ; "F\""
0x00002246      684a000000     push 0x4a                               ; 'J'
0x0000224b      e940fbffff     jmp sym..plt
;-- imp.fwrite:
0x00002250      ff2542dd2000   jmp qword [reloc.fwrite]                ; [0x20ff98:8]=0x2256 ; "V\""
0x00002256      684b000000     push 0x4b                               ; 'K'
0x0000225b      e930fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00002260      ff253add2000   jmp qword [reloc.__fprintf_chk]         ; [0x20ffa0:8]=0x2266 ; "f\""
0x00002266      684c000000     push 0x4c                               ; 'L'
0x0000226b      e920fbffff     jmp sym..plt
;-- imp.mbsinit:
0x00002270      ff2532dd2000   jmp qword [reloc.mbsinit]               ; [0x20ffa8:8]=0x2276 ; "v\""
0x00002276      684d000000     push 0x4d                               ; 'M'
0x0000227b      e910fbffff     jmp sym..plt
;-- imp.symlinkat:
0x00002280      ff252add2000   jmp qword [reloc.symlinkat]             ; [0x20ffb0:8]=0x2286
0x00002286      684e000000     push 0x4e                               ; 'N'
0x0000228b      e900fbffff     jmp sym..plt
;-- imp.iswprint:
0x00002290      ff2522dd2000   jmp qword [reloc.iswprint]              ; [0x20ffb8:8]=0x2296
0x00002296      684f000000     push 0x4f                               ; 'O'
0x0000229b      e9f0faffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000022a0      ff251add2000   jmp qword [reloc.__ctype_b_loc]         ; [0x20ffc0:8]=0x22a6
0x000022a6      6850000000     push 0x50                               ; 'P'
0x000022ab      e9e0faffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000022b0      .qword 0x90660020dd3225ff                              ; [13] -r-x section size 8 named .plt.got
0x000022b8      0000           add byte [rax], al
0x000022ba      0000           add byte [rax], al
0x000022bc      0000           add byte [rax], al
0x000022be      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000022c0      4157           push r15                                ; [14] -r-x section size 36030 named .text
0x000022c2      4156           push r14
0x000022c4      4531ff         xor r15d, r15d
0x000022c7      4155           push r13
0x000022c9      4154           push r12
0x000022cb      4531f6         xor r14d, r14d
0x000022ce      55             push rbp
0x000022cf      53             push rbx
0x000022d0      89fb           mov ebx, edi
0x000022d2      4889f5         mov rbp, rsi
0x000022d5      4531e4         xor r12d, r12d
0x000022d8      4531ed         xor r13d, r13d
0x000022db      4881ecd80000.  sub rsp, 0xd8
0x000022e2      488b3e         mov rdi, qword [rsi]
0x000022e5      64488b042528.  mov rax, qword fs:[0x28]
0x000022ee      48898424c800.  mov qword [rsp + 0xc8], rax
0x000022f6      31c0           xor eax, eax
0x000022f8      e843460000     call sym.set_program_name
0x000022fd      488d3514a400.  lea rsi, [0x0000c718]
0x00002304      bf06000000     mov edi, 6
0x00002309      e852feffff     call sym.imp.setlocale
0x0000230e      488d35cf8d00.  lea rsi, str.usr_local_share_locale     ; 0xb0e4 ; "/usr/local/share/locale"
0x00002315      488d3d9f8d00.  lea rdi, [0x0000b0bb]                   ; "coreutils"
0x0000231c      e89ffbffff     call sym.imp.bindtextdomain
0x00002321      488d3d938d00.  lea rdi, [0x0000b0bb]                   ; "coreutils"
0x00002328      e863fbffff     call sym.imp.textdomain
0x0000232d      488d3dac2b00.  lea rdi, sym.close_stdin                ; 0x4ee0 ; "ATUSH\x8b\x1d\xe5\xb1 "
0x00002334      e8378c0000     call sym.atexit
0x00002339      488d442430     lea rax, [rsp + 0x30]
0x0000233e      c605d4dd2000.  mov byte [obj.hard_dir_link], 0         ; [0x210119:1]=0
0x00002345      c605cedd2000.  mov byte [obj.verbose], 0               ; [0x21011a:1]=0
0x0000234c      c605c9dd2000.  mov byte [obj.interactive], 0           ; [0x21011c:1]=0
0x00002353      c605c1dd2000.  mov byte [obj.remove_existing_files], 0 ; [0x21011b:1]=0
0x0000235a      c605bedd2000.  mov byte [obj.symbolic_link], 0         ; [0x21011f:1]=0
0x00002361      48c744240800.  mov qword [rsp + 8], 0
0x0000236a      4889442410     mov qword [rsp + 0x10], rax
0x0000236f      90             nop
0x00002370      488d0d09d520.  lea rcx, obj.long_options               ; 0x20f880
0x00002377      488d15b78d00.  lea rdx, str.bdfinrst:vFLPS:T           ; 0xb135 ; "bdfinrst:vFLPS:T"
0x0000237e      4531c0         xor r8d, r8d
0x00002381      4889ee         mov rsi, rbp
0x00002384      89df           mov edi, ebx
0x00002386      e8b5fbffff     call sym.imp.getopt_long
0x0000238b      83f8ff         cmp eax, 0xffffffff
0x0000238e      4189c0         mov r8d, eax
0x00002391      0f8465020000   je 0x25fc
0x00002397      4183f862       cmp r8d, 0x62
0x0000239b      0f843f010000   je 0x24e0
0x000023a1      7e3d           jle 0x23e0
0x000023a3      4183f86e       cmp r8d, 0x6e
0x000023a7      0f8423010000   je 0x24d0
0x000023ad      7e71           jle 0x2420
0x000023af      4183f873       cmp r8d, 0x73
0x000023b3      0f8417020000   je 0x25d0
0x000023b9      0f8ef9000000   jle 0x24b8
0x000023bf      4183f874       cmp r8d, 0x74
0x000023c3      0f8437010000   je 0x2500
0x000023c9      4183f876       cmp r8d, 0x76
0x000023cd      0f851f020000   jne 0x25f2
0x000023d3      c60540dd2000.  mov byte [obj.verbose], 1               ; [0x21011a:1]=0
0x000023da      eb94           jmp 0x2370
0x000023dc      0f1f4000       nop dword [rax]
0x000023e0      4183f84c       cmp r8d, 0x4c
0x000023e4      0f8496010000   je 0x2580
0x000023ea      7e64           jle 0x2450
0x000023ec      4183f853       cmp r8d, 0x53
0x000023f0      0f84c2010000   je 0x25b8
0x000023f6      4183f854       cmp r8d, 0x54
0x000023fa      0f84a8010000   je 0x25a8
0x00002400      4183f850       cmp r8d, 0x50
0x00002404      0f85e8010000   jne 0x25f2
0x0000240a      c6050cdd2000.  mov byte [obj.logical], 0               ; [0x21011d:1]=0
0x00002411      e95affffff     jmp 0x2370
0x00002416      662e0f1f8400.  nop word cs:[rax + rax]
0x00002420      4183f866       cmp r8d, 0x66
0x00002424      0f8466010000   je 0x2590
0x0000242a      4183f869       cmp r8d, 0x69
0x0000242e      0f85b8010000   jne 0x25ec
0x00002434      c605e0dc2000.  mov byte [obj.remove_existing_files], 0 ; [0x21011b:1]=0
0x0000243b      c605dadc2000.  mov byte [obj.interactive], 1           ; [0x21011c:1]=0
0x00002442      e929ffffff     jmp 0x2370
0x00002447      660f1f840000.  nop word [rax + rax]
0x00002450      4181f87effff.  cmp r8d, 0xffffff7e                     ; 4294967166
0x00002457      0f84f0040000   je 0x294d
0x0000245d      4183f846       cmp r8d, 0x46
0x00002461      0f8479010000   je 0x25e0
0x00002467      4181f87dffff.  cmp r8d, 0xffffff7d                     ; 4294967165
0x0000246e      0f857e010000   jne 0x25f2
0x00002474      4883ec08       sub rsp, 8
0x00002478      488b3d49dc20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x0000247f      488b0d92db20.  mov rcx, qword [obj.Version]            ; [0x210018:8]=0xbf6f str.8.31 ; "o\xbf"
0x00002486      6a00           push 0
0x00002488      4c8d0d8a8c00.  lea r9, str.David_MacKenzie             ; 0xb119 ; "David MacKenzie"
0x0000248f      4c8d05938c00.  lea r8, str.Mike_Parker                 ; 0xb129 ; "Mike Parker"
0x00002496      488d151a8c00.  lea rdx, str.GNU_coreutils              ; 0xb0b7 ; "GNU coreutils"
0x0000249d      488d35978b00.  lea rsi, [0x0000b03b]                   ; "ln"
0x000024a4      31c0           xor eax, eax
0x000024a6      e8056e0000     call sym.version_etc
0x000024ab      31ff           xor edi, edi
0x000024ad      e88efdffff     call sym.imp.exit
0x000024b2      660f1f440000   nop word [rax + rax]
0x000024b8      4183f872       cmp r8d, 0x72
0x000024bc      0f8530010000   jne 0x25f2
0x000024c2      c60555dc2000.  mov byte [obj.relative], 1              ; [0x21011e:1]=0
0x000024c9      e9a2feffff     jmp 0x2370
0x000024ce      6690           nop
0x000024d0      c60539db2000.  mov byte [obj.dereference_dest_dir_symlinks], 0 ; [0x210010:1]=1
0x000024d7      e994feffff     jmp 0x2370
0x000024dc      0f1f4000       nop dword [rax]
0x000024e0      488b05f9db20.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x000024e7      41bd01000000   mov r13d, 1
0x000024ed      4885c0         test rax, rax
0x000024f0      4c0f45f0       cmovne r14, rax
0x000024f4      e977feffff     jmp 0x2370
0x000024f9      0f1f80000000.  nop dword [rax]
0x00002500      4d85e4         test r12, r12
0x00002503      0f85d4040000   jne 0x29dd
0x00002509      488b542410     mov rdx, qword [rsp + 0x10]
0x0000250e      488b35cbdb20.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x00002515      bf01000000     mov edi, 1
0x0000251a      e8b1fbffff     call sym.imp.__xstat
0x0000251f      85c0           test eax, eax
0x00002521      0f853b050000   jne 0x2a62
0x00002527      8b442448       mov eax, dword [rsp + 0x48]
0x0000252b      4c8b25aedb20.  mov r12, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x00002532      2500f00000     and eax, 0xf000
0x00002537      3d00400000     cmp eax, 0x4000
0x0000253c      0f842efeffff   je 0x2370
0x00002542      4c89e6         mov rsi, r12
0x00002545      bf04000000     mov edi, 4
0x0000254a      e8315e0000     call sym.quotearg_style
0x0000254f      488d35a68b00.  lea rsi, str.target__s_is_not_a_directory ; 0xb0fc ; "target %s is not a directory"
0x00002556      4889c3         mov rbx, rax
0x00002559      ba05000000     mov edx, 5
0x0000255e      31ff           xor edi, edi
0x00002560      e86bf9ffff     call sym.imp.dcgettext
0x00002565      4889d9         mov rcx, rbx
0x00002568      4889c2         mov rdx, rax
0x0000256b      31f6           xor esi, esi
0x0000256d      bf01000000     mov edi, 1
0x00002572      31c0           xor eax, eax
0x00002574      e837fcffff     call sym.imp.error
0x00002579      0f1f80000000.  nop dword [rax]
0x00002580      c60596db2000.  mov byte [obj.logical], 1               ; [0x21011d:1]=0
0x00002587      e9e4fdffff     jmp 0x2370
0x0000258c      0f1f4000       nop dword [rax]
0x00002590      c60584db2000.  mov byte [obj.remove_existing_files], 1 ; [0x21011b:1]=0
0x00002597      c6057edb2000.  mov byte [obj.interactive], 0           ; [0x21011c:1]=0
0x0000259e      e9cdfdffff     jmp 0x2370
0x000025a3      0f1f440000     nop dword [rax + rax]
0x000025a8      41bf01000000   mov r15d, 1
0x000025ae      e9bdfdffff     jmp 0x2370
0x000025b3      0f1f440000     nop dword [rax + rax]
0x000025b8      488b0521db20.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x000025bf      41bd01000000   mov r13d, 1
0x000025c5      4889442408     mov qword [rsp + 8], rax
0x000025ca      e9a1fdffff     jmp 0x2370
0x000025cf      90             nop
0x000025d0      c60548db2000.  mov byte [obj.symbolic_link], 1         ; [0x21011f:1]=0
0x000025d7      e994fdffff     jmp 0x2370
0x000025dc      0f1f4000       nop dword [rax]
0x000025e0      c60532db2000.  mov byte [obj.hard_dir_link], 1         ; [0x210119:1]=0
0x000025e7      e984fdffff     jmp 0x2370
0x000025ec      4183f864       cmp r8d, 0x64
0x000025f0      74ee           je 0x25e0
0x000025f2      bf01000000     mov edi, 1
0x000025f7      e8c4100000     call sym.usage
0x000025fc      486305d5da20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2100d8:4]=0
0x00002603      89d9           mov ecx, ebx
0x00002605      29c1           sub ecx, eax
0x00002607      488d5cc500     lea rbx, [rbp + rax*8]
0x0000260c      85c9           test ecx, ecx
0x0000260e      0f8e40030000   jle 0x2954
0x00002614      803d03db2000.  cmp byte [obj.relative], 0              ; [0x21011e:1]=0
0x0000261b      740d           je 0x262a
0x0000261d      803dfbda2000.  cmp byte [obj.symbolic_link], 0         ; [0x21011f:1]=0
0x00002624      0f8450030000   je 0x297a
0x0000262a      803de8da2000.  cmp byte [obj.hard_dir_link], 0         ; [0x210119:1]=0
0x00002631      7507           jne 0x263a
0x00002633      c605deda2000.  mov byte [obj.beware_hard_dir_link], 0  ; [0x210118:1]=0
0x0000263a      4584ff         test r15b, r15b
0x0000263d      0f84cd000000   je 0x2710
0x00002643      4d85e4         test r12, r12
0x00002646      0f85d3030000   jne 0x2a1f
0x0000264c      83f902         cmp ecx, 2
0x0000264f      0f8549030000   jne 0x299e
0x00002655      4584ed         test r13b, r13b
0x00002658      0f8449020000   je 0x28a7
0x0000265e      41bc02000000   mov r12d, 2
0x00002664      31ed           xor ebp, ebp
0x00002666      488d35098b00.  lea rsi, str.backup_type                ; 0xb176 ; "backup type"
0x0000266d      ba05000000     mov edx, 5
0x00002672      31ff           xor edi, edi
0x00002674      4489442410     mov dword [rsp + 0x10], r8d
0x00002679      e852f8ffff     call sym.imp.dcgettext
0x0000267e      4c89f6         mov rsi, r14
0x00002681      4889c7         mov rdi, rax
0x00002684      e8b7210000     call sym.xget_version
0x00002689      448b442410     mov r8d, dword [rsp + 0x10]
0x0000268e      488b7c2408     mov rdi, qword [rsp + 8]
0x00002693      4489442410     mov dword [rsp + 0x10], r8d
0x00002698      890582da2000   mov dword [obj.backup_type], eax        ; [0x210120:4]=0
0x0000269e      e8ad1a0000     call sym.set_simple_backup_suffix
0x000026a3      4885ed         test rbp, rbp
0x000026a6      448b442410     mov r8d, dword [rsp + 0x10]
0x000026ab      0f8414020000   je 0x28c5
0x000026b1      4183fc01       cmp r12d, 1
0x000026b5      0f8e7f020000   jle 0x293a
0x000026bb      803d59da2000.  cmp byte [obj.remove_existing_files], 0 ; [0x21011b:1]=0
0x000026c2      0f8493000000   je 0x275b
0x000026c8      803d50da2000.  cmp byte [obj.symbolic_link], 0         ; [0x21011f:1]=0
0x000026cf      0f8586000000   jne 0x275b
0x000026d5      833d44da2000.  cmp dword [obj.backup_type], 3          ; [0x210120:4]=0
0x000026dc      747d           je 0x275b
0x000026de      4c8d054b4100.  lea r8, sym.triple_free                 ; 0x6830 ; "SH\x89\xfbH\x8b?\xe8t\xb5\xff\xffH\x89\xdf[\xe9k\xb5\xff\xfff.\x0f\x1f\x84"
0x000026e5      488d0dd44000.  lea rcx, sym.triple_compare             ; 0x67c0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\xc7\""
0x000026ec      31f6           xor esi, esi
0x000026ee      488d158b4000.  lea rdx, sym.triple_hash                ; 0x6780 ; "USH\x89\xfdH\x89\xf3H\x83\xec\bH\x8b?\xe8\x9c6"
0x000026f5      bf3d000000     mov edi, 0x3d                           ; '='
0x000026fa      e811360000     call sym.hash_initialize
0x000026ff      4885c0         test rax, rax
0x00002702      48890507da20.  mov qword [obj.dest_set], rax           ; [0x210110:8]=0
0x00002709      7550           jne 0x275b
0x0000270b      e8506f0000     call sym.xalloc_die
0x00002710      4d85e4         test r12, r12
0x00002713      410f94c7       sete r15b
0x00002717      83f901         cmp ecx, 1
0x0000271a      0f8fd9000000   jg 0x27f9
0x00002720      4584ff         test r15b, r15b
0x00002723      0f84d0000000   je 0x27f9
0x00002729      4584ed         test r13b, r13b
0x0000272c      0f8516030000   jne 0x2a48
0x00002732      488b7c2408     mov rdi, qword [rsp + 8]
0x00002737      488d2d169800.  lea rbp, [0x0000bf54]                   ; "."
0x0000273e      c705d8d92000.  mov dword [obj.backup_type], 0          ; [0x210120:4]=0
0x00002748      41bc01000000   mov r12d, 1
0x0000274e      e8fd190000     call sym.set_simple_backup_suffix
0x00002753      c74424189cff.  mov dword [rsp + 0x18], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x0000275b      418d4424ff     lea eax, [r12 - 1]
0x00002760      4c8d742428     lea r14, [rsp + 0x28]
0x00002765      4989dd         mov r13, rbx
0x00002768      4c8d7cc308     lea r15, [rbx + rax*8 + 8]
0x0000276d      bb01000000     mov ebx, 1
0x00002772      660f1f440000   nop word [rax + rax]
0x00002778      498b7d00       mov rdi, qword [r13]
0x0000277c      4983c508       add r13, 8
0x00002780      e81b2a0000     call sym.last_component
0x00002785      4c89f2         mov rdx, r14
0x00002788      4889c6         mov rsi, rax
0x0000278b      4889ef         mov rdi, rbp
0x0000278e      e8ed2b0000     call sym.file_name_concat
0x00002793      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002798      4989c4         mov r12, rax
0x0000279b      e8b02a0000     call sym.strip_trailing_slashes
0x000027a0      498b7df8       mov rdi, qword [r13 - 8]
0x000027a4      488b542428     mov rdx, qword [rsp + 0x28]
0x000027a9      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x000027af      8b742418       mov esi, dword [rsp + 0x18]
0x000027b3      4c89e1         mov rcx, r12
0x000027b6      e885040000     call sym.do_link
0x000027bb      4c89e7         mov rdi, r12
0x000027be      21c3           and ebx, eax
0x000027c0      e8ebf5ffff     call sym.imp.free
0x000027c5      4d39fd         cmp r13, r15
0x000027c8      75ae           jne 0x2778
0x000027ca      83f301         xor ebx, 1
0x000027cd      488b8c24c800.  mov rcx, qword [rsp + 0xc8]
0x000027d5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000027de      0fb6c3         movzx eax, bl
0x000027e1      0f855c020000   jne 0x2a43
0x000027e7      4881c4d80000.  add rsp, 0xd8
0x000027ee      5b             pop rbx
0x000027ef      5d             pop rbp
0x000027f0      415c           pop r12
0x000027f2      415d           pop r13
0x000027f4      415e           pop r14
0x000027f6      415f           pop r15
0x000027f8      c3             ret
0x000027f9      83f902         cmp ecx, 2
0x000027fc      7553           jne 0x2851
0x000027fe      4584ff         test r15b, r15b
0x00002801      744e           je 0x2851
0x00002803      488b5308       mov rdx, qword [rbx + 8]
0x00002807      488b3b         mov rdi, qword [rbx]
0x0000280a      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x0000280f      894c2410       mov dword [rsp + 0x10], ecx
0x00002813      e8a8030000     call sym.atomic_link
0x00002818      85c0           test eax, eax
0x0000281a      4189c0         mov r8d, eax
0x0000281d      8b4c2410       mov ecx, dword [rsp + 0x10]
0x00002821      0f8806010000   js 0x292d
0x00002827      83f811         cmp eax, 0x11
0x0000282a      0f84fd000000   je 0x292d
0x00002830      83f814         cmp eax, 0x14
0x00002833      0f84f4000000   je 0x292d
0x00002839      41bc02000000   mov r12d, 2
0x0000283f      31ed           xor ebp, ebp
0x00002841      31c0           xor eax, eax
0x00002843      4584ed         test r13b, r13b
0x00002846      0f8442feffff   je 0x268e
0x0000284c      e915feffff     jmp 0x2666
0x00002851      4d85e4         test r12, r12
0x00002854      4c89e5         mov rbp, r12
0x00002857      0f84d0000000   je 0x292d
0x0000285d      803dacd72000.  cmp byte [obj.dereference_dest_dir_symlinks], 1 ; [0x210010:1]=1
0x00002864      4889ee         mov rsi, rbp
0x00002867      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x0000286c      448944241c     mov dword [rsp + 0x1c], r8d
0x00002871      894c2410       mov dword [rsp + 0x10], ecx
0x00002875      19d2           sbb edx, edx
0x00002877      31c0           xor eax, eax
0x00002879      81e200000200   and edx, 0x20000
0x0000287f      81c200002100   add edx, loc.data_start                 ; loc.__data_start
                                                                       ; 0x210000
0x00002885      e8c63f0000     call sym.openat_safer
0x0000288a      85c0           test eax, eax
0x0000288c      89442418       mov dword [rsp + 0x18], eax
0x00002890      8b4c2410       mov ecx, dword [rsp + 0x10]
0x00002894      448b44241c     mov r8d, dword [rsp + 0x1c]
0x00002899      7845           js 0x28e0
0x0000289b      450fb6ff       movzx r15d, r15b
0x0000289f      4429f9         sub ecx, r15d
0x000028a2      4189cc         mov r12d, ecx
0x000028a5      eb9a           jmp 0x2841
0x000028a7      488b7c2408     mov rdi, qword [rsp + 8]
0x000028ac      4489442410     mov dword [rsp + 0x10], r8d
0x000028b1      c70565d82000.  mov dword [obj.backup_type], 0          ; [0x210120:4]=0
0x000028bb      e890180000     call sym.set_simple_backup_suffix
0x000028c0      448b442410     mov r8d, dword [rsp + 0x10]
0x000028c5      488b5308       mov rdx, qword [rbx + 8]
0x000028c9      488b3b         mov rdi, qword [rbx]
0x000028cc      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x000028d1      4889d1         mov rcx, rdx
0x000028d4      e867030000     call sym.do_link
0x000028d9      89c3           mov ebx, eax
0x000028db      e9eafeffff     jmp 0x27ca
0x000028e0      83f902         cmp ecx, 2
0x000028e3      7509           jne 0x28ee
0x000028e5      4d85e4         test r12, r12
0x000028e8      0f8467fdffff   je 0x2655
0x000028ee      4889ee         mov rsi, rbp
0x000028f1      bf04000000     mov edi, 4
0x000028f6      e8855a0000     call sym.quotearg_style
0x000028fb      488d356a8800.  lea rsi, str.target__s                  ; 0xb16c ; "target %s"
0x00002902      ba05000000     mov edx, 5
0x00002907      31ff           xor edi, edi
0x00002909      4889c5         mov rbp, rax
0x0000290c      e8bff5ffff     call sym.imp.dcgettext
0x00002911      4889c3         mov rbx, rax
0x00002914      e8b7f4ffff     call sym.imp.__errno_location
0x00002919      8b30           mov esi, dword [rax]
0x0000291b      4889e9         mov rcx, rbp
0x0000291e      4889da         mov rdx, rbx
0x00002921      bf01000000     mov edi, 1
0x00002926      31c0           xor eax, eax
0x00002928      e883f8ffff     call sym.imp.error
0x0000292d      4863c1         movsxd rax, ecx
0x00002930      488b6cc3f8     mov rbp, qword [rbx + rax*8 - 8]
0x00002935      e923ffffff     jmp 0x285d
0x0000293a      4585e4         test r12d, r12d
0x0000293d      0f8518feffff   jne 0x275b
0x00002943      bb01000000     mov ebx, 1
0x00002948      e97dfeffff     jmp 0x27ca
0x0000294d      31ff           xor edi, edi
0x0000294f      e86c0d0000     call sym.usage
0x00002954      488d35eb8700.  lea rsi, str.missing_file_operand       ; 0xb146 ; "missing file operand"
0x0000295b      31ff           xor edi, edi
0x0000295d      ba05000000     mov edx, 5
0x00002962      e869f5ffff     call sym.imp.dcgettext
0x00002967      31f6           xor esi, esi
0x00002969      4889c2         mov rdx, rax
0x0000296c      31ff           xor edi, edi
0x0000296e      31c0           xor eax, eax
0x00002970      e83bf8ffff     call sym.imp.error
0x00002975      e978fcffff     jmp 0x25f2
0x0000297a      488d353f9500.  lea rsi, str.cannot_do___relative_without___symbolic ; 0xbec0 ; "cannot do --relative without --symbolic"
0x00002981      ba05000000     mov edx, 5
0x00002986      31ff           xor edi, edi
0x00002988      e843f5ffff     call sym.imp.dcgettext
0x0000298d      31f6           xor esi, esi
0x0000298f      4889c2         mov rdx, rax
0x00002992      bf01000000     mov edi, 1
0x00002997      31c0           xor eax, eax
0x00002999      e812f8ffff     call sym.imp.error
0x0000299e      83e901         sub ecx, 1
0x000029a1      745e           je 0x2a01
0x000029a3      488b7310       mov rsi, qword [rbx + 0x10]
0x000029a7      bf04000000     mov edi, 4
0x000029ac      e8cf590000     call sym.quotearg_style
0x000029b1      488d35a38700.  lea rsi, str.extra_operand__s           ; 0xb15b ; "extra operand %s"
0x000029b8      4889c3         mov rbx, rax
0x000029bb      ba05000000     mov edx, 5
0x000029c0      31ff           xor edi, edi
0x000029c2      e809f5ffff     call sym.imp.dcgettext
0x000029c7      4889d9         mov rcx, rbx
0x000029ca      4889c2         mov rdx, rax
0x000029cd      31f6           xor esi, esi
0x000029cf      31ff           xor edi, edi
0x000029d1      31c0           xor eax, eax
0x000029d3      e8d8f7ffff     call sym.imp.error
0x000029d8      e915fcffff     jmp 0x25f2
0x000029dd      488d35b49400.  lea rsi, str.multiple_target_directories_specified ; 0xbe98 ; "multiple target directories specified"
0x000029e4      ba05000000     mov edx, 5
0x000029e9      31ff           xor edi, edi
0x000029eb      e8e0f4ffff     call sym.imp.dcgettext
0x000029f0      31f6           xor esi, esi
0x000029f2      4889c2         mov rdx, rax
0x000029f5      bf01000000     mov edi, 1
0x000029fa      31c0           xor eax, eax
0x000029fc      e8aff7ffff     call sym.imp.error
0x00002a01      488b33         mov rsi, qword [rbx]
0x00002a04      bf04000000     mov edi, 4
0x00002a09      e872590000     call sym.quotearg_style
0x00002a0e      ba05000000     mov edx, 5
0x00002a13      4889c3         mov rbx, rax
0x00002a16      488d350b9500.  lea rsi, str.missing_destination_file_operand_after__s ; 0xbf28 ; "missing destination file operand after %s"
0x00002a1d      eba1           jmp 0x29c0
0x00002a1f      488d35c29400.  lea rsi, str.cannot_combine___target_directory_and___no_target_directory ; 0xbee8 ; "cannot combine --target-directory and --no-target-directory"
0x00002a26      ba05000000     mov edx, 5
0x00002a2b      31ff           xor edi, edi
0x00002a2d      e89ef4ffff     call sym.imp.dcgettext
0x00002a32      31f6           xor esi, esi
0x00002a34      4889c2         mov rdx, rax
0x00002a37      bf01000000     mov edi, 1
0x00002a3c      31c0           xor eax, eax
0x00002a3e      e86df7ffff     call sym.imp.error
0x00002a43      e8d8f4ffff     call sym.imp.__stack_chk_fail
0x00002a48      41bc01000000   mov r12d, 1
0x00002a4e      c74424189cff.  mov dword [rsp + 0x18], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x00002a56      488d2df79400.  lea rbp, [0x0000bf54]                   ; "."
0x00002a5d      e904fcffff     jmp 0x2666
0x00002a62      488b3577d620.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x00002a69      bf04000000     mov edi, 4
0x00002a6e      e80d590000     call sym.quotearg_style
0x00002a73      488d352e8500.  lea rsi, str.failed_to_access__s        ; 0xafa8 ; "failed to access %s"
0x00002a7a      ba05000000     mov edx, 5
0x00002a7f      31ff           xor edi, edi
0x00002a81      4889c5         mov rbp, rax
0x00002a84      e847f4ffff     call sym.imp.dcgettext
0x00002a89      4889c3         mov rbx, rax
0x00002a8c      e83ff3ffff     call sym.imp.__errno_location
0x00002a91      8b30           mov esi, dword [rax]
0x00002a93      4889e9         mov rcx, rbp
0x00002a96      4889da         mov rdx, rbx
0x00002a99      bf01000000     mov edi, 1
0x00002a9e      31c0           xor eax, eax
0x00002aa0      e80bf7ffff     call sym.imp.error
0x00002aa5      662e0f1f8400.  nop word cs:[rax + rax]
0x00002aaf      90             nop
;-- entry0:
;-- _start:
;-- rip:
0x00002ab0      31ed           xor ebp, ebp
0x00002ab2      4989d1         mov r9, rdx
0x00002ab5      5e             pop rsi
0x00002ab6      4889e2         mov rdx, rsp
0x00002ab9      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002abd      50             push rax
0x00002abe      54             push rsp
0x00002abf      4c8d059a8400.  lea r8, sym.__libc_csu_fini             ; 0xaf60
0x00002ac6      488d0d238400.  lea rcx, sym.__libc_csu_init            ; 0xaef0 ; "AWAVI\x89\xd7AUATL\x8d%nI "
0x00002acd      488d3decf7ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x22c0 ; "AWAVE1\xffAUATE1\xf6US\x89\xfbH\x89\xf5E1\xe4E1\xedH\x81\xec\xd8"
0x00002ad4      ff15f6d42000   call qword [reloc.__libc_start_main]    ; [0x20ffd0:8]=0
0x00002ada      f4             hlt
0x00002adb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002ae0      488d3dc1d520.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2100a8
0x00002ae7      55             push rbp
0x00002ae8      488d05b9d520.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2100a8
0x00002aef      4839f8         cmp rax, rdi
0x00002af2      4889e5         mov rbp, rsp
0x00002af5      7419           je 0x2b10
0x00002af7      488b05cad420.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20ffc8:8]=0
0x00002afe      4885c0         test rax, rax
0x00002b01      740d           je 0x2b10
0x00002b03      5d             pop rbp
0x00002b04      ffe0           jmp rax
0x00002b06      662e0f1f8400.  nop word cs:[rax + rax]
0x00002b10      5d             pop rbp
0x00002b11      c3             ret
0x00002b12      0f1f4000       nop dword [rax]
0x00002b16      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002b20      488d3d81d520.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2100a8
0x00002b27      488d357ad520.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2100a8
0x00002b2e      55             push rbp
0x00002b2f      4829fe         sub rsi, rdi
0x00002b32      4889e5         mov rbp, rsp
0x00002b35      48c1fe03       sar rsi, 3
0x00002b39      4889f0         mov rax, rsi
0x00002b3c      48c1e83f       shr rax, 0x3f
0x00002b40      4801c6         add rsi, rax
0x00002b43      48d1fe         sar rsi, 1
0x00002b46      7418           je 0x2b60
0x00002b48      488b0591d420.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20ffe0:8]=0
0x00002b4f      4885c0         test rax, rax
0x00002b52      740c           je 0x2b60
0x00002b54      5d             pop rbp
0x00002b55      ffe0           jmp rax
0x00002b57      660f1f840000.  nop word [rax + rax]
0x00002b60      5d             pop rbp
0x00002b61      c3             ret
0x00002b62      0f1f4000       nop dword [rax]
0x00002b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002b70      803d91d52000.  cmp byte [obj.completed.7697], 0        ; [0x210108:1]=0
0x00002b77      752f           jne 0x2ba8
0x00002b79      48833d67d420.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20ffe8:8]=0
0x00002b81      55             push rbp
0x00002b82      4889e5         mov rbp, rsp
0x00002b85      740c           je 0x2b93
0x00002b87      488b3d7ad420.  mov rdi, qword [obj.__dso_handle]       ; [0x210008:8]=0x210008 obj.__dso_handle
0x00002b8e      e81df7ffff     call sym..plt.got
0x00002b93      e848ffffff     call sym.deregister_tm_clones
0x00002b98      c60569d52000.  mov byte [obj.completed.7697], 1        ; [0x210108:1]=0
0x00002b9f      5d             pop rbp
0x00002ba0      c3             ret
0x00002ba1      0f1f80000000.  nop dword [rax]
0x00002ba8      f3c3           ret
0x00002baa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002bb0      55             push rbp
0x00002bb1      4889e5         mov rbp, rsp
0x00002bb4      5d             pop rbp
0x00002bb5      e966ffffff     jmp sym.register_tm_clones
0x00002bba      660f1f440000   nop word [rax + rax]
;-- atomic_link:
0x00002bc0      4883ec08       sub rsp, 8                              ; /src:169
0x00002bc4      803d54d52000.  cmp byte [obj.symbolic_link], 0         ; /src:173 ; [0x21011f:1]=0
0x00002bcb      7423           je 0x2bf0
0x00002bcd      803d4ad52000.  cmp byte [obj.relative], 0              ; /src:172 ; [0x21011e:1]=0
0x00002bd4      755a           jne 0x2c30
0x00002bd6      e8a5f6ffff     call sym.imp.symlinkat
0x00002bdb      85c0           test eax, eax                           ; /src:125
0x00002bdd      7842           js 0x2c21
0x00002bdf      31c0           xor eax, eax
0x00002be1      4883c408       add rsp, 8                              ; /src:176
0x00002be5      c3             ret
0x00002be6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002bf0      803d21d52000.  cmp byte [obj.beware_hard_dir_link], 0  ; /src:174 ; [0x210118:1]=0
0x00002bf7      7537           jne 0x2c30
0x00002bf9      4531c0         xor r8d, r8d
0x00002bfc      803d1ad52000.  cmp byte [obj.logical], 0               ; [0x21011d:1]=0
0x00002c03      4889d1         mov rcx, rdx
0x00002c06      89f2           mov edx, esi
0x00002c08      4889fe         mov rsi, rdi
0x00002c0b      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00002c10      410f95c0       setne r8b
0x00002c14      41c1e00a       shl r8d, 0xa
0x00002c18      e833f5ffff     call sym.imp.linkat
0x00002c1d      85c0           test eax, eax                           ; /src:125
0x00002c1f      79be           jns 0x2bdf
0x00002c21      e8aaf1ffff     call sym.imp.__errno_location
0x00002c26      8b00           mov eax, dword [rax]
0x00002c28      4883c408       add rsp, 8                              ; /src:176
0x00002c2c      c3             ret
0x00002c2d      0f1f00         nop dword [rax]
0x00002c30      b8ffffffff     mov eax, 0xffffffff                     ; /src:172 ; -1
0x00002c35      ebaa           jmp 0x2be1                              ; /src:173
0x00002c37      660f1f840000.  nop word [rax + rax]
;-- do_link:
0x00002c40      4157           push r15                                ; /src:188
0x00002c42      4156           push r14
0x00002c44      4589c2         mov r10d, r8d
0x00002c47      4155           push r13
0x00002c49      4154           push r12
0x00002c4b      4531ed         xor r13d, r13d                          ; /src:193
0x00002c4e      55             push rbp                                ; /src:188
0x00002c4f      53             push rbx
0x00002c50      4189f4         mov r12d, esi
0x00002c53      4889fb         mov rbx, rdi
0x00002c56      4889d5         mov rbp, rdx
0x00002c59      4989ce         mov r14, rcx
0x00002c5c      4881ec580100.  sub rsp, 0x158
0x00002c63      64488b042528.  mov rax, qword fs:[0x28]
0x00002c6c      488984244801.  mov qword [rsp + 0x148], rax
0x00002c74      31c0           xor eax, eax
0x00002c76      803da0d42000.  cmp byte [obj.logical], 0               ; /src:193 ; [0x21011d:1]=0
0x00002c7d      410f94c5       sete r13b
0x00002c81      41c1e508       shl r13d, 8
0x00002c85      4585c0         test r8d, r8d                           ; /src:194
0x00002c88      0f8872030000   js 0x3000
0x00002c8e      4585d2         test r10d, r10d                         ; /src:199
0x00002c91      440fb63d86d4.  movzx r15d, byte [obj.symbolic_link]    ; [0x21011f:1]=0
0x00002c99      0f8551010000   jne 0x2df0
0x00002c9f      48833d69d420.  cmp qword [obj.dest_set], 0             ; [0x210110:8]=0
0x00002ca7      0f8403040000   je 0x30b0
0x00002cad      4584ff         test r15b, r15b
0x00002cb0      0f855a050000   jne 0x3210
0x00002cb6      4c8d7c2420     lea r15, [rsp + 0x20]                   ; .//coreutils-8.31/lib:473
0x00002cbb      4589e8         mov r8d, r13d
0x00002cbe      4889da         mov rdx, rbx
0x00002cc1      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00002cc6      bf01000000     mov edi, 1
0x00002ccb      4c89f9         mov rcx, r15
0x00002cce      e88df2ffff     call sym.imp.__fxstatat
0x00002cd3      85c0           test eax, eax                           ; /src:202
0x00002cd5      0f85f5030000   jne 0x30d0
0x00002cdb      48c704240000.  mov qword [rsp], 0
0x00002ce3      4531ed         xor r13d, r13d
0x00002ce6      488b3d23d420.  mov rdi, qword [obj.dest_set]           ; /src:349 ; [0x210110:8]=0
0x00002ced      4c89fa         mov rdx, r15
0x00002cf0      4c89f6         mov rsi, r14
0x00002cf3      e898250000     call sym.record_file
0x00002cf8      803d1bd42000.  cmp byte [obj.verbose], 0               ; /src:351 ; [0x21011a:1]=0
0x00002cff      41bf01000000   mov r15d, 1
0x00002d05      0f849f000000   je 0x2daa
0x00002d0b      4d85ed         test r13, r13                           ; /src:355
0x00002d0e      0f8427050000   je 0x323b
0x00002d14      4c29f5         sub rbp, r14                            ; /src:359
0x00002d17      4885ed         test rbp, rbp                           ; /src:360
0x00002d1a      0f8f30050000   jg 0x3250
0x00002d20      4d89ef         mov r15, r13
0x00002d23      4531e4         xor r12d, r12d                          ; /src:358
0x00002d26      4c89fa         mov rdx, r15                            ; /src:366
0x00002d29      be04000000     mov esi, 4
0x00002d2e      bf02000000     mov edi, 2
0x00002d33      e828550000     call sym.quotearg_n_style
0x00002d38      4c89e7         mov rdi, r12                            ; /src:368
0x00002d3b      4c8d25628200.  lea r12, [0x0000afa4]                   ; /src:367 ; " ~ "
0x00002d42      4889c5         mov rbp, rax                            ; /src:366
0x00002d45      e866f0ffff     call sym.imp.free                       ; /src:368
0x00002d4a      4889da         mov rdx, rbx                            ; /src:370
0x00002d4d      be04000000     mov esi, 4
0x00002d52      bf01000000     mov edi, 1
0x00002d57      e804550000     call sym.quotearg_n_style
0x00002d5c      803dbcd32000.  cmp byte [obj.symbolic_link], 1         ; [0x21011f:1]=0
0x00002d63      4c89f2         mov rdx, r14
0x00002d66      be04000000     mov esi, 4
0x00002d6b      4989c7         mov r15, rax
0x00002d6e      19db           sbb ebx, ebx
0x00002d70      31ff           xor edi, edi
0x00002d72      e8e9540000     call sym.quotearg_n_style
0x00002d77      83e310         and ebx, 0x10
0x00002d7a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/src/.c:104
0x00002d7e      488d35758200.  lea rsi, str.s_s_s__c___s               ; 0xaffa ; "%s%s%s %c> %s\n"
0x00002d85      4157           push r15
0x00002d87      83c32d         add ebx, 0x2d                           ; /src:370
0x00002d8a      4989c0         mov r8, rax
0x00002d8d      4889ea         mov rdx, rbp                            ; ../coreutils-8.31/src/.c:104
0x00002d90      4189d9         mov r9d, ebx
0x00002d93      4c89e1         mov rcx, r12
0x00002d96      bf01000000     mov edi, 1
0x00002d9b      31c0           xor eax, eax
0x00002d9d      41bf01000000   mov r15d, 1
0x00002da3      e8c8f3ffff     call sym.imp.__printf_chk
0x00002da8      58             pop rax
0x00002da9      5a             pop rdx
0x00002daa      4c89ef         mov rdi, r13                            ; /src:397
0x00002dad      e8feefffff     call sym.imp.free
0x00002db2      488b3c24       mov rdi, qword [rsp]                    ; /src:398
0x00002db6      e8f5efffff     call sym.imp.free
0x00002dbb      488b9c244801.  mov rbx, qword [rsp + 0x148]            ; /src:400
0x00002dc3      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002dcc      4489f8         mov eax, r15d
0x00002dcf      0f85cc080000   jne 0x36a1
0x00002dd5      4881c4580100.  add rsp, 0x158
0x00002ddc      5b             pop rbx
0x00002ddd      5d             pop rbp
0x00002dde      415c           pop r12
0x00002de0      415d           pop r13
0x00002de2      415e           pop r14
0x00002de4      415f           pop r15
0x00002de6      c3             ret
0x00002de7      660f1f840000.  nop word [rax + rax]
0x00002df0      4584ff         test r15b, r15b                         ; /src:199
0x00002df3      c74424100100.  mov dword [rsp + 0x10], 1               ; /src:190
0x00002dfb      0f8427050000   je 0x3328                               ; /src:199
0x00002e01      803d16d32000.  cmp byte [obj.relative], 0              ; /src:218 ; [0x21011e:1]=0
0x00002e08      48c704240000.  mov qword [rsp], 0                      ; /src:192
0x00002e10      0f8552030000   jne 0x3168                              ; /src:218
0x00002e16      803dfed22000.  cmp byte [obj.remove_existing_files], 0 ; /src:222 ; [0x21011b:1]=0
0x00002e1d      0f854d010000   jne 0x2f70
0x00002e23      803df2d22000.  cmp byte [obj.interactive], 0           ; /src:221 ; [0x21011c:1]=0
0x00002e2a      0f8540010000   jne 0x2f70
0x00002e30      448b0de9d220.  mov r9d, dword [obj.backup_type]        ; /src:222 ; [0x210120:4]=0
0x00002e37      4585c9         test r9d, r9d
0x00002e3a      0f8530010000   jne 0x2f70
0x00002e40      4531c9         xor r9d, r9d                            ; /src:158
0x00002e43      4531ed         xor r13d, r13d                          ; /src:191
0x00002e46      803dd2d22000.  cmp byte [obj.symbolic_link], 0         ; /src:336 ; [0x21011f:1]=0
0x00002e4d      0f859d030000   jne 0x31f0
0x00002e53      4531c0         xor r8d, r8d
0x00002e56      803dc0d22000.  cmp byte [obj.logical], 0               ; [0x21011d:1]=0
0x00002e5d      4889e9         mov rcx, rbp
0x00002e60      4889de         mov rsi, rbx
0x00002e63      4489e2         mov edx, r12d
0x00002e66      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00002e6b      410f95c0       setne r8b
0x00002e6f      4883ec08       sub rsp, 8
0x00002e73      4152           push r10
0x00002e75      41c1e00a       shl r8d, 0xa
0x00002e79      e8420d0000     call sym.force_linkat
0x00002e7e      59             pop rcx
0x00002e7f      5e             pop rsi
0x00002e80      4189c7         mov r15d, eax
0x00002e83      4585ff         test r15d, r15d                         ; /src:344
0x00002e86      0f8e1a080000   jle 0x36a6
0x00002e8c      4889da         mov rdx, rbx                            ; /src:377
0x00002e8f      be04000000     mov esi, 4
0x00002e94      bf01000000     mov edi, 1
0x00002e99      e8c2530000     call sym.quotearg_n_style
0x00002e9e      31ff           xor edi, edi
0x00002ea0      4c89f2         mov rdx, r14
0x00002ea3      be04000000     mov esi, 4
0x00002ea8      4889442408     mov qword [rsp + 8], rax
0x00002ead      e8ae530000     call sym.quotearg_n_style
0x00002eb2      803d66d22000.  cmp byte [obj.symbolic_link], 0         ; [0x21011f:1]=0
0x00002eb9      4889c1         mov rcx, rax
0x00002ebc      0f8456020000   je 0x3118
0x00002ec2      4183ff24       cmp r15d, 0x24
0x00002ec6      7409           je 0x2ed1
0x00002ec8      803b00         cmp byte [rbx], 0                       ; /src:379
0x00002ecb      0f85bf030000   jne 0x3290
0x00002ed1      488d35c88300.  lea rsi, str.failed_to_create_symbolic_link__s_____s ; /src:377 ; 0xb2a0 ; "failed to create symbolic link %s -> %s"
0x00002ed8      ba05000000     mov edx, 5
0x00002edd      31ff           xor edi, edi
0x00002edf      48894c2410     mov qword [rsp + 0x10], rcx
0x00002ee4      e8e7efffff     call sym.imp.dcgettext
0x00002ee9      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00002eee      4889c2         mov rdx, rax
0x00002ef1      4c8b442408     mov r8, qword [rsp + 8]
0x00002ef6      4489fe         mov esi, r15d
0x00002ef9      31ff           xor edi, edi
0x00002efb      31c0           xor eax, eax
0x00002efd      4531ff         xor r15d, r15d
0x00002f00      e8abf2ffff     call sym.imp.error
0x00002f05      4d85ed         test r13, r13                           ; /src:390
0x00002f08      0f849cfeffff   je 0x2daa
0x00002f0e      4889e9         mov rcx, rbp                            ; /src:392
0x00002f11      4489e2         mov edx, r12d
0x00002f14      4c89ee         mov rsi, r13
0x00002f17      4489e7         mov edi, r12d
0x00002f1a      e801f3ffff     call sym.imp.renameat
0x00002f1f      85c0           test eax, eax
0x00002f21      0f8483feffff   je 0x2daa
0x00002f27      4c89f6         mov rsi, r14                            ; /src:393
0x00002f2a      bf04000000     mov edi, 4
0x00002f2f      e84c540000     call sym.quotearg_style
0x00002f34      488d35ec8000.  lea rsi, str.cannot_un_backup__s        ; 0xb027 ; "cannot un-backup %s"
0x00002f3b      31ff           xor edi, edi
0x00002f3d      ba05000000     mov edx, 5
0x00002f42      4889c5         mov rbp, rax
0x00002f45      e886efffff     call sym.imp.dcgettext
0x00002f4a      4889c3         mov rbx, rax
0x00002f4d      e87eeeffff     call sym.imp.__errno_location           ; /src:98
0x00002f52      8b30           mov esi, dword [rax]
0x00002f54      4889e9         mov rcx, rbp
0x00002f57      4889da         mov rdx, rbx
0x00002f5a      31ff           xor edi, edi
0x00002f5c      31c0           xor eax, eax
0x00002f5e      e84df2ffff     call sym.imp.error
0x00002f63      e942feffff     jmp 0x2daa
0x00002f68      0f1f84000000.  nop dword [rax + rax]
0x00002f70      4c8dac24b000.  lea r13, [rsp + 0xb0]
0x00002f78      41b800010000   mov r8d, 0x100
0x00002f7e      4889ea         mov rdx, rbp
0x00002f81      4489e6         mov esi, r12d
0x00002f84      bf01000000     mov edi, 1
0x00002f89      4489542408     mov dword [rsp + 8], r10d
0x00002f8e      4c89e9         mov rcx, r13
0x00002f91      e8caefffff     call sym.imp.__fxstatat
0x00002f96      85c0           test eax, eax
0x00002f98      448b542408     mov r10d, dword [rsp + 8]
0x00002f9d      7471           je 0x3010
0x00002f9f      4489542408     mov dword [rsp + 8], r10d
0x00002fa4      e827eeffff     call sym.imp.__errno_location
0x00002fa9      833802         cmp dword [rax], 2
0x00002fac      4989c5         mov r13, rax
0x00002faf      448b542408     mov r10d, dword [rsp + 8]
0x00002fb4      0f8486feffff   je 0x2e40
0x00002fba      4c89f6         mov rsi, r14
0x00002fbd      bf04000000     mov edi, 4
0x00002fc2      4531ff         xor r15d, r15d
0x00002fc5      e8b6530000     call sym.quotearg_style
0x00002fca      488d35d77f00.  lea rsi, str.failed_to_access__s        ; 0xafa8 ; "failed to access %s"
0x00002fd1      ba05000000     mov edx, 5
0x00002fd6      31ff           xor edi, edi
0x00002fd8      4889c3         mov rbx, rax
0x00002fdb      e8f0eeffff     call sym.imp.dcgettext
0x00002fe0      418b7500       mov esi, dword [r13]
0x00002fe4      4889c2         mov rdx, rax
0x00002fe7      4889d9         mov rcx, rbx
0x00002fea      31ff           xor edi, edi
0x00002fec      31c0           xor eax, eax
0x00002fee      e8bdf1ffff     call sym.imp.error
0x00002ff3      e9c3fdffff     jmp 0x2dbb
0x00002ff8      0f1f84000000.  nop dword [rax + rax]
0x00003000      e8bbfbffff     call sym.atomic_link
0x00003005      4189c2         mov r10d, eax
0x00003008      e981fcffff     jmp 0x2c8e
0x0000300d      0f1f00         nop dword [rax]
0x00003010      8b8424c80000.  mov eax, dword [rsp + 0xc8]
0x00003017      2500f00000     and eax, 0xf000
0x0000301c      3d00400000     cmp eax, 0x4000
0x00003021      0f8499030000   je 0x33c0
0x00003027      488b3de2d020.  mov rdi, qword [obj.dest_set]           ; [0x210110:8]=0
0x0000302e      4c89ea         mov rdx, r13
0x00003031      4c89f6         mov rsi, r14
0x00003034      4489542408     mov dword [rsp + 8], r10d
0x00003039      e8e2220000     call sym.seen_file
0x0000303e      84c0           test al, al
0x00003040      448b542408     mov r10d, dword [rsp + 8]
0x00003045      0f85bd040000   jne 0x3508
0x0000304b      448b05ced020.  mov r8d, dword [obj.backup_type]        ; [0x210120:4]=0
0x00003052      0fb605c2d020.  movzx eax, byte [obj.remove_existing_files] ; [0x21011b:1]=0
0x00003059      4585c0         test r8d, r8d
0x0000305c      740a           je 0x3068
0x0000305e      0fb605bad020.  movzx eax, byte [obj.symbolic_link]     ; [0x21011f:1]=0
0x00003065      83f001         xor eax, 1
0x00003068      84c0           test al, al
0x0000306a      741f           je 0x308b
0x0000306c      8b7c2410       mov edi, dword [rsp + 0x10]
0x00003070      85ff           test edi, edi
0x00003072      0f8515050000   jne 0x358d                              ; /src:220
0x00003078      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00003080      4839442428     cmp qword [rsp + 0x28], rax
0x00003085      0f849e050000   je 0x3629
0x0000308b      4585d2         test r10d, r10d
0x0000308e      0f88bc030000   js 0x3450
0x00003094      4183fa11       cmp r10d, 0x11
0x00003098      0f84b2030000   je 0x3450
0x0000309e      41b901000000   mov r9d, 1
0x000030a4      4531ed         xor r13d, r13d
0x000030a7      e99afdffff     jmp 0x2e46
0x000030ac      0f1f4000       nop dword [rax]
0x000030b0      48c704240000.  mov qword [rsp], 0
0x000030b8      4531ed         xor r13d, r13d
0x000030bb      4584ff         test r15b, r15b
0x000030be      0f8534fcffff   jne 0x2cf8
0x000030c4      4c8d7c2420     lea r15, [rsp + 0x20]
0x000030c9      e918fcffff     jmp 0x2ce6
0x000030ce      6690           nop
0x000030d0      4889de         mov rsi, rbx
0x000030d3      bf04000000     mov edi, 4
0x000030d8      4531ff         xor r15d, r15d
0x000030db      e8a0520000     call sym.quotearg_style
0x000030e0      488d35c17e00.  lea rsi, str.failed_to_access__s        ; 0xafa8 ; "failed to access %s"
0x000030e7      ba05000000     mov edx, 5
0x000030ec      31ff           xor edi, edi
0x000030ee      4889c5         mov rbp, rax
0x000030f1      e8daedffff     call sym.imp.dcgettext
0x000030f6      4889c3         mov rbx, rax
0x000030f9      e8d2ecffff     call sym.imp.__errno_location
0x000030fe      8b30           mov esi, dword [rax]
0x00003100      4889e9         mov rcx, rbp
0x00003103      4889da         mov rdx, rbx
0x00003106      31ff           xor edi, edi
0x00003108      31c0           xor eax, eax
0x0000310a      e8a1f0ffff     call sym.imp.error
0x0000310f      e9a7fcffff     jmp 0x2dbb
0x00003114      0f1f4000       nop dword [rax]
0x00003118      4183ff1f       cmp r15d, 0x1f
0x0000311c      0f84de020000   je 0x3400
0x00003122      4183ff7a       cmp r15d, 0x7a
0x00003126      7415           je 0x313d
0x00003128      4183ff11       cmp r15d, 0x11
0x0000312c      740f           je 0x313d
0x0000312e      4489f8         mov eax, r15d
0x00003131      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00003134      83f81c         cmp eax, 0x1c
0x00003137      0f85eb020000   jne 0x3428
0x0000313d      488d35c57e00.  lea rsi, str.failed_to_create_hard_link__s ; /src:11 ; 0xb009 ; "failed to create hard link %s"
0x00003144      ba05000000     mov edx, 5
0x00003149      31ff           xor edi, edi
0x0000314b      48894c2410     mov qword [rsp + 0x10], rcx
0x00003150      e87bedffff     call sym.imp.dcgettext
0x00003155      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000315a      4889c2         mov rdx, rax
0x0000315d      e98ffdffff     jmp 0x2ef1
0x00003162      660f1f440000   nop word [rax + rax]                    ; /src:26
0x00003168      4c89f7         mov rdi, r14
0x0000316b      44891424       mov dword [rsp], r10d
0x0000316f      e84c1f0000     call sym.dir_name
0x00003174      be02000000     mov esi, 2
0x00003179      4889c7         mov rdi, rax
0x0000317c      4889442408     mov qword [rsp + 8], rax
0x00003181      e80a170000     call sym.canonicalize_filename_mode
0x00003186      be02000000     mov esi, 2
0x0000318b      4989c5         mov r13, rax
0x0000318e      4889df         mov rdi, rbx
0x00003191      e8fa160000     call sym.canonicalize_filename_mode
0x00003196      4d85ed         test r13, r13
0x00003199      4989c7         mov r15, rax
0x0000319c      448b1424       mov r10d, dword [rsp]
0x000031a0      7409           je 0x31ab
0x000031a2      4885c0         test rax, rax
0x000031a5      0f850d010000   jne 0x32b8
0x000031ab      488b7c2408     mov rdi, qword [rsp + 8]
0x000031b0      44891424       mov dword [rsp], r10d
0x000031b4      e8f7ebffff     call sym.imp.free
0x000031b9      4c89ef         mov rdi, r13
0x000031bc      e8efebffff     call sym.imp.free
0x000031c1      4c89ff         mov rdi, r15
0x000031c4      e8e7ebffff     call sym.imp.free
0x000031c9      448b1424       mov r10d, dword [rsp]
0x000031cd      4889df         mov rdi, rbx
0x000031d0      4489542408     mov dword [rsp + 8], r10d
0x000031d5      e866640000     call sym.xstrdup
0x000031da      448b542408     mov r10d, dword [rsp + 8]
0x000031df      4889c3         mov rbx, rax
0x000031e2      48890424       mov qword [rsp], rax
0x000031e6      e92bfcffff     jmp 0x2e16
0x000031eb      0f1f440000     nop dword [rax + rax]
0x000031f0      4589d0         mov r8d, r10d
0x000031f3      4489c9         mov ecx, r9d
0x000031f6      4889ea         mov rdx, rbp
0x000031f9      4489e6         mov esi, r12d                           ; /src:225
0x000031fc      4889df         mov rdi, rbx
0x000031ff      e82c0b0000     call sym.force_symlinkat
0x00003204      4189c7         mov r15d, eax
0x00003207      e977fcffff     jmp 0x2e83                              ; /src:234
0x0000320c      0f1f4000       nop dword [rax]
0x00003210      803d03cf2000.  cmp byte [obj.verbose], 0               ; [0x21011a:1]=0
0x00003217      7517           jne 0x3230
0x00003219      48c704240000.  mov qword [rsp], 0                      ; stat.h:-94
0x00003221      4531ed         xor r13d, r13d
0x00003224      e981fbffff     jmp 0x2daa
0x00003229      0f1f80000000.  nop dword [rax]
0x00003230      4531ed         xor r13d, r13d
0x00003233      48c704240000.  mov qword [rsp], 0
0x0000323b      4c8d25d69400.  lea r12, [0x0000c718]
0x00003242      4c89e5         mov rbp, r12
0x00003245      e900fbffff     jmp 0x2d4a
0x0000324a      660f1f440000   nop word [rax + rax]
0x00003250      4c89ef         mov rdi, r13
0x00003253      e898ecffff     call sym.imp.strlen
0x00003258      488d7c0501     lea rdi, [rbp + rax + 1]
0x0000325d      e8ae610000     call sym.xmalloc
0x00003262      4c89f6         mov rsi, r14
0x00003265      4989c4         mov r12, rax
0x00003268      4889ea         mov rdx, rbp
0x0000326b      4889c7         mov rdi, rax
0x0000326e      4d89e7         mov r15, r12
0x00003271      e82aeeffff     call sym.imp.memcpy
0x00003276      498d3c2c       lea rdi, [r12 + rbp]
0x0000327a      4c89ee         mov rsi, r13
0x0000327d      e87eebffff     call sym.imp.strcpy
0x00003282      e99ffaffff     jmp 0x2d26
0x00003287      660f1f840000.  nop word [rax + rax]
0x00003290      488d35e17f00.  lea rsi, str.failed_to_create_symbolic_link__s ; /src:19 ; 0xb278 ; "failed to create symbolic link %s"
0x00003297      ba05000000     mov edx, 5
0x0000329c      31ff           xor edi, edi
0x0000329e      4889442410     mov qword [rsp + 0x10], rax
0x000032a3      e828ecffff     call sym.imp.dcgettext
0x000032a8      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000032ad      4889c2         mov rdx, rax
0x000032b0      e93cfcffff     jmp 0x2ef1
0x000032b5      0f1f00         nop dword [rax]
0x000032b8      bf00100000     mov edi, 0x1000
0x000032bd      448954241c     mov dword [rsp + 0x1c], r10d
0x000032c2      e849610000     call sym.xmalloc
0x000032c7      b900100000     mov ecx, 0x1000
0x000032cc      4889c2         mov rdx, rax
0x000032cf      4c89ee         mov rsi, r13
0x000032d2      4c89ff         mov rdi, r15
0x000032d5      48890424       mov qword [rsp], rax
0x000032d9      e8320c0000     call sym.relpath
0x000032de      84c0           test al, al
0x000032e0      448b54241c     mov r10d, dword [rsp + 0x1c]
0x000032e5      0f8475020000   je 0x3560
0x000032eb      488b7c2408     mov rdi, qword [rsp + 8]
0x000032f0      448954241c     mov dword [rsp + 0x1c], r10d
0x000032f5      e8b6eaffff     call sym.imp.free
0x000032fa      4c89ef         mov rdi, r13
0x000032fd      e8aeeaffff     call sym.imp.free
0x00003302      4c89ff         mov rdi, r15                            ; .//coreutils-8.31/lib:345
0x00003305      e8a6eaffff     call sym.imp.free
0x0000330a      48833c2400     cmp qword [rsp], 0
0x0000330f      448b54241c     mov r10d, dword [rsp + 0x1c]
0x00003314      0f84b3feffff   je 0x31cd
0x0000331a      488b1c24       mov rbx, qword [rsp]
0x0000331e      e9f3faffff     jmp 0x2e16
0x00003323      0f1f440000     nop dword [rax + rax]
0x00003328      4c8d7c2420     lea r15, [rsp + 0x20]
0x0000332d      4589e8         mov r8d, r13d
0x00003330      4889da         mov rdx, rbx
0x00003333      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00003338      bf01000000     mov edi, 1
0x0000333d      44891424       mov dword [rsp], r10d
0x00003341      4c89f9         mov rcx, r15
0x00003344      e817ecffff     call sym.imp.__fxstatat
0x00003349      85c0           test eax, eax
0x0000334b      89442410       mov dword [rsp + 0x10], eax
0x0000334f      448b1424       mov r10d, dword [rsp]
0x00003353      0f8577fdffff   jne 0x30d0
0x00003359      440fb63db8cd.  movzx r15d, byte [obj.hard_dir_link]    ; [0x210119:1]=0
0x00003361      4584ff         test r15b, r15b
0x00003364      0f8597faffff   jne 0x2e01
0x0000336a      8b442438       mov eax, dword [rsp + 0x38]
0x0000336e      2500f00000     and eax, 0xf000
0x00003373      3d00400000     cmp eax, 0x4000
0x00003378      0f8583faffff   jne 0x2e01
0x0000337e      4889da         mov rdx, rbx
0x00003381      31ff           xor edi, edi
0x00003383      be03000000     mov esi, 3
0x00003388      e8f3500000     call sym.quotearg_n_style_colon
0x0000338d      488d356c7e00.  lea rsi, str.s:_hard_link_not_allowed_for_directory ; 0xb200 ; "%s: hard link not allowed for directory"
0x00003394      4889c3         mov rbx, rax
0x00003397      31ff           xor edi, edi                            ; /src:111
0x00003399      ba05000000     mov edx, 5
0x0000339e      e82debffff     call sym.imp.dcgettext
0x000033a3      4889d9         mov rcx, rbx
0x000033a6      4889c2         mov rdx, rax
0x000033a9      31f6           xor esi, esi
0x000033ab      31ff           xor edi, edi
0x000033ad      31c0           xor eax, eax
0x000033af      e8fcedffff     call sym.imp.error
0x000033b4      e902faffff     jmp 0x2dbb
0x000033b9      0f1f80000000.  nop dword [rax]
0x000033c0      4c89f2         mov rdx, r14
0x000033c3      be03000000     mov esi, 3
0x000033c8      31ff           xor edi, edi
0x000033ca      e8b1500000     call sym.quotearg_n_style_colon
0x000033cf      488d35527e00.  lea rsi, str.s:_cannot_overwrite_directory ; 0xb228 ; "%s: cannot overwrite directory"
0x000033d6      4889c3         mov rbx, rax
0x000033d9      ba05000000     mov edx, 5
0x000033de      31ff           xor edi, edi
0x000033e0      4531ff         xor r15d, r15d
0x000033e3      e8e8eaffff     call sym.imp.dcgettext
0x000033e8      4889d9         mov rcx, rbx
0x000033eb      4889c2         mov rdx, rax
0x000033ee      31f6           xor esi, esi
0x000033f0      31ff           xor edi, edi
0x000033f2      31c0           xor eax, eax
0x000033f4      e8b7edffff     call sym.imp.error
0x000033f9      e9bdf9ffff     jmp 0x2dbb
0x000033fe      6690           nop
0x00003400      488d35c17e00.  lea rsi, str.failed_to_create_hard_link_to__.0s_s ; 0xb2c8 ; "failed to create hard link to %.0s%s"
0x00003407      ba05000000     mov edx, 5                              ; /src:155
0x0000340c      31ff           xor edi, edi
0x0000340e      4889442410     mov qword [rsp + 0x10], rax
0x00003413      e8b8eaffff     call sym.imp.dcgettext
0x00003418      488b4c2410     mov rcx, qword [rsp + 0x10]             ; /src:163
0x0000341d      4889c2         mov rdx, rax
0x00003420      e9ccfaffff     jmp 0x2ef1
0x00003425      0f1f00         nop dword [rax]
0x00003428      488d35c17e00.  lea rsi, str.failed_to_create_hard_link__s_____s ; 0xb2f0 ; "failed to create hard link %s => %s"
0x0000342f      ba05000000     mov edx, 5
0x00003434      31ff           xor edi, edi
0x00003436      48894c2410     mov qword [rsp + 0x10], rcx             ; /src:168
0x0000343b      e890eaffff     call sym.imp.dcgettext
0x00003440      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00003445      4889c2         mov rdx, rax
0x00003448      e9a4faffff     jmp 0x2ef1
0x0000344d      0f1f00         nop dword [rax]
0x00003450      440fb63dc4cc.  movzx r15d, byte [obj.interactive]      ; [0x21011c:1]=0
0x00003458      4584ff         test r15b, r15b
0x0000345b      0f855f010000   jne 0x35c0
0x00003461      8b15b9cc2000   mov edx, dword [obj.backup_type]        ; [0x210120:4]=0
0x00003467      85d2           test edx, edx
0x00003469      0f842ffcffff   je 0x309e
0x0000346f      4889ee         mov rsi, rbp
0x00003472      4489e7         mov edi, r12d
0x00003475      4489542408     mov dword [rsp + 8], r10d
0x0000347a      e881130000     call sym.find_backup_file_name
0x0000347f      4489e2         mov edx, r12d
0x00003482      4889c1         mov rcx, rax
0x00003485      4889ee         mov rsi, rbp
0x00003488      4489e7         mov edi, r12d
0x0000348b      4989c5         mov r13, rax
0x0000348e      e88dedffff     call sym.imp.renameat
0x00003493      85c0           test eax, eax
0x00003495      41b901000000   mov r9d, 1
0x0000349b      448b542408     mov r10d, dword [rsp + 8]
0x000034a0      0f84a0f9ffff   je 0x2e46
0x000034a6      e825e9ffff     call sym.imp.__errno_location
0x000034ab      448b38         mov r15d, dword [rax]
0x000034ae      4c89ef         mov rdi, r13
0x000034b1      e8fae8ffff     call sym.imp.free
0x000034b6      448b542408     mov r10d, dword [rsp + 8]
0x000034bb      4183ff02       cmp r15d, 2
0x000034bf      0f847bf9ffff   je 0x2e40                               ; /src:117
0x000034c5      4c89f6         mov rsi, r14
0x000034c8      bf04000000     mov edi, 4
0x000034cd      e8ae4e0000     call sym.quotearg_style
0x000034d2      488d35107b00.  lea rsi, str.cannot_backup__s           ; 0xafe9 ; "cannot backup %s"
0x000034d9      4889c3         mov rbx, rax
0x000034dc      ba05000000     mov edx, 5
0x000034e1      31ff           xor edi, edi
0x000034e3      e8e8e9ffff     call sym.imp.dcgettext                  ; /src:118
0x000034e8      4489fe         mov esi, r15d
0x000034eb      4889c2         mov rdx, rax
0x000034ee      4889d9         mov rcx, rbx
0x000034f1      31ff           xor edi, edi
0x000034f3      31c0           xor eax, eax
0x000034f5      4531ff         xor r15d, r15d
0x000034f8      e8b3ecffff     call sym.imp.error
0x000034fd      e9b9f8ffff     jmp 0x2dbb
0x00003502      660f1f440000   nop word [rax + rax]
0x00003508      4889da         mov rdx, rbx
0x0000350b      be04000000     mov esi, 4
0x00003510      bf01000000     mov edi, 1                              ; /src:149
0x00003515      e8464d0000     call sym.quotearg_n_style
0x0000351a      4c89f2         mov rdx, r14
0x0000351d      be04000000     mov esi, 4
0x00003522      31ff           xor edi, edi
0x00003524      4889c5         mov rbp, rax
0x00003527      e8344d0000     call sym.quotearg_n_style
0x0000352c      488d35157d00.  lea rsi, str.will_not_overwrite_just_created__s_with__s ; 0xb248 ; "will not overwrite just-created %s with %s"
0x00003533      4889c3         mov rbx, rax
0x00003536      ba05000000     mov edx, 5
0x0000353b      31ff           xor edi, edi
0x0000353d      4531ff         xor r15d, r15d
0x00003540      e88be9ffff     call sym.imp.dcgettext
0x00003545      4989e8         mov r8, rbp
0x00003548      4889c2         mov rdx, rax
0x0000354b      4889d9         mov rcx, rbx
0x0000354e      31f6           xor esi, esi
0x00003550      31ff           xor edi, edi
0x00003552      31c0           xor eax, eax
0x00003554      e857ecffff     call sym.imp.error
0x00003559      e95df8ffff     jmp 0x2dbb
0x0000355e      6690           nop                                     ; /src:141
0x00003560      488b3c24       mov rdi, qword [rsp]
0x00003564      e847e8ffff     call sym.imp.free
0x00003569      488b7c2408     mov rdi, qword [rsp + 8]
0x0000356e      e83de8ffff     call sym.imp.free
0x00003573      4c89ef         mov rdi, r13
0x00003576      e835e8ffff     call sym.imp.free
0x0000357b      4c89ff         mov rdi, r15
0x0000357e      e82de8ffff     call sym.imp.free
0x00003583      448b54241c     mov r10d, dword [rsp + 0x1c]
0x00003588      e940fcffff     jmp 0x31cd
0x0000358d      4c8d7c2420     lea r15, [rsp + 0x20]
0x00003592      4889de         mov rsi, rbx
0x00003595      bf01000000     mov edi, 1
0x0000359a      4489542408     mov dword [rsp + 8], r10d
0x0000359f      4c89fa         mov rdx, r15
0x000035a2      e829ebffff     call sym.imp.__xstat
0x000035a7      85c0           test eax, eax
0x000035a9      448b542408     mov r10d, dword [rsp + 8]
0x000035ae      0f85d7faffff   jne 0x308b
0x000035b4      e9bffaffff     jmp 0x3078
0x000035b9      0f1f80000000.  nop dword [rax]
0x000035c0      4c89f6         mov rsi, r14
0x000035c3      bf04000000     mov edi, 4
0x000035c8      4489542410     mov dword [rsp + 0x10], r10d
0x000035cd      e8ae4d0000     call sym.quotearg_style
0x000035d2      488b0d6fcb20.  mov rcx, qword [obj.program_name]       ; [0x210148:8]=0
0x000035d9      488d35f87900.  lea rsi, str.s:_replace__s              ; 0xafd8 ; "%s: replace %s? "
0x000035e0      31ff           xor edi, edi                            ; /src:142
0x000035e2      ba05000000     mov edx, 5
0x000035e7      4989c5         mov r13, rax
0x000035ea      48894c2408     mov qword [rsp + 8], rcx
0x000035ef      e8dce8ffff     call sym.imp.dcgettext
0x000035f4      488b4c2408     mov rcx, qword [rsp + 8]
0x000035f9      488b3d00cb20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00003600      4889c2         mov rdx, rax
0x00003603      4d89e8         mov r8, r13
0x00003606      be01000000     mov esi, 1
0x0000360b      31c0           xor eax, eax
0x0000360d      e84eecffff     call sym.imp.__fprintf_chk
0x00003612      e8b9600000     call sym.yesno
0x00003617      84c0           test al, al
0x00003619      448b542410     mov r10d, dword [rsp + 0x10]
0x0000361e      0f853dfeffff   jne 0x3461
0x00003624      e992f7ffff     jmp 0x2dbb
0x00003629      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x00003631      4839442420     cmp qword [rsp + 0x20], rax
0x00003636      0f854ffaffff   jne 0x308b
0x0000363c      48837c243001   cmp qword [rsp + 0x30], 1
0x00003642      7425           je 0x3669
0x00003644      4889e9         mov rcx, rbp
0x00003647      4489e2         mov edx, r12d
0x0000364a      4889de         mov rsi, rbx
0x0000364d      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00003652      4489542408     mov dword [rsp + 8], r10d
0x00003657      e8b4530000     call sym.same_nameat
0x0000365c      84c0           test al, al
0x0000365e      448b542408     mov r10d, dword [rsp + 8]
0x00003663      0f8422faffff   je 0x308b
0x00003669      4c89f2         mov rdx, r14
0x0000366c      be04000000     mov esi, 4
0x00003671      bf01000000     mov edi, 1
0x00003676      e8e54b0000     call sym.quotearg_n_style
0x0000367b      4889da         mov rdx, rbx
0x0000367e      be04000000     mov esi, 4
0x00003683      31ff           xor edi, edi
0x00003685      4889c5         mov rbp, rax
0x00003688      e8d34b0000     call sym.quotearg_n_style
0x0000368d      ba05000000     mov edx, 5
0x00003692      4889c3         mov rbx, rax
0x00003695      488d35207900.  lea rsi, str.s_and__s_are_the_same_file ; /src:207 ; 0xafbc ; "%s and %s are the same file"
0x0000369c      e99afeffff     jmp 0x353b                              ; /src:153
0x000036a1      e87ae8ffff     call sym.imp.__stack_chk_fail
0x000036a6      440fb63d71ca.  movzx r15d, byte [obj.symbolic_link]    ; [0x21011f:1]=0
0x000036ae      e908faffff     jmp 0x30bb
0x000036b3      0f1f00         nop dword [rax]
0x000036b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x000036c0      4155           push r13
0x000036c2      4154           push r12
0x000036c4      ba05000000     mov edx, 5
0x000036c9      55             push rbp
0x000036ca      53             push rbx
0x000036cb      89fd           mov ebp, edi
0x000036cd      4881ec880000.  sub rsp, 0x88
0x000036d4      488b1d6dca20.  mov rbx, qword [obj.program_name]       ; [0x210148:8]=0
0x000036db      64488b042528.  mov rax, qword fs:[0x28]
0x000036e4      4889442478     mov qword [rsp + 0x78], rax
0x000036e9      31c0           xor eax, eax
0x000036eb      85ff           test edi, edi
0x000036ed      742e           je 0x371d
0x000036ef      488d35227c00.  lea rsi, str.Try___s___help__for_more_information. ; 0xb318 ; "Try '%s --help' for more information.\n"
0x000036f6      31ff           xor edi, edi
0x000036f8      e8d3e7ffff     call sym.imp.dcgettext
0x000036fd      488b3dfcc920.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00003704      4889c2         mov rdx, rax
0x00003707      4889d9         mov rcx, rbx
0x0000370a      be01000000     mov esi, 1
0x0000370f      31c0           xor eax, eax                            ; /src:173
0x00003711      e84aebffff     call sym.imp.__fprintf_chk
0x00003716      89ef           mov edi, ebp
0x00003718      e823ebffff     call sym.imp.exit
0x0000371d      488d351c7c00.  lea rsi, str.Usage:__s__OPTION_...___T__TARGET_LINK_NAME____or:___s__OPTION_..._TARGET____or:___s__OPTION_..._TARGET..._DIRECTORY____or:___s__OPTION_...__t_DIRECTORY_TARGET... ; 0xb340 ; "Usage: %s [OPTION]... [-T] TARGET LINK_NAME\n  or:  %s [OPTION]... TARGET\n  or:  %s [OPTION]... TARGET... DIRECTORY\n  or:  %s [OPTION]... -t DIRECTORY TARGET...\n"
0x00003724      31ff           xor edi, edi
0x00003726      e8a5e7ffff     call sym.imp.dcgettext
0x0000372b      4889d9         mov rcx, rbx
0x0000372e      4989d9         mov r9, rbx
0x00003731      4989d8         mov r8, rbx
0x00003734      4889da         mov rdx, rbx                            ; /src:181
0x00003737      4889c6         mov rsi, rax
0x0000373a      bf01000000     mov edi, 1
0x0000373f      31c0           xor eax, eax
0x00003741      e82aeaffff     call sym.imp.__printf_chk
0x00003746      488b1d7bc920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x0000374d      488d35947c00.  lea rsi, str.In_the_1st_form__create_a_link_to_TARGET_with_the_name_LINK_NAME.__In_the_2nd_form__create_a_link_to_TARGET_in_the_current_directory.__In_the_3rd_and_4th_forms__create_links_to_each_TARGET_in_DIRECTORY.__Create_hard_links_by_default__symbolic_links_with___symbolic.__By_default__each_destination__name_of_new_link__should_not_already_exist.__When_creating_hard_links__each_TARGET_must_exist.__Symbolic_links__can_hold_arbitrary_text__if_later_resolved__a_relative_link_is__interpreted_in_relation_to_its_parent_directory. ; 0xb3e8 ; "In the 1st form, create a link to TARGET with the name LINK_NAME.\nIn the 2nd form, create a link to TARGET in the current directory.\nIn the 3rd and 4th forms, create links to each TARGET in DIRECTORY.\nCreate hard links by default, symbolic links with --symbolic.\nBy default, each destination (name of new link) should not already exist.\nWhen creating hard links, each TARGET must exist.  Symbolic links\ncan hold arbitrary text; if later resolved, a relative link is\ninterpreted in relation to its parent directory.\n"
0x00003754      ba05000000     mov edx, 5
0x00003759      31ff           xor edi, edi                            ; /src:190
0x0000375b      e870e7ffff     call sym.imp.dcgettext
0x00003760      4889de         mov rsi, rbx
0x00003763      4889c7         mov rdi, rax
0x00003766      e8c5e8ffff     call sym.imp.fputs_unlocked
0x0000376b      488b1d56c920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00003772      488d35777e00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0xb5f0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00003779      ba05000000     mov edx, 5
0x0000377e      31ff           xor edi, edi                            ; /src:197
0x00003780      e84be7ffff     call sym.imp.dcgettext
0x00003785      4889de         mov rsi, rbx
0x00003788      4889c7         mov rdi, rax
0x0000378b      e8a0e8ffff     call sym.imp.fputs_unlocked
0x00003790      488b1d31c920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00003797      488d35a27e00.  lea rsi, str.backup__CONTROL_______make_a_backup_of_each_existing_destination_file_____b__________________________like___backup_but_does_not_accept_an_argument_____d___F____directory_________allow_the_superuser_to_attempt_to_hard_link__________________________________directories__note:_will_probably_fail_due_to__________________________________system_restrictions__even_for_the_superuser______f____force_________________remove_existing_destination_files ; 0xb640 ; "      --backup[=CONTROL]      make a backup of each existing destination file\n  -b                          like --backup but does not accept an argument\n  -d, -F, --directory         allow the superuser to attempt to hard link\n                                directories (note: will probably fail due to\n                                system restrictions, even for the superuser)\n  -f, --force                 remove existing destination files\n"
0x0000379e      ba05000000     mov edx, 5
0x000037a3      31ff           xor edi, edi                            ; /src:198
0x000037a5      e826e7ffff     call sym.imp.dcgettext
0x000037aa      4889de         mov rsi, rbx
0x000037ad      4889c7         mov rdi, rax
0x000037b0      e87be8ffff     call sym.imp.fputs_unlocked
0x000037b5      488b1d0cc920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x000037bc      488d353d8000.  lea rsi, str.i____interactive___________prompt_whether_to_remove_destinations_____L____logical_______________dereference_TARGETs_that_are_symbolic_links_____n____no_dereference________treat_LINK_NAME_as_a_normal_file_if__________________________________it_is_a_symbolic_link_to_a_directory_____P____physical______________make_hard_links_directly_to_symbolic_links_____r____relative______________create_symbolic_links_relative_to_link_location_____s____symbolic______________make_symbolic_links_instead_of_hard_links ; 0xb800 ; "  -i, --interactive           prompt whether to remove destinations\n  -L, --logical               dereference TARGETs that are symbolic links\n  -n, --no-dereference        treat LINK_NAME as a normal file if\n                                it is a symbolic link to a directory\n  -P, --physical              make hard links directly to symbolic links\n  -r, --relative              create symbolic links relative to link location\n  -s, --symbolic              make symbolic links instead of hard links\n"
0x000037c3      ba05000000     mov edx, 5
0x000037c8      31ff           xor edi, edi                            ; stdio2.h:359   if (__builtin_constant_p (__size)
0x000037ca      e801e7ffff     call sym.imp.dcgettext
0x000037cf      4889de         mov rsi, rbx
0x000037d2      4889c7         mov rdi, rax
0x000037d5      e856e8ffff     call sym.imp.fputs_unlocked
0x000037da      488b1de7c820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x000037e1      488d35108200.  lea rsi, str.S____suffix_SUFFIX_________override_the_usual_backup_suffix_____t____target_directory_DIRECTORY__specify_the_DIRECTORY_in_which_to_create__________________________________the_links_____T____no_target_directory___treat_LINK_NAME_as_a_normal_file_always_____v____verbose_______________print_name_of_each_linked_file ; 0xb9f8 ; "  -S, --suffix=SUFFIX         override the usual backup suffix\n  -t, --target-directory=DIRECTORY  specify the DIRECTORY in which to create\n                                the links\n  -T, --no-target-directory   treat LINK_NAME as a normal file always\n  -v, --verbose               print name of each linked file\n"
0x000037e8      ba05000000     mov edx, 5
0x000037ed      31ff           xor edi, edi                            ; stdio2.h:366       if (__cnt == 0)
0x000037ef      e8dce6ffff     call sym.imp.dcgettext
0x000037f4      4889de         mov rsi, rbx
0x000037f7      4889c7         mov rdi, rax
0x000037fa      e831e8ffff     call sym.imp.fputs_unlocked
0x000037ff      488b1dc2c820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00003806      488d352b8300.  lea rsi, str.help_____display_this_help_and_exit ; 0xbb38 ; "      --help     display this help and exit\n"
0x0000380d      ba05000000     mov edx, 5
0x00003812      31ff           xor edi, edi
0x00003814      e8b7e6ffff     call sym.imp.dcgettext
0x00003819      4889de         mov rsi, rbx                            ; /src:200
0x0000381c      4889c7         mov rdi, rax
0x0000381f      e80ce8ffff     call sym.imp.fputs_unlocked
0x00003824      488b1d9dc820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x0000382b      488d35368300.  lea rsi, str.version__output_version_information_and_exit ; 0xbb68 ; "      --version  output version information and exit\n"
0x00003832      ba05000000     mov edx, 5
0x00003837      31ff           xor edi, edi
0x00003839      e892e6ffff     call sym.imp.dcgettext
0x0000383e      4889de         mov rsi, rbx
0x00003841      4889c7         mov rdi, rax
0x00003844      e8e7e7ffff     call sym.imp.fputs_unlocked
0x00003849      488b1d78c820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00003850      488d35498300.  lea rsi, str.The_backup_suffix_is______unless_set_with___suffix_or_SIMPLE_BACKUP_SUFFIX.__The_version_control_method_may_be_selected_via_the___backup_option_or_through__the_VERSION_CONTROL_environment_variable.__Here_are_the_values: ; 0xbba0 ; "\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\nThe version control method may be selected via the --backup option or through\nthe VERSION_CONTROL environment variable.  Here are the values:\n\n"
0x00003857      ba05000000     mov edx, 5
0x0000385c      31ff           xor edi, edi
0x0000385e      e86de6ffff     call sym.imp.dcgettext
0x00003863      4889de         mov rsi, rbx
0x00003866      4889c7         mov rdi, rax
0x00003869      e8c2e7ffff     call sym.imp.fputs_unlocked
0x0000386e      488b1d53c820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00003875      488d35048400.  lea rsi, str.none__off_______never_make_backups__even_if___backup_is_given_____numbered__t_____make_numbered_backups____existing__nil___numbered_if_numbered_backups_exist__simple_otherwise____simple__never___always_make_simple_backups ; 0xbc80 ; "  none, off       never make backups (even if --backup is given)\n  numbered, t     make numbered backups\n  existing, nil   numbered if numbered backups exist, simple otherwise\n  simple, never   always make simple backups\n"
0x0000387c      ba05000000     mov edx, 5
0x00003881      31ff           xor edi, edi
0x00003883      e848e6ffff     call sym.imp.dcgettext
0x00003888      4889de         mov rsi, rbx
0x0000388b      4889c7         mov rdi, rax
0x0000388e      488d1da67700.  lea rbx, [0x0000b03b]                   ; "ln"
0x00003895      e896e7ffff     call sym.imp.fputs_unlocked
0x0000389a      488d35bf8400.  lea rsi, str.Using__s_ignores__L_and__P.__Otherwise__the_last_option_specified_controls__behavior_when_a_TARGET_is_a_symbolic_link__defaulting_to__s. ; 0xbd60 ; "\nUsing -s ignores -L and -P.  Otherwise, the last option specified controls\nbehavior when a TARGET is a symbolic link, defaulting to %s.\n"
0x000038a1      ba05000000     mov edx, 5
0x000038a6      31ff           xor edi, edi
0x000038a8      e823e6ffff     call sym.imp.dcgettext
0x000038ad      488d158a7700.  lea rdx, [0x0000b03e]                   ; "-P"
0x000038b4      4889c6         mov rsi, rax
0x000038b7      bf01000000     mov edi, 1
0x000038bc      31c0           xor eax, eax
0x000038be      e8ade8ffff     call sym.imp.__printf_chk
0x000038c3      488d05777700.  lea rax, [0x0000b041]                   ; "["
0x000038ca      488d0db17700.  lea rcx, str.sha256sum                  ; 0xb082 ; "sha256sum"
0x000038d1      48c744246000.  mov qword [rsp + 0x60], 0
0x000038da      48c744246800.  mov qword [rsp + 0x68], 0
0x000038e3      4889e2         mov rdx, rsp
0x000038e6      48890424       mov qword [rsp], rax
0x000038ea      488d05527700.  lea rax, [0x0000b043]                   ; "test invocation"
0x000038f1      48894c2430     mov qword [rsp + 0x30], rcx
0x000038f6      488d0d8f7700.  lea rcx, str.sha384sum                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:393 ; 0xb08c ; "sha384sum"
0x000038fd      4889442408     mov qword [rsp + 8], rax
0x00003902      488d05b27700.  lea rax, [0x0000b0bb]                   ; "coreutils"
0x00003909      48894c2440     mov qword [rsp + 0x40], rcx
0x0000390e      488d0d817700.  lea rcx, str.sha512sum                  ; 0xb096 ; "sha512sum"
0x00003915      4889442410     mov qword [rsp + 0x10], rax
0x0000391a      488d05327700.  lea rax, [0x0000b053]                   ; "Multi-call invocation"
0x00003921      48894c2450     mov qword [rsp + 0x50], rcx
0x00003926      4889442418     mov qword [rsp + 0x18], rax
0x0000392b      488d05377700.  lea rax, str.sha224sum                  ; 0xb069 ; "sha224sum"
0x00003932      4889442420     mov qword [rsp + 0x20], rax
0x00003937      488d05357700.  lea rax, str.sha2_utilities             ; 0xb073 ; "sha2 utilities"
0x0000393e      4889442428     mov qword [rsp + 0x28], rax
0x00003943      4889442438     mov qword [rsp + 0x38], rax
0x00003948      4889442448     mov qword [rsp + 0x48], rax
0x0000394d      4889442458     mov qword [rsp + 0x58], rax
0x00003952      660f1f440000   nop word [rax + rax]
0x00003958      4883c210       add rdx, 0x10
0x0000395c      488b3a         mov rdi, qword [rdx]
0x0000395f      4885ff         test rdi, rdi
0x00003962      7413           je 0x3977
0x00003964      b903000000     mov ecx, 3
0x00003969      4889de         mov rsi, rbx
0x0000396c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000396e      0f97c0         seta al
0x00003971      1c00           sbb al, 0
0x00003973      84c0           test al, al                             ; ../coreutils-8.31/src/.c:-152
0x00003975      75e1           jne 0x3958
0x00003977      4c8b6208       mov r12, qword [rdx + 8]
0x0000397b      31ff           xor edi, edi
0x0000397d      ba05000000     mov edx, 5
0x00003982      488d35177700.  lea rsi, str.s_online_help:___s         ; 0xb0a0 ; "\n%s online help: <%s>\n"
0x00003989      4d85e4         test r12, r12
0x0000398c      0f84c1000000   je 0x3a53
0x00003992      e839e5ffff     call sym.imp.dcgettext
0x00003997      488d0d528400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xbdf0 ; "https://www.gnu.org/software/coreutils/"
0x0000399e      488d15127700.  lea rdx, str.GNU_coreutils              ; 0xb0b7 ; "GNU coreutils"
0x000039a5      4889c6         mov rsi, rax
0x000039a8      bf01000000     mov edi, 1
0x000039ad      31c0           xor eax, eax
0x000039af      e8bce7ffff     call sym.imp.__printf_chk
0x000039b4      31f6           xor esi, esi
0x000039b6      bf05000000     mov edi, 5
0x000039bb      e8a0e7ffff     call sym.imp.setlocale
0x000039c0      4885c0         test rax, rax
0x000039c3      741c           je 0x39e1
0x000039c5      488d35f97600.  lea rsi, [0x0000b0c5]                   ; "en_"
0x000039cc      ba03000000     mov edx, 3
0x000039d1      4889c7         mov rdi, rax
0x000039d4      e807e4ffff     call sym.imp.strncmp
0x000039d9      85c0           test eax, eax
0x000039db      0f8507010000   jne 0x3ae8
0x000039e1      488d35e17600.  lea rsi, str.Full_documentation___s_s   ; 0xb0c9 ; "Full documentation <%s%s>\n"
0x000039e8      31ff           xor edi, edi
0x000039ea      ba05000000     mov edx, 5
0x000039ef      e8dce4ffff     call sym.imp.dcgettext
0x000039f4      488d0d407600.  lea rcx, [0x0000b03b]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:400 ; "ln"
0x000039fb      488d15ee8300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xbdf0 ; "https://www.gnu.org/software/coreutils/"
0x00003a02      4889c6         mov rsi, rax
0x00003a05      bf01000000     mov edi, 1
0x00003a0a      31c0           xor eax, eax
0x00003a0c      e85fe7ffff     call sym.imp.__printf_chk
0x00003a11      4939dc         cmp r12, rbx
0x00003a14      488d0d427600.  lea rcx, [0x0000b05d]                   ; " invocation"
0x00003a1b      488d1df68c00.  lea rbx, [0x0000c718]
0x00003a22      480f44d9       cmove rbx, rcx
0x00003a26      488d35338400.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xbe60 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003a2d      31ff           xor edi, edi
0x00003a2f      ba05000000     mov edx, 5
0x00003a34      e897e4ffff     call sym.imp.dcgettext
0x00003a39      4889d9         mov rcx, rbx                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:410
0x00003a3c      4889c6         mov rsi, rax
0x00003a3f      4c89e2         mov rdx, r12
0x00003a42      bf01000000     mov edi, 1
0x00003a47      31c0           xor eax, eax
0x00003a49      e822e7ffff     call sym.imp.__printf_chk
0x00003a4e      e9c3fcffff     jmp 0x3716
0x00003a53      e878e4ffff     call sym.imp.dcgettext
0x00003a58      488d0d918300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xbdf0 ; "https://www.gnu.org/software/coreutils/"
0x00003a5f      488d15517600.  lea rdx, str.GNU_coreutils              ; 0xb0b7 ; "GNU coreutils"
0x00003a66      4889c6         mov rsi, rax
0x00003a69      bf01000000     mov edi, 1
0x00003a6e      31c0           xor eax, eax
0x00003a70      e8fbe6ffff     call sym.imp.__printf_chk
0x00003a75      31f6           xor esi, esi
0x00003a77      bf05000000     mov edi, 5
0x00003a7c      e8dfe6ffff     call sym.imp.setlocale
0x00003a81      4885c0         test rax, rax
0x00003a84      7418           je 0x3a9e
0x00003a86      488d35387600.  lea rsi, [0x0000b0c5]                   ; "en_"
0x00003a8d      ba03000000     mov edx, 3
0x00003a92      4889c7         mov rdi, rax
0x00003a95      e846e3ffff     call sym.imp.strncmp
0x00003a9a      85c0           test eax, eax
0x00003a9c      7543           jne 0x3ae1
0x00003a9e      488d35247600.  lea rsi, str.Full_documentation___s_s   ; 0xb0c9 ; "Full documentation <%s%s>\n"
0x00003aa5      ba05000000     mov edx, 5
0x00003aaa      31ff           xor edi, edi
0x00003aac      4c8d25887500.  lea r12, [0x0000b03b]                   ; "ln"
0x00003ab3      488d1da37500.  lea rbx, [0x0000b05d]                   ; " invocation"
0x00003aba      e811e4ffff     call sym.imp.dcgettext
0x00003abf      488d0d757500.  lea rcx, [0x0000b03b]                   ; "ln"
0x00003ac6      488d15238300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xbdf0 ; "https://www.gnu.org/software/coreutils/"
0x00003acd      4889c6         mov rsi, rax
0x00003ad0      bf01000000     mov edi, 1
0x00003ad5      31c0           xor eax, eax
0x00003ad7      e894e6ffff     call sym.imp.__printf_chk
0x00003adc      e945ffffff     jmp 0x3a26
0x00003ae1      4c8d25537500.  lea r12, [0x0000b03b]                   ; "ln"
0x00003ae8      4c8b2dd9c520.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00003aef      488d35228300.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xbe18 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00003af6      31ff           xor edi, edi
0x00003af8      ba05000000     mov edx, 5
0x00003afd      e8cee3ffff     call sym.imp.dcgettext
0x00003b02      4c89ee         mov rsi, r13
0x00003b05      4889c7         mov rdi, rax
0x00003b08      e823e5ffff     call sym.imp.fputs_unlocked
0x00003b0d      e9cffeffff     jmp 0x39e1
0x00003b12      662e0f1f8400.  nop word cs:[rax + rax]
0x00003b1c      0f1f4000       nop dword [rax]
;-- try_link:
0x00003b20      4889f0         mov rax, rsi                            ; /src:-47
0x00003b23      4889f9         mov rcx, rdi
0x00003b26      8b5610         mov edx, dword [rsi + 0x10]
0x00003b29      448b4014       mov r8d, dword [rax + 0x14]
0x00003b2d      488b7608       mov rsi, qword [rsi + 8]
0x00003b31      8b38           mov edi, dword [rax]
0x00003b33      e918e6ffff     jmp sym.imp.linkat
0x00003b38      0f1f84000000.  nop dword [rax + rax]
;-- samedir_template:
0x00003b40      4154           push r12
0x00003b42      55             push rbp
0x00003b43      4889fd         mov rbp, rdi
0x00003b46      53             push rbx
0x00003b47      4989f4         mov r12, rsi
0x00003b4a      e851160000     call sym.last_component
0x00003b4f      4829e8         sub rax, rbp
0x00003b52      488d7809       lea rdi, [rax + 9]
0x00003b56      4889c3         mov rbx, rax
0x00003b59      4881ff000100.  cmp rdi, 0x100
0x00003b60      760f           jbe 0x3b71
0x00003b62      e889e5ffff     call sym.imp.malloc
0x00003b67      4989c4         mov r12, rax
0x00003b6a      31c0           xor eax, eax
0x00003b6c      4d85e4         test r12, r12
0x00003b6f      7422           je 0x3b93
0x00003b71      4889da         mov rdx, rbx
0x00003b74      4889ee         mov rsi, rbp
0x00003b77      4c89e7         mov rdi, r12
0x00003b7a      e811e6ffff     call sym.imp.mempcpy
0x00003b7f      48b943755858.  movabs rcx, 0x5858585858587543          ; 'CuXXXXXX'
0x00003b89      c6400800       mov byte [rax + 8], 0
0x00003b8d      488908         mov qword [rax], rcx
0x00003b90      4c89e0         mov rax, r12
0x00003b93      5b             pop rbx
0x00003b94      5d             pop rbp
0x00003b95      415c           pop r12
0x00003b97      c3             ret
0x00003b98      0f1f84000000.  nop dword [rax + rax]
;-- try_symlink:
0x00003ba0      4889f0         mov rax, rsi
0x00003ba3      4889fa         mov rdx, rdi
0x00003ba6      8b7608         mov esi, dword [rsi + 8]
0x00003ba9      488b38         mov rdi, qword [rax]
0x00003bac      e9cfe6ffff     jmp sym.imp.symlinkat
0x00003bb1      0f1f440000     nop dword [rax + rax]
0x00003bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- force_linkat:
0x00003bc0      4157           push r15
0x00003bc2      4156           push r14
0x00003bc4      4189fe         mov r14d, edi
0x00003bc7      4155           push r13
0x00003bc9      4154           push r12
0x00003bcb      4989f5         mov r13, rsi
0x00003bce      55             push rbp
0x00003bcf      53             push rbx
0x00003bd0      4889cb         mov rbx, rcx
0x00003bd3      89d5           mov ebp, edx
0x00003bd5      4589c4         mov r12d, r8d
0x00003bd8      4881ec480100.  sub rsp, 0x148
0x00003bdf      8b8c24800100.  mov ecx, dword [rsp + 0x180]
0x00003be6      64488b042528.  mov rax, qword fs:[0x28]
0x00003bef      488984243801.  mov qword [rsp + 0x138], rax
0x00003bf7      31c0           xor eax, eax
0x00003bf9      85c9           test ecx, ecx
0x00003bfb      0f88af000000   js 0x3cb0
0x00003c01      4180f901       cmp r9b, 1
0x00003c05      7579           jne 0x3c80
0x00003c07      83f911         cmp ecx, 0x11
0x00003c0a      7574           jne 0x3c80
0x00003c0c      488d442430     lea rax, [rsp + 0x30]
0x00003c11      4889df         mov rdi, rbx
0x00003c14      4889c6         mov rsi, rax
0x00003c17      48890424       mov qword [rsp], rax
0x00003c1b      e820ffffff     call sym.samedir_template
0x00003c20      4885c0         test rax, rax
0x00003c23      4989c7         mov r15, rax
0x00003c26      0f84e4000000   je 0x3d10
0x00003c2c      488d542410     lea rdx, [rsp + 0x10]
0x00003c31      488d0de8feff.  lea rcx, sym.try_link                   ; 0x3b20 ; "H\x89\xf0H\x89\xf9\x8bV\x10D\x8b@\x14H\x8bv\b\x8b8\xe9\x18\xe6\xff\xff\x0f\x1f\x84"
0x00003c38      31f6           xor esi, esi
0x00003c3a      41b806000000   mov r8d, 6
0x00003c40      4889c7         mov rdi, rax
0x00003c43      4489742410     mov dword [rsp + 0x10], r14d
0x00003c48      4c896c2418     mov qword [rsp + 0x18], r13
0x00003c4d      896c2420       mov dword [rsp + 0x20], ebp
0x00003c51      4489642424     mov dword [rsp + 0x24], r12d
0x00003c56      e8254f0000     call sym.try_tempname_len
0x00003c5b      85c0           test eax, eax
0x00003c5d      7479           je 0x3cd8
0x00003c5f      e86ce1ffff     call sym.imp.__errno_location
0x00003c64      8b08           mov ecx, dword [rax]
0x00003c66      4c3b3c24       cmp r15, qword [rsp]
0x00003c6a      7414           je 0x3c80
0x00003c6c      4c89ff         mov rdi, r15
0x00003c6f      890c24         mov dword [rsp], ecx
0x00003c72      e839e1ffff     call sym.imp.free
0x00003c77      8b0c24         mov ecx, dword [rsp]
0x00003c7a      660f1f440000   nop word [rax + rax]
0x00003c80      488b9c243801.  mov rbx, qword [rsp + 0x138]
0x00003c88      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003c91      89c8           mov eax, ecx
0x00003c93      0f8583000000   jne 0x3d1c
0x00003c99      4881c4480100.  add rsp, 0x148
0x00003ca0      5b             pop rbx
0x00003ca1      5d             pop rbp
0x00003ca2      415c           pop r12
0x00003ca4      415d           pop r13
0x00003ca6      415e           pop r14
0x00003ca8      415f           pop r15
0x00003caa      c3             ret
0x00003cab      0f1f440000     nop dword [rax + rax]
0x00003cb0      4889d9         mov rcx, rbx
0x00003cb3      44890c24       mov dword [rsp], r9d
0x00003cb7      e894e4ffff     call sym.imp.linkat
0x00003cbc      85c0           test eax, eax
0x00003cbe      89c1           mov ecx, eax
0x00003cc0      74be           je 0x3c80
0x00003cc2      e809e1ffff     call sym.imp.__errno_location
0x00003cc7      448b0c24       mov r9d, dword [rsp]
0x00003ccb      8b08           mov ecx, dword [rax]
0x00003ccd      e92fffffff     jmp 0x3c01
0x00003cd2      660f1f440000   nop word [rax + rax]
0x00003cd8      4889d9         mov rcx, rbx
0x00003cdb      89ea           mov edx, ebp
0x00003cdd      4c89fe         mov rsi, r15
0x00003ce0      89ef           mov edi, ebp
0x00003ce2      e839e5ffff     call sym.imp.renameat
0x00003ce7      85c0           test eax, eax
0x00003ce9      b9ffffffff     mov ecx, 0xffffffff                     ; -1
0x00003cee      7407           je 0x3cf7
0x00003cf0      e8dbe0ffff     call sym.imp.__errno_location
0x00003cf5      8b08           mov ecx, dword [rax]
0x00003cf7      31d2           xor edx, edx
0x00003cf9      4c89fe         mov rsi, r15
0x00003cfc      89ef           mov edi, ebp
0x00003cfe      894c240c       mov dword [rsp + 0xc], ecx
0x00003d02      e839e1ffff     call sym.imp.unlinkat
0x00003d07      8b4c240c       mov ecx, dword [rsp + 0xc]
0x00003d0b      e956ffffff     jmp 0x3c66
0x00003d10      e8bbe0ffff     call sym.imp.__errno_location
0x00003d15      8b08           mov ecx, dword [rax]
0x00003d17      e964ffffff     jmp 0x3c80
0x00003d1c      e8ffe1ffff     call sym.imp.__stack_chk_fail
0x00003d21      0f1f440000     nop dword [rax + rax]
0x00003d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- force_symlinkat:
0x00003d30      4156           push r14
0x00003d32      4155           push r13
0x00003d34      4154           push r12
0x00003d36      55             push rbp
0x00003d37      4989fc         mov r12, rdi
0x00003d3a      53             push rbx
0x00003d3b      89f5           mov ebp, esi
0x00003d3d      4889d3         mov rbx, rdx
0x00003d40      4881ec300100.  sub rsp, 0x130
0x00003d47      64488b042528.  mov rax, qword fs:[0x28]
0x00003d50      488984242801.  mov qword [rsp + 0x128], rax
0x00003d58      31c0           xor eax, eax
0x00003d5a      4585c0         test r8d, r8d
0x00003d5d      0f88a5000000   js 0x3e08
0x00003d63      80f901         cmp cl, 1
0x00003d66      7570           jne 0x3dd8
0x00003d68      4183f811       cmp r8d, 0x11
0x00003d6c      756a           jne 0x3dd8
0x00003d6e      4c8d742420     lea r14, [rsp + 0x20]
0x00003d73      4889df         mov rdi, rbx
0x00003d76      4c89f6         mov rsi, r14
0x00003d79      e8c2fdffff     call sym.samedir_template
0x00003d7e      4885c0         test rax, rax
0x00003d81      4989c5         mov r13, rax
0x00003d84      0f84e6000000   je 0x3e70
0x00003d8a      488d542410     lea rdx, [rsp + 0x10]
0x00003d8f      488d0d0afeff.  lea rcx, sym.try_symlink                ; 0x3ba0 ; "H\x89\xf0H\x89\xfa\x8bv\bH\x8b8\xe9\xcf\xe6\xff\xff\x0f\x1fD"
0x00003d96      31f6           xor esi, esi
0x00003d98      41b806000000   mov r8d, 6
0x00003d9e      4889c7         mov rdi, rax
0x00003da1      4c89642410     mov qword [rsp + 0x10], r12
0x00003da6      896c2418       mov dword [rsp + 0x18], ebp
0x00003daa      e8d14d0000     call sym.try_tempname_len
0x00003daf      85c0           test eax, eax
0x00003db1      747d           je 0x3e30
0x00003db3      e818e0ffff     call sym.imp.__errno_location
0x00003db8      448b00         mov r8d, dword [rax]
0x00003dbb      4d39f5         cmp r13, r14
0x00003dbe      7418           je 0x3dd8
0x00003dc0      4c89ef         mov rdi, r13
0x00003dc3      448944240c     mov dword [rsp + 0xc], r8d
0x00003dc8      e8e3dfffff     call sym.imp.free
0x00003dcd      448b44240c     mov r8d, dword [rsp + 0xc]
0x00003dd2      660f1f440000   nop word [rax + rax]
0x00003dd8      488b9c242801.  mov rbx, qword [rsp + 0x128]
0x00003de0      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003de9      4489c0         mov eax, r8d
0x00003dec      0f858b000000   jne 0x3e7d
0x00003df2      4881c4300100.  add rsp, 0x130
0x00003df9      5b             pop rbx
0x00003dfa      5d             pop rbp
0x00003dfb      415c           pop r12
0x00003dfd      415d           pop r13
0x00003dff      415e           pop r14
0x00003e01      c3             ret
0x00003e02      660f1f440000   nop word [rax + rax]
0x00003e08      894c240c       mov dword [rsp + 0xc], ecx
0x00003e0c      e86fe4ffff     call sym.imp.symlinkat
0x00003e11      85c0           test eax, eax
0x00003e13      4189c0         mov r8d, eax
0x00003e16      74c0           je 0x3dd8
0x00003e18      e8b3dfffff     call sym.imp.__errno_location
0x00003e1d      8b4c240c       mov ecx, dword [rsp + 0xc]
0x00003e21      448b00         mov r8d, dword [rax]
0x00003e24      e93affffff     jmp 0x3d63
0x00003e29      0f1f80000000.  nop dword [rax]
0x00003e30      4889d9         mov rcx, rbx
0x00003e33      89ea           mov edx, ebp
0x00003e35      4c89ee         mov rsi, r13
0x00003e38      89ef           mov edi, ebp
0x00003e3a      e8e1e3ffff     call sym.imp.renameat
0x00003e3f      85c0           test eax, eax
0x00003e41      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00003e47      0f846effffff   je 0x3dbb
0x00003e4d      e87edfffff     call sym.imp.__errno_location
0x00003e52      448b00         mov r8d, dword [rax]
0x00003e55      31d2           xor edx, edx
0x00003e57      4c89ee         mov rsi, r13
0x00003e5a      89ef           mov edi, ebp
0x00003e5c      448944240c     mov dword [rsp + 0xc], r8d
0x00003e61      e8dadfffff     call sym.imp.unlinkat
0x00003e66      448b44240c     mov r8d, dword [rsp + 0xc]
0x00003e6b      e94bffffff     jmp 0x3dbb
0x00003e70      e85bdfffff     call sym.imp.__errno_location
0x00003e75      448b00         mov r8d, dword [rax]
0x00003e78      e95bffffff     jmp 0x3dd8
0x00003e7d      e89ee0ffff     call sym.imp.__stack_chk_fail
0x00003e82      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e8c      0f1f4000       nop dword [rax]
;-- buffer_or_output:
0x00003e90      4156           push r14
0x00003e92      4155           push r13
0x00003e94      4989fe         mov r14, rdi
0x00003e97      4154           push r12
0x00003e99      55             push rbp
0x00003e9a      53             push rbx
0x00003e9b      4c8b2e         mov r13, qword [rsi]
0x00003e9e      4d85ed         test r13, r13
0x00003ea1      744d           je 0x3ef0
0x00003ea3      4989d4         mov r12, rdx
0x00003ea6      4889f3         mov rbx, rsi
0x00003ea9      e842e0ffff     call sym.imp.strlen
0x00003eae      4889c5         mov rbp, rax
0x00003eb1      49392c24       cmp qword [r12], rbp
0x00003eb5      b801000000     mov eax, 1
0x00003eba      770c           ja 0x3ec8
0x00003ebc      5b             pop rbx
0x00003ebd      5d             pop rbp
0x00003ebe      415c           pop r12
0x00003ec0      415d           pop r13
0x00003ec2      415e           pop r14
0x00003ec4      c3             ret
0x00003ec5      0f1f00         nop dword [rax]
0x00003ec8      488d5501       lea rdx, [rbp + 1]
0x00003ecc      4c89f6         mov rsi, r14
0x00003ecf      4c89ef         mov rdi, r13
0x00003ed2      e8c9e1ffff     call sym.imp.memcpy
0x00003ed7      48012b         add qword [rbx], rbp
0x00003eda      49292c24       sub qword [r12], rbp
0x00003ede      31c0           xor eax, eax
0x00003ee0      5b             pop rbx
0x00003ee1      5d             pop rbp
0x00003ee2      415c           pop r12
0x00003ee4      415d           pop r13
0x00003ee6      415e           pop r14
0x00003ee8      c3             ret
0x00003ee9      0f1f80000000.  nop dword [rax]
0x00003ef0      488b35d1c120.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00003ef7      e834e1ffff     call sym.imp.fputs_unlocked
0x00003efc      5b             pop rbx
0x00003efd      31c0           xor eax, eax
0x00003eff      5d             pop rbp
0x00003f00      415c           pop r12
0x00003f02      415d           pop r13
0x00003f04      415e           pop r14
0x00003f06      c3             ret
0x00003f07      660f1f840000.  nop word [rax + rax]
;-- relpath:
0x00003f10      4157           push r15
0x00003f12      4156           push r14
0x00003f14      4155           push r13
0x00003f16      4154           push r12
0x00003f18      55             push rbp
0x00003f19      53             push rbx
0x00003f1a      4883ec18       sub rsp, 0x18
0x00003f1e      440fb64701     movzx r8d, byte [rdi + 1]
0x00003f23      48890c24       mov qword [rsp], rcx
0x00003f27      0fb64e01       movzx ecx, byte [rsi + 1]
0x00003f2b      4889542408     mov qword [rsp + 8], rdx
0x00003f30      80f92f         cmp cl, 0x2f
0x00003f33      410f94c1       sete r9b
0x00003f37      4180f82f       cmp r8b, 0x2f
0x00003f3b      0f94c2         sete dl
0x00003f3e      31c0           xor eax, eax
0x00003f40      4138d1         cmp r9b, dl
0x00003f43      7413           je 0x3f58
0x00003f45      4883c418       add rsp, 0x18
0x00003f49      5b             pop rbx
0x00003f4a      5d             pop rbp
0x00003f4b      415c           pop r12
0x00003f4d      415d           pop r13
0x00003f4f      415e           pop r14
0x00003f51      415f           pop r15
0x00003f53      c3             ret
0x00003f54      0f1f4000       nop dword [rax]
0x00003f58      0fb617         movzx edx, byte [rdi]
0x00003f5b      440fb616       movzx r10d, byte [rsi]
0x00003f5f      84d2           test dl, dl
0x00003f61      410f94c1       sete r9b
0x00003f65      4584d2         test r10b, r10b
0x00003f68      74db           je 0x3f45
0x00003f6a      4138d2         cmp r10b, dl
0x00003f6d      0f95c0         setne al
0x00003f70      4408c8         or al, r9b
0x00003f73      0f85c7010000   jne 0x4140
0x00003f79      31d2           xor edx, edx
0x00003f7b      4531c9         xor r9d, r9d
0x00003f7e      eb24           jmp 0x3fa4
0x00003f80      4883c201       add rdx, 1
0x00003f84      4138c8         cmp r8b, cl
0x00003f87      0f8593010000   jne 0x4120
0x00003f8d      4584d2         test r10b, r10b
0x00003f90      0f858a010000   jne 0x4120
0x00003f96      4189ca         mov r10d, ecx
0x00003f99      440fb6441701   movzx r8d, byte [rdi + rdx + 1]
0x00003f9f      0fb64c1601     movzx ecx, byte [rsi + rdx + 1]
0x00003fa4      448d5a01       lea r11d, [rdx + 1]
0x00003fa8      4180fa2f       cmp r10b, 0x2f
0x00003fac      450f44cb       cmove r9d, r11d
0x00003fb0      4584c0         test r8b, r8b
0x00003fb3      410f94c2       sete r10b
0x00003fb7      84c9           test cl, cl
0x00003fb9      75c5           jne 0x3f80
0x00003fbb      4180f82f       cmp r8b, 0x2f
0x00003fbf      0f846b010000   je 0x4130
0x00003fc5      4584d2         test r10b, r10b
0x00003fc8      0f8562010000   jne 0x4130
0x00003fce      4585c9         test r9d, r9d
0x00003fd1      0f846effffff   je 0x3f45
0x00003fd7      4d63c9         movsxd r9, r9d
0x00003fda      4e8d240e       lea r12, [rsi + r9]
0x00003fde      4a8d1c0f       lea rbx, [rdi + r9]
0x00003fe2      410fb60424     movzx eax, byte [r12]
0x00003fe7      3c2f           cmp al, 0x2f
0x00003fe9      750a           jne 0x3ff5
0x00003feb      410fb6442401   movzx eax, byte [r12 + 1]
0x00003ff1      4983c401       add r12, 1
0x00003ff5      31d2           xor edx, edx
0x00003ff7      803b2f         cmp byte [rbx], 0x2f
0x00003ffa      0f94c2         sete dl
0x00003ffd      4801d3         add rbx, rdx
0x00004000      84c0           test al, al
0x00004002      7544           jne 0x4048
0x00004004      803b00         cmp byte [rbx], 0
0x00004007      488d05467f00.  lea rax, [0x0000bf54]                   ; "."
0x0000400e      488d742408     lea rsi, [rsp + 8]
0x00004013      4889e2         mov rdx, rsp
0x00004016      480f44d8       cmove rbx, rax
0x0000401a      4889df         mov rdi, rbx
0x0000401d      e86efeffff     call sym.buffer_or_output
0x00004022      89c5           mov ebp, eax
0x00004024      4084ed         test bpl, bpl
0x00004027      0f85c3000000   jne 0x40f0
0x0000402d      4883c418       add rsp, 0x18
0x00004031      89e8           mov eax, ebp
0x00004033      5b             pop rbx
0x00004034      83f001         xor eax, 1
0x00004037      5d             pop rbp
0x00004038      415c           pop r12
0x0000403a      415d           pop r13
0x0000403c      415e           pop r14
0x0000403e      415f           pop r15
0x00004040      c3             ret
0x00004041      0f1f80000000.  nop dword [rax]
0x00004048      4c8d6c2408     lea r13, [rsp + 8]
0x0000404d      4989e6         mov r14, rsp
0x00004050      488d3dfc7e00.  lea rdi, [0x0000bf53]                   ; ".."
0x00004057      4c89f2         mov rdx, r14
0x0000405a      4c89ee         mov rsi, r13
0x0000405d      e82efeffff     call sym.buffer_or_output
0x00004062      89c5           mov ebp, eax
0x00004064      410fb60424     movzx eax, byte [r12]
0x00004069      84c0           test al, al
0x0000406b      7443           je 0x40b0
0x0000406d      4c8d3dde7e00.  lea r15, [0x0000bf52]                   ; "/.."
0x00004074      eb17           jmp 0x408d
0x00004076      662e0f1f8400.  nop word cs:[rax + rax]
0x00004080      4983c401       add r12, 1
0x00004084      410fb60424     movzx eax, byte [r12]
0x00004089      84c0           test al, al
0x0000408b      7423           je 0x40b0
0x0000408d      3c2f           cmp al, 0x2f
0x0000408f      75ef           jne 0x4080
0x00004091      4983c401       add r12, 1
0x00004095      4c89f2         mov rdx, r14
0x00004098      4c89ee         mov rsi, r13
0x0000409b      4c89ff         mov rdi, r15
0x0000409e      e8edfdffff     call sym.buffer_or_output
0x000040a3      09c5           or ebp, eax
0x000040a5      410fb60424     movzx eax, byte [r12]
0x000040aa      84c0           test al, al
0x000040ac      75df           jne 0x408d
0x000040ae      6690           nop
0x000040b0      803b00         cmp byte [rbx], 0
0x000040b3      0f846bffffff   je 0x4024
0x000040b9      488d3d5e8000.  lea rdi, [0x0000c11e]                   ; "/"
0x000040c0      4c89f2         mov rdx, r14
0x000040c3      4c89ee         mov rsi, r13
0x000040c6      e8c5fdffff     call sym.buffer_or_output
0x000040cb      4c89f2         mov rdx, r14
0x000040ce      4189c4         mov r12d, eax
0x000040d1      4c89ee         mov rsi, r13
0x000040d4      4889df         mov rdi, rbx
0x000040d7      e8b4fdffff     call sym.buffer_or_output
0x000040dc      4109c4         or r12d, eax
0x000040df      4409e5         or ebp, r12d
0x000040e2      e93dffffff     jmp 0x4024
0x000040e7      660f1f840000.  nop word [rax + rax]
0x000040f0      488d355f7e00.  lea rsi, str.generating_relative_path   ; 0xbf56 ; "generating relative path"
0x000040f7      31ff           xor edi, edi
0x000040f9      ba05000000     mov edx, 5
0x000040fe      e8cdddffff     call sym.imp.dcgettext
0x00004103      488d156d8900.  lea rdx, [0x0000ca77]                   ; "%s"
0x0000410a      4889c1         mov rcx, rax
0x0000410d      be24000000     mov esi, 0x24                           ; '$'
0x00004112      31ff           xor edi, edi
0x00004114      31c0           xor eax, eax
0x00004116      e895e0ffff     call sym.imp.error
0x0000411b      e90dffffff     jmp 0x402d
0x00004120      80f92f         cmp cl, 0x2f
0x00004123      0f849cfeffff   je 0x3fc5
0x00004129      e9a0feffff     jmp 0x3fce
0x0000412e      6690           nop
0x00004130      4589d9         mov r9d, r11d
0x00004133      e99ffeffff     jmp 0x3fd7
0x00004138      0f1f84000000.  nop dword [rax + rax]
0x00004140      31c0           xor eax, eax
0x00004142      e9fefdffff     jmp 0x3f45
0x00004147      660f1f840000.  nop word [rax + rax]
;-- set_simple_backup_suffix:
0x00004150      4885ff         test rdi, rdi
0x00004153      53             push rbx
0x00004154      4889fb         mov rbx, rdi
0x00004157      7427           je 0x4180
0x00004159      803b00         cmp byte [rbx], 0
0x0000415c      7512           jne 0x4170
0x0000415e      488d1d0f7e00.  lea rbx, [0x0000bf74]                   ; "~"
0x00004165      48891dbcbf20.  mov qword [obj.simple_backup_suffix], rbx ; [0x210128:8]=0
0x0000416c      5b             pop rbx
0x0000416d      c3             ret
0x0000416e      6690           nop
0x00004170      4889df         mov rdi, rbx
0x00004173      e828100000     call sym.last_component
0x00004178      4839d8         cmp rax, rbx
0x0000417b      75e1           jne 0x415e
0x0000417d      ebe6           jmp 0x4165
0x0000417f      90             nop
0x00004180      488d3def7d00.  lea rdi, str.SIMPLE_BACKUP_SUFFIX       ; 0xbf76 ; "SIMPLE_BACKUP_SUFFIX"
0x00004187      e814dcffff     call sym.imp.getenv
0x0000418c      4885c0         test rax, rax
0x0000418f      4889c3         mov rbx, rax
0x00004192      74ca           je 0x415e
0x00004194      ebc3           jmp 0x4159
0x00004196      662e0f1f8400.  nop word cs:[rax + rax]
;-- backupfile_internal:
0x000041a0      4157           push r15
0x000041a2      4156           push r14
0x000041a4      4155           push r13
0x000041a6      4154           push r12
0x000041a8      55             push rbp
0x000041a9      53             push rbx
0x000041aa      4889f3         mov rbx, rsi
0x000041ad      4881ec880000.  sub rsp, 0x88
0x000041b4      897c2464       mov dword [rsp + 0x64], edi
0x000041b8      4889f7         mov rdi, rsi
0x000041bb      4889742410     mov qword [rsp + 0x10], rsi
0x000041c0      89542420       mov dword [rsp + 0x20], edx
0x000041c4      884c2463       mov byte [rsp + 0x63], cl
0x000041c8      64488b042528.  mov rax, qword fs:[0x28]
0x000041d1      4889442478     mov qword [rsp + 0x78], rax
0x000041d6      31c0           xor eax, eax
0x000041d8      e8c30f0000     call sym.last_component
0x000041dd      4889c7         mov rdi, rax
0x000041e0      4989c6         mov r14, rax
0x000041e3      e808ddffff     call sym.imp.strlen
0x000041e8      488b3d39bf20.  mov rdi, qword [obj.simple_backup_suffix] ; [0x210128:8]=0
0x000041ef      4929de         sub r14, rbx
0x000041f2      4c01f0         add rax, r14
0x000041f5      4889442418     mov qword [rsp + 0x18], rax
0x000041fa      4885ff         test rdi, rdi
0x000041fd      0f8481050000   je 0x4784
0x00004203      e8e8dcffff     call sym.imp.strlen
0x00004208      488b742418     mov rsi, qword [rsp + 0x18]
0x0000420d      4883c001       add rax, 1
0x00004211      4883f809       cmp rax, 9
0x00004215      4889442450     mov qword [rsp + 0x50], rax
0x0000421a      488d5601       lea rdx, [rsi + 1]
0x0000421e      4889c6         mov rsi, rax
0x00004221      b809000000     mov eax, 9
0x00004226      480f43c6       cmovae rax, rsi
0x0000422a      4801d0         add rax, rdx
0x0000422d      4889542438     mov qword [rsp + 0x38], rdx
0x00004232      4889c7         mov rdi, rax
0x00004235      4889442440     mov qword [rsp + 0x40], rax
0x0000423a      e8b1deffff     call sym.imp.malloc
0x0000423f      4885c0         test rax, rax
0x00004242      4989c7         mov r15, rax
0x00004245      0f84e5020000   je 0x4530
0x0000424b      488d442474     lea rax, [rsp + 0x74]
0x00004250      c7442474ffff.  mov dword [rsp + 0x74], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00004258      48c744244800.  mov qword [rsp + 0x48], 0
0x00004261      4531ed         xor r13d, r13d
0x00004264      4889442468     mov qword [rsp + 0x68], rax
0x00004269      488b542438     mov rdx, qword [rsp + 0x38]
0x0000426e      488b742410     mov rsi, qword [rsp + 0x10]
0x00004273      4c89ff         mov rdi, r15
0x00004276      e825deffff     call sym.imp.memcpy
0x0000427b      837c242001     cmp dword [rsp + 0x20], 1
0x00004280      0f84da020000   je 0x4560
0x00004286      4b8d2c37       lea rbp, [r15 + r14]
0x0000428a      4889ef         mov rdi, rbp
0x0000428d      e86e0f0000     call sym.base_len
0x00004292      4d85ed         test r13, r13
0x00004295      4989c4         mov r12, rax
0x00004298      0f84a2030000   je 0x4640
0x0000429e      4c89ef         mov rdi, r13
0x000042a1      e84addffff     call sym.imp.rewinddir
0x000042a6      488b442440     mov rax, qword [rsp + 0x40]
0x000042ab      48c744242801.  mov qword [rsp + 0x28], 1
0x000042b4      c74424240200.  mov dword [rsp + 0x24], 2
0x000042bc      4889442430     mov qword [rsp + 0x30], rax
0x000042c1      498d442404     lea rax, [r12 + 4]
0x000042c6      4889442408     mov qword [rsp + 8], rax
0x000042cb      0f1f440000     nop dword [rax + rax]
0x000042d0      4c89ef         mov rdi, r13
0x000042d3      e808deffff     call sym.imp.readdir
0x000042d8      4885c0         test rax, rax
0x000042db      0f84af010000   je 0x4490
0x000042e1      488d5813       lea rbx, [rax + 0x13]
0x000042e5      4889df         mov rdi, rbx
0x000042e8      e803dcffff     call sym.imp.strlen
0x000042ed      483b442408     cmp rax, qword [rsp + 8]
0x000042f2      72dc           jb 0x42d0
0x000042f4      498d6c2402     lea rbp, [r12 + 2]
0x000042f9      4b8d3c37       lea rdi, [r15 + r14]
0x000042fd      4889de         mov rsi, rbx
0x00004300      4889ea         mov rdx, rbp
0x00004303      e818ddffff     call sym.imp.memcmp
0x00004308      85c0           test eax, eax
0x0000430a      75c4           jne 0x42d0
0x0000430c      4801eb         add rbx, rbp
0x0000430f      0fb603         movzx eax, byte [rbx]
0x00004312      8d50cf         lea edx, [rax - 0x31]
0x00004315      80fa08         cmp dl, 8
0x00004318      77b6           ja 0x42d0
0x0000431a      3c39           cmp al, 0x39
0x0000431c      0fbe4301       movsx eax, byte [rbx + 1]
0x00004320      bd01000000     mov ebp, 1
0x00004325      410f94c0       sete r8b
0x00004329      89c1           mov ecx, eax
0x0000432b      83e830         sub eax, 0x30
0x0000432e      83f809         cmp eax, 9
0x00004331      7720           ja 0x4353
0x00004333      0f1f440000     nop dword [rax + rax]
0x00004338      80f939         cmp cl, 0x39
0x0000433b      0f94c0         sete al
0x0000433e      4883c501       add rbp, 1
0x00004342      4121c0         and r8d, eax
0x00004345      0fbe042b       movsx eax, byte [rbx + rbp]
0x00004349      89c1           mov ecx, eax
0x0000434b      83e830         sub eax, 0x30
0x0000434e      83f809         cmp eax, 9
0x00004351      76e5           jbe 0x4338
0x00004353      80f97e         cmp cl, 0x7e
0x00004356      0f8574ffffff   jne 0x42d0
0x0000435c      807c2b0100     cmp byte [rbx + rbp + 1], 0
0x00004361      0f8569ffffff   jne 0x42d0
0x00004367      488b542428     mov rdx, qword [rsp + 0x28]
0x0000436c      4839ea         cmp rdx, rbp
0x0000436f      722b           jb 0x439c
0x00004371      4488442458     mov byte [rsp + 0x58], r8b
0x00004376      0f8554ffffff   jne 0x42d0
0x0000437c      488b442418     mov rax, qword [rsp + 0x18]
0x00004381      4889de         mov rsi, rbx
0x00004384      498d7c0702     lea rdi, [r15 + rax + 2]
0x00004389      e892dcffff     call sym.imp.memcmp
0x0000438e      85c0           test eax, eax
0x00004390      440fb6442458   movzx r8d, byte [rsp + 0x58]
0x00004396      0f8f34ffffff   jg 0x42d0
0x0000439c      410fb6f0       movzx esi, r8b
0x000043a0      450fb6c8       movzx r9d, r8b
0x000043a4      89742424       mov dword [rsp + 0x24], esi
0x000043a8      488b742418     mov rsi, qword [rsp + 0x18]
0x000043ad      498d0429       lea rax, [r9 + rbp]
0x000043b1      4889442428     mov qword [rsp + 0x28], rax
0x000043b6      488d4c0604     lea rcx, [rsi + rax + 4]
0x000043bb      483b4c2430     cmp rcx, qword [rsp + 0x30]
0x000043c0      0f8632030000   jbe 0x46f8
0x000043c6      ba02000000     mov edx, 2
0x000043cb      31f6           xor esi, esi
0x000043cd      4889d0         mov rax, rdx
0x000043d0      48f7e1         mul rcx
0x000043d3      0f80ca030000   jo 0x47a3
0x000043d9      4885c0         test rax, rax
0x000043dc      0f88ae020000   js 0x4690
0x000043e2      4885f6         test rsi, rsi
0x000043e5      0f85a5020000   jne 0x4690
0x000043eb      488d0409       lea rax, [rcx + rcx]
0x000043ef      4889442430     mov qword [rsp + 0x30], rax
0x000043f4      488b742430     mov rsi, qword [rsp + 0x30]
0x000043f9      4c89ff         mov rdi, r15
0x000043fc      4c894c2458     mov qword [rsp + 0x58], r9
0x00004401      e82addffff     call sym.imp.realloc
0x00004406      4885c0         test rax, rax
0x00004409      4989c0         mov r8, rax
0x0000440c      4c8b4c2458     mov r9, qword [rsp + 0x58]
0x00004411      0f8489020000   je 0x46a0
0x00004417      488b442418     mov rax, qword [rsp + 0x18]
0x0000441c      488d5502       lea rdx, [rbp + 2]
0x00004420      4c89442458     mov qword [rsp + 0x58], r8
0x00004425      4889de         mov rsi, rbx
0x00004428      4c01c0         add rax, r8
0x0000442b      41b82e7e0000   mov r8d, 0x7e2e                         ; '.~'
0x00004431      4a8d4c0802     lea rcx, [rax + r9 + 2]
0x00004436      66448900       mov word [rax], r8w
0x0000443a      c6400230       mov byte [rax + 2], 0x30                ; '0'
                                                                       ; [0x30:1]=0
0x0000443e      4889cf         mov rdi, rcx
0x00004441      e85adcffff     call sym.imp.memcpy
0x00004446      4801c5         add rbp, rax
0x00004449      4c8b442458     mov r8, qword [rsp + 0x58]
0x0000444e      0fb655ff       movzx edx, byte [rbp - 1]
0x00004452      488d45ff       lea rax, [rbp - 1]
0x00004456      80fa39         cmp dl, 0x39
0x00004459      7514           jne 0x446f
0x0000445b      0f1f440000     nop dword [rax + rax]
0x00004460      c60030         mov byte [rax], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x00004463      4883e801       sub rax, 1
0x00004467      0fb610         movzx edx, byte [rax]
0x0000446a      80fa39         cmp dl, 0x39
0x0000446d      74f1           je 0x4460
0x0000446f      83c201         add edx, 1
0x00004472      4c89ef         mov rdi, r13
0x00004475      4d89c7         mov r15, r8
0x00004478      8810           mov byte [rax], dl
0x0000447a      e861dcffff     call sym.imp.readdir
0x0000447f      4885c0         test rax, rax
0x00004482      0f8559feffff   jne 0x42e1
0x00004488      0f1f84000000.  nop dword [rax + rax]
0x00004490      8b442424       mov eax, dword [rsp + 0x24]
0x00004494      83f802         cmp eax, 2
0x00004497      0f84e3000000   je 0x4580
0x0000449d      83f803         cmp eax, 3
0x000044a0      0f84fa010000   je 0x46a0
0x000044a6      83f801         cmp eax, 1
0x000044a9      0f8401010000   je 0x45b0
0x000044af      807c246300     cmp byte [rsp + 0x63], 0
0x000044b4      0f84b4020000   je 0x476e
0x000044ba      8b542474       mov edx, dword [rsp + 0x74]
0x000044be      4b8d0c37       lea rcx, [r15 + r14]
0x000044c2      85d2           test edx, edx
0x000044c4      7913           jns 0x44d9
0x000044c6      c74424749cff.  mov dword [rsp + 0x74], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x000044ce      4c89f9         mov rcx, r15
0x000044d1      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x000044d6      4531f6         xor r14d, r14d
0x000044d9      4531c0         xor r8d, r8d
0x000044dc      837c242001     cmp dword [rsp + 0x20], 1
0x000044e1      488b742410     mov rsi, qword [rsp + 0x10]
0x000044e6      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000044eb      410f95c0       setne r8b
0x000044ef      e87c410000     call sym.renameatu
0x000044f4      85c0           test eax, eax
0x000044f6      0f8472020000   je 0x476e
0x000044fc      e8cfd8ffff     call sym.imp.__errno_location
0x00004501      8b28           mov ebp, dword [rax]
0x00004503      83fd11         cmp ebp, 0x11
0x00004506      0f845dfdffff   je 0x4269
0x0000450c      4d85ed         test r13, r13
0x0000450f      4889c3         mov rbx, rax
0x00004512      7408           je 0x451c
0x00004514      4c89ef         mov rdi, r13
0x00004517      e8f4daffff     call sym.imp.closedir
0x0000451c      4c89ff         mov rdi, r15
0x0000451f      4531ff         xor r15d, r15d
0x00004522      e889d8ffff     call sym.imp.free
0x00004527      892b           mov dword [rbx], ebp
0x00004529      0f1f80000000.  nop dword [rax]
0x00004530      488b742478     mov rsi, qword [rsp + 0x78]
0x00004535      644833342528.  xor rsi, qword fs:[0x28]
0x0000453e      4c89f8         mov rax, r15
0x00004541      0f8566020000   jne 0x47ad
0x00004547      4881c4880000.  add rsp, 0x88
0x0000454e      5b             pop rbx
0x0000454f      5d             pop rbp
0x00004550      415c           pop r12
0x00004552      415d           pop r13
0x00004554      415e           pop r14
0x00004556      415f           pop r15
0x00004558      c3             ret
0x00004559      0f1f80000000.  nop dword [rax]
0x00004560      488b442418     mov rax, qword [rsp + 0x18]
0x00004565      488b542450     mov rdx, qword [rsp + 0x50]
0x0000456a      488b35b7bb20.  mov rsi, qword [obj.simple_backup_suffix] ; [0x210128:8]=0
0x00004571      498d3c07       lea rdi, [r15 + rax]
0x00004575      e826dbffff     call sym.imp.memcpy
0x0000457a      e930ffffff     jmp 0x44af
0x0000457f      90             nop
0x00004580      837c242002     cmp dword [rsp + 0x20], 2
0x00004585      7529           jne 0x45b0
0x00004587      488b442418     mov rax, qword [rsp + 0x18]
0x0000458c      488b542450     mov rdx, qword [rsp + 0x50]
0x00004591      488b3590bb20.  mov rsi, qword [obj.simple_backup_suffix] ; [0x210128:8]=0
0x00004598      498d3c07       lea rdi, [r15 + rax]
0x0000459c      e8ffdaffff     call sym.imp.memcpy
0x000045a1      c74424200100.  mov dword [rsp + 0x20], 1
0x000045a9      0f1f80000000.  nop dword [rax]
0x000045b0      4c89ff         mov rdi, r15
0x000045b3      e8e80b0000     call sym.last_component
0x000045b8      4889c7         mov rdi, rax
0x000045bb      4889c3         mov rbx, rax
0x000045be      e83d0c0000     call sym.base_len
0x000045c3      4883f80e       cmp rax, 0xe
0x000045c7      4889c5         mov rbp, rax
0x000045ca      0f86dffeffff   jbe 0x44af
0x000045d0      48837c244800   cmp qword [rsp + 0x48], 0
0x000045d6      0f85e4000000   jne 0x46c0
0x000045dc      8b7c2474       mov edi, dword [rsp + 0x74]
0x000045e0      897c2408       mov dword [rsp + 8], edi
0x000045e4      e8e7d7ffff     call sym.imp.__errno_location
0x000045e9      8b7c2408       mov edi, dword [rsp + 8]
0x000045ed      4989c4         mov r12, rax
0x000045f0      85ff           test edi, edi
0x000045f2      0f883a010000   js 0x4732
0x000045f8      c70000000000   mov dword [rax], 0
0x000045fe      be03000000     mov esi, 3
0x00004603      e868daffff     call sym.imp.fpathconf
0x00004608      418b0c24       mov ecx, dword [r12]
0x0000460c      31d2           xor edx, edx
0x0000460e      85c9           test ecx, ecx
0x00004610      0f94c2         sete dl
0x00004613      4829d0         sub rax, rdx
0x00004616      4885c0         test rax, rax
0x00004619      4889442448     mov qword [rsp + 0x48], rax
0x0000461e      0f899c000000   jns 0x46c0
0x00004624      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004628      0f8567010000   jne 0x4795
0x0000462e      48c7442448ff.  mov qword [rsp + 0x48], 0xffffffffffffffff
0x00004637      e973feffff     jmp 0x44af
0x0000463c      0f1f4000       nop dword [rax]
0x00004640      488b4c2468     mov rcx, qword [rsp + 0x68]
0x00004645      8b7c2464       mov edi, dword [rsp + 0x64]
0x00004649      41b92e000000   mov r9d, 0x2e                           ; '.'
0x0000464f      31d2           xor edx, edx
0x00004651      0fb75d00       movzx ebx, word [rbp]
0x00004655      4c89fe         mov rsi, r15
0x00004658      6644894d00     mov word [rbp], r9w
0x0000465d      e85e220000     call sym.opendirat
0x00004662      4885c0         test rax, rax
0x00004665      4989c5         mov r13, rax
0x00004668      4a8d542500     lea rdx, [rbp + r12]
0x0000466d      0f848d000000   je 0x4700
0x00004673      66895d00       mov word [rbp], bx
0x00004677      c7022e7e317e   mov dword [rdx], 0x7e317e2e             ; '.~1~'
                                                                       ; [0x7e317e2e:4]=-1
0x0000467d      c6420400       mov byte [rdx + 4], 0
0x00004681      e920fcffff     jmp 0x42a6
0x00004686      662e0f1f8400.  nop word cs:[rax + rax]
0x00004690      48894c2430     mov qword [rsp + 0x30], rcx
0x00004695      e95afdffff     jmp 0x43f4
0x0000469a      660f1f440000   nop word [rax + rax]
0x000046a0      4c89ff         mov rdi, r15
0x000046a3      4531ff         xor r15d, r15d
0x000046a6      e805d7ffff     call sym.imp.free
0x000046ab      e820d7ffff     call sym.imp.__errno_location
0x000046b0      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000046b6      e975feffff     jmp 0x4530
0x000046bb      0f1f440000     nop dword [rax + rax]
0x000046c0      483b6c2448     cmp rbp, qword [rsp + 0x48]
0x000046c5      0f86e4fdffff   jbe 0x44af
0x000046cb      488b442418     mov rax, qword [rsp + 0x18]
0x000046d0      488b742448     mov rsi, qword [rsp + 0x48]
0x000046d5      4c01f8         add rax, r15
0x000046d8      488d56ff       lea rdx, [rsi - 1]
0x000046dc      4829d8         sub rax, rbx
0x000046df      4839f0         cmp rax, rsi
0x000046e2      480f43c2       cmovae rax, rdx
0x000046e6      c604037e       mov byte [rbx + rax], 0x7e              ; '~'
                                                                       ; [0x7e:1]=0
0x000046ea      c644030100     mov byte [rbx + rax + 1], 0
0x000046ef      e9bbfdffff     jmp 0x44af
0x000046f4      0f1f4000       nop dword [rax]
0x000046f8      4d89f8         mov r8, r15
0x000046fb      e917fdffff     jmp 0x4417
0x00004700      4889542408     mov qword [rsp + 8], rdx
0x00004705      e8c6d6ffff     call sym.imp.__errno_location
0x0000470a      83380c         cmp dword [rax], 0xc
0x0000470d      488b542408     mov rdx, qword [rsp + 8]
0x00004712      66895d00       mov word [rbp], bx
0x00004716      c7022e7e317e   mov dword [rdx], 0x7e317e2e             ; '.~1~'
                                                                       ; [0x7e317e2e:4]=-1
0x0000471c      c6420400       mov byte [rdx + 4], 0
0x00004720      0f94c0         sete al
0x00004723      0fb6c0         movzx eax, al
0x00004726      83c002         add eax, 2
0x00004729      89442424       mov dword [rsp + 0x24], eax
0x0000472d      e95efdffff     jmp 0x4490
0x00004732      0fb713         movzx edx, word [rbx]
0x00004735      be2e000000     mov esi, 0x2e                           ; '.'
0x0000473a      4c89ff         mov rdi, r15
0x0000473d      668933         mov word [rbx], si
0x00004740      c70000000000   mov dword [rax], 0
0x00004746      be03000000     mov esi, 3
0x0000474b      89542408       mov dword [rsp + 8], edx
0x0000474f      e84cd7ffff     call sym.imp.pathconf
0x00004754      418b3c24       mov edi, dword [r12]
0x00004758      8b542408       mov edx, dword [rsp + 8]
0x0000475c      31c9           xor ecx, ecx
0x0000475e      85ff           test edi, edi
0x00004760      668913         mov word [rbx], dx
0x00004763      0f94c1         sete cl
0x00004766      4829c8         sub rax, rcx
0x00004769      e9a8feffff     jmp 0x4616
0x0000476e      4d85ed         test r13, r13
0x00004771      0f84b9fdffff   je 0x4530
0x00004777      4c89ef         mov rdi, r13
0x0000477a      e891d8ffff     call sym.imp.closedir
0x0000477f      e9acfdffff     jmp 0x4530
0x00004784      e8c7f9ffff     call sym.set_simple_backup_suffix
0x00004789      488b3d98b920.  mov rdi, qword [obj.simple_backup_suffix] ; [0x210128:8]=0
0x00004790      e96efaffff     jmp 0x4203
0x00004795      48c74424480e.  mov qword [rsp + 0x48], 0xe             ; [0xe:8]=0x1003e00030000
0x0000479e      e928ffffff     jmp 0x46cb
0x000047a3      be01000000     mov esi, 1
0x000047a8      e92cfcffff     jmp 0x43d9
0x000047ad      e86ed7ffff     call sym.imp.__stack_chk_fail
0x000047b2      662e0f1f8400.  nop word cs:[rax + rax]
0x000047bc      0f1f4000       nop dword [rax]
;-- get_version.part.0:
0x000047c0      4883ec08       sub rsp, 8
0x000047c4      4c8b0dd5b820.  mov r9, qword [obj.argmatch_die]        ; [0x2100a0:8]=0x99c0 sym.__argmatch_die
0x000047cb      488d15aeb220.  lea rdx, obj.backup_args                ; 0x20fa80
0x000047d2      488d0d077800.  lea rcx, obj.backup_types               ; 0xbfe0
0x000047d9      41b804000000   mov r8d, 4
0x000047df      e8ac540000     call sym.__xargmatch_internal
0x000047e4      488d15f57700.  lea rdx, obj.backup_types               ; 0xbfe0
0x000047eb      8b0482         mov eax, dword [rdx + rax*4]
0x000047ee      4883c408       add rsp, 8
0x000047f2      c3             ret
0x000047f3      0f1f00         nop dword [rax]
0x000047f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- find_backup_file_name:
0x00004800      4883ec08       sub rsp, 8
0x00004804      31c9           xor ecx, ecx
0x00004806      e895f9ffff     call sym.backupfile_internal
0x0000480b      4885c0         test rax, rax
0x0000480e      7405           je 0x4815
0x00004810      4883c408       add rsp, 8
0x00004814      c3             ret
0x00004815      e8464e0000     call sym.xalloc_die
0x0000481a      660f1f440000   nop word [rax + rax]
;-- get_version:
0x00004820      4885f6         test rsi, rsi
0x00004823      740b           je 0x4830
0x00004825      803e00         cmp byte [rsi], 0
0x00004828      7406           je 0x4830
0x0000482a      eb94           jmp sym.get_version.part.0
0x0000482c      0f1f4000       nop dword [rax]
0x00004830      b802000000     mov eax, 2
0x00004835      c3             ret
0x00004836      662e0f1f8400.  nop word cs:[rax + rax]
;-- xget_version:
0x00004840      4885f6         test rsi, rsi
0x00004843      7405           je 0x484a
0x00004845      803e00         cmp byte [rsi], 0
0x00004848      7528           jne 0x4872
0x0000484a      488d3d3b7700.  lea rdi, [0x0000bf8c]                   ; "VERSION_CONTROL"
0x00004851      4883ec08       sub rsp, 8
0x00004855      e846d5ffff     call sym.imp.getenv
0x0000485a      4885c0         test rax, rax
0x0000485d      7421           je 0x4880
0x0000485f      803800         cmp byte [rax], 0
0x00004862      741c           je 0x4880
0x00004864      488d3d207700.  lea rdi, str.VERSION_CONTROL            ; 0xbf8b ; "$VERSION_CONTROL"
0x0000486b      4889c6         mov rsi, rax
0x0000486e      4883c408       add rsp, 8
0x00004872      e949ffffff     jmp sym.get_version.part.0
0x00004877      660f1f840000.  nop word [rax + rax]
0x00004880      b802000000     mov eax, 2
0x00004885      4883c408       add rsp, 8
0x00004889      c3             ret
0x0000488a      660f1f440000   nop word [rax + rax]
;-- canonicalize_filename_mode:
0x00004890      4157           push r15
0x00004892      4156           push r14
0x00004894      4155           push r13
0x00004896      4154           push r12
0x00004898      55             push rbp
0x00004899      53             push rbx
0x0000489a      4881ece80000.  sub rsp, 0xe8
0x000048a1      64488b042528.  mov rax, qword fs:[0x28]
0x000048aa      48898424d800.  mov qword [rsp + 0xd8], rax
0x000048b2      31c0           xor eax, eax
0x000048b4      89f0           mov eax, esi
0x000048b6      83e004         and eax, 4
0x000048b9      0f9544241b     setne byte [rsp + 0x1b]
0x000048be      83e603         and esi, 3
0x000048c1      8944241c       mov dword [rsp + 0x1c], eax
0x000048c5      8d46ff         lea eax, [rsi - 1]
0x000048c8      89742404       mov dword [rsp + 4], esi
0x000048cc      85c6           test esi, eax
0x000048ce      0f854c050000   jne 0x4e20
0x000048d4      4885ff         test rdi, rdi
0x000048d7      4989fe         mov r14, rdi
0x000048da      0f8440050000   je 0x4e20
0x000048e0      0fb607         movzx eax, byte [rdi]
0x000048e3      84c0           test al, al
0x000048e5      0f8475050000   je 0x4e60
0x000048eb      3c2f           cmp al, 0x2f
0x000048ed      0f84bd040000   je 0x4db0
0x000048f3      e8a84d0000     call sym.xgetcwd
0x000048f8      4885c0         test rax, rax
0x000048fb      4889c5         mov rbp, rax
0x000048fe      0f84ac010000   je 0x4ab0
0x00004904      4889c7         mov rdi, rax
0x00004907      e8e4d5ffff     call sym.imp.strlen
0x0000490c      483dff0f0000   cmp rax, 0xfff
0x00004912      4989c7         mov r15, rax
0x00004915      0f86b5040000   jbe 0x4dd0
0x0000491b      4901ef         add r15, rbp
0x0000491e      4c89fb         mov rbx, r15
0x00004921      488d442440     lea rax, [rsp + 0x40]
0x00004926      4c89742420     mov qword [rsp + 0x20], r14
0x0000492b      48c744241000.  mov qword [rsp + 0x10], 0
0x00004934      48c744243000.  mov qword [rsp + 0x30], 0
0x0000493d      48c744242800.  mov qword [rsp + 0x28], 0
0x00004946      4889442408     mov qword [rsp + 8], rax
0x0000494b      410fb606       movzx eax, byte [r14]
0x0000494f      84c0           test al, al
0x00004951      0f8408010000   je 0x4a5f
0x00004957      660f1f840000.  nop word [rax + rax]
0x00004960      3c2f           cmp al, 0x2f
0x00004962      7518           jne 0x497c
0x00004964      0f1f4000       nop dword [rax]
0x00004968      4983c601       add r14, 1
0x0000496c      410fb606       movzx eax, byte [r14]
0x00004970      3c2f           cmp al, 0x2f
0x00004972      74f4           je 0x4968
0x00004974      84c0           test al, al
0x00004976      0f84c4020000   je 0x4c40
0x0000497c      4d89f5         mov r13, r14
0x0000497f      eb0c           jmp 0x498d
0x00004981      0f1f80000000.  nop dword [rax]
0x00004988      80fa2f         cmp dl, 0x2f
0x0000498b      740d           je 0x499a
0x0000498d      4983c501       add r13, 1
0x00004991      410fb65500     movzx edx, byte [r13]
0x00004996      84d2           test dl, dl
0x00004998      75ee           jne 0x4988
0x0000499a      4d39f5         cmp r13, r14
0x0000499d      0f84bc000000   je 0x4a5f
0x000049a3      4d89ec         mov r12, r13
0x000049a6      4d29f4         sub r12, r14
0x000049a9      4983fc01       cmp r12, 1
0x000049ad      0f84cd010000   je 0x4b80
0x000049b3      4983fc02       cmp r12, 2
0x000049b7      7508           jne 0x49c1
0x000049b9      3c2e           cmp al, 0x2e
0x000049bb      0f848f020000   je 0x4c50
0x000049c1      41807fff2f     cmp byte [r15 - 1], 0x2f
0x000049c6      7408           je 0x49d0
0x000049c8      41c6072f       mov byte [r15], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x000049cc      4983c701       add r15, 1
0x000049d0      4b8d0427       lea rax, [r15 + r12]
0x000049d4      4839c3         cmp rbx, rax
0x000049d7      7731           ja 0x4a0a
0x000049d9      4829eb         sub rbx, rbp
0x000049dc      4929ef         sub r15, rbp
0x000049df      4889ef         mov rdi, rbp
0x000049e2      498d441c01     lea rax, [r12 + rbx + 1]
0x000049e7      4881c3001000.  add rbx, 0x1000
0x000049ee      4981fc001000.  cmp r12, 0x1000
0x000049f5      480f4dd8       cmovge rbx, rax
0x000049f9      4889de         mov rsi, rbx
0x000049fc      e86f4a0000     call sym.xrealloc
0x00004a01      4889c5         mov rbp, rax
0x00004a04      4801c3         add rbx, rax
0x00004a07      4901c7         add r15, rax
0x00004a0a      4c89ff         mov rdi, r15
0x00004a0d      4c89e2         mov rdx, r12
0x00004a10      4c89f6         mov rsi, r14
0x00004a13      e888d6ffff     call sym.imp.memcpy
0x00004a18      837c240402     cmp dword [rsp + 4], 2
0x00004a1d      4f8d3c27       lea r15, [r15 + r12]
0x00004a21      41c60700       mov byte [r15], 0
0x00004a25      0f85b5000000   jne 0x4ae0
0x00004a2b      807c241b00     cmp byte [rsp + 0x1b], 0
0x00004a30      0f84aa000000   je 0x4ae0
0x00004a36      c74424580000.  mov dword [rsp + 0x58], 0
0x00004a3e      41807d0000     cmp byte [r13], 0
0x00004a43      740b           je 0x4a50
0x00004a45      837c240402     cmp dword [rsp + 4], 2
0x00004a4a      0f8557040000   jne 0x4ea7
0x00004a50      4d89ee         mov r14, r13
0x00004a53      410fb606       movzx eax, byte [r14]
0x00004a57      84c0           test al, al
0x00004a59      0f8501ffffff   jne 0x4960
0x00004a5f      488d4501       lea rax, [rbp + 1]
0x00004a63      4939c7         cmp r15, rax
0x00004a66      760b           jbe 0x4a73
0x00004a68      41807fff2f     cmp byte [r15 - 1], 0x2f
0x00004a6d      7504           jne 0x4a73
0x00004a6f      4983ef01       sub r15, 1
0x00004a73      498d4701       lea rax, [r15 + 1]
0x00004a77      41c60700       mov byte [r15], 0
0x00004a7b      4839c3         cmp rbx, rax
0x00004a7e      7412           je 0x4a92
0x00004a80      4929ef         sub r15, rbp
0x00004a83      4889ef         mov rdi, rbp
0x00004a86      498d7701       lea rsi, [r15 + 1]
0x00004a8a      e8e1490000     call sym.xrealloc
0x00004a8f      4889c5         mov rbp, rax
0x00004a92      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004a97      e814d3ffff     call sym.imp.free
0x00004a9c      488b442410     mov rax, qword [rsp + 0x10]
0x00004aa1      4885c0         test rax, rax
0x00004aa4      740a           je 0x4ab0
0x00004aa6      4889c7         mov rdi, rax
0x00004aa9      e8b2140000     call sym.hash_free
0x00004aae      6690           nop
0x00004ab0      488b8c24d800.  mov rcx, qword [rsp + 0xd8]
0x00004ab8      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004ac1      4889e8         mov rax, rbp
0x00004ac4      0f85f7030000   jne 0x4ec1
0x00004aca      4881c4e80000.  add rsp, 0xe8
0x00004ad1      5b             pop rbx
0x00004ad2      5d             pop rbp
0x00004ad3      415c           pop r12
0x00004ad5      415d           pop r13
0x00004ad7      415e           pop r14
0x00004ad9      415f           pop r15
0x00004adb      c3             ret
0x00004adc      0f1f4000       nop dword [rax]
0x00004ae0      8b44241c       mov eax, dword [rsp + 0x1c]
0x00004ae4      488b542408     mov rdx, qword [rsp + 8]
0x00004ae9      4889ee         mov rsi, rbp
0x00004aec      bf01000000     mov edi, 1
0x00004af1      85c0           test eax, eax
0x00004af3      0f84b7000000   je 0x4bb0
0x00004af9      e8d2d5ffff     call sym.imp.__xstat
0x00004afe      85c0           test eax, eax
0x00004b00      0f95c0         setne al
0x00004b03      84c0           test al, al
0x00004b05      0f8485000000   je 0x4b90
0x00004b0b      e8c0d2ffff     call sym.imp.__errno_location
0x00004b10      4989c6         mov r14, rax
0x00004b13      8b10           mov edx, dword [rax]
0x00004b15      8b442404       mov eax, dword [rsp + 4]
0x00004b19      85c0           test eax, eax
0x00004b1b      7431           je 0x4b4e
0x00004b1d      83f801         cmp eax, 1
0x00004b20      0f8510ffffff   jne 0x4a36
0x00004b26      488d35f17500.  lea rsi, [0x0000c11e]                   ; "/"
0x00004b2d      4c89ef         mov rdi, r13
0x00004b30      89542438       mov dword [rsp + 0x38], edx
0x00004b34      e8c7d4ffff     call sym.imp.strspn
0x00004b39      41807c050000   cmp byte [r13 + rax], 0
0x00004b3f      8b542438       mov edx, dword [rsp + 0x38]
0x00004b43      7509           jne 0x4b4e
0x00004b45      83fa02         cmp edx, 2
0x00004b48      0f8402ffffff   je 0x4a50
0x00004b4e      4d89f4         mov r12, r14
0x00004b51      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004b56      89542404       mov dword [rsp + 4], edx
0x00004b5a      e851d2ffff     call sym.imp.free
0x00004b5f      4889ef         mov rdi, rbp
0x00004b62      e849d2ffff     call sym.imp.free
0x00004b67      48837c241000   cmp qword [rsp + 0x10], 0
0x00004b6d      8b542404       mov edx, dword [rsp + 4]
0x00004b71      0f84b5000000   je 0x4c2c
0x00004b77      e99e000000     jmp 0x4c1a
0x00004b7c      0f1f4000       nop dword [rax]
0x00004b80      3c2e           cmp al, 0x2e
0x00004b82      0f8539feffff   jne 0x49c1
0x00004b88      e9c3feffff     jmp 0x4a50
0x00004b8d      0f1f00         nop dword [rax]
0x00004b90      8b442458       mov eax, dword [rsp + 0x58]
0x00004b94      2500f00000     and eax, 0xf000
0x00004b99      3d00a00000     cmp eax, 0xa000
0x00004b9e      7420           je 0x4bc0
0x00004ba0      3d00400000     cmp eax, 0x4000
0x00004ba5      0f84a5feffff   je 0x4a50
0x00004bab      e98efeffff     jmp 0x4a3e
0x00004bb0      e84bd3ffff     call sym.imp.__lxstat
0x00004bb5      85c0           test eax, eax
0x00004bb7      0f95c0         setne al
0x00004bba      e944ffffff     jmp 0x4b03
0x00004bbf      90             nop
0x00004bc0      48837c241000   cmp qword [rsp + 0x10], 0
0x00004bc6      0f84aa010000   je 0x4d76
0x00004bcc      488b542408     mov rdx, qword [rsp + 8]
0x00004bd1      488b742420     mov rsi, qword [rsp + 0x20]
0x00004bd6      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004bdb      e840070000     call sym.seen_file
0x00004be0      84c0           test al, al
0x00004be2      0f84b8000000   je 0x4ca0
0x00004be8      837c240402     cmp dword [rsp + 4], 2
0x00004bed      0f845dfeffff   je 0x4a50
0x00004bf3      e8d8d1ffff     call sym.imp.__errno_location
0x00004bf8      ba28000000     mov edx, 0x28                           ; '('
0x00004bfd      4989c4         mov r12, rax
0x00004c00      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004c05      89542404       mov dword [rsp + 4], edx
0x00004c09      e8a2d1ffff     call sym.imp.free
0x00004c0e      4889ef         mov rdi, rbp
0x00004c11      e89ad1ffff     call sym.imp.free
0x00004c16      8b542404       mov edx, dword [rsp + 4]
0x00004c1a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004c1f      89542404       mov dword [rsp + 4], edx
0x00004c23      e838130000     call sym.hash_free
0x00004c28      8b542404       mov edx, dword [rsp + 4]
0x00004c2c      41891424       mov dword [r12], edx
0x00004c30      31ed           xor ebp, ebp
0x00004c32      e979feffff     jmp 0x4ab0
0x00004c37      660f1f840000.  nop word [rax + rax]
0x00004c40      4d89f5         mov r13, r14
0x00004c43      e952fdffff     jmp 0x499a
0x00004c48      0f1f84000000.  nop dword [rax + rax]
0x00004c50      41807e012e     cmp byte [r14 + 1], 0x2e
0x00004c55      0f8566fdffff   jne 0x49c1
0x00004c5b      488d4501       lea rax, [rbp + 1]
0x00004c5f      4d89ee         mov r14, r13
0x00004c62      4939c7         cmp r15, rax
0x00004c65      0f86e0fcffff   jbe 0x494b
0x00004c6b      498d47ff       lea rax, [r15 - 1]
0x00004c6f      4839c5         cmp rbp, rax
0x00004c72      0f8341020000   jae 0x4eb9
0x00004c78      41807ffe2f     cmp byte [r15 - 2], 0x2f
0x00004c7d      4989c7         mov r15, rax
0x00004c80      0f84c5fcffff   je 0x494b
0x00004c86      4983ef01       sub r15, 1
0x00004c8a      4c39fd         cmp rbp, r15
0x00004c8d      0f84bdfdffff   je 0x4a50
0x00004c93      41807fff2f     cmp byte [r15 - 1], 0x2f
0x00004c98      0f84b2fdffff   je 0x4a50
0x00004c9e      ebe6           jmp 0x4c86
0x00004ca0      488b542408     mov rdx, qword [rsp + 8]
0x00004ca5      488b742420     mov rsi, qword [rsp + 0x20]
0x00004caa      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004caf      e8dc050000     call sym.record_file
0x00004cb4      488b742470     mov rsi, qword [rsp + 0x70]
0x00004cb9      4889ef         mov rdi, rbp
0x00004cbc      e80f4c0000     call sym.areadlink_with_size
0x00004cc1      4885c0         test rax, rax
0x00004cc4      4989c6         mov r14, rax
0x00004cc7      0f8465010000   je 0x4e32
0x00004ccd      4889c7         mov rdi, rax
0x00004cd0      e81bd2ffff     call sym.imp.strlen
0x00004cd5      4c89ef         mov rdi, r13
0x00004cd8      4989c4         mov r12, rax
0x00004cdb      4889442420     mov qword [rsp + 0x20], rax
0x00004ce0      e80bd2ffff     call sym.imp.strlen
0x00004ce5      48837c243000   cmp qword [rsp + 0x30], 0
0x00004ceb      4889c2         mov rdx, rax
0x00004cee      498d4c1401     lea rcx, [r12 + rdx + 1]
0x00004cf3      0f84f6000000   je 0x4def
0x00004cf9      48394c2430     cmp qword [rsp + 0x30], rcx
0x00004cfe      7321           jae 0x4d21
0x00004d00      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004d05      4889ce         mov rsi, rcx
0x00004d08      4889542438     mov qword [rsp + 0x38], rdx
0x00004d0d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004d12      e859470000     call sym.xrealloc
0x00004d17      488b542438     mov rdx, qword [rsp + 0x38]
0x00004d1c      4889442428     mov qword [rsp + 0x28], rax
0x00004d21      4c8b642428     mov r12, qword [rsp + 0x28]
0x00004d26      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00004d2b      4883c201       add rdx, 1
0x00004d2f      4c89ee         mov rsi, r13
0x00004d32      4c01e7         add rdi, r12
0x00004d35      4d89e5         mov r13, r12
0x00004d38      e863d4ffff     call sym.imp.memmove
0x00004d3d      488b542420     mov rdx, qword [rsp + 0x20]
0x00004d42      4c89f6         mov rsi, r14
0x00004d45      4c89e7         mov rdi, r12
0x00004d48      e853d3ffff     call sym.imp.memcpy
0x00004d4d      41803e2f       cmp byte [r14], 0x2f
0x00004d51      4c89642420     mov qword [rsp + 0x20], r12
0x00004d56      488d4501       lea rax, [rbp + 1]
0x00004d5a      0f84f4000000   je 0x4e54
0x00004d60      4939c7         cmp r15, rax
0x00004d63      0f8709010000   ja 0x4e72
0x00004d69      4c89f7         mov rdi, r14
0x00004d6c      e83fd0ffff     call sym.imp.free
0x00004d71      e9dafcffff     jmp 0x4a50
0x00004d76      4c8d05b31a00.  lea r8, sym.triple_free                 ; 0x6830 ; "SH\x89\xfbH\x8b?\xe8t\xb5\xff\xffH\x89\xdf[\xe9k\xb5\xff\xfff.\x0f\x1f\x84"
0x00004d7d      488d0d6c1a00.  lea rcx, sym.triple_compare_ino_str     ; 0x67f0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8G\xb8\xff\xff\x85\xc0\x0f\x94\xc0H\x83\xc4\b\xc3\x0f\x1f"
0x00004d84      31f6           xor esi, esi
0x00004d86      488d15f31900.  lea rdx, sym.triple_hash                ; 0x6780 ; "USH\x89\xfdH\x89\xf3H\x83\xec\bH\x8b?\xe8\x9c6"
0x00004d8d      bf07000000     mov edi, 7
0x00004d92      e8790f0000     call sym.hash_initialize
0x00004d97      4885c0         test rax, rax
0x00004d9a      4889442410     mov qword [rsp + 0x10], rax
0x00004d9f      0f8527feffff   jne 0x4bcc
0x00004da5      e8b6480000     call sym.xalloc_die
0x00004daa      660f1f440000   nop word [rax + rax]
0x00004db0      bf00100000     mov edi, 0x1000
0x00004db5      e856460000     call sym.xmalloc
0x00004dba      4889c5         mov rbp, rax
0x00004dbd      488d98001000.  lea rbx, [rax + 0x1000]
0x00004dc4      4c8d7801       lea r15, [rax + 1]
0x00004dc8      c6002f         mov byte [rax], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x00004dcb      e951fbffff     jmp 0x4921
0x00004dd0      4889ef         mov rdi, rbp
0x00004dd3      be00100000     mov esi, 0x1000
0x00004dd8      e893460000     call sym.xrealloc
0x00004ddd      4889c5         mov rbp, rax
0x00004de0      4901c7         add r15, rax
0x00004de3      488d98001000.  lea rbx, [rax + 0x1000]
0x00004dea      e932fbffff     jmp 0x4921
0x00004def      4881f9001000.  cmp rcx, 0x1000
0x00004df6      b800100000     mov eax, 0x1000
0x00004dfb      4889542438     mov qword [rsp + 0x38], rdx
0x00004e00      480f43c1       cmovae rax, rcx
0x00004e04      4889c7         mov rdi, rax
0x00004e07      4889442430     mov qword [rsp + 0x30], rax
0x00004e0c      e8ff450000     call sym.xmalloc
0x00004e11      488b542438     mov rdx, qword [rsp + 0x38]
0x00004e16      4889442428     mov qword [rsp + 0x28], rax
0x00004e1b      e901ffffff     jmp 0x4d21
0x00004e20      e8abcfffff     call sym.imp.__errno_location
0x00004e25      31ed           xor ebp, ebp
0x00004e27      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x2ab00000
0x00004e2d      e97efcffff     jmp 0x4ab0
0x00004e32      e899cfffff     call sym.imp.__errno_location
0x00004e37      837c240402     cmp dword [rsp + 4], 2
0x00004e3c      4989c6         mov r14, rax
0x00004e3f      8b10           mov edx, dword [rax]
0x00004e41      7509           jne 0x4e4c
0x00004e43      83fa0c         cmp edx, 0xc
0x00004e46      0f8504fcffff   jne 0x4a50
0x00004e4c      4d89f4         mov r12, r14
0x00004e4f      e9acfdffff     jmp 0x4c00
0x00004e54      c645002f       mov byte [rbp], 0x2f                    ; '/'
0x00004e58      4989c7         mov r15, rax
0x00004e5b      e909ffffff     jmp 0x4d69
0x00004e60      e86bcfffff     call sym.imp.__errno_location
0x00004e65      31ed           xor ebp, ebp
0x00004e67      c70002000000   mov dword [rax], 2
0x00004e6d      e93efcffff     jmp 0x4ab0
0x00004e72      498d47ff       lea rax, [r15 - 1]
0x00004e76      4839c5         cmp rbp, rax
0x00004e79      7307           jae 0x4e82
0x00004e7b      41807ffe2f     cmp byte [r15 - 2], 0x2f
0x00004e80      750b           jne 0x4e8d
0x00004e82      4989c7         mov r15, rax
0x00004e85      e9dffeffff     jmp 0x4d69
0x00004e8a      4c89f8         mov rax, r15
0x00004e8d      4c8d78ff       lea r15, [rax - 1]
0x00004e91      4c39fd         cmp rbp, r15
0x00004e94      0f84cffeffff   je 0x4d69
0x00004e9a      41807fff2f     cmp byte [r15 - 1], 0x2f
0x00004e9f      0f84c4feffff   je 0x4d69
0x00004ea5      ebe3           jmp 0x4e8a
0x00004ea7      e824cfffff     call sym.imp.__errno_location
0x00004eac      ba14000000     mov edx, 0x14
0x00004eb1      4989c4         mov r12, rax
0x00004eb4      e998fcffff     jmp 0x4b51
0x00004eb9      4989c7         mov r15, rax
0x00004ebc      e98afaffff     jmp 0x494b
0x00004ec1      e85ad0ffff     call sym.imp.__stack_chk_fail
0x00004ec6      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_stdin_set_file_name:
0x00004ed0      48893d59b220.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closein.c:44 ; [0x210130:8]=0
0x00004ed7      c3             ret                                     ; ../coreutils-8.31/lib/closein.c:46
0x00004ed8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdin:
0x00004ee0      4154           push r12                                ; ../coreutils-8.31/lib/closein.c:80
0x00004ee2      55             push rbp
0x00004ee3      53             push rbx
0x00004ee4      488b1de5b120.  mov rbx, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:87 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2100d0:8]=0
0x00004eeb      4889df         mov rdi, rbx
0x00004eee      e8bd480000     call sym.freadahead
0x00004ef3      4885c0         test rax, rax
0x00004ef6      0f859c000000   jne 0x4f98
0x00004efc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:94
0x00004eff      e84c4e0000     call sym.close_stream
0x00004f04      85c0           test eax, eax
0x00004f06      7530           jne 0x4f38
0x00004f08      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x00004f09      5d             pop rbp
0x00004f0a      415c           pop r12
0x00004f0c      e9ff000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x00004f11      0f1f80000000.  nop dword [rax]
0x00004f18      e853480000     call sym.rpl_fflush                     ; ../coreutils-8.31/lib/closein.c:91
0x00004f1d      85c0           test eax, eax
0x00004f1f      488b3daab120.  mov rdi, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:94 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2100d0:8]=0
0x00004f26      0f848a000000   je 0x4fb6                               ; ../coreutils-8.31/lib/closein.c:91
0x00004f2c      e81f4e0000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x00004f31      0f1f80000000.  nop dword [rax]
0x00004f38      488d35c17000.  lea rsi, str.error_closing_file         ; ../coreutils-8.31/lib/closein.c:100 ; 0xc000 ; "error closing file"
0x00004f3f      31ff           xor edi, edi
0x00004f41      ba05000000     mov edx, 5
0x00004f46      e885cfffff     call sym.imp.dcgettext
0x00004f4b      488b1ddeb120.  mov rbx, qword [obj.file_name]          ; ../coreutils-8.31/lib/closein.c:101 ; [0x210130:8]=0
0x00004f52      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/closein.c:100
0x00004f55      e876ceffff     call sym.imp.__errno_location
0x00004f5a      4889c5         mov rbp, rax
0x00004f5d      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/closein.c:101
0x00004f60      746e           je 0x4fd0
0x00004f62      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:102
0x00004f65      e8e6340000     call sym.quotearg_colon
0x00004f6a      8b7500         mov esi, dword [rbp]
0x00004f6d      488d159f7000.  lea rdx, str.s:__s                      ; 0xc013 ; "%s: %s"
0x00004f74      4889c1         mov rcx, rax
0x00004f77      4d89e0         mov r8, r12
0x00004f7a      31ff           xor edi, edi
0x00004f7c      31c0           xor eax, eax
0x00004f7e      e82dd2ffff     call sym.imp.error
0x00004f83      e888000000     call sym.close_stdout                   ; ../coreutils-8.31/lib/closein.c:108
0x00004f88      8b3d92b02000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closein.c:111 ; [0x210020:4]=1
0x00004f8e      e85dceffff     call sym.imp._exit
0x00004f93      0f1f440000     nop dword [rax + rax]
0x00004f98      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/closein.c:91
0x00004f9a      4889df         mov rdi, rbx
0x00004f9d      ba01000000     mov edx, 1
0x00004fa2      e839480000     call sym.rpl_fseeko
0x00004fa7      85c0           test eax, eax
0x00004fa9      488b3d20b120.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2100d0:8]=0
0x00004fb0      0f8462ffffff   je 0x4f18
0x00004fb6      e8954d0000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x00004fbb      85c0           test eax, eax
0x00004fbd      0f8575ffffff   jne 0x4f38
0x00004fc3      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x00004fc4      5d             pop rbp
0x00004fc5      415c           pop r12
0x00004fc7      e944000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x00004fcc      0f1f4000       nop dword [rax]
0x00004fd0      8b30           mov esi, dword [rax]                    ; ../coreutils-8.31/lib/closein.c:105
0x00004fd2      488d159e7a00.  lea rdx, [0x0000ca77]                   ; "%s"
0x00004fd9      4c89e1         mov rcx, r12
0x00004fdc      31ff           xor edi, edi
0x00004fde      31c0           xor eax, eax
0x00004fe0      e8cbd1ffff     call sym.imp.error
0x00004fe5      eb9c           jmp 0x4f83
0x00004fe7      660f1f840000.  nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00004ff0      48893d49b120.  mov qword [obj.file_name_1], rdi        ; ../coreutils-8.31/lib/closeout.c:52 ; [0x210140:8]=0
0x00004ff7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00004ff8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005000      40883d31b120.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x210138:1]=0
0x00005007      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005008      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005010      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005011      53             push rbx
0x00005012      4883ec08       sub rsp, 8
0x00005016      488b3dabb020.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x0000501d      e82e4d0000     call sym.close_stream
0x00005022      85c0           test eax, eax
0x00005024      7416           je 0x503c
0x00005026      e8a5cdffff     call sym.imp.__errno_location
0x0000502b      803d06b12000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x210138:1]=0
0x00005032      4889c3         mov rbx, rax
0x00005035      741c           je 0x5053
0x00005037      833820         cmp dword [rax], 0x20
0x0000503a      7517           jne 0x5053
0x0000503c      488b3dbdb020.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00005043      e8084d0000     call sym.close_stream
0x00005048      85c0           test eax, eax
0x0000504a      7546           jne 0x5092
0x0000504c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00005050      5b             pop rbx
0x00005051      5d             pop rbp
0x00005052      c3             ret
0x00005053      488d35c06f00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xc01a ; "write error"
0x0000505a      31ff           xor edi, edi
0x0000505c      ba05000000     mov edx, 5
0x00005061      e86aceffff     call sym.imp.dcgettext
0x00005066      488b3dd3b020.  mov rdi, qword [obj.file_name_1]        ; ../coreutils-8.31/lib/closeout.c:123 ; [0x210140:8]=0
0x0000506d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00005070      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00005073      7428           je 0x509d
0x00005075      e8d6330000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000507a      8b33           mov esi, dword [rbx]
0x0000507c      488d15906f00.  lea rdx, str.s:__s                      ; 0xc013 ; "%s: %s"
0x00005083      4889c1         mov rcx, rax
0x00005086      4989e8         mov r8, rbp
0x00005089      31ff           xor edi, edi
0x0000508b      31c0           xor eax, eax
0x0000508d      e81ed1ffff     call sym.imp.error
0x00005092      8b3d88af2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x210020:4]=1
0x00005098      e853cdffff     call sym.imp._exit
0x0000509d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000509f      488d15d17900.  lea rdx, [0x0000ca77]                   ; "%s"
0x000050a6      4889c1         mov rcx, rax
0x000050a9      31ff           xor edi, edi
0x000050ab      31c0           xor eax, eax
0x000050ad      e8fed0ffff     call sym.imp.error
0x000050b2      ebde           jmp 0x5092
0x000050b4      662e0f1f8400.  nop word cs:[rax + rax]
0x000050be      6690           nop
;-- dir_name:
0x000050c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:33
0x000050c4      e877000000     call sym.mdir_name                      ; ../coreutils-8.31/lib/dirname.c:34
0x000050c9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname.c:35
0x000050cc      7405           je 0x50d3
0x000050ce      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:38
0x000050d2      c3             ret
0x000050d3      e888450000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/dirname.c:36
0x000050d8      0f1f84000000.  nop dword [rax + rax]
;-- dir_len:
0x000050e0      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x000050e1      53             push rbx
0x000050e2      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x000050e4      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x000050e7      4883ec08       sub rsp, 8
0x000050eb      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x000050ee      400f94c5       sete bpl
0x000050f2      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x000050f7      4889c1         mov rcx, rax
0x000050fa      4829d9         sub rcx, rbx
0x000050fd      4839e9         cmp rcx, rbp
0x00005100      762e           jbe 0x5130
0x00005102      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00005106      488d51ff       lea rdx, [rcx - 1]
0x0000510a      7412           je 0x511e
0x0000510c      eb22           jmp 0x5130
0x0000510e      6690           nop
0x00005110      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00005115      488d42ff       lea rax, [rdx - 1]
0x00005119      7508           jne 0x5123
0x0000511b      4889c2         mov rdx, rax
0x0000511e      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x00005121      75ed           jne 0x5110
0x00005123      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x00005127      4889d0         mov rax, rdx
0x0000512a      5b             pop rbx
0x0000512b      5d             pop rbp
0x0000512c      c3             ret
0x0000512d      0f1f00         nop dword [rax]
0x00005130      4883c408       add rsp, 8
0x00005134      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00005137      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000513a      5b             pop rbx
0x0000513b      5d             pop rbp
0x0000513c      c3             ret
0x0000513d      0f1f00         nop dword [rax]
;-- mdir_name:
0x00005140      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x00005141      53             push rbx
0x00005142      4889fd         mov rbp, rdi
0x00005145      4883ec08       sub rsp, 8
0x00005149      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000514e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00005151      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x00005154      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00005157      0fb6c0         movzx eax, al
0x0000515a      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000515f      e88ccfffff     call sym.imp.malloc
0x00005164      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x00005167      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000516a      741a           je 0x5186                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000516c      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000516f      4889ee         mov rsi, rbp
0x00005172      4889c7         mov rdi, rax
0x00005175      e826cfffff     call sym.imp.memcpy
0x0000517a      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000517d      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005180      740e           je 0x5190                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x00005182      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x00005186      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x0000518a      4889c8         mov rax, rcx
0x0000518d      5b             pop rbx
0x0000518e      5d             pop rbp
0x0000518f      c3             ret
0x00005190      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x00005193      bb01000000     mov ebx, 1
0x00005198      ebe8           jmp 0x5182
0x0000519a      660f1f440000   nop word [rax + rax]
;-- last_component:
0x000051a0      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x000051a3      4889f8         mov rax, rdi
0x000051a6      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x000051a9      7511           jne 0x51bc
0x000051ab      0f1f440000     nop dword [rax + rax]
0x000051b0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x000051b4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x000051b7      80fa2f         cmp dl, 0x2f
0x000051ba      74f4           je 0x51b0
0x000051bc      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000051be      743a           je 0x51fa
0x000051c0      4889c1         mov rcx, rax
0x000051c3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x000051c5      eb1e           jmp 0x51e5
0x000051c7      660f1f840000.  nop word [rax + rax]
0x000051d0      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x000051d3      7405           je 0x51da
0x000051d5      4889c8         mov rax, rcx
0x000051d8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x000051da      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000051de      0fb611         movzx edx, byte [rcx]
0x000051e1      84d2           test dl, dl
0x000051e3      7415           je 0x51fa
0x000051e5      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x000051e8      75e6           jne 0x51d0
0x000051ea      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000051ee      0fb611         movzx edx, byte [rcx]
0x000051f1      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x000051f6      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000051f8      75eb           jne 0x51e5
0x000051fa      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x000051fc      0f1f4000       nop dword [rax]
;-- base_len:
0x00005200      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00005201      4889fb         mov rbx, rdi
0x00005204      e8e7ccffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00005209      4883f801       cmp rax, 1
0x0000520d      760b           jbe 0x521a
0x0000520f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00005214      488d50ff       lea rdx, [rax - 1]
0x00005218      740e           je 0x5228
0x0000521a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000521b      c3             ret
0x0000521c      0f1f4000       nop dword [rax]
0x00005220      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00005223      0f1f440000     nop dword [rax + rax]
0x00005228      4883fa01       cmp rdx, 1
0x0000522c      7412           je 0x5240
0x0000522e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00005233      488d42ff       lea rax, [rdx - 1]
0x00005237      74e7           je 0x5220
0x00005239      4889d0         mov rax, rdx
0x0000523c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000523d      c3             ret
0x0000523e      6690           nop
0x00005240      b801000000     mov eax, 1
0x00005245      5b             pop rbx
0x00005246      c3             ret
0x00005247      660f1f840000.  nop word [rax + rax]
;-- strip_trailing_slashes:
0x00005250      55             push rbp                                ; ../coreutils-8.31/lib/stripslash.c:32
0x00005251      53             push rbx
0x00005252      4889fd         mov rbp, rdi
0x00005255      4883ec08       sub rsp, 8
0x00005259      e842ffffff     call sym.last_component                 ; ../coreutils-8.31/lib/stripslash.c:33
0x0000525e      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/stripslash.c:40
0x00005261      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/stripslash.c:33
0x00005264      480f44dd       cmove rbx, rbp                          ; ../coreutils-8.31/lib/stripslash.c:40
0x00005268      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/stripslash.c:41
0x0000526b      e890ffffff     call sym.base_len
0x00005270      4801c3         add rbx, rax
0x00005273      803b00         cmp byte [rbx], 0                       ; ../coreutils-8.31/lib/stripslash.c:42
0x00005276      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/stripslash.c:43
0x00005279      0f95c0         setne al                                ; ../coreutils-8.31/lib/stripslash.c:42
0x0000527c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/stripslash.c:45
0x00005280      5b             pop rbx
0x00005281      5d             pop rbp
0x00005282      c3             ret
0x00005283      662e0f1f8400.  nop word cs:[rax + rax]
0x0000528d      0f1f00         nop dword [rax]
;-- record_file:
0x00005290      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:30
0x00005293      747b           je 0x5310
0x00005295      4155           push r13
0x00005297      4154           push r12
0x00005299      4989fd         mov r13, rdi
0x0000529c      55             push rbp
0x0000529d      53             push rbx
0x0000529e      4989f4         mov r12, rsi
0x000052a1      bf18000000     mov edi, 0x18                           ; ../coreutils-8.31/lib/file-set.c:36
0x000052a6      4889d5         mov rbp, rdx
0x000052a9      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:30
0x000052ad      e85e410000     call sym.xmalloc                        ; ../coreutils-8.31/lib/file-set.c:36
0x000052b2      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/file-set.c:37
0x000052b5      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:36
0x000052b8      e883430000     call sym.xstrdup                        ; ../coreutils-8.31/lib/file-set.c:37
0x000052bd      488903         mov qword [rbx], rax
0x000052c0      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/file-set.c:38
0x000052c4      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/file-set.c:42
0x000052c7      4c89ef         mov rdi, r13
0x000052ca      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/file-set.c:38
0x000052ce      488b4500       mov rax, qword [rbp]                    ; ../coreutils-8.31/lib/file-set.c:39
0x000052d2      48894310       mov qword [rbx + 0x10], rax
0x000052d6      e835120000     call sym.hash_insert                    ; ../coreutils-8.31/lib/file-set.c:42
0x000052db      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/file-set.c:43
0x000052de      7432           je 0x5312
0x000052e0      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:49
0x000052e3      741b           je 0x5300
0x000052e5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x000052e9      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/file-set.c:53
0x000052ec      5b             pop rbx                                 ; ../coreutils-8.31/lib/file-set.c:56
0x000052ed      5d             pop rbp
0x000052ee      415c           pop r12
0x000052f0      415d           pop r13
0x000052f2      e939150000     jmp sym.triple_free                     ; ../coreutils-8.31/lib/file-set.c:53
0x000052f7      660f1f840000.  nop word [rax + rax]
0x00005300      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x00005304      5b             pop rbx
0x00005305      5d             pop rbp
0x00005306      415c           pop r12
0x00005308      415d           pop r13
0x0000530a      c3             ret
0x0000530b      0f1f440000     nop dword [rax + rax]
0x00005310      f3c3           ret
0x00005312      e849430000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/file-set.c:46
0x00005317      660f1f840000.  nop word [rax + rax]
;-- seen_file:
0x00005320      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/file-set.c:63
0x00005324      64488b042528.  mov rax, qword fs:[0x28]
0x0000532d      4889442418     mov qword [rsp + 0x18], rax
0x00005332      31c0           xor eax, eax
0x00005334      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:66
0x00005337      7423           je 0x535c
0x00005339      488b4208       mov rax, qword [rdx + 8]                ; ../coreutils-8.31/lib/file-set.c:70
0x0000533d      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/file-set.c:69
0x00005341      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/file-set.c:73
0x00005344      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/file-set.c:70
0x00005349      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/file-set.c:71
0x0000534c      4889442410     mov qword [rsp + 0x10], rax
0x00005351      e84a070000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/file-set.c:73
0x00005356      4885c0         test rax, rax
0x00005359      0f95c0         setne al
0x0000535c      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/file-set.c:74
0x00005361      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000536a      7505           jne 0x5371
0x0000536c      4883c428       add rsp, 0x28
0x00005370      c3             ret
0x00005371      e8aacbffff     call sym.imp.__stack_chk_fail
0x00005376      662e0f1f8400.  nop word cs:[rax + rax]
;-- file_name_concat:
0x00005380      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:36
0x00005384      e817000000     call sym.mfile_name_concat              ; ../coreutils-8.31/lib/filenamecat.c:37
0x00005389      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat.c:38
0x0000538c      7405           je 0x5393
0x0000538e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:41
0x00005392      c3             ret
0x00005393      e8c8420000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/filenamecat.c:39
0x00005398      0f1f84000000.  nop dword [rax + rax]
;-- mfile_name_concat:
0x000053a0      4157           push r15                                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:48
0x000053a2      4156           push r14
0x000053a4      4989d7         mov r15, rdx
0x000053a7      4155           push r13
0x000053a9      4154           push r12
0x000053ab      4989fc         mov r12, rdi
0x000053ae      55             push rbp
0x000053af      53             push rbx
0x000053b0      4889f5         mov rbp, rsi
0x000053b3      4883ec18       sub rsp, 0x18
0x000053b7      e8e4fdffff     call sym.last_component                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:49
0x000053bc      4889c3         mov rbx, rax
0x000053bf      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x000053c2      e839feffff     call sym.base_len
0x000053c7      4c29e3         sub rbx, r12                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x000053ca      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x000053cd      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x000053d0      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x000053d3      e818cbffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x000053d8      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x000053db      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x000053de      7430           je 0x5410                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x000053e0      41807c1cff2f   cmp byte [r12 + rbx - 1], 0x2f          ; ../coreutils-8.31/lib/filenamecat-lgpl.c:57
0x000053e6      0f84a4000000   je 0x5490
0x000053ec      31c0           xor eax, eax
0x000053ee      807d002f       cmp byte [rbp], 0x2f
0x000053f2      ba00000000     mov edx, 0
0x000053f7      0f95c0         setne al
0x000053fa      48890424       mov qword [rsp], rax
0x000053fe      b82f000000     mov eax, 0x2f                           ; '/'
0x00005403      0f44c2         cmove eax, edx
0x00005406      8844240f       mov byte [rsp + 0xf], al
0x0000540a      eb22           jmp 0x542e
0x0000540c      0f1f4000       nop dword [rax]
0x00005410      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:60
0x00005412      807d002f       cmp byte [rbp], 0x2f
0x00005416      ba00000000     mov edx, 0
0x0000541b      0f94c0         sete al
0x0000541e      48890424       mov qword [rsp], rax
0x00005422      b82e000000     mov eax, 0x2e                           ; '.'
0x00005427      0f45c2         cmovne eax, edx
0x0000542a      8844240f       mov byte [rsp + 0xf], al
0x0000542e      4a8d7c3301     lea rdi, [rbx + r14 + 1]                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x00005433      48033c24       add rdi, qword [rsp]
0x00005437      e8b4ccffff     call sym.imp.malloc
0x0000543c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x0000543f      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x00005442      7432           je 0x5476                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x00005444      4889c7         mov rdi, rax                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005447      4889da         mov rdx, rbx
0x0000544a      4c89e6         mov rsi, r12
0x0000544d      e83ecdffff     call sym.imp.mempcpy
0x00005452      0fb64c240f     movzx ecx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x00005457      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:78
0x0000545b      4801c7         add rdi, rax
0x0000545e      4d85ff         test r15, r15                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x00005461      8808           mov byte [rax], cl                      ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x00005463      7403           je 0x5468                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x00005465      49893f         mov qword [r15], rdi                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:81
0x00005468      4c89f2         mov rdx, r14                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000546b      4889ee         mov rsi, rbp
0x0000546e      e81dcdffff     call sym.imp.mempcpy
0x00005473      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/filenamecat-lgpl.c:84
0x00005476      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:87
0x0000547a      4c89e8         mov rax, r13
0x0000547d      5b             pop rbx
0x0000547e      5d             pop rbp
0x0000547f      415c           pop r12
0x00005481      415d           pop r13
0x00005483      415e           pop r14
0x00005485      415f           pop r15
0x00005487      c3             ret
0x00005488      0f1f84000000.  nop dword [rax + rax]
0x00005490      48c704240000.  mov qword [rsp], 0
0x00005498      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:53
0x0000549d      eb8f           jmp 0x542e
0x0000549f      90             nop
;-- next_prime:
0x000054a0      4883ff0a       cmp rdi, 0xa                            ; ../coreutils-8.31/lib/hash.c:464
0x000054a4      b80a000000     mov eax, 0xa
0x000054a9      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x000054b3      480f42f8       cmovb rdi, rax
0x000054b7      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x000054bb      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x000054bf      746e           je 0x552f
0x000054c1      0f1f80000000.  nop dword [rax]
0x000054c8      4889f8         mov rax, rdi
0x000054cb      4889f9         mov rcx, rdi
0x000054ce      49f7e1         mul r9
0x000054d1      4889d0         mov rax, rdx
0x000054d4      48d1e8         shr rax, 1
0x000054d7      488d0440       lea rax, [rax + rax*2]
0x000054db      4829c1         sub rcx, rax
0x000054de      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x000054e2      4889c8         mov rax, rcx
0x000054e5      7639           jbe 0x5520
0x000054e7      4885c9         test rcx, rcx
0x000054ea      7439           je 0x5525
0x000054ec      41b810000000   mov r8d, 0x10
0x000054f2      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x000054f7      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x000054fc      eb0b           jmp 0x5509
0x000054fe      6690           nop
0x00005500      4983c008       add r8, 8
0x00005504      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00005507      741c           je 0x5525
0x00005509      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x0000550d      31d2           xor edx, edx
0x0000550f      4889f8         mov rax, rdi
0x00005512      48f7f1         div rcx
0x00005515      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00005518      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x0000551b      4889d0         mov rax, rdx
0x0000551e      72e0           jb 0x5500
0x00005520      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00005523      750a           jne 0x552f
0x00005525      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00005529      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000552d      7599           jne 0x54c8
0x0000552f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00005532      c3             ret
0x00005533      0f1f00         nop dword [rax]
0x00005536      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00005540      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00005543      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00005545      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00005549      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x0000554c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x0000554f      c3             ret
;-- raw_comparator:
0x00005550      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00005553      0f94c0         sete al
0x00005556      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00005557      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00005560      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00005561      4889fb         mov rbx, rdi
0x00005564      4889f7         mov rdi, rsi
0x00005567      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x0000556b      ff5330         call qword [rbx + 0x30]
0x0000556e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x00005572      7609           jbe 0x557d
0x00005574      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x00005578      480303         add rax, qword [rbx]
0x0000557b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x0000557c      c3             ret
0x0000557d      e83ec8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x00005582      0f1f4000       nop dword [rax]
0x00005586      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x00005590      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x00005592      4155           push r13
0x00005594      4989d6         mov r14, rdx
0x00005597      4154           push r12
0x00005599      55             push rbp
0x0000559a      4989fc         mov r12, rdi
0x0000559d      53             push rbx
0x0000559e      4889f5         mov rbp, rsi
0x000055a1      4189cd         mov r13d, ecx
0x000055a4      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x000055a9      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x000055ac      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x000055af      4885f6         test rsi, rsi
0x000055b2      0f84e8000000   je 0x56a0
0x000055b8      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x000055bb      4889c3         mov rbx, rax
0x000055be      0f848f000000   je 0x5653
0x000055c4      4889ef         mov rdi, rbp
0x000055c7      41ff542438     call qword [r12 + 0x38]
0x000055cc      84c0           test al, al
0x000055ce      0f857c000000   jne 0x5650
0x000055d4      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x000055d8      4885c0         test rax, rax
0x000055db      0f84bf000000   je 0x56a0
0x000055e1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x000055e4      4839f5         cmp rbp, rsi
0x000055e7      7520           jne 0x5609
0x000055e9      eb31           jmp 0x561c
0x000055eb      0f1f440000     nop dword [rax + rax]
0x000055f0      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x000055f4      488b4308       mov rax, qword [rbx + 8]
0x000055f8      4885c0         test rax, rax
0x000055fb      0f849f000000   je 0x56a0
0x00005601      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00005604      4839ee         cmp rsi, rbp
0x00005607      7413           je 0x561c
0x00005609      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x0000560c      41ff542438     call qword [r12 + 0x38]
0x00005611      84c0           test al, al
0x00005613      74db           je 0x55f0
0x00005615      488b4308       mov rax, qword [rbx + 8]
0x00005619      488b30         mov rsi, qword [rax]
0x0000561c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x0000561f      741d           je 0x563e
0x00005621      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00005625      48895308       mov qword [rbx + 8], rdx
0x00005629      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00005630      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00005635      48895008       mov qword [rax + 8], rdx
0x00005639      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x0000563e      5b             pop rbx
0x0000563f      4889f0         mov rax, rsi
0x00005642      5d             pop rbp
0x00005643      415c           pop r12
0x00005645      415d           pop r13
0x00005647      415e           pop r14
0x00005649      c3             ret
0x0000564a      660f1f440000   nop word [rax + rax]
0x00005650      488b33         mov rsi, qword [rbx]
0x00005653      4584ed         test r13b, r13b
0x00005656      74e6           je 0x563e
0x00005658      488b4308       mov rax, qword [rbx + 8]
0x0000565c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x0000565f      742f           je 0x5690
0x00005661      f30f6f00       movdqu xmm0, xmmword [rax]
0x00005665      0f1103         movups xmmword [rbx], xmm0
0x00005668      48c700000000.  mov qword [rax], 0
0x0000566f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x00005674      48895008       mov qword [rax + 8], rdx
0x00005678      4989442448     mov qword [r12 + 0x48], rax
0x0000567d      4889f0         mov rax, rsi
0x00005680      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x00005681      5d             pop rbp
0x00005682      415c           pop r12
0x00005684      415d           pop r13
0x00005686      415e           pop r14
0x00005688      c3             ret
0x00005689      0f1f80000000.  nop dword [rax]
0x00005690      48c703000000.  mov qword [rbx], 0
0x00005697      eba5           jmp 0x563e
0x00005699      0f1f80000000.  nop dword [rax]
0x000056a0      31f6           xor esi, esi
0x000056a2      5b             pop rbx
0x000056a3      4889f0         mov rax, rsi
0x000056a6      5d             pop rbp
0x000056a7      415c           pop r12
0x000056a9      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x000056ab      415e           pop r14
0x000056ad      c3             ret
0x000056ae      6690           nop
;-- check_tuning.isra.0:
0x000056b0      488b17         mov rdx, qword [rdi]
0x000056b3      488d0de66900.  lea rcx, obj.default_tuning             ; 0xc0a0
0x000056ba      b801000000     mov eax, 1
0x000056bf      4839ca         cmp rdx, rcx
0x000056c2      7461           je 0x5725
0x000056c4      f30f104208     movss xmm0, dword [rdx + 8]
0x000056c9      0f2e05e46900.  ucomiss xmm0, dword [0x0000c0b4]
0x000056d0      764e           jbe 0x5720
0x000056d2      f30f100dde69.  movss xmm1, dword [0x0000c0b8]          ; [0xc0b8:4]=0x3f666666
0x000056da      0f2ec8         ucomiss xmm1, xmm0
0x000056dd      7641           jbe 0x5720
0x000056df      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x000056e4      0f2e0dd16900.  ucomiss xmm1, dword [0x0000c0bc]
0x000056eb      7633           jbe 0x5720
0x000056ed      f30f100a       movss xmm1, dword [rdx]
0x000056f1      0f2e0dc86900.  ucomiss xmm1, dword [0x0000c0c0]
0x000056f8      7226           jb 0x5720
0x000056fa      f30f580db269.  addss xmm1, dword [0x0000c0b4]          ; ../coreutils-8.31/lib/hash.c:737
0x00005702      f30f105204     movss xmm2, dword [rdx + 4]
0x00005707      0f2ed1         ucomiss xmm2, xmm1
0x0000570a      7614           jbe 0x5720
0x0000570c      f30f101db069.  movss xmm3, dword [0x0000c0c4]          ; [0xc0c4:4]=0x3f800000
0x00005714      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00005717      7207           jb 0x5720
0x00005719      0f2ec1         ucomiss xmm0, xmm1
0x0000571c      7707           ja 0x5725
0x0000571e      6690           nop
0x00005720      48890f         mov qword [rdi], rcx
0x00005723      31c0           xor eax, eax
0x00005725      f3c3           ret
0x00005727      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00005730      4157           push r15
0x00005732      4156           push r14
0x00005734      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00005736      4154           push r12
0x00005738      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00005739      53             push rbx
0x0000573a      4883ec08       sub rsp, 8
0x0000573e      4c8b26         mov r12, qword [rsi]
0x00005741      4c3b6608       cmp r12, qword [rsi + 8]
0x00005745      0f83dd000000   jae 0x5828
0x0000574b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000574e      4989f5         mov r13, rsi
0x00005751      4189d6         mov r14d, edx
0x00005754      0f1f4000       nop dword [rax]
0x00005758      4d8b3c24       mov r15, qword [r12]
0x0000575c      4d85ff         test r15, r15
0x0000575f      0f84b5000000   je 0x581a
0x00005765      498b5c2408     mov rbx, qword [r12 + 8]
0x0000576a      4885db         test rbx, rbx
0x0000576d      751d           jne 0x578c
0x0000576f      eb5a           jmp 0x57cb
0x00005771      0f1f80000000.  nop dword [rax]
0x00005778      488b4808       mov rcx, qword [rax + 8]
0x0000577c      4885d2         test rdx, rdx
0x0000577f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x00005783      48895808       mov qword [rax + 8], rbx
0x00005787      4889d3         mov rbx, rdx
0x0000578a      743b           je 0x57c7
0x0000578c      4c8b3b         mov r15, qword [rbx]
0x0000578f      4889ef         mov rdi, rbp
0x00005792      4c89fe         mov rsi, r15
0x00005795      e8c6fdffff     call sym.safe_hasher
0x0000579a      48833800       cmp qword [rax], 0
0x0000579e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x000057a2      75d4           jne 0x5778
0x000057a4      4c8938         mov qword [rax], r15
0x000057a7      4883451801     add qword [rbp + 0x18], 1
0x000057ac      4885d2         test rdx, rdx
0x000057af      48c703000000.  mov qword [rbx], 0
0x000057b6      488b4548       mov rax, qword [rbp + 0x48]
0x000057ba      48894308       mov qword [rbx + 8], rax
0x000057be      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x000057c2      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x000057c5      75c5           jne 0x578c
0x000057c7      4d8b3c24       mov r15, qword [r12]
0x000057cb      4584f6         test r14b, r14b
0x000057ce      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x000057d7      7541           jne 0x581a
0x000057d9      4c89fe         mov rsi, r15
0x000057dc      4889ef         mov rdi, rbp
0x000057df      e87cfdffff     call sym.safe_hasher
0x000057e4      48833800       cmp qword [rax], 0
0x000057e8      4889c3         mov rbx, rax
0x000057eb      7453           je 0x5840
0x000057ed      488b4548       mov rax, qword [rbp + 0x48]
0x000057f1      4885c0         test rax, rax
0x000057f4      745a           je 0x5850
0x000057f6      488b5008       mov rdx, qword [rax + 8]
0x000057fa      48895548       mov qword [rbp + 0x48], rdx
0x000057fe      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x00005802      4c8938         mov qword [rax], r15
0x00005805      48895008       mov qword [rax + 8], rdx
0x00005809      48894308       mov qword [rbx + 8], rax
0x0000580d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00005815      49836d1801     sub qword [r13 + 0x18], 1
0x0000581a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000581e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00005822      0f8730ffffff   ja 0x5758
0x00005828      4883c408       add rsp, 8
0x0000582c      b801000000     mov eax, 1
0x00005831      5b             pop rbx
0x00005832      5d             pop rbp
0x00005833      415c           pop r12
0x00005835      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x00005837      415e           pop r14
0x00005839      415f           pop r15
0x0000583b      c3             ret
0x0000583c      0f1f4000       nop dword [rax]
0x00005840      4c8938         mov qword [rax], r15
0x00005843      4883451801     add qword [rbp + 0x18], 1
0x00005848      ebc3           jmp 0x580d
0x0000584a      660f1f440000   nop word [rax + rax]
0x00005850      bf10000000     mov edi, 0x10
0x00005855      e896c8ffff     call sym.imp.malloc
0x0000585a      4885c0         test rax, rax
0x0000585d      759f           jne 0x57fe
0x0000585f      4883c408       add rsp, 8
0x00005863      31c0           xor eax, eax
0x00005865      5b             pop rbx
0x00005866      5d             pop rbp
0x00005867      415c           pop r12
0x00005869      415d           pop r13
0x0000586b      415e           pop r14
0x0000586d      415f           pop r15
0x0000586f      c3             ret
;-- hash_get_n_buckets:
0x00005870      488b4710       mov rax, qword [rdi + 0x10]
0x00005874      c3             ret
0x00005875      90             nop
0x00005876      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x00005880      488b4718       mov rax, qword [rdi + 0x18]
0x00005884      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x00005885      90             nop
0x00005886      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x00005890      488b4720       mov rax, qword [rdi + 0x20]
0x00005894      c3             ret
0x00005895      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x00005896      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x000058a0      488b37         mov rsi, qword [rdi]
0x000058a3      488b7f08       mov rdi, qword [rdi + 8]
0x000058a7      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x000058a9      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x000058ac      7339           jae 0x58e7
0x000058ae      6690           nop
0x000058b0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x000058b4      7426           je 0x58dc                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x000058b6      488b5608       mov rdx, qword [rsi + 8]
0x000058ba      b901000000     mov ecx, 1
0x000058bf      4885d2         test rdx, rdx
0x000058c2      7411           je 0x58d5
0x000058c4      0f1f4000       nop dword [rax]
0x000058c8      488b5208       mov rdx, qword [rdx + 8]
0x000058cc      4883c101       add rcx, 1
0x000058d0      4885d2         test rdx, rdx
0x000058d3      75f3           jne 0x58c8
0x000058d5      4839c8         cmp rax, rcx
0x000058d8      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x000058dc      4883c610       add rsi, 0x10
0x000058e0      4839fe         cmp rsi, rdi
0x000058e3      72cb           jb 0x58b0
0x000058e5      f3c3           ret
0x000058e7      f3c3           ret
0x000058e9      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x000058f0      488b0f         mov rcx, qword [rdi]
0x000058f3      4c8b4708       mov r8, qword [rdi + 8]
0x000058f7      31d2           xor edx, edx
0x000058f9      31f6           xor esi, esi
0x000058fb      4c39c1         cmp rcx, r8
0x000058fe      7336           jae 0x5936
0x00005900      48833900       cmp qword [rcx], 0
0x00005904      7427           je 0x592d
0x00005906      488b4108       mov rax, qword [rcx + 8]
0x0000590a      4883c601       add rsi, 1
0x0000590e      4883c201       add rdx, 1
0x00005912      4885c0         test rax, rax
0x00005915      7416           je 0x592d
0x00005917      660f1f840000.  nop word [rax + rax]
0x00005920      488b4008       mov rax, qword [rax + 8]
0x00005924      4883c201       add rdx, 1
0x00005928      4885c0         test rax, rax
0x0000592b      75f3           jne 0x5920
0x0000592d      4883c110       add rcx, 0x10
0x00005931      4c39c1         cmp rcx, r8
0x00005934      72ca           jb 0x5900
0x00005936      31c0           xor eax, eax
0x00005938      48397718       cmp qword [rdi + 0x18], rsi
0x0000593c      7402           je 0x5940
0x0000593e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00005940      48395720       cmp qword [rdi + 0x20], rdx
0x00005944      0f94c0         sete al
0x00005947      c3             ret
0x00005948      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x00005950      4155           push r13
0x00005952      4154           push r12
0x00005954      4989f4         mov r12, rsi
0x00005957      55             push rbp
0x00005958      53             push rbx
0x00005959      31db           xor ebx, ebx
0x0000595b      4883ec08       sub rsp, 8
0x0000595f      488b37         mov rsi, qword [rdi]
0x00005962      488b4f20       mov rcx, qword [rdi + 0x20]
0x00005966      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000596a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000596e      488b7f08       mov rdi, qword [rdi + 8]
0x00005972      4839fe         cmp rsi, rdi
0x00005975      733e           jae 0x59b5
0x00005977      660f1f840000.  nop word [rax + rax]
0x00005980      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x00005984      7426           je 0x59ac
0x00005986      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000598a      ba01000000     mov edx, 1
0x0000598f      4885c0         test rax, rax
0x00005992      7411           je 0x59a5
0x00005994      0f1f4000       nop dword [rax]
0x00005998      488b4008       mov rax, qword [rax + 8]
0x0000599c      4883c201       add rdx, 1
0x000059a0      4885c0         test rax, rax
0x000059a3      75f3           jne 0x5998
0x000059a5      4839d3         cmp rbx, rdx
0x000059a8      480f42da       cmovb rbx, rdx
0x000059ac      4883c610       add rsi, 0x10
0x000059b0      4839fe         cmp rsi, rdi
0x000059b3      72cb           jb 0x5980
0x000059b5      488d156a6600.  lea rdx, str.entries:__________lu       ; 0xc026 ; "# entries:         %lu\n"
0x000059bc      be01000000     mov esi, 1
0x000059c1      4c89e7         mov rdi, r12
0x000059c4      31c0           xor eax, eax
0x000059c6      e895c8ffff     call sym.imp.__fprintf_chk
0x000059cb      488d156c6600.  lea rdx, str.buckets:__________lu       ; 0xc03e ; "# buckets:         %lu\n"
0x000059d2      31c0           xor eax, eax
0x000059d4      4889e9         mov rcx, rbp
0x000059d7      be01000000     mov esi, 1
0x000059dc      4c89e7         mov rdi, r12
0x000059df      e87cc8ffff     call sym.imp.__fprintf_chk
0x000059e4      4d85ed         test r13, r13
0x000059e7      7867           js 0x5a50
0x000059e9      660fefc0       pxor xmm0, xmm0
0x000059ed      4885ed         test rbp, rbp
0x000059f0      f2490f2ac5     cvtsi2sd xmm0, r13
0x000059f5      f20f5905db66.  mulsd xmm0, qword [0x0000c0d8]          ; ../coreutils-8.31/lib/hash.c:-174
0x000059fd      787a           js 0x5a79                               ; ../coreutils-8.31/lib/hash.c:-170
0x000059ff      660fefc9       pxor xmm1, xmm1
0x00005a03      f2480f2acd     cvtsi2sd xmm1, rbp
0x00005a08      f20f5ec1       divsd xmm0, xmm1
0x00005a0c      488d155d6600.  lea rdx, str.buckets_used:_____lu___.2f ; 0xc070 ; "# buckets used:    %lu (%.2f%%)\n"
0x00005a13      4c89e9         mov rcx, r13
0x00005a16      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x00005a19      be01000000     mov esi, 1
0x00005a1e      b801000000     mov eax, 1
0x00005a23      e838c8ffff     call sym.imp.__fprintf_chk
0x00005a28      4883c408       add rsp, 8
0x00005a2c      4889d9         mov rcx, rbx
0x00005a2f      4c89e7         mov rdi, r12
0x00005a32      5b             pop rbx
0x00005a33      5d             pop rbp
0x00005a34      415c           pop r12
0x00005a36      415d           pop r13
0x00005a38      488d15176600.  lea rdx, str.max_bucket_length:__lu     ; 0xc056 ; "max bucket length: %lu\n"
0x00005a3f      be01000000     mov esi, 1
0x00005a44      31c0           xor eax, eax
0x00005a46      e915c8ffff     jmp sym.imp.__fprintf_chk
0x00005a4b      0f1f440000     nop dword [rax + rax]
0x00005a50      4c89e8         mov rax, r13
0x00005a53      4c89ea         mov rdx, r13
0x00005a56      660fefc0       pxor xmm0, xmm0
0x00005a5a      48d1e8         shr rax, 1
0x00005a5d      83e201         and edx, 1
0x00005a60      4809d0         or rax, rdx
0x00005a63      4885ed         test rbp, rbp
0x00005a66      f2480f2ac0     cvtsi2sd xmm0, rax
0x00005a6b      f20f58c0       addsd xmm0, xmm0
0x00005a6f      f20f59056166.  mulsd xmm0, qword [0x0000c0d8]
0x00005a77      7986           jns 0x59ff                              ; ../coreutils-8.31/lib/hash.c:-138
0x00005a79      4889e8         mov rax, rbp
0x00005a7c      660fefc9       pxor xmm1, xmm1
0x00005a80      48d1e8         shr rax, 1
0x00005a83      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x00005a86      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x00005a89      f2480f2ac8     cvtsi2sd xmm1, rax
0x00005a8e      f20f58c9       addsd xmm1, xmm1
0x00005a92      e971ffffff     jmp 0x5a08
0x00005a97      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x00005aa0      4154           push r12
0x00005aa2      55             push rbp
0x00005aa3      4989fc         mov r12, rdi
0x00005aa6      53             push rbx
0x00005aa7      4889f5         mov rbp, rsi
0x00005aaa      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x00005aaf      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x00005ab2      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x00005ab5      7426           je 0x5add                               ; ../coreutils-8.31/lib/hash.c:-120
0x00005ab7      4889c3         mov rbx, rax
0x00005aba      eb07           jmp 0x5ac3
0x00005abc      0f1f4000       nop dword [rax]
0x00005ac0      488b33         mov rsi, qword [rbx]
0x00005ac3      4839ee         cmp rsi, rbp
0x00005ac6      7417           je 0x5adf                               ; ../coreutils-8.31/lib/hash.c:-116
0x00005ac8      4889ef         mov rdi, rbp
0x00005acb      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x00005ad0      84c0           test al, al
0x00005ad2      751c           jne 0x5af0
0x00005ad4      488b5b08       mov rbx, qword [rbx + 8]
0x00005ad8      4885db         test rbx, rbx
0x00005adb      75e3           jne 0x5ac0
0x00005add      31f6           xor esi, esi
0x00005adf      5b             pop rbx
0x00005ae0      4889f0         mov rax, rsi
0x00005ae3      5d             pop rbp
0x00005ae4      415c           pop r12
0x00005ae6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x00005ae7      660f1f840000.  nop word [rax + rax]
0x00005af0      488b33         mov rsi, qword [rbx]
0x00005af3      5b             pop rbx
0x00005af4      5d             pop rbp
0x00005af5      4889f0         mov rax, rsi
0x00005af8      415c           pop r12
0x00005afa      c3             ret
0x00005afb      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x00005b00      48837f2000     cmp qword [rdi + 0x20], 0
0x00005b05      742c           je 0x5b33
0x00005b07      488b17         mov rdx, qword [rdi]
0x00005b0a      488b4f08       mov rcx, qword [rdi + 8]
0x00005b0e      4839ca         cmp rdx, rcx
0x00005b11      7325           jae 0x5b38
0x00005b13      488b02         mov rax, qword [rdx]
0x00005b16      4885c0         test rax, rax
0x00005b19      751b           jne 0x5b36
0x00005b1b      0f1f440000     nop dword [rax + rax]
0x00005b20      4883c210       add rdx, 0x10
0x00005b24      4839ca         cmp rdx, rcx
0x00005b27      730f           jae 0x5b38                              ; ../coreutils-8.31/lib/hash.c:-97
0x00005b29      488b02         mov rax, qword [rdx]
0x00005b2c      4885c0         test rax, rax
0x00005b2f      74ef           je 0x5b20
0x00005b31      f3c3           ret
0x00005b33      31c0           xor eax, eax
0x00005b35      c3             ret
0x00005b36      f3c3           ret
0x00005b38      4883ec08       sub rsp, 8
0x00005b3c      e87fc2ffff     call sym.imp.abort
0x00005b41      0f1f440000     nop dword [rax + rax]
0x00005b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x00005b50      55             push rbp
0x00005b51      53             push rbx
0x00005b52      4889fd         mov rbp, rdi
0x00005b55      4889f3         mov rbx, rsi
0x00005b58      4883ec08       sub rsp, 8
0x00005b5c      e8fff9ffff     call sym.safe_hasher
0x00005b61      4889c2         mov rdx, rax
0x00005b64      4889c1         mov rcx, rax
0x00005b67      488b02         mov rax, qword [rdx]
0x00005b6a      488b5208       mov rdx, qword [rdx + 8]
0x00005b6e      4839d8         cmp rax, rbx
0x00005b71      7416           je 0x5b89
0x00005b73      0f1f440000     nop dword [rax + rax]
0x00005b78      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x00005b7b      7411           je 0x5b8e
0x00005b7d      488b02         mov rax, qword [rdx]
0x00005b80      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x00005b84      4839d8         cmp rax, rbx
0x00005b87      75ef           jne 0x5b78
0x00005b89      4885d2         test rdx, rdx
0x00005b8c      752a           jne 0x5bb8
0x00005b8e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x00005b92      eb0c           jmp 0x5ba0
0x00005b94      0f1f4000       nop dword [rax]
0x00005b98      488b01         mov rax, qword [rcx]
0x00005b9b      4885c0         test rax, rax
0x00005b9e      750b           jne 0x5bab
0x00005ba0      4883c110       add rcx, 0x10
0x00005ba4      4839ca         cmp rdx, rcx
0x00005ba7      77ef           ja 0x5b98
0x00005ba9      31c0           xor eax, eax
0x00005bab      4883c408       add rsp, 8
0x00005baf      5b             pop rbx
0x00005bb0      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x00005bb1      c3             ret
0x00005bb2      660f1f440000   nop word [rax + rax]
0x00005bb8      488b02         mov rax, qword [rdx]
0x00005bbb      4883c408       add rsp, 8
0x00005bbf      5b             pop rbx
0x00005bc0      5d             pop rbp
0x00005bc1      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x00005bc2      0f1f4000       nop dword [rax]
0x00005bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x00005bd0      4c8b0f         mov r9, qword [rdi]
0x00005bd3      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x00005bd7      7659           jbe 0x5c32
0x00005bd9      4531c0         xor r8d, r8d
0x00005bdc      498b09         mov rcx, qword [r9]
0x00005bdf      4885c9         test rcx, rcx
0x00005be2      7439           je 0x5c1d                               ; ../coreutils-8.31/lib/hash.c:-47
0x00005be4      4c39c2         cmp rdx, r8
0x00005be7      763e           jbe 0x5c27
0x00005be9      4a890cc6       mov qword [rsi + r8*8], rcx
0x00005bed      498b4908       mov rcx, qword [r9 + 8]
0x00005bf1      498d4001       lea rax, [r8 + 1]
0x00005bf5      4885c9         test rcx, rcx
0x00005bf8      7420           je 0x5c1a
0x00005bfa      660f1f440000   nop word [rax + rax]
0x00005c00      4839c2         cmp rdx, rax
0x00005c03      742b           je 0x5c30                               ; ../coreutils-8.31/lib/hash.c:-3
0x00005c05      4c8b01         mov r8, qword [rcx]
0x00005c08      4883c001       add rax, 1
0x00005c0c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x00005c11      488b4908       mov rcx, qword [rcx + 8]
0x00005c15      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x00005c18      75e6           jne 0x5c00
0x00005c1a      4989c0         mov r8, rax
0x00005c1d      4983c110       add r9, 0x10
0x00005c21      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x00005c25      77b5           ja 0x5bdc
0x00005c27      4c89c0         mov rax, r8
0x00005c2a      c3             ret
0x00005c2b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x00005c30      f3c3           ret
0x00005c32      31c0           xor eax, eax
0x00005c34      c3             ret
0x00005c35      90             nop
0x00005c36      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00005c40      4157           push r15
0x00005c42      4156           push r14
0x00005c44      4155           push r13
0x00005c46      4154           push r12
0x00005c48      55             push rbp
0x00005c49      53             push rbx
0x00005c4a      4883ec08       sub rsp, 8
0x00005c4e      4c8b37         mov r14, qword [rdi]
0x00005c51      4c397708       cmp qword [rdi + 8], r14
0x00005c55      764f           jbe 0x5ca6
0x00005c57      4989d5         mov r13, rdx
0x00005c5a      4989f4         mov r12, rsi
0x00005c5d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x00005c60      31ed           xor ebp, ebp
0x00005c62      498b3e         mov rdi, qword [r14]
0x00005c65      4885ff         test rdi, rdi
0x00005c68      7420           je 0x5c8a
0x00005c6a      4c89f3         mov rbx, r14
0x00005c6d      eb04           jmp 0x5c73
0x00005c6f      90             nop
0x00005c70      488b3b         mov rdi, qword [rbx]
0x00005c73      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x00005c76      41ffd4         call r12
0x00005c79      84c0           test al, al
0x00005c7b      7417           je 0x5c94
0x00005c7d      488b5b08       mov rbx, qword [rbx + 8]
0x00005c81      4883c501       add rbp, 1
0x00005c85      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x00005c88      75e6           jne 0x5c70
0x00005c8a      4983c610       add r14, 0x10
0x00005c8e      4d397708       cmp qword [r15 + 8], r14
0x00005c92      77ce           ja 0x5c62
0x00005c94      4883c408       add rsp, 8
0x00005c98      4889e8         mov rax, rbp
0x00005c9b      5b             pop rbx
0x00005c9c      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x00005c9d      415c           pop r12
0x00005c9f      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x00005ca1      415e           pop r14
0x00005ca3      415f           pop r15
0x00005ca5      c3             ret
0x00005ca6      31ed           xor ebp, ebp
0x00005ca8      ebea           jmp 0x5c94                              ; ../coreutils-8.31/lib/hash.c:41
0x00005caa      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x00005cb0      0fb60f         movzx ecx, byte [rdi]
0x00005cb3      31d2           xor edx, edx
0x00005cb5      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x00005cb7      7424           je 0x5cdd
0x00005cb9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x00005cc0      4889d0         mov rax, rdx
0x00005cc3      4883c701       add rdi, 1
0x00005cc7      48c1e005       shl rax, 5
0x00005ccb      4829d0         sub rax, rdx
0x00005cce      31d2           xor edx, edx
0x00005cd0      4801c8         add rax, rcx
0x00005cd3      0fb60f         movzx ecx, byte [rdi]
0x00005cd6      48f7f6         div rsi
0x00005cd9      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x00005cdb      75e3           jne 0x5cc0
0x00005cdd      4889d0         mov rax, rdx
0x00005ce0      c3             ret
0x00005ce1      0f1f440000     nop dword [rax + rax]
0x00005ce6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x00005cf0      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x00005cfa      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x00005cfe      488907         mov qword [rdi], rax
0x00005d01      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x00005d0b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x00005d0f      c3             ret
;-- hash_initialize:
0x00005d10      4157           push r15
0x00005d12      4156           push r14
0x00005d14      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x5540 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00005d1b      4155           push r13
0x00005d1d      4154           push r12
0x00005d1f      4989d4         mov r12, rdx
0x00005d22      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x00005d23      53             push rbx
0x00005d24      4989cd         mov r13, rcx
0x00005d27      4889fd         mov rbp, rdi
0x00005d2a      bf50000000     mov edi, 0x50                           ; 'P'
0x00005d2f      4989f7         mov r15, rsi
0x00005d32      4883ec08       sub rsp, 8
0x00005d36      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x00005d39      4d89c6         mov r14, r8
0x00005d3c      4c0f44e0       cmove r12, rax
0x00005d40      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x5550 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00005d47      4885c9         test rcx, rcx
0x00005d4a      4c0f44e8       cmove r13, rax
0x00005d4e      e89dc3ffff     call sym.imp.malloc
0x00005d53      4885c0         test rax, rax
0x00005d56      4889c3         mov rbx, rax
0x00005d59      0f84ab000000   je 0x5e0a
0x00005d5f      4d85ff         test r15, r15
0x00005d62      488d7828       lea rdi, [rax + 0x28]
0x00005d66      0f84b4000000   je 0x5e20
0x00005d6c      4c897828       mov qword [rax + 0x28], r15
0x00005d70      e83bf9ffff     call sym.check_tuning.isra.0
0x00005d75      84c0           test al, al
0x00005d77      0f8483000000   je 0x5e00
0x00005d7d      41807f1000     cmp byte [r15 + 0x10], 0
0x00005d82      0f84f8000000   je 0x5e80
0x00005d88      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x00005d8b      e810f7ffff     call sym.next_prime
0x00005d90      ba08000000     mov edx, 8
0x00005d95      4889c5         mov rbp, rax
0x00005d98      31c9           xor ecx, ecx
0x00005d9a      4889d0         mov rax, rdx
0x00005d9d      48f7e5         mul rbp
0x00005da0      0f8014010000   jo 0x5eba
0x00005da6      4885c0         test rax, rax
0x00005da9      7855           js 0x5e00
0x00005dab      4885c9         test rcx, rcx
0x00005dae      7550           jne 0x5e00
0x00005db0      4885ed         test rbp, rbp
0x00005db3      48896b10       mov qword [rbx + 0x10], rbp
0x00005db7      7447           je 0x5e00
0x00005db9      be10000000     mov esi, 0x10
0x00005dbe      4889ef         mov rdi, rbp
0x00005dc1      e87ac2ffff     call sym.imp.calloc
0x00005dc6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x00005dc9      488903         mov qword [rbx], rax
0x00005dcc      7432           je 0x5e00
0x00005dce      48c1e504       shl rbp, 4
0x00005dd2      48c743180000.  mov qword [rbx + 0x18], 0
0x00005dda      48c743200000.  mov qword [rbx + 0x20], 0
0x00005de2      4801c5         add rbp, rax
0x00005de5      4c896330       mov qword [rbx + 0x30], r12
0x00005de9      4c896b38       mov qword [rbx + 0x38], r13
0x00005ded      48896b08       mov qword [rbx + 8], rbp
0x00005df1      4c897340       mov qword [rbx + 0x40], r14
0x00005df5      48c743480000.  mov qword [rbx + 0x48], 0
0x00005dfd      eb0b           jmp 0x5e0a
0x00005dff      90             nop
0x00005e00      4889df         mov rdi, rbx
0x00005e03      31db           xor ebx, ebx
0x00005e05      e8a6bfffff     call sym.imp.free
0x00005e0a      4883c408       add rsp, 8
0x00005e0e      4889d8         mov rax, rbx
0x00005e11      5b             pop rbx
0x00005e12      5d             pop rbp
0x00005e13      415c           pop r12
0x00005e15      415d           pop r13
0x00005e17      415e           pop r14
0x00005e19      415f           pop r15
0x00005e1b      c3             ret
0x00005e1c      0f1f4000       nop dword [rax]
0x00005e20      488d05796200.  lea rax, obj.default_tuning             ; 0xc0a0
0x00005e27      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x00005e2b      e880f8ffff     call sym.check_tuning.isra.0
0x00005e30      84c0           test al, al
0x00005e32      f30f100d8e62.  movss xmm1, dword [0x0000c0c8]          ; [0xc0c8:4]=0x3f4ccccd
0x00005e3a      74c4           je 0x5e00
0x00005e3c      4885ed         test rbp, rbp
0x00005e3f      784a           js 0x5e8b
0x00005e41      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00005e45      f3480f2ac5     cvtsi2ss xmm0, rbp
0x00005e4a      f30f5ec1       divss xmm0, xmm1
0x00005e4e      0f2e05776200.  ucomiss xmm0, dword [0x0000c0cc]
0x00005e55      73a9           jae 0x5e00
0x00005e57      0f2e05726200.  ucomiss xmm0, dword [0x0000c0d0]
0x00005e5e      7250           jb 0x5eb0
0x00005e60      f30f5c056862.  subss xmm0, dword [0x0000c0d0]
0x00005e68      48b800000000.  movabs rax, 0x8000000000000000
0x00005e72      f3480f2ce8     cvttss2si rbp, xmm0
0x00005e77      4831c5         xor rbp, rax
0x00005e7a      e909ffffff     jmp 0x5d88
0x00005e7f      90             nop
0x00005e80      4885ed         test rbp, rbp
0x00005e83      f3410f104f08   movss xmm1, dword [r15 + 8]
0x00005e89      79b6           jns 0x5e41                              ; ../coreutils-8.31/lib/hash.c:-146
0x00005e8b      4889e8         mov rax, rbp
0x00005e8e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x00005e92      48d1e8         shr rax, 1
0x00005e95      83e501         and ebp, 1
0x00005e98      4809e8         or rax, rbp
0x00005e9b      f3480f2ac0     cvtsi2ss xmm0, rax
0x00005ea0      f30f58c0       addss xmm0, xmm0
0x00005ea4      eba4           jmp 0x5e4a
0x00005ea6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005eb0      f3480f2ce8     cvttss2si rbp, xmm0
0x00005eb5      e9cefeffff     jmp 0x5d88
0x00005eba      b901000000     mov ecx, 1
0x00005ebf      e9e2feffff     jmp 0x5da6
0x00005ec4      6690           nop
0x00005ec6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x00005ed0      4154           push r12
0x00005ed2      55             push rbp
0x00005ed3      4889fd         mov rbp, rdi
0x00005ed6      53             push rbx
0x00005ed7      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x00005eda      4c3b6708       cmp r12, qword [rdi + 8]
0x00005ede      736b           jae 0x5f4b
0x00005ee0      49833c2400     cmp qword [r12], 0
0x00005ee5      745a           je 0x5f41
0x00005ee7      498b5c2408     mov rbx, qword [r12 + 8]
0x00005eec      488b4540       mov rax, qword [rbp + 0x40]
0x00005ef0      4885db         test rbx, rbx
0x00005ef3      7430           je 0x5f25
0x00005ef5      0f1f00         nop dword [rax]
0x00005ef8      4885c0         test rax, rax
0x00005efb      7409           je 0x5f06
0x00005efd      488b3b         mov rdi, qword [rbx]
0x00005f00      ffd0           call rax
0x00005f02      488b4540       mov rax, qword [rbp + 0x40]
0x00005f06      488b5308       mov rdx, qword [rbx + 8]
0x00005f0a      488b4d48       mov rcx, qword [rbp + 0x48]
0x00005f0e      48c703000000.  mov qword [rbx], 0
0x00005f15      4885d2         test rdx, rdx
0x00005f18      48894b08       mov qword [rbx + 8], rcx
0x00005f1c      48895d48       mov qword [rbp + 0x48], rbx
0x00005f20      4889d3         mov rbx, rdx
0x00005f23      75d3           jne 0x5ef8
0x00005f25      4885c0         test rax, rax
0x00005f28      7406           je 0x5f30
0x00005f2a      498b3c24       mov rdi, qword [r12]
0x00005f2e      ffd0           call rax
0x00005f30      49c704240000.  mov qword [r12], 0
0x00005f38      49c744240800.  mov qword [r12 + 8], 0
0x00005f41      4983c410       add r12, 0x10
0x00005f45      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00005f49      7795           ja 0x5ee0
0x00005f4b      48c745180000.  mov qword [rbp + 0x18], 0
0x00005f53      48c745200000.  mov qword [rbp + 0x20], 0
0x00005f5b      5b             pop rbx
0x00005f5c      5d             pop rbp
0x00005f5d      415c           pop r12
0x00005f5f      c3             ret
;-- hash_free:
0x00005f60      4154           push r12
0x00005f62      55             push rbp
0x00005f63      4989fc         mov r12, rdi
0x00005f66      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00005f67      48837f4000     cmp qword [rdi + 0x40], 0
0x00005f6c      488b2f         mov rbp, qword [rdi]
0x00005f6f      488b4708       mov rax, qword [rdi + 8]
0x00005f73      744e           je 0x5fc3                               ; ../coreutils-8.31/lib/hash.c:-305
0x00005f75      48837f2000     cmp qword [rdi + 0x20], 0
0x00005f7a      7447           je 0x5fc3
0x00005f7c      4839c5         cmp rbp, rax
0x00005f7f      737b           jae 0x5ffc
0x00005f81      0f1f80000000.  nop dword [rax]
0x00005f88      488b7d00       mov rdi, qword [rbp]
0x00005f8c      4885ff         test rdi, rdi
0x00005f8f      7425           je 0x5fb6
0x00005f91      4889eb         mov rbx, rbp
0x00005f94      eb0d           jmp 0x5fa3
0x00005f96      662e0f1f8400.  nop word cs:[rax + rax]
0x00005fa0      488b3b         mov rdi, qword [rbx]
0x00005fa3      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x00005fa8      488b5b08       mov rbx, qword [rbx + 8]
0x00005fac      4885db         test rbx, rbx
0x00005faf      75ef           jne 0x5fa0
0x00005fb1      498b442408     mov rax, qword [r12 + 8]
0x00005fb6      4883c510       add rbp, 0x10
0x00005fba      4839e8         cmp rax, rbp
0x00005fbd      77c9           ja 0x5f88
0x00005fbf      498b2c24       mov rbp, qword [r12]
0x00005fc3      4839c5         cmp rbp, rax
0x00005fc6      7334           jae 0x5ffc
0x00005fc8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x00005fd0      488b7d08       mov rdi, qword [rbp + 8]
0x00005fd4      4885ff         test rdi, rdi
0x00005fd7      7418           je 0x5ff1
0x00005fd9      0f1f80000000.  nop dword [rax]
0x00005fe0      488b5f08       mov rbx, qword [rdi + 8]
0x00005fe4      e8c7bdffff     call sym.imp.free                       ; ../coreutils-8.31/lib/hash.c:98
0x00005fe9      4885db         test rbx, rbx
0x00005fec      4889df         mov rdi, rbx
0x00005fef      75ef           jne 0x5fe0
0x00005ff1      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00005ff5      49396c2408     cmp qword [r12 + 8], rbp
0x00005ffa      77d4           ja 0x5fd0
0x00005ffc      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00006001      4885ff         test rdi, rdi
0x00006004      741b           je 0x6021
0x00006006      662e0f1f8400.  nop word cs:[rax + rax]
0x00006010      488b5f08       mov rbx, qword [rdi + 8]
0x00006014      e897bdffff     call sym.imp.free
0x00006019      4885db         test rbx, rbx
0x0000601c      4889df         mov rdi, rbx
0x0000601f      75ef           jne 0x6010
0x00006021      498b3c24       mov rdi, qword [r12]
0x00006025      e886bdffff     call sym.imp.free
0x0000602a      5b             pop rbx
0x0000602b      4c89e7         mov rdi, r12
0x0000602e      5d             pop rbp
0x0000602f      415c           pop r12
0x00006031      e97abdffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/hash.c:107
0x00006036      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00006040      4154           push r12
0x00006042      55             push rbp
0x00006043      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00006046      53             push rbx
0x00006047      4883ec60       sub rsp, 0x60
0x0000604b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000604f      64488b042528.  mov rax, qword fs:[0x28]
0x00006058      4889442458     mov qword [rsp + 0x58], rax
0x0000605d      31c0           xor eax, eax
0x0000605f      41807c241000   cmp byte [r12 + 0x10], 0
0x00006065      7551           jne 0x60b8
0x00006067      4885f6         test rsi, rsi
0x0000606a      0f8878010000   js 0x61e8
0x00006070      660fefc0       pxor xmm0, xmm0
0x00006074      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x00006079      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x00006080      0f2e05456000.  ucomiss xmm0, dword [0x0000c0cc]
0x00006087      0f8333010000   jae 0x61c0
0x0000608d      0f2e053c6000.  ucomiss xmm0, dword [0x0000c0d0]
0x00006094      0f8276010000   jb 0x6210
0x0000609a      f30f5c052e60.  subss xmm0, dword [0x0000c0d0]          ; ../coreutils-8.31/lib/hash.c:161
0x000060a2      48b800000000.  movabs rax, 0x8000000000000000
0x000060ac      f3480f2cf0     cvttss2si rsi, xmm0
0x000060b1      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x000060b4      0f1f4000       nop dword [rax]
0x000060b8      4889f7         mov rdi, rsi
0x000060bb      e8e0f3ffff     call sym.next_prime
0x000060c0      ba08000000     mov edx, 8
0x000060c5      4889c3         mov rbx, rax
0x000060c8      31c9           xor ecx, ecx
0x000060ca      4889d0         mov rax, rdx
0x000060cd      48f7e3         mul rbx
0x000060d0      0f8099010000   jo 0x626f
0x000060d6      4885c0         test rax, rax
0x000060d9      b801000000     mov eax, 1
0x000060de      480f48c8       cmovs rcx, rax
0x000060e2      4885db         test rbx, rbx
0x000060e5      0f84d5000000   je 0x61c0
0x000060eb      83e101         and ecx, 1
0x000060ee      0f85cc000000   jne 0x61c0
0x000060f4      48395d10       cmp qword [rbp + 0x10], rbx
0x000060f8      0f8422010000   je 0x6220
0x000060fe      be10000000     mov esi, 0x10
0x00006103      4889df         mov rdi, rbx
0x00006106      e835bfffff     call sym.imp.calloc
0x0000610b      4885c0         test rax, rax
0x0000610e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00006112      0f84a8000000   je 0x61c0
0x00006118      48895c2410     mov qword [rsp + 0x10], rbx
0x0000611d      48c1e304       shl rbx, 4
0x00006121      4c89642428     mov qword [rsp + 0x28], r12
0x00006126      4801c3         add rbx, rax
0x00006129      488b4530       mov rax, qword [rbp + 0x30]
0x0000612d      4989e4         mov r12, rsp
0x00006130      31d2           xor edx, edx
0x00006132      4889ee         mov rsi, rbp
0x00006135      4c89e7         mov rdi, r12
0x00006138      48895c2408     mov qword [rsp + 8], rbx
0x0000613d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006146      4889442430     mov qword [rsp + 0x30], rax
0x0000614b      488b4538       mov rax, qword [rbp + 0x38]
0x0000614f      48c744242000.  mov qword [rsp + 0x20], 0
0x00006158      4889442438     mov qword [rsp + 0x38], rax
0x0000615d      488b4540       mov rax, qword [rbp + 0x40]
0x00006161      4889442440     mov qword [rsp + 0x40], rax
0x00006166      488b4548       mov rax, qword [rbp + 0x48]
0x0000616a      4889442448     mov qword [rsp + 0x48], rax
0x0000616f      e8bcf5ffff     call sym.transfer_entries
0x00006174      84c0           test al, al
0x00006176      89c3           mov ebx, eax
0x00006178      0f85b2000000   jne 0x6230
0x0000617e      488b442448     mov rax, qword [rsp + 0x48]
0x00006183      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x00006188      4c89e6         mov rsi, r12
0x0000618b      4889ef         mov rdi, rbp
0x0000618e      48894548       mov qword [rbp + 0x48], rax
0x00006192      e899f5ffff     call sym.transfer_entries
0x00006197      84c0           test al, al
0x00006199      0f84da000000   je 0x6279
0x0000619f      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x000061a1      4c89e6         mov rsi, r12
0x000061a4      4889ef         mov rdi, rbp
0x000061a7      e884f5ffff     call sym.transfer_entries
0x000061ac      84c0           test al, al
0x000061ae      0f84c5000000   je 0x6279
0x000061b4      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x000061b8      e8f3bbffff     call sym.imp.free
0x000061bd      eb03           jmp 0x61c2
0x000061bf      90             nop
0x000061c0      31db           xor ebx, ebx
0x000061c2      488b4c2458     mov rcx, qword [rsp + 0x58]
0x000061c7      6448330c2528.  xor rcx, qword fs:[0x28]
0x000061d0      89d8           mov eax, ebx
0x000061d2      0f8592000000   jne 0x626a
0x000061d8      4883c460       add rsp, 0x60
0x000061dc      5b             pop rbx
0x000061dd      5d             pop rbp
0x000061de      415c           pop r12
0x000061e0      c3             ret
0x000061e1      0f1f80000000.  nop dword [rax]
0x000061e8      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x000061eb      660fefc0       pxor xmm0, xmm0
0x000061ef      48d1e8         shr rax, 1
0x000061f2      83e601         and esi, 1
0x000061f5      4809f0         or rax, rsi
0x000061f8      f3480f2ac0     cvtsi2ss xmm0, rax
0x000061fd      f30f58c0       addss xmm0, xmm0
0x00006201      e973feffff     jmp 0x6079
0x00006206      662e0f1f8400.  nop word cs:[rax + rax]
0x00006210      f3480f2cf0     cvttss2si rsi, xmm0
0x00006215      e99efeffff     jmp 0x60b8
0x0000621a      660f1f440000   nop word [rax + rax]
0x00006220      bb01000000     mov ebx, 1
0x00006225      eb9b           jmp 0x61c2
0x00006227      660f1f840000.  nop word [rax + rax]
0x00006230      488b7d00       mov rdi, qword [rbp]
0x00006234      e877bbffff     call sym.imp.free
0x00006239      488b0424       mov rax, qword [rsp]
0x0000623d      48894500       mov qword [rbp], rax
0x00006241      488b442408     mov rax, qword [rsp + 8]
0x00006246      48894508       mov qword [rbp + 8], rax
0x0000624a      488b442410     mov rax, qword [rsp + 0x10]
0x0000624f      48894510       mov qword [rbp + 0x10], rax
0x00006253      488b442418     mov rax, qword [rsp + 0x18]
0x00006258      48894518       mov qword [rbp + 0x18], rax
0x0000625c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00006261      48894548       mov qword [rbp + 0x48], rax
0x00006265      e958ffffff     jmp 0x61c2
0x0000626a      e8b1bcffff     call sym.imp.__stack_chk_fail
0x0000626f      b901000000     mov ecx, 1
0x00006274      e95dfeffff     jmp 0x60d6
0x00006279      e842bbffff     call sym.imp.abort
0x0000627e      6690           nop
;-- hash_insert_if_absent:
0x00006280      4155           push r13
0x00006282      4154           push r12
0x00006284      55             push rbp
0x00006285      53             push rbx
0x00006286      4883ec18       sub rsp, 0x18
0x0000628a      64488b042528.  mov rax, qword fs:[0x28]
0x00006293      4889442408     mov qword [rsp + 8], rax
0x00006298      31c0           xor eax, eax
0x0000629a      4885f6         test rsi, rsi
0x0000629d      0f84ba010000   je 0x645d
0x000062a3      4989e4         mov r12, rsp
0x000062a6      31c9           xor ecx, ecx
0x000062a8      4989d5         mov r13, rdx
0x000062ab      4c89e2         mov rdx, r12
0x000062ae      4889fb         mov rbx, rdi
0x000062b1      4889f5         mov rbp, rsi
0x000062b4      e8d7f2ffff     call sym.hash_find_entry
0x000062b9      4885c0         test rax, rax
0x000062bc      4889c2         mov rdx, rax
0x000062bf      742f           je 0x62f0
0x000062c1      31c0           xor eax, eax
0x000062c3      4d85ed         test r13, r13
0x000062c6      7404           je 0x62cc
0x000062c8      49895500       mov qword [r13], rdx
0x000062cc      488b4c2408     mov rcx, qword [rsp + 8]
0x000062d1      6448330c2528.  xor rcx, qword fs:[0x28]
0x000062da      0f851f020000   jne 0x64ff
0x000062e0      4883c418       add rsp, 0x18
0x000062e4      5b             pop rbx
0x000062e5      5d             pop rbp
0x000062e6      415c           pop r12
0x000062e8      415d           pop r13
0x000062ea      c3             ret
0x000062eb      0f1f440000     nop dword [rax + rax]
0x000062f0      488b4318       mov rax, qword [rbx + 0x18]
0x000062f4      4885c0         test rax, rax
0x000062f7      7877           js 0x6370
0x000062f9      660fefc9       pxor xmm1, xmm1
0x000062fd      488b5328       mov rdx, qword [rbx + 0x28]
0x00006301      f3480f2ac8     cvtsi2ss xmm1, rax
0x00006306      488b4310       mov rax, qword [rbx + 0x10]
0x0000630a      4885c0         test rax, rax
0x0000630d      0f8887000000   js 0x639a
0x00006313      660fefc0       pxor xmm0, xmm0
0x00006317      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000631c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00006321      0f2ec8         ucomiss xmm1, xmm0
0x00006324      0f8796000000   ja 0x63c0
0x0000632a      4c8b2424       mov r12, qword [rsp]
0x0000632e      49833c2400     cmp qword [r12], 0
0x00006333      0f842f010000   je 0x6468
0x00006339      488b4348       mov rax, qword [rbx + 0x48]
0x0000633d      4885c0         test rax, rax
0x00006340      0f843a010000   je 0x6480
0x00006346      488b5008       mov rdx, qword [rax + 8]
0x0000634a      48895348       mov qword [rbx + 0x48], rdx
0x0000634e      498b542408     mov rdx, qword [r12 + 8]
0x00006353      488928         mov qword [rax], rbp
0x00006356      48895008       mov qword [rax + 8], rdx
0x0000635a      4989442408     mov qword [r12 + 8], rax
0x0000635f      b801000000     mov eax, 1
0x00006364      4883432001     add qword [rbx + 0x20], 1
0x00006369      e95effffff     jmp 0x62cc
0x0000636e      6690           nop
0x00006370      4889c2         mov rdx, rax
0x00006373      660fefc9       pxor xmm1, xmm1
0x00006377      83e001         and eax, 1
0x0000637a      48d1ea         shr rdx, 1
0x0000637d      4809c2         or rdx, rax
0x00006380      488b4310       mov rax, qword [rbx + 0x10]
0x00006384      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00006389      488b5328       mov rdx, qword [rbx + 0x28]
0x0000638d      4885c0         test rax, rax
0x00006390      f30f58c9       addss xmm1, xmm1
0x00006394      0f8979ffffff   jns 0x6313
0x0000639a      4889c1         mov rcx, rax
0x0000639d      660fefc0       pxor xmm0, xmm0
0x000063a1      48d1e9         shr rcx, 1
0x000063a4      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x000063a7      4809c1         or rcx, rax
0x000063aa      f3480f2ac1     cvtsi2ss xmm0, rcx
0x000063af      f30f58c0       addss xmm0, xmm0
0x000063b3      e964ffffff     jmp 0x631c
0x000063b8      0f1f84000000.  nop dword [rax + rax]
0x000063c0      488d7b28       lea rdi, [rbx + 0x28]
0x000063c4      e8e7f2ffff     call sym.check_tuning.isra.0
0x000063c9      488b4310       mov rax, qword [rbx + 0x10]
0x000063cd      488b5328       mov rdx, qword [rbx + 0x28]
0x000063d1      4885c0         test rax, rax
0x000063d4      f30f105208     movss xmm2, dword [rdx + 8]
0x000063d9      0f88c1000000   js 0x64a0
0x000063df      660fefc0       pxor xmm0, xmm0
0x000063e3      f3480f2ac0     cvtsi2ss xmm0, rax
0x000063e8      488b4318       mov rax, qword [rbx + 0x18]
0x000063ec      4885c0         test rax, rax
0x000063ef      0f88cb000000   js 0x64c0
0x000063f5      660fefc9       pxor xmm1, xmm1
0x000063f9      f3480f2ac8     cvtsi2ss xmm1, rax
0x000063fe      0f28da         movaps xmm3, xmm2
0x00006401      f30f59d8       mulss xmm3, xmm0
0x00006405      0f2ecb         ucomiss xmm1, xmm3
0x00006408      0f861cffffff   jbe 0x632a
0x0000640e      807a1000       cmp byte [rdx + 0x10], 0
0x00006412      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00006417      7504           jne 0x641d
0x00006419      f30f59c2       mulss xmm0, xmm2
0x0000641d      0f2e05a85c00.  ucomiss xmm0, dword [0x0000c0cc]
0x00006424      736d           jae 0x6493
0x00006426      0f2e05a35c00.  ucomiss xmm0, dword [0x0000c0d0]
0x0000642d      0f83ad000000   jae 0x64e0
0x00006433      f3480f2cf0     cvttss2si rsi, xmm0
0x00006438      4889df         mov rdi, rbx
0x0000643b      e800fcffff     call sym.hash_rehash
0x00006440      84c0           test al, al
0x00006442      744f           je 0x6493
0x00006444      31c9           xor ecx, ecx
0x00006446      4c89e2         mov rdx, r12
0x00006449      4889ee         mov rsi, rbp
0x0000644c      4889df         mov rdi, rbx
0x0000644f      e83cf1ffff     call sym.hash_find_entry
0x00006454      4885c0         test rax, rax
0x00006457      0f84cdfeffff   je 0x632a
0x0000645d      e85eb9ffff     call sym.imp.abort
0x00006462      660f1f440000   nop word [rax + rax]
0x00006468      49892c24       mov qword [r12], rbp
0x0000646c      b801000000     mov eax, 1
0x00006471      4883432001     add qword [rbx + 0x20], 1
0x00006476      4883431801     add qword [rbx + 0x18], 1
0x0000647b      e94cfeffff     jmp 0x62cc
0x00006480      bf10000000     mov edi, 0x10
0x00006485      e866bcffff     call sym.imp.malloc
0x0000648a      4885c0         test rax, rax
0x0000648d      0f85bbfeffff   jne 0x634e
0x00006493      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006498      e92ffeffff     jmp 0x62cc
0x0000649d      0f1f00         nop dword [rax]
0x000064a0      4889c1         mov rcx, rax
0x000064a3      660fefc0       pxor xmm0, xmm0
0x000064a7      48d1e9         shr rcx, 1
0x000064aa      83e001         and eax, 1
0x000064ad      4809c1         or rcx, rax
0x000064b0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x000064b5      f30f58c0       addss xmm0, xmm0
0x000064b9      e92affffff     jmp 0x63e8
0x000064be      6690           nop
0x000064c0      4889c1         mov rcx, rax
0x000064c3      660fefc9       pxor xmm1, xmm1
0x000064c7      48d1e9         shr rcx, 1
0x000064ca      83e001         and eax, 1
0x000064cd      4809c1         or rcx, rax
0x000064d0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x000064d5      f30f58c9       addss xmm1, xmm1
0x000064d9      e920ffffff     jmp 0x63fe
0x000064de      6690           nop
0x000064e0      f30f5c05e85b.  subss xmm0, dword [0x0000c0d0]
0x000064e8      48b800000000.  movabs rax, 0x8000000000000000
0x000064f2      f3480f2cf0     cvttss2si rsi, xmm0
0x000064f7      4831c6         xor rsi, rax
0x000064fa      e939ffffff     jmp 0x6438
0x000064ff      e81cbaffff     call sym.imp.__stack_chk_fail
0x00006504      6690           nop
0x00006506      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x00006510      53             push rbx
0x00006511      4889f3         mov rbx, rsi
0x00006514      4883ec10       sub rsp, 0x10
0x00006518      4889e2         mov rdx, rsp
0x0000651b      64488b042528.  mov rax, qword fs:[0x28]
0x00006524      4889442408     mov qword [rsp + 8], rax
0x00006529      31c0           xor eax, eax
0x0000652b      e850fdffff     call sym.hash_insert_if_absent
0x00006530      83f8ff         cmp eax, 0xffffffff
0x00006533      742b           je 0x6560
0x00006535      85c0           test eax, eax
0x00006537      7504           jne 0x653d
0x00006539      488b1c24       mov rbx, qword [rsp]
0x0000653d      488b4c2408     mov rcx, qword [rsp + 8]
0x00006542      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000654b      4889d8         mov rax, rbx
0x0000654e      7514           jne 0x6564
0x00006550      4883c410       add rsp, 0x10
0x00006554      5b             pop rbx
0x00006555      c3             ret
0x00006556      662e0f1f8400.  nop word cs:[rax + rax]
0x00006560      31db           xor ebx, ebx
0x00006562      ebd9           jmp 0x653d
0x00006564      e8b7b9ffff     call sym.imp.__stack_chk_fail
0x00006569      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x00006570      4154           push r12
0x00006572      55             push rbp
0x00006573      b901000000     mov ecx, 1
0x00006578      53             push rbx
0x00006579      4889fb         mov rbx, rdi
0x0000657c      4883ec10       sub rsp, 0x10
0x00006580      4889e2         mov rdx, rsp
0x00006583      64488b042528.  mov rax, qword fs:[0x28]
0x0000658c      4889442408     mov qword [rsp + 8], rax
0x00006591      31c0           xor eax, eax
0x00006593      e8f8efffff     call sym.hash_find_entry
0x00006598      4885c0         test rax, rax
0x0000659b      4889c5         mov rbp, rax
0x0000659e      740f           je 0x65af
0x000065a0      488b0424       mov rax, qword [rsp]
0x000065a4      48836b2001     sub qword [rbx + 0x20], 1
0x000065a9      48833800       cmp qword [rax], 0
0x000065ad      7421           je 0x65d0
0x000065af      488b4c2408     mov rcx, qword [rsp + 8]
0x000065b4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000065bd      4889e8         mov rax, rbp
0x000065c0      0f85a8010000   jne 0x676e
0x000065c6      4883c410       add rsp, 0x10
0x000065ca      5b             pop rbx
0x000065cb      5d             pop rbp
0x000065cc      415c           pop r12
0x000065ce      c3             ret
0x000065cf      90             nop
0x000065d0      488b4318       mov rax, qword [rbx + 0x18]
0x000065d4      4883e801       sub rax, 1
0x000065d8      4885c0         test rax, rax
0x000065db      48894318       mov qword [rbx + 0x18], rax
0x000065df      0f88fb000000   js 0x66e0
0x000065e5      660fefc0       pxor xmm0, xmm0
0x000065e9      f3480f2ac0     cvtsi2ss xmm0, rax
0x000065ee      488b4310       mov rax, qword [rbx + 0x10]
0x000065f2      488b5328       mov rdx, qword [rbx + 0x28]
0x000065f6      4885c0         test rax, rax
0x000065f9      0f88c1000000   js 0x66c0
0x000065ff      660fefc9       pxor xmm1, xmm1
0x00006603      f3480f2ac8     cvtsi2ss xmm1, rax
0x00006608      f30f590a       mulss xmm1, dword [rdx]
0x0000660c      0f2ec8         ucomiss xmm1, xmm0
0x0000660f      769e           jbe 0x65af
0x00006611      488d7b28       lea rdi, [rbx + 0x28]
0x00006615      e896f0ffff     call sym.check_tuning.isra.0
0x0000661a      488b4310       mov rax, qword [rbx + 0x10]
0x0000661e      488b5328       mov rdx, qword [rbx + 0x28]
0x00006622      4885c0         test rax, rax
0x00006625      0f8825010000   js 0x6750
0x0000662b      660fefc0       pxor xmm0, xmm0
0x0000662f      f3480f2ac0     cvtsi2ss xmm0, rax
0x00006634      488b4318       mov rax, qword [rbx + 0x18]
0x00006638      4885c0         test rax, rax
0x0000663b      0f88ef000000   js 0x6730
0x00006641      660fefc9       pxor xmm1, xmm1
0x00006645      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000664a      f30f1012       movss xmm2, dword [rdx]
0x0000664e      f30f59d0       mulss xmm2, xmm0
0x00006652      0f2ed1         ucomiss xmm2, xmm1
0x00006655      0f8654ffffff   jbe 0x65af
0x0000665b      807a1000       cmp byte [rdx + 0x10], 0
0x0000665f      f30f594204     mulss xmm0, dword [rdx + 4]
0x00006664      0f84b6000000   je 0x6720
0x0000666a      0f2e055f5a00.  ucomiss xmm0, dword [0x0000c0d0]
0x00006671      0f8389000000   jae 0x6700
0x00006677      f3480f2cf0     cvttss2si rsi, xmm0
0x0000667c      4889df         mov rdi, rbx
0x0000667f      e8bcf9ffff     call sym.hash_rehash
0x00006684      84c0           test al, al
0x00006686      0f8523ffffff   jne 0x65af
0x0000668c      488b7b48       mov rdi, qword [rbx + 0x48]
0x00006690      4885ff         test rdi, rdi
0x00006693      7414           je 0x66a9
0x00006695      0f1f00         nop dword [rax]
0x00006698      4c8b6708       mov r12, qword [rdi + 8]
0x0000669c      e80fb7ffff     call sym.imp.free
0x000066a1      4d85e4         test r12, r12
0x000066a4      4c89e7         mov rdi, r12
0x000066a7      75ef           jne 0x6698
0x000066a9      48c743480000.  mov qword [rbx + 0x48], 0
0x000066b1      e9f9feffff     jmp 0x65af
0x000066b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000066c0      4889c1         mov rcx, rax
0x000066c3      660fefc9       pxor xmm1, xmm1
0x000066c7      48d1e9         shr rcx, 1
0x000066ca      83e001         and eax, 1
0x000066cd      4809c1         or rcx, rax
0x000066d0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x000066d5      f30f58c9       addss xmm1, xmm1
0x000066d9      e92affffff     jmp 0x6608
0x000066de      6690           nop
0x000066e0      4889c2         mov rdx, rax
0x000066e3      660fefc0       pxor xmm0, xmm0
0x000066e7      48d1ea         shr rdx, 1
0x000066ea      83e001         and eax, 1
0x000066ed      4809c2         or rdx, rax
0x000066f0      f3480f2ac2     cvtsi2ss xmm0, rdx
0x000066f5      f30f58c0       addss xmm0, xmm0
0x000066f9      e9f0feffff     jmp 0x65ee
0x000066fe      6690           nop
0x00006700      f30f5c05c859.  subss xmm0, dword [0x0000c0d0]
0x00006708      48b800000000.  movabs rax, 0x8000000000000000
0x00006712      f3480f2cf0     cvttss2si rsi, xmm0
0x00006717      4831c6         xor rsi, rax
0x0000671a      e95dffffff     jmp 0x667c
0x0000671f      90             nop
0x00006720      f30f594208     mulss xmm0, dword [rdx + 8]
0x00006725      e940ffffff     jmp 0x666a
0x0000672a      660f1f440000   nop word [rax + rax]
0x00006730      4889c1         mov rcx, rax
0x00006733      660fefc9       pxor xmm1, xmm1
0x00006737      48d1e9         shr rcx, 1
0x0000673a      83e001         and eax, 1
0x0000673d      4809c1         or rcx, rax
0x00006740      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00006745      f30f58c9       addss xmm1, xmm1
0x00006749      e9fcfeffff     jmp 0x664a
0x0000674e      6690           nop
0x00006750      4889c1         mov rcx, rax
0x00006753      660fefc0       pxor xmm0, xmm0
0x00006757      48d1e9         shr rcx, 1
0x0000675a      83e001         and eax, 1
0x0000675d      4809c1         or rcx, rax
0x00006760      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00006765      f30f58c0       addss xmm0, xmm0
0x00006769      e9c6feffff     jmp 0x6634
0x0000676e      e8adb7ffff     call sym.imp.__stack_chk_fail
0x00006773      662e0f1f8400.  nop word cs:[rax + rax]
0x0000677d      0f1f00         nop dword [rax]
;-- triple_hash:
0x00006780      55             push rbp                                ; ../coreutils-8.31/lib/hash-triple.c:35
0x00006781      53             push rbx
0x00006782      4889fd         mov rbp, rdi
0x00006785      4889f3         mov rbx, rsi
0x00006788      4883ec08       sub rsp, 8
0x0000678c      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:37
0x0000678f      e89c360000     call sym.hash_pjw
0x00006794      48334508       xor rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash-triple.c:40
0x00006798      31d2           xor edx, edx
0x0000679a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000679e      48f7f3         div rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:40
0x000067a1      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:41
0x000067a2      5d             pop rbp
0x000067a3      4889d0         mov rax, rdx
0x000067a6      c3             ret
0x000067a7      660f1f840000.  nop word [rax + rax]
;-- triple_hash_no_name:
0x000067b0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:46
0x000067b4      31d2           xor edx, edx
0x000067b6      48f7f6         div rsi
0x000067b9      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-triple.c:51
0x000067bc      c3             ret
0x000067bd      0f1f00         nop dword [rax]
;-- triple_compare:
0x000067c0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:56
0x000067c2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:59
0x000067c6      48395708       cmp qword [rdi + 8], rdx
0x000067ca      7404           je 0x67d0
0x000067cc      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:60
0x000067ce      6690           nop
0x000067d0      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:59
0x000067d4      48394f10       cmp qword [rdi + 0x10], rcx
0x000067d8      75f2           jne 0x67cc
0x000067da      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:56
0x000067de      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:59
0x000067e1      488b3f         mov rdi, qword [rdi]
0x000067e4      e8c7220000     call sym.same_name
0x000067e9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:60
0x000067ed      c3             ret
0x000067ee      6690           nop
;-- triple_compare_ino_str:
0x000067f0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:64
0x000067f2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:67
0x000067f6      48395708       cmp qword [rdi + 8], rdx
0x000067fa      7404           je 0x6800
0x000067fc      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:68
0x000067fe      6690           nop
0x00006800      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:67
0x00006804      48394f10       cmp qword [rdi + 0x10], rcx
0x00006808      75f2           jne 0x67fc
0x0000680a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000680e      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:67
0x00006811      488b3f         mov rdi, qword [rdi]
0x00006814      e847b8ffff     call sym.imp.strcmp
0x00006819      85c0           test eax, eax
0x0000681b      0f94c0         sete al
0x0000681e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:68
0x00006822      c3             ret
0x00006823      0f1f00         nop dword [rax]
0x00006826      662e0f1f8400.  nop word cs:[rax + rax]
;-- triple_free:
0x00006830      53             push rbx                                ; ../coreutils-8.31/lib/hash-triple.c:73
0x00006831      4889fb         mov rbx, rdi
0x00006834      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:75
0x00006837      e874b5ffff     call sym.imp.free
0x0000683c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000683f      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:77
0x00006840      e96bb5ffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/hash-triple.c:76
0x00006845      662e0f1f8400.  nop word cs:[rax + rax]
0x0000684f      90             nop
;-- openat_safer:
0x00006850      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x00006854      48894c2438     mov qword [rsp + 0x38], rcx
0x00006859      31c9           xor ecx, ecx
0x0000685b      64488b042528.  mov rax, qword fs:[0x28]
0x00006864      4889442418     mov qword [rsp + 0x18], rax
0x00006869      31c0           xor eax, eax
0x0000686b      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x0000686e      7528           jne 0x6898
0x00006870      31c0           xor eax, eax
0x00006872      e899b6ffff     call sym.imp.openat                     ; fcntl2.h:-83
0x00006877      89c7           mov edi, eax
0x00006879      e832250000     call sym.fd_safer                       ; fcntl2.h:-82
0x0000687e      488b742418     mov rsi, qword [rsp + 0x18]
0x00006883      644833342528.  xor rsi, qword fs:[0x28]
0x0000688c      752b           jne 0x68b9
0x0000688e      4883c458       add rsp, 0x58
0x00006892      c3             ret
0x00006893      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x00006898      488d442460     lea rax, [rsp + 0x60]
0x0000689d      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x2ab0 rip
0x000068a4      8b4c2438       mov ecx, dword [rsp + 0x38]
0x000068a8      4889442408     mov qword [rsp + 8], rax
0x000068ad      488d442420     lea rax, [rsp + 0x20]
0x000068b2      4889442410     mov qword [rsp + 0x10], rax
0x000068b7      ebb7           jmp 0x6870
0x000068b9      e862b6ffff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x000068be      6690           nop
;-- opendirat:
0x000068c0      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x000068c2      4154           push r12
0x000068c4      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x000068ca      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x000068cb      53             push rbx
0x000068cc      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x000068ce      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x000068d1      4883ec08       sub rsp, 8
0x000068d5      e876ffffff     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x000068da      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x000068dc      7852           js 0x6930
0x000068de      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x000068e0      89c3           mov ebx, eax
0x000068e2      e819b9ffff     call sym.imp.fdopendir
0x000068e7      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x000068ea      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x000068ed      7419           je 0x6908                               ; ../coreutils-8.31/lib/opendirat.c:45
0x000068ef      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x000068f3      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x000068f7      4889e8         mov rax, rbp
0x000068fa      5b             pop rbx
0x000068fb      5d             pop rbp
0x000068fc      415c           pop r12
0x000068fe      415d           pop r13
0x00006900      c3             ret
0x00006901      0f1f80000000.  nop dword [rax]
0x00006908      e8c3b4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x0000690d      448b28         mov r13d, dword [rax]
0x00006910      4989c4         mov r12, rax
0x00006913      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x00006915      e8c6b6ffff     call sym.imp.close
0x0000691a      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x0000691d      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x00006921      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x00006925      5b             pop rbx
0x00006926      5d             pop rbp
0x00006927      415c           pop r12
0x00006929      415d           pop r13
0x0000692b      c3             ret
0x0000692c      0f1f4000       nop dword [rax]
0x00006930      4883c408       add rsp, 8
0x00006934      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x00006936      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x00006937      4889e8         mov rax, rbp
0x0000693a      5d             pop rbp
0x0000693b      415c           pop r12
0x0000693d      415d           pop r13
0x0000693f      c3             ret
;-- set_program_name:
0x00006940      4885ff         test rdi, rdi
0x00006943      53             push rbx                                ; ../coreutils-8.31/lib/progname.c:40
0x00006944      7477           je 0x69bd                               ; ../coreutils-8.31/lib/progname.c:51
0x00006946      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000694b      4889fb         mov rbx, rdi
0x0000694e      e82db6ffff     call sym.imp.strrchr
0x00006953      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00006956      7455           je 0x69ad
0x00006958      4c8d4001       lea r8, [rax + 1]
0x0000695c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000695f      4829da         sub rdx, rbx
0x00006962      4883fa06       cmp rdx, 6
0x00006966      7e45           jle 0x69ad
0x00006968      488d70fa       lea rsi, [rax - 6]
0x0000696c      488d3da55700.  lea rdi, str..libs                      ; 0xc118 ; "/.libs/"
0x00006973      b907000000     mov ecx, 7
0x00006978      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000697a      0f97c2         seta dl
0x0000697d      80da00         sbb dl, 0
0x00006980      84d2           test dl, dl
0x00006982      7529           jne 0x69ad
0x00006984      488d3d955700.  lea rdi, [0x0000c120]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000698b      b903000000     mov ecx, 3
0x00006990      4c89c6         mov rsi, r8
0x00006993      4c89c3         mov rbx, r8
0x00006996      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006998      0f97c2         seta dl
0x0000699b      80da00         sbb dl, 0
0x0000699e      84d2           test dl, dl
0x000069a0      750b           jne 0x69ad
0x000069a2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000069a6      48891d139720.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x000069ad      48891d949720.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x210148:8]=0
0x000069b4      48891d2d9720.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2100e8:8]=0
0x000069bb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000069bc      c3             ret
0x000069bd      488b0d3c9720.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x000069c4      488d3d155700.  lea rdi, [0x0000c0e0]                   ; "A NULL argv[0] was passed through an exec system call.\n"
0x000069cb      ba37000000     mov edx, 0x37                           ; '7'
0x000069d0      be01000000     mov esi, 1
0x000069d5      e876b8ffff     call sym.imp.fwrite
0x000069da      e8e1b3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000069df      90             nop
;-- gettext_quote.part.1:
0x000069e0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000069e1      53             push rbx
0x000069e2      4889fd         mov rbp, rdi
0x000069e5      89f3           mov ebx, esi
0x000069e7      4883ec08       sub rsp, 8
0x000069eb      e880340000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000069f0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000069f3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000069f6      80fa55         cmp dl, 0x55
0x000069f9      7475           je 0x6a70
0x000069fb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000069fe      7420           je 0x6a20
0x00006a00      488d052c5700.  lea rax, str.l______l                   ; 0xc133 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006a07      488d15275700.  lea rdx, [0x0000c135]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006a0e      83fb09         cmp ebx, 9
0x00006a11      480f45c2       cmovne rax, rdx
0x00006a15      4883c408       add rsp, 8
0x00006a19      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00006a1a      5d             pop rbp
0x00006a1b      c3             ret
0x00006a1c      0f1f4000       nop dword [rax]
0x00006a20      0fb65001       movzx edx, byte [rax + 1]
0x00006a24      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006a27      80fa42         cmp dl, 0x42
0x00006a2a      75d4           jne 0x6a00
0x00006a2c      80780231       cmp byte [rax + 2], 0x31
0x00006a30      75ce           jne 0x6a00
0x00006a32      80780338       cmp byte [rax + 3], 0x38
0x00006a36      75c8           jne 0x6a00
0x00006a38      80780430       cmp byte [rax + 4], 0x30
0x00006a3c      75c2           jne 0x6a00
0x00006a3e      80780533       cmp byte [rax + 5], 0x33
0x00006a42      75bc           jne 0x6a00
0x00006a44      80780630       cmp byte [rax + 6], 0x30
0x00006a48      75b6           jne 0x6a00
0x00006a4a      80780700       cmp byte [rax + 7], 0
0x00006a4e      75b0           jne 0x6a00
0x00006a50      807d0060       cmp byte [rbp], 0x60
0x00006a54      488d05d15600.  lea rax, [0x0000c12c]
0x00006a5b      488d15ce5600.  lea rdx, [0x0000c130]
0x00006a62      480f45c2       cmovne rax, rdx
0x00006a66      4883c408       add rsp, 8
0x00006a6a      5b             pop rbx
0x00006a6b      5d             pop rbp
0x00006a6c      c3             ret
0x00006a6d      0f1f00         nop dword [rax]
0x00006a70      0fb65001       movzx edx, byte [rax + 1]
0x00006a74      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006a77      80fa54         cmp dl, 0x54
0x00006a7a      7584           jne 0x6a00
0x00006a7c      0fb65002       movzx edx, byte [rax + 2]
0x00006a80      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006a83      80fa46         cmp dl, 0x46
0x00006a86      0f8574ffffff   jne 0x6a00
0x00006a8c      8078032d       cmp byte [rax + 3], 0x2d
0x00006a90      0f856affffff   jne 0x6a00
0x00006a96      80780438       cmp byte [rax + 4], 0x38
0x00006a9a      0f8560ffffff   jne 0x6a00
0x00006aa0      80780500       cmp byte [rax + 5], 0
0x00006aa4      0f8556ffffff   jne 0x6a00
0x00006aaa      807d0060       cmp byte [rbp], 0x60
0x00006aae      488d056f5600.  lea rax, [0x0000c124]                   ; "\u2018"
0x00006ab5      488d156c5600.  lea rdx, [0x0000c128]                   ; "\u2019"
0x00006abc      480f45c2       cmovne rax, rdx
0x00006ac0      4883c408       add rsp, 8
0x00006ac4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00006ac5      5d             pop rbp
0x00006ac6      c3             ret
0x00006ac7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00006ad0      4157           push r15
0x00006ad2      4156           push r14
0x00006ad4      4589c7         mov r15d, r8d
0x00006ad7      4155           push r13
0x00006ad9      4154           push r12
0x00006adb      4989fe         mov r14, rdi
0x00006ade      55             push rbp
0x00006adf      53             push rbx
0x00006ae0      4489cb         mov ebx, r9d
0x00006ae3      4989f5         mov r13, rsi
0x00006ae6      4889cd         mov rbp, rcx
0x00006ae9      83e302         and ebx, 2
0x00006aec      4881ecb80000.  sub rsp, 0xb8
0x00006af3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00006afb      4889542410     mov qword [rsp + 0x10], rdx
0x00006b00      4489442408     mov dword [rsp + 8], r8d
0x00006b05      44894c2478     mov dword [rsp + 0x78], r9d
0x00006b0a      4889442420     mov qword [rsp + 0x20], rax
0x00006b0f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00006b17      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00006b1c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00006b24      4889442460     mov qword [rsp + 0x60], rax
0x00006b29      64488b042528.  mov rax, qword fs:[0x28]
0x00006b32      48898424a800.  mov qword [rsp + 0xa8], rax
0x00006b3a      31c0           xor eax, eax
0x00006b3c      e89fb3ffff     call sym.imp.__ctype_get_mb_cur_max
0x00006b41      4183ff0a       cmp r15d, 0xa
0x00006b45      4889442458     mov qword [rsp + 0x58], rax
0x00006b4a      0f87af110000   ja 0x7cff
0x00006b50      488d0d495600.  lea rcx, [0x0000c1a0]
0x00006b57      4489fa         mov edx, r15d
0x00006b5a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00006b5e      4801c8         add rax, rcx
0x00006b61      ffe0           jmp rax
0x00006b63      c644240e01     mov byte [rsp + 0xe], 1
0x00006b68      c644247c00     mov byte [rsp + 0x7c], 0
0x00006b6d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00006b70      48c744245000.  mov qword [rsp + 0x50], 0
0x00006b79      c644240f01     mov byte [rsp + 0xf], 1
0x00006b7e      c644240d00     mov byte [rsp + 0xd], 0
0x00006b83      488d05ab5500.  lea rax, [0x0000c135]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006b8a      48c744241801.  mov qword [rsp + 0x18], 1
0x00006b93      4531ff         xor r15d, r15d
0x00006b96      c74424080200.  mov dword [rsp + 8], 2
0x00006b9e      4889442448     mov qword [rsp + 0x48], rax
0x00006ba3      4531db         xor r11d, r11d
0x00006ba6      4889e8         mov rax, rbp
0x00006ba9      4589e0         mov r8d, r12d
0x00006bac      4c89dd         mov rbp, r11
0x00006baf      4989c3         mov r11, rax
0x00006bb2      660f1f440000   nop word [rax + rax]
0x00006bb8      4939eb         cmp r11, rbp
0x00006bbb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00006bbf      4983fbff       cmp r11, 0xffffffffffffffff
0x00006bc3      750d           jne 0x6bd2
0x00006bc5      488b442410     mov rax, qword [rsp + 0x10]
0x00006bca      803c2800       cmp byte [rax + rbp], 0
0x00006bce      410f95c4       setne r12b
0x00006bd2      4584e4         test r12b, r12b
0x00006bd5      0f8455060000   je 0x7230
0x00006bdb      837c240802     cmp dword [rsp + 8], 2
0x00006be0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006be5      4c8d0c2f       lea r9, [rdi + rbp]
0x00006be9      0f95c0         setne al
0x00006bec      2244240d       and al, byte [rsp + 0xd]
0x00006bf0      4189c2         mov r10d, eax
0x00006bf3      0f84a7000000   je 0x6ca0
0x00006bf9      488b442418     mov rax, qword [rsp + 0x18]
0x00006bfe      4885c0         test rax, rax
0x00006c01      0f8429040000   je 0x7030
0x00006c07      4983fbff       cmp r11, 0xffffffffffffffff
0x00006c0b      488d5c0500     lea rbx, [rbp + rax]
0x00006c10      752e           jne 0x6c40
0x00006c12      4883f801       cmp rax, 1
0x00006c16      7628           jbe 0x6c40
0x00006c18      4488442438     mov byte [rsp + 0x38], r8b
0x00006c1d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00006c22      4c894c2428     mov qword [rsp + 0x28], r9
0x00006c27      e8c4b2ffff     call sym.imp.strlen
0x00006c2c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00006c32      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00006c38      4989c3         mov r11, rax
0x00006c3b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006c40      4c39db         cmp rbx, r11
0x00006c43      4488542428     mov byte [rsp + 0x28], r10b
0x00006c48      0f87b2050000   ja 0x7200
0x00006c4e      488b542418     mov rdx, qword [rsp + 0x18]
0x00006c53      488b742448     mov rsi, qword [rsp + 0x48]
0x00006c58      4c89cf         mov rdi, r9
0x00006c5b      4c895c2440     mov qword [rsp + 0x40], r11
0x00006c60      4488442438     mov byte [rsp + 0x38], r8b
0x00006c65      4c894c2430     mov qword [rsp + 0x30], r9
0x00006c6a      e8b1b3ffff     call sym.imp.memcmp
0x00006c6f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00006c71      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006c76      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00006c7c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00006c81      0f8579050000   jne 0x7200
0x00006c87      807c240f00     cmp byte [rsp + 0xf], 0
0x00006c8c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00006c92      0f857d0f0000   jne 0x7c15
0x00006c98      0f1f84000000.  nop dword [rax + rax]
0x00006ca0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00006ca4      80fb7e         cmp bl, 0x7e
0x00006ca7      0f871b030000   ja 0x6fc8
0x00006cad      488d0d185500.  lea rcx, [0x0000c1cc]
0x00006cb4      0fb6d3         movzx edx, bl
0x00006cb7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00006cbb      4801c8         add rax, rcx
0x00006cbe      ffe0           jmp rax
0x00006cc0      4531d2         xor r10d, r10d
0x00006cc3      4983fb01       cmp r11, 1
0x00006cc7      0f95c0         setne al
0x00006cca      4983fbff       cmp r11, 0xffffffffffffffff
0x00006cce      750c           jne 0x6cdc
0x00006cd0      488b442410     mov rax, qword [rsp + 0x10]
0x00006cd5      80780100       cmp byte [rax + 1], 0
0x00006cd9      0f95c0         setne al
0x00006cdc      837c240802     cmp dword [rsp + 8], 2
0x00006ce1      0f94c2         sete dl
0x00006ce4      84c0           test al, al
0x00006ce6      0f844c020000   je 0x6f38
0x00006cec      4531e4         xor r12d, r12d
0x00006cef      31c0           xor eax, eax
0x00006cf1      0f1f80000000.  nop dword [rax]
0x00006cf8      807c240d01     cmp byte [rsp + 0xd], 1
0x00006cfd      0f850f010000   jne 0x6e12
0x00006d03      84d2           test dl, dl
0x00006d05      0f8507010000   jne 0x6e12
0x00006d0b      488b742420     mov rsi, qword [rsp + 0x20]
0x00006d10      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00006d13      7414           je 0x6d29
0x00006d15      89da           mov edx, ebx
0x00006d17      c0ea05         shr dl, 5
0x00006d1a      0fb6d2         movzx edx, dl
0x00006d1d      8b1496         mov edx, dword [rsi + rdx*4]
0x00006d20      0fa3da         bt edx, ebx
0x00006d23      0f824a010000   jb 0x6e73
0x00006d29      4584d2         test r10b, r10b
0x00006d2c      0f8541010000   jne 0x6e73
0x00006d32      83f001         xor eax, 1
0x00006d35      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00006d39      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00006d3c      84c0           test al, al
0x00006d3e      7420           je 0x6d60                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00006d40      4d39fd         cmp r13, r15
0x00006d43      7605           jbe 0x6d4a
0x00006d45      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006d4a      498d4701       lea rax, [r15 + 1]
0x00006d4e      4939c5         cmp r13, rax
0x00006d51      7606           jbe 0x6d59
0x00006d53      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006d59      4983c702       add r15, 2
0x00006d5d      4531c0         xor r8d, r8d
0x00006d60      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00006d63      7304           jae 0x6d69                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00006d65      43881c3e       mov byte [r14 + r15], bl
0x00006d69      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00006d6e      4983c701       add r15, 1
0x00006d72      b800000000     mov eax, 0
0x00006d77      4584e4         test r12b, r12b
0x00006d7a      0f44f8         cmove edi, eax
0x00006d7d      40887c240e     mov byte [rsp + 0xe], dil
0x00006d82      e931feffff     jmp 0x6bb8
0x00006d87      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00006d90      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00006d93      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00006d97      83f802         cmp eax, 2
0x00006d9a      0f84b8050000   je 0x7358
0x00006da0      83f805         cmp eax, 5
0x00006da3      0f846f050000   je 0x7318
0x00006da9      83f802         cmp eax, 2
0x00006dac      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00006db1      0f94c2         sete dl
0x00006db4      4531e4         xor r12d, r12d
0x00006db7      31c0           xor eax, eax
0x00006db9      e93affffff     jmp 0x6cf8
0x00006dbe      6690           nop
0x00006dc0      4531d2         xor r10d, r10d
0x00006dc3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00006dc8      0f8402050000   je 0x72d0
0x00006dce      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00006dd3      31d2           xor edx, edx
0x00006dd5      31c0           xor eax, eax
0x00006dd7      bb27000000     mov ebx, 0x27                           ; '''
0x00006ddc      e917ffffff     jmp 0x6cf8
0x00006de1      0f1f80000000.  nop dword [rax]
0x00006de8      ba09000000     mov edx, 9
0x00006ded      bb74000000     mov ebx, 0x74                           ; 't'
0x00006df2      837c240802     cmp dword [rsp + 8], 2
0x00006df7      0f94c0         sete al
0x00006dfa      2244240f       and al, byte [rsp + 0xf]
0x00006dfe      0f854a010000   jne 0x6f4e
0x00006e04      807c240d00     cmp byte [rsp + 0xd], 0
0x00006e09      7565           jne 0x6e70
0x00006e0b      89d3           mov ebx, edx
0x00006e0d      4531e4         xor r12d, r12d
0x00006e10      31c0           xor eax, eax
0x00006e12      807c240f00     cmp byte [rsp + 0xf], 0
0x00006e17      0f85eefeffff   jne 0x6d0b
0x00006e1d      e907ffffff     jmp 0x6d29                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00006e22      660f1f440000   nop word [rax + rax]
0x00006e28      ba08000000     mov edx, 8
0x00006e2d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00006e32      ebd0           jmp 0x6e04
0x00006e34      0f1f4000       nop dword [rax]
0x00006e38      837c240802     cmp dword [rsp + 8], 2
0x00006e3d      0f84cd030000   je 0x7210
0x00006e43      807c240d00     cmp byte [rsp + 0xd], 0
0x00006e48      0f8412020000   je 0x7060
0x00006e4e      807c240f00     cmp byte [rsp + 0xf], 0
0x00006e53      0f8407020000   je 0x7060
0x00006e59      48837c241800   cmp qword [rsp + 0x18], 0
0x00006e5f      0f85b6030000   jne 0x721b
0x00006e65      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00006e6a      660f1f440000   nop word [rax + rax]
0x00006e70      4531e4         xor r12d, r12d
0x00006e73      837c240802     cmp dword [rsp + 8], 2
0x00006e78      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00006e7b      807c240f00     cmp byte [rsp + 0xf], 0
0x00006e80      89d0           mov eax, edx
0x00006e82      0f8550080000   jne 0x76d8
0x00006e88      4489c0         mov eax, r8d
0x00006e8b      83f001         xor eax, 1
0x00006e8e      20d0           and al, dl
0x00006e90      742f           je 0x6ec1
0x00006e92      4d39fd         cmp r13, r15
0x00006e95      7605           jbe 0x6e9c
0x00006e97      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006e9c      498d5701       lea rdx, [r15 + 1]
0x00006ea0      4939d5         cmp r13, rdx
0x00006ea3      7606           jbe 0x6eab
0x00006ea5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00006eab      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00006eaf      4939d5         cmp r13, rdx
0x00006eb2      7606           jbe 0x6eba
0x00006eb4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006eba      4983c703       add r15, 3
0x00006ebe      4189c0         mov r8d, eax
0x00006ec1      4d39fd         cmp r13, r15
0x00006ec4      7605           jbe 0x6ecb
0x00006ec6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006ecb      4983c701       add r15, 1
0x00006ecf      4883c501       add rbp, 1
0x00006ed3      e988feffff     jmp 0x6d60
0x00006ed8      0f1f84000000.  nop dword [rax + rax]
0x00006ee0      807c240d00     cmp byte [rsp + 0xd], 0
0x00006ee5      0f85c8010000   jne 0x70b3
0x00006eeb      31d2           xor edx, edx
0x00006eed      f644247801     test byte [rsp + 0x78], 1
0x00006ef2      0f8413ffffff   je 0x6e0b
0x00006ef8      4883c501       add rbp, 1
0x00006efc      e9b7fcffff     jmp 0x6bb8
0x00006f01      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00006f08      837c240802     cmp dword [rsp + 8], 2
0x00006f0d      0f94c2         sete dl
0x00006f10      31c0           xor eax, eax
0x00006f12      e9e1fdffff     jmp 0x6cf8
0x00006f17      660f1f840000.  nop word [rax + rax]
0x00006f20      ba07000000     mov edx, 7
0x00006f25      bb61000000     mov ebx, 0x61                           ; 'a'
0x00006f2a      e9d5feffff     jmp 0x6e04
0x00006f2f      90             nop
0x00006f30      837c240802     cmp dword [rsp + 8], 2
0x00006f35      0f94c2         sete dl
0x00006f38      4885ed         test rbp, rbp
0x00006f3b      0f85abfdffff   jne 0x6cec
0x00006f41      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006f46      20d0           and al, dl
0x00006f48      0f84aafdffff   je 0x6cf8
0x00006f4e      4c89dd         mov rbp, r11
0x00006f51      c74424080200.  mov dword [rsp + 8], 2
0x00006f59      e9fb060000     jmp 0x7659
0x00006f5e      6690           nop
0x00006f60      837c240802     cmp dword [rsp + 8], 2
0x00006f65      0f94c2         sete dl
0x00006f68      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00006f6b      ebd4           jmp 0x6f41
0x00006f6d      0f1f00         nop dword [rax]
0x00006f70      837c240802     cmp dword [rsp + 8], 2
0x00006f75      bb20000000     mov ebx, 0x20                           ; "@"
0x00006f7a      0f94c2         sete dl
0x00006f7d      ebc2           jmp 0x6f41
0x00006f7f      90             nop
0x00006f80      ba0d000000     mov edx, 0xd
0x00006f85      bb72000000     mov ebx, 0x72                           ; 'r'
0x00006f8a      e963feffff     jmp 0x6df2
0x00006f8f      90             nop
0x00006f90      ba0c000000     mov edx, 0xc
0x00006f95      bb66000000     mov ebx, 0x66                           ; 'f'
0x00006f9a      e965feffff     jmp 0x6e04
0x00006f9f      90             nop
0x00006fa0      ba0b000000     mov edx, 0xb
0x00006fa5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00006faa      e955feffff     jmp 0x6e04
0x00006faf      90             nop
0x00006fb0      ba0a000000     mov edx, 0xa
0x00006fb5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00006fba      e933feffff     jmp 0x6df2
0x00006fbf      90             nop
0x00006fc0      4531d2         xor r10d, r10d
0x00006fc3      0f1f440000     nop dword [rax + rax]
0x00006fc8      48837c245801   cmp qword [rsp + 0x58], 1
0x00006fce      0f85a4030000   jne 0x7378
0x00006fd4      4c895c2438     mov qword [rsp + 0x38], r11
0x00006fd9      4488442430     mov byte [rsp + 0x30], r8b
0x00006fde      4488542428     mov byte [rsp + 0x28], r10b
0x00006fe3      e8b8b2ffff     call sym.imp.__ctype_b_loc
0x00006fe8      488b08         mov rcx, qword [rax]
0x00006feb      0fb6d3         movzx edx, bl
0x00006fee      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00006ff4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00006ffa      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00006fff      bf01000000     mov edi, 1
0x00007004      0fb70451       movzx eax, word [rcx + rdx*2]
0x00007008      66250040       and ax, 0x4000
0x0000700c      410f95c4       setne r12b
0x00007010      0f94c0         sete al
0x00007013      2244240d       and al, byte [rsp + 0xd]
0x00007017      84c0           test al, al
0x00007019      0f8592090000   jne 0x79b1
0x0000701f      837c240802     cmp dword [rsp + 8], 2
0x00007024      0f94c2         sete dl
0x00007027      e9ccfcffff     jmp 0x6cf8
0x0000702c      0f1f4000       nop dword [rax]
0x00007030      410fb619       movzx ebx, byte [r9]
0x00007034      80fb7e         cmp bl, 0x7e
0x00007037      7787           ja 0x6fc0
0x00007039      488d0d885300.  lea rcx, [0x0000c3c8]
0x00007040      0fb6d3         movzx edx, bl
0x00007043      48630491       movsxd rax, dword [rcx + rdx*4]
0x00007047      4801c8         add rax, rcx
0x0000704a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000704c      0f1f4000       nop dword [rax]
0x00007050      4531d2         xor r10d, r10d
0x00007053      807c240d00     cmp byte [rsp + 0xd], 0
0x00007058      0f85f0fdffff   jne 0x6e4e
0x0000705e      6690           nop
0x00007060      ba5c000000     mov edx, 0x5c                           ; '\'
0x00007065      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000706a      e995fdffff     jmp 0x6e04
0x0000706f      90             nop
0x00007070      ba0c000000     mov edx, 0xc
0x00007075      4531d2         xor r10d, r10d
0x00007078      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000707d      e982fdffff     jmp 0x6e04
0x00007082      660f1f440000   nop word [rax + rax]
0x00007088      ba0a000000     mov edx, 0xa
0x0000708d      4531d2         xor r10d, r10d
0x00007090      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00007095      e958fdffff     jmp 0x6df2
0x0000709a      660f1f440000   nop word [rax + rax]
0x000070a0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000070a5      e9c6fdffff     jmp 0x6e70
0x000070aa      660f1f440000   nop word [rax + rax]
0x000070b0      4531d2         xor r10d, r10d
0x000070b3      837c240802     cmp dword [rsp + 8], 2
0x000070b8      0f94c2         sete dl
0x000070bb      807c240f00     cmp byte [rsp + 0xf], 0
0x000070c0      0f85940b0000   jne 0x7c5a
0x000070c6      4489c0         mov eax, r8d
0x000070c9      4c89f9         mov rcx, r15
0x000070cc      83f001         xor eax, 1
0x000070cf      20d0           and al, dl
0x000070d1      742d           je 0x7100
0x000070d3      4d39fd         cmp r13, r15
0x000070d6      7605           jbe 0x70dd
0x000070d8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000070dd      498d4f01       lea rcx, [r15 + 1]
0x000070e1      4939cd         cmp r13, rcx
0x000070e4      7606           jbe 0x70ec
0x000070e6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000070ec      498d4f02       lea rcx, [r15 + 2]
0x000070f0      4939cd         cmp r13, rcx
0x000070f3      0f8730060000   ja 0x7729
0x000070f9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000070fd      4189c0         mov r8d, eax
0x00007100      4939cd         cmp r13, rcx
0x00007103      7605           jbe 0x710a
0x00007105      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000710a      837c240802     cmp dword [rsp + 8], 2
0x0000710f      4c8d7901       lea r15, [rcx + 1]
0x00007113      0f8400060000   je 0x7719
0x00007119      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000711d      4c39d8         cmp rax, r11
0x00007120      7319           jae 0x713b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00007122      488b442410     mov rax, qword [rsp + 0x10]
0x00007127      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000712c      88442428       mov byte [rsp + 0x28], al
0x00007130      83e830         sub eax, 0x30
0x00007133      3c09           cmp al, 9
0x00007135      0f862e080000   jbe 0x7969
0x0000713b      4489e0         mov eax, r12d
0x0000713e      bb30000000     mov ebx, 0x30                           ; '0'
0x00007143      4531e4         xor r12d, r12d
0x00007146      e9adfbffff     jmp 0x6cf8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000714b      0f1f440000     nop dword [rax + rax]
0x00007150      837c240802     cmp dword [rsp + 8], 2
0x00007155      4589d4         mov r12d, r10d
0x00007158      0f94c2         sete dl
0x0000715b      4531d2         xor r10d, r10d
0x0000715e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00007160      e993fbffff     jmp 0x6cf8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00007165      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00007168      837c240802     cmp dword [rsp + 8], 2
0x0000716d      0f94c2         sete dl
0x00007170      4531d2         xor r10d, r10d
0x00007173      e9c0fdffff     jmp 0x6f38
0x00007178      0f1f84000000.  nop dword [rax + rax]
0x00007180      837c240802     cmp dword [rsp + 8], 2
0x00007185      0f94c2         sete dl
0x00007188      4531d2         xor r10d, r10d
0x0000718b      4531e4         xor r12d, r12d
0x0000718e      e9aefdffff     jmp 0x6f41
0x00007193      0f1f440000     nop dword [rax + rax]
0x00007198      837c240802     cmp dword [rsp + 8], 2
0x0000719d      4589d4         mov r12d, r10d
0x000071a0      bb20000000     mov ebx, 0x20                           ; "@"
0x000071a5      0f94c2         sete dl
0x000071a8      4531d2         xor r10d, r10d
0x000071ab      e991fdffff     jmp 0x6f41
0x000071b0      ba0d000000     mov edx, 0xd
0x000071b5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000071b8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000071bd      e930fcffff     jmp 0x6df2
0x000071c2      660f1f440000   nop word [rax + rax]
0x000071c8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000071cd      e99efcffff     jmp 0x6e70
0x000071d2      660f1f440000   nop word [rax + rax]
0x000071d8      ba09000000     mov edx, 9
0x000071dd      4531d2         xor r10d, r10d
0x000071e0      bb74000000     mov ebx, 0x74                           ; 't'
0x000071e5      e908fcffff     jmp 0x6df2
0x000071ea      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000071f0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000071f5      e976fcffff     jmp 0x6e70
0x000071fa      660f1f440000   nop word [rax + rax]
0x00007200      4531d2         xor r10d, r10d
0x00007203      e998faffff     jmp 0x6ca0
0x00007208      0f1f84000000.  nop dword [rax + rax]
0x00007210      807c240f00     cmp byte [rsp + 0xf], 0
0x00007215      0f8565090000   jne 0x7b80
0x0000721b      4883c501       add rbp, 1
0x0000721f      4489c0         mov eax, r8d
0x00007222      4531e4         xor r12d, r12d
0x00007225      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000722a      e90dfbffff     jmp 0x6d3c
0x0000722f      90             nop
0x00007230      837c240802     cmp dword [rsp + 8], 2
0x00007235      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000723a      4589c4         mov r12d, r8d
0x0000723d      4c89dd         mov rbp, r11
0x00007240      0f94c2         sete dl
0x00007243      89d8           mov eax, ebx
0x00007245      4d85ff         test r15, r15
0x00007248      0f94c1         sete cl
0x0000724b      21d0           and eax, edx
0x0000724d      20c8           and al, cl
0x0000724f      0f85610a0000   jne 0x7cb6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00007255      89d8           mov eax, ebx
0x00007257      83f001         xor eax, 1
0x0000725a      20c2           and dl, al
0x0000725c      0f846a090000   je 0x7bcc
0x00007262      807c247c00     cmp byte [rsp + 0x7c], 0
0x00007267      0f845d090000   je 0x7bca
0x0000726d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00007272      0f85f5090000   jne 0x7c6d
0x00007278      4d85ed         test r13, r13
0x0000727b      0f94c0         sete al
0x0000727e      48837c245000   cmp qword [rsp + 0x50], 0
0x00007284      0f95c2         setne dl
0x00007287      20d0           and al, dl
0x00007289      0f841d0a0000   je 0x7cac
0x0000728f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00007294      488d1d9a4e00.  lea rbx, [0x0000c135]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000729b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000729f      c74424080200.  mov dword [rsp + 8], 2
0x000072a7      41bf01000000   mov r15d, 1
0x000072ad      48c744241801.  mov qword [rsp + 0x18], 1
0x000072b6      c644240f00     mov byte [rsp + 0xf], 0
0x000072bb      48895c2448     mov qword [rsp + 0x48], rbx
0x000072c0      8844247c       mov byte [rsp + 0x7c], al
0x000072c4      e9daf8ffff     jmp 0x6ba3
0x000072c9      0f1f80000000.  nop dword [rax]
0x000072d0      807c240f00     cmp byte [rsp + 0xf], 0
0x000072d5      0f85a5080000   jne 0x7b80
0x000072db      4d85ed         test r13, r13
0x000072de      0f84fc030000   je 0x76e0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000072e4      31d2           xor edx, edx
0x000072e6      48837c245000   cmp qword [rsp + 0x50], 0
0x000072ec      0f85ee030000   jne 0x76e0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000072f2      4c896c2450     mov qword [rsp + 0x50], r13
0x000072f7      4983c703       add r15, 3
0x000072fb      31c0           xor eax, eax
0x000072fd      448864247c     mov byte [rsp + 0x7c], r12b
0x00007302      4531c0         xor r8d, r8d
0x00007305      4989d5         mov r13, rdx
0x00007308      bb27000000     mov ebx, 0x27                           ; '''
0x0000730d      e917faffff     jmp 0x6d29
0x00007312      660f1f440000   nop word [rax + rax]
0x00007318      f644247804     test byte [rsp + 0x78], 4
0x0000731d      7421           je 0x7340
0x0000731f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00007323      4c39d9         cmp rcx, r11
0x00007326      7318           jae 0x7340
0x00007328      488b442410     mov rax, qword [rsp + 0x10]
0x0000732d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00007332      0f848a070000   je 0x7ac2
0x00007338      0f1f84000000.  nop dword [rax + rax]
0x00007340      31d2           xor edx, edx
0x00007342      4531e4         xor r12d, r12d
0x00007345      31c0           xor eax, eax
0x00007347      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000734c      e9a7f9ffff     jmp 0x6cf8
0x00007351      0f1f80000000.  nop dword [rax]
0x00007358      807c240f00     cmp byte [rsp + 0xf], 0
0x0000735d      0f851d080000   jne 0x7b80
0x00007363      4531e4         xor r12d, r12d
0x00007366      31c0           xor eax, eax
0x00007368      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000736d      e9b7f9ffff     jmp 0x6d29                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00007372      660f1f440000   nop word [rax + rax]
0x00007378      488d8424a000.  lea rax, [rsp + 0xa0]
0x00007380      4983fbff       cmp r11, 0xffffffffffffffff
0x00007384      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00007390      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00007395      752d           jne 0x73c4
0x00007397      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000739c      4488442440     mov byte [rsp + 0x40], r8b
0x000073a1      4488542438     mov byte [rsp + 0x38], r10b
0x000073a6      4c894c2430     mov qword [rsp + 0x30], r9
0x000073ab      e840abffff     call sym.imp.strlen
0x000073b0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000073b6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000073bc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000073bf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000073c4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000073cc      31c9           xor ecx, ecx
0x000073ce      885c247e       mov byte [rsp + 0x7e], bl
0x000073d2      448844247d     mov byte [rsp + 0x7d], r8b
0x000073d7      4889cb         mov rbx, rcx
0x000073da      4c898c248800.  mov qword [rsp + 0x88], r9
0x000073e2      4889442438     mov qword [rsp + 0x38], rax
0x000073e7      448854247f     mov byte [rsp + 0x7f], r10b
0x000073ec      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000073f4      4c89742440     mov qword [rsp + 0x40], r14
0x000073f9      4c896c2470     mov qword [rsp + 0x70], r13
0x000073fe      4c895c2430     mov qword [rsp + 0x30], r11
0x00007403      488b442410     mov rax, qword [rsp + 0x10]
0x00007408      4c8d741d00     lea r14, [rbp + rbx]
0x0000740d      488b542430     mov rdx, qword [rsp + 0x30]
0x00007412      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00007417      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000741c      4e8d2c30       lea r13, [rax + r14]
0x00007420      4c29f2         sub rdx, r14
0x00007423      4c89ee         mov rsi, r13
0x00007426      e815240000     call sym.rpl_mbrtowc
0x0000742b      4885c0         test rax, rax
0x0000742e      4989c7         mov r15, rax
0x00007431      744e           je 0x7481
0x00007433      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007437      0f8418060000   je 0x7a55
0x0000743d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00007441      0f849a050000   je 0x79e1
0x00007447      837c240802     cmp dword [rsp + 8], 2
0x0000744c      0f94c0         sete al
0x0000744f      2244240f       and al, byte [rsp + 0xf]
0x00007453      0f8597010000   jne 0x75f0
0x00007459      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00007460      e82baeffff     call sym.imp.iswprint
0x00007465      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000746a      85c0           test eax, eax
0x0000746c      b800000000     mov eax, 0
0x00007471      440f44e0       cmove r12d, eax
0x00007475      4c01fb         add rbx, r15
0x00007478      e8f3adffff     call sym.imp.mbsinit
0x0000747d      85c0           test eax, eax
0x0000747f      7482           je 0x7403
0x00007481      4489e2         mov edx, r12d
0x00007484      4889df         mov rdi, rbx
0x00007487      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000748d      83f201         xor edx, 1
0x00007490      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00007495      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000749b      2254240d       and dl, byte [rsp + 0xd]
0x0000749f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000074a7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000074ac      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000074b1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000074b6      4883ff01       cmp rdi, 1
0x000074ba      0f86fb050000   jbe 0x7abb
0x000074c0      4889f9         mov rcx, rdi
0x000074c3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000074c5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000074cb      4801e9         add rcx, rbp
0x000074ce      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000074d3      e9b6000000     jmp 0x758e
0x000074d8      0f1f84000000.  nop dword [rax + rax]
0x000074e0      837c240802     cmp dword [rsp + 8], 2
0x000074e5      0f94c0         sete al
0x000074e8      4584c9         test r9b, r9b
0x000074eb      0f85af040000   jne 0x79a0
0x000074f1      4489c6         mov esi, r8d
0x000074f4      83f601         xor esi, 1
0x000074f7      4020f0         and al, sil
0x000074fa      742f           je 0x752b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000074fc      4d39fd         cmp r13, r15
0x000074ff      7605           jbe 0x7506
0x00007501      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007506      498d7701       lea rsi, [r15 + 1]
0x0000750a      4939f5         cmp r13, rsi
0x0000750d      7606           jbe 0x7515                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000750f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00007515      498d7702       lea rsi, [r15 + 2]
0x00007519      4939f5         cmp r13, rsi
0x0000751c      7606           jbe 0x7524
0x0000751e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007524      4983c703       add r15, 3
0x00007528      4189c0         mov r8d, eax
0x0000752b      4d39fd         cmp r13, r15
0x0000752e      7605           jbe 0x7535
0x00007530      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00007535      498d4701       lea rax, [r15 + 1]
0x00007539      4939c5         cmp r13, rax
0x0000753c      760d           jbe 0x754b
0x0000753e      89d8           mov eax, ebx
0x00007540      c0e806         shr al, 6
0x00007543      83c030         add eax, 0x30
0x00007546      4388443e01     mov byte [r14 + r15 + 1], al
0x0000754b      498d4702       lea rax, [r15 + 2]
0x0000754f      4939c5         cmp r13, rax
0x00007552      7610           jbe 0x7564
0x00007554      89d8           mov eax, ebx
0x00007556      c0e803         shr al, 3
0x00007559      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000755c      83c030         add eax, 0x30
0x0000755f      4388443e02     mov byte [r14 + r15 + 2], al
0x00007564      83e307         and ebx, 7
0x00007567      4883c501       add rbp, 1
0x0000756b      4983c703       add r15, 3
0x0000756f      83c330         add ebx, 0x30
0x00007572      4839cd         cmp rbp, rcx
0x00007575      0f83e5f7ffff   jae 0x6d60
0x0000757b      89d6           mov esi, edx
0x0000757d      4d39fd         cmp r13, r15
0x00007580      7604           jbe 0x7586
0x00007582      43881c3e       mov byte [r14 + r15], bl
0x00007586      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000758a      4983c701       add r15, 1
0x0000758e      84d2           test dl, dl
0x00007590      0f854affffff   jne 0x74e0
0x00007596      89f0           mov eax, esi
0x00007598      83f001         xor eax, 1
0x0000759b      4421c0         and eax, r8d
0x0000759e      4584d2         test r10b, r10b
0x000075a1      740e           je 0x75b1
0x000075a3      4d39fd         cmp r13, r15
0x000075a6      7605           jbe 0x75ad
0x000075a8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000075ad      4983c701       add r15, 1
0x000075b1      4883c501       add rbp, 1
0x000075b5      4839cd         cmp rbp, rcx
0x000075b8      0f837ef7ffff   jae 0x6d3c
0x000075be      84c0           test al, al
0x000075c0      0f84f8030000   je 0x79be
0x000075c6      4d39fd         cmp r13, r15
0x000075c9      7605           jbe 0x75d0
0x000075cb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000075d0      498d4701       lea rax, [r15 + 1]
0x000075d4      4939c5         cmp r13, rax
0x000075d7      7606           jbe 0x75df
0x000075d9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000075df      4983c702       add r15, 2
0x000075e3      4531d2         xor r10d, r10d
0x000075e6      4531c0         xor r8d, r8d
0x000075e9      eb92           jmp 0x757d
0x000075eb      0f1f440000     nop dword [rax + rax]
0x000075f0      4983ff01       cmp r15, 1
0x000075f4      0f845ffeffff   je 0x7459
0x000075fa      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000075ff      4a8d0c3f       lea rcx, [rdi + r15]
0x00007603      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00007608      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000760c      eb0f           jmp 0x761d
0x0000760e      6690           nop
0x00007610      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00007614      4939d0         cmp r8, rdx
0x00007617      0f843cfeffff   je 0x7459
0x0000761d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00007620      83e95b         sub ecx, 0x5b
0x00007623      80f921         cmp cl, 0x21
0x00007626      77e8           ja 0x7610                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00007628      be01000000     mov esi, 1
0x0000762d      48d3e6         shl rsi, cl
0x00007630      4889f1         mov rcx, rsi
0x00007633      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000763d      4885f1         test rcx, rsi
0x00007640      74ce           je 0x7610
0x00007642      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007647      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000764c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00007651      c74424080200.  mov dword [rsp + 8], 2
0x00007659      807c240d00     cmp byte [rsp + 0xd], 0
0x0000765e      7410           je 0x7670
0x00007660      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00007662      b804000000     mov eax, 4
0x00007667      0f44442408     cmove eax, dword [rsp + 8]
0x0000766c      89442408       mov dword [rsp + 8], eax
0x00007670      4883ec08       sub rsp, 8
0x00007674      4889e9         mov rcx, rbp
0x00007677      4c89ee         mov rsi, r13
0x0000767a      ff742468       push qword [rsp + 0x68]
0x0000767e      ff742478       push qword [rsp + 0x78]
0x00007682      4c89f7         mov rdi, r14
0x00007685      6a00           push 0
0x00007687      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000768f      448b442428     mov r8d, dword [rsp + 0x28]
0x00007694      488b542430     mov rdx, qword [rsp + 0x30]
0x00007699      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000769d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000076a2      4883c420       add rsp, 0x20
0x000076a6      4989c7         mov r15, rax
0x000076a9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000076b1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000076ba      4c89f8         mov rax, r15
0x000076bd      0f8500060000   jne 0x7cc3
0x000076c3      4881c4b80000.  add rsp, 0xb8
0x000076ca      5b             pop rbx
0x000076cb      5d             pop rbp
0x000076cc      415c           pop r12
0x000076ce      415d           pop r13
0x000076d0      415e           pop r14
0x000076d2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000076d4      c3             ret
0x000076d5      0f1f00         nop dword [rax]
0x000076d8      4c89dd         mov rbp, r11
0x000076db      e979ffffff     jmp 0x7659
0x000076e0      4d39fd         cmp r13, r15
0x000076e3      7605           jbe 0x76ea
0x000076e5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000076ea      498d4701       lea rax, [r15 + 1]
0x000076ee      4939c5         cmp r13, rax
0x000076f1      7606           jbe 0x76f9
0x000076f3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000076f9      498d4702       lea rax, [r15 + 2]
0x000076fd      4939c5         cmp r13, rax
0x00007700      0f86ec050000   jbe 0x7cf2
0x00007706      4c89ea         mov rdx, r13
0x00007709      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000770f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00007714      e9d9fbffff     jmp 0x72f2
0x00007719      4489e0         mov eax, r12d
0x0000771c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00007721      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00007724      e900f6ffff     jmp 0x6d29                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00007729      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000772f      e9c5f9ffff     jmp 0x70f9
0x00007734      85db           test ebx, ebx
0x00007736      0f8527f4ffff   jne 0x6b63
0x0000773c      c644240d01     mov byte [rsp + 0xd], 1
0x00007741      4d85ed         test r13, r13
0x00007744      0f8590050000   jne 0x7cda
0x0000774a      488d05e44900.  lea rax, [0x0000c135]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007751      48c744245000.  mov qword [rsp + 0x50], 0
0x0000775a      c644240e01     mov byte [rsp + 0xe], 1
0x0000775f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007764      4531e4         xor r12d, r12d
0x00007767      c644240f00     mov byte [rsp + 0xf], 0
0x0000776c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007775      4889442448     mov qword [rsp + 0x48], rax
0x0000777a      41bf01000000   mov r15d, 1
0x00007780      c74424080200.  mov dword [rsp + 8], 2
0x00007788      e916f4ffff     jmp 0x6ba3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000778d      0f1f00         nop dword [rax]
0x00007790      85db           test ebx, ebx
0x00007792      0f85f5030000   jne 0x7b8d
0x00007798      4d85ed         test r13, r13
0x0000779b      0f8425020000   je 0x79c6
0x000077a1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000077a5      c644240e01     mov byte [rsp + 0xe], 1
0x000077aa      4531e4         xor r12d, r12d
0x000077ad      c644247c00     mov byte [rsp + 0x7c], 0
0x000077b2      48c744245000.  mov qword [rsp + 0x50], 0
0x000077bb      488d05714900.  lea rax, str.l______l                   ; 0xc133 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000077c2      c644240f00     mov byte [rsp + 0xf], 0
0x000077c7      c644240d01     mov byte [rsp + 0xd], 1
0x000077cc      48c744241801.  mov qword [rsp + 0x18], 1
0x000077d5      41bf01000000   mov r15d, 1
0x000077db      4889442448     mov qword [rsp + 0x48], rax
0x000077e0      e9bef3ffff     jmp 0x6ba3
0x000077e5      488d05474900.  lea rax, str.l______l                   ; 0xc133 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000077ec      c644240e01     mov byte [rsp + 0xe], 1
0x000077f1      c644247c00     mov byte [rsp + 0x7c], 0
0x000077f6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000077f9      48c744245000.  mov qword [rsp + 0x50], 0
0x00007802      c644240f01     mov byte [rsp + 0xf], 1
0x00007807      c644240d01     mov byte [rsp + 0xd], 1
0x0000780c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007815      4531ff         xor r15d, r15d
0x00007818      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000781d      c74424080500.  mov dword [rsp + 8], 5
0x00007825      e979f3ffff     jmp 0x6ba3
0x0000782a      c644240e01     mov byte [rsp + 0xe], 1
0x0000782f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007834      4531e4         xor r12d, r12d
0x00007837      48c744245000.  mov qword [rsp + 0x50], 0
0x00007840      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00007845      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00007848      c644240d01     mov byte [rsp + 0xd], 1
0x0000784d      48c744241800.  mov qword [rsp + 0x18], 0
0x00007856      48c744244800.  mov qword [rsp + 0x48], 0
0x0000785f      e93ff3ffff     jmp 0x6ba3
0x00007864      837c24080a     cmp dword [rsp + 8], 0xa
0x00007869      7456           je 0x78c1
0x0000786b      488d35c54800.  lea rsi, [0x0000c137]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00007872      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00007874      ba05000000     mov edx, 5
0x00007879      e852a6ffff     call sym.imp.dcgettext
0x0000787e      4889c1         mov rcx, rax
0x00007881      4889442468     mov qword [rsp + 0x68], rax
0x00007886      488d05aa4800.  lea rax, [0x0000c137]                   ; "`"
0x0000788d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00007890      0f8498030000   je 0x7c2e
0x00007896      488d35984800.  lea rsi, [0x0000c135]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000789d      31ff           xor edi, edi
0x0000789f      ba05000000     mov edx, 5
0x000078a4      e827a6ffff     call sym.imp.dcgettext
0x000078a9      4889c1         mov rcx, rax
0x000078ac      4889442460     mov qword [rsp + 0x60], rax
0x000078b1      488d057d4800.  lea rax, [0x0000c135]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000078b8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000078bb      0f8483030000   je 0x7c44
0x000078c1      4531ff         xor r15d, r15d
0x000078c4      85db           test ebx, ebx
0x000078c6      0f84c1010000   je 0x7a8d
0x000078cc      85db           test ebx, ebx
0x000078ce      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000078d3      0f9544240f     setne byte [rsp + 0xf]
0x000078d8      4531e4         xor r12d, r12d
0x000078db      4889df         mov rdi, rbx
0x000078de      e80da6ffff     call sym.imp.strlen
0x000078e3      48895c2448     mov qword [rsp + 0x48], rbx
0x000078e8      4889442418     mov qword [rsp + 0x18], rax
0x000078ed      c644240e01     mov byte [rsp + 0xe], 1
0x000078f2      c644247c00     mov byte [rsp + 0x7c], 0
0x000078f7      48c744245000.  mov qword [rsp + 0x50], 0
0x00007900      c644240d01     mov byte [rsp + 0xd], 1
0x00007905      e999f2ffff     jmp 0x6ba3
0x0000790a      c644240e01     mov byte [rsp + 0xe], 1
0x0000790f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007914      4531e4         xor r12d, r12d
0x00007917      48c744245000.  mov qword [rsp + 0x50], 0
0x00007920      c644240f00     mov byte [rsp + 0xf], 0
0x00007925      4531ff         xor r15d, r15d
0x00007928      c644240d00     mov byte [rsp + 0xd], 0
0x0000792d      48c744241800.  mov qword [rsp + 0x18], 0
0x00007936      48c744244800.  mov qword [rsp + 0x48], 0
0x0000793f      e95ff2ffff     jmp 0x6ba3
0x00007944      c644240e01     mov byte [rsp + 0xe], 1
0x00007949      c644247c00     mov byte [rsp + 0x7c], 0
0x0000794e      4531e4         xor r12d, r12d
0x00007951      48c744245000.  mov qword [rsp + 0x50], 0
0x0000795a      c644240f01     mov byte [rsp + 0xf], 1
0x0000795f      c644240d01     mov byte [rsp + 0xd], 1
0x00007964      e91af2ffff     jmp 0x6b83
0x00007969      4d39fd         cmp r13, r15
0x0000796c      7605           jbe 0x7973
0x0000796e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00007973      488d4102       lea rax, [rcx + 2]
0x00007977      4939c5         cmp r13, rax
0x0000797a      7606           jbe 0x7982
0x0000797c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00007982      4489e0         mov eax, r12d
0x00007985      4c8d7903       lea r15, [rcx + 3]
0x00007989      4531e4         xor r12d, r12d
0x0000798c      bb30000000     mov ebx, 0x30                           ; '0'
0x00007991      e962f3ffff     jmp 0x6cf8
0x00007996      662e0f1f8400.  nop word cs:[rax + rax]
0x000079a0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000079a5      4c89dd         mov rbp, r11
0x000079a8      885c240d       mov byte [rsp + 0xd], bl
0x000079ac      e9a8fcffff     jmp 0x7659
0x000079b1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000079b6      4531e4         xor r12d, r12d
0x000079b9      e902fbffff     jmp 0x74c0
0x000079be      4531d2         xor r10d, r10d
0x000079c1      e9b7fbffff     jmp 0x757d
0x000079c6      48c744245000.  mov qword [rsp + 0x50], 0
0x000079cf      c644240e01     mov byte [rsp + 0xe], 1
0x000079d4      4531e4         xor r12d, r12d
0x000079d7      c644247c00     mov byte [rsp + 0x7c], 0
0x000079dc      e9dafdffff     jmp 0x77bb
0x000079e1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000079e6      4c89f6         mov rsi, r14
0x000079e9      4c89e9         mov rcx, r13
0x000079ec      4889d8         mov rax, rbx
0x000079ef      4889df         mov rdi, rbx
0x000079f2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000079f8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000079fd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00007a05      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00007a08      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00007a0e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007a16      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007a1b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007a20      7326           jae 0x7a48
0x00007a22      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00007a25      7510           jne 0x7a37
0x00007a27      eb1f           jmp 0x7a48
0x00007a29      0f1f80000000.  nop dword [rax]
0x00007a30      41803c0100     cmp byte [r9 + rax], 0
0x00007a35      740e           je 0x7a45
0x00007a37      4883c001       add rax, 1
0x00007a3b      488d540500     lea rdx, [rbp + rax]
0x00007a40      4939d3         cmp r11, rdx
0x00007a43      77eb           ja 0x7a30
0x00007a45      4889c7         mov rdi, rax
0x00007a48      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007a4d      4531e4         xor r12d, r12d
0x00007a50      e961faffff     jmp 0x74b6
0x00007a55      4889df         mov rdi, rbx
0x00007a58      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00007a5e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00007a63      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00007a69      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007a71      4531e4         xor r12d, r12d
0x00007a74      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007a79      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007a7e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007a83      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007a88      e929faffff     jmp 0x74b6
0x00007a8d      488b542468     mov rdx, qword [rsp + 0x68]
0x00007a92      0fb602         movzx eax, byte [rdx]
0x00007a95      84c0           test al, al
0x00007a97      0f842ffeffff   je 0x78cc
0x00007a9d      0f1f00         nop dword [rax]
0x00007aa0      4d39fd         cmp r13, r15
0x00007aa3      7604           jbe 0x7aa9
0x00007aa5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00007aa9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00007aad      420fb6043a     movzx eax, byte [rdx + r15]
0x00007ab2      84c0           test al, al
0x00007ab4      75ea           jne 0x7aa0
0x00007ab6      e911feffff     jmp 0x78cc
0x00007abb      89d0           mov eax, edx
0x00007abd      e955f5ffff     jmp 0x7017
0x00007ac2      0fb61c08       movzx ebx, byte [rax + rcx]
0x00007ac6      80fb3e         cmp bl, 0x3e
0x00007ac9      0f8771f8ffff   ja 0x7340
0x00007acf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00007ad9      480fa3d8       bt rax, rbx
0x00007add      0f835df8ffff   jae 0x7340
0x00007ae3      807c240f00     cmp byte [rsp + 0xf], 0
0x00007ae8      0f85e4010000   jne 0x7cd2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00007aee      4d39fd         cmp r13, r15
0x00007af1      7605           jbe 0x7af8
0x00007af3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00007af8      498d4701       lea rax, [r15 + 1]
0x00007afc      4939c5         cmp r13, rax
0x00007aff      7606           jbe 0x7b07
0x00007b01      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00007b07      498d4702       lea rax, [r15 + 2]
0x00007b0b      4939c5         cmp r13, rax
0x00007b0e      7606           jbe 0x7b16
0x00007b10      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00007b16      498d4703       lea rax, [r15 + 3]
0x00007b1a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00007b1d      7606           jbe 0x7b25
0x00007b1f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00007b25      4983c704       add r15, 4
0x00007b29      31d2           xor edx, edx
0x00007b2b      4531e4         xor r12d, r12d
0x00007b2e      31c0           xor eax, eax
0x00007b30      4889cd         mov rbp, rcx
0x00007b33      e9c0f1ffff     jmp 0x6cf8
0x00007b38      85db           test ebx, ebx
0x00007b3a      0f8488010000   je 0x7cc8
0x00007b40      488d05ee4500.  lea rax, [0x0000c135]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007b47      c644240e01     mov byte [rsp + 0xe], 1
0x00007b4c      c644247c00     mov byte [rsp + 0x7c], 0
0x00007b51      4531e4         xor r12d, r12d
0x00007b54      48c744245000.  mov qword [rsp + 0x50], 0
0x00007b5d      c644240f01     mov byte [rsp + 0xf], 1
0x00007b62      c644240d00     mov byte [rsp + 0xd], 0
0x00007b67      48c744241801.  mov qword [rsp + 0x18], 1
0x00007b70      4531ff         xor r15d, r15d
0x00007b73      4889442448     mov qword [rsp + 0x48], rax
0x00007b78      e926f0ffff     jmp 0x6ba3
0x00007b7d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00007b80      4c89dd         mov rbp, r11
0x00007b83      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00007b88      e9ccfaffff     jmp 0x7659
0x00007b8d      488d059f4500.  lea rax, str.l______l                   ; 0xc133 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007b94      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00007b99      c644247c00     mov byte [rsp + 0x7c], 0
0x00007b9e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00007ba1      48c744245000.  mov qword [rsp + 0x50], 0
0x00007baa      c644240f01     mov byte [rsp + 0xf], 1
0x00007baf      c644240d01     mov byte [rsp + 0xd], 1
0x00007bb4      48c744241801.  mov qword [rsp + 0x18], 1
0x00007bbd      4531ff         xor r15d, r15d
0x00007bc0      4889442448     mov qword [rsp + 0x48], rax
0x00007bc5      e9d9efffff     jmp 0x6ba3
0x00007bca      89d0           mov eax, edx
0x00007bcc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00007bd1      4885db         test rbx, rbx
0x00007bd4      742c           je 0x7c02
0x00007bd6      84c0           test al, al
0x00007bd8      7428           je 0x7c02
0x00007bda      0fb60b         movzx ecx, byte [rbx]
0x00007bdd      4889d8         mov rax, rbx
0x00007be0      84c9           test cl, cl
0x00007be2      741e           je 0x7c02
0x00007be4      4c89fa         mov rdx, r15
0x00007be7      4c29f8         sub rax, r15
0x00007bea      4939d5         cmp r13, rdx
0x00007bed      7604           jbe 0x7bf3
0x00007bef      41880c16       mov byte [r14 + rdx], cl
0x00007bf3      4883c201       add rdx, 1
0x00007bf7      0fb60c10       movzx ecx, byte [rax + rdx]
0x00007bfb      84c9           test cl, cl
0x00007bfd      75eb           jne 0x7bea
0x00007bff      4989d7         mov r15, rdx
0x00007c02      4d39fd         cmp r13, r15
0x00007c05      0f869efaffff   jbe 0x76a9
0x00007c0b      43c6043e00     mov byte [r14 + r15], 0
0x00007c10      e994faffff     jmp 0x76a9
0x00007c15      837c240802     cmp dword [rsp + 8], 2
0x00007c1a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00007c1f      4c89dd         mov rbp, r11
0x00007c22      0f94c0         sete al
0x00007c25      885c240d       mov byte [rsp + 0xd], bl
0x00007c29      e92bfaffff     jmp 0x7659
0x00007c2e      8b742408       mov esi, dword [rsp + 8]
0x00007c32      4889cf         mov rdi, rcx
0x00007c35      e8a6edffff     call sym.gettext_quote.part.1
0x00007c3a      4889442468     mov qword [rsp + 0x68], rax
0x00007c3f      e952fcffff     jmp 0x7896
0x00007c44      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00007c48      4889cf         mov rdi, rcx
0x00007c4b      e890edffff     call sym.gettext_quote.part.1
0x00007c50      4889442460     mov qword [rsp + 0x60], rax
0x00007c55      e967fcffff     jmp 0x78c1
0x00007c5a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00007c5f      4c89dd         mov rbp, r11
0x00007c62      89d0           mov eax, edx
0x00007c64      885c240d       mov byte [rsp + 0xd], bl
0x00007c68      e9ecf9ffff     jmp 0x7659
0x00007c6d      4883ec08       sub rsp, 8
0x00007c71      41b805000000   mov r8d, 5
0x00007c77      4c89d9         mov rcx, r11
0x00007c7a      ff742468       push qword [rsp + 0x68]
0x00007c7e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00007c82      4c89f7         mov rdi, r14
0x00007c85      ff742438       push qword [rsp + 0x38]
0x00007c89      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00007c91      488b542430     mov rdx, qword [rsp + 0x30]
0x00007c96      488b742470     mov rsi, qword [rsp + 0x70]
0x00007c9b      e830eeffff     call sym.quotearg_buffer_restyled
0x00007ca0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00007ca4      4989c7         mov r15, rax
0x00007ca7      e9fdf9ffff     jmp 0x76a9
0x00007cac      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00007cb1      e916ffffff     jmp 0x7bcc
0x00007cb6      c74424080200.  mov dword [rsp + 8], 2
0x00007cbe      e996f9ffff     jmp 0x7659
0x00007cc3      e858a2ffff     call sym.imp.__stack_chk_fail
0x00007cc8      c644240d00     mov byte [rsp + 0xd], 0
0x00007ccd      e96ffaffff     jmp 0x7741
0x00007cd2      4c89dd         mov rbp, r11
0x00007cd5      e996f9ffff     jmp 0x7670
0x00007cda      c644240e01     mov byte [rsp + 0xe], 1
0x00007cdf      31c0           xor eax, eax
0x00007ce1      4531e4         xor r12d, r12d
0x00007ce4      48c744245000.  mov qword [rsp + 0x50], 0
0x00007ced      e9a2f5ffff     jmp 0x7294
0x00007cf2      4c89ea         mov rdx, r13
0x00007cf5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00007cfa      e9f3f5ffff     jmp 0x72f2
0x00007cff      e8bca0ffff     call sym.imp.abort
0x00007d04      6690           nop
0x00007d06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00007d10      4157           push r15
0x00007d12      4156           push r14
0x00007d14      4c63ff         movsxd r15, edi
0x00007d17      4155           push r13
0x00007d19      4154           push r12
0x00007d1b      4989d6         mov r14, rdx
0x00007d1e      55             push rbp
0x00007d1f      53             push rbx
0x00007d20      4889cd         mov rbp, rcx
0x00007d23      4883ec28       sub rsp, 0x28
0x00007d27      4889742408     mov qword [rsp + 8], rsi
0x00007d2c      e89fa0ffff     call sym.imp.__errno_location
0x00007d31      4989c5         mov r13, rax
0x00007d34      8b00           mov eax, dword [rax]
0x00007d36      4585ff         test r15d, r15d
0x00007d39      488b1d408320.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x210080:8]=0x210090 obj.slotvec0
0x00007d40      89442418       mov dword [rsp + 0x18], eax
0x00007d44      0f8867010000   js 0x7eb1
0x00007d4a      44393d278320.  cmp dword [obj.nslots], r15d            ; [0x210078:4]=1
0x00007d51      7f62           jg 0x7db5
0x00007d53      4181ffffffff.  cmp r15d, 0x7fffffff
0x00007d5a      0f8456010000   je 0x7eb6
0x00007d60      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00007d64      488d05258320.  lea rax, obj.slotvec0                   ; 0x210090
0x00007d6b      4963f4         movsxd rsi, r12d
0x00007d6e      48c1e604       shl rsi, 4
0x00007d72      4839c3         cmp rbx, rax
0x00007d75      0f8415010000   je 0x7e90
0x00007d7b      4889df         mov rdi, rbx
0x00007d7e      e8ed160000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00007d83      4889c3         mov rbx, rax
0x00007d86      488905f38220.  mov qword [obj.slotvec], rax            ; [0x210080:8]=0x210090 obj.slotvec0
0x00007d8d      48633de48220.  movsxd rdi, dword [obj.nslots]          ; [0x210078:4]=1
0x00007d94      4489e2         mov edx, r12d
0x00007d97      31f6           xor esi, esi
0x00007d99      29fa           sub edx, edi
0x00007d9b      48c1e704       shl rdi, 4
0x00007d9f      4863d2         movsxd rdx, edx
0x00007da2      4801df         add rdi, rbx
0x00007da5      48c1e204       shl rdx, 4
0x00007da9      e812a2ffff     call sym.imp.memset
0x00007dae      448925c38220.  mov dword [obj.nslots], r12d            ; [0x210078:4]=1
0x00007db5      8b4504         mov eax, dword [rbp + 4]
0x00007db8      49c1e704       shl r15, 4
0x00007dbc      4883ec08       sub rsp, 8
0x00007dc0      4c01fb         add rbx, r15
0x00007dc3      4c8d7d08       lea r15, [rbp + 8]
0x00007dc7      448b4500       mov r8d, dword [rbp]
0x00007dcb      4c8b1b         mov r11, qword [rbx]
0x00007dce      4c8b6308       mov r12, qword [rbx + 8]
0x00007dd2      4c89f1         mov rcx, r14
0x00007dd5      83c801         or eax, 1
0x00007dd8      89442424       mov dword [rsp + 0x24], eax
0x00007ddc      ff7530         push qword [rbp + 0x30]
0x00007ddf      4189c1         mov r9d, eax
0x00007de2      ff7528         push qword [rbp + 0x28]
0x00007de5      4157           push r15
0x00007de7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00007dea      488b542428     mov rdx, qword [rsp + 0x28]
0x00007def      4c89e7         mov rdi, r12
0x00007df2      4c895c2430     mov qword [rsp + 0x30], r11
0x00007df7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00007dfc      4883c420       add rsp, 0x20
0x00007e00      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00007e05      4939c3         cmp r11, rax
0x00007e08      7767           ja 0x7e71
0x00007e0a      488d7001       lea rsi, [rax + 1]
0x00007e0e      488d054b8320.  lea rax, obj.slot0                      ; 0x210160
0x00007e15      4939c4         cmp r12, rax
0x00007e18      488933         mov qword [rbx], rsi
0x00007e1b      7412           je 0x7e2f
0x00007e1d      4c89e7         mov rdi, r12
0x00007e20      4889742410     mov qword [rsp + 0x10], rsi
0x00007e25      e8869fffff     call sym.imp.free
0x00007e2a      488b742410     mov rsi, qword [rsp + 0x10]
0x00007e2f      4889f7         mov rdi, rsi
0x00007e32      4889742410     mov qword [rsp + 0x10], rsi
0x00007e37      e8d4150000     call sym.xmalloc
0x00007e3c      4883ec08       sub rsp, 8
0x00007e40      48894308       mov qword [rbx + 8], rax
0x00007e44      448b4500       mov r8d, dword [rbp]
0x00007e48      ff7530         push qword [rbp + 0x30]
0x00007e4b      ff7528         push qword [rbp + 0x28]
0x00007e4e      4c89f1         mov rcx, r14
0x00007e51      4157           push r15
0x00007e53      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00007e58      4889c7         mov rdi, rax
0x00007e5b      488b542428     mov rdx, qword [rsp + 0x28]
0x00007e60      488b742430     mov rsi, qword [rsp + 0x30]
0x00007e65      4989c4         mov r12, rax
0x00007e68      e863ecffff     call sym.quotearg_buffer_restyled
0x00007e6d      4883c420       add rsp, 0x20
0x00007e71      8b442418       mov eax, dword [rsp + 0x18]
0x00007e75      41894500       mov dword [r13], eax
0x00007e79      4883c428       add rsp, 0x28
0x00007e7d      4c89e0         mov rax, r12
0x00007e80      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00007e81      5d             pop rbp
0x00007e82      415c           pop r12
0x00007e84      415d           pop r13
0x00007e86      415e           pop r14
0x00007e88      415f           pop r15
0x00007e8a      c3             ret
0x00007e8b      0f1f440000     nop dword [rax + rax]
0x00007e90      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00007e92      e8d9150000     call sym.xrealloc
0x00007e97      660f6f05f181.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00007e9f      4889c3         mov rbx, rax
0x00007ea2      488905d78120.  mov qword [obj.slotvec], rax            ; [0x210080:8]=0x210090 obj.slotvec0
0x00007ea9      0f1100         movups xmmword [rax], xmm0
0x00007eac      e9dcfeffff     jmp 0x7d8d
0x00007eb1      e80a9fffff     call sym.imp.abort
0x00007eb6      e8a5170000     call sym.xalloc_die
0x00007ebb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00007ec0      4154           push r12
0x00007ec2      55             push rbp
0x00007ec3      53             push rbx
0x00007ec4      4889fb         mov rbx, rdi
0x00007ec7      e8049fffff     call sym.imp.__errno_location
0x00007ecc      448b20         mov r12d, dword [rax]
0x00007ecf      4889c5         mov rbp, rax
0x00007ed2      488d05878320.  lea rax, obj.default_quoting_options    ; 0x210260
0x00007ed9      4885db         test rbx, rbx
0x00007edc      be38000000     mov esi, 0x38                           ; '8'
0x00007ee1      480f44d8       cmove rbx, rax
0x00007ee5      4889df         mov rdi, rbx
0x00007ee8      e823170000     call sym.xmemdup
0x00007eed      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00007ef1      5b             pop rbx
0x00007ef2      5d             pop rbp
0x00007ef3      415c           pop r12
0x00007ef5      c3             ret
0x00007ef6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00007f00      488d05598320.  lea rax, obj.default_quoting_options    ; 0x210260
0x00007f07      4885ff         test rdi, rdi
0x00007f0a      480f44f8       cmove rdi, rax
0x00007f0e      8b07           mov eax, dword [rdi]
0x00007f10      c3             ret
0x00007f11      0f1f440000     nop dword [rax + rax]
0x00007f16      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00007f20      488d05398320.  lea rax, obj.default_quoting_options    ; 0x210260
0x00007f27      4885ff         test rdi, rdi
0x00007f2a      480f44f8       cmove rdi, rax
0x00007f2e      8937           mov dword [rdi], esi
0x00007f30      c3             ret
0x00007f31      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00007f36      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00007f40      488d05198320.  lea rax, obj.default_quoting_options    ; 0x210260
0x00007f47      4885ff         test rdi, rdi
0x00007f4a      89f1           mov ecx, esi
0x00007f4c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00007f50      89f0           mov eax, esi
0x00007f52      83e11f         and ecx, 0x1f
0x00007f55      c0e805         shr al, 5
0x00007f58      0fb6c0         movzx eax, al
0x00007f5b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00007f60      8b37           mov esi, dword [rdi]
0x00007f62      89f0           mov eax, esi
0x00007f64      d3e8           shr eax, cl
0x00007f66      31c2           xor edx, eax
0x00007f68      83e001         and eax, 1
0x00007f6b      83e201         and edx, 1
0x00007f6e      d3e2           shl edx, cl
0x00007f70      31f2           xor edx, esi
0x00007f72      8917           mov dword [rdi], edx
0x00007f74      c3             ret
0x00007f75      90             nop
0x00007f76      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00007f80      488d05d98220.  lea rax, obj.default_quoting_options    ; 0x210260
0x00007f87      4885ff         test rdi, rdi
0x00007f8a      480f44f8       cmove rdi, rax
0x00007f8e      8b4704         mov eax, dword [rdi + 4]
0x00007f91      897704         mov dword [rdi + 4], esi
0x00007f94      c3             ret
0x00007f95      90             nop
0x00007f96      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00007fa0      488d05b98220.  lea rax, obj.default_quoting_options    ; 0x210260
0x00007fa7      4885ff         test rdi, rdi
0x00007faa      480f44f8       cmove rdi, rax
0x00007fae      4885f6         test rsi, rsi
0x00007fb1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00007fb7      740e           je 0x7fc7
0x00007fb9      4885d2         test rdx, rdx
0x00007fbc      7409           je 0x7fc7
0x00007fbe      48897728       mov qword [rdi + 0x28], rsi
0x00007fc2      48895730       mov qword [rdi + 0x30], rdx
0x00007fc6      c3             ret
0x00007fc7      4883ec08       sub rsp, 8
0x00007fcb      e8f09dffff     call sym.imp.abort
;-- quotearg_buffer:
0x00007fd0      4157           push r15
0x00007fd2      4156           push r14
0x00007fd4      488d05858220.  lea rax, obj.default_quoting_options    ; 0x210260
0x00007fdb      4155           push r13
0x00007fdd      4154           push r12
0x00007fdf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00007fe2      55             push rbp
0x00007fe3      53             push rbx
0x00007fe4      4c89c3         mov rbx, r8
0x00007fe7      4989f6         mov r14, rsi
0x00007fea      4989d7         mov r15, rdx
0x00007fed      4883ec18       sub rsp, 0x18
0x00007ff1      4d85c0         test r8, r8
0x00007ff4      480f44d8       cmove rbx, rax
0x00007ff8      48894c2408     mov qword [rsp + 8], rcx
0x00007ffd      e8ce9dffff     call sym.imp.__errno_location
0x00008002      448b20         mov r12d, dword [rax]
0x00008005      4889c5         mov rbp, rax
0x00008008      488d4308       lea rax, [rbx + 8]
0x0000800c      4883ec08       sub rsp, 8
0x00008010      448b4b04       mov r9d, dword [rbx + 4]
0x00008014      ff7330         push qword [rbx + 0x30]
0x00008017      448b03         mov r8d, dword [rbx]
0x0000801a      ff7328         push qword [rbx + 0x28]
0x0000801d      4c89fa         mov rdx, r15
0x00008020      50             push rax
0x00008021      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00008026      4c89f6         mov rsi, r14
0x00008029      4c89ef         mov rdi, r13
0x0000802c      e89feaffff     call sym.quotearg_buffer_restyled
0x00008031      44896500       mov dword [rbp], r12d
0x00008035      4883c438       add rsp, 0x38
0x00008039      5b             pop rbx
0x0000803a      5d             pop rbp
0x0000803b      415c           pop r12
0x0000803d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000803f      415e           pop r14
0x00008041      415f           pop r15
0x00008043      c3             ret
0x00008044      6690           nop
0x00008046      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00008050      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00008052      4156           push r14
0x00008054      488d05058220.  lea rax, obj.default_quoting_options    ; 0x210260
0x0000805b      4155           push r13
0x0000805d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000805f      4989d4         mov r12, rdx
0x00008062      55             push rbp
0x00008063      53             push rbx
0x00008064      4889cb         mov rbx, rcx
0x00008067      4989fe         mov r14, rdi
0x0000806a      4989f7         mov r15, rsi
0x0000806d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00008071      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00008074      480f44d8       cmove rbx, rax
0x00008078      31ed           xor ebp, ebp
0x0000807a      e8519dffff     call sym.imp.__errno_location
0x0000807f      4d85e4         test r12, r12
0x00008082      4989c5         mov r13, rax
0x00008085      8b00           mov eax, dword [rax]
0x00008087      400f94c5       sete bpl
0x0000808b      0b6b04         or ebp, dword [rbx + 4]
0x0000808e      4c8d5308       lea r10, [rbx + 8]
0x00008092      4883ec08       sub rsp, 8
0x00008096      448b03         mov r8d, dword [rbx]
0x00008099      4c89f9         mov rcx, r15
0x0000809c      89442414       mov dword [rsp + 0x14], eax
0x000080a0      ff7330         push qword [rbx + 0x30]
0x000080a3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000080a6      ff7328         push qword [rbx + 0x28]
0x000080a9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000080ab      31f6           xor esi, esi
0x000080ad      4189e9         mov r9d, ebp
0x000080b0      31ff           xor edi, edi
0x000080b2      4c89542440     mov qword [rsp + 0x40], r10
0x000080b7      e814eaffff     call sym.quotearg_buffer_restyled
0x000080bc      488d7001       lea rsi, [rax + 1]
0x000080c0      4889442448     mov qword [rsp + 0x48], rax
0x000080c5      4883c420       add rsp, 0x20
0x000080c9      4889f7         mov rdi, rsi
0x000080cc      4889742418     mov qword [rsp + 0x18], rsi
0x000080d1      e83a130000     call sym.xmalloc
0x000080d6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000080db      4883ec08       sub rsp, 8
0x000080df      ff7330         push qword [rbx + 0x30]
0x000080e2      ff7328         push qword [rbx + 0x28]
0x000080e5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000080ea      4189e9         mov r9d, ebp
0x000080ed      448b03         mov r8d, dword [rbx]
0x000080f0      4c89f9         mov rcx, r15
0x000080f3      4c89f2         mov rdx, r14
0x000080f6      4889c7         mov rdi, rax
0x000080f9      4152           push r10
0x000080fb      488b742438     mov rsi, qword [rsp + 0x38]
0x00008100      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00008105      8b44242c       mov eax, dword [rsp + 0x2c]
0x00008109      4883c420       add rsp, 0x20
0x0000810d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00008110      41894500       mov dword [r13], eax
0x00008114      7409           je 0x811f
0x00008116      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000811b      4d891c24       mov qword [r12], r11
0x0000811f      488b442410     mov rax, qword [rsp + 0x10]
0x00008124      4883c438       add rsp, 0x38
0x00008128      5b             pop rbx
0x00008129      5d             pop rbp
0x0000812a      415c           pop r12
0x0000812c      415d           pop r13
0x0000812e      415e           pop r14
0x00008130      415f           pop r15
0x00008132      c3             ret
0x00008133      0f1f00         nop dword [rax]
0x00008136      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00008140      4889d1         mov rcx, rdx
0x00008143      31d2           xor edx, edx
0x00008145      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000814a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00008150      8b05227f2000   mov eax, dword [obj.nslots]             ; [0x210078:4]=1
0x00008156      4154           push r12
0x00008158      4c8b25217f20.  mov r12, qword [obj.slotvec]            ; [0x210080:8]=0x210090 obj.slotvec0
0x0000815f      55             push rbp
0x00008160      53             push rbx
0x00008161      83f801         cmp eax, 1
0x00008164      7e2b           jle 0x8191                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00008166      83e802         sub eax, 2
0x00008169      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000816e      48c1e004       shl rax, 4
0x00008172      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00008177      660f1f840000.  nop word [rax + rax]
0x00008180      488b3b         mov rdi, qword [rbx]
0x00008183      4883c310       add rbx, 0x10
0x00008187      e8249cffff     call sym.imp.free
0x0000818c      4839eb         cmp rbx, rbp
0x0000818f      75ef           jne 0x8180
0x00008191      498b7c2408     mov rdi, qword [r12 + 8]
0x00008196      488d1dc37f20.  lea rbx, obj.slot0                      ; 0x210160
0x0000819d      4839df         cmp rdi, rbx
0x000081a0      7417           je 0x81b9
0x000081a2      e8099cffff     call sym.imp.free
0x000081a7      48c705de7e20.  mov qword [obj.slotvec0], 0x100         ; [0x210090:8]=256
0x000081b2      48891ddf7e20.  mov qword [0x00210098], rbx             ; [0x210098:8]=0x210160 obj.slot0
0x000081b9      488d1dd07e20.  lea rbx, obj.slotvec0                   ; 0x210090
0x000081c0      4939dc         cmp r12, rbx
0x000081c3      740f           je 0x81d4
0x000081c5      4c89e7         mov rdi, r12
0x000081c8      e8e39bffff     call sym.imp.free
0x000081cd      48891dac7e20.  mov qword [obj.slotvec], rbx            ; [0x210080:8]=0x210090 obj.slotvec0
0x000081d4      5b             pop rbx
0x000081d5      c705997e2000.  mov dword [obj.nslots], 1               ; [0x210078:4]=1
0x000081df      5d             pop rbp
0x000081e0      415c           pop r12
0x000081e2      c3             ret
0x000081e3      0f1f00         nop dword [rax]
0x000081e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000081f0      488d0d698020.  lea rcx, obj.default_quoting_options    ; 0x210260
0x000081f7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000081fe      e90dfbffff     jmp sym.quotearg_n_options
0x00008203      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00008206      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00008210      488d0d498020.  lea rcx, obj.default_quoting_options    ; 0x210260
0x00008217      e9f4faffff     jmp sym.quotearg_n_options
0x0000821c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00008220      488d0d398020.  lea rcx, obj.default_quoting_options    ; 0x210260
0x00008227      4889fe         mov rsi, rdi
0x0000822a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008231      31ff           xor edi, edi
0x00008233      e9d8faffff     jmp sym.quotearg_n_options
0x00008238      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00008240      488d0d198020.  lea rcx, obj.default_quoting_options    ; 0x210260
0x00008247      4889f2         mov rdx, rsi
0x0000824a      4889fe         mov rsi, rdi
0x0000824d      31ff           xor edi, edi
0x0000824f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00008254      6690           nop
0x00008256      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00008260      4883ec48       sub rsp, 0x48
0x00008264      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00008267      64488b142528.  mov rdx, qword fs:[0x28]
0x00008270      4889542438     mov qword [rsp + 0x38], rdx
0x00008275      31d2           xor edx, edx
0x00008277      83fe0a         cmp esi, 0xa
0x0000827a      7468           je 0x82e4
0x0000827c      893424         mov dword [rsp], esi
0x0000827f      4889e1         mov rcx, rsp
0x00008282      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008289      4889c6         mov rsi, rax
0x0000828c      48c744240400.  mov qword [rsp + 4], 0
0x00008295      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000829e      48c744241400.  mov qword [rsp + 0x14], 0
0x000082a7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000082b0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000082b9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000082c2      c74424340000.  mov dword [rsp + 0x34], 0
0x000082ca      e841faffff     call sym.quotearg_n_options
0x000082cf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000082d4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000082dd      750a           jne 0x82e9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000082df      4883c448       add rsp, 0x48
0x000082e3      c3             ret
0x000082e4      e8d79affff     call sym.imp.abort
0x000082e9      e8329cffff     call sym.imp.__stack_chk_fail
0x000082ee      6690           nop
;-- quotearg_n_style_mem:
0x000082f0      4883ec48       sub rsp, 0x48
0x000082f4      4889d0         mov rax, rdx
0x000082f7      4889ca         mov rdx, rcx
0x000082fa      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00008303      48894c2438     mov qword [rsp + 0x38], rcx
0x00008308      31c9           xor ecx, ecx
0x0000830a      83fe0a         cmp esi, 0xa
0x0000830d      7461           je 0x8370
0x0000830f      893424         mov dword [rsp], esi
0x00008312      4889e1         mov rcx, rsp
0x00008315      4889c6         mov rsi, rax
0x00008318      48c744240400.  mov qword [rsp + 4], 0
0x00008321      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000832a      48c744241400.  mov qword [rsp + 0x14], 0
0x00008333      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000833c      48c744242400.  mov qword [rsp + 0x24], 0
0x00008345      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000834e      c74424340000.  mov dword [rsp + 0x34], 0
0x00008356      e8b5f9ffff     call sym.quotearg_n_options
0x0000835b      488b542438     mov rdx, qword [rsp + 0x38]
0x00008360      644833142528.  xor rdx, qword fs:[0x28]
0x00008369      750a           jne 0x8375
0x0000836b      4883c448       add rsp, 0x48
0x0000836f      c3             ret
0x00008370      e84b9affff     call sym.imp.abort
0x00008375      e8a69bffff     call sym.imp.__stack_chk_fail
0x0000837a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00008380      4889f2         mov rdx, rsi
0x00008383      89fe           mov esi, edi
0x00008385      31ff           xor edi, edi
0x00008387      e9d4feffff     jmp sym.quotearg_n_style
0x0000838c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00008390      4889d1         mov rcx, rdx
0x00008393      4889f2         mov rdx, rsi
0x00008396      89fe           mov esi, edi
0x00008398      31ff           xor edi, edi
0x0000839a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000839f      90             nop
;-- quotearg_char_mem:
0x000083a0      4883ec48       sub rsp, 0x48
0x000083a4      89d1           mov ecx, edx
0x000083a6      64488b042528.  mov rax, qword fs:[0x28]
0x000083af      4889442438     mov qword [rsp + 0x38], rax
0x000083b4      31c0           xor eax, eax
0x000083b6      488b05d37e20.  mov rax, qword [0x00210290]             ; [0x210290:8]=0
0x000083bd      4989e0         mov r8, rsp
0x000083c0      83e11f         and ecx, 0x1f
0x000083c3      660f6f05957e.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000083cb      4889442430     mov qword [rsp + 0x30], rax
0x000083d0      89d0           mov eax, edx
0x000083d2      0f290424       movaps xmmword [rsp], xmm0
0x000083d6      c0e805         shr al, 5
0x000083d9      0fb6c0         movzx eax, al
0x000083dc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000083e1      660f6f05877e.  movdqa xmm0, xmmword [0x00210270]
0x000083e9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000083ee      660f6f058a7e.  movdqa xmm0, xmmword [0x00210280]
0x000083f6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000083fb      418b11         mov edx, dword [r9]
0x000083fe      89d0           mov eax, edx
0x00008400      d3e8           shr eax, cl
0x00008402      f7d0           not eax
0x00008404      83e001         and eax, 1
0x00008407      d3e0           shl eax, cl
0x00008409      4c89c1         mov rcx, r8
0x0000840c      31d0           xor eax, edx
0x0000840e      4889f2         mov rdx, rsi
0x00008411      4889fe         mov rsi, rdi
0x00008414      418901         mov dword [r9], eax
0x00008417      31ff           xor edi, edi
0x00008419      e8f2f8ffff     call sym.quotearg_n_options
0x0000841e      488b742438     mov rsi, qword [rsp + 0x38]
0x00008423      644833342528.  xor rsi, qword fs:[0x28]
0x0000842c      7505           jne 0x8433
0x0000842e      4883c448       add rsp, 0x48
0x00008432      c3             ret
0x00008433      e8e89affff     call sym.imp.__stack_chk_fail
0x00008438      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00008440      400fbed6       movsx edx, sil
0x00008444      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000844b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00008450      ba3a000000     mov edx, 0x3a                           ; ':'
0x00008455      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000845c      e93fffffff     jmp sym.quotearg_char_mem
0x00008461      0f1f440000     nop dword [rax + rax]
0x00008466      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00008470      ba3a000000     mov edx, 0x3a                           ; ':'
0x00008475      e926ffffff     jmp sym.quotearg_char_mem
0x0000847a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00008480      4883ec48       sub rsp, 0x48
0x00008484      4889d0         mov rax, rdx
0x00008487      64488b142528.  mov rdx, qword fs:[0x28]
0x00008490      4889542438     mov qword [rsp + 0x38], rdx
0x00008495      31d2           xor edx, edx
0x00008497      83fe0a         cmp esi, 0xa
0x0000849a      7468           je 0x8504
0x0000849c      893424         mov dword [rsp], esi
0x0000849f      4889e1         mov rcx, rsp
0x000084a2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000084a9      4889c6         mov rsi, rax
0x000084ac      48c744240400.  mov qword [rsp + 4], 0
0x000084b5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000084be      48c744241400.  mov qword [rsp + 0x14], 0
0x000084c7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000084d0      48c744242400.  mov qword [rsp + 0x24], 0
0x000084d9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000084e2      c74424340000.  mov dword [rsp + 0x34], 0
0x000084ea      e821f8ffff     call sym.quotearg_n_options
0x000084ef      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000084f4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000084fd      750a           jne 0x8509
0x000084ff      4883c448       add rsp, 0x48
0x00008503      c3             ret
0x00008504      e8b798ffff     call sym.imp.abort
0x00008509      e8129affff     call sym.imp.__stack_chk_fail
0x0000850e      6690           nop
;-- quotearg_n_custom_mem:
0x00008510      4883ec48       sub rsp, 0x48
0x00008514      4989c9         mov r9, rcx
0x00008517      488b0d727d20.  mov rcx, qword [0x00210290]             ; [0x210290:8]=0
0x0000851e      660f6f053a7d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00008526      64488b042528.  mov rax, qword fs:[0x28]
0x0000852f      4889442438     mov qword [rsp + 0x38], rax
0x00008534      31c0           xor eax, eax
0x00008536      0f290424       movaps xmmword [rsp], xmm0
0x0000853a      4885f6         test rsi, rsi
0x0000853d      48894c2430     mov qword [rsp + 0x30], rcx
0x00008542      c704240a0000.  mov dword [rsp], 0xa
0x00008549      660f6f051f7d.  movdqa xmm0, xmmword [0x00210270]
0x00008551      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00008556      660f6f05227d.  movdqa xmm0, xmmword [0x00210280]
0x0000855e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00008563      7432           je 0x8597
0x00008565      4885d2         test rdx, rdx
0x00008568      742d           je 0x8597
0x0000856a      4889742428     mov qword [rsp + 0x28], rsi
0x0000856f      4889542430     mov qword [rsp + 0x30], rdx
0x00008574      4889e1         mov rcx, rsp
0x00008577      4c89c2         mov rdx, r8
0x0000857a      4c89ce         mov rsi, r9
0x0000857d      e88ef7ffff     call sym.quotearg_n_options
0x00008582      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00008587      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008590      750a           jne 0x859c
0x00008592      4883c448       add rsp, 0x48
0x00008596      c3             ret
0x00008597      e82498ffff     call sym.imp.abort
0x0000859c      e87f99ffff     call sym.imp.__stack_chk_fail
0x000085a1      0f1f440000     nop dword [rax + rax]
0x000085a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000085b0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000085b7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000085bc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000085c0      4889d1         mov rcx, rdx
0x000085c3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000085ca      4889f2         mov rdx, rsi
0x000085cd      4889fe         mov rsi, rdi
0x000085d0      31ff           xor edi, edi
0x000085d2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000085d7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000085e0      4989c8         mov r8, rcx
0x000085e3      4889d1         mov rcx, rdx
0x000085e6      4889f2         mov rdx, rsi
0x000085e9      4889fe         mov rsi, rdi
0x000085ec      31ff           xor edi, edi
0x000085ee      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000085f3      0f1f00         nop dword [rax]
0x000085f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00008600      488d0d397a20.  lea rcx, obj.quote_quoting_options      ; 0x210040
0x00008607      e904f7ffff     jmp sym.quotearg_n_options
0x0000860c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00008610      488d0d297a20.  lea rcx, obj.quote_quoting_options      ; 0x210040
0x00008617      4889f2         mov rdx, rsi
0x0000861a      4889fe         mov rsi, rdi
0x0000861d      31ff           xor edi, edi
0x0000861f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00008624      6690           nop
0x00008626      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00008630      488d0d097a20.  lea rcx, obj.quote_quoting_options      ; 0x210040
0x00008637      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000863e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00008643      0f1f00         nop dword [rax]
0x00008646      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00008650      488d0de97920.  lea rcx, obj.quote_quoting_options      ; 0x210040
0x00008657      4889fe         mov rsi, rdi
0x0000865a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008661      31ff           xor edi, edi
0x00008663      e9a8f6ffff     jmp sym.quotearg_n_options
0x00008668      0f1f84000000.  nop dword [rax + rax]
;-- renameatu:
0x00008670      4157           push r15
0x00008672      4156           push r14
0x00008674      4589c1         mov r9d, r8d
0x00008677      4155           push r13
0x00008679      4154           push r12
0x0000867b      4189d6         mov r14d, edx
0x0000867e      55             push rbp
0x0000867f      53             push rbx
0x00008680      4989f4         mov r12, rsi
0x00008683      4989cd         mov r13, rcx
0x00008686      4489c5         mov ebp, r8d
0x00008689      4989c8         mov r8, rcx
0x0000868c      4881ec480100.  sub rsp, 0x148
0x00008693      89d1           mov ecx, edx
0x00008695      4889f2         mov rdx, rsi
0x00008698      64488b042528.  mov rax, qword fs:[0x28]
0x000086a1      488984243801.  mov qword [rsp + 0x138], rax
0x000086a9      31c0           xor eax, eax
0x000086ab      89fe           mov esi, edi
0x000086ad      897c2404       mov dword [rsp + 4], edi
0x000086b1      bf3c010000     mov edi, 0x13c
0x000086b6      e8d599ffff     call sym.imp.syscall
0x000086bb      4889c3         mov rbx, rax
0x000086be      4189c7         mov r15d, eax
0x000086c1      e80a97ffff     call sym.imp.__errno_location
0x000086c6      85db           test ebx, ebx
0x000086c8      7836           js 0x8700
0x000086ca      488b94243801.  mov rdx, qword [rsp + 0x138]
0x000086d2      644833142528.  xor rdx, qword fs:[0x28]
0x000086db      4489f8         mov eax, r15d
0x000086de      0f85f1010000   jne 0x88d5
0x000086e4      4881c4480100.  add rsp, 0x148
0x000086eb      5b             pop rbx
0x000086ec      5d             pop rbp
0x000086ed      415c           pop r12
0x000086ef      415d           pop r13
0x000086f1      415e           pop r14
0x000086f3      415f           pop r15
0x000086f5      c3             ret
0x000086f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008700      4989c1         mov r9, rax
0x00008703      8b00           mov eax, dword [rax]
0x00008705      8d48ea         lea ecx, [rax - 0x16]
0x00008708      83e1ef         and ecx, 0xffffffef                     ; 4294967279
0x0000870b      0f95c3         setne bl
0x0000870e      83f85f         cmp eax, 0x5f
0x00008711      0f95c0         setne al
0x00008714      20c3           and bl, al
0x00008716      75b2           jne 0x86ca
0x00008718      85ed           test ebp, ebp
0x0000871a      7554           jne 0x8770
0x0000871c      4c89e7         mov rdi, r12
0x0000871f      4c894c2408     mov qword [rsp + 8], r9
0x00008724      e8c797ffff     call sym.imp.strlen
0x00008729      4c89ef         mov rdi, r13
0x0000872c      4889c5         mov rbp, rax
0x0000872f      e8bc97ffff     call sym.imp.strlen
0x00008734      4885ed         test rbp, rbp
0x00008737      741a           je 0x8753
0x00008739      4885c0         test rax, rax
0x0000873c      4c8b4c2408     mov r9, qword [rsp + 8]
0x00008741      7410           je 0x8753
0x00008743      41807c2cff2f   cmp byte [r12 + rbp - 1], 0x2f
0x00008749      7445           je 0x8790
0x0000874b      41807c05ff2f   cmp byte [r13 + rax - 1], 0x2f
0x00008751      743d           je 0x8790
0x00008753      8b7c2404       mov edi, dword [rsp + 4]
0x00008757      4c89e9         mov rcx, r13
0x0000875a      4489f2         mov edx, r14d
0x0000875d      4c89e6         mov rsi, r12
0x00008760      e8bb9affff     call sym.imp.renameat
0x00008765      4189c7         mov r15d, eax
0x00008768      e95dffffff     jmp 0x86ca
0x0000876d      0f1f00         nop dword [rax]
0x00008770      83e5fe         and ebp, 0xfffffffe                     ; 4294967294
0x00008773      746b           je 0x87e0
0x00008775      41c7015f0000.  mov dword [r9], 0x5f                    ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000877c      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x00008782      e943ffffff     jmp 0x86ca
0x00008787      660f1f840000.  nop word [rax + rax]
0x00008790      8b742404       mov esi, dword [rsp + 4]
0x00008794      488d4c2410     lea rcx, [rsp + 0x10]
0x00008799      41b800010000   mov r8d, 0x100
0x0000879f      4c89e2         mov rdx, r12
0x000087a2      bf01000000     mov edi, 1
0x000087a7      4c894c2408     mov qword [rsp + 8], r9
0x000087ac      e8af97ffff     call sym.imp.__fxstatat
0x000087b1      85c0           test eax, eax
0x000087b3      7564           jne 0x8819
0x000087b5      84db           test bl, bl
0x000087b7      4c8b4c2408     mov r9, qword [rsp + 8]
0x000087bc      747c           je 0x883a
0x000087be      8b442428       mov eax, dword [rsp + 0x28]
0x000087c2      2500f00000     and eax, 0xf000
0x000087c7      3d00400000     cmp eax, 0x4000
0x000087cc      7485           je 0x8753
0x000087ce      41c701020000.  mov dword [r9], 2
0x000087d5      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x000087db      e9eafeffff     jmp 0x86ca
0x000087e0      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x000087e8      41b800010000   mov r8d, 0x100
0x000087ee      4c89ea         mov rdx, r13
0x000087f1      4489f6         mov esi, r14d
0x000087f4      bf01000000     mov edi, 1
0x000087f9      4c894c2408     mov qword [rsp + 8], r9
0x000087fe      e85d97ffff     call sym.imp.__fxstatat
0x00008803      85c0           test eax, eax
0x00008805      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000880a      741c           je 0x8828
0x0000880c      418b01         mov eax, dword [r9]
0x0000880f      83f84b         cmp eax, 0x4b
0x00008812      7414           je 0x8828
0x00008814      83f802         cmp eax, 2
0x00008817      746f           je 0x8888
0x00008819      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000881f      e9a6feffff     jmp 0x86ca
0x00008824      0f1f4000       nop dword [rax]
0x00008828      41c701110000.  mov dword [r9], 0x11                    ; [0x11:4]=0x1003e00
0x0000882f      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x00008835      e990feffff     jmp 0x86ca
0x0000883a      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x00008842      41b800010000   mov r8d, 0x100
0x00008848      4c89ea         mov rdx, r13
0x0000884b      4489f6         mov esi, r14d
0x0000884e      bf01000000     mov edi, 1
0x00008853      4c894c2408     mov qword [rsp + 8], r9
0x00008858      e80397ffff     call sym.imp.__fxstatat
0x0000885d      85c0           test eax, eax
0x0000885f      4c8b4c2408     mov r9, qword [rsp + 8]
0x00008864      742c           je 0x8892
0x00008866      41833902       cmp dword [r9], 2
0x0000886a      75ad           jne 0x8819
0x0000886c      8b442428       mov eax, dword [rsp + 0x28]
0x00008870      2500f00000     and eax, 0xf000
0x00008875      3d00400000     cmp eax, 0x4000
0x0000887a      759d           jne 0x8819
0x0000887c      e9d2feffff     jmp 0x8753
0x00008881      0f1f80000000.  nop dword [rax]
0x00008888      bb01000000     mov ebx, 1
0x0000888d      e98afeffff     jmp 0x871c
0x00008892      8b8424b80000.  mov eax, dword [rsp + 0xb8]
0x00008899      2500f00000     and eax, 0xf000
0x0000889e      3d00400000     cmp eax, 0x4000
0x000088a3      740c           je 0x88b1
0x000088a5      41c701140000.  mov dword [r9], 0x14                    ; [0x14:4]=1
0x000088ac      e968ffffff     jmp 0x8819
0x000088b1      8b442428       mov eax, dword [rsp + 0x28]
0x000088b5      2500f00000     and eax, 0xf000
0x000088ba      3d00400000     cmp eax, 0x4000
0x000088bf      0f848efeffff   je 0x8753
0x000088c5      41c701150000.  mov dword [r9], 0x15                    ; [0x15:4]=0xb0000000
0x000088cc      4183cfff       or r15d, 0xffffffff                     ; -1
0x000088d0      e9f5fdffff     jmp 0x86ca
0x000088d5      e84696ffff     call sym.imp.__stack_chk_fail
0x000088da      660f1f440000   nop word [rax + rax]
;-- same_nameat.part.0:
0x000088e0      4155           push r13
0x000088e2      4154           push r12
0x000088e4      4189fd         mov r13d, edi
0x000088e7      55             push rbp
0x000088e8      53             push rbx
0x000088e9      4889f7         mov rdi, rsi
0x000088ec      89d5           mov ebp, edx
0x000088ee      4989cc         mov r12, rcx
0x000088f1      4881ec380100.  sub rsp, 0x138
0x000088f8      64488b042528.  mov rax, qword fs:[0x28]
0x00008901      488984242801.  mov qword [rsp + 0x128], rax
0x00008909      31c0           xor eax, eax
0x0000890b      e8b0c7ffff     call sym.dir_name
0x00008910      4889e1         mov rcx, rsp
0x00008913      41b800010000   mov r8d, 0x100
0x00008919      4889c2         mov rdx, rax
0x0000891c      4489ee         mov esi, r13d
0x0000891f      bf01000000     mov edi, 1
0x00008924      4889c3         mov rbx, rax
0x00008927      e83496ffff     call sym.imp.__fxstatat
0x0000892c      85c0           test eax, eax
0x0000892e      0f85ac000000   jne 0x89e0
0x00008934      4889df         mov rdi, rbx
0x00008937      e87494ffff     call sym.imp.free
0x0000893c      4c89e7         mov rdi, r12
0x0000893f      e87cc7ffff     call sym.dir_name
0x00008944      488d8c249000.  lea rcx, [rsp + 0x90]
0x0000894c      41b800010000   mov r8d, 0x100
0x00008952      4889c2         mov rdx, rax
0x00008955      89ee           mov esi, ebp
0x00008957      bf01000000     mov edi, 1
0x0000895c      4889c3         mov rbx, rax
0x0000895f      e8fc95ffff     call sym.imp.__fxstatat
0x00008964      85c0           test eax, eax
0x00008966      7550           jne 0x89b8
0x00008968      31ed           xor ebp, ebp
0x0000896a      488b84249800.  mov rax, qword [rsp + 0x98]
0x00008972      4839442408     cmp qword [rsp + 8], rax
0x00008977      7510           jne 0x8989
0x00008979      488b84249000.  mov rax, qword [rsp + 0x90]
0x00008981      48390424       cmp qword [rsp], rax
0x00008985      400f94c5       sete bpl
0x00008989      4889df         mov rdi, rbx
0x0000898c      e81f94ffff     call sym.imp.free
0x00008991      488b94242801.  mov rdx, qword [rsp + 0x128]
0x00008999      644833142528.  xor rdx, qword fs:[0x28]
0x000089a2      89e8           mov eax, ebp
0x000089a4      755c           jne 0x8a02
0x000089a6      4881c4380100.  add rsp, 0x138
0x000089ad      5b             pop rbx
0x000089ae      5d             pop rbp
0x000089af      415c           pop r12
0x000089b1      415d           pop r13
0x000089b3      c3             ret
0x000089b4      0f1f4000       nop dword [rax]
0x000089b8      e81394ffff     call sym.imp.__errno_location
0x000089bd      8b30           mov esi, dword [rax]
0x000089bf      488d15b14000.  lea rdx, [0x0000ca77]                   ; "%s"
0x000089c6      4889d9         mov rcx, rbx
0x000089c9      bf01000000     mov edi, 1
0x000089ce      31c0           xor eax, eax
0x000089d0      e8db97ffff     call sym.imp.error
0x000089d5      eb91           jmp 0x8968
0x000089d7      660f1f840000.  nop word [rax + rax]
0x000089e0      e8eb93ffff     call sym.imp.__errno_location
0x000089e5      8b30           mov esi, dword [rax]
0x000089e7      488d15894000.  lea rdx, [0x0000ca77]                   ; "%s"
0x000089ee      4889d9         mov rcx, rbx
0x000089f1      bf01000000     mov edi, 1
0x000089f6      31c0           xor eax, eax
0x000089f8      e8b397ffff     call sym.imp.error
0x000089fd      e932ffffff     jmp 0x8934
0x00008a02      e81995ffff     call sym.imp.__stack_chk_fail
0x00008a07      660f1f840000.  nop word [rax + rax]
;-- same_nameat:
0x00008a10      4157           push r15
0x00008a12      4156           push r14
0x00008a14      4189d7         mov r15d, edx
0x00008a17      4155           push r13
0x00008a19      4154           push r12
0x00008a1b      55             push rbp
0x00008a1c      53             push rbx
0x00008a1d      4889cd         mov rbp, rcx
0x00008a20      4889f3         mov rbx, rsi
0x00008a23      4883ec18       sub rsp, 0x18
0x00008a27      897c240c       mov dword [rsp + 0xc], edi
0x00008a2b      4889f7         mov rdi, rsi
0x00008a2e      e86dc7ffff     call sym.last_component
0x00008a33      4889ef         mov rdi, rbp
0x00008a36      4989c4         mov r12, rax
0x00008a39      e862c7ffff     call sym.last_component
0x00008a3e      4c89e7         mov rdi, r12
0x00008a41      4989c5         mov r13, rax
0x00008a44      e8b7c7ffff     call sym.base_len
0x00008a49      4c89ef         mov rdi, r13
0x00008a4c      4989c6         mov r14, rax
0x00008a4f      e8acc7ffff     call sym.base_len
0x00008a54      4939c6         cmp r14, rax
0x00008a57      7417           je 0x8a70
0x00008a59      4883c418       add rsp, 0x18
0x00008a5d      31c0           xor eax, eax
0x00008a5f      5b             pop rbx
0x00008a60      5d             pop rbp
0x00008a61      415c           pop r12
0x00008a63      415d           pop r13
0x00008a65      415e           pop r14
0x00008a67      415f           pop r15
0x00008a69      c3             ret
0x00008a6a      660f1f440000   nop word [rax + rax]
0x00008a70      4c89f2         mov rdx, r14
0x00008a73      4c89ee         mov rsi, r13
0x00008a76      4c89e7         mov rdi, r12
0x00008a79      e8a295ffff     call sym.imp.memcmp
0x00008a7e      85c0           test eax, eax
0x00008a80      75d7           jne 0x8a59
0x00008a82      8b7c240c       mov edi, dword [rsp + 0xc]
0x00008a86      4883c418       add rsp, 0x18
0x00008a8a      4889e9         mov rcx, rbp
0x00008a8d      4489fa         mov edx, r15d
0x00008a90      4889de         mov rsi, rbx
0x00008a93      5b             pop rbx
0x00008a94      5d             pop rbp
0x00008a95      415c           pop r12
0x00008a97      415d           pop r13
0x00008a99      415e           pop r14
0x00008a9b      415f           pop r15
0x00008a9d      e93efeffff     jmp sym.same_nameat.part.0
0x00008aa2      0f1f4000       nop dword [rax]
0x00008aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- same_name:
0x00008ab0      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x00008ab5      4889f1         mov rcx, rsi
0x00008ab8      4889fe         mov rsi, rdi
0x00008abb      89d7           mov edi, edx
0x00008abd      e94effffff     jmp sym.same_nameat
0x00008ac2      662e0f1f8400.  nop word cs:[rax + rax]
0x00008acc      0f1f4000       nop dword [rax]
;-- try_nocreate:
0x00008ad0      53             push rbx                                ; ../coreutils-8.31/lib/tempname.c:284
0x00008ad1      4889fe         mov rsi, rdi
0x00008ad4      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00008ad9      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/tempname.c:284
0x00008ae0      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00008ae3      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/tempname.c:284
0x00008aec      488984249800.  mov qword [rsp + 0x98], rax
0x00008af4      31c0           xor eax, eax
0x00008af6      e80594ffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00008afb      89c3           mov ebx, eax
0x00008afd      e8ce92ffff     call sym.imp.__errno_location
0x00008b02      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/tempname.c:287
0x00008b04      741a           je 0x8b20
0x00008b06      8b10           mov edx, dword [rax]
0x00008b08      83fa4b         cmp edx, 0x4b
0x00008b0b      7413           je 0x8b20
0x00008b0d      31c0           xor eax, eax
0x00008b0f      83fa02         cmp edx, 2
0x00008b12      0f95c0         setne al
0x00008b15      f7d8           neg eax
0x00008b17      eb12           jmp 0x8b2b
0x00008b19      0f1f80000000.  nop dword [rax]
0x00008b20      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:288 ; [0x11:4]=0x1003e00
0x00008b26      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008b2b      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/tempname.c:290
0x00008b33      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008b3c      7509           jne 0x8b47
0x00008b3e      4881c4a00000.  add rsp, 0xa0
0x00008b45      5b             pop rbx
0x00008b46      c3             ret
0x00008b47      e8d493ffff     call sym.imp.__stack_chk_fail
0x00008b4c      0f1f4000       nop dword [rax]
;-- try_dir:
0x00008b50      bec0010000     mov esi, 0x1c0                          ; ../coreutils-8.31/lib/tempname.c:278
0x00008b55      e9d692ffff     jmp sym.imp.mkdir
0x00008b5a      660f1f440000   nop word [rax + rax]
;-- try_file:
0x00008b60      8b36           mov esi, dword [rsi]                    ; ../coreutils-8.31/lib/tempname.c:269
0x00008b62      ba80010000     mov edx, 0x180                          ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00008b67      31c0           xor eax, eax
0x00008b69      4080e63c       and sil, 0x3c                           ; ../coreutils-8.31/lib/tempname.c:273
0x00008b6d      4080cec2       or sil, 0xc2                            ; ../coreutils-8.31/lib/tempname.c:271
0x00008b71      e95a96ffff     jmp sym.imp.open                        ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00008b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- try_tempname_len:
0x00008b80      4157           push r15                                ; ../coreutils-8.31/lib/tempname.c:190
0x00008b82      4156           push r14
0x00008b84      4989ff         mov r15, rdi
0x00008b87      4155           push r13
0x00008b89      4154           push r12
0x00008b8b      4d89c6         mov r14, r8
0x00008b8e      55             push rbp
0x00008b8f      53             push rbx
0x00008b90      89f5           mov ebp, esi
0x00008b92      4883ec38       sub rsp, 0x38
0x00008b96      4889542418     mov qword [rsp + 0x18], rdx
0x00008b9b      48893c24       mov qword [rsp], rdi
0x00008b9f      48894c2420     mov qword [rsp + 0x20], rcx
0x00008ba4      e82792ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/tempname.c:195
0x00008ba9      4889442408     mov qword [rsp + 8], rax
0x00008bae      8b00           mov eax, dword [rax]
0x00008bb0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/tempname.c:215
0x00008bb3      8944242c       mov dword [rsp + 0x2c], eax             ; ../coreutils-8.31/lib/tempname.c:195
0x00008bb7      e83493ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/tempname.c:215
0x00008bbc      4863f5         movsxd rsi, ebp                         ; ../coreutils-8.31/lib/tempname.c:216
0x00008bbf      4a8d1436       lea rdx, [rsi + r14]
0x00008bc3      4839c2         cmp rdx, rax
0x00008bc6      0f870f010000   ja 0x8cdb
0x00008bcc      4c29f0         sub rax, r14                            ; ../coreutils-8.31/lib/tempname.c:217
0x00008bcf      4889c3         mov rbx, rax
0x00008bd2      4829f3         sub rbx, rsi
0x00008bd5      488d35ad3300.  lea rsi, [0x0000bf89]                   ; ../coreutils-8.31/lib/tempname.c:180 ; "X"
0x00008bdc      498d041f       lea rax, [r15 + rbx]                    ; ../coreutils-8.31/lib/tempname.c:217
0x00008be0      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/tempname.c:180
0x00008be3      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/tempname.c:217
0x00008be8      e81394ffff     call sym.imp.strspn                     ; ../coreutils-8.31/lib/tempname.c:180
0x00008bed      4939c6         cmp r14, rax                            ; ../coreutils-8.31/lib/tempname.c:217
0x00008bf0      0f87e5000000   ja 0x8cdb
0x00008bf6      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/tempname.c:228
0x00008bf8      4c89f6         mov rsi, r14
0x00008bfb      e8e0120000     call sym.randint_all_new
0x00008c00      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/tempname.c:229
0x00008c03      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/tempname.c:228
0x00008c06      0f84e1000000   je 0x8ced                               ; ../coreutils-8.31/lib/tempname.c:229
0x00008c0c      488b0424       mov rax, qword [rsp]
0x00008c10      4c8d25693a00.  lea r12, obj.letters                    ; 0xc680 ; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
0x00008c17      41bdf8a20300   mov r13d, 0x3a2f8
0x00008c1d      4c01f0         add rax, r14
0x00008c20      4801c3         add rbx, rax
0x00008c23      0f1f440000     nop dword [rax + rax]
0x00008c28      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/tempname.c:236
0x00008c2b      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00008c30      7425           je 0x8c57
0x00008c32      660f1f440000   nop word [rax + rax]
0x00008c38      be3d000000     mov esi, 0x3d                           ; ../coreutils-8.31/lib/tempname.c:237 ; '='
0x00008c3d      4889ef         mov rdi, rbp
0x00008c40      4983c701       add r15, 1
0x00008c44      e8e7120000     call sym.randint_genmax
0x00008c49      410fb60404     movzx eax, byte [r12 + rax]
0x00008c4e      418847ff       mov byte [r15 - 1], al
0x00008c52      4939df         cmp r15, rbx                            ; ../coreutils-8.31/lib/tempname.c:236
0x00008c55      75e1           jne 0x8c38
0x00008c57      488b742418     mov rsi, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/tempname.c:239
0x00008c5c      488b3c24       mov rdi, qword [rsp]
0x00008c60      488b442420     mov rax, qword [rsp + 0x20]
0x00008c65      ffd0           call rax
0x00008c67      85c0           test eax, eax                           ; ../coreutils-8.31/lib/tempname.c:240
0x00008c69      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/tempname.c:239
0x00008c6b      792c           jns 0x8c99                              ; ../coreutils-8.31/lib/tempname.c:240
0x00008c6d      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:245
0x00008c72      8b08           mov ecx, dword [rax]
0x00008c74      83f911         cmp ecx, 0x11
0x00008c77      755b           jne 0x8cd4
0x00008c79      4183ed01       sub r13d, 1                             ; ../coreutils-8.31/lib/tempname.c:232
0x00008c7d      75a9           jne 0x8c28
0x00008c7f      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:252
0x00008c82      e8e9130000     call sym.randint_all_free
0x00008c87      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:255
0x00008c8c      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:256 ; -1
0x00008c91      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:255 ; [0x11:4]=0x1003e00
0x00008c97      eb2a           jmp 0x8cc3                              ; ../coreutils-8.31/lib/tempname.c:256
0x00008c99      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:242
0x00008c9e      8b44242c       mov eax, dword [rsp + 0x2c]
0x00008ca2      8901           mov dword [rcx], eax
0x00008ca4      89c1           mov ecx, eax                            ; ../coreutils-8.31/lib/tempname.c:243
0x00008ca6      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:261
0x00008ca9      89542410       mov dword [rsp + 0x10], edx
0x00008cad      890c24         mov dword [rsp], ecx
0x00008cb0      e8bb130000     call sym.randint_all_free
0x00008cb5      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:262
0x00008cba      8b0c24         mov ecx, dword [rsp]
0x00008cbd      8b542410       mov edx, dword [rsp + 0x10]             ; ../coreutils-8.31/lib/tempname.c:264
0x00008cc1      8908           mov dword [rax], ecx                    ; ../coreutils-8.31/lib/tempname.c:262
0x00008cc3      4883c438       add rsp, 0x38                           ; ../coreutils-8.31/lib/tempname.c:265
0x00008cc7      89d0           mov eax, edx
0x00008cc9      5b             pop rbx
0x00008cca      5d             pop rbp
0x00008ccb      415c           pop r12
0x00008ccd      415d           pop r13
0x00008ccf      415e           pop r14
0x00008cd1      415f           pop r15
0x00008cd3      c3             ret
0x00008cd4      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:247 ; -1
0x00008cd9      ebcb           jmp 0x8ca6
0x00008cdb      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:220
0x00008ce0      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:221 ; -1
0x00008ce5      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/tempname.c:220 ; [0x16:4]=0x2ab00000
0x00008ceb      ebd6           jmp 0x8cc3                              ; ../coreutils-8.31/lib/tempname.c:221
0x00008ced      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:230 ; -1
0x00008cf2      ebcf           jmp 0x8cc3
0x00008cf4      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:181
0x00008cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname_len:
0x00008d00      4883ec18       sub rsp, 0x18
0x00008d04      83f901         cmp ecx, 1
0x00008d07      8954240c       mov dword [rsp + 0xc], edx
0x00008d0b      7463           je 0x8d70
0x00008d0d      83f902         cmp ecx, 2
0x00008d10      7426           je 0x8d38
0x00008d12      85c9           test ecx, ecx
0x00008d14      743a           je 0x8d50
0x00008d16      488d0d433900.  lea rcx, obj.__PRETTY_FUNCTION__.5642   ; 0xc660 ; "gen_tempname_len"
0x00008d1d      488d35e43800.  lea rsi, [0x0000c608]                   ; "../coreutils-8.31/lib/tempname.c"
0x00008d24      488d3d053900.  lea rdi, str.invalid_KIND_in___gen_tempname ; 0xc630 ; "! \"invalid KIND in __gen_tempname\""
0x00008d2b      ba47010000     mov edx, 0x147
0x00008d30      e87b92ffff     call sym.imp.__assert_fail
0x00008d35      0f1f00         nop dword [rax]
0x00008d38      488d54240c     lea rdx, [rsp + 0xc]
0x00008d3d      488d0d8cfdff.  lea rcx, sym.try_nocreate               ; ../coreutils-8.31/lib/tempname.c:202 ; 0x8ad0 ; "SH\x89\xfe\xbf\x01"
0x00008d44      e837feffff     call sym.try_tempname_len
0x00008d49      4883c418       add rsp, 0x18
0x00008d4d      c3             ret
0x00008d4e      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:203
0x00008d50      488d54240c     lea rdx, [rsp + 0xc]
0x00008d55      488d0d04feff.  lea rcx, sym.try_file                   ; 0x8b60
0x00008d5c      e81ffeffff     call sym.try_tempname_len
0x00008d61      4883c418       add rsp, 0x18
0x00008d65      c3             ret
0x00008d66      662e0f1f8400.  nop word cs:[rax + rax]
0x00008d70      488d54240c     lea rdx, [rsp + 0xc]
0x00008d75      488d0dd4fdff.  lea rcx, sym.try_dir                    ; 0x8b50
0x00008d7c      e8fffdffff     call sym.try_tempname_len
0x00008d81      4883c418       add rsp, 0x18
0x00008d85      c3             ret
0x00008d86      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname:
0x00008d90      41b806000000   mov r8d, 6
0x00008d96      e965ffffff     jmp sym.gen_tempname_len
0x00008d9b      0f1f440000     nop dword [rax + rax]
;-- try_tempname:
0x00008da0      41b806000000   mov r8d, 6
0x00008da6      e9d5fdffff     jmp sym.try_tempname_len
0x00008dab      0f1f440000     nop dword [rax + rax]
;-- fd_safer:
0x00008db0      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x00008db2      4154           push r12
0x00008db4      55             push rbp
0x00008db5      53             push rbx
0x00008db6      89fb           mov ebx, edi
0x00008db8      4883ec08       sub rsp, 8
0x00008dbc      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x00008dbf      7721           ja 0x8de2
0x00008dc1      e87a1d0000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x00008dc6      4189c4         mov r12d, eax
0x00008dc9      e80290ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x00008dce      448b28         mov r13d, dword [rax]
0x00008dd1      4889c5         mov rbp, rax
0x00008dd4      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x00008dd6      e80592ffff     call sym.imp.close
0x00008ddb      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x00008dde      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x00008de2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x00008de6      89d8           mov eax, ebx
0x00008de8      5b             pop rbx
0x00008de9      5d             pop rbp
0x00008dea      415c           pop r12
0x00008dec      415d           pop r13
0x00008dee      c3             ret
0x00008def      90             nop
;-- version_etc_arn:
0x00008df0      4157           push r15
0x00008df2      4156           push r14
0x00008df4      4155           push r13
0x00008df6      4154           push r12
0x00008df8      4d89cc         mov r12, r9
0x00008dfb      55             push rbp
0x00008dfc      53             push rbx
0x00008dfd      4889fd         mov rbp, rdi
0x00008e00      4c89c3         mov rbx, r8
0x00008e03      4883ec28       sub rsp, 0x28
0x00008e07      4885f6         test rsi, rsi
0x00008e0a      0f8418010000   je 0x8f28
0x00008e10      4989d0         mov r8, rdx
0x00008e13      488d15a53800.  lea rdx, str.s___s___s                  ; 0xc6bf ; "%s (%s) %s\n"
0x00008e1a      4989c9         mov r9, rcx
0x00008e1d      31c0           xor eax, eax
0x00008e1f      4889f1         mov rcx, rsi
0x00008e22      be01000000     mov esi, 1
0x00008e27      e83494ffff     call sym.imp.__fprintf_chk
0x00008e2c      488d359f3800.  lea rsi, [0x0000c6d2]                   ; "(C)"
0x00008e33      31ff           xor edi, edi
0x00008e35      ba05000000     mov edx, 5
0x00008e3a      e89190ffff     call sym.imp.dcgettext
0x00008e3f      488d159a3b00.  lea rdx, obj.version_etc_copyright      ; 0xc9e0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00008e46      4889c1         mov rcx, rax
0x00008e49      41b8e3070000   mov r8d, 0x7e3
0x00008e4f      be01000000     mov esi, 1
0x00008e54      4889ef         mov rdi, rbp
0x00008e57      31c0           xor eax, eax
0x00008e59      e80294ffff     call sym.imp.__fprintf_chk
0x00008e5e      488d35f33800.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xc758 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00008e65      31ff           xor edi, edi
0x00008e67      ba05000000     mov edx, 5
0x00008e6c      e85f90ffff     call sym.imp.dcgettext
0x00008e71      4889ee         mov rsi, rbp
0x00008e74      4889c7         mov rdi, rax
0x00008e77      e8b491ffff     call sym.imp.fputs_unlocked
0x00008e7c      4983fc09       cmp r12, 9
0x00008e80      0f873a030000   ja 0x91c0
0x00008e86      488d152b3b00.  lea rdx, [0x0000c9b8]
0x00008e8d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00008e91      4801d0         add rax, rdx
0x00008e94      ffe0           jmp rax
0x00008e96      662e0f1f8400.  nop word cs:[rax + rax]
0x00008ea0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00008ea4      488b4310       mov rax, qword [rbx + 0x10]
0x00008ea8      488d35193a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xc8c8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00008eaf      4c8b4308       mov r8, qword [rbx + 8]
0x00008eb3      ba05000000     mov edx, 5
0x00008eb8      31ff           xor edi, edi
0x00008eba      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00008ebe      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008ec2      4c894c2410     mov qword [rsp + 0x10], r9
0x00008ec7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008ecb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00008ecf      48890424       mov qword [rsp], rax
0x00008ed3      4c89442408     mov qword [rsp + 8], r8
0x00008ed8      488b1b         mov rbx, qword [rbx]
0x00008edb      e8f08fffff     call sym.imp.dcgettext
0x00008ee0      4883ec08       sub rsp, 8
0x00008ee4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00008ee9      4889c2         mov rdx, rax
0x00008eec      4889d9         mov rcx, rbx
0x00008eef      be01000000     mov esi, 1
0x00008ef4      4889ef         mov rdi, rbp
0x00008ef7      31c0           xor eax, eax
0x00008ef9      4151           push r9
0x00008efb      4155           push r13
0x00008efd      4154           push r12
0x00008eff      4157           push r15
0x00008f01      4156           push r14
0x00008f03      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00008f08      4c8b442438     mov r8, qword [rsp + 0x38]
0x00008f0d      e84e93ffff     call sym.imp.__fprintf_chk
0x00008f12      4883c430       add rsp, 0x30
0x00008f16      4883c428       add rsp, 0x28
0x00008f1a      5b             pop rbx
0x00008f1b      5d             pop rbp
0x00008f1c      415c           pop r12
0x00008f1e      415d           pop r13
0x00008f20      415e           pop r14
0x00008f22      415f           pop r15
0x00008f24      c3             ret
0x00008f25      0f1f00         nop dword [rax]
0x00008f28      4989c8         mov r8, rcx
0x00008f2b      4889d1         mov rcx, rdx
0x00008f2e      488d15963700.  lea rdx, str.s__s                       ; 0xc6cb ; "%s %s\n"
0x00008f35      be01000000     mov esi, 1
0x00008f3a      31c0           xor eax, eax
0x00008f3c      e81f93ffff     call sym.imp.__fprintf_chk
0x00008f41      e9e6feffff     jmp 0x8e2c
0x00008f46      662e0f1f8400.  nop word cs:[rax + rax]
0x00008f50      4c8b5340       mov r10, qword [rbx + 0x40]
0x00008f54      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00008f58      488d35993900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xc8f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00008f5f      488b4310       mov rax, qword [rbx + 0x10]
0x00008f63      4c8b4308       mov r8, qword [rbx + 8]
0x00008f67      ba05000000     mov edx, 5
0x00008f6c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00008f70      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008f74      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008f78      4c8b7318       mov r14, qword [rbx + 0x18]
0x00008f7c      488b1b         mov rbx, qword [rbx]
0x00008f7f      4c89542418     mov qword [rsp + 0x18], r10
0x00008f84      4c894c2410     mov qword [rsp + 0x10], r9
0x00008f89      48890424       mov qword [rsp], rax
0x00008f8d      4c89442408     mov qword [rsp + 8], r8
0x00008f92      31ff           xor edi, edi
0x00008f94      e8378fffff     call sym.imp.dcgettext
0x00008f99      4c8b542418     mov r10, qword [rsp + 0x18]
0x00008f9e      4152           push r10
0x00008fa0      e93fffffff     jmp 0x8ee4
0x00008fa5      0f1f00         nop dword [rax]
0x00008fa8      488b1b         mov rbx, qword [rbx]
0x00008fab      488d35243700.  lea rsi, str.Written_by__s.             ; 0xc6d6 ; "Written by %s.\n"
0x00008fb2      ba05000000     mov edx, 5
0x00008fb7      31ff           xor edi, edi
0x00008fb9      e8128fffff     call sym.imp.dcgettext
0x00008fbe      4883c428       add rsp, 0x28
0x00008fc2      4889d9         mov rcx, rbx
0x00008fc5      4889ef         mov rdi, rbp
0x00008fc8      5b             pop rbx
0x00008fc9      5d             pop rbp
0x00008fca      415c           pop r12
0x00008fcc      415d           pop r13
0x00008fce      415e           pop r14
0x00008fd0      415f           pop r15
0x00008fd2      4889c2         mov rdx, rax
0x00008fd5      be01000000     mov esi, 1
0x00008fda      31c0           xor eax, eax
0x00008fdc      e97f92ffff     jmp sym.imp.__fprintf_chk
0x00008fe1      0f1f80000000.  nop dword [rax]
0x00008fe8      4c8b6308       mov r12, qword [rbx + 8]
0x00008fec      488d35f33600.  lea rsi, str.Written_by__s_and__s.      ; 0xc6e6 ; "Written by %s and %s.\n"
0x00008ff3      488b1b         mov rbx, qword [rbx]
0x00008ff6      ba05000000     mov edx, 5
0x00008ffb      31ff           xor edi, edi
0x00008ffd      e8ce8effff     call sym.imp.dcgettext
0x00009002      4883c428       add rsp, 0x28
0x00009006      4d89e0         mov r8, r12
0x00009009      4889d9         mov rcx, rbx
0x0000900c      4889ef         mov rdi, rbp
0x0000900f      4889c2         mov rdx, rax
0x00009012      be01000000     mov esi, 1
0x00009017      5b             pop rbx
0x00009018      5d             pop rbp
0x00009019      415c           pop r12
0x0000901b      415d           pop r13
0x0000901d      415e           pop r14
0x0000901f      415f           pop r15
0x00009021      31c0           xor eax, eax
0x00009023      e93892ffff     jmp sym.imp.__fprintf_chk
0x00009028      0f1f84000000.  nop dword [rax + rax]
0x00009030      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009034      4c8b6308       mov r12, qword [rbx + 8]
0x00009038      488d35be3600.  lea rsi, str.Written_by__s___s__and__s. ; 0xc6fd ; "Written by %s, %s, and %s.\n"
0x0000903f      488b1b         mov rbx, qword [rbx]
0x00009042      ba05000000     mov edx, 5
0x00009047      31ff           xor edi, edi
0x00009049      e8828effff     call sym.imp.dcgettext
0x0000904e      4883c428       add rsp, 0x28
0x00009052      4d89e9         mov r9, r13
0x00009055      4d89e0         mov r8, r12
0x00009058      4889d9         mov rcx, rbx
0x0000905b      4889ef         mov rdi, rbp
0x0000905e      4889c2         mov rdx, rax
0x00009061      5b             pop rbx
0x00009062      5d             pop rbp
0x00009063      415c           pop r12
0x00009065      415d           pop r13
0x00009067      415e           pop r14
0x00009069      415f           pop r15
0x0000906b      be01000000     mov esi, 1
0x00009070      31c0           xor eax, eax
0x00009072      e9e991ffff     jmp sym.imp.__fprintf_chk
0x00009077      660f1f840000.  nop word [rax + rax]
0x00009080      488d35a13700.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xc828 ; "Written by %s, %s, %s,\nand %s.\n"
0x00009087      ba05000000     mov edx, 5
0x0000908c      31ff           xor edi, edi
0x0000908e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009092      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009096      4c8b6308       mov r12, qword [rbx + 8]
0x0000909a      488b1b         mov rbx, qword [rbx]
0x0000909d      e82e8effff     call sym.imp.dcgettext
0x000090a2      4883ec08       sub rsp, 8
0x000090a6      4156           push r14
0x000090a8      4889c2         mov rdx, rax
0x000090ab      4d89e9         mov r9, r13
0x000090ae      4d89e0         mov r8, r12
0x000090b1      4889d9         mov rcx, rbx
0x000090b4      4889ef         mov rdi, rbp
0x000090b7      be01000000     mov esi, 1
0x000090bc      31c0           xor eax, eax
0x000090be      e89d91ffff     call sym.imp.__fprintf_chk
0x000090c3      58             pop rax
0x000090c4      5a             pop rdx
0x000090c5      4883c428       add rsp, 0x28
0x000090c9      5b             pop rbx
0x000090ca      5d             pop rbp
0x000090cb      415c           pop r12
0x000090cd      415d           pop r13
0x000090cf      415e           pop r14
0x000090d1      415f           pop r15
0x000090d3      c3             ret
0x000090d4      0f1f4000       nop dword [rax]
0x000090d8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000090dc      488d35653700.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xc848 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000090e3      ba05000000     mov edx, 5
0x000090e8      31ff           xor edi, edi
0x000090ea      4c8b7318       mov r14, qword [rbx + 0x18]
0x000090ee      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000090f2      4c8b6308       mov r12, qword [rbx + 8]
0x000090f6      488b1b         mov rbx, qword [rbx]
0x000090f9      e8d28dffff     call sym.imp.dcgettext
0x000090fe      4157           push r15
0x00009100      eba4           jmp 0x90a6
0x00009102      660f1f440000   nop word [rax + rax]
0x00009108      4c8b4308       mov r8, qword [rbx + 8]
0x0000910c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009110      488d35593700.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xc870 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00009117      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000911b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000911f      ba05000000     mov edx, 5
0x00009124      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009128      31ff           xor edi, edi
0x0000912a      488b1b         mov rbx, qword [rbx]
0x0000912d      4c890424       mov qword [rsp], r8
0x00009131      e89a8dffff     call sym.imp.dcgettext
0x00009136      4883ec08       sub rsp, 8
0x0000913a      4d89e9         mov r9, r13
0x0000913d      4154           push r12
0x0000913f      4157           push r15
0x00009141      4156           push r14
0x00009143      4c8b442420     mov r8, qword [rsp + 0x20]
0x00009148      4889d9         mov rcx, rbx
0x0000914b      4889c2         mov rdx, rax
0x0000914e      4889ef         mov rdi, rbp
0x00009151      be01000000     mov esi, 1
0x00009156      31c0           xor eax, eax
0x00009158      e80391ffff     call sym.imp.__fprintf_chk
0x0000915d      4883c420       add rsp, 0x20
0x00009161      4883c428       add rsp, 0x28
0x00009165      5b             pop rbx
0x00009166      5d             pop rbp
0x00009167      415c           pop r12
0x00009169      415d           pop r13
0x0000916b      415e           pop r14
0x0000916d      415f           pop r15
0x0000916f      c3             ret
0x00009170      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00009174      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009178      488d35193700.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xc898 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000917f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009183      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009187      ba05000000     mov edx, 5
0x0000918c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009190      4c8b4308       mov r8, qword [rbx + 8]
0x00009194      31ff           xor edi, edi
0x00009196      4c894c2408     mov qword [rsp + 8], r9
0x0000919b      488b1b         mov rbx, qword [rbx]
0x0000919e      4c890424       mov qword [rsp], r8
0x000091a2      e8298dffff     call sym.imp.dcgettext
0x000091a7      4155           push r13
0x000091a9      4154           push r12
0x000091ab      4157           push r15
0x000091ad      4156           push r14
0x000091af      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000091b4      eb8d           jmp 0x9143
0x000091b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000091c0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000091c4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000091c8      ba05000000     mov edx, 5
0x000091cd      488b4310       mov rax, qword [rbx + 0x10]
0x000091d1      4c8b4308       mov r8, qword [rbx + 8]
0x000091d5      488d35543700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xc930 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000091dc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000091e0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000091e4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000091e8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000091ec      4c89542418     mov qword [rsp + 0x18], r10
0x000091f1      4c894c2410     mov qword [rsp + 0x10], r9
0x000091f6      48890424       mov qword [rsp], rax
0x000091fa      4c89442408     mov qword [rsp + 8], r8
0x000091ff      488b1b         mov rbx, qword [rbx]
0x00009202      e98bfdffff     jmp 0x8f92
0x00009207      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00009210      4531c9         xor r9d, r9d
0x00009213      49833800       cmp qword [r8], 0
0x00009217      7412           je 0x922b
0x00009219      0f1f80000000.  nop dword [rax]
0x00009220      4983c101       add r9, 1
0x00009224      4b833cc800     cmp qword [r8 + r9*8], 0
0x00009229      75f5           jne 0x9220
0x0000922b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00009230      4883ec68       sub rsp, 0x68
0x00009234      4d89c2         mov r10, r8
0x00009237      4531c9         xor r9d, r9d
0x0000923a      64488b042528.  mov rax, qword fs:[0x28]
0x00009243      4889442458     mov qword [rsp + 0x58], rax
0x00009248      31c0           xor eax, eax
0x0000924a      4989e0         mov r8, rsp
0x0000924d      0f1f00         nop dword [rax]
0x00009250      418b02         mov eax, dword [r10]
0x00009253      83f82f         cmp eax, 0x2f
0x00009256      7742           ja 0x929a
0x00009258      4189c3         mov r11d, eax
0x0000925b      4d035a10       add r11, qword [r10 + 0x10]
0x0000925f      83c008         add eax, 8
0x00009262      418902         mov dword [r10], eax
0x00009265      498b03         mov rax, qword [r11]
0x00009268      4885c0         test rax, rax
0x0000926b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000926f      740a           je 0x927b
0x00009271      4983c101       add r9, 1
0x00009275      4983f90a       cmp r9, 0xa
0x00009279      75d5           jne 0x9250
0x0000927b      e870fbffff     call sym.version_etc_arn
0x00009280      488b442458     mov rax, qword [rsp + 0x58]
0x00009285      644833042528.  xor rax, qword fs:[0x28]
0x0000928e      7505           jne 0x9295
0x00009290      4883c468       add rsp, 0x68
0x00009294      c3             ret
0x00009295      e8868cffff     call sym.imp.__stack_chk_fail
0x0000929a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000929e      498d4308       lea rax, [r11 + 8]
0x000092a2      49894208       mov qword [r10 + 8], rax
0x000092a6      ebbd           jmp 0x9265
0x000092a8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000092b0      55             push rbp
0x000092b1      53             push rbx
0x000092b2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000092b8      4531db         xor r11d, r11d
0x000092bb      4881ecb80000.  sub rsp, 0xb8
0x000092c2      64488b042528.  mov rax, qword fs:[0x28]
0x000092cb      4889442478     mov qword [rsp + 0x78], rax
0x000092d0      31c0           xor eax, eax
0x000092d2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000092da      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000092e2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000092ea      4c8d442420     lea r8, [rsp + 0x20]
0x000092ef      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000092f7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000092ff      4889442410     mov qword [rsp + 0x10], rax
0x00009304      488d84248000.  lea rax, [rsp + 0x80]
0x0000930c      4531c9         xor r9d, r9d
0x0000930f      4889442418     mov qword [rsp + 0x18], rax
0x00009314      4889c5         mov rbp, rax
0x00009317      660f1f840000.  nop word [rax + rax]
0x00009320      4183fa2f       cmp r10d, 0x2f
0x00009324      7756           ja 0x937c
0x00009326      4489d0         mov eax, r10d
0x00009329      41bb01000000   mov r11d, 1
0x0000932f      4183c208       add r10d, 8
0x00009333      4801e8         add rax, rbp
0x00009336      488b00         mov rax, qword [rax]
0x00009339      4885c0         test rax, rax
0x0000933c      4b8904c8       mov qword [r8 + r9*8], rax
0x00009340      740a           je 0x934c
0x00009342      4983c101       add r9, 1
0x00009346      4983f90a       cmp r9, 0xa
0x0000934a      75d4           jne 0x9320
0x0000934c      4584db         test r11b, r11b
0x0000934f      7524           jne 0x9375
0x00009351      e89afaffff     call sym.version_etc_arn
0x00009356      488b442478     mov rax, qword [rsp + 0x78]
0x0000935b      644833042528.  xor rax, qword fs:[0x28]
0x00009364      750a           jne 0x9370
0x00009366      4881c4b80000.  add rsp, 0xb8
0x0000936d      5b             pop rbx
0x0000936e      5d             pop rbp
0x0000936f      c3             ret
0x00009370      e8ab8bffff     call sym.imp.__stack_chk_fail
0x00009375      4489542408     mov dword [rsp + 8], r10d
0x0000937a      ebd5           jmp 0x9351
0x0000937c      4889d8         mov rax, rbx
0x0000937f      4883c308       add rbx, 8
0x00009383      ebb1           jmp 0x9336
0x00009385      90             nop
0x00009386      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00009390      53             push rbx
0x00009391      488d35813300.  lea rsi, str.Report_bugs_to:__s         ; 0xc719 ; "\nReport bugs to: %s\n"
0x00009398      ba05000000     mov edx, 5
0x0000939d      31ff           xor edi, edi
0x0000939f      e82c8bffff     call sym.imp.dcgettext
0x000093a4      488d15833300.  lea rdx, str.bug_coreutils_gnu.org      ; 0xc72e ; "bug-coreutils@gnu.org"
0x000093ab      4889c6         mov rsi, rax
0x000093ae      bf01000000     mov edi, 1
0x000093b3      31c0           xor eax, eax
0x000093b5      e8b68dffff     call sym.imp.__printf_chk
0x000093ba      488d35833300.  lea rsi, str.s_home_page:___s           ; 0xc744 ; "%s home page: <%s>\n"
0x000093c1      ba05000000     mov edx, 5
0x000093c6      31ff           xor edi, edi
0x000093c8      e8038bffff     call sym.imp.dcgettext
0x000093cd      488d0d1c2a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xbdf0 ; "https://www.gnu.org/software/coreutils/"
0x000093d4      488d15dc1c00.  lea rdx, str.GNU_coreutils              ; 0xb0b7 ; "GNU coreutils"
0x000093db      4889c6         mov rsi, rax
0x000093de      bf01000000     mov edi, 1
0x000093e3      31c0           xor eax, eax
0x000093e5      e8868dffff     call sym.imp.__printf_chk
0x000093ea      488b1dd76c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x000093f1      488d35783500.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xc970 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000093f8      31ff           xor edi, edi
0x000093fa      ba05000000     mov edx, 5
0x000093ff      e8cc8affff     call sym.imp.dcgettext
0x00009404      4889de         mov rsi, rbx
0x00009407      4889c7         mov rdi, rax
0x0000940a      5b             pop rbx
0x0000940b      e9208cffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00009410      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00009411      4889fb         mov rbx, rdi
0x00009414      e8d78cffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00009419      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000941c      7505           jne 0x9423
0x0000941e      4885db         test rbx, rbx
0x00009421      7502           jne 0x9425
0x00009423      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00009424      c3             ret
0x00009425      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000942a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00009430      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00009433      48f7e6         mul rsi
0x00009436      4889c7         mov rdi, rax
0x00009439      0f90c0         seto al
0x0000943c      4885ff         test rdi, rdi
0x0000943f      780a           js 0x944b
0x00009441      0fb6c0         movzx eax, al
0x00009444      4885c0         test rax, rax
0x00009447      7502           jne 0x944b
0x00009449      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000944b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000944f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00009454      6690           nop
0x00009456      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00009460      ebae           jmp sym.xmalloc
0x00009462      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00009466      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00009470      4885f6         test rsi, rsi
0x00009473      53             push rbx
0x00009474      4889f3         mov rbx, rsi
0x00009477      7505           jne 0x947e
0x00009479      4885ff         test rdi, rdi
0x0000947c      751a           jne 0x9498
0x0000947e      4889de         mov rsi, rbx
0x00009481      e8aa8cffff     call sym.imp.realloc
0x00009486      4885c0         test rax, rax
0x00009489      7505           jne 0x9490
0x0000948b      4885db         test rbx, rbx
0x0000948e      7511           jne 0x94a1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00009490      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00009491      c3             ret
0x00009492      660f1f440000   nop word [rax + rax]
0x00009498      e81389ffff     call sym.imp.free
0x0000949d      31c0           xor eax, eax
0x0000949f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000094a0      c3             ret
0x000094a1      e8ba010000     call sym.xalloc_die
0x000094a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000094b0      4889f0         mov rax, rsi
0x000094b3      48f7e2         mul rdx
0x000094b6      4889c6         mov rsi, rax
0x000094b9      0f90c0         seto al
0x000094bc      4885f6         test rsi, rsi
0x000094bf      780a           js 0x94cb
0x000094c1      0fb6c0         movzx eax, al
0x000094c4      4885c0         test rax, rax
0x000094c7      7502           jne 0x94cb
0x000094c9      eba5           jmp sym.xrealloc
0x000094cb      4883ec08       sub rsp, 8
0x000094cf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000094d4      6690           nop
0x000094d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000094e0      4885ff         test rdi, rdi
0x000094e3      4989d1         mov r9, rdx
0x000094e6      488b0e         mov rcx, qword [rsi]
0x000094e9      7435           je 0x9520
0x000094eb      31d2           xor edx, edx
0x000094ed      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000094f7      49f7f1         div r9
0x000094fa      4839c8         cmp rax, rcx
0x000094fd      763c           jbe 0x953b
0x000094ff      4889c8         mov rax, rcx
0x00009502      48d1e8         shr rax, 1
0x00009505      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000950a      48890e         mov qword [rsi], rcx
0x0000950d      490fafc9       imul rcx, r9
0x00009511      4889ce         mov rsi, rcx
0x00009514      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00009519      0f1f80000000.  nop dword [rax]
0x00009520      4885c9         test rcx, rcx
0x00009523      7423           je 0x9548
0x00009525      4889c8         mov rax, rcx
0x00009528      49f7e1         mul r9
0x0000952b      0f90c2         seto dl
0x0000952e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00009531      0fb6d2         movzx edx, dl
0x00009534      7805           js 0x953b
0x00009536      4885d2         test rdx, rdx
0x00009539      74cf           je 0x950a
0x0000953b      4883ec08       sub rsp, 8
0x0000953f      e81c010000     call sym.xalloc_die
0x00009544      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00009548      31d2           xor edx, edx
0x0000954a      b880000000     mov eax, 0x80
0x0000954f      4531c0         xor r8d, r8d
0x00009552      49f7f1         div r9
0x00009555      4885c0         test rax, rax
0x00009558      410f94c0       sete r8b
0x0000955c      498d0c00       lea rcx, [r8 + rax]
0x00009560      ebc3           jmp 0x9525
0x00009562      0f1f4000       nop dword [rax]
0x00009566      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00009570      4885ff         test rdi, rdi
0x00009573      488b06         mov rax, qword [rsi]
0x00009576      7428           je 0x95a0
0x00009578      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00009582      4839d0         cmp rax, rdx
0x00009585      772a           ja 0x95b1
0x00009587      4889c2         mov rdx, rax
0x0000958a      48d1ea         shr rdx, 1
0x0000958d      488d440201     lea rax, [rdx + rax + 1]
0x00009592      488906         mov qword [rsi], rax
0x00009595      4889c6         mov rsi, rax
0x00009598      e9d3feffff     jmp sym.xrealloc
0x0000959d      0f1f00         nop dword [rax]
0x000095a0      4885c0         test rax, rax
0x000095a3      ba80000000     mov edx, 0x80
0x000095a8      480f44c2       cmove rax, rdx
0x000095ac      4885c0         test rax, rax
0x000095af      79e1           jns 0x9592
0x000095b1      4883ec08       sub rsp, 8
0x000095b5      e8a6000000     call sym.xalloc_die
0x000095ba      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000095c0      53             push rbx
0x000095c1      4889fb         mov rbx, rdi
0x000095c4      e847feffff     call sym.xmalloc
0x000095c9      4889da         mov rdx, rbx
0x000095cc      31f6           xor esi, esi
0x000095ce      4889c7         mov rdi, rax
0x000095d1      5b             pop rbx
0x000095d2      e9e989ffff     jmp sym.imp.memset
0x000095d7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000095e0      4889f8         mov rax, rdi
0x000095e3      4883ec08       sub rsp, 8
0x000095e7      48f7e6         mul rsi
0x000095ea      0f90c2         seto dl
0x000095ed      4885c0         test rax, rax
0x000095f0      7817           js 0x9609
0x000095f2      0fb6d2         movzx edx, dl
0x000095f5      4885d2         test rdx, rdx
0x000095f8      750f           jne 0x9609
0x000095fa      e8418affff     call sym.imp.calloc
0x000095ff      4885c0         test rax, rax
0x00009602      7405           je 0x9609
0x00009604      4883c408       add rsp, 8
0x00009608      c3             ret
0x00009609      e852000000     call sym.xalloc_die
0x0000960e      6690           nop
;-- xmemdup:
0x00009610      55             push rbp
0x00009611      53             push rbx
0x00009612      4889fd         mov rbp, rdi
0x00009615      4889f7         mov rdi, rsi
0x00009618      4889f3         mov rbx, rsi
0x0000961b      4883ec08       sub rsp, 8
0x0000961f      e8ecfdffff     call sym.xmalloc
0x00009624      4883c408       add rsp, 8
0x00009628      4889da         mov rdx, rbx
0x0000962b      4889ee         mov rsi, rbp
0x0000962e      5b             pop rbx
0x0000962f      5d             pop rbp
0x00009630      4889c7         mov rdi, rax
0x00009633      e9688affff     jmp sym.imp.memcpy
0x00009638      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00009640      53             push rbx
0x00009641      4889fb         mov rbx, rdi
0x00009644      e8a788ffff     call sym.imp.strlen
0x00009649      4889df         mov rdi, rbx
0x0000964c      488d7001       lea rsi, [rax + 1]
0x00009650      5b             pop rbx
0x00009651      ebbd           jmp sym.xmemdup
0x00009653      662e0f1f8400.  nop word cs:[rax + rax]
0x0000965d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00009660      488d35a83300.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xca0f ; "memory exhausted"
0x00009667      4883ec08       sub rsp, 8
0x0000966b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00009670      31ff           xor edi, edi
0x00009672      e85988ffff     call sym.imp.dcgettext
0x00009677      8b3da3692000   mov edi, dword [obj.exit_failure]       ; [0x210020:4]=1
0x0000967d      488d15f33300.  lea rdx, [0x0000ca77]                   ; "%s"
0x00009684      4889c1         mov rcx, rax
0x00009687      31f6           xor esi, esi
0x00009689      31c0           xor eax, eax
0x0000968b      e8208bffff     call sym.imp.error
0x00009690      e82b87ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00009695      662e0f1f8400.  nop word cs:[rax + rax]
0x0000969f      90             nop
;-- xgetcwd:
0x000096a0      53             push rbx                                ; ../coreutils-8.31/lib/xgetcwd.c:36
0x000096a1      31f6           xor esi, esi                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x000096a3      31ff           xor edi, edi
0x000096a5      e82689ffff     call sym.imp.getcwd
0x000096aa      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x000096ad      4889c3         mov rbx, rax                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x000096b0      740e           je 0x96c0                               ; ../coreutils-8.31/lib/xgetcwd.c:38
0x000096b2      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xgetcwd.c:41
0x000096b5      5b             pop rbx
0x000096b6      c3             ret
0x000096b7      660f1f840000.  nop word [rax + rax]
0x000096c0      e80b87ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x000096c5      83380c         cmp dword [rax], 0xc
0x000096c8      75e8           jne 0x96b2
0x000096ca      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xgetcwd.c:39
0x000096cf      90             nop
;-- yesno:
0x000096d0      53             push rbx                                ; ../coreutils-8.31/lib/yesno.c:33
0x000096d1      ba0a000000     mov edx, 0xa
0x000096d6      31db           xor ebx, ebx
0x000096d8      4883ec20       sub rsp, 0x20
0x000096dc      488b0ded6920.  mov rcx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2100d0:8]=0
0x000096e3      488d742410     lea rsi, [rsp + 0x10]
0x000096e8      488d7c2408     lea rdi, [rsp + 8]                      ; stdio.h:-219
0x000096ed      48c744240800.  mov qword [rsp + 8], 0
0x000096f6      64488b042528.  mov rax, qword fs:[0x28]
0x000096ff      4889442418     mov qword [rsp + 0x18], rax
0x00009704      31c0           xor eax, eax
0x00009706      48c744241000.  mov qword [rsp + 0x10], 0               ; stdio.h:-343
0x0000970f      e83c89ffff     call sym.imp.__getdelim
0x00009714      4885c0         test rax, rax
0x00009717      7e19           jle 0x9732
0x00009719      488b7c2408     mov rdi, qword [rsp + 8]
0x0000971e      488d4407ff     lea rax, [rdi + rax - 1]
0x00009723      80380a         cmp byte [rax], 0xa
0x00009726      7430           je 0x9758
0x00009728      e85389ffff     call sym.imp.rpmatch
0x0000972d      85c0           test eax, eax
0x0000972f      0f9fc3         setg bl
0x00009732      488b7c2408     mov rdi, qword [rsp + 8]
0x00009737      e87486ffff     call sym.imp.free
0x0000973c      488b542418     mov rdx, qword [rsp + 0x18]
0x00009741      644833142528.  xor rdx, qword fs:[0x28]
0x0000974a      89d8           mov eax, ebx                            ; stdio.h:-336
0x0000974c      7514           jne 0x9762
0x0000974e      4883c420       add rsp, 0x20
0x00009752      5b             pop rbx
0x00009753      c3             ret
0x00009754      0f1f4000       nop dword [rax]                         ; stdio.h:-321
0x00009758      c60000         mov byte [rax], 0
0x0000975b      488b7c2408     mov rdi, qword [rsp + 8]
0x00009760      ebc6           jmp 0x9728
0x00009762      e8b987ffff     call sym.imp.__stack_chk_fail
0x00009767      660f1f840000.  nop word [rax + rax]
;-- rpl_fflush:
0x00009770      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00009773      53             push rbx
0x00009774      4889fb         mov rbx, rdi
0x00009777      7411           je 0x978a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00009779      e8a289ffff     call sym.imp.__freading
0x0000977e      85c0           test eax, eax
0x00009780      7408           je 0x978a
0x00009782      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00009788      750e           jne 0x9798
0x0000978a      4889df         mov rdi, rbx
0x0000978d      5b             pop rbx
0x0000978e      e96d89ffff     jmp sym.imp.fflush
0x00009793      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fflush.c:32
0x00009798      4889df         mov rdi, rbx
0x0000979b      ba01000000     mov edx, 1
0x000097a0      31f6           xor esi, esi
0x000097a2      e839000000     call sym.rpl_fseeko
0x000097a7      4889df         mov rdi, rbx
0x000097aa      5b             pop rbx
0x000097ab      e95089ffff     jmp sym.imp.fflush
;-- freadahead:
0x000097b0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/freadahead.c:35
0x000097b2      488b4f20       mov rcx, qword [rdi + 0x20]             ; ../coreutils-8.31/lib/freadahead.c:38
0x000097b6      48394f28       cmp qword [rdi + 0x28], rcx
0x000097ba      771b           ja 0x97d7
0x000097bc      488b4710       mov rax, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/freadahead.c:40
0x000097c0      482b4708       sub rax, qword [rdi + 8]
0x000097c4      f70700010000   test dword [rdi], 0x100                 ; ../coreutils-8.31/lib/freadahead.c:41
0x000097ca      740b           je 0x97d7
0x000097cc      488b5758       mov rdx, qword [rdi + 0x58]
0x000097d0      482b5748       sub rdx, qword [rdi + 0x48]
0x000097d4      4801d0         add rax, rdx
0x000097d7      f3c3           ret                                     ; ../coreutils-8.31/lib/freadahead.c:103
0x000097d9      0f1f80000000.  nop dword [rax]
;-- rpl_fseeko:
0x000097e0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000097e4      48394710       cmp qword [rdi + 0x10], rax
0x000097e8      7406           je 0x97f0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x000097ea      e9f189ffff     jmp sym.imp.fseeko
0x000097ef      90             nop
0x000097f0      488b4720       mov rax, qword [rdi + 0x20]
0x000097f4      48394728       cmp qword [rdi + 0x28], rax
0x000097f8      75f0           jne 0x97ea                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000097fa      48837f4800     cmp qword [rdi + 0x48], 0
0x000097ff      75e9           jne 0x97ea                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00009801      4154           push r12
0x00009803      55             push rbp
0x00009804      4189d4         mov r12d, edx
0x00009807      53             push rbx
0x00009808      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000980b      4889fb         mov rbx, rdi
0x0000980e      e89d88ffff     call sym.imp.fileno
0x00009813      4489e2         mov edx, r12d
0x00009816      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00009819      89c7           mov edi, eax
0x0000981b      e87087ffff     call sym.imp.lseek
0x00009820      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009824      740c           je 0x9832
0x00009826      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00009829      488983900000.  mov qword [rbx + 0x90], rax
0x00009830      31c0           xor eax, eax
0x00009832      5b             pop rbx
0x00009833      5d             pop rbp
0x00009834      415c           pop r12
0x00009836      c3             ret
0x00009837      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00009840      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00009842      4154           push r12
0x00009844      4989f5         mov r13, rsi
0x00009847      55             push rbp
0x00009848      53             push rbx
0x00009849      4889fb         mov rbx, rdi
0x0000984c      4989d4         mov r12, rdx
0x0000984f      4883ec18       sub rsp, 0x18
0x00009853      64488b042528.  mov rax, qword fs:[0x28]
0x0000985c      4889442408     mov qword [rsp + 8], rax
0x00009861      31c0           xor eax, eax
0x00009863      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00009868      4885ff         test rdi, rdi
0x0000986b      480f44d8       cmove rbx, rax
0x0000986f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00009872      e8d986ffff     call sym.imp.mbrtowc
0x00009877      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000987b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000987e      7620           jbe 0x98a0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00009880      4d85e4         test r12, r12
0x00009883      741b           je 0x98a0
0x00009885      31ff           xor edi, edi
0x00009887      e844050000     call sym.hard_locale
0x0000988c      84c0           test al, al
0x0000988e      7510           jne 0x98a0
0x00009890      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00009895      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000989a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000989c      0f1f4000       nop dword [rax]
0x000098a0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000098a5      644833142528.  xor rdx, qword fs:[0x28]
0x000098ae      4889e8         mov rax, rbp
0x000098b1      750b           jne 0x98be
0x000098b3      4883c418       add rsp, 0x18
0x000098b7      5b             pop rbx
0x000098b8      5d             pop rbp
0x000098b9      415c           pop r12
0x000098bb      415d           pop r13
0x000098bd      c3             ret
0x000098be      e85d86ffff     call sym.imp.__stack_chk_fail
0x000098c3      662e0f1f8400.  nop word cs:[rax + rax]
0x000098cd      0f1f00         nop dword [rax]
;-- areadlink_with_size:
0x000098d0      4157           push r15                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x000098d2      4156           push r14
0x000098d4      b801040000     mov eax, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x000098d9      4155           push r13                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x000098db      4154           push r12
0x000098dd      4989fd         mov r13, rdi
0x000098e0      55             push rbp
0x000098e1      53             push rbx
0x000098e2      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x000098e6      49beffffffff.  movabs r14, 0x3fffffffffffffff          ; ../coreutils-8.31/lib/areadlink-with-size.c:94 ; 4611686018427387903
0x000098f0      49bffeffffff.  movabs r15, 0x7ffffffffffffffe          ; ../coreutils-8.31/lib/areadlink-with-size.c:96 ; 9223372036854775806
0x000098fa      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x000098fe      4881fe010400.  cmp rsi, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x00009905      480f43d8       cmovae rbx, rax
0x00009909      0f1f80000000.  nop dword [rax]
0x00009910      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x00009913      e8d887ffff     call sym.imp.malloc
0x00009918      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000991b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000991e      743b           je 0x995b                               ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x00009920      4889da         mov rdx, rbx
0x00009923      4889c6         mov rsi, rax
0x00009926      4c89ef         mov rdi, r13
0x00009929      e82285ffff     call sym.imp.readlink
0x0000992e      4885c0         test rax, rax
0x00009931      4989c4         mov r12, rax                            ; unistd.h:-169
0x00009934      7852           js 0x9988
0x00009936      4c39e3         cmp rbx, r12                            ; unistd.h:-163
0x00009939      7765           ja 0x99a0
0x0000993b      4889ef         mov rdi, rbp
0x0000993e      e86d84ffff     call sym.imp.free                       ; unistd.h:-162
0x00009943      4c39f3         cmp rbx, r14                            ; unistd.h:-161
0x00009946      7728           ja 0x9970                               ; unistd.h:-186
0x00009948      4801db         add rbx, rbx
0x0000994b      4889df         mov rdi, rbx
0x0000994e      e89d87ffff     call sym.imp.malloc                     ; unistd.h:-184
0x00009953      4885c0         test rax, rax
0x00009956      4889c5         mov rbp, rax                            ; unistd.h:-152
0x00009959      75c5           jne 0x9920
0x0000995b      4883c408       add rsp, 8
0x0000995f      4889e8         mov rax, rbp
0x00009962      5b             pop rbx
0x00009963      5d             pop rbp
0x00009964      415c           pop r12
0x00009966      415d           pop r13
0x00009968      415e           pop r14
0x0000996a      415f           pop r15
0x0000996c      c3             ret
0x0000996d      0f1f00         nop dword [rax]
0x00009970      4c39fb         cmp rbx, r15                            ; unistd.h:-159
0x00009973      773b           ja 0x99b0
0x00009975      48bbffffffff.  movabs rbx, 0x7fffffffffffffff          ; 9223372036854775807
0x0000997f      eb8f           jmp 0x9910
0x00009981      0f1f80000000.  nop dword [rax]
0x00009988      e84384ffff     call sym.imp.__errno_location
0x0000998d      833822         cmp dword [rax], 0x22                   ; unistd.h:-174
0x00009990      74a4           je 0x9936                               ; unistd.h:-172
0x00009992      4889ef         mov rdi, rbp                            ; unistd.h:-174
0x00009995      31ed           xor ebp, ebp
0x00009997      e81484ffff     call sym.imp.free                       ; unistd.h:-172
0x0000999c      ebbd           jmp 0x995b
0x0000999e      6690           nop
0x000099a0      42c644250000   mov byte [rbp + r12], 0
0x000099a6      ebb3           jmp 0x995b
0x000099a8      0f1f84000000.  nop dword [rax + rax]
0x000099b0      e81b84ffff     call sym.imp.__errno_location           ; unistd.h:-155
0x000099b5      31ed           xor ebp, ebp
0x000099b7      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000099bd      eb9c           jmp 0x995b
0x000099bf      90             nop
;-- __argmatch_die:
0x000099c0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x000099c5      e9f69cffff     jmp sym.usage
0x000099ca      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x000099d0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x000099d2      4156           push r14
0x000099d4      4989f7         mov r15, rsi
0x000099d7      4155           push r13
0x000099d9      4154           push r12
0x000099db      4989cd         mov r13, rcx
0x000099de      55             push rbp
0x000099df      53             push rbx
0x000099e0      4889d5         mov rbp, rdx
0x000099e3      4883ec28       sub rsp, 0x28
0x000099e7      48897c2408     mov qword [rsp + 8], rdi
0x000099ec      4889542418     mov qword [rsp + 0x18], rdx
0x000099f1      e8fa84ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x000099f6      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x000099f9      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00009a01      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00009a04      0f84b3000000   je 0x9abd
0x00009a0a      4989c4         mov r12, rax
0x00009a0d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00009a12      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00009a14      eb51           jmp 0x9a67
0x00009a16      662e0f1f8400.  nop word cs:[rax + rax]
0x00009a20      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00009a25      4885c0         test rax, rax
0x00009a28      0f84a2000000   je 0x9ad0
0x00009a2e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x00009a32      4c89ea         mov rdx, r13
0x00009a35      4889ee         mov rsi, rbp
0x00009a38      490faffd       imul rdi, r13
0x00009a3c      4801c7         add rdi, rax
0x00009a3f      e8dc85ffff     call sym.imp.memcmp
0x00009a44      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x00009a46      0fb6442417     movzx eax, byte [rsp + 0x17]
0x00009a4b      b901000000     mov ecx, 1
0x00009a50      0f45c1         cmovne eax, ecx
0x00009a53      88442417       mov byte [rsp + 0x17], al
0x00009a57      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00009a5b      4c01ed         add rbp, r13
0x00009a5e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00009a62      4d85f6         test r14, r14
0x00009a65      7441           je 0x9aa8
0x00009a67      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x00009a6c      4c89e2         mov rdx, r12
0x00009a6f      4c89f7         mov rdi, r14
0x00009a72      e86983ffff     call sym.imp.strncmp
0x00009a77      85c0           test eax, eax
0x00009a79      75dc           jne 0x9a57
0x00009a7b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x00009a7e      e86d84ffff     call sym.imp.strlen
0x00009a83      4c39e0         cmp rax, r12
0x00009a86      7458           je 0x9ae0
0x00009a88      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x00009a8d      7591           jne 0x9a20
0x00009a8f      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00009a93      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00009a97      4c01ed         add rbp, r13
0x00009a9a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00009a9e      4d85f6         test r14, r14
0x00009aa1      75c4           jne 0x9a67
0x00009aa3      0f1f440000     nop dword [rax + rax]
0x00009aa8      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x00009aad      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00009ab4      480f440424     cmove rax, qword [rsp]
0x00009ab9      48890424       mov qword [rsp], rax
0x00009abd      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00009ac1      4883c428       add rsp, 0x28
0x00009ac5      5b             pop rbx
0x00009ac6      5d             pop rbp
0x00009ac7      415c           pop r12
0x00009ac9      415d           pop r13
0x00009acb      415e           pop r14
0x00009acd      415f           pop r15
0x00009acf      c3             ret
0x00009ad0      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00009ad5      eb80           jmp 0x9a57
0x00009ad7      660f1f840000.  nop word [rax + rax]
0x00009ae0      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00009ae4      ebd7           jmp 0x9abd
0x00009ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00009af0      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00009af4      4154           push r12
0x00009af6      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x00009afb      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x00009afc      4989f4         mov r12, rsi
0x00009aff      53             push rbx
0x00009b00      4889fd         mov rbp, rdi
0x00009b03      744b           je 0x9b50                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00009b05      488d352f2f00.  lea rsi, str.ambiguous_argument__s_for__s ; 0xca3b ; "ambiguous argument %s for %s"
0x00009b0c      31ff           xor edi, edi
0x00009b0e      e8bd83ffff     call sym.imp.dcgettext
0x00009b13      4889c3         mov rbx, rax
0x00009b16      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00009b19      bf01000000     mov edi, 1
0x00009b1e      e80debffff     call sym.quote_n
0x00009b23      4c89e2         mov rdx, r12
0x00009b26      4889c5         mov rbp, rax
0x00009b29      be08000000     mov esi, 8
0x00009b2e      31ff           xor edi, edi
0x00009b30      e82be7ffff     call sym.quotearg_n_style
0x00009b35      4989e8         mov r8, rbp
0x00009b38      4889da         mov rdx, rbx
0x00009b3b      4889c1         mov rcx, rax
0x00009b3e      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x00009b3f      5d             pop rbp
0x00009b40      415c           pop r12
0x00009b42      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00009b44      31ff           xor edi, edi
0x00009b46      31c0           xor eax, eax
0x00009b48      e96386ffff     jmp sym.imp.error
0x00009b4d      0f1f00         nop dword [rax]
0x00009b50      488d35c92e00.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0xca20 ; "invalid argument %s for %s"
0x00009b57      31ff           xor edi, edi
0x00009b59      e87283ffff     call sym.imp.dcgettext
0x00009b5e      4889c3         mov rbx, rax
0x00009b61      ebb3           jmp 0x9b16
0x00009b63      0f1f00         nop dword [rax]
0x00009b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00009b70      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00009b72      4156           push r14
0x00009b74      4989fe         mov r14, rdi
0x00009b77      4155           push r13
0x00009b79      4154           push r12
0x00009b7b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x00009b7d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00009b7e      53             push rbx
0x00009b7f      4889f5         mov rbp, rsi
0x00009b82      488d35cf2e00.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0xca58 ; "Valid arguments are:"
0x00009b89      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x00009b8c      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00009b91      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00009b95      488b1d646520.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00009b9c      e82f83ffff     call sym.imp.dcgettext
0x00009ba1      4889c7         mov rdi, rax
0x00009ba4      4889de         mov rsi, rbx
0x00009ba7      e88484ffff     call sym.imp.fputs_unlocked
0x00009bac      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x00009baf      4d85ff         test r15, r15
0x00009bb2      0f8490000000   je 0x9c48
0x00009bb8      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x00009bbb      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x00009bbd      eb39           jmp 0x9bf8
0x00009bbf      90             nop
0x00009bc0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00009bc3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00009bc7      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x00009bca      e881eaffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x00009bcf      488b3d2a6520.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00009bd6      488d15902e00.  lea rdx, [0x0000ca6d]                   ; "\n  - %s"
0x00009bdd      4889c1         mov rcx, rax
0x00009be0      be01000000     mov esi, 1
0x00009be5      31c0           xor eax, eax
0x00009be7      4c01e5         add rbp, r12
0x00009bea      e87186ffff     call sym.imp.__fprintf_chk
0x00009bef      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00009bf3      4d85ff         test r15, r15
0x00009bf6      7450           je 0x9c48
0x00009bf8      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x00009bfb      74c3           je 0x9bc0
0x00009bfd      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00009c00      4889ee         mov rsi, rbp
0x00009c03      4c89ef         mov rdi, r13
0x00009c06      e81584ffff     call sym.imp.memcmp
0x00009c0b      85c0           test eax, eax
0x00009c0d      75b1           jne 0x9bc0
0x00009c0f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00009c12      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00009c16      4c01e5         add rbp, r12
0x00009c19      e832eaffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x00009c1e      488b3ddb6420.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00009c25      488d15492e00.  lea rdx, str.s                          ; 0xca75 ; ", %s"
0x00009c2c      4889c1         mov rcx, rax
0x00009c2f      be01000000     mov esi, 1
0x00009c34      31c0           xor eax, eax
0x00009c36      e82586ffff     call sym.imp.__fprintf_chk
0x00009c3b      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00009c3f      4d85ff         test r15, r15
0x00009c42      75b4           jne 0x9bf8
0x00009c44      0f1f4000       nop dword [rax]
0x00009c48      488b3db16420.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x210100:8]=0
0x00009c4f      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00009c53      483b4730       cmp rax, qword [rdi + 0x30]
0x00009c57      731f           jae 0x9c78
0x00009c59      488d5001       lea rdx, [rax + 1]
0x00009c5d      48895728       mov qword [rdi + 0x28], rdx
0x00009c61      c6000a         mov byte [rax], 0xa
0x00009c64      4883c408       add rsp, 8
0x00009c68      5b             pop rbx
0x00009c69      5d             pop rbp
0x00009c6a      415c           pop r12
0x00009c6c      415d           pop r13
0x00009c6e      415e           pop r14
0x00009c70      415f           pop r15
0x00009c72      c3             ret
0x00009c73      0f1f440000     nop dword [rax + rax]
0x00009c78      4883c408       add rsp, 8
0x00009c7c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x00009c81      5b             pop rbx
0x00009c82      5d             pop rbp
0x00009c83      415c           pop r12
0x00009c85      415d           pop r13
0x00009c87      415e           pop r14
0x00009c89      415f           pop r15
0x00009c8b      e9e082ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00009c90      4157           push r15
0x00009c92      4156           push r14
0x00009c94      4989fe         mov r14, rdi
0x00009c97      4155           push r13
0x00009c99      4154           push r12
0x00009c9b      4989f4         mov r12, rsi
0x00009c9e      55             push rbp
0x00009c9f      53             push rbx
0x00009ca0      4889cd         mov rbp, rcx
0x00009ca3      4889d3         mov rbx, rdx
0x00009ca6      4c89c1         mov rcx, r8
0x00009ca9      4889ea         mov rdx, rbp
0x00009cac      4883ec08       sub rsp, 8
0x00009cb0      4889de         mov rsi, rbx
0x00009cb3      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00009cb6      4d89c7         mov r15, r8
0x00009cb9      4d89cd         mov r13, r9
0x00009cbc      e80ffdffff     call sym.argmatch
0x00009cc1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00009cc4      780f           js 0x9cd5                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x00009cc6      4883c408       add rsp, 8
0x00009cca      5b             pop rbx
0x00009ccb      5d             pop rbp
0x00009ccc      415c           pop r12
0x00009cce      415d           pop r13
0x00009cd0      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00009cd2      415f           pop r15
0x00009cd4      c3             ret
0x00009cd5      4889c2         mov rdx, rax
0x00009cd8      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x00009cdb      4c89f7         mov rdi, r14
0x00009cde      e80dfeffff     call sym.argmatch_invalid
0x00009ce3      4c89fa         mov rdx, r15
0x00009ce6      4889ee         mov rsi, rbp
0x00009ce9      4889df         mov rdi, rbx
0x00009cec      e87ffeffff     call sym.argmatch_valid
0x00009cf1      41ffd5         call r13
0x00009cf4      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00009cfb      ebc9           jmp 0x9cc6
0x00009cfd      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00009d00      4156           push r14
0x00009d02      4155           push r13
0x00009d04      4154           push r12
0x00009d06      55             push rbp
0x00009d07      53             push rbx
0x00009d08      4c8b36         mov r14, qword [rsi]
0x00009d0b      4d85f6         test r14, r14
0x00009d0e      7431           je 0x9d41
0x00009d10      4989cc         mov r12, rcx
0x00009d13      4989fd         mov r13, rdi
0x00009d16      4889d5         mov rbp, rdx
0x00009d19      488d5e08       lea rbx, [rsi + 8]
0x00009d1d      eb10           jmp 0x9d2f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x00009d1f      90             nop
0x00009d20      4c8b33         mov r14, qword [rbx]
0x00009d23      4c01e5         add rbp, r12
0x00009d26      4883c308       add rbx, 8
0x00009d2a      4d85f6         test r14, r14
0x00009d2d      7412           je 0x9d41
0x00009d2f      4c89e2         mov rdx, r12
0x00009d32      4889ee         mov rsi, rbp
0x00009d35      4c89ef         mov rdi, r13
0x00009d38      e8e382ffff     call sym.imp.memcmp
0x00009d3d      85c0           test eax, eax
0x00009d3f      75df           jne 0x9d20
0x00009d41      5b             pop rbx
0x00009d42      4c89f0         mov rax, r14
0x00009d45      5d             pop rbp
0x00009d46      415c           pop r12
0x00009d48      415d           pop r13
0x00009d4a      415e           pop r14
0x00009d4c      c3             ret
0x00009d4d      0f1f00         nop dword [rax]
;-- close_stream:
0x00009d50      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00009d52      55             push rbp
0x00009d53      4889fd         mov rbp, rdi
0x00009d56      53             push rbx
0x00009d57      e8b480ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00009d5c      8b5d00         mov ebx, dword [rbp]
0x00009d5f      4889ef         mov rdi, rbp
0x00009d62      4989c4         mov r12, rax
0x00009d65      e8e60d0000     call sym.rpl_fclose
0x00009d6a      83e320         and ebx, 0x20                           ; "@"
0x00009d6d      85db           test ebx, ebx
0x00009d6f      7517           jne 0x9d88
0x00009d71      85c0           test eax, eax
0x00009d73      740a           je 0x9d7f                               ; stdio.h:-186
0x00009d75      4d85e4         test r12, r12                           ; stdio.h:-178
0x00009d78      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00009d7d      7439           je 0x9db8
0x00009d7f      5b             pop rbx
0x00009d80      5d             pop rbp
0x00009d81      415c           pop r12
0x00009d83      c3             ret
0x00009d84      0f1f4000       nop dword [rax]
0x00009d88      85c0           test eax, eax
0x00009d8a      751c           jne 0x9da8
0x00009d8c      e83f80ffff     call sym.imp.__errno_location
0x00009d91      c70000000000   mov dword [rax], 0
0x00009d97      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00009d9c      5b             pop rbx
0x00009d9d      5d             pop rbp
0x00009d9e      415c           pop r12
0x00009da0      c3             ret
0x00009da1      0f1f80000000.  nop dword [rax]
0x00009da8      5b             pop rbx
0x00009da9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00009dae      5d             pop rbp                                 ; stdio.h:-186
0x00009daf      415c           pop r12
0x00009db1      c3             ret
0x00009db2      660f1f440000   nop word [rax + rax]
0x00009db8      e81380ffff     call sym.imp.__errno_location
0x00009dbd      833809         cmp dword [rax], 9
0x00009dc0      5b             pop rbx
0x00009dc1      5d             pop rbp
0x00009dc2      415c           pop r12                                 ; stdio.h:-178
0x00009dc4      0f95c0         setne al
0x00009dc7      0fb6c0         movzx eax, al
0x00009dca      f7d8           neg eax
0x00009dcc      c3             ret
0x00009dcd      0f1f00         nop dword [rax]
;-- hard_locale:
0x00009dd0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00009dd4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00009dd6      e88583ffff     call sym.imp.setlocale
0x00009ddb      4889c2         mov rdx, rax
0x00009dde      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00009de3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00009de6      741d           je 0x9e05
0x00009de8      488d3d8b2c00.  lea rdi, [0x0000ca7a]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00009def      b902000000     mov ecx, 2
0x00009df4      4889d6         mov rsi, rdx
0x00009df7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009df9      0f97c1         seta cl
0x00009dfc      80d900         sbb cl, 0
0x00009dff      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00009e01      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00009e03      750b           jne 0x9e10
0x00009e05      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00009e09      c3             ret
0x00009e0a      660f1f440000   nop word [rax + rax]
0x00009e10      488d3d652c00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xca7c ; "POSIX"
0x00009e17      b906000000     mov ecx, 6
0x00009e1c      4889d6         mov rsi, rdx
0x00009e1f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009e21      0f97c0         seta al
0x00009e24      1c00           sbb al, 0
0x00009e26      84c0           test al, al
0x00009e28      0f95c0         setne al
0x00009e2b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00009e2f      c3             ret
;-- hash_pjw:
0x00009e30      480fbe0f       movsx rcx, byte [rdi]
0x00009e34      84c9           test cl, cl
0x00009e36      7428           je 0x9e60
0x00009e38      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-pjw.c:34
0x00009e3a      660f1f440000   nop word [rax + rax]
0x00009e40      48c1c009       rol rax, 9                              ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00009e44      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00009e48      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00009e4b      480fbe0f       movsx rcx, byte [rdi]                   ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00009e4f      84c9           test cl, cl
0x00009e51      75ed           jne 0x9e40
0x00009e53      31d2           xor edx, edx
0x00009e55      48f7f6         div rsi
0x00009e58      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00009e5b      c3             ret
0x00009e5c      0f1f4000       nop dword [rax]
0x00009e60      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00009e62      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00009e65      c3             ret
0x00009e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- locale_charset:
0x00009e70      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00009e74      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00009e79      e89282ffff     call sym.imp.nl_langinfo
0x00009e7e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00009e81      741d           je 0x9ea0
0x00009e83      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00009e86      488d15f52b00.  lea rdx, str.ASCII                      ; 0xca82 ; "ASCII"
0x00009e8d      480f44c2       cmove rax, rdx
0x00009e91      4883c408       add rsp, 8
0x00009e95      c3             ret
0x00009e96      662e0f1f8400.  nop word cs:[rax + rax]
0x00009ea0      488d05db2b00.  lea rax, str.ASCII                      ; 0xca82 ; "ASCII"
0x00009ea7      4883c408       add rsp, 8
0x00009eab      c3             ret
0x00009eac      0f1f4000       nop dword [rax]
;-- randint_new:
0x00009eb0      53             push rbx
0x00009eb1      4889fb         mov rbx, rdi
0x00009eb4      bf18000000     mov edi, 0x18
0x00009eb9      e852f5ffff     call sym.xmalloc
0x00009ebe      488918         mov qword [rax], rbx
0x00009ec1      48c740100000.  mov qword [rax + 0x10], 0
0x00009ec9      48c740080000.  mov qword [rax + 8], 0
0x00009ed1      5b             pop rbx
0x00009ed2      c3             ret
0x00009ed3      0f1f00         nop dword [rax]
0x00009ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_all_new:
0x00009ee0      53             push rbx
0x00009ee1      e84a020000     call sym.randread_new
0x00009ee6      4885c0         test rax, rax
0x00009ee9      7425           je 0x9f10
0x00009eeb      4889c3         mov rbx, rax
0x00009eee      bf18000000     mov edi, 0x18
0x00009ef3      e818f5ffff     call sym.xmalloc
0x00009ef8      488918         mov qword [rax], rbx
0x00009efb      48c740100000.  mov qword [rax + 0x10], 0
0x00009f03      48c740080000.  mov qword [rax + 8], 0
0x00009f0b      5b             pop rbx
0x00009f0c      c3             ret
0x00009f0d      0f1f00         nop dword [rax]
0x00009f10      31c0           xor eax, eax
0x00009f12      5b             pop rbx
0x00009f13      c3             ret
0x00009f14      6690           nop
0x00009f16      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_get_source:
0x00009f20      488b07         mov rax, qword [rdi]
0x00009f23      c3             ret
0x00009f24      6690           nop
0x00009f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_genmax:
0x00009f30      4157           push r15
0x00009f32      4156           push r14
0x00009f34      4c8d7e01       lea r15, [rsi + 1]
0x00009f38      4155           push r13
0x00009f3a      4154           push r12
0x00009f3c      4989fd         mov r13, rdi
0x00009f3f      55             push rbp
0x00009f40      53             push rbx
0x00009f41      4989f6         mov r14, rsi
0x00009f44      4883ec28       sub rsp, 0x28
0x00009f48      488b6f08       mov rbp, qword [rdi + 8]
0x00009f4c      488b5f10       mov rbx, qword [rdi + 0x10]
0x00009f50      64488b042528.  mov rax, qword fs:[0x28]
0x00009f59      4889442418     mov qword [rsp + 0x18], rax
0x00009f5e      31c0           xor eax, eax
0x00009f60      488b07         mov rax, qword [rdi]
0x00009f63      4c8d642410     lea r12, [rsp + 0x10]
0x00009f68      4889442408     mov qword [rsp + 8], rax
0x00009f6d      eb36           jmp 0x9fa5
0x00009f6f      90             nop
0x00009f70      4c39f3         cmp rbx, r14
0x00009f73      0f8486000000   je 0x9fff
0x00009f79      4889d8         mov rax, rbx
0x00009f7c      31d2           xor edx, edx
0x00009f7e      4c29f0         sub rax, r14
0x00009f81      49f7f7         div r15
0x00009f84      4829d3         sub rbx, rdx
0x00009f87      4889d7         mov rdi, rdx
0x00009f8a      4889c6         mov rsi, rax
0x00009f8d      31d2           xor edx, edx
0x00009f8f      4889e8         mov rax, rbp
0x00009f92      49f7f7         div r15
0x00009f95      4839dd         cmp rbp, rbx
0x00009f98      0f869a000000   jbe 0xa038
0x00009f9e      488d5fff       lea rbx, [rdi - 1]
0x00009fa2      4889d5         mov rbp, rdx
0x00009fa5      4c39f3         cmp rbx, r14
0x00009fa8      73c6           jae 0x9f70
0x00009faa      4889d8         mov rax, rbx
0x00009fad      31d2           xor edx, edx
0x00009faf      90             nop
0x00009fb0      48c1e008       shl rax, 8
0x00009fb4      4883c201       add rdx, 1
0x00009fb8      4805ff000000   add rax, 0xff
0x00009fbe      4939c6         cmp r14, rax
0x00009fc1      77ed           ja 0x9fb0
0x00009fc3      488b7c2408     mov rdi, qword [rsp + 8]
0x00009fc8      4c89e6         mov rsi, r12
0x00009fcb      e8b0040000     call sym.randread
0x00009fd0      4c89e0         mov rax, r12
0x00009fd3      0f1f440000     nop dword [rax + rax]
0x00009fd8      0fb610         movzx edx, byte [rax]
0x00009fdb      48c1e308       shl rbx, 8
0x00009fdf      48c1e508       shl rbp, 8
0x00009fe3      4881c3ff0000.  add rbx, 0xff
0x00009fea      4883c001       add rax, 1
0x00009fee      4801d5         add rbp, rdx
0x00009ff1      4939de         cmp r14, rbx
0x00009ff4      77e2           ja 0x9fd8
0x00009ff6      4c39f3         cmp rbx, r14
0x00009ff9      0f857affffff   jne 0x9f79
0x00009fff      49c745100000.  mov qword [r13 + 0x10], 0
0x0000a007      49c745080000.  mov qword [r13 + 8], 0
0x0000a00f      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000a014      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a01d      4889e8         mov rax, rbp
0x0000a020      7523           jne 0xa045
0x0000a022      4883c428       add rsp, 0x28
0x0000a026      5b             pop rbx
0x0000a027      5d             pop rbp
0x0000a028      415c           pop r12
0x0000a02a      415d           pop r13
0x0000a02c      415e           pop r14
0x0000a02e      415f           pop r15
0x0000a030      c3             ret
0x0000a031      0f1f80000000.  nop dword [rax]
0x0000a038      49894508       mov qword [r13 + 8], rax
0x0000a03c      49897510       mov qword [r13 + 0x10], rsi
0x0000a040      4889d5         mov rbp, rdx
0x0000a043      ebca           jmp 0xa00f
0x0000a045      e8d67effff     call sym.imp.__stack_chk_fail
0x0000a04a      660f1f440000   nop word [rax + rax]
;-- randint_free:
0x0000a050      53             push rbx
0x0000a051      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000a058      4889fb         mov rbx, rdi
0x0000a05b      be18000000     mov esi, 0x18
0x0000a060      e85b81ffff     call sym.imp.__explicit_bzero_chk
0x0000a065      4889df         mov rdi, rbx
0x0000a068      5b             pop rbx
0x0000a069      e9427dffff     jmp sym.imp.free
0x0000a06e      6690           nop
;-- randint_all_free:
0x0000a070      4155           push r13
0x0000a072      4154           push r12
0x0000a074      55             push rbp
0x0000a075      53             push rbx
0x0000a076      4889fb         mov rbx, rdi
0x0000a079      4883ec08       sub rsp, 8
0x0000a07d      488b3f         mov rdi, qword [rdi]
0x0000a080      e89b050000     call sym.randread_free
0x0000a085      4189c4         mov r12d, eax
0x0000a088      e8437dffff     call sym.imp.__errno_location
0x0000a08d      448b28         mov r13d, dword [rax]
0x0000a090      4889df         mov rdi, rbx
0x0000a093      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000a09a      be18000000     mov esi, 0x18
0x0000a09f      4889c5         mov rbp, rax
0x0000a0a2      e81981ffff     call sym.imp.__explicit_bzero_chk
0x0000a0a7      4889df         mov rdi, rbx
0x0000a0aa      e8017dffff     call sym.imp.free
0x0000a0af      44896d00       mov dword [rbp], r13d
0x0000a0b3      4883c408       add rsp, 8
0x0000a0b7      4489e0         mov eax, r12d
0x0000a0ba      5b             pop rbx
0x0000a0bb      5d             pop rbp
0x0000a0bc      415c           pop r12
0x0000a0be      415d           pop r13
0x0000a0c0      c3             ret
0x0000a0c1      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a0cb      0f1f440000     nop dword [rax + rax]
;-- randread_error:
0x0000a0d0      55             push rbp
0x0000a0d1      53             push rbx
0x0000a0d2      4883ec08       sub rsp, 8
0x0000a0d6      4885ff         test rdi, rdi
0x0000a0d9      743d           je 0xa118
0x0000a0db      e870e5ffff     call sym.quote
0x0000a0e0      4889c5         mov rbp, rax
0x0000a0e3      e8e87cffff     call sym.imp.__errno_location
0x0000a0e8      833800         cmp dword [rax], 0
0x0000a0eb      4889c3         mov rbx, rax
0x0000a0ee      ba05000000     mov edx, 5
0x0000a0f3      7428           je 0xa11d
0x0000a0f5      488d359c2900.  lea rsi, str.s:_read_error              ; 0xca98 ; "%s: read error"
0x0000a0fc      31ff           xor edi, edi
0x0000a0fe      e8cd7dffff     call sym.imp.dcgettext
0x0000a103      8b3d175f2000   mov edi, dword [obj.exit_failure]       ; [0x210020:4]=1
0x0000a109      8b33           mov esi, dword [rbx]
0x0000a10b      4889c2         mov rdx, rax
0x0000a10e      4889e9         mov rcx, rbp
0x0000a111      31c0           xor eax, eax
0x0000a113      e89880ffff     call sym.imp.error
0x0000a118      e8a37cffff     call sym.imp.abort
0x0000a11d      488d35642900.  lea rsi, str.s:_end_of_file             ; 0xca88 ; "%s: end of file"
0x0000a124      31ff           xor edi, edi
0x0000a126      e8a57dffff     call sym.imp.dcgettext
0x0000a12b      ebd6           jmp 0xa103
0x0000a12d      0f1f00         nop dword [rax]
;-- randread_new:
0x0000a130      4157           push r15
0x0000a132      4156           push r14
0x0000a134      4155           push r13
0x0000a136      4154           push r12
0x0000a138      55             push rbp
0x0000a139      53             push rbx
0x0000a13a      4883ec38       sub rsp, 0x38
0x0000a13e      64488b042528.  mov rax, qword fs:[0x28]
0x0000a147      4889442428     mov qword [rsp + 0x28], rax
0x0000a14c      31c0           xor eax, eax
0x0000a14e      4885f6         test rsi, rsi
0x0000a151      0f8421010000   je 0xa278
0x0000a157      4885ff         test rdi, rdi
0x0000a15a      4989fc         mov r12, rdi
0x0000a15d      4889f5         mov rbp, rsi
0x0000a160      747e           je 0xa1e0
0x0000a162      488d354b2900.  lea rsi, [0x0000cab4]                   ; "rb"
0x0000a169      e8e20c0000     call sym.fopen_safer
0x0000a16e      4885c0         test rax, rax
0x0000a171      4989c5         mov r13, rax
0x0000a174      0f84fe010000   je 0xa378
0x0000a17a      bf38100000     mov edi, 0x1038
0x0000a17f      e88cf2ffff     call sym.xmalloc
0x0000a184      4889c3         mov rbx, rax
0x0000a187      4c8928         mov qword [rax], r13
0x0000a18a      488d053fffff.  lea rax, sym.randread_error             ; 0xa0d0 ; "USH\x83\xec\bH\x85\xfft=\xe8p\xe5\xff\xffH\x89\xc5\xe8\xe8|\xff\xff\x838"
0x0000a191      4881fd001000.  cmp rbp, 0x1000
0x0000a198      b900100000     mov ecx, 0x1000
0x0000a19d      488d7318       lea rsi, [rbx + 0x18]
0x0000a1a1      480f46cd       cmovbe rcx, rbp
0x0000a1a5      48894308       mov qword [rbx + 8], rax
0x0000a1a9      4c896310       mov qword [rbx + 0x10], r12
0x0000a1ad      31d2           xor edx, edx
0x0000a1af      4c89ef         mov rdi, r13
0x0000a1b2      e8c97fffff     call sym.imp.setvbuf
0x0000a1b7      488b542428     mov rdx, qword [rsp + 0x28]
0x0000a1bc      644833142528.  xor rdx, qword fs:[0x28]
0x0000a1c5      4889d8         mov rax, rbx
0x0000a1c8      0f85b1010000   jne 0xa37f
0x0000a1ce      4883c438       add rsp, 0x38
0x0000a1d2      5b             pop rbx
0x0000a1d3      5d             pop rbp
0x0000a1d4      415c           pop r12
0x0000a1d6      415d           pop r13
0x0000a1d8      415e           pop r14
0x0000a1da      415f           pop r15
0x0000a1dc      c3             ret
0x0000a1dd      0f1f00         nop dword [rax]
0x0000a1e0      bf38100000     mov edi, 0x1038
0x0000a1e5      e826f2ffff     call sym.xmalloc
0x0000a1ea      4889c3         mov rbx, rax
0x0000a1ed      48c700000000.  mov qword [rax], 0
0x0000a1f4      488d05d5feff.  lea rax, sym.randread_error             ; 0xa0d0 ; "USH\x83\xec\bH\x85\xfft=\xe8p\xe5\xff\xffH\x89\xc5\xe8\xe8|\xff\xff\x838"
0x0000a1fb      488d3da52800.  lea rdi, str.dev_urandom                ; 0xcaa7 ; "/dev/urandom"
0x0000a202      31f6           xor esi, esi
0x0000a204      48c743100000.  mov qword [rbx + 0x10], 0
0x0000a20c      48894308       mov qword [rbx + 8], rax
0x0000a210      48c743180000.  mov qword [rbx + 0x18], 0
0x0000a218      31c0           xor eax, eax
0x0000a21a      e8b17fffff     call sym.imp.open
0x0000a21f      85c0           test eax, eax
0x0000a221      4c8d6b20       lea r13, [rbx + 0x20]
0x0000a225      4189c7         mov r15d, eax
0x0000a228      787e           js 0xa2a8
0x0000a22a      4881fd000800.  cmp rbp, 0x800
0x0000a231      4889ea         mov rdx, rbp
0x0000a234      41be00080000   mov r14d, 0x800
0x0000a23a      490f47d6       cmova rdx, r14
0x0000a23e      b918100000     mov ecx, 0x1018
0x0000a243      4c89ee         mov rsi, r13
0x0000a246      89c7           mov edi, eax
0x0000a248      e8d37bffff     call sym.imp.__read_chk
0x0000a24d      4489ff         mov edi, r15d
0x0000a250      4889c5         mov rbp, rax
0x0000a253      e8887dffff     call sym.imp.close
0x0000a258      4881fdff0700.  cmp rbp, 0x7ff
0x0000a25f      0f8e1f010000   jle 0xa384
0x0000a265      4c89ef         mov rdi, r13
0x0000a268      e893060000     call sym.isaac_seed
0x0000a26d      e945ffffff     jmp 0xa1b7
0x0000a272      660f1f440000   nop word [rax + rax]
0x0000a278      bf38100000     mov edi, 0x1038
0x0000a27d      e88ef1ffff     call sym.xmalloc
0x0000a282      4889c3         mov rbx, rax
0x0000a285      48c700000000.  mov qword [rax], 0
0x0000a28c      488d053dfeff.  lea rax, sym.randread_error             ; 0xa0d0 ; "USH\x83\xec\bH\x85\xfft=\xe8p\xe5\xff\xffH\x89\xc5\xe8\xe8|\xff\xff\x838"
0x0000a293      48c743100000.  mov qword [rbx + 0x10], 0
0x0000a29b      48894308       mov qword [rbx + 8], rax
0x0000a29f      e913ffffff     jmp 0xa1b7
0x0000a2a4      0f1f4000       nop dword [rax]
0x0000a2a8      4c8d642410     lea r12, [rsp + 0x10]
0x0000a2ad      31f6           xor esi, esi
0x0000a2af      41be18000000   mov r14d, 0x18
0x0000a2b5      4c89e7         mov rdi, r12
0x0000a2b8      e8e37cffff     call sym.imp.gettimeofday
0x0000a2bd      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x0000a2c3      0f114320       movups xmmword [rbx + 0x20], xmm0
0x0000a2c7      e8a47bffff     call sym.imp.getpid
0x0000a2cc      894330         mov dword [rbx + 0x30], eax
0x0000a2cf      89442410       mov dword [rsp + 0x10], eax
0x0000a2d3      e8587fffff     call sym.imp.getppid
0x0000a2d8      89442410       mov dword [rsp + 0x10], eax
0x0000a2dc      894334         mov dword [rbx + 0x34], eax
0x0000a2df      bd00080000     mov ebp, 0x800
0x0000a2e4      b804000000     mov eax, 4
0x0000a2e9      4c29f5         sub rbp, r14
0x0000a2ec      4883fd04       cmp rbp, 4
0x0000a2f0      480f47e8       cmova rbp, rax
0x0000a2f4      e8377cffff     call sym.imp.getuid
0x0000a2f9      85ed           test ebp, ebp
0x0000a2fb      89442410       mov dword [rsp + 0x10], eax
0x0000a2ff      4b8d4c3500     lea rcx, [r13 + r14]
0x0000a304      89ee           mov esi, ebp
0x0000a306      7414           je 0xa31c
0x0000a308      31c0           xor eax, eax
0x0000a30a      89c2           mov edx, eax
0x0000a30c      83c001         add eax, 1
0x0000a30f      410fb63c14     movzx edi, byte [r12 + rdx]
0x0000a314      39f0           cmp eax, esi
0x0000a316      40883c11       mov byte [rcx + rdx], dil
0x0000a31a      72ee           jb 0xa30a
0x0000a31c      4c01f5         add rbp, r14
0x0000a31f      4881fdff0700.  cmp rbp, 0x7ff
0x0000a326      0f8739ffffff   ja 0xa265
0x0000a32c      e88f7dffff     call sym.imp.getgid
0x0000a331      89442410       mov dword [rsp + 0x10], eax
0x0000a335      b800080000     mov eax, 0x800
0x0000a33a      ba04000000     mov edx, 4
0x0000a33f      4829e8         sub rax, rbp
0x0000a342      498d4c2d00     lea rcx, [r13 + rbp]
0x0000a347      4883f804       cmp rax, 4
0x0000a34b      480f47c2       cmova rax, rdx
0x0000a34f      85c0           test eax, eax
0x0000a351      89c6           mov esi, eax
0x0000a353      0f840cffffff   je 0xa265
0x0000a359      31c0           xor eax, eax
0x0000a35b      89c2           mov edx, eax
0x0000a35d      83c001         add eax, 1
0x0000a360      410fb63c14     movzx edi, byte [r12 + rdx]
0x0000a365      39f0           cmp eax, esi
0x0000a367      40883c11       mov byte [rcx + rdx], dil
0x0000a36b      72ee           jb 0xa35b
0x0000a36d      e9f3feffff     jmp 0xa265
0x0000a372      660f1f440000   nop word [rax + rax]
0x0000a378      31db           xor ebx, ebx
0x0000a37a      e938feffff     jmp 0xa1b7
0x0000a37f      e89c7bffff     call sym.imp.__stack_chk_fail
0x0000a384      4885ed         test rbp, rbp
0x0000a387      4d89f7         mov r15, r14
0x0000a38a      b810000000     mov eax, 0x10
0x0000a38f      490f48ec       cmovs rbp, r12
0x0000a393      4c8d642410     lea r12, [rsp + 0x10]
0x0000a398      4929ef         sub r15, rbp
0x0000a39b      4983ff10       cmp r15, 0x10
0x0000a39f      4c89e7         mov rdi, r12
0x0000a3a2      4c0f47f8       cmova r15, rax
0x0000a3a6      31f6           xor esi, esi
0x0000a3a8      e8f37bffff     call sym.imp.gettimeofday
0x0000a3ad      498d442d00     lea rax, [r13 + rbp]
0x0000a3b2      4c01fd         add rbp, r15
0x0000a3b5      4489f9         mov ecx, r15d
0x0000a3b8      4881fdff0700.  cmp rbp, 0x7ff
0x0000a3bf      4c89e6         mov rsi, r12
0x0000a3c2      4889c7         mov rdi, rax
0x0000a3c5      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x0000a3c7      0f8798feffff   ja 0xa265
0x0000a3cd      4d89f7         mov r15, r14
0x0000a3d0      41b804000000   mov r8d, 4
0x0000a3d6      4929ef         sub r15, rbp
0x0000a3d9      4c89442408     mov qword [rsp + 8], r8
0x0000a3de      4983ff04       cmp r15, 4
0x0000a3e2      4d0f47f8       cmova r15, r8
0x0000a3e6      4a8d543d00     lea rdx, [rbp + r15]
0x0000a3eb      4c01ed         add rbp, r13
0x0000a3ee      48891424       mov qword [rsp], rdx
0x0000a3f2      e8797affff     call sym.imp.getpid
0x0000a3f7      488b1424       mov rdx, qword [rsp]
0x0000a3fb      89442410       mov dword [rsp + 0x10], eax
0x0000a3ff      4489f9         mov ecx, r15d
0x0000a402      4889ef         mov rdi, rbp
0x0000a405      4c89e6         mov rsi, r12
0x0000a408      4c8b442408     mov r8, qword [rsp + 8]
0x0000a40d      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x0000a40f      4881faff0700.  cmp rdx, 0x7ff
0x0000a416      0f8f49feffff   jg 0xa265
0x0000a41c      4929d6         sub r14, rdx
0x0000a41f      4983fe04       cmp r14, 4
0x0000a423      4d0f47f0       cmova r14, r8
0x0000a427      e8047effff     call sym.imp.getppid
0x0000a42c      488b1424       mov rdx, qword [rsp]
0x0000a430      89442410       mov dword [rsp + 0x10], eax
0x0000a434      4489f1         mov ecx, r14d
0x0000a437      4c89e6         mov rsi, r12
0x0000a43a      498d441500     lea rax, [r13 + rdx]
0x0000a43f      4901d6         add r14, rdx
0x0000a442      4981feff0700.  cmp r14, 0x7ff
0x0000a449      4889c7         mov rdi, rax
0x0000a44c      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x0000a44e      0f8711feffff   ja 0xa265
0x0000a454      e986feffff     jmp 0xa2df
0x0000a459      0f1f80000000.  nop dword [rax]
;-- randread_set_handler:
0x0000a460      48897708       mov qword [rdi + 8], rsi
0x0000a464      c3             ret
0x0000a465      90             nop
0x0000a466      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_set_handler_arg:
0x0000a470      48897710       mov qword [rdi + 0x10], rsi
0x0000a474      c3             ret
0x0000a475      90             nop
0x0000a476      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread:
0x0000a480      4157           push r15
0x0000a482      4156           push r14
0x0000a484      4155           push r13
0x0000a486      4154           push r12
0x0000a488      4989fc         mov r12, rdi
0x0000a48b      55             push rbp
0x0000a48c      53             push rbx
0x0000a48d      4889d5         mov rbp, rdx
0x0000a490      4889f3         mov rbx, rsi
0x0000a493      4883ec18       sub rsp, 0x18
0x0000a497      488b0f         mov rcx, qword [rdi]
0x0000a49a      4885c9         test rcx, rcx
0x0000a49d      48894c2408     mov qword [rsp + 8], rcx
0x0000a4a2      7464           je 0xa508
0x0000a4a4      e82779ffff     call sym.imp.__errno_location
0x0000a4a9      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a4ae      4989c5         mov r13, rax
0x0000a4b1      eb23           jmp 0xa4d6
0x0000a4b3      0f1f440000     nop dword [rax + rax]
0x0000a4b8      498b0424       mov rax, qword [r12]
0x0000a4bc      498b7c2410     mov rdi, qword [r12 + 0x10]
0x0000a4c1      8b00           mov eax, dword [rax]
0x0000a4c3      83e020         and eax, 0x20                           ; "@"
0x0000a4c6      0f45c2         cmovne eax, edx
0x0000a4c9      41894500       mov dword [r13], eax
0x0000a4cd      41ff542408     call qword [r12 + 8]
0x0000a4d2      498b0c24       mov rcx, qword [r12]
0x0000a4d6      4889ea         mov rdx, rbp
0x0000a4d9      4889df         mov rdi, rbx
0x0000a4dc      be01000000     mov esi, 1
0x0000a4e1      e89a79ffff     call sym.imp.fread_unlocked
0x0000a4e6      4801c3         add rbx, rax
0x0000a4e9      4829c5         sub rbp, rax
0x0000a4ec      418b5500       mov edx, dword [r13]
0x0000a4f0      75c6           jne 0xa4b8
0x0000a4f2      4883c418       add rsp, 0x18
0x0000a4f6      5b             pop rbx
0x0000a4f7      5d             pop rbp
0x0000a4f8      415c           pop r12
0x0000a4fa      415d           pop r13
0x0000a4fc      415e           pop r14
0x0000a4fe      415f           pop r15
0x0000a500      c3             ret
0x0000a501      0f1f80000000.  nop dword [rax]
0x0000a508      4c8b7718       mov r14, qword [rdi + 0x18]
0x0000a50c      488d87380800.  lea rax, [rdi + 0x838]
0x0000a513      4c8d6f20       lea r13, [rdi + 0x20]
0x0000a517      4889442408     mov qword [rsp + 8], rax
0x0000a51c      4c39f2         cmp rdx, r14
0x0000a51f      0f86dd000000   jbe 0xa602
0x0000a525      be00080000     mov esi, 0x800
0x0000a52a      4889df         mov rdi, rbx
0x0000a52d      4c89f2         mov rdx, r14
0x0000a530      4c29f6         sub rsi, r14
0x0000a533      4803742408     add rsi, qword [rsp + 8]
0x0000a538      4c01f3         add rbx, r14
0x0000a53b      4c29f5         sub rbp, r14
0x0000a53e      e85d7bffff     call sym.imp.memcpy
0x0000a543      f6c307         test bl, 7
0x0000a546      7568           jne 0xa5b0
0x0000a548      4881fdff0700.  cmp rbp, 0x7ff
0x0000a54f      0f869e000000   jbe 0xa5f3
0x0000a555      4c8dbd00f8ff.  lea r15, [rbp - 0x800]
0x0000a55c      4d89fe         mov r14, r15
0x0000a55f      4181e6ff0700.  and r14d, 0x7ff
0x0000a566      eb14           jmp 0xa57c
0x0000a568      0f1f84000000.  nop dword [rax + rax]
0x0000a570      4d39f7         cmp r15, r14
0x0000a573      743b           je 0xa5b0
0x0000a575      4981ef000800.  sub r15, 0x800
0x0000a57c      4889de         mov rsi, rbx
0x0000a57f      4c89ef         mov rdi, r13
0x0000a582      4881c3000800.  add rbx, 0x800
0x0000a589      e8e2000000     call sym.isaac_refill
0x0000a58e      4d85ff         test r15, r15
0x0000a591      4c89fd         mov rbp, r15
0x0000a594      75da           jne 0xa570
0x0000a596      49c744241800.  mov qword [r12 + 0x18], 0
0x0000a59f      4883c418       add rsp, 0x18
0x0000a5a3      5b             pop rbx
0x0000a5a4      5d             pop rbp
0x0000a5a5      415c           pop r12
0x0000a5a7      415d           pop r13
0x0000a5a9      415e           pop r14
0x0000a5ab      415f           pop r15
0x0000a5ad      c3             ret
0x0000a5ae      6690           nop
0x0000a5b0      488b742408     mov rsi, qword [rsp + 8]
0x0000a5b5      4c89ef         mov rdi, r13
0x0000a5b8      41be00080000   mov r14d, 0x800
0x0000a5be      e8ad000000     call sym.isaac_refill
0x0000a5c3      4881fd000800.  cmp rbp, 0x800
0x0000a5ca      0f8755ffffff   ja 0xa525
0x0000a5d0      41be00080000   mov r14d, 0x800
0x0000a5d6      488b742408     mov rsi, qword [rsp + 8]
0x0000a5db      4889ea         mov rdx, rbp
0x0000a5de      4889df         mov rdi, rbx
0x0000a5e1      4929ee         sub r14, rbp
0x0000a5e4      e8b77affff     call sym.imp.memcpy
0x0000a5e9      4d89742418     mov qword [r12 + 0x18], r14
0x0000a5ee      e9fffeffff     jmp 0xa4f2
0x0000a5f3      488b742408     mov rsi, qword [rsp + 8]
0x0000a5f8      4c89ef         mov rdi, r13
0x0000a5fb      e870000000     call sym.isaac_refill
0x0000a600      ebce           jmp 0xa5d0
0x0000a602      4989c7         mov r15, rax
0x0000a605      4d29f7         sub r15, r14
0x0000a608      498d87000800.  lea rax, [r15 + 0x800]
0x0000a60f      4889442408     mov qword [rsp + 8], rax
0x0000a614      ebc0           jmp 0xa5d6
0x0000a616      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_free:
0x0000a620      55             push rbp
0x0000a621      53             push rbx
0x0000a622      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000a629      4889fb         mov rbx, rdi
0x0000a62c      be38100000     mov esi, 0x1038
0x0000a631      4883ec08       sub rsp, 8
0x0000a635      488b2f         mov rbp, qword [rdi]
0x0000a638      e8837bffff     call sym.imp.__explicit_bzero_chk
0x0000a63d      4889df         mov rdi, rbx
0x0000a640      e86b77ffff     call sym.imp.free
0x0000a645      4885ed         test rbp, rbp
0x0000a648      7416           je 0xa660
0x0000a64a      4883c408       add rsp, 8
0x0000a64e      4889ef         mov rdi, rbp
0x0000a651      5b             pop rbx
0x0000a652      5d             pop rbp
0x0000a653      e9f8040000     jmp sym.rpl_fclose
0x0000a658      0f1f84000000.  nop dword [rax + rax]
0x0000a660      4883c408       add rsp, 8
0x0000a664      31c0           xor eax, eax
0x0000a666      5b             pop rbx
0x0000a667      5d             pop rbp
0x0000a668      c3             ret
0x0000a669      0f1f80000000.  nop dword [rax]
;-- isaac_refill:
0x0000a670      488b87100800.  mov rax, qword [rdi + 0x810]
0x0000a677      488b97000800.  mov rdx, qword [rdi + 0x800]
0x0000a67e      4c8d8f000400.  lea r9, [rdi + 0x400]
0x0000a685      488d4801       lea rcx, [rax + 1]
0x0000a689      4889f8         mov rax, rdi
0x0000a68c      48898f100800.  mov qword [rdi + 0x810], rcx
0x0000a693      48038f080800.  add rcx, qword [rdi + 0x808]
0x0000a69a      660f1f440000   nop word [rax + rax]
0x0000a6a0      4989d0         mov r8, rdx
0x0000a6a3      49c1e015       shl r8, 0x15
0x0000a6a7      4c31c2         xor rdx, r8
0x0000a6aa      4c8b00         mov r8, qword [rax]
0x0000a6ad      48f7d2         not rdx
0x0000a6b0      480390000400.  add rdx, qword [rax + 0x400]
0x0000a6b7      4d89c2         mov r10, r8
0x0000a6ba      4181e2f80700.  and r10d, 0x7f8
0x0000a6c1      4e8b1c17       mov r11, qword [rdi + r10]
0x0000a6c5      4989d2         mov r10, rdx
0x0000a6c8      49c1ea05       shr r10, 5
0x0000a6cc      4901d3         add r11, rdx
0x0000a6cf      4c31d2         xor rdx, r10
0x0000a6d2      4c01d9         add rcx, r11
0x0000a6d5      488908         mov qword [rax], rcx
0x0000a6d8      48c1e908       shr rcx, 8
0x0000a6dc      81e1f8070000   and ecx, 0x7f8
0x0000a6e2      4c8b1c0f       mov r11, qword [rdi + rcx]
0x0000a6e6      4d01c3         add r11, r8
0x0000a6e9      4c891e         mov qword [rsi], r11
0x0000a6ec      480390080400.  add rdx, qword [rax + 0x408]
0x0000a6f3      488b4808       mov rcx, qword [rax + 8]
0x0000a6f7      4989d2         mov r10, rdx
0x0000a6fa      4889ca         mov rdx, rcx
0x0000a6fd      81e2f8070000   and edx, 0x7f8
0x0000a703      4c8b0417       mov r8, qword [rdi + rdx]
0x0000a707      4c89d2         mov rdx, r10
0x0000a70a      48c1e20c       shl rdx, 0xc
0x0000a70e      4c31d2         xor rdx, r10
0x0000a711      4d01d0         add r8, r10
0x0000a714      4d01d8         add r8, r11
0x0000a717      4c894008       mov qword [rax + 8], r8
0x0000a71b      49c1e808       shr r8, 8
0x0000a71f      4181e0f80700.  and r8d, 0x7f8
0x0000a726      4a030c07       add rcx, qword [rdi + r8]
0x0000a72a      48894e08       mov qword [rsi + 8], rcx
0x0000a72e      4c8b4010       mov r8, qword [rax + 0x10]
0x0000a732      4989cb         mov r11, rcx
0x0000a735      480390100400.  add rdx, qword [rax + 0x410]
0x0000a73c      4c89c1         mov rcx, r8
0x0000a73f      81e1f8070000   and ecx, 0x7f8
0x0000a745      4c8b140f       mov r10, qword [rdi + rcx]
0x0000a749      4901d2         add r10, rdx
0x0000a74c      4c89d1         mov rcx, r10
0x0000a74f      4c01d9         add rcx, r11
0x0000a752      48894810       mov qword [rax + 0x10], rcx
0x0000a756      48c1e908       shr rcx, 8
0x0000a75a      81e1f8070000   and ecx, 0x7f8
0x0000a760      4c8b140f       mov r10, qword [rdi + rcx]
0x0000a764      4889d1         mov rcx, rdx
0x0000a767      48c1e921       shr rcx, 0x21
0x0000a76b      4831ca         xor rdx, rcx
0x0000a76e      4d01c2         add r10, r8
0x0000a771      4c895610       mov qword [rsi + 0x10], r10
0x0000a775      488b4818       mov rcx, qword [rax + 0x18]
0x0000a779      480390180400.  add rdx, qword [rax + 0x418]
0x0000a780      4989c8         mov r8, rcx
0x0000a783      4181e0f80700.  and r8d, 0x7f8
0x0000a78a      4e8b1c07       mov r11, qword [rdi + r8]
0x0000a78e      4901d3         add r11, rdx
0x0000a791      4d89d8         mov r8, r11
0x0000a794      4d01d0         add r8, r10
0x0000a797      4883c020       add rax, 0x20                           ; "@"
0x0000a79b      4883c620       add rsi, 0x20                           ; "@"
0x0000a79f      4c8940f8       mov qword [rax - 8], r8
0x0000a7a3      49c1e808       shr r8, 8
0x0000a7a7      4181e0f80700.  and r8d, 0x7f8
0x0000a7ae      4a030c07       add rcx, qword [rdi + r8]
0x0000a7b2      48894ef8       mov qword [rsi - 8], rcx
0x0000a7b6      4c39c8         cmp rax, r9
0x0000a7b9      0f82e1feffff   jb 0xa6a0
0x0000a7bf      4c8d8f000800.  lea r9, [rdi + 0x800]
0x0000a7c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a7d0      4989d0         mov r8, rdx
0x0000a7d3      49c1e015       shl r8, 0x15
0x0000a7d7      4c31c2         xor rdx, r8
0x0000a7da      4c8b00         mov r8, qword [rax]
0x0000a7dd      48f7d2         not rdx
0x0000a7e0      48039000fcff.  add rdx, qword [rax - 0x400]
0x0000a7e7      4d89c2         mov r10, r8
0x0000a7ea      4181e2f80700.  and r10d, 0x7f8
0x0000a7f1      4e8b1c17       mov r11, qword [rdi + r10]
0x0000a7f5      4989d2         mov r10, rdx
0x0000a7f8      49c1ea05       shr r10, 5
0x0000a7fc      4901d3         add r11, rdx
0x0000a7ff      4c31d2         xor rdx, r10
0x0000a802      4c01d9         add rcx, r11
0x0000a805      488908         mov qword [rax], rcx
0x0000a808      48c1e908       shr rcx, 8
0x0000a80c      81e1f8070000   and ecx, 0x7f8
0x0000a812      4c8b1c0f       mov r11, qword [rdi + rcx]
0x0000a816      4d01c3         add r11, r8
0x0000a819      4c891e         mov qword [rsi], r11
0x0000a81c      48039008fcff.  add rdx, qword [rax - 0x3f8]
0x0000a823      488b4808       mov rcx, qword [rax + 8]
0x0000a827      4989d2         mov r10, rdx
0x0000a82a      4889ca         mov rdx, rcx
0x0000a82d      81e2f8070000   and edx, 0x7f8
0x0000a833      4c8b0417       mov r8, qword [rdi + rdx]
0x0000a837      4c89d2         mov rdx, r10
0x0000a83a      48c1e20c       shl rdx, 0xc
0x0000a83e      4c31d2         xor rdx, r10
0x0000a841      4d01d0         add r8, r10
0x0000a844      4d01d8         add r8, r11
0x0000a847      4c894008       mov qword [rax + 8], r8
0x0000a84b      49c1e808       shr r8, 8
0x0000a84f      4181e0f80700.  and r8d, 0x7f8
0x0000a856      4a030c07       add rcx, qword [rdi + r8]
0x0000a85a      48894e08       mov qword [rsi + 8], rcx
0x0000a85e      4c8b4010       mov r8, qword [rax + 0x10]
0x0000a862      4989cb         mov r11, rcx
0x0000a865      48039010fcff.  add rdx, qword [rax - 0x3f0]
0x0000a86c      4c89c1         mov rcx, r8
0x0000a86f      81e1f8070000   and ecx, 0x7f8
0x0000a875      4c8b140f       mov r10, qword [rdi + rcx]
0x0000a879      4901d2         add r10, rdx
0x0000a87c      4c89d1         mov rcx, r10
0x0000a87f      4c01d9         add rcx, r11
0x0000a882      48894810       mov qword [rax + 0x10], rcx
0x0000a886      48c1e908       shr rcx, 8
0x0000a88a      81e1f8070000   and ecx, 0x7f8
0x0000a890      4c8b140f       mov r10, qword [rdi + rcx]
0x0000a894      4889d1         mov rcx, rdx
0x0000a897      48c1e921       shr rcx, 0x21
0x0000a89b      4831ca         xor rdx, rcx
0x0000a89e      4d01c2         add r10, r8
0x0000a8a1      4c895610       mov qword [rsi + 0x10], r10
0x0000a8a5      488b4818       mov rcx, qword [rax + 0x18]
0x0000a8a9      48039018fcff.  add rdx, qword [rax - 0x3e8]
0x0000a8b0      4989c8         mov r8, rcx
0x0000a8b3      4181e0f80700.  and r8d, 0x7f8
0x0000a8ba      4e8b1c07       mov r11, qword [rdi + r8]
0x0000a8be      4901d3         add r11, rdx
0x0000a8c1      4d89d8         mov r8, r11
0x0000a8c4      4d01d0         add r8, r10
0x0000a8c7      4883c020       add rax, 0x20                           ; "@"
0x0000a8cb      4883c620       add rsi, 0x20                           ; "@"
0x0000a8cf      4c8940f8       mov qword [rax - 8], r8
0x0000a8d3      49c1e808       shr r8, 8
0x0000a8d7      4181e0f80700.  and r8d, 0x7f8
0x0000a8de      4a030c07       add rcx, qword [rdi + r8]
0x0000a8e2      48894ef8       mov qword [rsi - 8], rcx
0x0000a8e6      4c39c8         cmp rax, r9
0x0000a8e9      0f82e1feffff   jb 0xa7d0
0x0000a8ef      488997000800.  mov qword [rdi + 0x800], rdx
0x0000a8f6      48898f080800.  mov qword [rdi + 0x808], rcx
0x0000a8fd      c3             ret
0x0000a8fe      6690           nop
;-- isaac_seed:
0x0000a900      4155           push r13
0x0000a902      4154           push r12
0x0000a904      4c8da7000800.  lea r12, [rdi + 0x800]
0x0000a90b      55             push rbp
0x0000a90c      4889fa         mov rdx, rdi
0x0000a90f      53             push rbx
0x0000a910      4889f8         mov rax, rdi
0x0000a913      48b9abc0446c.  movabs rcx, 0x98f5704f6c44c0ab
0x0000a91d      49baed89fccb.  movabs r10, 0xae985bf2cbfc89ed
0x0000a927      48bd1593a0a5.  movabs rbp, 0x48fe4a0fa5a09315
0x0000a931      48becee05583.  movabs rsi, 0x82f053db8355e0ce
0x0000a93b      49b82455594a.  movabs r8, 0xb29b2e824a595524
0x0000a945      48bba012473d.  movabs rbx, 0x8c0ea5053d4712a0
0x0000a94f      49bb62c83ac7.  movabs r11, 0xb9f8b322c73ac862
0x0000a959      49b97c4b88a2.  movabs r9, 0x647c4677a2884b7c
0x0000a963      0f1f440000     nop dword [rax + rax]
0x0000a968      48037020       add rsi, qword [rax + 0x20]
0x0000a96c      48034838       add rcx, qword [rax + 0x38]
0x0000a970      4c8b28         mov r13, qword [rax]
0x0000a973      48036828       add rbp, qword [rax + 0x28]
0x0000a977      4c035030       add r10, qword [rax + 0x30]
0x0000a97b      4929f5         sub r13, rsi
0x0000a97e      4d01e9         add r9, r13
0x0000a981      4989cd         mov r13, rcx
0x0000a984      49c1ed09       shr r13, 9
0x0000a988      4c01c9         add rcx, r9
0x0000a98b      4c31ed         xor rbp, r13
0x0000a98e      4c8b6808       mov r13, qword [rax + 8]
0x0000a992      4929ed         sub r13, rbp
0x0000a995      4d01eb         add r11, r13
0x0000a998      4d89cd         mov r13, r9
0x0000a99b      49c1e509       shl r13, 9
0x0000a99f      4d01d9         add r9, r11
0x0000a9a2      4d31ea         xor r10, r13
0x0000a9a5      4c8b6810       mov r13, qword [rax + 0x10]
0x0000a9a9      4d29d5         sub r13, r10
0x0000a9ac      4c01eb         add rbx, r13
0x0000a9af      4d89dd         mov r13, r11
0x0000a9b2      49c1ed17       shr r13, 0x17
0x0000a9b6      4901db         add r11, rbx
0x0000a9b9      4c31e9         xor rcx, r13
0x0000a9bc      4c8b6818       mov r13, qword [rax + 0x18]
0x0000a9c0      4929cd         sub r13, rcx
0x0000a9c3      4d01e8         add r8, r13
0x0000a9c6      4989dd         mov r13, rbx
0x0000a9c9      49c1e50f       shl r13, 0xf
0x0000a9cd      4c01c3         add rbx, r8
0x0000a9d0      4d31e9         xor r9, r13
0x0000a9d3      4d89c5         mov r13, r8
0x0000a9d6      4c29ce         sub rsi, r9
0x0000a9d9      49c1ed0e       shr r13, 0xe
0x0000a9dd      4c8908         mov qword [rax], r9
0x0000a9e0      4d31eb         xor r11, r13
0x0000a9e3      4989f5         mov r13, rsi
0x0000a9e6      4901f0         add r8, rsi
0x0000a9e9      4c29dd         sub rbp, r11
0x0000a9ec      49c1e514       shl r13, 0x14
0x0000a9f0      4c895808       mov qword [rax + 8], r11
0x0000a9f4      4c31eb         xor rbx, r13
0x0000a9f7      4c8d2c2e       lea r13, [rsi + rbp]
0x0000a9fb      4889ee         mov rsi, rbp
0x0000a9fe      4929da         sub r10, rbx
0x0000aa01      48c1ee11       shr rsi, 0x11
0x0000aa05      48895810       mov qword [rax + 0x10], rbx
0x0000aa09      4931f0         xor r8, rsi
0x0000aa0c      4c89d6         mov rsi, r10
0x0000aa0f      4c01d5         add rbp, r10
0x0000aa12      4c29c1         sub rcx, r8
0x0000aa15      48c1e60e       shl rsi, 0xe
0x0000aa19      4c894018       mov qword [rax + 0x18], r8
0x0000aa1d      4c31ee         xor rsi, r13
0x0000aa20      4901ca         add r10, rcx
0x0000aa23      48896828       mov qword [rax + 0x28], rbp
0x0000aa27      48897020       mov qword [rax + 0x20], rsi
0x0000aa2b      4c895030       mov qword [rax + 0x30], r10
0x0000aa2f      4883c040       add rax, 0x40                           ; segment.PHDR
0x0000aa33      488948f8       mov qword [rax - 8], rcx
0x0000aa37      4939c4         cmp r12, rax
0x0000aa3a      0f8528ffffff   jne 0xa968
0x0000aa40      48037220       add rsi, qword [rdx + 0x20]
0x0000aa44      48034a38       add rcx, qword [rdx + 0x38]
0x0000aa48      4c8b22         mov r12, qword [rdx]
0x0000aa4b      48036a28       add rbp, qword [rdx + 0x28]
0x0000aa4f      4c035230       add r10, qword [rdx + 0x30]
0x0000aa53      4929f4         sub r12, rsi
0x0000aa56      4d01e1         add r9, r12
0x0000aa59      4989cc         mov r12, rcx
0x0000aa5c      49c1ec09       shr r12, 9
0x0000aa60      4c01c9         add rcx, r9
0x0000aa63      4c31e5         xor rbp, r12
0x0000aa66      4c8b6208       mov r12, qword [rdx + 8]
0x0000aa6a      4929ec         sub r12, rbp
0x0000aa6d      4d01e3         add r11, r12
0x0000aa70      4d89cc         mov r12, r9
0x0000aa73      49c1e409       shl r12, 9
0x0000aa77      4d01d9         add r9, r11
0x0000aa7a      4d31e2         xor r10, r12
0x0000aa7d      4c8b6210       mov r12, qword [rdx + 0x10]
0x0000aa81      4d29d4         sub r12, r10
0x0000aa84      4c01e3         add rbx, r12
0x0000aa87      4d89dc         mov r12, r11
0x0000aa8a      49c1ec17       shr r12, 0x17
0x0000aa8e      4901db         add r11, rbx
0x0000aa91      4c31e1         xor rcx, r12
0x0000aa94      4c8b6218       mov r12, qword [rdx + 0x18]
0x0000aa98      4929cc         sub r12, rcx
0x0000aa9b      4d01e0         add r8, r12
0x0000aa9e      4989dc         mov r12, rbx
0x0000aaa1      49c1e40f       shl r12, 0xf
0x0000aaa5      4c01c3         add rbx, r8
0x0000aaa8      4d31e1         xor r9, r12
0x0000aaab      4d89c4         mov r12, r8
0x0000aaae      4c29ce         sub rsi, r9
0x0000aab1      49c1ec0e       shr r12, 0xe
0x0000aab5      4c890a         mov qword [rdx], r9
0x0000aab8      4d31e3         xor r11, r12
0x0000aabb      4989f4         mov r12, rsi
0x0000aabe      4901f0         add r8, rsi
0x0000aac1      4c29dd         sub rbp, r11
0x0000aac4      49c1e414       shl r12, 0x14
0x0000aac8      4c895a08       mov qword [rdx + 8], r11
0x0000aacc      4c31e3         xor rbx, r12
0x0000aacf      4c8d242e       lea r12, [rsi + rbp]
0x0000aad3      4889ee         mov rsi, rbp
0x0000aad6      4929da         sub r10, rbx
0x0000aad9      48c1ee11       shr rsi, 0x11
0x0000aadd      48895a10       mov qword [rdx + 0x10], rbx
0x0000aae1      4931f0         xor r8, rsi
0x0000aae4      4c89d6         mov rsi, r10
0x0000aae7      4c01d5         add rbp, r10
0x0000aaea      4c29c1         sub rcx, r8
0x0000aaed      48c1e60e       shl rsi, 0xe
0x0000aaf1      4c894218       mov qword [rdx + 0x18], r8
0x0000aaf5      4c31e6         xor rsi, r12
0x0000aaf8      4901ca         add r10, rcx
0x0000aafb      48896a28       mov qword [rdx + 0x28], rbp
0x0000aaff      48897220       mov qword [rdx + 0x20], rsi
0x0000ab03      4c895230       mov qword [rdx + 0x30], r10
0x0000ab07      4883c240       add rdx, 0x40                           ; segment.PHDR
0x0000ab0b      48894af8       mov qword [rdx - 8], rcx
0x0000ab0f      4839d0         cmp rax, rdx
0x0000ab12      0f8528ffffff   jne 0xaa40
0x0000ab18      5b             pop rbx
0x0000ab19      48c787100800.  mov qword [rdi + 0x810], 0
0x0000ab24      48c787080800.  mov qword [rdi + 0x808], 0
0x0000ab2f      5d             pop rbp
0x0000ab30      48c787000800.  mov qword [rdi + 0x800], 0
0x0000ab3b      415c           pop r12
0x0000ab3d      415d           pop r13
0x0000ab3f      c3             ret
;-- dup_safer:
0x0000ab40      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x0000ab45      31f6           xor esi, esi
0x0000ab47      31c0           xor eax, eax
0x0000ab49      e982000000     jmp sym.rpl_fcntl
0x0000ab4e      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fclose:
0x0000ab50      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000ab52      55             push rbp
0x0000ab53      53             push rbx
0x0000ab54      4889fb         mov rbx, rdi
0x0000ab57      e85475ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000ab5c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000ab5e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000ab61      7854           js 0xabb7                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000ab63      e8b875ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000ab68      85c0           test eax, eax
0x0000ab6a      752c           jne 0xab98
0x0000ab6c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000ab6f      e8fcebffff     call sym.rpl_fflush
0x0000ab74      85c0           test eax, eax
0x0000ab76      743c           je 0xabb4
0x0000ab78      e85372ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000ab7d      448b20         mov r12d, dword [rax]
0x0000ab80      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000ab83      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000ab86      e82573ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000ab8b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000ab8e      7530           jne 0xabc0
0x0000ab90      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000ab91      5d             pop rbp
0x0000ab92      415c           pop r12
0x0000ab94      c3             ret
0x0000ab95      0f1f00         nop dword [rax]
0x0000ab98      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000ab9b      e81075ffff     call sym.imp.fileno
0x0000aba0      31f6           xor esi, esi
0x0000aba2      ba01000000     mov edx, 1
0x0000aba7      89c7           mov edi, eax
0x0000aba9      e8e273ffff     call sym.imp.lseek
0x0000abae      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000abb2      75b8           jne 0xab6c
0x0000abb4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000abb7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000abb8      5d             pop rbp
0x0000abb9      415c           pop r12
0x0000abbb      e9f072ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000abc0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000abc4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000abc9      ebc5           jmp 0xab90
0x0000abcb      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x0000abd0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x0000abd2      55             push rbp
0x0000abd3      89fd           mov ebp, edi
0x0000abd5      53             push rbx
0x0000abd6      4883ec50       sub rsp, 0x50
0x0000abda      64488b042528.  mov rax, qword fs:[0x28]
0x0000abe3      4889442418     mov qword [rsp + 0x18], rax
0x0000abe8      31c0           xor eax, eax
0x0000abea      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000abef      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x0000abf1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x0000abf6      48894c2438     mov qword [rsp + 0x38], rcx
0x0000abfb      4c89442440     mov qword [rsp + 0x40], r8
0x0000ac00      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x0000ac05      488d442420     lea rax, [rsp + 0x20]
0x0000ac0a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000ac0f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x0000ac16      4889442410     mov qword [rsp + 0x10], rax
0x0000ac1b      0f8401020000   je 0xae22                               ; ../coreutils-8.31/lib/fcntl.c:210
0x0000ac21      81fe06040000   cmp esi, 0x406
0x0000ac27      7547           jne 0xac70
0x0000ac29      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000ac2e      833d63562000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x210298:4]=0
0x0000ac35      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2ab0 rip
0x0000ac3c      448b6010       mov r12d, dword [rax + 0x10]
0x0000ac40      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x0000ac43      0f882a010000   js 0xad73                               ; ../coreutils-8.31/lib/fcntl.c:507
0x0000ac49      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000ac4b      be06040000     mov esi, 0x406
0x0000ac50      e80b72ffff     call sym.imp.fcntl
0x0000ac55      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x0000ac57      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000ac59      0f8889010000   js 0xade8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000ac5f      c7052f562000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x210298:4]=0
0x0000ac69      eb45           jmp 0xacb0
0x0000ac6b      0f1f440000     nop dword [rax + rax]
0x0000ac70      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x0000ac73      742b           je 0xaca0
0x0000ac75      7f59           jg 0xacd0
0x0000ac77      83fe04         cmp esi, 4
0x0000ac7a      0f84d0000000   je 0xad50
0x0000ac80      0f8fba000000   jg 0xad40
0x0000ac86      83fe02         cmp esi, 2
0x0000ac89      0f84c1000000   je 0xad50
0x0000ac8f      7f0f           jg 0xaca0
0x0000ac91      83fe01         cmp esi, 1
0x0000ac94      7562           jne 0xacf8
0x0000ac96      662e0f1f8400.  nop word cs:[rax + rax]
0x0000aca0      89ef           mov edi, ebp
0x0000aca2      31c0           xor eax, eax
0x0000aca4      e8b771ffff     call sym.imp.fcntl
0x0000aca9      89c3           mov ebx, eax
0x0000acab      0f1f440000     nop dword [rax + rax]
0x0000acb0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000acb5      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000acbe      89d8           mov eax, ebx
0x0000acc0      0f8557010000   jne 0xae1d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x0000acc6      4883c450       add rsp, 0x50
0x0000acca      5b             pop rbx
0x0000accb      5d             pop rbp
0x0000accc      415c           pop r12
0x0000acce      c3             ret
0x0000accf      90             nop
0x0000acd0      81fe07040000   cmp esi, 0x407
0x0000acd6      7f48           jg 0xad20
0x0000acd8      81fe06040000   cmp esi, 0x406
0x0000acde      7d70           jge 0xad50
0x0000ace0      81fe01040000   cmp esi, 0x401
0x0000ace6      74b8           je 0xaca0
0x0000ace8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000acee      7460           je 0xad50
0x0000acf0      81fe00040000   cmp esi, 0x400
0x0000acf6      7458           je 0xad50
0x0000acf8      8b0424         mov eax, dword [rsp]
0x0000acfb      83f82f         cmp eax, 0x2f
0x0000acfe      0f8736010000   ja 0xae3a
0x0000ad04      4803442410     add rax, qword [rsp + 0x10]
0x0000ad09      488b10         mov rdx, qword [rax]
0x0000ad0c      89ef           mov edi, ebp
0x0000ad0e      31c0           xor eax, eax
0x0000ad10      e84b71ffff     call sym.imp.fcntl
0x0000ad15      89c3           mov ebx, eax
0x0000ad17      eb97           jmp 0xacb0
0x0000ad19      0f1f80000000.  nop dword [rax]
0x0000ad20      81fe09040000   cmp esi, 0x409
0x0000ad26      7428           je 0xad50
0x0000ad28      0f8c72ffffff   jl 0xaca0
0x0000ad2e      81fe0a040000   cmp esi, 0x40a
0x0000ad34      75c2           jne 0xacf8
0x0000ad36      e965ffffff     jmp 0xaca0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000ad3b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x0000ad40      83fe09         cmp esi, 9
0x0000ad43      0f8457ffffff   je 0xaca0
0x0000ad49      7f05           jg 0xad50
0x0000ad4b      83fe08         cmp esi, 8
0x0000ad4e      75a8           jne 0xacf8
0x0000ad50      8b0424         mov eax, dword [rsp]
0x0000ad53      83f82f         cmp eax, 0x2f
0x0000ad56      0f87e8000000   ja 0xae44
0x0000ad5c      4803442410     add rax, qword [rsp + 0x10]
0x0000ad61      8b10           mov edx, dword [rax]
0x0000ad63      89ef           mov edi, ebp
0x0000ad65      31c0           xor eax, eax
0x0000ad67      e8f470ffff     call sym.imp.fcntl
0x0000ad6c      89c3           mov ebx, eax
0x0000ad6e      e93dffffff     jmp 0xacb0
0x0000ad73      31f6           xor esi, esi
0x0000ad75      31c0           xor eax, eax
0x0000ad77      e8e470ffff     call sym.imp.fcntl
0x0000ad7c      85c0           test eax, eax
0x0000ad7e      89c3           mov ebx, eax
0x0000ad80      0f882affffff   js 0xacb0
0x0000ad86      833d0b552000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x210298:4]=0
0x0000ad8d      0f851dffffff   jne 0xacb0
0x0000ad93      31c0           xor eax, eax
0x0000ad95      be01000000     mov esi, 1
0x0000ad9a      89df           mov edi, ebx
0x0000ad9c      e8bf70ffff     call sym.imp.fcntl
0x0000ada1      85c0           test eax, eax
0x0000ada3      781c           js 0xadc1
0x0000ada5      83c801         or eax, 1
0x0000ada8      be02000000     mov esi, 2
0x0000adad      89df           mov edi, ebx
0x0000adaf      89c2           mov edx, eax
0x0000adb1      31c0           xor eax, eax
0x0000adb3      e8a870ffff     call sym.imp.fcntl
0x0000adb8      83f8ff         cmp eax, 0xffffffff
0x0000adbb      0f85effeffff   jne 0xacb0
0x0000adc1      e80a70ffff     call sym.imp.__errno_location
0x0000adc6      448b20         mov r12d, dword [rax]
0x0000adc9      4889c5         mov rbp, rax
0x0000adcc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000adce      e80d72ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x0000add3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000add8      44896500       mov dword [rbp], r12d
0x0000addc      e9cffeffff     jmp 0xacb0
0x0000ade1      0f1f80000000.  nop dword [rax]
0x0000ade8      e8e36fffff     call sym.imp.__errno_location
0x0000aded      833816         cmp dword [rax], 0x16
0x0000adf0      0f8569feffff   jne 0xac5f
0x0000adf6      31f6           xor esi, esi
0x0000adf8      31c0           xor eax, eax
0x0000adfa      4489e2         mov edx, r12d
0x0000adfd      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000adff      e85c70ffff     call sym.imp.fcntl
0x0000ae04      85c0           test eax, eax
0x0000ae06      89c3           mov ebx, eax
0x0000ae08      0f88a2feffff   js 0xacb0
0x0000ae0e      c70580542000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x210298:4]=0
0x0000ae18      e976ffffff     jmp 0xad93
0x0000ae1d      e8fe70ffff     call sym.imp.__stack_chk_fail
0x0000ae22      488b442410     mov rax, qword [rsp + 0x10]
0x0000ae27      31f6           xor esi, esi
0x0000ae29      8b5010         mov edx, dword [rax + 0x10]
0x0000ae2c      31c0           xor eax, eax
0x0000ae2e      e82d70ffff     call sym.imp.fcntl
0x0000ae33      89c3           mov ebx, eax
0x0000ae35      e976feffff     jmp 0xacb0
0x0000ae3a      488b442408     mov rax, qword [rsp + 8]
0x0000ae3f      e9c5feffff     jmp 0xad09
0x0000ae44      488b442408     mov rax, qword [rsp + 8]
0x0000ae49      e913ffffff     jmp 0xad61
0x0000ae4e      6690           nop
;-- fopen_safer:
0x0000ae50      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x0000ae52      55             push rbp                                ; /b/sys:258
0x0000ae53      4889f5         mov rbp, rsi                            ; /b/sys:377
0x0000ae56      53             push rbx                                ; /b/sys:718
0x0000ae57      e89473ffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x0000ae5c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x0000ae5f      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x0000ae62      740d           je 0xae71                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x0000ae64      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x0000ae67      e84472ffff     call sym.imp.fileno
0x0000ae6c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x0000ae6f      760f           jbe 0xae80
0x0000ae71      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x0000ae74      5b             pop rbx                                 ; /stdio.h:9
0x0000ae75      5d             pop rbp
0x0000ae76      415c           pop r12
0x0000ae78      c3             ret
0x0000ae79      0f1f80000000.  nop dword [rax]
0x0000ae80      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x0000ae82      e8b9fcffff     call sym.dup_safer
0x0000ae87      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x0000ae89      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x0000ae8c      783a           js 0xaec8                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x0000ae8e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x0000ae91      e8bafcffff     call sym.rpl_fclose
0x0000ae96      85c0           test eax, eax
0x0000ae98      7513           jne 0xaead                              ; /stdio.h:13
0x0000ae9a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x0000ae9d      4489e7         mov edi, r12d
0x0000aea0      e89b72ffff     call sym.imp.fdopen
0x0000aea5      4885c0         test rax, rax
0x0000aea8      4889c3         mov rbx, rax
0x0000aeab      75c4           jne 0xae71
0x0000aead      e81e6fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x0000aeb2      8b28           mov ebp, dword [rax]
0x0000aeb4      4889c3         mov rbx, rax
0x0000aeb7      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x0000aeba      e82171ffff     call sym.imp.close
0x0000aebf      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x0000aec1      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x0000aec3      ebac           jmp 0xae71
0x0000aec5      0f1f00         nop dword [rax]
0x0000aec8      e8036fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x0000aecd      448b20         mov r12d, dword [rax]
0x0000aed0      4889c5         mov rbp, rax
0x0000aed3      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x0000aed6      e875fcffff     call sym.rpl_fclose
0x0000aedb      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x0000aedd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x0000aee1      eb8e           jmp 0xae71                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x0000aee3      662e0f1f8400.  nop word cs:[rax + rax]
0x0000aeed      0f1f00         nop dword [rax]
;-- __libc_csu_init:
0x0000aef0      4157           push r15                                ; /stdio.h:18
0x0000aef2      4156           push r14
0x0000aef4      4989d7         mov r15, rdx
0x0000aef7      4155           push r13
0x0000aef9      4154           push r12
0x0000aefb      4c8d256e4920.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20f870
0x0000af02      55             push rbp
0x0000af03      488d2d6e4920.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20f878 ; "p+"
0x0000af0a      53             push rbx                                ; /stdio.h:23
0x0000af0b      4189fd         mov r13d, edi
0x0000af0e      4989f6         mov r14, rsi
0x0000af11      4c29e5         sub rbp, r12
0x0000af14      4883ec08       sub rsp, 8
0x0000af18      48c1fd03       sar rbp, 3                              ; /r.c:3182
0x0000af1c      e84f6effff     call sym._init
0x0000af21      4885ed         test rbp, rbp
0x0000af24      7420           je 0xaf46                               ; /b/sys:829
0x0000af26      31db           xor ebx, ebx
0x0000af28      0f1f84000000.  nop dword [rax + rax]
0x0000af30      4c89fa         mov rdx, r15
0x0000af33      4c89f6         mov rsi, r14
0x0000af36      4489ef         mov edi, r13d
0x0000af39      41ff14dc       call qword [r12 + rbx*8]
0x0000af3d      4883c301       add rbx, 1
0x0000af41      4839dd         cmp rbp, rbx
0x0000af44      75ea           jne 0xaf30
0x0000af46      4883c408       add rsp, 8
0x0000af4a      5b             pop rbx
0x0000af4b      5d             pop rbp
0x0000af4c      415c           pop r12
0x0000af4e      415d           pop r13
0x0000af50      415e           pop r14
0x0000af52      415f           pop r15
0x0000af54      c3             ret
0x0000af55      90             nop
0x0000af56      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000af60      f3c3           ret                                     ; /stdio.h:25
0x0000af62      662e0f1f8400.  nop word cs:[rax + rax]
0x0000af6c      0f1f4000       nop dword [rax]
;-- atexit:
0x0000af70      488b15915020.  mov rdx, qword [obj.__dso_handle]       ; [0x210008:8]=0x210008 obj.__dso_handle
0x0000af77      31f6           xor esi, esi
0x0000af79      e99272ffff     jmp sym.imp.__cxa_atexit
0x0000af7e      0000           add byte [rax], al
