;-- section..plt:
;-- .plt:
0x000011d0      ff359a5c2000   push qword [0x00206e70]                 ; [12] -r-x section size 656 named .plt
0x000011d6      ff259c5c2000   jmp qword [0x00206e78]                  ; [0x206e78:8]=0
0x000011dc      0f1f4000       nop dword [rax]
;-- imp.free:
0x000011e0      ff259a5c2000   jmp qword [reloc.free]                  ; [0x206e80:8]=0x11e6
0x000011e6      6800000000     push 0
0x000011eb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000011f0      ff25925c2000   jmp qword [reloc.abort]                 ; [0x206e88:8]=0x11f6
0x000011f6      6801000000     push 1
0x000011fb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001200      ff258a5c2000   jmp qword [reloc.__errno_location]      ; [0x206e90:8]=0x1206
0x00001206      6802000000     push 2
0x0000120b      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001210      ff25825c2000   jmp qword [reloc.strncmp]               ; [0x206e98:8]=0x1216
0x00001216      6803000000     push 3
0x0000121b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001220      ff257a5c2000   jmp qword [reloc._exit]                 ; [0x206ea0:8]=0x1226 ; "&\x12"
0x00001226      6804000000     push 4
0x0000122b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001230      ff25725c2000   jmp qword [reloc.__fpending]            ; [0x206ea8:8]=0x1236 ; "6\x12"
0x00001236      6805000000     push 5
0x0000123b      e990ffffff     jmp sym..plt
;-- imp.write:
0x00001240      ff256a5c2000   jmp qword [reloc.write]                 ; [0x206eb0:8]=0x1246 ; "F\x12"
0x00001246      6806000000     push 6
0x0000124b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001250      ff25625c2000   jmp qword [reloc.textdomain]            ; [0x206eb8:8]=0x1256 ; "V\x12"
0x00001256      6807000000     push 7
0x0000125b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001260      ff255a5c2000   jmp qword [reloc.fclose]                ; [0x206ec0:8]=0x1266 ; "f\x12"
0x00001266      6808000000     push 8
0x0000126b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001270      ff25525c2000   jmp qword [reloc.bindtextdomain]        ; [0x206ec8:8]=0x1276 ; "v\x12"
0x00001276      6809000000     push 9
0x0000127b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001280      ff254a5c2000   jmp qword [reloc.dcgettext]             ; [0x206ed0:8]=0x1286
0x00001286      680a000000     push 0xa
0x0000128b      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001290      ff25425c2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x206ed8:8]=0x1296
0x00001296      680b000000     push 0xb
0x0000129b      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x000012a0      ff253a5c2000   jmp qword [reloc.strlen]                ; [0x206ee0:8]=0x12a6
0x000012a6      680c000000     push 0xc
0x000012ab      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000012b0      ff25325c2000   jmp qword [reloc.__stack_chk_fail]      ; [0x206ee8:8]=0x12b6
0x000012b6      680d000000     push 0xd
0x000012bb      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000012c0      ff252a5c2000   jmp qword [reloc.getopt_long]           ; [0x206ef0:8]=0x12c6
0x000012c6      680e000000     push 0xe
0x000012cb      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x000012d0      ff25225c2000   jmp qword [reloc.mbrtowc]               ; [0x206ef8:8]=0x12d6
0x000012d6      680f000000     push 0xf
0x000012db      e9f0feffff     jmp sym..plt
;-- imp.strrchr:
0x000012e0      ff251a5c2000   jmp qword [reloc.strrchr]               ; [0x206f00:8]=0x12e6
0x000012e6      6810000000     push 0x10
0x000012eb      e9e0feffff     jmp sym..plt
;-- imp.lseek:
0x000012f0      ff25125c2000   jmp qword [reloc.lseek]                 ; [0x206f08:8]=0x12f6
0x000012f6      6811000000     push 0x11
0x000012fb      e9d0feffff     jmp sym..plt
;-- imp.memset:
0x00001300      ff250a5c2000   jmp qword [reloc.memset]                ; [0x206f10:8]=0x1306
0x00001306      6812000000     push 0x12
0x0000130b      e9c0feffff     jmp sym..plt
;-- imp.memcmp:
0x00001310      ff25025c2000   jmp qword [reloc.memcmp]                ; [0x206f18:8]=0x1316
0x00001316      6813000000     push 0x13
0x0000131b      e9b0feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001320      ff25fa5b2000   jmp qword [reloc.fputs_unlocked]        ; [0x206f20:8]=0x1326 ; "&\x13"
0x00001326      6814000000     push 0x14
0x0000132b      e9a0feffff     jmp sym..plt
;-- imp.calloc:
0x00001330      ff25f25b2000   jmp qword [reloc.calloc]                ; [0x206f28:8]=0x1336 ; "6\x13"
0x00001336      6815000000     push 0x15
0x0000133b      e990feffff     jmp sym..plt
;-- imp.memcpy:
0x00001340      ff25ea5b2000   jmp qword [reloc.memcpy]                ; [0x206f30:8]=0x1346 ; "F\x13"
0x00001346      6816000000     push 0x16
0x0000134b      e980feffff     jmp sym..plt
;-- imp.fileno:
0x00001350      ff25e25b2000   jmp qword [reloc.fileno]                ; [0x206f38:8]=0x1356 ; "V\x13"
0x00001356      6817000000     push 0x17
0x0000135b      e970feffff     jmp sym..plt
;-- imp.malloc:
0x00001360      ff25da5b2000   jmp qword [reloc.malloc]                ; [0x206f40:8]=0x1366 ; "f\x13"
0x00001366      6818000000     push 0x18
0x0000136b      e960feffff     jmp sym..plt
;-- imp.fflush:
0x00001370      ff25d25b2000   jmp qword [reloc.fflush]                ; [0x206f48:8]=0x1376 ; "v\x13"
0x00001376      6819000000     push 0x19
0x0000137b      e950feffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001380      ff25ca5b2000   jmp qword [reloc.nl_langinfo]           ; [0x206f50:8]=0x1386
0x00001386      681a000000     push 0x1a
0x0000138b      e940feffff     jmp sym..plt
;-- imp.__freading:
0x00001390      ff25c25b2000   jmp qword [reloc.__freading]            ; [0x206f58:8]=0x1396
0x00001396      681b000000     push 0x1b
0x0000139b      e930feffff     jmp sym..plt
;-- imp.realloc:
0x000013a0      ff25ba5b2000   jmp qword [reloc.realloc]               ; [0x206f60:8]=0x13a6
0x000013a6      681c000000     push 0x1c
0x000013ab      e920feffff     jmp sym..plt
;-- imp.setlocale:
0x000013b0      ff25b25b2000   jmp qword [reloc.setlocale]             ; [0x206f68:8]=0x13b6
0x000013b6      681d000000     push 0x1d
0x000013bb      e910feffff     jmp sym..plt
;-- imp.__printf_chk:
0x000013c0      ff25aa5b2000   jmp qword [reloc.__printf_chk]          ; [0x206f70:8]=0x13c6
0x000013c6      681e000000     push 0x1e
0x000013cb      e900feffff     jmp sym..plt
;-- imp.error:
0x000013d0      ff25a25b2000   jmp qword [reloc.error]                 ; [0x206f78:8]=0x13d6
0x000013d6      681f000000     push 0x1f
0x000013db      e9f0fdffff     jmp sym..plt
;-- imp.fseeko:
0x000013e0      ff259a5b2000   jmp qword [reloc.fseeko]                ; [0x206f80:8]=0x13e6
0x000013e6      6820000000     push 0x20                               ; "@"
0x000013eb      e9e0fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x000013f0      ff25925b2000   jmp qword [reloc.__cxa_atexit]          ; [0x206f88:8]=0x13f6
0x000013f6      6821000000     push 0x21                               ; '!'
0x000013fb      e9d0fdffff     jmp sym..plt
;-- imp.exit:
0x00001400      ff258a5b2000   jmp qword [reloc.exit]                  ; [0x206f90:8]=0x1406
0x00001406      6822000000     push 0x22                               ; '"'
0x0000140b      e9c0fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001410      ff25825b2000   jmp qword [reloc.fwrite]                ; [0x206f98:8]=0x1416
0x00001416      6823000000     push 0x23                               ; '#'
0x0000141b      e9b0fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001420      ff257a5b2000   jmp qword [reloc.__fprintf_chk]         ; [0x206fa0:8]=0x1426 ; "&\x14"
0x00001426      6824000000     push 0x24                               ; '$'
0x0000142b      e9a0fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001430      ff25725b2000   jmp qword [reloc.mbsinit]               ; [0x206fa8:8]=0x1436 ; "6\x14"
0x00001436      6825000000     push 0x25                               ; '%'
0x0000143b      e990fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001440      ff256a5b2000   jmp qword [reloc.iswprint]              ; [0x206fb0:8]=0x1446 ; "F\x14"
0x00001446      6826000000     push 0x26                               ; '&'
0x0000144b      e980fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001450      ff25625b2000   jmp qword [reloc.__ctype_b_loc]         ; [0x206fb8:8]=0x1456 ; "V\x14"
0x00001456      6827000000     push 0x27                               ; '''
0x0000145b      e970fdffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001460      .qword 0x906600205b7a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001468      0000           add byte [rax], al
0x0000146a      0000           add byte [rax], al
0x0000146c      0000           add byte [rax], al
0x0000146e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001470      4157           push r15                                ; [14] -r-x section size 13326 named .text
0x00001472      4156           push r14
0x00001474      4155           push r13
0x00001476      4154           push r12
0x00001478      4189fc         mov r12d, edi
0x0000147b      55             push rbp
0x0000147c      53             push rbx
0x0000147d      4889f3         mov rbx, rsi
0x00001480      4883ec18       sub rsp, 0x18
0x00001484      488b3e         mov rdi, qword [rsi]
0x00001487      e8540a0000     call sym.set_program_name
0x0000148c      488d352e3c00.  lea rsi, [0x000050c1]
0x00001493      bf06000000     mov edi, 6
0x00001498      e813ffffff     call sym.imp.setlocale
0x0000149d      488d35a73400.  lea rsi, str.usr_local_share_locale     ; 0x494b ; "/usr/local/share/locale"
0x000014a4      488d3d773400.  lea rdi, [0x00004922]                   ; "coreutils"
0x000014ab      e8c0fdffff     call sym.imp.bindtextdomain
0x000014b0      488d3d6b3400.  lea rdi, [0x00004922]                   ; "coreutils"
0x000014b7      e894fdffff     call sym.imp.textdomain
0x000014bc      488d3d6d0600.  lea rdi, sym.close_stdout               ; 0x1b30 ; "USH\x83\xec\bH\x8b=KU "
0x000014c3      e8a8330000     call sym.atexit
0x000014c8      488d05943400.  lea rax, str.David_MacKenzie            ; 0x4963 ; "David MacKenzie"
0x000014cf      4883ec08       sub rsp, 8
0x000014d3      4c8b05365b20.  mov r8, qword [obj.Version]             ; [0x207010:8]=0x4b2b str.8.31 ; "+K"
0x000014da      6a00           push 0
0x000014dc      488d15c13300.  lea rdx, [0x000048a4]                   ; "yes"
0x000014e3      488d0d343400.  lea rcx, str.GNU_coreutils              ; 0x491e ; "GNU coreutils"
0x000014ea      50             push rax
0x000014eb      488d05ce0200.  lea rax, sym.usage                      ; 0x17c0 ; "AUAT\xba\x05"
0x000014f2      41b901000000   mov r9d, 1
0x000014f8      4889de         mov rsi, rbx
0x000014fb      4489e7         mov edi, r12d
0x000014fe      50             push rax
0x000014ff      31c0           xor eax, eax
0x00001501      e89a080000     call sym.parse_gnu_standard_options_only
0x00001506      486315835b20.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x0000150d      4889d0         mov rax, rdx
0x00001510      488d2cd3       lea rbp, [rbx + rdx*8]
0x00001514      4963d4         movsxd rdx, r12d
0x00001517      488d14d3       lea rdx, [rbx + rdx*8]
0x0000151b      4889542420     mov qword [rsp + 0x20], rdx
0x00001520      4883c420       add rsp, 0x20
0x00001524      4439e0         cmp eax, r12d
0x00001527      7516           jne 0x153f
0x00001529      4889d0         mov rax, rdx
0x0000152c      488d15403400.  lea rdx, [0x00004973]                   ; "y"
0x00001533      4883c008       add rax, 8
0x00001537      488950f8       mov qword [rax - 8], rdx
0x0000153b      48890424       mov qword [rsp], rax
0x0000153f      48392c24       cmp qword [rsp], rbp
0x00001543      0f8657010000   jbe 0x16a0
0x00001549      4c8b6d00       mov r13, qword [rbp]
0x0000154d      4889eb         mov rbx, rbp
0x00001550      41bf01000000   mov r15d, 1
0x00001556      4531e4         xor r12d, r12d
0x00001559      4d89ee         mov r14, r13
0x0000155c      4c89f7         mov rdi, r14
0x0000155f      4883c308       add rbx, 8
0x00001563      e838fdffff     call sym.imp.strlen
0x00001568      4883c001       add rax, 1
0x0000156c      4901c4         add r12, rax
0x0000156f      483b1c24       cmp rbx, qword [rsp]
0x00001573      731b           jae 0x1590
0x00001575      4c01f0         add rax, r14
0x00001578      4c8b33         mov r14, qword [rbx]
0x0000157b      4c39f0         cmp rax, r14
0x0000157e      b800000000     mov eax, 0
0x00001583      440f45f8       cmovne r15d, eax
0x00001587      ebd3           jmp 0x155c
0x00001589      0f1f80000000.  nop dword [rax]
0x00001590      4981fc001000.  cmp r12, 0x1000
0x00001597      7654           jbe 0x15ed
0x00001599      4584ff         test r15b, r15b
0x0000159c      7455           je 0x15f3
0x0000159e      31db           xor ebx, ebx
0x000015a0      eb1e           jmp 0x15c0
0x000015a2      660f1f440000   nop word [rax + rax]
0x000015a8      498d041e       lea rax, [r14 + rbx]
0x000015ac      4883c508       add rbp, 8
0x000015b0      488d5801       lea rbx, [rax + 1]
0x000015b4      4c01e8         add rax, r13
0x000015b7      48392c24       cmp qword [rsp], rbp
0x000015bb      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x000015be      7648           jbe 0x1608
0x000015c0      488b7500       mov rsi, qword [rbp]
0x000015c4      4889f7         mov rdi, rsi
0x000015c7      4889742408     mov qword [rsp + 8], rsi
0x000015cc      e8cffcffff     call sym.imp.strlen
0x000015d1      4584ff         test r15b, r15b
0x000015d4      4989c6         mov r14, rax
0x000015d7      488b742408     mov rsi, qword [rsp + 8]
0x000015dc      75ca           jne 0x15a8
0x000015de      498d7c1d00     lea rdi, [r13 + rbx]
0x000015e3      4889c2         mov rdx, rax
0x000015e6      e855fdffff     call sym.imp.memcpy
0x000015eb      ebbb           jmp 0x15a8
0x000015ed      41bc00200000   mov r12d, 0x2000
0x000015f3      4c89e7         mov rdi, r12
0x000015f6      4531ff         xor r15d, r15d
0x000015f9      e8922c0000     call sym.xmalloc
0x000015fe      4989c5         mov r13, rax
0x00001601      eb9b           jmp 0x159e
0x00001603      0f1f440000     nop dword [rax + rax]
0x00001608      31d2           xor edx, edx
0x0000160a      c6000a         mov byte [rax], 0xa
0x0000160d      4c89e0         mov rax, r12
0x00001610      48f7f3         div rbx
0x00001613      4889c5         mov rbp, rax
0x00001616      4989c4         mov r12, rax
0x00001619      4883ed01       sub rbp, 1
0x0000161d      7427           je 0x1646
0x0000161f      498d4c1d00     lea rcx, [r13 + rbx]
0x00001624      0f1f4000       nop dword [rax]
0x00001628      4889cf         mov rdi, rcx
0x0000162b      4889da         mov rdx, rbx
0x0000162e      4c89ee         mov rsi, r13
0x00001631      e80afdffff     call sym.imp.memcpy
0x00001636      4889c1         mov rcx, rax
0x00001639      4801d9         add rcx, rbx
0x0000163c      4883ed01       sub rbp, 1
0x00001640      75e6           jne 0x1628
0x00001642      490fafdc       imul rbx, r12
0x00001646      4889da         mov rdx, rbx
0x00001649      4c89ee         mov rsi, r13
0x0000164c      bf01000000     mov edi, 1
0x00001651      e88a050000     call sym.full_write
0x00001656      4839d8         cmp rax, rbx
0x00001659      74eb           je 0x1646
0x0000165b      488d35133300.  lea rsi, str.standard_output            ; 0x4975 ; "standard output"
0x00001662      ba05000000     mov edx, 5
0x00001667      31ff           xor edi, edi
0x00001669      e812fcffff     call sym.imp.dcgettext
0x0000166e      4889c3         mov rbx, rax
0x00001671      e88afbffff     call sym.imp.__errno_location
0x00001676      8b30           mov esi, dword [rax]
0x00001678      4889da         mov rdx, rbx
0x0000167b      31c0           xor eax, eax
0x0000167d      31ff           xor edi, edi
0x0000167f      e84cfdffff     call sym.imp.error
0x00001684      4883c418       add rsp, 0x18
0x00001688      b801000000     mov eax, 1
0x0000168d      5b             pop rbx
0x0000168e      5d             pop rbp
0x0000168f      415c           pop r12
0x00001691      415d           pop r13
0x00001693      415e           pop r14
0x00001695      415f           pop r15
0x00001697      c3             ret
0x00001698      0f1f84000000.  nop dword [rax + rax]
0x000016a0      bf00200000     mov edi, 0x2000
0x000016a5      e8e62b0000     call sym.xmalloc
0x000016aa      c640ff0a       mov byte [rax - 1], 0xa
0x000016ae      0f0b           ud2
;-- entry0:
;-- _start:
;-- rip:
0x000016b0      31ed           xor ebp, ebp
0x000016b2      4989d1         mov r9, rdx
0x000016b5      5e             pop rsi
0x000016b6      4889e2         mov rdx, rsp
0x000016b9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000016bd      50             push rax
0x000016be      54             push rsp
0x000016bf      4c8d059a3100.  lea r8, sym.__libc_csu_fini             ; 0x4860
0x000016c6      488d0d233100.  lea rcx, sym.__libc_csu_init            ; 0x47f0 ; "AWAVI\x89\xd7AUATL\x8d%\xae# "
0x000016cd      488d3d9cfdff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1470 ; "AWAVAUATA\x89\xfcUSH\x89\xf3H\x83\xec\x18H\x8b>\xe8T\n"
0x000016d4      ff15ee582000   call qword [reloc.__libc_start_main]    ; [0x206fc8:8]=0
0x000016da      f4             hlt
0x000016db      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000016e0      488d3d995920.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x000016e7      55             push rbp
0x000016e8      488d05915920.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x000016ef      4839f8         cmp rax, rdi
0x000016f2      4889e5         mov rbp, rsp
0x000016f5      7419           je 0x1710
0x000016f7      488b05c25820.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x206fc0:8]=0
0x000016fe      4885c0         test rax, rax
0x00001701      740d           je 0x1710
0x00001703      5d             pop rbp
0x00001704      ffe0           jmp rax
0x00001706      662e0f1f8400.  nop word cs:[rax + rax]
0x00001710      5d             pop rbp
0x00001711      c3             ret
0x00001712      0f1f4000       nop dword [rax]
0x00001716      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001720      488d3d595920.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x00001727      488d35525920.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x0000172e      55             push rbp
0x0000172f      4829fe         sub rsi, rdi
0x00001732      4889e5         mov rbp, rsp
0x00001735      48c1fe03       sar rsi, 3
0x00001739      4889f0         mov rax, rsi
0x0000173c      48c1e83f       shr rax, 0x3f
0x00001740      4801c6         add rsi, rax
0x00001743      48d1fe         sar rsi, 1
0x00001746      7418           je 0x1760
0x00001748      488b05895820.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x206fd8:8]=0
0x0000174f      4885c0         test rax, rax
0x00001752      740c           je 0x1760
0x00001754      5d             pop rbp
0x00001755      ffe0           jmp rax
0x00001757      660f1f840000.  nop word [rax + rax]
0x00001760      5d             pop rbp
0x00001761      c3             ret
0x00001762      0f1f4000       nop dword [rax]
0x00001766      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001770      803d51592000.  cmp byte [obj.completed.7697], 0        ; [0x2070c8:1]=0
0x00001777      752f           jne 0x17a8
0x00001779      48833d5f5820.  cmp qword [reloc.__cxa_finalize], 0     ; [0x206fe0:8]=0
0x00001781      55             push rbp
0x00001782      4889e5         mov rbp, rsp
0x00001785      740c           je 0x1793
0x00001787      488b3d7a5820.  mov rdi, qword [obj.__dso_handle]       ; [0x207008:8]=0x207008 obj.__dso_handle
0x0000178e      e8cdfcffff     call sym..plt.got
0x00001793      e848ffffff     call sym.deregister_tm_clones
0x00001798      c60529592000.  mov byte [obj.completed.7697], 1        ; [0x2070c8:1]=0
0x0000179f      5d             pop rbp
0x000017a0      c3             ret
0x000017a1      0f1f80000000.  nop dword [rax]
0x000017a8      f3c3           ret
0x000017aa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000017b0      55             push rbp
0x000017b1      4889e5         mov rbp, rsp
0x000017b4      5d             pop rbp
0x000017b5      e966ffffff     jmp sym.register_tm_clones
0x000017ba      660f1f440000   nop word [rax + rax]
;-- usage:
0x000017c0      4155           push r13                                ; /src:36
0x000017c2      4154           push r12
0x000017c4      ba05000000     mov edx, 5                              ; /src:38
0x000017c9      55             push rbp                                ; /src:36
0x000017ca      53             push rbx
0x000017cb      89fd           mov ebp, edi
0x000017cd      4881ec880000.  sub rsp, 0x88
0x000017d4      488b1d055920.  mov rbx, qword [obj.program_name]       ; [0x2070e0:8]=0
0x000017db      64488b042528.  mov rax, qword fs:[0x28]
0x000017e4      4889442478     mov qword [rsp + 0x78], rax
0x000017e9      31c0           xor eax, eax
0x000017eb      85ff           test edi, edi                           ; /src:37
0x000017ed      742e           je 0x181d
0x000017ef      488d35923100.  lea rsi, str.Try___s___help__for_more_information. ; /src:38 ; 0x4988 ; "Try '%s --help' for more information.\n"
0x000017f6      31ff           xor edi, edi
0x000017f8      e883faffff     call sym.imp.dcgettext
0x000017fd      488b3dbc5820.  mov rdi, qword [obj.stderr]             ; .//coreutils-8.31/lib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00001804      4889c2         mov rdx, rax
0x00001807      4889d9         mov rcx, rbx
0x0000180a      be01000000     mov esi, 1
0x0000180f      31c0           xor eax, eax
0x00001811      e80afcffff     call sym.imp.__fprintf_chk
0x00001816      89ef           mov edi, ebp                            ; /src:55
0x00001818      e8e3fbffff     call sym.imp.exit
0x0000181d      488d358c3100.  lea rsi, str.Usage:__s__STRING_...____or:___s_OPTION ; /src:41 ; 0x49b0 ; "Usage: %s [STRING]...\n  or:  %s OPTION\n"
0x00001824      31ff           xor edi, edi
0x00001826      e855faffff     call sym.imp.dcgettext
0x0000182b      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x0000182e      4889da         mov rdx, rbx
0x00001831      4889c6         mov rsi, rax
0x00001834      bf01000000     mov edi, 1
0x00001839      31c0           xor eax, eax
0x0000183b      e880fbffff     call sym.imp.__printf_chk
0x00001840      488b1d415820.  mov rbx, qword [obj.stdout]             ; /src:47 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001847      488d358a3100.  lea rsi, str.Repeatedly_output_a_line_with_all_specified_STRING_s___or__y_. ; 0x49d8 ; "Repeatedly output a line with all specified STRING(s), or 'y'.\n\n"
0x0000184e      ba05000000     mov edx, 5
0x00001853      31ff           xor edi, edi
0x00001855      e826faffff     call sym.imp.dcgettext
0x0000185a      4889de         mov rsi, rbx
0x0000185d      4889c7         mov rdi, rax
0x00001860      e8bbfaffff     call sym.imp.fputs_unlocked
0x00001865      488b1d1c5820.  mov rbx, qword [obj.stdout]             ; /src:51 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x0000186c      488d35ad3100.  lea rsi, str.help_____display_this_help_and_exit ; 0x4a20 ; "      --help     display this help and exit\n"
0x00001873      ba05000000     mov edx, 5
0x00001878      31ff           xor edi, edi
0x0000187a      e801faffff     call sym.imp.dcgettext
0x0000187f      4889de         mov rsi, rbx
0x00001882      4889c7         mov rdi, rax
0x00001885      e896faffff     call sym.imp.fputs_unlocked
0x0000188a      488b1df75720.  mov rbx, qword [obj.stdout]             ; /src:52 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001891      488d35b83100.  lea rsi, str.version__output_version_information_and_exit ; 0x4a50 ; "      --version  output version information and exit\n"
0x00001898      ba05000000     mov edx, 5
0x0000189d      31ff           xor edi, edi
0x0000189f      e8dcf9ffff     call sym.imp.dcgettext
0x000018a4      4889de         mov rsi, rbx
0x000018a7      4889c7         mov rdi, rax
0x000018aa      488d1df32f00.  lea rbx, [0x000048a4]                   ; "yes"
0x000018b1      e86afaffff     call sym.imp.fputs_unlocked
0x000018b6      488d05eb2f00.  lea rax, [0x000048a8]                   ; ../coreutils-8.31/src/s.c:633 ; "["
0x000018bd      488d0d253000.  lea rcx, str.sha256sum                  ; 0x48e9 ; "sha256sum"
0x000018c4      48c744246000.  mov qword [rsp + 0x60], 0
0x000018cd      48c744246800.  mov qword [rsp + 0x68], 0
0x000018d6      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/s.c:644
0x000018d9      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/s.c:633
0x000018dd      488d05c62f00.  lea rax, [0x000048aa]                   ; "test invocation"
0x000018e4      48894c2430     mov qword [rsp + 0x30], rcx
0x000018e9      488d0d033000.  lea rcx, str.sha384sum                  ; 0x48f3 ; "sha384sum"
0x000018f0      4889442408     mov qword [rsp + 8], rax
0x000018f5      488d05263000.  lea rax, [0x00004922]                   ; "coreutils"
0x000018fc      48894c2440     mov qword [rsp + 0x40], rcx
0x00001901      488d0df52f00.  lea rcx, str.sha512sum                  ; 0x48fd ; "sha512sum"
0x00001908      4889442410     mov qword [rsp + 0x10], rax
0x0000190d      488d05a62f00.  lea rax, [0x000048ba]                   ; "Multi-call invocation"
0x00001914      48894c2450     mov qword [rsp + 0x50], rcx
0x00001919      4889442418     mov qword [rsp + 0x18], rax
0x0000191e      488d05ab2f00.  lea rax, str.sha224sum                  ; 0x48d0 ; "sha224sum"
0x00001925      4889442420     mov qword [rsp + 0x20], rax
0x0000192a      488d05a92f00.  lea rax, str.sha2_utilities             ; 0x48da ; "sha2 utilities"
0x00001931      4889442428     mov qword [rsp + 0x28], rax
0x00001936      4889442438     mov qword [rsp + 0x38], rax
0x0000193b      4889442448     mov qword [rsp + 0x48], rax
0x00001940      4889442458     mov qword [rsp + 0x58], rax
0x00001945      0f1f00         nop dword [rax]
0x00001948      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/s.c:647
0x0000194c      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/s.c:646
0x0000194f      4885ff         test rdi, rdi
0x00001952      7413           je 0x1967
0x00001954      b904000000     mov ecx, 4
0x00001959      4889de         mov rsi, rbx
0x0000195c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000195e      0f97c0         seta al
0x00001961      1c00           sbb al, 0
0x00001963      84c0           test al, al
0x00001965      75e1           jne 0x1948
0x00001967      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/s.c:649
0x0000196b      31ff           xor edi, edi                            ; ../coreutils-8.31/src/s.c:652
0x0000196d      ba05000000     mov edx, 5
0x00001972      488d358e2f00.  lea rsi, str.s_online_help:___s         ; 0x4907 ; "\n%s online help: <%s>\n"
0x00001979      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/s.c:649
0x0000197c      0f84c1000000   je 0x1a43
0x00001982      e8f9f8ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/s.c:652
0x00001987      488d0dfa3000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x4a88 ; "https://www.gnu.org/software/coreutils/"
0x0000198e      488d15892f00.  lea rdx, str.GNU_coreutils              ; 0x491e ; "GNU coreutils"
0x00001995      4889c6         mov rsi, rax
0x00001998      bf01000000     mov edi, 1
0x0000199d      31c0           xor eax, eax
0x0000199f      e81cfaffff     call sym.imp.__printf_chk
0x000019a4      31f6           xor esi, esi                            ; ../coreutils-8.31/src/s.c:656
0x000019a6      bf05000000     mov edi, 5
0x000019ab      e800faffff     call sym.imp.setlocale
0x000019b0      4885c0         test rax, rax                           ; ../coreutils-8.31/src/s.c:657
0x000019b3      741c           je 0x19d1
0x000019b5      488d35702f00.  lea rsi, [0x0000492c]                   ; "en_"
0x000019bc      ba03000000     mov edx, 3
0x000019c1      4889c7         mov rdi, rax
0x000019c4      e847f8ffff     call sym.imp.strncmp
0x000019c9      85c0           test eax, eax
0x000019cb      0f8507010000   jne 0x1ad8
0x000019d1      488d35582f00.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/s.c:666 ; 0x4930 ; "Full documentation <%s%s>\n"
0x000019d8      31ff           xor edi, edi
0x000019da      ba05000000     mov edx, 5
0x000019df      e89cf8ffff     call sym.imp.dcgettext
0x000019e4      488d0db92e00.  lea rcx, [0x000048a4]                   ; .//coreutils-8.31/lib:104 ; "yes"
0x000019eb      488d15963000.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x4a88 ; "https://www.gnu.org/software/coreutils/"
0x000019f2      4889c6         mov rsi, rax
0x000019f5      bf01000000     mov edi, 1
0x000019fa      31c0           xor eax, eax
0x000019fc      e8bff9ffff     call sym.imp.__printf_chk
0x00001a01      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/s.c:668
0x00001a04      488d0db92e00.  lea rcx, [0x000048c4]                   ; " invocation"
0x00001a0b      488d1daf3600.  lea rbx, [0x000050c1]
0x00001a12      480f44d9       cmove rbx, rcx
0x00001a16      488d35db3000.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x4af8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00001a1d      31ff           xor edi, edi
0x00001a1f      ba05000000     mov edx, 5
0x00001a24      e857f8ffff     call sym.imp.dcgettext
0x00001a29      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x00001a2c      4889c6         mov rsi, rax
0x00001a2f      4c89e2         mov rdx, r12
0x00001a32      bf01000000     mov edi, 1
0x00001a37      31c0           xor eax, eax
0x00001a39      e882f9ffff     call sym.imp.__printf_chk
0x00001a3e      e9d3fdffff     jmp 0x1816
0x00001a43      e838f8ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/s.c:652
0x00001a48      488d0d393000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x4a88 ; "https://www.gnu.org/software/coreutils/"
0x00001a4f      488d15c82e00.  lea rdx, str.GNU_coreutils              ; 0x491e ; "GNU coreutils"
0x00001a56      4889c6         mov rsi, rax
0x00001a59      bf01000000     mov edi, 1
0x00001a5e      31c0           xor eax, eax
0x00001a60      e85bf9ffff     call sym.imp.__printf_chk
0x00001a65      31f6           xor esi, esi                            ; ../coreutils-8.31/src/s.c:656
0x00001a67      bf05000000     mov edi, 5
0x00001a6c      e83ff9ffff     call sym.imp.setlocale
0x00001a71      4885c0         test rax, rax                           ; ../coreutils-8.31/src/s.c:657
0x00001a74      7418           je 0x1a8e
0x00001a76      488d35af2e00.  lea rsi, [0x0000492c]                   ; "en_"
0x00001a7d      ba03000000     mov edx, 3
0x00001a82      4889c7         mov rdi, rax
0x00001a85      e886f7ffff     call sym.imp.strncmp
0x00001a8a      85c0           test eax, eax
0x00001a8c      7543           jne 0x1ad1
0x00001a8e      488d359b2e00.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/s.c:666 ; 0x4930 ; "Full documentation <%s%s>\n"
0x00001a95      ba05000000     mov edx, 5
0x00001a9a      31ff           xor edi, edi
0x00001a9c      4c8d25012e00.  lea r12, [0x000048a4]                   ; ../coreutils-8.31/src/s.c:643 ; "yes"
0x00001aa3      488d1d1a2e00.  lea rbx, [0x000048c4]                   ; ../coreutils-8.31/src/s.c:668 ; " invocation"
0x00001aaa      e8d1f7ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/s.c:666
0x00001aaf      488d0dee2d00.  lea rcx, [0x000048a4]                   ; .//coreutils-8.31/lib:104 ; "yes"
0x00001ab6      488d15cb2f00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x4a88 ; "https://www.gnu.org/software/coreutils/"
0x00001abd      4889c6         mov rsi, rax
0x00001ac0      bf01000000     mov edi, 1
0x00001ac5      31c0           xor eax, eax
0x00001ac7      e8f4f8ffff     call sym.imp.__printf_chk
0x00001acc      e945ffffff     jmp 0x1a16
0x00001ad1      4c8d25cc2d00.  lea r12, [0x000048a4]                   ; ../coreutils-8.31/src/s.c:643 ; "yes"
0x00001ad8      4c8b2da95520.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/s.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001adf      488d35ca2f00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x4ab0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00001ae6      31ff           xor edi, edi
0x00001ae8      ba05000000     mov edx, 5
0x00001aed      e88ef7ffff     call sym.imp.dcgettext
0x00001af2      4c89ee         mov rsi, r13
0x00001af5      4889c7         mov rdi, rax
0x00001af8      e823f8ffff     call sym.imp.fputs_unlocked
0x00001afd      e9cffeffff     jmp 0x19d1
0x00001b02      662e0f1f8400.  nop word cs:[rax + rax]
0x00001b0c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00001b10      48893dc15520.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2070d8:8]=0
0x00001b17      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00001b18      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00001b20      40883da95520.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2070d0:1]=0
0x00001b27      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00001b28      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00001b30      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00001b31      53             push rbx
0x00001b32      4883ec08       sub rsp, 8
0x00001b36      488b3d4b5520.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001b3d      e86e2a0000     call sym.close_stream
0x00001b42      85c0           test eax, eax
0x00001b44      7416           je 0x1b5c
0x00001b46      e8b5f6ffff     call sym.imp.__errno_location
0x00001b4b      803d7e552000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2070d0:1]=0
0x00001b52      4889c3         mov rbx, rax
0x00001b55      741c           je 0x1b73
0x00001b57      833820         cmp dword [rax], 0x20
0x00001b5a      7517           jne 0x1b73
0x00001b5c      488b3d5d5520.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00001b63      e8482a0000     call sym.close_stream
0x00001b68      85c0           test eax, eax
0x00001b6a      7546           jne 0x1bb2
0x00001b6c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00001b70      5b             pop rbx
0x00001b71      5d             pop rbp
0x00001b72      c3             ret
0x00001b73      488d35b62f00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x4b30 ; "write error"
0x00001b7a      31ff           xor edi, edi
0x00001b7c      ba05000000     mov edx, 5
0x00001b81      e8faf6ffff     call sym.imp.dcgettext
0x00001b86      488b3d4b5520.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2070d8:8]=0
0x00001b8d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00001b90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00001b93      7428           je 0x1bbd
0x00001b95      e8561e0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00001b9a      8b33           mov esi, dword [rbx]
0x00001b9c      488d15992f00.  lea rdx, str.s:__s                      ; 0x4b3c ; "%s: %s"
0x00001ba3      4889c1         mov rcx, rax
0x00001ba6      4989e8         mov r8, rbp
0x00001ba9      31ff           xor edi, edi
0x00001bab      31c0           xor eax, eax
0x00001bad      e81ef8ffff     call sym.imp.error
0x00001bb2      8b3d60542000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x207018:4]=1
0x00001bb8      e863f6ffff     call sym.imp._exit
0x00001bbd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00001bbf      488d157a2f00.  lea rdx, [0x00004b40]                   ; "%s"
0x00001bc6      4889c1         mov rcx, rax
0x00001bc9      31ff           xor edi, edi
0x00001bcb      31c0           xor eax, eax
0x00001bcd      e8fef7ffff     call sym.imp.error
0x00001bd2      ebde           jmp 0x1bb2
0x00001bd4      662e0f1f8400.  nop word cs:[rax + rax]
0x00001bde      6690           nop
;-- full_write:
0x00001be0      4155           push r13                                ; ../coreutils-8.31/lib/full-write.c:59
0x00001be2      4154           push r12
0x00001be4      55             push rbp
0x00001be5      53             push rbx
0x00001be6      4883ec08       sub rsp, 8
0x00001bea      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/full-write.c:63
0x00001bed      7462           je 0x1c51
0x00001bef      4189fd         mov r13d, edi
0x00001bf2      4889f5         mov rbp, rsi
0x00001bf5      4889d3         mov rbx, rdx
0x00001bf8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x00001bfb      eb13           jmp 0x1c10
0x00001bfd      0f1f00         nop dword [rax]
0x00001c00      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/full-write.c:68
0x00001c03      7433           je 0x1c38
0x00001c05      4901c4         add r12, rax                            ; ../coreutils-8.31/lib/full-write.c:73
0x00001c08      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/full-write.c:74
0x00001c0b      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/full-write.c:63
0x00001c0e      7414           je 0x1c24
0x00001c10      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/full-write.c:65
0x00001c13      4889ee         mov rsi, rbp
0x00001c16      4489ef         mov edi, r13d
0x00001c19      e8f21f0000     call sym.safe_write
0x00001c1e      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/full-write.c:66
0x00001c22      75dc           jne 0x1c00
0x00001c24      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x00001c28      4c89e0         mov rax, r12
0x00001c2b      5b             pop rbx
0x00001c2c      5d             pop rbp
0x00001c2d      415c           pop r12
0x00001c2f      415d           pop r13
0x00001c31      c3             ret
0x00001c32      660f1f440000   nop word [rax + rax]
0x00001c38      e8c3f5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/full-write.c:70
0x00001c3d      c7001c000000   mov dword [rax], 0x1c                   ; [0x1c:4]=0
0x00001c43      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x00001c47      4c89e0         mov rax, r12
0x00001c4a      5b             pop rbx
0x00001c4b      5d             pop rbp
0x00001c4c      415c           pop r12
0x00001c4e      415d           pop r13
0x00001c50      c3             ret
0x00001c51      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x00001c54      ebce           jmp 0x1c24                              ; ../coreutils-8.31/lib/full-write.c:78
0x00001c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_long_options:
0x00001c60      4155           push r13                                ; ../coreutils-8.31/lib/long-options.c:52
0x00001c62      4154           push r12
0x00001c64      4d89c5         mov r13, r8
0x00001c67      55             push rbp
0x00001c68      53             push rbx
0x00001c69      4889d5         mov rbp, rdx
0x00001c6c      4989cc         mov r12, rcx
0x00001c6f      4881ece80000.  sub rsp, 0xe8
0x00001c76      84c0           test al, al
0x00001c78      743a           je 0x1cb4
0x00001c7a      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00001c7f      0f294c2470     movaps xmmword [rsp + 0x70], xmm1
0x00001c84      0f2994248000.  movaps xmmword [rsp + 0x80], xmm2
0x00001c8c      0f299c249000.  movaps xmmword [rsp + 0x90], xmm3
0x00001c94      0f29a424a000.  movaps xmmword [rsp + 0xa0], xmm4
0x00001c9c      0f29ac24b000.  movaps xmmword [rsp + 0xb0], xmm5
0x00001ca4      0f29b424c000.  movaps xmmword [rsp + 0xc0], xmm6
0x00001cac      0f29bc24d000.  movaps xmmword [rsp + 0xd0], xmm7
0x00001cb4      64488b042528.  mov rax, qword fs:[0x28]
0x00001cbd      4889442428     mov qword [rsp + 0x28], rax
0x00001cc2      31c0           xor eax, eax
0x00001cc4      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/long-options.c:61
0x00001cc7      8b1dd3532000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:56 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x00001ccd      c705c9532000.  mov dword [obj.opterr], 0               ; ../coreutils-8.31/lib/long-options.c:59 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x00001cd7      7437           je 0x1d10                               ; ../coreutils-8.31/lib/long-options.c:61
0x00001cd9      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/long-options.c:90
0x00001cde      644833042528.  xor rax, qword fs:[0x28]
0x00001ce7      891db3532000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:85 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x00001ced      c70599532000.  mov dword [obj.optind], 0               ; ../coreutils-8.31/lib/long-options.c:89 ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001cf7      0f859d000000   jne 0x1d9a                              ; ../coreutils-8.31/lib/long-options.c:90
0x00001cfd      4881c4e80000.  add rsp, 0xe8
0x00001d04      5b             pop rbx
0x00001d05      5d             pop rbp
0x00001d06      415c           pop r12
0x00001d08      415d           pop r13
0x00001d0a      c3             ret
0x00001d0b      0f1f440000     nop dword [rax + rax]
0x00001d10      488d0da94e20.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:62 ; 0x206bc0 ; "EK"
0x00001d17      488d15252e00.  lea rdx, [0x00004b43]                   ; "+"
0x00001d1e      4531c0         xor r8d, r8d
0x00001d21      4c894c2408     mov qword [rsp + 8], r9
0x00001d26      e895f5ffff     call sym.imp.getopt_long
0x00001d2b      83f8ff         cmp eax, 0xffffffff
0x00001d2e      74a9           je 0x1cd9
0x00001d30      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:64
0x00001d33      4c8b4c2408     mov r9, qword [rsp + 8]
0x00001d38      7456           je 0x1d90
0x00001d3a      83f876         cmp eax, 0x76
0x00001d3d      759a           jne 0x1cd9
0x00001d3f      488d84241001.  lea rax, [rsp + 0x110]                  ; ../coreutils-8.31/lib/long-options.c:73
0x00001d47      488b3d3a5320.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:74 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001d4e      4c8d442410     lea r8, [rsp + 0x10]
0x00001d53      4c89e9         mov rcx, r13
0x00001d56      4c89e2         mov rdx, r12
0x00001d59      4889ee         mov rsi, rbp
0x00001d5c      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/long-options.c:73
0x00001d61      488d442430     lea rax, [rsp + 0x30]
0x00001d66      c74424103000.  mov dword [rsp + 0x10], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x00001d6e      c74424143000.  mov dword [rsp + 0x14], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x00001d76      4889442420     mov qword [rsp + 0x20], rax
0x00001d7b      e830230000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:74
0x00001d80      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:75
0x00001d82      e879f6ffff     call sym.imp.exit
0x00001d87      660f1f840000.  nop word [rax + rax]
0x00001d90      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:67
0x00001d92      41ffd1         call r9
0x00001d95      e93fffffff     jmp 0x1cd9                              ; ../coreutils-8.31/lib/long-options.c:68
0x00001d9a      e811f5ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:90
0x00001d9f      90             nop
;-- parse_gnu_standard_options_only:
0x00001da0      4156           push r14                                ; ../coreutils-8.31/lib/long-options.c:106
0x00001da2      4155           push r13
0x00001da4      4d89c6         mov r14, r8
0x00001da7      4154           push r12
0x00001da9      55             push rbp
0x00001daa      4989d4         mov r12, rdx
0x00001dad      53             push rbx
0x00001dae      4989cd         mov r13, rcx
0x00001db1      4881ecd00000.  sub rsp, 0xd0
0x00001db8      84c0           test al, al
0x00001dba      488bac240001.  mov rbp, qword [rsp + 0x100]
0x00001dc2      7437           je 0x1dfb
0x00001dc4      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00001dc9      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00001dce      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00001dd3      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x00001ddb      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00001de3      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x00001deb      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00001df3      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x00001dfb      64488b042528.  mov rax, qword fs:[0x28]
0x00001e04      4889442418     mov qword [rsp + 0x18], rax
0x00001e09      31c0           xor eax, eax
0x00001e0b      488d15af3200.  lea rdx, [0x000050c1]                   ; ../coreutils-8.31/lib/long-options.c:113
0x00001e12      488d052a2d00.  lea rax, [0x00004b43]                   ; "+"
0x00001e19      4584c9         test r9b, r9b
0x00001e1c      488d0d9d4d20.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:115 ; 0x206bc0 ; "EK"
0x00001e23      480f44d0       cmove rdx, rax                          ; ../coreutils-8.31/lib/long-options.c:113
0x00001e27      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/long-options.c:115
0x00001e2a      8b1d70522000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:108 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x00001e30      c70566522000.  mov dword [obj.opterr], 1               ; ../coreutils-8.31/lib/long-options.c:111 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x00001e3a      e881f4ffff     call sym.imp.getopt_long                ; ../coreutils-8.31/lib/long-options.c:115
0x00001e3f      83f8ff         cmp eax, 0xffffffff
0x00001e42      7464           je 0x1ea8
0x00001e44      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:117
0x00001e47      0f8483000000   je 0x1ed0
0x00001e4d      83f876         cmp eax, 0x76
0x00001e50      754e           jne 0x1ea0
0x00001e52      488d84240801.  lea rax, [rsp + 0x108]                  ; ../coreutils-8.31/lib/long-options.c:126
0x00001e5a      488b3d275220.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:127 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001e61      4989e0         mov r8, rsp
0x00001e64      4c89f1         mov rcx, r14
0x00001e67      4c89ea         mov rdx, r13
0x00001e6a      4c89e6         mov rsi, r12
0x00001e6d      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/long-options.c:126
0x00001e72      488d442420     lea rax, [rsp + 0x20]
0x00001e77      c70424300000.  mov dword [rsp], 0x30                   ; '0'
                                                                       ; [0x30:4]=0
0x00001e7e      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00001e86      4889442410     mov qword [rsp + 0x10], rax
0x00001e8b      e820220000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:127
0x00001e90      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:128
0x00001e92      e869f5ffff     call sym.imp.exit
0x00001e97      660f1f840000.  nop word [rax + rax]
0x00001ea0      8b3d72512000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/long-options.c:132 ; [0x207018:4]=1
0x00001ea6      ffd5           call rbp
0x00001ea8      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/long-options.c:139
0x00001ead      644833042528.  xor rax, qword fs:[0x28]
0x00001eb6      891de4512000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:138 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x00001ebc      7518           jne 0x1ed6                              ; ../coreutils-8.31/lib/long-options.c:139
0x00001ebe      4881c4d00000.  add rsp, 0xd0
0x00001ec5      5b             pop rbx
0x00001ec6      5d             pop rbp
0x00001ec7      415c           pop r12
0x00001ec9      415d           pop r13
0x00001ecb      415e           pop r14
0x00001ecd      c3             ret
0x00001ece      6690           nop
0x00001ed0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:120
0x00001ed2      ffd5           call rbp
0x00001ed4      ebd2           jmp 0x1ea8                              ; ../coreutils-8.31/lib/long-options.c:121
0x00001ed6      e8d5f3ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:139
0x00001edb      0f1f440000     nop dword [rax + rax]
;-- set_program_name:
0x00001ee0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00001ee3      53             push rbx
0x00001ee4      7477           je 0x1f5d                               ; ../coreutils-8.31/lib/progname.c:51
0x00001ee6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00001eeb      4889fb         mov rbx, rdi
0x00001eee      e8edf3ffff     call sym.imp.strrchr
0x00001ef3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00001ef6      7455           je 0x1f4d
0x00001ef8      4c8d4001       lea r8, [rax + 1]
0x00001efc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00001eff      4829da         sub rdx, rbx
0x00001f02      4883fa06       cmp rdx, 6
0x00001f06      7e45           jle 0x1f4d
0x00001f08      488d70fa       lea rsi, [rax - 6]
0x00001f0c      488d3d7d2c00.  lea rdi, str..libs                      ; 0x4b90 ; "/.libs/"
0x00001f13      b907000000     mov ecx, 7
0x00001f18      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001f1a      0f97c2         seta dl
0x00001f1d      80da00         sbb dl, 0
0x00001f20      84d2           test dl, dl
0x00001f22      7529           jne 0x1f4d
0x00001f24      488d3d6d2c00.  lea rdi, [0x00004b98]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00001f2b      b903000000     mov ecx, 3
0x00001f30      4c89c6         mov rsi, r8
0x00001f33      4c89c3         mov rbx, r8
0x00001f36      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001f38      0f97c2         seta dl
0x00001f3b      80da00         sbb dl, 0
0x00001f3e      84d2           test dl, dl
0x00001f40      750b           jne 0x1f4d
0x00001f42      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00001f46      48891d335120.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x207080:8]=0
0x00001f4d      48891d8c5120.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2070e0:8]=0
0x00001f54      48891d3d5120.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x207098:8]=0
0x00001f5b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00001f5c      c3             ret
0x00001f5d      488b0d5c5120.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00001f64      488d3ded2b00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x4b58 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00001f6b      ba37000000     mov edx, 0x37                           ; '7'
0x00001f70      be01000000     mov esi, 1
0x00001f75      e896f4ffff     call sym.imp.fwrite
0x00001f7a      e871f2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00001f7f      90             nop
;-- gettext_quote.part.1:
0x00001f80      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00001f81      53             push rbx
0x00001f82      4889fd         mov rbp, rdi
0x00001f85      89f3           mov ebx, esi
0x00001f87      4883ec08       sub rsp, 8
0x00001f8b      e800270000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00001f90      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00001f93      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00001f96      80fa55         cmp dl, 0x55
0x00001f99      7475           je 0x2010
0x00001f9b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00001f9e      7420           je 0x1fc0
0x00001fa0      488d05042c00.  lea rax, str.l______l                   ; 0x4bab ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2\u54ff\uffd8\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u94ff\uffd8\u9cff\uffd7\u5cff\uffd7\u24ff\uffd9\u14ff\uffd9\u04ff\uffd9\uf4ff\uffd8\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\ue4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ua4ff\uffd8\ud4ff\uffd8\u7cff\uffd8\ud4ff\uffd8\u37ff\uffd7\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\u07ff\uffd7\u3cff\uffd9\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\ud4ff\uffd8\uacff\uffd7\u7cff\uffd8\ud4ff\uffd8\u7cff\uffd8\ud4ff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u37ff\uffd6\ud4ff\uffd8\u37ff\uffd6\ua4ff\uffd8\u28ff\uffd8\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u18ff\uffd8\u68ff\uffd9\u50ff\uffd9\xff\uffd8\u40ff\uffd9\ue8ff\uffd7\u28ff\uffd9\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u10ff\uffd9\U010003d8\U010003d8\ue0ff\uffd8\U010003d8\uc8ff\uffd8\U010003d8\u38ff\uffd5\U010003d8\U010003d8\U010003d8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\U010003d8\U010003d8\U010003d8\U010003d8\u08ff\uffd5\u38ff\uffd7\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\U010003d8\uc8ff\uffd7\uc8ff\uffd8\U010003d8\uc8ff\uffd8\U010003d8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\u38ff\uffd4\U010003d8\u38ff\uffd4\ue0ff\uffd8\xff"
0x00001fa7      488d15ff2b00.  lea rdx, [0x00004bad]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2"
0x00001fae      83fb09         cmp ebx, 9
0x00001fb1      480f45c2       cmovne rax, rdx
0x00001fb5      4883c408       add rsp, 8
0x00001fb9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00001fba      5d             pop rbp
0x00001fbb      c3             ret
0x00001fbc      0f1f4000       nop dword [rax]
0x00001fc0      0fb65001       movzx edx, byte [rax + 1]
0x00001fc4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00001fc7      80fa42         cmp dl, 0x42
0x00001fca      75d4           jne 0x1fa0
0x00001fcc      80780231       cmp byte [rax + 2], 0x31
0x00001fd0      75ce           jne 0x1fa0
0x00001fd2      80780338       cmp byte [rax + 3], 0x38
0x00001fd6      75c8           jne 0x1fa0
0x00001fd8      80780430       cmp byte [rax + 4], 0x30
0x00001fdc      75c2           jne 0x1fa0
0x00001fde      80780533       cmp byte [rax + 5], 0x33
0x00001fe2      75bc           jne 0x1fa0
0x00001fe4      80780630       cmp byte [rax + 6], 0x30
0x00001fe8      75b6           jne 0x1fa0
0x00001fea      80780700       cmp byte [rax + 7], 0
0x00001fee      75b0           jne 0x1fa0
0x00001ff0      807d0060       cmp byte [rbp], 0x60
0x00001ff4      488d05a92b00.  lea rax, [0x00004ba4]
0x00001ffb      488d15a62b00.  lea rdx, [0x00004ba8]
0x00002002      480f45c2       cmovne rax, rdx
0x00002006      4883c408       add rsp, 8
0x0000200a      5b             pop rbx
0x0000200b      5d             pop rbp
0x0000200c      c3             ret
0x0000200d      0f1f00         nop dword [rax]
0x00002010      0fb65001       movzx edx, byte [rax + 1]
0x00002014      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002017      80fa54         cmp dl, 0x54
0x0000201a      7584           jne 0x1fa0
0x0000201c      0fb65002       movzx edx, byte [rax + 2]
0x00002020      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002023      80fa46         cmp dl, 0x46
0x00002026      0f8574ffffff   jne 0x1fa0
0x0000202c      8078032d       cmp byte [rax + 3], 0x2d
0x00002030      0f856affffff   jne 0x1fa0
0x00002036      80780438       cmp byte [rax + 4], 0x38
0x0000203a      0f8560ffffff   jne 0x1fa0
0x00002040      80780500       cmp byte [rax + 5], 0
0x00002044      0f8556ffffff   jne 0x1fa0
0x0000204a      807d0060       cmp byte [rbp], 0x60
0x0000204e      488d05472b00.  lea rax, [0x00004b9c]                   ; "\u2018"
0x00002055      488d15442b00.  lea rdx, [0x00004ba0]                   ; "\u2019"
0x0000205c      480f45c2       cmovne rax, rdx
0x00002060      4883c408       add rsp, 8
0x00002064      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002065      5d             pop rbp
0x00002066      c3             ret
0x00002067      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002070      4157           push r15
0x00002072      4156           push r14
0x00002074      4589c7         mov r15d, r8d
0x00002077      4155           push r13
0x00002079      4154           push r12
0x0000207b      4989fe         mov r14, rdi
0x0000207e      55             push rbp
0x0000207f      53             push rbx
0x00002080      4489cb         mov ebx, r9d
0x00002083      4989f5         mov r13, rsi
0x00002086      4889cd         mov rbp, rcx
0x00002089      83e302         and ebx, 2
0x0000208c      4881ecb80000.  sub rsp, 0xb8
0x00002093      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000209b      4889542410     mov qword [rsp + 0x10], rdx
0x000020a0      4489442408     mov dword [rsp + 8], r8d
0x000020a5      44894c2478     mov dword [rsp + 0x78], r9d
0x000020aa      4889442420     mov qword [rsp + 0x20], rax
0x000020af      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000020b7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000020bc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000020c4      4889442460     mov qword [rsp + 0x60], rax
0x000020c9      64488b042528.  mov rax, qword fs:[0x28]
0x000020d2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000020da      31c0           xor eax, eax
0x000020dc      e8aff1ffff     call sym.imp.__ctype_get_mb_cur_max
0x000020e1      4183ff0a       cmp r15d, 0xa
0x000020e5      4889442458     mov qword [rsp + 0x58], rax
0x000020ea      0f87af110000   ja 0x329f
0x000020f0      488d0d092b00.  lea rcx, [0x00004c00]
0x000020f7      4489fa         mov edx, r15d
0x000020fa      48630491       movsxd rax, dword [rcx + rdx*4]
0x000020fe      4801c8         add rax, rcx
0x00002101      ffe0           jmp rax
0x00002103      c644240e01     mov byte [rsp + 0xe], 1
0x00002108      c644247c00     mov byte [rsp + 0x7c], 0
0x0000210d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002110      48c744245000.  mov qword [rsp + 0x50], 0
0x00002119      c644240f01     mov byte [rsp + 0xf], 1
0x0000211e      c644240d00     mov byte [rsp + 0xd], 0
0x00002123      488d05832a00.  lea rax, [0x00004bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2"
0x0000212a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002133      4531ff         xor r15d, r15d
0x00002136      c74424080200.  mov dword [rsp + 8], 2
0x0000213e      4889442448     mov qword [rsp + 0x48], rax
0x00002143      4531db         xor r11d, r11d
0x00002146      4889e8         mov rax, rbp
0x00002149      4589e0         mov r8d, r12d
0x0000214c      4c89dd         mov rbp, r11
0x0000214f      4989c3         mov r11, rax
0x00002152      660f1f440000   nop word [rax + rax]
0x00002158      4939eb         cmp r11, rbp
0x0000215b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000215f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002163      750d           jne 0x2172
0x00002165      488b442410     mov rax, qword [rsp + 0x10]
0x0000216a      803c2800       cmp byte [rax + rbp], 0
0x0000216e      410f95c4       setne r12b
0x00002172      4584e4         test r12b, r12b
0x00002175      0f8455060000   je 0x27d0
0x0000217b      837c240802     cmp dword [rsp + 8], 2
0x00002180      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002185      4c8d0c2f       lea r9, [rdi + rbp]
0x00002189      0f95c0         setne al
0x0000218c      2244240d       and al, byte [rsp + 0xd]
0x00002190      4189c2         mov r10d, eax
0x00002193      0f84a7000000   je 0x2240
0x00002199      488b442418     mov rax, qword [rsp + 0x18]
0x0000219e      4885c0         test rax, rax
0x000021a1      0f8429040000   je 0x25d0
0x000021a7      4983fbff       cmp r11, 0xffffffffffffffff
0x000021ab      488d5c0500     lea rbx, [rbp + rax]
0x000021b0      752e           jne 0x21e0
0x000021b2      4883f801       cmp rax, 1
0x000021b6      7628           jbe 0x21e0
0x000021b8      4488442438     mov byte [rsp + 0x38], r8b
0x000021bd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000021c2      4c894c2428     mov qword [rsp + 0x28], r9
0x000021c7      e8d4f0ffff     call sym.imp.strlen
0x000021cc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000021d2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000021d8      4989c3         mov r11, rax
0x000021db      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000021e0      4c39db         cmp rbx, r11
0x000021e3      4488542428     mov byte [rsp + 0x28], r10b
0x000021e8      0f87b2050000   ja 0x27a0
0x000021ee      488b542418     mov rdx, qword [rsp + 0x18]
0x000021f3      488b742448     mov rsi, qword [rsp + 0x48]
0x000021f8      4c89cf         mov rdi, r9
0x000021fb      4c895c2440     mov qword [rsp + 0x40], r11
0x00002200      4488442438     mov byte [rsp + 0x38], r8b
0x00002205      4c894c2430     mov qword [rsp + 0x30], r9
0x0000220a      e801f1ffff     call sym.imp.memcmp
0x0000220f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002211      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002216      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000221c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002221      0f8579050000   jne 0x27a0
0x00002227      807c240f00     cmp byte [rsp + 0xf], 0
0x0000222c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002232      0f857d0f0000   jne 0x31b5
0x00002238      0f1f84000000.  nop dword [rax + rax]
0x00002240      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002244      80fb7e         cmp bl, 0x7e
0x00002247      0f871b030000   ja 0x2568
0x0000224d      488d0dd82900.  lea rcx, [0x00004c2c]                   ; "T\xd8\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff\x94\xd8\xff\xff\x9c\xd7\xff\xff\\xd7\xff\xff$\xd9\xff\xff\x14\xd9\xff\xff\x04\xd9\xff\xff\xf4\xd8\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff<\xd9\xff\xff\xe4\xd8\xff\xff\xd4\xd8\xff\xff\xd4\xd8\xff\xff\xa4\xd8\xff\xff\xd4\xd8\xff\xff|\xd8\xff\xff\xd4\xd8\xff\xff7\xd7\xff\xff\xd4\xd8\xff\xff\xd4\xd8\xff\xff\xd4\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff\xd4\xd8\xff\xff\xd4\xd8\xff\xff\xd4\xd8\xff\xff\xd4\xd8\xff\xff\a\xd7\xff\xff<\xd9\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff\xd4\xd8\xff\xff\xac\xd7\xff\xff|\xd8\xff\xff\xd4\xd8\xff\xff|\xd8\xff\xff\xd4\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff|\xd8\xff\xff7\xd6\xff\xff\xd4\xd8\xff\xff7\xd6\xff\xff\xa4\xd8\xff\xff(\xd8\xff\xff8\xd7\xff\xff8\xd7\xff\xff8\xd7\xff\xff8\xd7\xff\xff8\xd7\xff\xff8\xd7\xff\xff\x18\xd8\xff\xffh\xd9\xff\xffP\xd9\xff\xff"
0x00002254      0fb6d3         movzx edx, bl
0x00002257      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000225b      4801c8         add rax, rcx
0x0000225e      ffe0           jmp rax
0x00002260      4531d2         xor r10d, r10d
0x00002263      4983fb01       cmp r11, 1
0x00002267      0f95c0         setne al
0x0000226a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000226e      750c           jne 0x227c
0x00002270      488b442410     mov rax, qword [rsp + 0x10]
0x00002275      80780100       cmp byte [rax + 1], 0
0x00002279      0f95c0         setne al
0x0000227c      837c240802     cmp dword [rsp + 8], 2
0x00002281      0f94c2         sete dl
0x00002284      84c0           test al, al
0x00002286      0f844c020000   je 0x24d8
0x0000228c      4531e4         xor r12d, r12d
0x0000228f      31c0           xor eax, eax
0x00002291      0f1f80000000.  nop dword [rax]
0x00002298      807c240d01     cmp byte [rsp + 0xd], 1
0x0000229d      0f850f010000   jne 0x23b2
0x000022a3      84d2           test dl, dl
0x000022a5      0f8507010000   jne 0x23b2
0x000022ab      488b742420     mov rsi, qword [rsp + 0x20]
0x000022b0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000022b3      7414           je 0x22c9
0x000022b5      89da           mov edx, ebx
0x000022b7      c0ea05         shr dl, 5
0x000022ba      0fb6d2         movzx edx, dl
0x000022bd      8b1496         mov edx, dword [rsi + rdx*4]
0x000022c0      0fa3da         bt edx, ebx
0x000022c3      0f824a010000   jb 0x2413
0x000022c9      4584d2         test r10b, r10b
0x000022cc      0f8541010000   jne 0x2413
0x000022d2      83f001         xor eax, 1
0x000022d5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000022d9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000022dc      84c0           test al, al
0x000022de      7420           je 0x2300                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000022e0      4d39fd         cmp r13, r15
0x000022e3      7605           jbe 0x22ea
0x000022e5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000022ea      498d4701       lea rax, [r15 + 1]
0x000022ee      4939c5         cmp r13, rax
0x000022f1      7606           jbe 0x22f9
0x000022f3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000022f9      4983c702       add r15, 2
0x000022fd      4531c0         xor r8d, r8d
0x00002300      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002303      7304           jae 0x2309                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002305      43881c3e       mov byte [r14 + r15], bl
0x00002309      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000230e      4983c701       add r15, 1
0x00002312      b800000000     mov eax, 0
0x00002317      4584e4         test r12b, r12b
0x0000231a      0f44f8         cmove edi, eax
0x0000231d      40887c240e     mov byte [rsp + 0xe], dil
0x00002322      e931feffff     jmp 0x2158
0x00002327      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002330      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002333      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002337      83f802         cmp eax, 2
0x0000233a      0f84b8050000   je 0x28f8
0x00002340      83f805         cmp eax, 5
0x00002343      0f846f050000   je 0x28b8
0x00002349      83f802         cmp eax, 2
0x0000234c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002351      0f94c2         sete dl
0x00002354      4531e4         xor r12d, r12d
0x00002357      31c0           xor eax, eax
0x00002359      e93affffff     jmp 0x2298
0x0000235e      6690           nop
0x00002360      4531d2         xor r10d, r10d
0x00002363      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002368      0f8402050000   je 0x2870
0x0000236e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002373      31d2           xor edx, edx
0x00002375      31c0           xor eax, eax
0x00002377      bb27000000     mov ebx, 0x27                           ; '''
0x0000237c      e917ffffff     jmp 0x2298
0x00002381      0f1f80000000.  nop dword [rax]
0x00002388      ba09000000     mov edx, 9
0x0000238d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002392      837c240802     cmp dword [rsp + 8], 2
0x00002397      0f94c0         sete al
0x0000239a      2244240f       and al, byte [rsp + 0xf]
0x0000239e      0f854a010000   jne 0x24ee
0x000023a4      807c240d00     cmp byte [rsp + 0xd], 0
0x000023a9      7565           jne 0x2410
0x000023ab      89d3           mov ebx, edx
0x000023ad      4531e4         xor r12d, r12d
0x000023b0      31c0           xor eax, eax
0x000023b2      807c240f00     cmp byte [rsp + 0xf], 0
0x000023b7      0f85eefeffff   jne 0x22ab
0x000023bd      e907ffffff     jmp 0x22c9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000023c2      660f1f440000   nop word [rax + rax]
0x000023c8      ba08000000     mov edx, 8
0x000023cd      bb62000000     mov ebx, 0x62                           ; 'b'
0x000023d2      ebd0           jmp 0x23a4
0x000023d4      0f1f4000       nop dword [rax]
0x000023d8      837c240802     cmp dword [rsp + 8], 2
0x000023dd      0f84cd030000   je 0x27b0
0x000023e3      807c240d00     cmp byte [rsp + 0xd], 0
0x000023e8      0f8412020000   je 0x2600
0x000023ee      807c240f00     cmp byte [rsp + 0xf], 0
0x000023f3      0f8407020000   je 0x2600
0x000023f9      48837c241800   cmp qword [rsp + 0x18], 0
0x000023ff      0f85b6030000   jne 0x27bb
0x00002405      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000240a      660f1f440000   nop word [rax + rax]
0x00002410      4531e4         xor r12d, r12d
0x00002413      837c240802     cmp dword [rsp + 8], 2
0x00002418      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000241b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002420      89d0           mov eax, edx
0x00002422      0f8550080000   jne 0x2c78
0x00002428      4489c0         mov eax, r8d
0x0000242b      83f001         xor eax, 1
0x0000242e      20d0           and al, dl
0x00002430      742f           je 0x2461
0x00002432      4d39fd         cmp r13, r15
0x00002435      7605           jbe 0x243c
0x00002437      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000243c      498d5701       lea rdx, [r15 + 1]
0x00002440      4939d5         cmp r13, rdx
0x00002443      7606           jbe 0x244b
0x00002445      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000244b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000244f      4939d5         cmp r13, rdx
0x00002452      7606           jbe 0x245a
0x00002454      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000245a      4983c703       add r15, 3
0x0000245e      4189c0         mov r8d, eax
0x00002461      4d39fd         cmp r13, r15
0x00002464      7605           jbe 0x246b
0x00002466      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000246b      4983c701       add r15, 1
0x0000246f      4883c501       add rbp, 1
0x00002473      e988feffff     jmp 0x2300
0x00002478      0f1f84000000.  nop dword [rax + rax]
0x00002480      807c240d00     cmp byte [rsp + 0xd], 0
0x00002485      0f85c8010000   jne 0x2653
0x0000248b      31d2           xor edx, edx
0x0000248d      f644247801     test byte [rsp + 0x78], 1
0x00002492      0f8413ffffff   je 0x23ab
0x00002498      4883c501       add rbp, 1
0x0000249c      e9b7fcffff     jmp 0x2158
0x000024a1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000024a8      837c240802     cmp dword [rsp + 8], 2
0x000024ad      0f94c2         sete dl
0x000024b0      31c0           xor eax, eax
0x000024b2      e9e1fdffff     jmp 0x2298
0x000024b7      660f1f840000.  nop word [rax + rax]
0x000024c0      ba07000000     mov edx, 7
0x000024c5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000024ca      e9d5feffff     jmp 0x23a4
0x000024cf      90             nop
0x000024d0      837c240802     cmp dword [rsp + 8], 2
0x000024d5      0f94c2         sete dl
0x000024d8      4885ed         test rbp, rbp
0x000024db      0f85abfdffff   jne 0x228c
0x000024e1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000024e6      20d0           and al, dl
0x000024e8      0f84aafdffff   je 0x2298
0x000024ee      4c89dd         mov rbp, r11
0x000024f1      c74424080200.  mov dword [rsp + 8], 2
0x000024f9      e9fb060000     jmp 0x2bf9
0x000024fe      6690           nop
0x00002500      837c240802     cmp dword [rsp + 8], 2
0x00002505      0f94c2         sete dl
0x00002508      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000250b      ebd4           jmp 0x24e1
0x0000250d      0f1f00         nop dword [rax]
0x00002510      837c240802     cmp dword [rsp + 8], 2
0x00002515      bb20000000     mov ebx, 0x20                           ; "@"
0x0000251a      0f94c2         sete dl
0x0000251d      ebc2           jmp 0x24e1
0x0000251f      90             nop
0x00002520      ba0d000000     mov edx, 0xd
0x00002525      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000252a      e963feffff     jmp 0x2392
0x0000252f      90             nop
0x00002530      ba0c000000     mov edx, 0xc
0x00002535      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000253a      e965feffff     jmp 0x23a4
0x0000253f      90             nop
0x00002540      ba0b000000     mov edx, 0xb
0x00002545      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000254a      e955feffff     jmp 0x23a4
0x0000254f      90             nop
0x00002550      ba0a000000     mov edx, 0xa
0x00002555      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000255a      e933feffff     jmp 0x2392
0x0000255f      90             nop
0x00002560      4531d2         xor r10d, r10d
0x00002563      0f1f440000     nop dword [rax + rax]
0x00002568      48837c245801   cmp qword [rsp + 0x58], 1
0x0000256e      0f85a4030000   jne 0x2918
0x00002574      4c895c2438     mov qword [rsp + 0x38], r11
0x00002579      4488442430     mov byte [rsp + 0x30], r8b
0x0000257e      4488542428     mov byte [rsp + 0x28], r10b
0x00002583      e8c8eeffff     call sym.imp.__ctype_b_loc
0x00002588      488b08         mov rcx, qword [rax]
0x0000258b      0fb6d3         movzx edx, bl
0x0000258e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002594      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000259a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000259f      bf01000000     mov edi, 1
0x000025a4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000025a8      66250040       and ax, 0x4000
0x000025ac      410f95c4       setne r12b
0x000025b0      0f94c0         sete al
0x000025b3      2244240d       and al, byte [rsp + 0xd]
0x000025b7      84c0           test al, al
0x000025b9      0f8592090000   jne 0x2f51
0x000025bf      837c240802     cmp dword [rsp + 8], 2
0x000025c4      0f94c2         sete dl
0x000025c7      e9ccfcffff     jmp 0x2298
0x000025cc      0f1f4000       nop dword [rax]
0x000025d0      410fb619       movzx ebx, byte [r9]
0x000025d4      80fb7e         cmp bl, 0x7e
0x000025d7      7787           ja 0x2560
0x000025d9      488d0d482800.  lea rcx, [0x00004e28]                   ; "(\xd8\xff\xff8\xd7\xff\xff8\xd7\xff\xff8\xd7\xff\xff8\xd7\xff\xff8\xd7\xff\xff8\xd7\xff\xff\x18\xd8\xff\xffh\xd9\xff\xffP\xd9\xff\xff"
0x000025e0      0fb6d3         movzx edx, bl
0x000025e3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000025e7      4801c8         add rax, rcx
0x000025ea      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000025ec      0f1f4000       nop dword [rax]
0x000025f0      4531d2         xor r10d, r10d
0x000025f3      807c240d00     cmp byte [rsp + 0xd], 0
0x000025f8      0f85f0fdffff   jne 0x23ee
0x000025fe      6690           nop
0x00002600      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002605      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000260a      e995fdffff     jmp 0x23a4
0x0000260f      90             nop
0x00002610      ba0c000000     mov edx, 0xc
0x00002615      4531d2         xor r10d, r10d
0x00002618      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000261d      e982fdffff     jmp 0x23a4
0x00002622      660f1f440000   nop word [rax + rax]
0x00002628      ba0a000000     mov edx, 0xa
0x0000262d      4531d2         xor r10d, r10d
0x00002630      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002635      e958fdffff     jmp 0x2392
0x0000263a      660f1f440000   nop word [rax + rax]
0x00002640      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002645      e9c6fdffff     jmp 0x2410
0x0000264a      660f1f440000   nop word [rax + rax]
0x00002650      4531d2         xor r10d, r10d
0x00002653      837c240802     cmp dword [rsp + 8], 2
0x00002658      0f94c2         sete dl
0x0000265b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002660      0f85940b0000   jne 0x31fa
0x00002666      4489c0         mov eax, r8d
0x00002669      4c89f9         mov rcx, r15
0x0000266c      83f001         xor eax, 1
0x0000266f      20d0           and al, dl
0x00002671      742d           je 0x26a0
0x00002673      4d39fd         cmp r13, r15
0x00002676      7605           jbe 0x267d
0x00002678      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000267d      498d4f01       lea rcx, [r15 + 1]
0x00002681      4939cd         cmp r13, rcx
0x00002684      7606           jbe 0x268c
0x00002686      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000268c      498d4f02       lea rcx, [r15 + 2]
0x00002690      4939cd         cmp r13, rcx
0x00002693      0f8730060000   ja 0x2cc9
0x00002699      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000269d      4189c0         mov r8d, eax
0x000026a0      4939cd         cmp r13, rcx
0x000026a3      7605           jbe 0x26aa
0x000026a5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000026aa      837c240802     cmp dword [rsp + 8], 2
0x000026af      4c8d7901       lea r15, [rcx + 1]
0x000026b3      0f8400060000   je 0x2cb9
0x000026b9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000026bd      4c39d8         cmp rax, r11
0x000026c0      7319           jae 0x26db                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000026c2      488b442410     mov rax, qword [rsp + 0x10]
0x000026c7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000026cc      88442428       mov byte [rsp + 0x28], al
0x000026d0      83e830         sub eax, 0x30
0x000026d3      3c09           cmp al, 9
0x000026d5      0f862e080000   jbe 0x2f09
0x000026db      4489e0         mov eax, r12d
0x000026de      bb30000000     mov ebx, 0x30                           ; '0'
0x000026e3      4531e4         xor r12d, r12d
0x000026e6      e9adfbffff     jmp 0x2298                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000026eb      0f1f440000     nop dword [rax + rax]
0x000026f0      837c240802     cmp dword [rsp + 8], 2
0x000026f5      4589d4         mov r12d, r10d
0x000026f8      0f94c2         sete dl
0x000026fb      4531d2         xor r10d, r10d
0x000026fe      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002700      e993fbffff     jmp 0x2298                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00002705      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002708      837c240802     cmp dword [rsp + 8], 2
0x0000270d      0f94c2         sete dl
0x00002710      4531d2         xor r10d, r10d
0x00002713      e9c0fdffff     jmp 0x24d8
0x00002718      0f1f84000000.  nop dword [rax + rax]
0x00002720      837c240802     cmp dword [rsp + 8], 2
0x00002725      0f94c2         sete dl
0x00002728      4531d2         xor r10d, r10d
0x0000272b      4531e4         xor r12d, r12d
0x0000272e      e9aefdffff     jmp 0x24e1
0x00002733      0f1f440000     nop dword [rax + rax]
0x00002738      837c240802     cmp dword [rsp + 8], 2
0x0000273d      4589d4         mov r12d, r10d
0x00002740      bb20000000     mov ebx, 0x20                           ; "@"
0x00002745      0f94c2         sete dl
0x00002748      4531d2         xor r10d, r10d
0x0000274b      e991fdffff     jmp 0x24e1
0x00002750      ba0d000000     mov edx, 0xd
0x00002755      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00002758      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000275d      e930fcffff     jmp 0x2392
0x00002762      660f1f440000   nop word [rax + rax]
0x00002768      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000276d      e99efcffff     jmp 0x2410
0x00002772      660f1f440000   nop word [rax + rax]
0x00002778      ba09000000     mov edx, 9
0x0000277d      4531d2         xor r10d, r10d
0x00002780      bb74000000     mov ebx, 0x74                           ; 't'
0x00002785      e908fcffff     jmp 0x2392
0x0000278a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00002790      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002795      e976fcffff     jmp 0x2410
0x0000279a      660f1f440000   nop word [rax + rax]
0x000027a0      4531d2         xor r10d, r10d
0x000027a3      e998faffff     jmp 0x2240
0x000027a8      0f1f84000000.  nop dword [rax + rax]
0x000027b0      807c240f00     cmp byte [rsp + 0xf], 0
0x000027b5      0f8565090000   jne 0x3120
0x000027bb      4883c501       add rbp, 1
0x000027bf      4489c0         mov eax, r8d
0x000027c2      4531e4         xor r12d, r12d
0x000027c5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000027ca      e90dfbffff     jmp 0x22dc
0x000027cf      90             nop
0x000027d0      837c240802     cmp dword [rsp + 8], 2
0x000027d5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000027da      4589c4         mov r12d, r8d
0x000027dd      4c89dd         mov rbp, r11
0x000027e0      0f94c2         sete dl
0x000027e3      89d8           mov eax, ebx
0x000027e5      4d85ff         test r15, r15
0x000027e8      0f94c1         sete cl
0x000027eb      21d0           and eax, edx
0x000027ed      20c8           and al, cl
0x000027ef      0f85610a0000   jne 0x3256                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000027f5      89d8           mov eax, ebx
0x000027f7      83f001         xor eax, 1
0x000027fa      20c2           and dl, al
0x000027fc      0f846a090000   je 0x316c
0x00002802      807c247c00     cmp byte [rsp + 0x7c], 0
0x00002807      0f845d090000   je 0x316a
0x0000280d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00002812      0f85f5090000   jne 0x320d
0x00002818      4d85ed         test r13, r13
0x0000281b      0f94c0         sete al
0x0000281e      48837c245000   cmp qword [rsp + 0x50], 0
0x00002824      0f95c2         setne dl
0x00002827      20d0           and al, dl
0x00002829      0f841d0a0000   je 0x324c
0x0000282f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002834      488d1d722300.  lea rbx, [0x00004bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2"
0x0000283b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000283f      c74424080200.  mov dword [rsp + 8], 2
0x00002847      41bf01000000   mov r15d, 1
0x0000284d      48c744241801.  mov qword [rsp + 0x18], 1
0x00002856      c644240f00     mov byte [rsp + 0xf], 0
0x0000285b      48895c2448     mov qword [rsp + 0x48], rbx
0x00002860      8844247c       mov byte [rsp + 0x7c], al
0x00002864      e9daf8ffff     jmp 0x2143
0x00002869      0f1f80000000.  nop dword [rax]
0x00002870      807c240f00     cmp byte [rsp + 0xf], 0
0x00002875      0f85a5080000   jne 0x3120
0x0000287b      4d85ed         test r13, r13
0x0000287e      0f84fc030000   je 0x2c80                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00002884      31d2           xor edx, edx
0x00002886      48837c245000   cmp qword [rsp + 0x50], 0
0x0000288c      0f85ee030000   jne 0x2c80                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002892      4c896c2450     mov qword [rsp + 0x50], r13
0x00002897      4983c703       add r15, 3
0x0000289b      31c0           xor eax, eax
0x0000289d      448864247c     mov byte [rsp + 0x7c], r12b
0x000028a2      4531c0         xor r8d, r8d
0x000028a5      4989d5         mov r13, rdx
0x000028a8      bb27000000     mov ebx, 0x27                           ; '''
0x000028ad      e917faffff     jmp 0x22c9
0x000028b2      660f1f440000   nop word [rax + rax]
0x000028b8      f644247804     test byte [rsp + 0x78], 4
0x000028bd      7421           je 0x28e0
0x000028bf      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000028c3      4c39d9         cmp rcx, r11
0x000028c6      7318           jae 0x28e0
0x000028c8      488b442410     mov rax, qword [rsp + 0x10]
0x000028cd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000028d2      0f848a070000   je 0x3062
0x000028d8      0f1f84000000.  nop dword [rax + rax]
0x000028e0      31d2           xor edx, edx
0x000028e2      4531e4         xor r12d, r12d
0x000028e5      31c0           xor eax, eax
0x000028e7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000028ec      e9a7f9ffff     jmp 0x2298
0x000028f1      0f1f80000000.  nop dword [rax]
0x000028f8      807c240f00     cmp byte [rsp + 0xf], 0
0x000028fd      0f851d080000   jne 0x3120
0x00002903      4531e4         xor r12d, r12d
0x00002906      31c0           xor eax, eax
0x00002908      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000290d      e9b7f9ffff     jmp 0x22c9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00002912      660f1f440000   nop word [rax + rax]
0x00002918      488d8424a000.  lea rax, [rsp + 0xa0]
0x00002920      4983fbff       cmp r11, 0xffffffffffffffff
0x00002924      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00002930      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00002935      752d           jne 0x2964
0x00002937      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000293c      4488442440     mov byte [rsp + 0x40], r8b
0x00002941      4488542438     mov byte [rsp + 0x38], r10b
0x00002946      4c894c2430     mov qword [rsp + 0x30], r9
0x0000294b      e850e9ffff     call sym.imp.strlen
0x00002950      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00002956      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000295c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000295f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002964      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000296c      31c9           xor ecx, ecx
0x0000296e      885c247e       mov byte [rsp + 0x7e], bl
0x00002972      448844247d     mov byte [rsp + 0x7d], r8b
0x00002977      4889cb         mov rbx, rcx
0x0000297a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00002982      4889442438     mov qword [rsp + 0x38], rax
0x00002987      448854247f     mov byte [rsp + 0x7f], r10b
0x0000298c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00002994      4c89742440     mov qword [rsp + 0x40], r14
0x00002999      4c896c2470     mov qword [rsp + 0x70], r13
0x0000299e      4c895c2430     mov qword [rsp + 0x30], r11
0x000029a3      488b442410     mov rax, qword [rsp + 0x10]
0x000029a8      4c8d741d00     lea r14, [rbp + rbx]
0x000029ad      488b542430     mov rdx, qword [rsp + 0x30]
0x000029b2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000029b7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000029bc      4e8d2c30       lea r13, [rax + r14]
0x000029c0      4c29f2         sub rdx, r14
0x000029c3      4c89ee         mov rsi, r13
0x000029c6      e8551b0000     call sym.rpl_mbrtowc
0x000029cb      4885c0         test rax, rax
0x000029ce      4989c7         mov r15, rax
0x000029d1      744e           je 0x2a21
0x000029d3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000029d7      0f8418060000   je 0x2ff5
0x000029dd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000029e1      0f849a050000   je 0x2f81
0x000029e7      837c240802     cmp dword [rsp + 8], 2
0x000029ec      0f94c0         sete al
0x000029ef      2244240f       and al, byte [rsp + 0xf]
0x000029f3      0f8597010000   jne 0x2b90
0x000029f9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00002a00      e83beaffff     call sym.imp.iswprint
0x00002a05      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002a0a      85c0           test eax, eax
0x00002a0c      b800000000     mov eax, 0
0x00002a11      440f44e0       cmove r12d, eax
0x00002a15      4c01fb         add rbx, r15
0x00002a18      e813eaffff     call sym.imp.mbsinit
0x00002a1d      85c0           test eax, eax
0x00002a1f      7482           je 0x29a3
0x00002a21      4489e2         mov edx, r12d
0x00002a24      4889df         mov rdi, rbx
0x00002a27      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002a2d      83f201         xor edx, 1
0x00002a30      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00002a35      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00002a3b      2254240d       and dl, byte [rsp + 0xd]
0x00002a3f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002a47      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002a4c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002a51      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00002a56      4883ff01       cmp rdi, 1
0x00002a5a      0f86fb050000   jbe 0x305b
0x00002a60      4889f9         mov rcx, rdi
0x00002a63      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00002a65      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00002a6b      4801e9         add rcx, rbp
0x00002a6e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002a73      e9b6000000     jmp 0x2b2e
0x00002a78      0f1f84000000.  nop dword [rax + rax]
0x00002a80      837c240802     cmp dword [rsp + 8], 2
0x00002a85      0f94c0         sete al
0x00002a88      4584c9         test r9b, r9b
0x00002a8b      0f85af040000   jne 0x2f40
0x00002a91      4489c6         mov esi, r8d
0x00002a94      83f601         xor esi, 1
0x00002a97      4020f0         and al, sil
0x00002a9a      742f           je 0x2acb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00002a9c      4d39fd         cmp r13, r15
0x00002a9f      7605           jbe 0x2aa6
0x00002aa1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002aa6      498d7701       lea rsi, [r15 + 1]
0x00002aaa      4939f5         cmp r13, rsi
0x00002aad      7606           jbe 0x2ab5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00002aaf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002ab5      498d7702       lea rsi, [r15 + 2]
0x00002ab9      4939f5         cmp r13, rsi
0x00002abc      7606           jbe 0x2ac4
0x00002abe      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002ac4      4983c703       add r15, 3
0x00002ac8      4189c0         mov r8d, eax
0x00002acb      4d39fd         cmp r13, r15
0x00002ace      7605           jbe 0x2ad5
0x00002ad0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002ad5      498d4701       lea rax, [r15 + 1]
0x00002ad9      4939c5         cmp r13, rax
0x00002adc      760d           jbe 0x2aeb
0x00002ade      89d8           mov eax, ebx
0x00002ae0      c0e806         shr al, 6
0x00002ae3      83c030         add eax, 0x30
0x00002ae6      4388443e01     mov byte [r14 + r15 + 1], al
0x00002aeb      498d4702       lea rax, [r15 + 2]
0x00002aef      4939c5         cmp r13, rax
0x00002af2      7610           jbe 0x2b04
0x00002af4      89d8           mov eax, ebx
0x00002af6      c0e803         shr al, 3
0x00002af9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00002afc      83c030         add eax, 0x30
0x00002aff      4388443e02     mov byte [r14 + r15 + 2], al
0x00002b04      83e307         and ebx, 7
0x00002b07      4883c501       add rbp, 1
0x00002b0b      4983c703       add r15, 3
0x00002b0f      83c330         add ebx, 0x30
0x00002b12      4839cd         cmp rbp, rcx
0x00002b15      0f83e5f7ffff   jae 0x2300
0x00002b1b      89d6           mov esi, edx
0x00002b1d      4d39fd         cmp r13, r15
0x00002b20      7604           jbe 0x2b26
0x00002b22      43881c3e       mov byte [r14 + r15], bl
0x00002b26      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00002b2a      4983c701       add r15, 1
0x00002b2e      84d2           test dl, dl
0x00002b30      0f854affffff   jne 0x2a80
0x00002b36      89f0           mov eax, esi
0x00002b38      83f001         xor eax, 1
0x00002b3b      4421c0         and eax, r8d
0x00002b3e      4584d2         test r10b, r10b
0x00002b41      740e           je 0x2b51
0x00002b43      4d39fd         cmp r13, r15
0x00002b46      7605           jbe 0x2b4d
0x00002b48      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002b4d      4983c701       add r15, 1
0x00002b51      4883c501       add rbp, 1
0x00002b55      4839cd         cmp rbp, rcx
0x00002b58      0f837ef7ffff   jae 0x22dc
0x00002b5e      84c0           test al, al
0x00002b60      0f84f8030000   je 0x2f5e
0x00002b66      4d39fd         cmp r13, r15
0x00002b69      7605           jbe 0x2b70
0x00002b6b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002b70      498d4701       lea rax, [r15 + 1]
0x00002b74      4939c5         cmp r13, rax
0x00002b77      7606           jbe 0x2b7f
0x00002b79      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002b7f      4983c702       add r15, 2
0x00002b83      4531d2         xor r10d, r10d
0x00002b86      4531c0         xor r8d, r8d
0x00002b89      eb92           jmp 0x2b1d
0x00002b8b      0f1f440000     nop dword [rax + rax]
0x00002b90      4983ff01       cmp r15, 1
0x00002b94      0f845ffeffff   je 0x29f9
0x00002b9a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002b9f      4a8d0c3f       lea rcx, [rdi + r15]
0x00002ba3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00002ba8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00002bac      eb0f           jmp 0x2bbd
0x00002bae      6690           nop
0x00002bb0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00002bb4      4939d0         cmp r8, rdx
0x00002bb7      0f843cfeffff   je 0x29f9
0x00002bbd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00002bc0      83e95b         sub ecx, 0x5b
0x00002bc3      80f921         cmp cl, 0x21
0x00002bc6      77e8           ja 0x2bb0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00002bc8      be01000000     mov esi, 1
0x00002bcd      48d3e6         shl rsi, cl
0x00002bd0      4889f1         mov rcx, rsi
0x00002bd3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00002bdd      4885f1         test rcx, rsi
0x00002be0      74ce           je 0x2bb0
0x00002be2      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002be7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002bec      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00002bf1      c74424080200.  mov dword [rsp + 8], 2
0x00002bf9      807c240d00     cmp byte [rsp + 0xd], 0
0x00002bfe      7410           je 0x2c10
0x00002c00      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00002c02      b804000000     mov eax, 4
0x00002c07      0f44442408     cmove eax, dword [rsp + 8]
0x00002c0c      89442408       mov dword [rsp + 8], eax
0x00002c10      4883ec08       sub rsp, 8
0x00002c14      4889e9         mov rcx, rbp
0x00002c17      4c89ee         mov rsi, r13
0x00002c1a      ff742468       push qword [rsp + 0x68]
0x00002c1e      ff742478       push qword [rsp + 0x78]
0x00002c22      4c89f7         mov rdi, r14
0x00002c25      6a00           push 0
0x00002c27      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00002c2f      448b442428     mov r8d, dword [rsp + 0x28]
0x00002c34      488b542430     mov rdx, qword [rsp + 0x30]
0x00002c39      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00002c3d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00002c42      4883c420       add rsp, 0x20
0x00002c46      4989c7         mov r15, rax
0x00002c49      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00002c51      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002c5a      4c89f8         mov rax, r15
0x00002c5d      0f8500060000   jne 0x3263
0x00002c63      4881c4b80000.  add rsp, 0xb8
0x00002c6a      5b             pop rbx
0x00002c6b      5d             pop rbp
0x00002c6c      415c           pop r12
0x00002c6e      415d           pop r13
0x00002c70      415e           pop r14
0x00002c72      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00002c74      c3             ret
0x00002c75      0f1f00         nop dword [rax]
0x00002c78      4c89dd         mov rbp, r11
0x00002c7b      e979ffffff     jmp 0x2bf9
0x00002c80      4d39fd         cmp r13, r15
0x00002c83      7605           jbe 0x2c8a
0x00002c85      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002c8a      498d4701       lea rax, [r15 + 1]
0x00002c8e      4939c5         cmp r13, rax
0x00002c91      7606           jbe 0x2c99
0x00002c93      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00002c99      498d4702       lea rax, [r15 + 2]
0x00002c9d      4939c5         cmp r13, rax
0x00002ca0      0f86ec050000   jbe 0x3292
0x00002ca6      4c89ea         mov rdx, r13
0x00002ca9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002caf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002cb4      e9d9fbffff     jmp 0x2892
0x00002cb9      4489e0         mov eax, r12d
0x00002cbc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00002cc1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00002cc4      e900f6ffff     jmp 0x22c9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00002cc9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002ccf      e9c5f9ffff     jmp 0x2699
0x00002cd4      85db           test ebx, ebx
0x00002cd6      0f8527f4ffff   jne 0x2103
0x00002cdc      c644240d01     mov byte [rsp + 0xd], 1
0x00002ce1      4d85ed         test r13, r13
0x00002ce4      0f8590050000   jne 0x327a
0x00002cea      488d05bc1e00.  lea rax, [0x00004bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2"
0x00002cf1      48c744245000.  mov qword [rsp + 0x50], 0
0x00002cfa      c644240e01     mov byte [rsp + 0xe], 1
0x00002cff      c644247c00     mov byte [rsp + 0x7c], 0
0x00002d04      4531e4         xor r12d, r12d
0x00002d07      c644240f00     mov byte [rsp + 0xf], 0
0x00002d0c      48c744241801.  mov qword [rsp + 0x18], 1
0x00002d15      4889442448     mov qword [rsp + 0x48], rax
0x00002d1a      41bf01000000   mov r15d, 1
0x00002d20      c74424080200.  mov dword [rsp + 8], 2
0x00002d28      e916f4ffff     jmp 0x2143                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00002d2d      0f1f00         nop dword [rax]
0x00002d30      85db           test ebx, ebx
0x00002d32      0f85f5030000   jne 0x312d
0x00002d38      4d85ed         test r13, r13
0x00002d3b      0f8425020000   je 0x2f66
0x00002d41      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00002d45      c644240e01     mov byte [rsp + 0xe], 1
0x00002d4a      4531e4         xor r12d, r12d
0x00002d4d      c644247c00     mov byte [rsp + 0x7c], 0
0x00002d52      48c744245000.  mov qword [rsp + 0x50], 0
0x00002d5b      488d05491e00.  lea rax, str.l______l                   ; 0x4bab ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2\u54ff\uffd8\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u94ff\uffd8\u9cff\uffd7\u5cff\uffd7\u24ff\uffd9\u14ff\uffd9\u04ff\uffd9\uf4ff\uffd8\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\ue4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ua4ff\uffd8\ud4ff\uffd8\u7cff\uffd8\ud4ff\uffd8\u37ff\uffd7\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\u07ff\uffd7\u3cff\uffd9\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\ud4ff\uffd8\uacff\uffd7\u7cff\uffd8\ud4ff\uffd8\u7cff\uffd8\ud4ff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u37ff\uffd6\ud4ff\uffd8\u37ff\uffd6\ua4ff\uffd8\u28ff\uffd8\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u18ff\uffd8\u68ff\uffd9\u50ff\uffd9\xff\uffd8\u40ff\uffd9\ue8ff\uffd7\u28ff\uffd9\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u10ff\uffd9\U010003d8\U010003d8\ue0ff\uffd8\U010003d8\uc8ff\uffd8\U010003d8\u38ff\uffd5\U010003d8\U010003d8\U010003d8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\U010003d8\U010003d8\U010003d8\U010003d8\u08ff\uffd5\u38ff\uffd7\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\U010003d8\uc8ff\uffd7\uc8ff\uffd8\U010003d8\uc8ff\uffd8\U010003d8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\u38ff\uffd4\U010003d8\u38ff\uffd4\ue0ff\uffd8\xff"
0x00002d62      c644240f00     mov byte [rsp + 0xf], 0
0x00002d67      c644240d01     mov byte [rsp + 0xd], 1
0x00002d6c      48c744241801.  mov qword [rsp + 0x18], 1
0x00002d75      41bf01000000   mov r15d, 1
0x00002d7b      4889442448     mov qword [rsp + 0x48], rax
0x00002d80      e9bef3ffff     jmp 0x2143
0x00002d85      488d051f1e00.  lea rax, str.l______l                   ; 0x4bab ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2\u54ff\uffd8\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u94ff\uffd8\u9cff\uffd7\u5cff\uffd7\u24ff\uffd9\u14ff\uffd9\u04ff\uffd9\uf4ff\uffd8\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\ue4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ua4ff\uffd8\ud4ff\uffd8\u7cff\uffd8\ud4ff\uffd8\u37ff\uffd7\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\u07ff\uffd7\u3cff\uffd9\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\ud4ff\uffd8\uacff\uffd7\u7cff\uffd8\ud4ff\uffd8\u7cff\uffd8\ud4ff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u37ff\uffd6\ud4ff\uffd8\u37ff\uffd6\ua4ff\uffd8\u28ff\uffd8\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u18ff\uffd8\u68ff\uffd9\u50ff\uffd9\xff\uffd8\u40ff\uffd9\ue8ff\uffd7\u28ff\uffd9\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u10ff\uffd9\U010003d8\U010003d8\ue0ff\uffd8\U010003d8\uc8ff\uffd8\U010003d8\u38ff\uffd5\U010003d8\U010003d8\U010003d8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\U010003d8\U010003d8\U010003d8\U010003d8\u08ff\uffd5\u38ff\uffd7\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\U010003d8\uc8ff\uffd7\uc8ff\uffd8\U010003d8\uc8ff\uffd8\U010003d8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\u38ff\uffd4\U010003d8\u38ff\uffd4\ue0ff\uffd8\xff"
0x00002d8c      c644240e01     mov byte [rsp + 0xe], 1
0x00002d91      c644247c00     mov byte [rsp + 0x7c], 0
0x00002d96      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00002d99      48c744245000.  mov qword [rsp + 0x50], 0
0x00002da2      c644240f01     mov byte [rsp + 0xf], 1
0x00002da7      c644240d01     mov byte [rsp + 0xd], 1
0x00002dac      48c744241801.  mov qword [rsp + 0x18], 1
0x00002db5      4531ff         xor r15d, r15d
0x00002db8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00002dbd      c74424080500.  mov dword [rsp + 8], 5
0x00002dc5      e979f3ffff     jmp 0x2143
0x00002dca      c644240e01     mov byte [rsp + 0xe], 1
0x00002dcf      c644247c00     mov byte [rsp + 0x7c], 0
0x00002dd4      4531e4         xor r12d, r12d
0x00002dd7      48c744245000.  mov qword [rsp + 0x50], 0
0x00002de0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00002de5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00002de8      c644240d01     mov byte [rsp + 0xd], 1
0x00002ded      48c744241800.  mov qword [rsp + 0x18], 0
0x00002df6      48c744244800.  mov qword [rsp + 0x48], 0
0x00002dff      e93ff3ffff     jmp 0x2143
0x00002e04      837c24080a     cmp dword [rsp + 8], 0xa
0x00002e09      7456           je 0x2e61
0x00002e0b      488d359d1d00.  lea rsi, [0x00004baf]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00002e12      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00002e14      ba05000000     mov edx, 5
0x00002e19      e862e4ffff     call sym.imp.dcgettext
0x00002e1e      4889c1         mov rcx, rax
0x00002e21      4889442468     mov qword [rsp + 0x68], rax
0x00002e26      488d05821d00.  lea rax, [0x00004baf]                   ; "`"
0x00002e2d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00002e30      0f8498030000   je 0x31ce
0x00002e36      488d35701d00.  lea rsi, [0x00004bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2"
0x00002e3d      31ff           xor edi, edi
0x00002e3f      ba05000000     mov edx, 5
0x00002e44      e837e4ffff     call sym.imp.dcgettext
0x00002e49      4889c1         mov rcx, rax
0x00002e4c      4889442460     mov qword [rsp + 0x60], rax
0x00002e51      488d05551d00.  lea rax, [0x00004bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2"
0x00002e58      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00002e5b      0f8483030000   je 0x31e4
0x00002e61      4531ff         xor r15d, r15d
0x00002e64      85db           test ebx, ebx
0x00002e66      0f84c1010000   je 0x302d
0x00002e6c      85db           test ebx, ebx
0x00002e6e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00002e73      0f9544240f     setne byte [rsp + 0xf]
0x00002e78      4531e4         xor r12d, r12d
0x00002e7b      4889df         mov rdi, rbx
0x00002e7e      e81de4ffff     call sym.imp.strlen
0x00002e83      48895c2448     mov qword [rsp + 0x48], rbx
0x00002e88      4889442418     mov qword [rsp + 0x18], rax
0x00002e8d      c644240e01     mov byte [rsp + 0xe], 1
0x00002e92      c644247c00     mov byte [rsp + 0x7c], 0
0x00002e97      48c744245000.  mov qword [rsp + 0x50], 0
0x00002ea0      c644240d01     mov byte [rsp + 0xd], 1
0x00002ea5      e999f2ffff     jmp 0x2143
0x00002eaa      c644240e01     mov byte [rsp + 0xe], 1
0x00002eaf      c644247c00     mov byte [rsp + 0x7c], 0
0x00002eb4      4531e4         xor r12d, r12d
0x00002eb7      48c744245000.  mov qword [rsp + 0x50], 0
0x00002ec0      c644240f00     mov byte [rsp + 0xf], 0
0x00002ec5      4531ff         xor r15d, r15d
0x00002ec8      c644240d00     mov byte [rsp + 0xd], 0
0x00002ecd      48c744241800.  mov qword [rsp + 0x18], 0
0x00002ed6      48c744244800.  mov qword [rsp + 0x48], 0
0x00002edf      e95ff2ffff     jmp 0x2143
0x00002ee4      c644240e01     mov byte [rsp + 0xe], 1
0x00002ee9      c644247c00     mov byte [rsp + 0x7c], 0
0x00002eee      4531e4         xor r12d, r12d
0x00002ef1      48c744245000.  mov qword [rsp + 0x50], 0
0x00002efa      c644240f01     mov byte [rsp + 0xf], 1
0x00002eff      c644240d01     mov byte [rsp + 0xd], 1
0x00002f04      e91af2ffff     jmp 0x2123
0x00002f09      4d39fd         cmp r13, r15
0x00002f0c      7605           jbe 0x2f13
0x00002f0e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00002f13      488d4102       lea rax, [rcx + 2]
0x00002f17      4939c5         cmp r13, rax
0x00002f1a      7606           jbe 0x2f22
0x00002f1c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00002f22      4489e0         mov eax, r12d
0x00002f25      4c8d7903       lea r15, [rcx + 3]
0x00002f29      4531e4         xor r12d, r12d
0x00002f2c      bb30000000     mov ebx, 0x30                           ; '0'
0x00002f31      e962f3ffff     jmp 0x2298
0x00002f36      662e0f1f8400.  nop word cs:[rax + rax]
0x00002f40      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00002f45      4c89dd         mov rbp, r11
0x00002f48      885c240d       mov byte [rsp + 0xd], bl
0x00002f4c      e9a8fcffff     jmp 0x2bf9
0x00002f51      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00002f56      4531e4         xor r12d, r12d
0x00002f59      e902fbffff     jmp 0x2a60
0x00002f5e      4531d2         xor r10d, r10d
0x00002f61      e9b7fbffff     jmp 0x2b1d
0x00002f66      48c744245000.  mov qword [rsp + 0x50], 0
0x00002f6f      c644240e01     mov byte [rsp + 0xe], 1
0x00002f74      4531e4         xor r12d, r12d
0x00002f77      c644247c00     mov byte [rsp + 0x7c], 0
0x00002f7c      e9dafdffff     jmp 0x2d5b
0x00002f81      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00002f86      4c89f6         mov rsi, r14
0x00002f89      4c89e9         mov rcx, r13
0x00002f8c      4889d8         mov rax, rbx
0x00002f8f      4889df         mov rdi, rbx
0x00002f92      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002f98      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00002f9d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00002fa5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00002fa8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00002fae      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002fb6      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002fbb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002fc0      7326           jae 0x2fe8
0x00002fc2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00002fc5      7510           jne 0x2fd7
0x00002fc7      eb1f           jmp 0x2fe8
0x00002fc9      0f1f80000000.  nop dword [rax]
0x00002fd0      41803c0100     cmp byte [r9 + rax], 0
0x00002fd5      740e           je 0x2fe5
0x00002fd7      4883c001       add rax, 1
0x00002fdb      488d540500     lea rdx, [rbp + rax]
0x00002fe0      4939d3         cmp r11, rdx
0x00002fe3      77eb           ja 0x2fd0
0x00002fe5      4889c7         mov rdi, rax
0x00002fe8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00002fed      4531e4         xor r12d, r12d
0x00002ff0      e961faffff     jmp 0x2a56
0x00002ff5      4889df         mov rdi, rbx
0x00002ff8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002ffe      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003003      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003009      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003011      4531e4         xor r12d, r12d
0x00003014      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003019      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000301e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003023      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003028      e929faffff     jmp 0x2a56
0x0000302d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003032      0fb602         movzx eax, byte [rdx]
0x00003035      84c0           test al, al
0x00003037      0f842ffeffff   je 0x2e6c
0x0000303d      0f1f00         nop dword [rax]
0x00003040      4d39fd         cmp r13, r15
0x00003043      7604           jbe 0x3049
0x00003045      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003049      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000304d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003052      84c0           test al, al
0x00003054      75ea           jne 0x3040
0x00003056      e911feffff     jmp 0x2e6c
0x0000305b      89d0           mov eax, edx
0x0000305d      e955f5ffff     jmp 0x25b7
0x00003062      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003066      80fb3e         cmp bl, 0x3e
0x00003069      0f8771f8ffff   ja 0x28e0
0x0000306f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003079      480fa3d8       bt rax, rbx
0x0000307d      0f835df8ffff   jae 0x28e0
0x00003083      807c240f00     cmp byte [rsp + 0xf], 0
0x00003088      0f85e4010000   jne 0x3272                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000308e      4d39fd         cmp r13, r15
0x00003091      7605           jbe 0x3098
0x00003093      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003098      498d4701       lea rax, [r15 + 1]
0x0000309c      4939c5         cmp r13, rax
0x0000309f      7606           jbe 0x30a7
0x000030a1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000030a7      498d4702       lea rax, [r15 + 2]
0x000030ab      4939c5         cmp r13, rax
0x000030ae      7606           jbe 0x30b6
0x000030b0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000030b6      498d4703       lea rax, [r15 + 3]
0x000030ba      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000030bd      7606           jbe 0x30c5
0x000030bf      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000030c5      4983c704       add r15, 4
0x000030c9      31d2           xor edx, edx
0x000030cb      4531e4         xor r12d, r12d
0x000030ce      31c0           xor eax, eax
0x000030d0      4889cd         mov rbp, rcx
0x000030d3      e9c0f1ffff     jmp 0x2298
0x000030d8      85db           test ebx, ebx
0x000030da      0f8488010000   je 0x3268
0x000030e0      488d05c61a00.  lea rax, [0x00004bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2"
0x000030e7      c644240e01     mov byte [rsp + 0xe], 1
0x000030ec      c644247c00     mov byte [rsp + 0x7c], 0
0x000030f1      4531e4         xor r12d, r12d
0x000030f4      48c744245000.  mov qword [rsp + 0x50], 0
0x000030fd      c644240f01     mov byte [rsp + 0xf], 1
0x00003102      c644240d00     mov byte [rsp + 0xd], 0
0x00003107      48c744241801.  mov qword [rsp + 0x18], 1
0x00003110      4531ff         xor r15d, r15d
0x00003113      4889442448     mov qword [rsp + 0x48], rax
0x00003118      e926f0ffff     jmp 0x2143
0x0000311d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003120      4c89dd         mov rbp, r11
0x00003123      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003128      e9ccfaffff     jmp 0x2bf9
0x0000312d      488d05771a00.  lea rax, str.l______l                   ; 0x4bab ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe2\u03ff\uffd5\U010003e4\ue4ff\uffe2\ud4ff\uffe0\u30ff\uffe1\u85ff\uffe1\ucaff\uffe1\u04ff\uffe2\u04ff\uffe2\u04ff\uffe2\u54ff\uffd8\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u94ff\uffd8\u9cff\uffd7\u5cff\uffd7\u24ff\uffd9\u14ff\uffd9\u04ff\uffd9\uf4ff\uffd8\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\u3cff\uffd9\ue4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ua4ff\uffd8\ud4ff\uffd8\u7cff\uffd8\ud4ff\uffd8\u37ff\uffd7\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\ud4ff\uffd8\u07ff\uffd7\u3cff\uffd9\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\ud4ff\uffd8\uacff\uffd7\u7cff\uffd8\ud4ff\uffd8\u7cff\uffd8\ud4ff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u7cff\uffd8\u37ff\uffd6\ud4ff\uffd8\u37ff\uffd6\ua4ff\uffd8\u28ff\uffd8\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u18ff\uffd8\u68ff\uffd9\u50ff\uffd9\xff\uffd8\u40ff\uffd9\ue8ff\uffd7\u28ff\uffd9\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u10ff\uffd9\U010003d8\U010003d8\ue0ff\uffd8\U010003d8\uc8ff\uffd8\U010003d8\u38ff\uffd5\U010003d8\U010003d8\U010003d8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\U010003d8\U010003d8\U010003d8\U010003d8\u08ff\uffd5\u38ff\uffd7\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\U010003d8\uc8ff\uffd7\uc8ff\uffd8\U010003d8\uc8ff\uffd8\U010003d8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\uc8ff\uffd8\u38ff\uffd4\U010003d8\u38ff\uffd4\ue0ff\uffd8\xff"
0x00003134      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003139      c644247c00     mov byte [rsp + 0x7c], 0
0x0000313e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003141      48c744245000.  mov qword [rsp + 0x50], 0
0x0000314a      c644240f01     mov byte [rsp + 0xf], 1
0x0000314f      c644240d01     mov byte [rsp + 0xd], 1
0x00003154      48c744241801.  mov qword [rsp + 0x18], 1
0x0000315d      4531ff         xor r15d, r15d
0x00003160      4889442448     mov qword [rsp + 0x48], rax
0x00003165      e9d9efffff     jmp 0x2143
0x0000316a      89d0           mov eax, edx
0x0000316c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003171      4885db         test rbx, rbx
0x00003174      742c           je 0x31a2
0x00003176      84c0           test al, al
0x00003178      7428           je 0x31a2
0x0000317a      0fb60b         movzx ecx, byte [rbx]
0x0000317d      4889d8         mov rax, rbx
0x00003180      84c9           test cl, cl
0x00003182      741e           je 0x31a2
0x00003184      4c89fa         mov rdx, r15
0x00003187      4c29f8         sub rax, r15
0x0000318a      4939d5         cmp r13, rdx
0x0000318d      7604           jbe 0x3193
0x0000318f      41880c16       mov byte [r14 + rdx], cl
0x00003193      4883c201       add rdx, 1
0x00003197      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000319b      84c9           test cl, cl
0x0000319d      75eb           jne 0x318a
0x0000319f      4989d7         mov r15, rdx
0x000031a2      4d39fd         cmp r13, r15
0x000031a5      0f869efaffff   jbe 0x2c49
0x000031ab      43c6043e00     mov byte [r14 + r15], 0
0x000031b0      e994faffff     jmp 0x2c49
0x000031b5      837c240802     cmp dword [rsp + 8], 2
0x000031ba      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000031bf      4c89dd         mov rbp, r11
0x000031c2      0f94c0         sete al
0x000031c5      885c240d       mov byte [rsp + 0xd], bl
0x000031c9      e92bfaffff     jmp 0x2bf9
0x000031ce      8b742408       mov esi, dword [rsp + 8]
0x000031d2      4889cf         mov rdi, rcx
0x000031d5      e8a6edffff     call sym.gettext_quote.part.1
0x000031da      4889442468     mov qword [rsp + 0x68], rax
0x000031df      e952fcffff     jmp 0x2e36
0x000031e4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000031e8      4889cf         mov rdi, rcx
0x000031eb      e890edffff     call sym.gettext_quote.part.1
0x000031f0      4889442460     mov qword [rsp + 0x60], rax
0x000031f5      e967fcffff     jmp 0x2e61
0x000031fa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000031ff      4c89dd         mov rbp, r11
0x00003202      89d0           mov eax, edx
0x00003204      885c240d       mov byte [rsp + 0xd], bl
0x00003208      e9ecf9ffff     jmp 0x2bf9
0x0000320d      4883ec08       sub rsp, 8
0x00003211      41b805000000   mov r8d, 5
0x00003217      4c89d9         mov rcx, r11
0x0000321a      ff742468       push qword [rsp + 0x68]
0x0000321e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003222      4c89f7         mov rdi, r14
0x00003225      ff742438       push qword [rsp + 0x38]
0x00003229      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003231      488b542430     mov rdx, qword [rsp + 0x30]
0x00003236      488b742470     mov rsi, qword [rsp + 0x70]
0x0000323b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003240      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003244      4989c7         mov r15, rax
0x00003247      e9fdf9ffff     jmp 0x2c49
0x0000324c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003251      e916ffffff     jmp 0x316c
0x00003256      c74424080200.  mov dword [rsp + 8], 2
0x0000325e      e996f9ffff     jmp 0x2bf9
0x00003263      e848e0ffff     call sym.imp.__stack_chk_fail
0x00003268      c644240d00     mov byte [rsp + 0xd], 0
0x0000326d      e96ffaffff     jmp 0x2ce1
0x00003272      4c89dd         mov rbp, r11
0x00003275      e996f9ffff     jmp 0x2c10
0x0000327a      c644240e01     mov byte [rsp + 0xe], 1
0x0000327f      31c0           xor eax, eax
0x00003281      4531e4         xor r12d, r12d
0x00003284      48c744245000.  mov qword [rsp + 0x50], 0
0x0000328d      e9a2f5ffff     jmp 0x2834
0x00003292      4c89ea         mov rdx, r13
0x00003295      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000329a      e9f3f5ffff     jmp 0x2892
0x0000329f      e84cdfffff     call sym.imp.abort
0x000032a4      6690           nop
0x000032a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000032b0      4157           push r15
0x000032b2      4156           push r14
0x000032b4      4c63ff         movsxd r15, edi
0x000032b7      4155           push r13
0x000032b9      4154           push r12
0x000032bb      4989d6         mov r14, rdx
0x000032be      55             push rbp
0x000032bf      53             push rbx
0x000032c0      4889cd         mov rbp, rcx
0x000032c3      4883ec28       sub rsp, 0x28
0x000032c7      4889742408     mov qword [rsp + 8], rsi
0x000032cc      e82fdfffff     call sym.imp.__errno_location
0x000032d1      4989c5         mov r13, rax
0x000032d4      8b00           mov eax, dword [rax]
0x000032d6      4585ff         test r15d, r15d
0x000032d9      488b1d803d20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x000032e0      89442418       mov dword [rsp + 0x18], eax
0x000032e4      0f8867010000   js 0x3451
0x000032ea      44393d673d20.  cmp dword [obj.nslots], r15d            ; [0x207058:4]=1
0x000032f1      7f62           jg 0x3355
0x000032f3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000032fa      0f8456010000   je 0x3456
0x00003300      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003304      488d05653d20.  lea rax, obj.slotvec0                   ; 0x207070
0x0000330b      4963f4         movsxd rsi, r12d
0x0000330e      48c1e604       shl rsi, 4
0x00003312      4839c3         cmp rbx, rax
0x00003315      0f8415010000   je 0x3430
0x0000331b      4889df         mov rdi, rbx
0x0000331e      e8cd0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003323      4889c3         mov rbx, rax
0x00003326      488905333d20.  mov qword [obj.slotvec], rax            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x0000332d      48633d243d20.  movsxd rdi, dword [obj.nslots]          ; [0x207058:4]=1
0x00003334      4489e2         mov edx, r12d
0x00003337      31f6           xor esi, esi
0x00003339      29fa           sub edx, edi
0x0000333b      48c1e704       shl rdi, 4
0x0000333f      4863d2         movsxd rdx, edx
0x00003342      4801df         add rdi, rbx
0x00003345      48c1e204       shl rdx, 4
0x00003349      e8b2dfffff     call sym.imp.memset
0x0000334e      448925033d20.  mov dword [obj.nslots], r12d            ; [0x207058:4]=1
0x00003355      8b4504         mov eax, dword [rbp + 4]
0x00003358      49c1e704       shl r15, 4
0x0000335c      4883ec08       sub rsp, 8
0x00003360      4c01fb         add rbx, r15
0x00003363      4c8d7d08       lea r15, [rbp + 8]
0x00003367      448b4500       mov r8d, dword [rbp]
0x0000336b      4c8b1b         mov r11, qword [rbx]
0x0000336e      4c8b6308       mov r12, qword [rbx + 8]
0x00003372      4c89f1         mov rcx, r14
0x00003375      83c801         or eax, 1
0x00003378      89442424       mov dword [rsp + 0x24], eax
0x0000337c      ff7530         push qword [rbp + 0x30]
0x0000337f      4189c1         mov r9d, eax
0x00003382      ff7528         push qword [rbp + 0x28]
0x00003385      4157           push r15
0x00003387      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000338a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000338f      4c89e7         mov rdi, r12
0x00003392      4c895c2430     mov qword [rsp + 0x30], r11
0x00003397      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000339c      4883c420       add rsp, 0x20
0x000033a0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000033a5      4939c3         cmp r11, rax
0x000033a8      7767           ja 0x3411
0x000033aa      488d7001       lea rsi, [rax + 1]
0x000033ae      488d054b3d20.  lea rax, obj.slot0                      ; 0x207100
0x000033b5      4939c4         cmp r12, rax
0x000033b8      488933         mov qword [rbx], rsi
0x000033bb      7412           je 0x33cf
0x000033bd      4c89e7         mov rdi, r12
0x000033c0      4889742410     mov qword [rsp + 0x10], rsi
0x000033c5      e816deffff     call sym.imp.free
0x000033ca      488b742410     mov rsi, qword [rsp + 0x10]
0x000033cf      4889f7         mov rdi, rsi
0x000033d2      4889742410     mov qword [rsp + 0x10], rsi
0x000033d7      e8b40e0000     call sym.xmalloc
0x000033dc      4883ec08       sub rsp, 8
0x000033e0      48894308       mov qword [rbx + 8], rax
0x000033e4      448b4500       mov r8d, dword [rbp]
0x000033e8      ff7530         push qword [rbp + 0x30]
0x000033eb      ff7528         push qword [rbp + 0x28]
0x000033ee      4c89f1         mov rcx, r14
0x000033f1      4157           push r15
0x000033f3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000033f8      4889c7         mov rdi, rax
0x000033fb      488b542428     mov rdx, qword [rsp + 0x28]
0x00003400      488b742430     mov rsi, qword [rsp + 0x30]
0x00003405      4989c4         mov r12, rax
0x00003408      e863ecffff     call sym.quotearg_buffer_restyled
0x0000340d      4883c420       add rsp, 0x20
0x00003411      8b442418       mov eax, dword [rsp + 0x18]
0x00003415      41894500       mov dword [r13], eax
0x00003419      4883c428       add rsp, 0x28
0x0000341d      4c89e0         mov rax, r12
0x00003420      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003421      5d             pop rbp
0x00003422      415c           pop r12
0x00003424      415d           pop r13
0x00003426      415e           pop r14
0x00003428      415f           pop r15
0x0000342a      c3             ret
0x0000342b      0f1f440000     nop dword [rax + rax]
0x00003430      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003432      e8b90e0000     call sym.xrealloc
0x00003437      660f6f05313c.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000343f      4889c3         mov rbx, rax
0x00003442      488905173c20.  mov qword [obj.slotvec], rax            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x00003449      0f1100         movups xmmword [rax], xmm0
0x0000344c      e9dcfeffff     jmp 0x332d
0x00003451      e89addffff     call sym.imp.abort
0x00003456      e885100000     call sym.xalloc_die
0x0000345b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003460      4154           push r12
0x00003462      55             push rbp
0x00003463      53             push rbx
0x00003464      4889fb         mov rbx, rdi
0x00003467      e894ddffff     call sym.imp.__errno_location
0x0000346c      448b20         mov r12d, dword [rax]
0x0000346f      4889c5         mov rbp, rax
0x00003472      488d05873d20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003479      4885db         test rbx, rbx
0x0000347c      be38000000     mov esi, 0x38                           ; '8'
0x00003481      480f44d8       cmove rbx, rax
0x00003485      4889df         mov rdi, rbx
0x00003488      e803100000     call sym.xmemdup
0x0000348d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003491      5b             pop rbx
0x00003492      5d             pop rbp
0x00003493      415c           pop r12
0x00003495      c3             ret
0x00003496      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000034a0      488d05593d20.  lea rax, obj.default_quoting_options    ; 0x207200
0x000034a7      4885ff         test rdi, rdi
0x000034aa      480f44f8       cmove rdi, rax
0x000034ae      8b07           mov eax, dword [rdi]
0x000034b0      c3             ret
0x000034b1      0f1f440000     nop dword [rax + rax]
0x000034b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000034c0      488d05393d20.  lea rax, obj.default_quoting_options    ; 0x207200
0x000034c7      4885ff         test rdi, rdi
0x000034ca      480f44f8       cmove rdi, rax
0x000034ce      8937           mov dword [rdi], esi
0x000034d0      c3             ret
0x000034d1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000034d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000034e0      488d05193d20.  lea rax, obj.default_quoting_options    ; 0x207200
0x000034e7      4885ff         test rdi, rdi
0x000034ea      89f1           mov ecx, esi
0x000034ec      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000034f0      89f0           mov eax, esi
0x000034f2      83e11f         and ecx, 0x1f
0x000034f5      c0e805         shr al, 5
0x000034f8      0fb6c0         movzx eax, al
0x000034fb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00003500      8b37           mov esi, dword [rdi]
0x00003502      89f0           mov eax, esi
0x00003504      d3e8           shr eax, cl
0x00003506      31c2           xor edx, eax
0x00003508      83e001         and eax, 1
0x0000350b      83e201         and edx, 1
0x0000350e      d3e2           shl edx, cl
0x00003510      31f2           xor edx, esi
0x00003512      8917           mov dword [rdi], edx
0x00003514      c3             ret
0x00003515      90             nop
0x00003516      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003520      488d05d93c20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003527      4885ff         test rdi, rdi
0x0000352a      480f44f8       cmove rdi, rax
0x0000352e      8b4704         mov eax, dword [rdi + 4]
0x00003531      897704         mov dword [rdi + 4], esi
0x00003534      c3             ret
0x00003535      90             nop
0x00003536      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003540      488d05b93c20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003547      4885ff         test rdi, rdi
0x0000354a      480f44f8       cmove rdi, rax
0x0000354e      4885f6         test rsi, rsi
0x00003551      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003557      740e           je 0x3567
0x00003559      4885d2         test rdx, rdx
0x0000355c      7409           je 0x3567
0x0000355e      48897728       mov qword [rdi + 0x28], rsi
0x00003562      48895730       mov qword [rdi + 0x30], rdx
0x00003566      c3             ret
0x00003567      4883ec08       sub rsp, 8
0x0000356b      e880dcffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003570      4157           push r15
0x00003572      4156           push r14
0x00003574      488d05853c20.  lea rax, obj.default_quoting_options    ; 0x207200
0x0000357b      4155           push r13
0x0000357d      4154           push r12
0x0000357f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003582      55             push rbp
0x00003583      53             push rbx
0x00003584      4c89c3         mov rbx, r8
0x00003587      4989f6         mov r14, rsi
0x0000358a      4989d7         mov r15, rdx
0x0000358d      4883ec18       sub rsp, 0x18
0x00003591      4d85c0         test r8, r8
0x00003594      480f44d8       cmove rbx, rax
0x00003598      48894c2408     mov qword [rsp + 8], rcx
0x0000359d      e85edcffff     call sym.imp.__errno_location
0x000035a2      448b20         mov r12d, dword [rax]
0x000035a5      4889c5         mov rbp, rax
0x000035a8      488d4308       lea rax, [rbx + 8]
0x000035ac      4883ec08       sub rsp, 8
0x000035b0      448b4b04       mov r9d, dword [rbx + 4]
0x000035b4      ff7330         push qword [rbx + 0x30]
0x000035b7      448b03         mov r8d, dword [rbx]
0x000035ba      ff7328         push qword [rbx + 0x28]
0x000035bd      4c89fa         mov rdx, r15
0x000035c0      50             push rax
0x000035c1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000035c6      4c89f6         mov rsi, r14
0x000035c9      4c89ef         mov rdi, r13
0x000035cc      e89feaffff     call sym.quotearg_buffer_restyled
0x000035d1      44896500       mov dword [rbp], r12d
0x000035d5      4883c438       add rsp, 0x38
0x000035d9      5b             pop rbx
0x000035da      5d             pop rbp
0x000035db      415c           pop r12
0x000035dd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000035df      415e           pop r14
0x000035e1      415f           pop r15
0x000035e3      c3             ret
0x000035e4      6690           nop
0x000035e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000035f0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000035f2      4156           push r14
0x000035f4      488d05053c20.  lea rax, obj.default_quoting_options    ; 0x207200
0x000035fb      4155           push r13
0x000035fd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000035ff      4989d4         mov r12, rdx
0x00003602      55             push rbp
0x00003603      53             push rbx
0x00003604      4889cb         mov rbx, rcx
0x00003607      4989fe         mov r14, rdi
0x0000360a      4989f7         mov r15, rsi
0x0000360d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00003611      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00003614      480f44d8       cmove rbx, rax
0x00003618      31ed           xor ebp, ebp
0x0000361a      e8e1dbffff     call sym.imp.__errno_location
0x0000361f      4d85e4         test r12, r12
0x00003622      4989c5         mov r13, rax
0x00003625      8b00           mov eax, dword [rax]
0x00003627      400f94c5       sete bpl
0x0000362b      0b6b04         or ebp, dword [rbx + 4]
0x0000362e      4c8d5308       lea r10, [rbx + 8]
0x00003632      4883ec08       sub rsp, 8
0x00003636      448b03         mov r8d, dword [rbx]
0x00003639      4c89f9         mov rcx, r15
0x0000363c      89442414       mov dword [rsp + 0x14], eax
0x00003640      ff7330         push qword [rbx + 0x30]
0x00003643      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003646      ff7328         push qword [rbx + 0x28]
0x00003649      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000364b      31f6           xor esi, esi
0x0000364d      4189e9         mov r9d, ebp
0x00003650      31ff           xor edi, edi
0x00003652      4c89542440     mov qword [rsp + 0x40], r10
0x00003657      e814eaffff     call sym.quotearg_buffer_restyled
0x0000365c      488d7001       lea rsi, [rax + 1]
0x00003660      4889442448     mov qword [rsp + 0x48], rax
0x00003665      4883c420       add rsp, 0x20
0x00003669      4889f7         mov rdi, rsi
0x0000366c      4889742418     mov qword [rsp + 0x18], rsi
0x00003671      e81a0c0000     call sym.xmalloc
0x00003676      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000367b      4883ec08       sub rsp, 8
0x0000367f      ff7330         push qword [rbx + 0x30]
0x00003682      ff7328         push qword [rbx + 0x28]
0x00003685      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000368a      4189e9         mov r9d, ebp
0x0000368d      448b03         mov r8d, dword [rbx]
0x00003690      4c89f9         mov rcx, r15
0x00003693      4c89f2         mov rdx, r14
0x00003696      4889c7         mov rdi, rax
0x00003699      4152           push r10
0x0000369b      488b742438     mov rsi, qword [rsp + 0x38]
0x000036a0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000036a5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000036a9      4883c420       add rsp, 0x20
0x000036ad      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000036b0      41894500       mov dword [r13], eax
0x000036b4      7409           je 0x36bf
0x000036b6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000036bb      4d891c24       mov qword [r12], r11
0x000036bf      488b442410     mov rax, qword [rsp + 0x10]
0x000036c4      4883c438       add rsp, 0x38
0x000036c8      5b             pop rbx
0x000036c9      5d             pop rbp
0x000036ca      415c           pop r12
0x000036cc      415d           pop r13
0x000036ce      415e           pop r14
0x000036d0      415f           pop r15
0x000036d2      c3             ret
0x000036d3      0f1f00         nop dword [rax]
0x000036d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000036e0      4889d1         mov rcx, rdx
0x000036e3      31d2           xor edx, edx
0x000036e5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000036ea      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000036f0      8b0562392000   mov eax, dword [obj.nslots]             ; [0x207058:4]=1
0x000036f6      4154           push r12
0x000036f8      4c8b25613920.  mov r12, qword [obj.slotvec]            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x000036ff      55             push rbp
0x00003700      53             push rbx
0x00003701      83f801         cmp eax, 1
0x00003704      7e2b           jle 0x3731                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00003706      83e802         sub eax, 2
0x00003709      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000370e      48c1e004       shl rax, 4
0x00003712      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00003717      660f1f840000.  nop word [rax + rax]
0x00003720      488b3b         mov rdi, qword [rbx]
0x00003723      4883c310       add rbx, 0x10
0x00003727      e8b4daffff     call sym.imp.free
0x0000372c      4839eb         cmp rbx, rbp
0x0000372f      75ef           jne 0x3720
0x00003731      498b7c2408     mov rdi, qword [r12 + 8]
0x00003736      488d1dc33920.  lea rbx, obj.slot0                      ; 0x207100
0x0000373d      4839df         cmp rdi, rbx
0x00003740      7417           je 0x3759
0x00003742      e899daffff     call sym.imp.free
0x00003747      48c7051e3920.  mov qword [obj.slotvec0], 0x100         ; [0x207070:8]=256
0x00003752      48891d1f3920.  mov qword [0x00207078], rbx             ; [0x207078:8]=0x207100 obj.slot0
0x00003759      488d1d103920.  lea rbx, obj.slotvec0                   ; 0x207070
0x00003760      4939dc         cmp r12, rbx
0x00003763      740f           je 0x3774
0x00003765      4c89e7         mov rdi, r12
0x00003768      e873daffff     call sym.imp.free
0x0000376d      48891dec3820.  mov qword [obj.slotvec], rbx            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x00003774      5b             pop rbx
0x00003775      c705d9382000.  mov dword [obj.nslots], 1               ; [0x207058:4]=1
0x0000377f      5d             pop rbp
0x00003780      415c           pop r12
0x00003782      c3             ret
0x00003783      0f1f00         nop dword [rax]
0x00003786      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00003790      488d0d693a20.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003797      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000379e      e90dfbffff     jmp sym.quotearg_n_options
0x000037a3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000037a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000037b0      488d0d493a20.  lea rcx, obj.default_quoting_options    ; 0x207200
0x000037b7      e9f4faffff     jmp sym.quotearg_n_options
0x000037bc      0f1f4000       nop dword [rax]
;-- quotearg:
0x000037c0      488d0d393a20.  lea rcx, obj.default_quoting_options    ; 0x207200
0x000037c7      4889fe         mov rsi, rdi
0x000037ca      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000037d1      31ff           xor edi, edi
0x000037d3      e9d8faffff     jmp sym.quotearg_n_options
0x000037d8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000037e0      488d0d193a20.  lea rcx, obj.default_quoting_options    ; 0x207200
0x000037e7      4889f2         mov rdx, rsi
0x000037ea      4889fe         mov rsi, rdi
0x000037ed      31ff           xor edi, edi
0x000037ef      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000037f4      6690           nop
0x000037f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00003800      4883ec48       sub rsp, 0x48
0x00003804      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00003807      64488b142528.  mov rdx, qword fs:[0x28]
0x00003810      4889542438     mov qword [rsp + 0x38], rdx
0x00003815      31d2           xor edx, edx
0x00003817      83fe0a         cmp esi, 0xa
0x0000381a      7468           je 0x3884
0x0000381c      893424         mov dword [rsp], esi
0x0000381f      4889e1         mov rcx, rsp
0x00003822      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003829      4889c6         mov rsi, rax
0x0000382c      48c744240400.  mov qword [rsp + 4], 0
0x00003835      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000383e      48c744241400.  mov qword [rsp + 0x14], 0
0x00003847      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003850      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00003859      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003862      c74424340000.  mov dword [rsp + 0x34], 0
0x0000386a      e841faffff     call sym.quotearg_n_options
0x0000386f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003874      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000387d      750a           jne 0x3889                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000387f      4883c448       add rsp, 0x48
0x00003883      c3             ret
0x00003884      e867d9ffff     call sym.imp.abort
0x00003889      e822daffff     call sym.imp.__stack_chk_fail
0x0000388e      6690           nop
;-- quotearg_n_style_mem:
0x00003890      4883ec48       sub rsp, 0x48
0x00003894      4889d0         mov rax, rdx
0x00003897      4889ca         mov rdx, rcx
0x0000389a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000038a3      48894c2438     mov qword [rsp + 0x38], rcx
0x000038a8      31c9           xor ecx, ecx
0x000038aa      83fe0a         cmp esi, 0xa
0x000038ad      7461           je 0x3910
0x000038af      893424         mov dword [rsp], esi
0x000038b2      4889e1         mov rcx, rsp
0x000038b5      4889c6         mov rsi, rax
0x000038b8      48c744240400.  mov qword [rsp + 4], 0
0x000038c1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000038ca      48c744241400.  mov qword [rsp + 0x14], 0
0x000038d3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000038dc      48c744242400.  mov qword [rsp + 0x24], 0
0x000038e5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000038ee      c74424340000.  mov dword [rsp + 0x34], 0
0x000038f6      e8b5f9ffff     call sym.quotearg_n_options
0x000038fb      488b542438     mov rdx, qword [rsp + 0x38]
0x00003900      644833142528.  xor rdx, qword fs:[0x28]
0x00003909      750a           jne 0x3915
0x0000390b      4883c448       add rsp, 0x48
0x0000390f      c3             ret
0x00003910      e8dbd8ffff     call sym.imp.abort
0x00003915      e896d9ffff     call sym.imp.__stack_chk_fail
0x0000391a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00003920      4889f2         mov rdx, rsi
0x00003923      89fe           mov esi, edi
0x00003925      31ff           xor edi, edi
0x00003927      e9d4feffff     jmp sym.quotearg_n_style
0x0000392c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00003930      4889d1         mov rcx, rdx
0x00003933      4889f2         mov rdx, rsi
0x00003936      89fe           mov esi, edi
0x00003938      31ff           xor edi, edi
0x0000393a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000393f      90             nop
;-- quotearg_char_mem:
0x00003940      4883ec48       sub rsp, 0x48
0x00003944      89d1           mov ecx, edx
0x00003946      64488b042528.  mov rax, qword fs:[0x28]
0x0000394f      4889442438     mov qword [rsp + 0x38], rax
0x00003954      31c0           xor eax, eax
0x00003956      488b05d33820.  mov rax, qword [0x00207230]             ; [0x207230:8]=0
0x0000395d      4989e0         mov r8, rsp
0x00003960      83e11f         and ecx, 0x1f
0x00003963      660f6f059538.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000396b      4889442430     mov qword [rsp + 0x30], rax
0x00003970      89d0           mov eax, edx
0x00003972      0f290424       movaps xmmword [rsp], xmm0
0x00003976      c0e805         shr al, 5
0x00003979      0fb6c0         movzx eax, al
0x0000397c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00003981      660f6f058738.  movdqa xmm0, xmmword [0x00207210]
0x00003989      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000398e      660f6f058a38.  movdqa xmm0, xmmword [0x00207220]
0x00003996      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000399b      418b11         mov edx, dword [r9]
0x0000399e      89d0           mov eax, edx
0x000039a0      d3e8           shr eax, cl
0x000039a2      f7d0           not eax
0x000039a4      83e001         and eax, 1
0x000039a7      d3e0           shl eax, cl
0x000039a9      4c89c1         mov rcx, r8
0x000039ac      31d0           xor eax, edx
0x000039ae      4889f2         mov rdx, rsi
0x000039b1      4889fe         mov rsi, rdi
0x000039b4      418901         mov dword [r9], eax
0x000039b7      31ff           xor edi, edi
0x000039b9      e8f2f8ffff     call sym.quotearg_n_options
0x000039be      488b742438     mov rsi, qword [rsp + 0x38]
0x000039c3      644833342528.  xor rsi, qword fs:[0x28]
0x000039cc      7505           jne 0x39d3
0x000039ce      4883c448       add rsp, 0x48
0x000039d2      c3             ret
0x000039d3      e8d8d8ffff     call sym.imp.__stack_chk_fail
0x000039d8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000039e0      400fbed6       movsx edx, sil
0x000039e4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000039eb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000039f0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000039f5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000039fc      e93fffffff     jmp sym.quotearg_char_mem
0x00003a01      0f1f440000     nop dword [rax + rax]
0x00003a06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00003a10      ba3a000000     mov edx, 0x3a                           ; ':'
0x00003a15      e926ffffff     jmp sym.quotearg_char_mem
0x00003a1a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00003a20      4883ec48       sub rsp, 0x48
0x00003a24      4889d0         mov rax, rdx
0x00003a27      64488b142528.  mov rdx, qword fs:[0x28]
0x00003a30      4889542438     mov qword [rsp + 0x38], rdx
0x00003a35      31d2           xor edx, edx
0x00003a37      83fe0a         cmp esi, 0xa
0x00003a3a      7468           je 0x3aa4
0x00003a3c      893424         mov dword [rsp], esi
0x00003a3f      4889e1         mov rcx, rsp
0x00003a42      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003a49      4889c6         mov rsi, rax
0x00003a4c      48c744240400.  mov qword [rsp + 4], 0
0x00003a55      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00003a5e      48c744241400.  mov qword [rsp + 0x14], 0
0x00003a67      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003a70      48c744242400.  mov qword [rsp + 0x24], 0
0x00003a79      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003a82      c74424340000.  mov dword [rsp + 0x34], 0
0x00003a8a      e821f8ffff     call sym.quotearg_n_options
0x00003a8f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003a94      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003a9d      750a           jne 0x3aa9
0x00003a9f      4883c448       add rsp, 0x48
0x00003aa3      c3             ret
0x00003aa4      e847d7ffff     call sym.imp.abort
0x00003aa9      e802d8ffff     call sym.imp.__stack_chk_fail
0x00003aae      6690           nop
;-- quotearg_n_custom_mem:
0x00003ab0      4883ec48       sub rsp, 0x48
0x00003ab4      4989c9         mov r9, rcx
0x00003ab7      488b0d723720.  mov rcx, qword [0x00207230]             ; [0x207230:8]=0
0x00003abe      660f6f053a37.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003ac6      64488b042528.  mov rax, qword fs:[0x28]
0x00003acf      4889442438     mov qword [rsp + 0x38], rax
0x00003ad4      31c0           xor eax, eax
0x00003ad6      0f290424       movaps xmmword [rsp], xmm0
0x00003ada      4885f6         test rsi, rsi
0x00003add      48894c2430     mov qword [rsp + 0x30], rcx
0x00003ae2      c704240a0000.  mov dword [rsp], 0xa
0x00003ae9      660f6f051f37.  movdqa xmm0, xmmword [0x00207210]
0x00003af1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003af6      660f6f052237.  movdqa xmm0, xmmword [0x00207220]
0x00003afe      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003b03      7432           je 0x3b37
0x00003b05      4885d2         test rdx, rdx
0x00003b08      742d           je 0x3b37
0x00003b0a      4889742428     mov qword [rsp + 0x28], rsi
0x00003b0f      4889542430     mov qword [rsp + 0x30], rdx
0x00003b14      4889e1         mov rcx, rsp
0x00003b17      4c89c2         mov rdx, r8
0x00003b1a      4c89ce         mov rsi, r9
0x00003b1d      e88ef7ffff     call sym.quotearg_n_options
0x00003b22      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003b27      6448333c2528.  xor rdi, qword fs:[0x28]
0x00003b30      750a           jne 0x3b3c
0x00003b32      4883c448       add rsp, 0x48
0x00003b36      c3             ret
0x00003b37      e8b4d6ffff     call sym.imp.abort
0x00003b3c      e86fd7ffff     call sym.imp.__stack_chk_fail
0x00003b41      0f1f440000     nop dword [rax + rax]
0x00003b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00003b50      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00003b57      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00003b5c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00003b60      4889d1         mov rcx, rdx
0x00003b63      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00003b6a      4889f2         mov rdx, rsi
0x00003b6d      4889fe         mov rsi, rdi
0x00003b70      31ff           xor edi, edi
0x00003b72      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00003b77      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00003b80      4989c8         mov r8, rcx
0x00003b83      4889d1         mov rcx, rdx
0x00003b86      4889f2         mov rdx, rsi
0x00003b89      4889fe         mov rsi, rdi
0x00003b8c      31ff           xor edi, edi
0x00003b8e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00003b93      0f1f00         nop dword [rax]
0x00003b96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00003ba0      488d0d793420.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003ba7      e904f7ffff     jmp sym.quotearg_n_options
0x00003bac      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00003bb0      488d0d693420.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003bb7      4889f2         mov rdx, rsi
0x00003bba      4889fe         mov rsi, rdi
0x00003bbd      31ff           xor edi, edi
0x00003bbf      e9ecf6ffff     jmp sym.quotearg_n_options
0x00003bc4      6690           nop
0x00003bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00003bd0      488d0d493420.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003bd7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003bde      e9cdf6ffff     jmp sym.quotearg_n_options
0x00003be3      0f1f00         nop dword [rax]
0x00003be6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00003bf0      488d0d293420.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003bf7      4889fe         mov rsi, rdi
0x00003bfa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003c01      31ff           xor edi, edi
0x00003c03      e9a8f6ffff     jmp sym.quotearg_n_options
0x00003c08      0f1f84000000.  nop dword [rax + rax]
;-- safe_write:
0x00003c10      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00003c12      4154           push r12
0x00003c14      4189fd         mov r13d, edi
0x00003c17      55             push rbp
0x00003c18      53             push rbx
0x00003c19      4989f4         mov r12, rsi
0x00003c1c      4889d3         mov rbx, rdx
0x00003c1f      4883ec08       sub rsp, 8
0x00003c23      0f1f440000     nop dword [rax + rax]
0x00003c28      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/safe-read.c:60
0x00003c2b      4c89e6         mov rsi, r12
0x00003c2e      4489ef         mov edi, r13d
0x00003c31      e80ad6ffff     call sym.imp.write
0x00003c36      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x00003c39      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/safe-read.c:60
0x00003c3c      7922           jns 0x3c60                              ; ../coreutils-8.31/lib/safe-read.c:62
0x00003c3e      e8bdd5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x00003c43      8b00           mov eax, dword [rax]
0x00003c45      83f804         cmp eax, 4
0x00003c48      74de           je 0x3c28
0x00003c4a      83f816         cmp eax, 0x16                           ; ../coreutils-8.31/lib/safe-read.c:66
0x00003c4d      7511           jne 0x3c60
0x00003c4f      4881fb0000f0.  cmp rbx, 0x7ff00000
0x00003c56      7608           jbe 0x3c60
0x00003c58      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x00003c5d      ebc9           jmp 0x3c28
0x00003c5f      90             nop
0x00003c60      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x00003c64      4889e8         mov rax, rbp
0x00003c67      5b             pop rbx
0x00003c68      5d             pop rbp
0x00003c69      415c           pop r12
0x00003c6b      415d           pop r13
0x00003c6d      c3             ret
0x00003c6e      6690           nop
;-- version_etc_arn:
0x00003c70      4157           push r15
0x00003c72      4156           push r14
0x00003c74      4155           push r13
0x00003c76      4154           push r12
0x00003c78      4d89cc         mov r12, r9
0x00003c7b      55             push rbp
0x00003c7c      53             push rbx
0x00003c7d      4889fd         mov rbp, rdi
0x00003c80      4c89c3         mov rbx, r8
0x00003c83      4883ec28       sub rsp, 0x28
0x00003c87      4885f6         test rsi, rsi
0x00003c8a      0f8418010000   je 0x3da8
0x00003c90      4989d0         mov r8, rdx
0x00003c93      488d15ce1300.  lea rdx, [0x00005068]                   ; "%s (%s) %s\n"
0x00003c9a      4989c9         mov r9, rcx
0x00003c9d      31c0           xor eax, eax
0x00003c9f      4889f1         mov rcx, rsi
0x00003ca2      be01000000     mov esi, 1
0x00003ca7      e874d7ffff     call sym.imp.__fprintf_chk
0x00003cac      488d35c81300.  lea rsi, [0x0000507b]                   ; "(C)"
0x00003cb3      31ff           xor edi, edi
0x00003cb5      ba05000000     mov edx, 5
0x00003cba      e8c1d5ffff     call sym.imp.dcgettext
0x00003cbf      488d15da1600.  lea rdx, obj.version_etc_copyright      ; 0x53a0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00003cc6      4889c1         mov rcx, rax
0x00003cc9      41b8e3070000   mov r8d, 0x7e3
0x00003ccf      be01000000     mov esi, 1
0x00003cd4      4889ef         mov rdi, rbp
0x00003cd7      31c0           xor eax, eax
0x00003cd9      e842d7ffff     call sym.imp.__fprintf_chk
0x00003cde      488d35231400.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x5108 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00003ce5      31ff           xor edi, edi
0x00003ce7      ba05000000     mov edx, 5
0x00003cec      e88fd5ffff     call sym.imp.dcgettext
0x00003cf1      4889ee         mov rsi, rbp
0x00003cf4      4889c7         mov rdi, rax
0x00003cf7      e824d6ffff     call sym.imp.fputs_unlocked
0x00003cfc      4983fc09       cmp r12, 9
0x00003d00      0f873a030000   ja 0x4040
0x00003d06      488d155b1600.  lea rdx, [0x00005368]                   ; ".\xea\xff\xff\xc0\xea\xff\xff"
0x00003d0d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00003d11      4801d0         add rax, rdx
0x00003d14      ffe0           jmp rax
0x00003d16      662e0f1f8400.  nop word cs:[rax + rax]
0x00003d20      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00003d24      488b4310       mov rax, qword [rbx + 0x10]
0x00003d28      488d35491500.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x5278 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00003d2f      4c8b4308       mov r8, qword [rbx + 8]
0x00003d33      ba05000000     mov edx, 5
0x00003d38      31ff           xor edi, edi
0x00003d3a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003d3e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003d42      4c894c2410     mov qword [rsp + 0x10], r9
0x00003d47      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003d4b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003d4f      48890424       mov qword [rsp], rax
0x00003d53      4c89442408     mov qword [rsp + 8], r8
0x00003d58      488b1b         mov rbx, qword [rbx]
0x00003d5b      e820d5ffff     call sym.imp.dcgettext
0x00003d60      4883ec08       sub rsp, 8
0x00003d64      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00003d69      4889c2         mov rdx, rax
0x00003d6c      4889d9         mov rcx, rbx
0x00003d6f      be01000000     mov esi, 1
0x00003d74      4889ef         mov rdi, rbp
0x00003d77      31c0           xor eax, eax
0x00003d79      4151           push r9
0x00003d7b      4155           push r13
0x00003d7d      4154           push r12
0x00003d7f      4157           push r15
0x00003d81      4156           push r14
0x00003d83      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003d88      4c8b442438     mov r8, qword [rsp + 0x38]
0x00003d8d      e88ed6ffff     call sym.imp.__fprintf_chk
0x00003d92      4883c430       add rsp, 0x30
0x00003d96      4883c428       add rsp, 0x28
0x00003d9a      5b             pop rbx
0x00003d9b      5d             pop rbp
0x00003d9c      415c           pop r12
0x00003d9e      415d           pop r13
0x00003da0      415e           pop r14
0x00003da2      415f           pop r15
0x00003da4      c3             ret
0x00003da5      0f1f00         nop dword [rax]
0x00003da8      4989c8         mov r8, rcx
0x00003dab      4889d1         mov rcx, rdx
0x00003dae      488d15bf1200.  lea rdx, str.s__s                       ; 0x5074 ; "%s %s\n"
0x00003db5      be01000000     mov esi, 1
0x00003dba      31c0           xor eax, eax
0x00003dbc      e85fd6ffff     call sym.imp.__fprintf_chk
0x00003dc1      e9e6feffff     jmp 0x3cac
0x00003dc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003dd0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00003dd4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00003dd8      488d35c91400.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x52a8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00003ddf      488b4310       mov rax, qword [rbx + 0x10]
0x00003de3      4c8b4308       mov r8, qword [rbx + 8]
0x00003de7      ba05000000     mov edx, 5
0x00003dec      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003df0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003df4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003df8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003dfc      488b1b         mov rbx, qword [rbx]
0x00003dff      4c89542418     mov qword [rsp + 0x18], r10
0x00003e04      4c894c2410     mov qword [rsp + 0x10], r9
0x00003e09      48890424       mov qword [rsp], rax
0x00003e0d      4c89442408     mov qword [rsp + 8], r8
0x00003e12      31ff           xor edi, edi
0x00003e14      e867d4ffff     call sym.imp.dcgettext
0x00003e19      4c8b542418     mov r10, qword [rsp + 0x18]
0x00003e1e      4152           push r10
0x00003e20      e93fffffff     jmp 0x3d64
0x00003e25      0f1f00         nop dword [rax]
0x00003e28      488b1b         mov rbx, qword [rbx]
0x00003e2b      488d354d1200.  lea rsi, str.Written_by__s.             ; 0x507f ; "Written by %s.\n"
0x00003e32      ba05000000     mov edx, 5
0x00003e37      31ff           xor edi, edi
0x00003e39      e842d4ffff     call sym.imp.dcgettext
0x00003e3e      4883c428       add rsp, 0x28
0x00003e42      4889d9         mov rcx, rbx
0x00003e45      4889ef         mov rdi, rbp
0x00003e48      5b             pop rbx
0x00003e49      5d             pop rbp
0x00003e4a      415c           pop r12
0x00003e4c      415d           pop r13
0x00003e4e      415e           pop r14
0x00003e50      415f           pop r15
0x00003e52      4889c2         mov rdx, rax
0x00003e55      be01000000     mov esi, 1
0x00003e5a      31c0           xor eax, eax
0x00003e5c      e9bfd5ffff     jmp sym.imp.__fprintf_chk
0x00003e61      0f1f80000000.  nop dword [rax]
0x00003e68      4c8b6308       mov r12, qword [rbx + 8]
0x00003e6c      488d351c1200.  lea rsi, str.Written_by__s_and__s.      ; 0x508f ; "Written by %s and %s.\n"
0x00003e73      488b1b         mov rbx, qword [rbx]
0x00003e76      ba05000000     mov edx, 5
0x00003e7b      31ff           xor edi, edi
0x00003e7d      e8fed3ffff     call sym.imp.dcgettext
0x00003e82      4883c428       add rsp, 0x28
0x00003e86      4d89e0         mov r8, r12
0x00003e89      4889d9         mov rcx, rbx
0x00003e8c      4889ef         mov rdi, rbp
0x00003e8f      4889c2         mov rdx, rax
0x00003e92      be01000000     mov esi, 1
0x00003e97      5b             pop rbx
0x00003e98      5d             pop rbp
0x00003e99      415c           pop r12
0x00003e9b      415d           pop r13
0x00003e9d      415e           pop r14
0x00003e9f      415f           pop r15
0x00003ea1      31c0           xor eax, eax
0x00003ea3      e978d5ffff     jmp sym.imp.__fprintf_chk
0x00003ea8      0f1f84000000.  nop dword [rax + rax]
0x00003eb0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003eb4      4c8b6308       mov r12, qword [rbx + 8]
0x00003eb8      488d35e71100.  lea rsi, str.Written_by__s___s__and__s. ; 0x50a6 ; "Written by %s, %s, and %s.\n"
0x00003ebf      488b1b         mov rbx, qword [rbx]
0x00003ec2      ba05000000     mov edx, 5
0x00003ec7      31ff           xor edi, edi
0x00003ec9      e8b2d3ffff     call sym.imp.dcgettext
0x00003ece      4883c428       add rsp, 0x28
0x00003ed2      4d89e9         mov r9, r13
0x00003ed5      4d89e0         mov r8, r12
0x00003ed8      4889d9         mov rcx, rbx
0x00003edb      4889ef         mov rdi, rbp
0x00003ede      4889c2         mov rdx, rax
0x00003ee1      5b             pop rbx
0x00003ee2      5d             pop rbp
0x00003ee3      415c           pop r12
0x00003ee5      415d           pop r13
0x00003ee7      415e           pop r14
0x00003ee9      415f           pop r15
0x00003eeb      be01000000     mov esi, 1
0x00003ef0      31c0           xor eax, eax
0x00003ef2      e929d5ffff     jmp sym.imp.__fprintf_chk
0x00003ef7      660f1f840000.  nop word [rax + rax]
0x00003f00      488d35d11200.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x51d8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00003f07      ba05000000     mov edx, 5
0x00003f0c      31ff           xor edi, edi
0x00003f0e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003f12      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003f16      4c8b6308       mov r12, qword [rbx + 8]
0x00003f1a      488b1b         mov rbx, qword [rbx]
0x00003f1d      e85ed3ffff     call sym.imp.dcgettext
0x00003f22      4883ec08       sub rsp, 8
0x00003f26      4156           push r14
0x00003f28      4889c2         mov rdx, rax
0x00003f2b      4d89e9         mov r9, r13
0x00003f2e      4d89e0         mov r8, r12
0x00003f31      4889d9         mov rcx, rbx
0x00003f34      4889ef         mov rdi, rbp
0x00003f37      be01000000     mov esi, 1
0x00003f3c      31c0           xor eax, eax
0x00003f3e      e8ddd4ffff     call sym.imp.__fprintf_chk
0x00003f43      58             pop rax
0x00003f44      5a             pop rdx
0x00003f45      4883c428       add rsp, 0x28
0x00003f49      5b             pop rbx
0x00003f4a      5d             pop rbp
0x00003f4b      415c           pop r12
0x00003f4d      415d           pop r13
0x00003f4f      415e           pop r14
0x00003f51      415f           pop r15
0x00003f53      c3             ret
0x00003f54      0f1f4000       nop dword [rax]
0x00003f58      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003f5c      488d35951200.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x51f8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00003f63      ba05000000     mov edx, 5
0x00003f68      31ff           xor edi, edi
0x00003f6a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003f6e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003f72      4c8b6308       mov r12, qword [rbx + 8]
0x00003f76      488b1b         mov rbx, qword [rbx]
0x00003f79      e802d3ffff     call sym.imp.dcgettext
0x00003f7e      4157           push r15
0x00003f80      eba4           jmp 0x3f26
0x00003f82      660f1f440000   nop word [rax + rax]
0x00003f88      4c8b4308       mov r8, qword [rbx + 8]
0x00003f8c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003f90      488d35891200.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x5220 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00003f97      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003f9b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003f9f      ba05000000     mov edx, 5
0x00003fa4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003fa8      31ff           xor edi, edi
0x00003faa      488b1b         mov rbx, qword [rbx]
0x00003fad      4c890424       mov qword [rsp], r8
0x00003fb1      e8cad2ffff     call sym.imp.dcgettext
0x00003fb6      4883ec08       sub rsp, 8
0x00003fba      4d89e9         mov r9, r13
0x00003fbd      4154           push r12
0x00003fbf      4157           push r15
0x00003fc1      4156           push r14
0x00003fc3      4c8b442420     mov r8, qword [rsp + 0x20]
0x00003fc8      4889d9         mov rcx, rbx
0x00003fcb      4889c2         mov rdx, rax
0x00003fce      4889ef         mov rdi, rbp
0x00003fd1      be01000000     mov esi, 1
0x00003fd6      31c0           xor eax, eax
0x00003fd8      e843d4ffff     call sym.imp.__fprintf_chk
0x00003fdd      4883c420       add rsp, 0x20
0x00003fe1      4883c428       add rsp, 0x28
0x00003fe5      5b             pop rbx
0x00003fe6      5d             pop rbp
0x00003fe7      415c           pop r12
0x00003fe9      415d           pop r13
0x00003feb      415e           pop r14
0x00003fed      415f           pop r15
0x00003fef      c3             ret
0x00003ff0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00003ff4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003ff8      488d35491200.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x5248 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00003fff      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004003      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004007      ba05000000     mov edx, 5
0x0000400c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004010      4c8b4308       mov r8, qword [rbx + 8]
0x00004014      31ff           xor edi, edi
0x00004016      4c894c2408     mov qword [rsp + 8], r9
0x0000401b      488b1b         mov rbx, qword [rbx]
0x0000401e      4c890424       mov qword [rsp], r8
0x00004022      e859d2ffff     call sym.imp.dcgettext
0x00004027      4155           push r13
0x00004029      4154           push r12
0x0000402b      4157           push r15
0x0000402d      4156           push r14
0x0000402f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004034      eb8d           jmp 0x3fc3
0x00004036      662e0f1f8400.  nop word cs:[rax + rax]
0x00004040      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004044      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004048      ba05000000     mov edx, 5
0x0000404d      488b4310       mov rax, qword [rbx + 0x10]
0x00004051      4c8b4308       mov r8, qword [rbx + 8]
0x00004055      488d35841200.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x52e0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000405c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004060      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004064      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004068      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000406c      4c89542418     mov qword [rsp + 0x18], r10
0x00004071      4c894c2410     mov qword [rsp + 0x10], r9
0x00004076      48890424       mov qword [rsp], rax
0x0000407a      4c89442408     mov qword [rsp + 8], r8
0x0000407f      488b1b         mov rbx, qword [rbx]
0x00004082      e98bfdffff     jmp 0x3e12
0x00004087      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004090      4531c9         xor r9d, r9d
0x00004093      49833800       cmp qword [r8], 0
0x00004097      7412           je 0x40ab
0x00004099      0f1f80000000.  nop dword [rax]
0x000040a0      4983c101       add r9, 1
0x000040a4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000040a9      75f5           jne 0x40a0
0x000040ab      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000040b0      4883ec68       sub rsp, 0x68
0x000040b4      4d89c2         mov r10, r8
0x000040b7      4531c9         xor r9d, r9d
0x000040ba      64488b042528.  mov rax, qword fs:[0x28]
0x000040c3      4889442458     mov qword [rsp + 0x58], rax
0x000040c8      31c0           xor eax, eax
0x000040ca      4989e0         mov r8, rsp
0x000040cd      0f1f00         nop dword [rax]
0x000040d0      418b02         mov eax, dword [r10]
0x000040d3      83f82f         cmp eax, 0x2f
0x000040d6      7742           ja 0x411a
0x000040d8      4189c3         mov r11d, eax
0x000040db      4d035a10       add r11, qword [r10 + 0x10]
0x000040df      83c008         add eax, 8
0x000040e2      418902         mov dword [r10], eax
0x000040e5      498b03         mov rax, qword [r11]
0x000040e8      4885c0         test rax, rax
0x000040eb      4b8904c8       mov qword [r8 + r9*8], rax
0x000040ef      740a           je 0x40fb
0x000040f1      4983c101       add r9, 1
0x000040f5      4983f90a       cmp r9, 0xa
0x000040f9      75d5           jne 0x40d0
0x000040fb      e870fbffff     call sym.version_etc_arn
0x00004100      488b442458     mov rax, qword [rsp + 0x58]
0x00004105      644833042528.  xor rax, qword fs:[0x28]
0x0000410e      7505           jne 0x4115
0x00004110      4883c468       add rsp, 0x68
0x00004114      c3             ret
0x00004115      e896d1ffff     call sym.imp.__stack_chk_fail
0x0000411a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000411e      498d4308       lea rax, [r11 + 8]
0x00004122      49894208       mov qword [r10 + 8], rax
0x00004126      ebbd           jmp 0x40e5
0x00004128      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004130      55             push rbp
0x00004131      53             push rbx
0x00004132      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004138      4531db         xor r11d, r11d
0x0000413b      4881ecb80000.  sub rsp, 0xb8
0x00004142      64488b042528.  mov rax, qword fs:[0x28]
0x0000414b      4889442478     mov qword [rsp + 0x78], rax
0x00004150      31c0           xor eax, eax
0x00004152      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000415a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004162      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000416a      4c8d442420     lea r8, [rsp + 0x20]
0x0000416f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004177      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000417f      4889442410     mov qword [rsp + 0x10], rax
0x00004184      488d84248000.  lea rax, [rsp + 0x80]
0x0000418c      4531c9         xor r9d, r9d
0x0000418f      4889442418     mov qword [rsp + 0x18], rax
0x00004194      4889c5         mov rbp, rax
0x00004197      660f1f840000.  nop word [rax + rax]
0x000041a0      4183fa2f       cmp r10d, 0x2f
0x000041a4      7756           ja 0x41fc
0x000041a6      4489d0         mov eax, r10d
0x000041a9      41bb01000000   mov r11d, 1
0x000041af      4183c208       add r10d, 8
0x000041b3      4801e8         add rax, rbp
0x000041b6      488b00         mov rax, qword [rax]
0x000041b9      4885c0         test rax, rax
0x000041bc      4b8904c8       mov qword [r8 + r9*8], rax
0x000041c0      740a           je 0x41cc
0x000041c2      4983c101       add r9, 1
0x000041c6      4983f90a       cmp r9, 0xa
0x000041ca      75d4           jne 0x41a0
0x000041cc      4584db         test r11b, r11b
0x000041cf      7524           jne 0x41f5
0x000041d1      e89afaffff     call sym.version_etc_arn
0x000041d6      488b442478     mov rax, qword [rsp + 0x78]
0x000041db      644833042528.  xor rax, qword fs:[0x28]
0x000041e4      750a           jne 0x41f0
0x000041e6      4881c4b80000.  add rsp, 0xb8
0x000041ed      5b             pop rbx
0x000041ee      5d             pop rbp
0x000041ef      c3             ret
0x000041f0      e8bbd0ffff     call sym.imp.__stack_chk_fail
0x000041f5      4489542408     mov dword [rsp + 8], r10d
0x000041fa      ebd5           jmp 0x41d1
0x000041fc      4889d8         mov rax, rbx
0x000041ff      4883c308       add rbx, 8
0x00004203      ebb1           jmp 0x41b6
0x00004205      90             nop
0x00004206      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004210      53             push rbx
0x00004211      488d35aa0e00.  lea rsi, str.Report_bugs_to:__s         ; 0x50c2 ; "\nReport bugs to: %s\n"
0x00004218      ba05000000     mov edx, 5
0x0000421d      31ff           xor edi, edi
0x0000421f      e85cd0ffff     call sym.imp.dcgettext
0x00004224      488d15ac0e00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x50d7 ; "bug-coreutils@gnu.org"
0x0000422b      4889c6         mov rsi, rax
0x0000422e      bf01000000     mov edi, 1
0x00004233      31c0           xor eax, eax
0x00004235      e886d1ffff     call sym.imp.__printf_chk
0x0000423a      488d35ac0e00.  lea rsi, str.s_home_page:___s           ; 0x50ed ; "%s home page: <%s>\n"
0x00004241      ba05000000     mov edx, 5
0x00004246      31ff           xor edi, edi
0x00004248      e833d0ffff     call sym.imp.dcgettext
0x0000424d      488d0d340800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x4a88 ; "https://www.gnu.org/software/coreutils/"
0x00004254      488d15c30600.  lea rdx, str.GNU_coreutils              ; 0x491e ; "GNU coreutils"
0x0000425b      4889c6         mov rsi, rax
0x0000425e      bf01000000     mov edi, 1
0x00004263      31c0           xor eax, eax
0x00004265      e856d1ffff     call sym.imp.__printf_chk
0x0000426a      488b1d172e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00004271      488d35a81000.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x5320 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004278      31ff           xor edi, edi
0x0000427a      ba05000000     mov edx, 5
0x0000427f      e8fccfffff     call sym.imp.dcgettext
0x00004284      4889de         mov rsi, rbx
0x00004287      4889c7         mov rdi, rax
0x0000428a      5b             pop rbx
0x0000428b      e990d0ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004290      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004291      4889fb         mov rbx, rdi
0x00004294      e8c7d0ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004299      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000429c      7505           jne 0x42a3
0x0000429e      4885db         test rbx, rbx
0x000042a1      7502           jne 0x42a5
0x000042a3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000042a4      c3             ret
0x000042a5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000042aa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000042b0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000042b3      48f7e6         mul rsi
0x000042b6      4889c7         mov rdi, rax
0x000042b9      0f90c0         seto al
0x000042bc      4885ff         test rdi, rdi
0x000042bf      780a           js 0x42cb
0x000042c1      0fb6c0         movzx eax, al
0x000042c4      4885c0         test rax, rax
0x000042c7      7502           jne 0x42cb
0x000042c9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000042cb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000042cf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000042d4      6690           nop
0x000042d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000042e0      ebae           jmp sym.xmalloc
0x000042e2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000042e6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000042f0      4885f6         test rsi, rsi
0x000042f3      53             push rbx
0x000042f4      4889f3         mov rbx, rsi
0x000042f7      7505           jne 0x42fe
0x000042f9      4885ff         test rdi, rdi
0x000042fc      751a           jne 0x4318
0x000042fe      4889de         mov rsi, rbx
0x00004301      e89ad0ffff     call sym.imp.realloc
0x00004306      4885c0         test rax, rax
0x00004309      7505           jne 0x4310
0x0000430b      4885db         test rbx, rbx
0x0000430e      7511           jne 0x4321                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004310      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004311      c3             ret
0x00004312      660f1f440000   nop word [rax + rax]
0x00004318      e8c3ceffff     call sym.imp.free
0x0000431d      31c0           xor eax, eax
0x0000431f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004320      c3             ret
0x00004321      e8ba010000     call sym.xalloc_die
0x00004326      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004330      4889f0         mov rax, rsi
0x00004333      48f7e2         mul rdx
0x00004336      4889c6         mov rsi, rax
0x00004339      0f90c0         seto al
0x0000433c      4885f6         test rsi, rsi
0x0000433f      780a           js 0x434b
0x00004341      0fb6c0         movzx eax, al
0x00004344      4885c0         test rax, rax
0x00004347      7502           jne 0x434b
0x00004349      eba5           jmp sym.xrealloc
0x0000434b      4883ec08       sub rsp, 8
0x0000434f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004354      6690           nop
0x00004356      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004360      4885ff         test rdi, rdi
0x00004363      4989d1         mov r9, rdx
0x00004366      488b0e         mov rcx, qword [rsi]
0x00004369      7435           je 0x43a0
0x0000436b      31d2           xor edx, edx
0x0000436d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00004377      49f7f1         div r9
0x0000437a      4839c8         cmp rax, rcx
0x0000437d      763c           jbe 0x43bb
0x0000437f      4889c8         mov rax, rcx
0x00004382      48d1e8         shr rax, 1
0x00004385      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000438a      48890e         mov qword [rsi], rcx
0x0000438d      490fafc9       imul rcx, r9
0x00004391      4889ce         mov rsi, rcx
0x00004394      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004399      0f1f80000000.  nop dword [rax]
0x000043a0      4885c9         test rcx, rcx
0x000043a3      7423           je 0x43c8
0x000043a5      4889c8         mov rax, rcx
0x000043a8      49f7e1         mul r9
0x000043ab      0f90c2         seto dl
0x000043ae      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000043b1      0fb6d2         movzx edx, dl
0x000043b4      7805           js 0x43bb
0x000043b6      4885d2         test rdx, rdx
0x000043b9      74cf           je 0x438a
0x000043bb      4883ec08       sub rsp, 8
0x000043bf      e81c010000     call sym.xalloc_die
0x000043c4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000043c8      31d2           xor edx, edx
0x000043ca      b880000000     mov eax, 0x80
0x000043cf      4531c0         xor r8d, r8d
0x000043d2      49f7f1         div r9
0x000043d5      4885c0         test rax, rax
0x000043d8      410f94c0       sete r8b
0x000043dc      498d0c00       lea rcx, [r8 + rax]
0x000043e0      ebc3           jmp 0x43a5
0x000043e2      0f1f4000       nop dword [rax]
0x000043e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000043f0      4885ff         test rdi, rdi
0x000043f3      488b06         mov rax, qword [rsi]
0x000043f6      7428           je 0x4420
0x000043f8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004402      4839d0         cmp rax, rdx
0x00004405      772a           ja 0x4431
0x00004407      4889c2         mov rdx, rax
0x0000440a      48d1ea         shr rdx, 1
0x0000440d      488d440201     lea rax, [rdx + rax + 1]
0x00004412      488906         mov qword [rsi], rax
0x00004415      4889c6         mov rsi, rax
0x00004418      e9d3feffff     jmp sym.xrealloc
0x0000441d      0f1f00         nop dword [rax]
0x00004420      4885c0         test rax, rax
0x00004423      ba80000000     mov edx, 0x80
0x00004428      480f44c2       cmove rax, rdx
0x0000442c      4885c0         test rax, rax
0x0000442f      79e1           jns 0x4412
0x00004431      4883ec08       sub rsp, 8
0x00004435      e8a6000000     call sym.xalloc_die
0x0000443a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004440      53             push rbx
0x00004441      4889fb         mov rbx, rdi
0x00004444      e847feffff     call sym.xmalloc
0x00004449      4889da         mov rdx, rbx
0x0000444c      31f6           xor esi, esi
0x0000444e      4889c7         mov rdi, rax
0x00004451      5b             pop rbx
0x00004452      e9a9ceffff     jmp sym.imp.memset
0x00004457      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004460      4889f8         mov rax, rdi
0x00004463      4883ec08       sub rsp, 8
0x00004467      48f7e6         mul rsi
0x0000446a      0f90c2         seto dl
0x0000446d      4885c0         test rax, rax
0x00004470      7817           js 0x4489
0x00004472      0fb6d2         movzx edx, dl
0x00004475      4885d2         test rdx, rdx
0x00004478      750f           jne 0x4489
0x0000447a      e8b1ceffff     call sym.imp.calloc
0x0000447f      4885c0         test rax, rax
0x00004482      7405           je 0x4489
0x00004484      4883c408       add rsp, 8
0x00004488      c3             ret
0x00004489      e852000000     call sym.xalloc_die
0x0000448e      6690           nop
;-- xmemdup:
0x00004490      55             push rbp
0x00004491      53             push rbx
0x00004492      4889fd         mov rbp, rdi
0x00004495      4889f7         mov rdi, rsi
0x00004498      4889f3         mov rbx, rsi
0x0000449b      4883ec08       sub rsp, 8
0x0000449f      e8ecfdffff     call sym.xmalloc
0x000044a4      4883c408       add rsp, 8
0x000044a8      4889da         mov rdx, rbx
0x000044ab      4889ee         mov rsi, rbp
0x000044ae      5b             pop rbx
0x000044af      5d             pop rbp
0x000044b0      4889c7         mov rdi, rax
0x000044b3      e988ceffff     jmp sym.imp.memcpy
0x000044b8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000044c0      53             push rbx
0x000044c1      4889fb         mov rbx, rdi
0x000044c4      e8d7cdffff     call sym.imp.strlen
0x000044c9      4889df         mov rdi, rbx
0x000044cc      488d7001       lea rsi, [rax + 1]
0x000044d0      5b             pop rbx
0x000044d1      ebbd           jmp sym.xmemdup
0x000044d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000044dd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000044e0      488d35e80e00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x53cf ; "memory exhausted"
0x000044e7      4883ec08       sub rsp, 8
0x000044eb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000044f0      31ff           xor edi, edi
0x000044f2      e889cdffff     call sym.imp.dcgettext
0x000044f7      8b3d1b2b2000   mov edi, dword [obj.exit_failure]       ; [0x207018:4]=1
0x000044fd      488d153c0600.  lea rdx, [0x00004b40]                   ; "%s"
0x00004504      4889c1         mov rcx, rax
0x00004507      31f6           xor esi, esi
0x00004509      31c0           xor eax, eax
0x0000450b      e8c0ceffff     call sym.imp.error
0x00004510      e8dbccffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004515      662e0f1f8400.  nop word cs:[rax + rax]
0x0000451f      90             nop
;-- rpl_mbrtowc:
0x00004520      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00004522      4154           push r12
0x00004524      4989f5         mov r13, rsi
0x00004527      55             push rbp
0x00004528      53             push rbx
0x00004529      4889fb         mov rbx, rdi
0x0000452c      4989d4         mov r12, rdx
0x0000452f      4883ec18       sub rsp, 0x18
0x00004533      64488b042528.  mov rax, qword fs:[0x28]
0x0000453c      4889442408     mov qword [rsp + 8], rax
0x00004541      31c0           xor eax, eax
0x00004543      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00004548      4885ff         test rdi, rdi
0x0000454b      480f44d8       cmove rbx, rax
0x0000454f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00004552      e879cdffff     call sym.imp.mbrtowc
0x00004557      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000455b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000455e      7620           jbe 0x4580                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004560      4d85e4         test r12, r12
0x00004563      741b           je 0x4580
0x00004565      31ff           xor edi, edi
0x00004567      e8c4000000     call sym.hard_locale
0x0000456c      84c0           test al, al
0x0000456e      7510           jne 0x4580
0x00004570      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004575      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000457a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000457c      0f1f4000       nop dword [rax]
0x00004580      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00004585      644833142528.  xor rdx, qword fs:[0x28]
0x0000458e      4889e8         mov rax, rbp
0x00004591      750b           jne 0x459e
0x00004593      4883c418       add rsp, 0x18
0x00004597      5b             pop rbx
0x00004598      5d             pop rbp
0x00004599      415c           pop r12
0x0000459b      415d           pop r13
0x0000459d      c3             ret
0x0000459e      e80dcdffff     call sym.imp.__stack_chk_fail
0x000045a3      662e0f1f8400.  nop word cs:[rax + rax]
0x000045ad      0f1f00         nop dword [rax]
;-- close_stream:
0x000045b0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000045b2      55             push rbp
0x000045b3      4889fd         mov rbp, rdi
0x000045b6      53             push rbx
0x000045b7      e874ccffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000045bc      8b5d00         mov ebx, dword [rbp]
0x000045bf      4889ef         mov rdi, rbp
0x000045c2      4989c4         mov r12, rax
0x000045c5      e806010000     call sym.rpl_fclose
0x000045ca      83e320         and ebx, 0x20                           ; "@"
0x000045cd      85db           test ebx, ebx
0x000045cf      7517           jne 0x45e8
0x000045d1      85c0           test eax, eax
0x000045d3      740a           je 0x45df                               ; stdio.h:-186
0x000045d5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000045d8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000045dd      7439           je 0x4618
0x000045df      5b             pop rbx
0x000045e0      5d             pop rbp
0x000045e1      415c           pop r12
0x000045e3      c3             ret
0x000045e4      0f1f4000       nop dword [rax]
0x000045e8      85c0           test eax, eax
0x000045ea      751c           jne 0x4608
0x000045ec      e80fccffff     call sym.imp.__errno_location
0x000045f1      c70000000000   mov dword [rax], 0
0x000045f7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000045fc      5b             pop rbx
0x000045fd      5d             pop rbp
0x000045fe      415c           pop r12
0x00004600      c3             ret
0x00004601      0f1f80000000.  nop dword [rax]
0x00004608      5b             pop rbx
0x00004609      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000460e      5d             pop rbp                                 ; stdio.h:-186
0x0000460f      415c           pop r12
0x00004611      c3             ret
0x00004612      660f1f440000   nop word [rax + rax]
0x00004618      e8e3cbffff     call sym.imp.__errno_location
0x0000461d      833809         cmp dword [rax], 9
0x00004620      5b             pop rbx
0x00004621      5d             pop rbp
0x00004622      415c           pop r12                                 ; stdio.h:-178
0x00004624      0f95c0         setne al
0x00004627      0fb6c0         movzx eax, al
0x0000462a      f7d8           neg eax
0x0000462c      c3             ret
0x0000462d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00004630      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00004634      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00004636      e875cdffff     call sym.imp.setlocale
0x0000463b      4889c2         mov rdx, rax
0x0000463e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00004643      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00004646      741d           je 0x4665
0x00004648      488d3d910d00.  lea rdi, [0x000053e0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000464f      b902000000     mov ecx, 2
0x00004654      4889d6         mov rsi, rdx
0x00004657      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004659      0f97c1         seta cl
0x0000465c      80d900         sbb cl, 0
0x0000465f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00004661      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00004663      750b           jne 0x4670
0x00004665      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004669      c3             ret
0x0000466a      660f1f440000   nop word [rax + rax]
0x00004670      488d3d6b0d00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x53e2 ; "POSIX"
0x00004677      b906000000     mov ecx, 6
0x0000467c      4889d6         mov rsi, rdx
0x0000467f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004681      0f97c0         seta al
0x00004684      1c00           sbb al, 0
0x00004686      84c0           test al, al
0x00004688      0f95c0         setne al
0x0000468b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000468f      c3             ret
;-- locale_charset:
0x00004690      4883ec08       sub rsp, 8
0x00004694      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00004699      e8e2ccffff     call sym.imp.nl_langinfo
0x0000469e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000046a1      741d           je 0x46c0
0x000046a3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000046a6      488d153b0d00.  lea rdx, str.ASCII                      ; 0x53e8 ; "ASCII"
0x000046ad      480f44c2       cmove rax, rdx
0x000046b1      4883c408       add rsp, 8
0x000046b5      c3             ret
0x000046b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000046c0      488d05210d00.  lea rax, str.ASCII                      ; 0x53e8 ; "ASCII"
0x000046c7      4883c408       add rsp, 8
0x000046cb      c3             ret
0x000046cc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x000046d0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x000046d2      55             push rbp
0x000046d3      53             push rbx
0x000046d4      4889fb         mov rbx, rdi
0x000046d7      e874ccffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x000046dc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x000046de      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000046e1      7854           js 0x4737                               ; ../coreutils-8.31/lib/fclose.c:66
0x000046e3      e8a8ccffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000046e8      85c0           test eax, eax
0x000046ea      752c           jne 0x4718
0x000046ec      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000046ef      e85c000000     call sym.rpl_fflush
0x000046f4      85c0           test eax, eax
0x000046f6      743c           je 0x4734
0x000046f8      e803cbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000046fd      448b20         mov r12d, dword [rax]
0x00004700      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004703      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00004706      e855cbffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000470b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000470e      7530           jne 0x4740
0x00004710      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004711      5d             pop rbp
0x00004712      415c           pop r12
0x00004714      c3             ret
0x00004715      0f1f00         nop dword [rax]
0x00004718      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000471b      e830ccffff     call sym.imp.fileno
0x00004720      31f6           xor esi, esi
0x00004722      ba01000000     mov edx, 1
0x00004727      89c7           mov edi, eax
0x00004729      e8c2cbffff     call sym.imp.lseek
0x0000472e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004732      75b8           jne 0x46ec
0x00004734      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004737      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004738      5d             pop rbp
0x00004739      415c           pop r12
0x0000473b      e920cbffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00004740      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00004744      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00004749      ebc5           jmp 0x4710
0x0000474b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00004750      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00004753      53             push rbx
0x00004754      4889fb         mov rbx, rdi
0x00004757      7411           je 0x476a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00004759      e832ccffff     call sym.imp.__freading
0x0000475e      85c0           test eax, eax
0x00004760      7408           je 0x476a
0x00004762      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00004768      750e           jne 0x4778
0x0000476a      4889df         mov rdi, rbx
0x0000476d      5b             pop rbx
0x0000476e      e9fdcbffff     jmp sym.imp.fflush
0x00004773      0f1f440000     nop dword [rax + rax]
0x00004778      4889df         mov rdi, rbx
0x0000477b      ba01000000     mov edx, 1
0x00004780      31f6           xor esi, esi
0x00004782      e809000000     call sym.rpl_fseeko
0x00004787      4889df         mov rdi, rbx
0x0000478a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000478b      e9e0cbffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00004790      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00004794      48394710       cmp qword [rdi + 0x10], rax
0x00004798      7406           je 0x47a0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000479a      e941ccffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x0000479f      90             nop
0x000047a0      488b4720       mov rax, qword [rdi + 0x20]
0x000047a4      48394728       cmp qword [rdi + 0x28], rax
0x000047a8      75f0           jne 0x479a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000047aa      48837f4800     cmp qword [rdi + 0x48], 0
0x000047af      75e9           jne 0x479a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x000047b1      4154           push r12
0x000047b3      55             push rbp
0x000047b4      4189d4         mov r12d, edx
0x000047b7      53             push rbx
0x000047b8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000047bb      4889fb         mov rbx, rdi
0x000047be      e88dcbffff     call sym.imp.fileno
0x000047c3      4489e2         mov edx, r12d
0x000047c6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000047c9      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x000047cb      e820cbffff     call sym.imp.lseek
0x000047d0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000047d4      740c           je 0x47e2
0x000047d6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000047d9      488983900000.  mov qword [rbx + 0x90], rax
0x000047e0      31c0           xor eax, eax
0x000047e2      5b             pop rbx                                 ; /sys_errlist.h:19
0x000047e3      5d             pop rbp
0x000047e4      415c           pop r12
0x000047e6      c3             ret
0x000047e7      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x000047f0      4157           push r15
0x000047f2      4156           push r14
0x000047f4      4989d7         mov r15, rdx
0x000047f7      4155           push r13
0x000047f9      4154           push r12
0x000047fb      4c8d25ae2320.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x206bb0
0x00004802      55             push rbp
0x00004803      488d2dae2320.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x206bb8 ; "p\x17"
0x0000480a      53             push rbx
0x0000480b      4189fd         mov r13d, edi
0x0000480e      4989f6         mov r14, rsi
0x00004811      4c29e5         sub rbp, r12
0x00004814      4883ec08       sub rsp, 8
0x00004818      48c1fd03       sar rbp, 3
0x0000481c      e897c9ffff     call sym._init
0x00004821      4885ed         test rbp, rbp
0x00004824      7420           je 0x4846
0x00004826      31db           xor ebx, ebx
0x00004828      0f1f84000000.  nop dword [rax + rax]
0x00004830      4c89fa         mov rdx, r15
0x00004833      4c89f6         mov rsi, r14
0x00004836      4489ef         mov edi, r13d
0x00004839      41ff14dc       call qword [r12 + rbx*8]
0x0000483d      4883c301       add rbx, 1
0x00004841      4839dd         cmp rbp, rbx
0x00004844      75ea           jne 0x4830
0x00004846      4883c408       add rsp, 8
0x0000484a      5b             pop rbx
0x0000484b      5d             pop rbp
0x0000484c      415c           pop r12
0x0000484e      415d           pop r13
0x00004850      415e           pop r14
0x00004852      415f           pop r15
0x00004854      c3             ret
0x00004855      90             nop
0x00004856      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00004860      f3c3           ret
0x00004862      662e0f1f8400.  nop word cs:[rax + rax]
0x0000486c      0f1f4000       nop dword [rax]
;-- atexit:
0x00004870      488b15912720.  mov rdx, qword [obj.__dso_handle]       ; [0x207008:8]=0x207008 obj.__dso_handle
0x00004877      31f6           xor esi, esi
0x00004879      e972cbffff     jmp sym.imp.__cxa_atexit
0x0000487e      0000           add byte [rax], al
