;-- section..plt:
;-- .plt:
0x00001450      ff35da692000   push qword [0x00207e30]                 ; [12] -r-x section size 784 named .plt
0x00001456      ff25dc692000   jmp qword [0x00207e38]                  ; [0x207e38:8]=0
0x0000145c      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x00001460      ff25da692000   jmp qword [reloc.__uflow]               ; [0x207e40:8]=0x1466 ; "f\x14"
0x00001466      6800000000     push 0
0x0000146b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001470      ff25d2692000   jmp qword [reloc.free]                  ; [0x207e48:8]=0x1476 ; "v\x14"
0x00001476      6801000000     push 1
0x0000147b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001480      ff25ca692000   jmp qword [reloc.abort]                 ; [0x207e50:8]=0x1486
0x00001486      6802000000     push 2
0x0000148b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001490      ff25c2692000   jmp qword [reloc.__errno_location]      ; [0x207e58:8]=0x1496
0x00001496      6803000000     push 3
0x0000149b      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000014a0      ff25ba692000   jmp qword [reloc.strncmp]               ; [0x207e60:8]=0x14a6
0x000014a6      6804000000     push 4
0x000014ab      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x000014b0      ff25b2692000   jmp qword [reloc._exit]                 ; [0x207e68:8]=0x14b6
0x000014b6      6805000000     push 5
0x000014bb      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x000014c0      ff25aa692000   jmp qword [reloc.__fpending]            ; [0x207e70:8]=0x14c6
0x000014c6      6806000000     push 6
0x000014cb      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x000014d0      ff25a2692000   jmp qword [reloc.textdomain]            ; [0x207e78:8]=0x14d6
0x000014d6      6807000000     push 7
0x000014db      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x000014e0      ff259a692000   jmp qword [reloc.fclose]                ; [0x207e80:8]=0x14e6
0x000014e6      6808000000     push 8
0x000014eb      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000014f0      ff2592692000   jmp qword [reloc.bindtextdomain]        ; [0x207e88:8]=0x14f6
0x000014f6      6809000000     push 9
0x000014fb      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001500      ff258a692000   jmp qword [reloc.dcgettext]             ; [0x207e90:8]=0x1506
0x00001506      680a000000     push 0xa
0x0000150b      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001510      ff2582692000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207e98:8]=0x1516
0x00001516      680b000000     push 0xb
0x0000151b      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x00001520      ff257a692000   jmp qword [reloc.strlen]                ; [0x207ea0:8]=0x1526 ; "&\x15"
0x00001526      680c000000     push 0xc
0x0000152b      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001530      ff2572692000   jmp qword [reloc.__stack_chk_fail]      ; [0x207ea8:8]=0x1536 ; "6\x15"
0x00001536      680d000000     push 0xd
0x0000153b      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001540      ff256a692000   jmp qword [reloc.getopt_long]           ; [0x207eb0:8]=0x1546 ; "F\x15"
0x00001546      680e000000     push 0xe
0x0000154b      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001550      ff2562692000   jmp qword [reloc.mbrtowc]               ; [0x207eb8:8]=0x1556 ; "V\x15"
0x00001556      680f000000     push 0xf
0x0000155b      e9f0feffff     jmp sym..plt
;-- imp.strchr:
0x00001560      ff255a692000   jmp qword [reloc.strchr]                ; [0x207ec0:8]=0x1566 ; "f\x15"
0x00001566      6810000000     push 0x10
0x0000156b      e9e0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001570      ff2552692000   jmp qword [reloc.__overflow]            ; [0x207ec8:8]=0x1576 ; "v\x15"
0x00001576      6811000000     push 0x11
0x0000157b      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001580      ff254a692000   jmp qword [reloc.strrchr]               ; [0x207ed0:8]=0x1586
0x00001586      6812000000     push 0x12
0x0000158b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001590      ff2542692000   jmp qword [reloc.lseek]                 ; [0x207ed8:8]=0x1596
0x00001596      6813000000     push 0x13
0x0000159b      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x000015a0      ff253a692000   jmp qword [reloc.__assert_fail]         ; [0x207ee0:8]=0x15a6
0x000015a6      6814000000     push 0x14
0x000015ab      e9a0feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x000015b0      ff2532692000   jmp qword [reloc.__strtoul_internal]    ; [0x207ee8:8]=0x15b6
0x000015b6      6815000000     push 0x15
0x000015bb      e990feffff     jmp sym..plt
;-- imp.memset:
0x000015c0      ff252a692000   jmp qword [reloc.memset]                ; [0x207ef0:8]=0x15c6
0x000015c6      6816000000     push 0x16
0x000015cb      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x000015d0      ff2522692000   jmp qword [reloc.posix_fadvise]         ; [0x207ef8:8]=0x15d6
0x000015d6      6817000000     push 0x17
0x000015db      e970feffff     jmp sym..plt
;-- imp.memcmp:
0x000015e0      ff251a692000   jmp qword [reloc.memcmp]                ; [0x207f00:8]=0x15e6
0x000015e6      6818000000     push 0x18
0x000015eb      e960feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000015f0      ff2512692000   jmp qword [reloc.fputs_unlocked]        ; [0x207f08:8]=0x15f6
0x000015f6      6819000000     push 0x19
0x000015fb      e950feffff     jmp sym..plt
;-- imp.calloc:
0x00001600      ff250a692000   jmp qword [reloc.calloc]                ; [0x207f10:8]=0x1606
0x00001606      681a000000     push 0x1a
0x0000160b      e940feffff     jmp sym..plt
;-- imp.memcpy:
0x00001610      ff2502692000   jmp qword [reloc.memcpy]                ; [0x207f18:8]=0x1616
0x00001616      681b000000     push 0x1b
0x0000161b      e930feffff     jmp sym..plt
;-- imp.fileno:
0x00001620      ff25fa682000   jmp qword [reloc.fileno]                ; [0x207f20:8]=0x1626 ; "&\x16"
0x00001626      681c000000     push 0x1c
0x0000162b      e920feffff     jmp sym..plt
;-- imp.malloc:
0x00001630      ff25f2682000   jmp qword [reloc.malloc]                ; [0x207f28:8]=0x1636 ; "6\x16"
0x00001636      681d000000     push 0x1d
0x0000163b      e910feffff     jmp sym..plt
;-- imp.fflush:
0x00001640      ff25ea682000   jmp qword [reloc.fflush]                ; [0x207f30:8]=0x1646 ; "F\x16"
0x00001646      681e000000     push 0x1e
0x0000164b      e900feffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001650      ff25e2682000   jmp qword [reloc.nl_langinfo]           ; [0x207f38:8]=0x1656 ; "V\x16"
0x00001656      681f000000     push 0x1f
0x0000165b      e9f0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001660      ff25da682000   jmp qword [reloc.__freading]            ; [0x207f40:8]=0x1666 ; "f\x16"
0x00001666      6820000000     push 0x20                               ; "@"
0x0000166b      e9e0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001670      ff25d2682000   jmp qword [reloc.fwrite_unlocked]       ; [0x207f48:8]=0x1676 ; "v\x16"
0x00001676      6821000000     push 0x21                               ; '!'
0x0000167b      e9d0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001680      ff25ca682000   jmp qword [reloc.realloc]               ; [0x207f50:8]=0x1686
0x00001686      6822000000     push 0x22                               ; '"'
0x0000168b      e9c0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001690      ff25c2682000   jmp qword [reloc.setlocale]             ; [0x207f58:8]=0x1696
0x00001696      6823000000     push 0x23                               ; '#'
0x0000169b      e9b0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000016a0      ff25ba682000   jmp qword [reloc.__printf_chk]          ; [0x207f60:8]=0x16a6
0x000016a6      6824000000     push 0x24                               ; '$'
0x000016ab      e9a0fdffff     jmp sym..plt
;-- imp.memmove:
0x000016b0      ff25b2682000   jmp qword [reloc.memmove]               ; [0x207f68:8]=0x16b6
0x000016b6      6825000000     push 0x25                               ; '%'
0x000016bb      e990fdffff     jmp sym..plt
;-- imp.error:
0x000016c0      ff25aa682000   jmp qword [reloc.error]                 ; [0x207f70:8]=0x16c6
0x000016c6      6826000000     push 0x26                               ; '&'
0x000016cb      e980fdffff     jmp sym..plt
;-- imp.fseeko:
0x000016d0      ff25a2682000   jmp qword [reloc.fseeko]                ; [0x207f78:8]=0x16d6
0x000016d6      6827000000     push 0x27                               ; '''
0x000016db      e970fdffff     jmp sym..plt
;-- imp.fopen:
0x000016e0      ff259a682000   jmp qword [reloc.fopen]                 ; [0x207f80:8]=0x16e6
0x000016e6      6828000000     push 0x28                               ; '('
0x000016eb      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x000016f0      ff2592682000   jmp qword [reloc.__cxa_atexit]          ; [0x207f88:8]=0x16f6
0x000016f6      6829000000     push 0x29                               ; ')'
0x000016fb      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001700      ff258a682000   jmp qword [reloc.exit]                  ; [0x207f90:8]=0x1706
0x00001706      682a000000     push 0x2a                               ; '*'
0x0000170b      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001710      ff2582682000   jmp qword [reloc.fwrite]                ; [0x207f98:8]=0x1716
0x00001716      682b000000     push 0x2b                               ; '+'
0x0000171b      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001720      ff257a682000   jmp qword [reloc.__fprintf_chk]         ; [0x207fa0:8]=0x1726 ; "&\x17"
0x00001726      682c000000     push 0x2c                               ; ','
0x0000172b      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001730      ff2572682000   jmp qword [reloc.mbsinit]               ; [0x207fa8:8]=0x1736 ; "6\x17"
0x00001736      682d000000     push 0x2d                               ; '-'
0x0000173b      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001740      ff256a682000   jmp qword [reloc.iswprint]              ; [0x207fb0:8]=0x1746 ; "F\x17"
0x00001746      682e000000     push 0x2e                               ; '.'
0x0000174b      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001750      ff2562682000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fb8:8]=0x1756 ; "V\x17"
0x00001756      682f000000     push 0x2f                               ; '/'
0x0000175b      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001760      .qword 0x90660020687a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001768      0000           add byte [rax], al
0x0000176a      0000           add byte [rax], al
0x0000176c      0000           add byte [rax], al
0x0000176e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001770      4155           push r13                                ; [14] -r-x section size 15070 named .text
0x00001772      4154           push r12
0x00001774      41bc50000000   mov r12d, 0x50                          ; 'P'
0x0000177a      55             push rbp
0x0000177b      53             push rbx
0x0000177c      89fd           mov ebp, edi
0x0000177e      4889f3         mov rbx, rsi
0x00001781      4883ec18       sub rsp, 0x18
0x00001785      488b3e         mov rdi, qword [rsi]
0x00001788      64488b042528.  mov rax, qword fs:[0x28]
0x00001791      4889442408     mov qword [rsp + 8], rax
0x00001796      31c0           xor eax, eax
0x00001798      4c8d6c2406     lea r13, [rsp + 6]
0x0000179d      e81e0c0000     call sym.set_program_name
0x000017a2      488d35584400.  lea rsi, [0x00005c01]
0x000017a9      bf06000000     mov edi, 6
0x000017ae      e8ddfeffff     call sym.imp.setlocale
0x000017b3      488d35523b00.  lea rsi, str.usr_local_share_locale     ; 0x530c ; "/usr/local/share/locale"
0x000017ba      488d3d223b00.  lea rdi, [0x000052e3]                   ; "coreutils"
0x000017c1      e82afdffff     call sym.imp.bindtextdomain
0x000017c6      488d3d163b00.  lea rdi, [0x000052e3]                   ; "coreutils"
0x000017cd      e8fefcffff     call sym.imp.textdomain
0x000017d2      488d3df70a00.  lea rdi, sym.close_stdout               ; 0x22d0 ; "USH\x83\xec\bH\x8b=\xab] "
0x000017d9      e8623a0000     call sym.atexit
0x000017de      c605fb682000.  mov byte [obj.have_read_stdin], 0       ; [0x2080e0:1]=0
0x000017e5      c605f5682000.  mov byte [obj.count_bytes], 0           ; [0x2080e1:1]=0
0x000017ec      c605ef682000.  mov byte [obj.break_spaces], 0          ; [0x2080e2:1]=0
0x000017f3      488d0d266320.  lea rcx, obj.longopts                   ; 0x207b20 ; "NS"
0x000017fa      488d153f3e00.  lea rdx, obj.shortopts                  ; 0x5640 ; "bsw:0::1::2::3::4::5::6::7::8::9::"
0x00001801      4531c0         xor r8d, r8d
0x00001804      4889de         mov rsi, rbx
0x00001807      89ef           mov edi, ebp
0x00001809      e832fdffff     call sym.imp.getopt_long
0x0000180e      83f8ff         cmp eax, 0xffffffff
0x00001811      0f84f7000000   je 0x190e
0x00001817      83f839         cmp eax, 0x39
0x0000181a      7e34           jle 0x1850
0x0000181c      83f873         cmp eax, 0x73
0x0000181f      0f84cb000000   je 0x18f0
0x00001825      83f877         cmp eax, 0x77
0x00001828      0f8481000000   je 0x18af
0x0000182e      83f862         cmp eax, 0x62
0x00001831      740d           je 0x1840
0x00001833      bf01000000     mov edi, 1
0x00001838      e8b3060000     call sym.usage
0x0000183d      0f1f00         nop dword [rax]
0x00001840      c6059a682000.  mov byte [obj.count_bytes], 1           ; [0x2080e1:1]=0
0x00001847      ebaa           jmp 0x17f3
0x00001849      0f1f80000000.  nop dword [rax]
0x00001850      83f830         cmp eax, 0x30
0x00001853      7d43           jge 0x1898
0x00001855      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x0000185a      0f8566010000   jne 0x19c6
0x00001860      488b3d216820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001867      488b0da26720.  mov rcx, qword [obj.Version]            ; [0x208010:8]=0x5663 str.8.31 ; "cV"
0x0000186e      4c8d05c93a00.  lea r8, str.David_MacKenzie             ; 0x533e ; "David MacKenzie"
0x00001875      488d15633a00.  lea rdx, str.GNU_coreutils              ; 0x52df ; "GNU coreutils"
0x0000187c      488d35e13900.  lea rsi, str.fold                       ; 0x5264 ; "fold"
0x00001883      4531c9         xor r9d, r9d
0x00001886      31c0           xor eax, eax
0x00001888      e8232d0000     call sym.version_etc
0x0000188d      31ff           xor edi, edi
0x0000188f      e86cfeffff     call sym.imp.exit
0x00001894      0f1f4000       nop dword [rax]
0x00001898      488b15016820.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x0000189f      4885d2         test rdx, rdx
0x000018a2      7458           je 0x18fc
0x000018a4      4883ea01       sub rdx, 1
0x000018a8      488915f16720.  mov qword [obj.optarg], rdx             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x000018af      488d356e3a00.  lea rsi, str.invalid_number_of_columns  ; 0x5324 ; "invalid number of columns"
0x000018b6      ba05000000     mov edx, 5
0x000018bb      31ff           xor edi, edi
0x000018bd      e83efcffff     call sym.imp.dcgettext
0x000018c2      488b3dd76720.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x000018c9      488d0d314300.  lea rcx, [0x00005c01]
0x000018d0      4989c0         mov r8, rax
0x000018d3      4531c9         xor r9d, r9d
0x000018d6      48c7c2f6ffff.  mov rdx, 0xfffffffffffffff6
0x000018dd      be01000000     mov esi, 1
0x000018e2      e8b9310000     call sym.xdectoumax
0x000018e7      4989c4         mov r12, rax
0x000018ea      e904ffffff     jmp 0x17f3
0x000018ef      90             nop
0x000018f0      c605eb672000.  mov byte [obj.break_spaces], 1          ; [0x2080e2:1]=0
0x000018f7      e9f7feffff     jmp 0x17f3
0x000018fc      88442406       mov byte [rsp + 6], al
0x00001900      c644240700     mov byte [rsp + 7], 0
0x00001905      4c892d946720.  mov qword [obj.optarg], r13             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x0000190c      eba1           jmp 0x18af
0x0000190e      8b0584672000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208098:4]=0
0x00001914      39e8           cmp eax, ebp
0x00001916      0f8490000000   je 0x19ac
0x0000191c      0f8d9d000000   jge 0x19bf
0x00001922      4863d0         movsxd rdx, eax
0x00001925      f7d0           not eax
0x00001927      01e8           add eax, ebp
0x00001929      4c8d2cd3       lea r13, [rbx + rdx*8]
0x0000192d      4801d0         add rax, rdx
0x00001930      488d6cc308     lea rbp, [rbx + rax*8 + 8]
0x00001935      bb01000000     mov ebx, 1
0x0000193a      660f1f440000   nop word [rax + rax]
0x00001940      498b7d00       mov rdi, qword [r13]
0x00001944      4c89e6         mov rsi, r12
0x00001947      4983c508       add r13, 8
0x0000194b      e8f0010000     call sym.fold_file
0x00001950      21c3           and ebx, eax
0x00001952      4939ed         cmp r13, rbp
0x00001955      75e9           jne 0x1940
0x00001957      803d82672000.  cmp byte [obj.have_read_stdin], 0       ; [0x2080e0:1]=0
0x0000195e      7521           jne 0x1981
0x00001960      83f301         xor ebx, 1
0x00001963      488b4c2408     mov rcx, qword [rsp + 8]
0x00001968      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001971      0fb6c3         movzx eax, bl
0x00001974      7562           jne 0x19d8
0x00001976      4883c418       add rsp, 0x18
0x0000197a      5b             pop rbx
0x0000197b      5d             pop rbp
0x0000197c      415c           pop r12
0x0000197e      415d           pop r13
0x00001980      c3             ret
0x00001981      488b3d086720.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x208090:8]=0
0x00001988      e863350000     call sym.rpl_fclose
0x0000198d      83c001         add eax, 1
0x00001990      75ce           jne 0x1960
0x00001992      e8f9faffff     call sym.imp.__errno_location
0x00001997      8b30           mov esi, dword [rax]
0x00001999      488d15223d00.  lea rdx, [0x000056c2]                   ; "-"
0x000019a0      bf01000000     mov edi, 1
0x000019a5      31c0           xor eax, eax
0x000019a7      e814fdffff     call sym.imp.error
0x000019ac      488d3d0f3d00.  lea rdi, [0x000056c2]                   ; "-"
0x000019b3      4c89e6         mov rsi, r12
0x000019b6      e885010000     call sym.fold_file
0x000019bb      89c3           mov ebx, eax
0x000019bd      eb98           jmp 0x1957
0x000019bf      bb01000000     mov ebx, 1
0x000019c4      eb91           jmp 0x1957
0x000019c6      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000019cb      0f8562feffff   jne 0x1833
0x000019d1      31ff           xor edi, edi
0x000019d3      e818050000     call sym.usage
0x000019d8      e853fbffff     call sym.imp.__stack_chk_fail
0x000019dd      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x000019e0      31ed           xor ebp, ebp
0x000019e2      4989d1         mov r9, rdx
0x000019e5      5e             pop rsi
0x000019e6      4889e2         mov rdx, rsp
0x000019e9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000019ed      50             push rax
0x000019ee      54             push rsp
0x000019ef      4c8d053a3800.  lea r8, sym.__libc_csu_fini             ; 0x5230
0x000019f6      488d0dc33700.  lea rcx, sym.__libc_csu_init            ; 0x51c0 ; "AWAVI\x89\xd7AUATL\x8d%>) "
0x000019fd      488d3d6cfdff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1770 ; "AUATA\xbcP"
0x00001a04      ff15be652000   call qword [reloc.__libc_start_main]    ; [0x207fc8:8]=0
0x00001a0a      f4             hlt
0x00001a0b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001a10      488d3d696620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a17      55             push rbp
0x00001a18      488d05616620.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a1f      4839f8         cmp rax, rdi
0x00001a22      4889e5         mov rbp, rsp
0x00001a25      7419           je 0x1a40
0x00001a27      488b05926520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fc0:8]=0
0x00001a2e      4885c0         test rax, rax
0x00001a31      740d           je 0x1a40
0x00001a33      5d             pop rbp
0x00001a34      ffe0           jmp rax
0x00001a36      662e0f1f8400.  nop word cs:[rax + rax]
0x00001a40      5d             pop rbp
0x00001a41      c3             ret
0x00001a42      0f1f4000       nop dword [rax]
0x00001a46      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001a50      488d3d296620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a57      488d35226620.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a5e      55             push rbp
0x00001a5f      4829fe         sub rsi, rdi
0x00001a62      4889e5         mov rbp, rsp
0x00001a65      48c1fe03       sar rsi, 3
0x00001a69      4889f0         mov rax, rsi
0x00001a6c      48c1e83f       shr rax, 0x3f
0x00001a70      4801c6         add rsi, rax
0x00001a73      48d1fe         sar rsi, 1
0x00001a76      7418           je 0x1a90
0x00001a78      488b05596520.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fd8:8]=0
0x00001a7f      4885c0         test rax, rax
0x00001a82      740c           je 0x1a90
0x00001a84      5d             pop rbp
0x00001a85      ffe0           jmp rax
0x00001a87      660f1f840000.  nop word [rax + rax]
0x00001a90      5d             pop rbp
0x00001a91      c3             ret
0x00001a92      0f1f4000       nop dword [rax]
0x00001a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001aa0      803d21662000.  cmp byte [obj.completed.7697], 0        ; [0x2080c8:1]=0
0x00001aa7      752f           jne 0x1ad8
0x00001aa9      48833d2f6520.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207fe0:8]=0
0x00001ab1      55             push rbp
0x00001ab2      4889e5         mov rbp, rsp
0x00001ab5      740c           je 0x1ac3
0x00001ab7      488b3d4a6520.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001abe      e89dfcffff     call sym..plt.got
0x00001ac3      e848ffffff     call sym.deregister_tm_clones
0x00001ac8      c605f9652000.  mov byte [obj.completed.7697], 1        ; [0x2080c8:1]=0
0x00001acf      5d             pop rbp
0x00001ad0      c3             ret
0x00001ad1      0f1f80000000.  nop dword [rax]
0x00001ad8      f3c3           ret
0x00001ada      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001ae0      55             push rbp
0x00001ae1      4889e5         mov rbp, rsp
0x00001ae4      5d             pop rbp
0x00001ae5      e966ffffff     jmp sym.register_tm_clones
0x00001aea      660f1f440000   nop word [rax + rax]
;-- adjust_column:
0x00001af0      803dea652000.  cmp byte [obj.count_bytes], 0           ; [0x2080e1:1]=0
0x00001af7      7514           jne 0x1b0d
0x00001af9      4080fe08       cmp sil, 8
0x00001afd      7419           je 0x1b18
0x00001aff      31c0           xor eax, eax
0x00001b01      4080fe0d       cmp sil, 0xd
0x00001b05      740a           je 0x1b11
0x00001b07      4080fe09       cmp sil, 9
0x00001b0b      7423           je 0x1b30
0x00001b0d      488d4701       lea rax, [rdi + 1]
0x00001b11      f3c3           ret
0x00001b13      0f1f440000     nop dword [rax + rax]
0x00001b18      488d57ff       lea rdx, [rdi - 1]
0x00001b1c      4885ff         test rdi, rdi
0x00001b1f      b800000000     mov eax, 0
0x00001b24      480f45c2       cmovne rax, rdx
0x00001b28      c3             ret
0x00001b29      0f1f80000000.  nop dword [rax]
0x00001b30      4883e7f8       and rdi, 0xfffffffffffffff8
0x00001b34      488d4708       lea rax, [rdi + 8]
0x00001b38      c3             ret
0x00001b39      0f1f80000000.  nop dword [rax]
;-- fold_file:
0x00001b40      4157           push r15
0x00001b42      4156           push r14
0x00001b44      b902000000     mov ecx, 2
0x00001b49      4155           push r13
0x00001b4b      4154           push r12
0x00001b4d      55             push rbp
0x00001b4e      53             push rbx
0x00001b4f      4883ec28       sub rsp, 0x28
0x00001b53      48897c2410     mov qword [rsp + 0x10], rdi
0x00001b58      4889742408     mov qword [rsp + 8], rsi
0x00001b5d      4889fe         mov rsi, rdi
0x00001b60      488d3d5b3b00.  lea rdi, [0x000056c2]                   ; "-"
0x00001b67      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001b69      0f97c0         seta al
0x00001b6c      1c00           sbb al, 0
0x00001b6e      84c0           test al, al
0x00001b70      0f858a020000   jne 0x1e00
0x00001b76      4c8b25136520.  mov r12, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x208090:8]=0
0x00001b7d      c6055c652000.  mov byte [obj.have_read_stdin], 1       ; [0x2080e0:1]=0
0x00001b84      e807f9ffff     call sym.imp.__errno_location
0x00001b89      4889442418     mov qword [rsp + 0x18], rax
0x00001b8e      4d85e4         test r12, r12
0x00001b91      0f8490020000   je 0x1e27
0x00001b97      be02000000     mov esi, 2
0x00001b9c      4c89e7         mov rdi, r12
0x00001b9f      31db           xor ebx, ebx
0x00001ba1      4531ff         xor r15d, r15d
0x00001ba4      e8e7070000     call sym.fadvise
0x00001ba9      498b442408     mov rax, qword [r12 + 8]
0x00001bae      493b442410     cmp rax, qword [r12 + 0x10]
0x00001bb3      0f8360010000   jae 0x1d19
0x00001bb9      488d5001       lea rdx, [rax + 1]
0x00001bbd      4989542408     mov qword [r12 + 8], rdx
0x00001bc2      0fb628         movzx ebp, byte [rax]
0x00001bc5      4c8d7301       lea r14, [rbx + 1]
0x00001bc9      4c3b35086520.  cmp r14, qword [obj.allocated_out.6895] ; [0x2080d8:8]=0
0x00001bd0      4c8b2df96420.  mov r13, qword [obj.line_out.6894]      ; [0x2080d0:8]=0
0x00001bd7      0f83bb010000   jae 0x1d98
0x00001bdd      83fd0a         cmp ebp, 0xa
0x00001be0      0f84d4010000   je 0x1dba
0x00001be6      4189ee         mov r14d, ebp
0x00001be9      400fbeed       movsx ebp, bpl
0x00001bed      4c89ff         mov rdi, r15
0x00001bf0      89ee           mov esi, ebp
0x00001bf2      e8f9feffff     call sym.adjust_column
0x00001bf7      483b442408     cmp rax, qword [rsp + 8]
0x00001bfc      4989c7         mov r15, rax
0x00001bff      0f86e3010000   jbe 0x1de8
0x00001c05      803dd6642000.  cmp byte [obj.break_spaces], 0          ; [0x2080e2:1]=0
0x00001c0c      753a           jne 0x1c48
0x00001c0e      4885db         test rbx, rbx
0x00001c11      0f84e9000000   je 0x1d00
0x00001c17      41c6441d000a   mov byte [r13 + rbx], 0xa
0x00001c1d      488b0d646420.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001c24      488d5301       lea rdx, [rbx + 1]
0x00001c28      4c89ef         mov rdi, r13
0x00001c2b      be01000000     mov esi, 1
0x00001c30      31db           xor ebx, ebx
0x00001c32      4531ff         xor r15d, r15d
0x00001c35      e836faffff     call sym.imp.fwrite_unlocked
0x00001c3a      4c8b2d8f6420.  mov r13, qword [obj.line_out.6894]      ; [0x2080d0:8]=0
0x00001c41      ebaa           jmp 0x1bed
0x00001c43      0f1f440000     nop dword [rax + rax]
0x00001c48      4885db         test rbx, rbx
0x00001c4b      0f84af000000   je 0x1d00
0x00001c51      e8fafaffff     call sym.imp.__ctype_b_loc
0x00001c56      4989df         mov r15, rbx
0x00001c59      488b08         mov rcx, qword [rax]
0x00001c5c      eb0a           jmp 0x1c68
0x00001c5e      6690           nop
0x00001c60      4885d2         test rdx, rdx
0x00001c63      4989d7         mov r15, rdx
0x00001c66      74af           je 0x1c17
0x00001c68      430fb6443dff   movzx eax, byte [r13 + r15 - 1]
0x00001c6e      498d57ff       lea rdx, [r15 - 1]
0x00001c72      f6044101       test byte [rcx + rax*2], 1
0x00001c76      74e8           je 0x1c60
0x00001c78      488b0d096420.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001c7f      4c89ef         mov rdi, r13
0x00001c82      4c89fa         mov rdx, r15
0x00001c85      be01000000     mov esi, 1
0x00001c8a      e8e1f9ffff     call sym.imp.fwrite_unlocked
0x00001c8f      488b3df26320.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001c96      488b4728       mov rax, qword [rdi + 0x28]
0x00001c9a      483b4730       cmp rax, qword [rdi + 0x30]
0x00001c9e      0f833a020000   jae 0x1ede
0x00001ca4      488d5001       lea rdx, [rax + 1]
0x00001ca8      48895728       mov qword [rdi + 0x28], rdx
0x00001cac      c6000a         mov byte [rax], 0xa
0x00001caf      4c8b2d1a6420.  mov r13, qword [obj.line_out.6894]      ; [0x2080d0:8]=0
0x00001cb6      4c29fb         sub rbx, r15
0x00001cb9      4889da         mov rdx, rbx
0x00001cbc      4b8d743d00     lea rsi, [r13 + r15]
0x00001cc1      4c89ef         mov rdi, r13
0x00001cc4      e8e7f9ffff     call sym.imp.memmove
0x00001cc9      4885db         test rbx, rbx
0x00001ccc      0f8404020000   je 0x1ed6
0x00001cd2      4e8d142b       lea r10, [rbx + r13]
0x00001cd6      4d89e8         mov r8, r13
0x00001cd9      4531ff         xor r15d, r15d
0x00001cdc      0f1f4000       nop dword [rax]
0x00001ce0      410fbe30       movsx esi, byte [r8]
0x00001ce4      4c89ff         mov rdi, r15
0x00001ce7      e804feffff     call sym.adjust_column
0x00001cec      4983c001       add r8, 1
0x00001cf0      4989c7         mov r15, rax
0x00001cf3      4d39c2         cmp r10, r8
0x00001cf6      75e8           jne 0x1ce0
0x00001cf8      e9f0feffff     jmp 0x1bed
0x00001cfd      0f1f00         nop dword [rax]
0x00001d00      45887500       mov byte [r13], r14b
0x00001d04      498b442408     mov rax, qword [r12 + 8]
0x00001d09      bb01000000     mov ebx, 1
0x00001d0e      493b442410     cmp rax, qword [r12 + 0x10]
0x00001d13      0f82a0feffff   jb 0x1bb9
0x00001d19      4c89e7         mov rdi, r12
0x00001d1c      e83ff7ffff     call sym.imp.__uflow
0x00001d21      83f8ff         cmp eax, 0xffffffff
0x00001d24      89c5           mov ebp, eax
0x00001d26      0f8599feffff   jne 0x1bc5
0x00001d2c      488b442418     mov rax, qword [rsp + 0x18]
0x00001d31      4885db         test rbx, rbx
0x00001d34      8b28           mov ebp, dword [rax]
0x00001d36      741b           je 0x1d53
0x00001d38      488b0d496320.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001d3f      488b3d8a6320.  mov rdi, qword [obj.line_out.6894]      ; [0x2080d0:8]=0
0x00001d46      4889da         mov rdx, rbx
0x00001d49      be01000000     mov esi, 1
0x00001d4e      e81df9ffff     call sym.imp.fwrite_unlocked
0x00001d53      41f6042420     test byte [r12], 0x20
0x00001d58      0f8502010000   jne 0x1e60
0x00001d5e      488b742410     mov rsi, qword [rsp + 0x10]
0x00001d63      488d3d583900.  lea rdi, [0x000056c2]                   ; "-"
0x00001d6a      b902000000     mov ecx, 2
0x00001d6f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001d71      0f97c0         seta al
0x00001d74      1c00           sbb al, 0
0x00001d76      84c0           test al, al
0x00001d78      0f8542010000   jne 0x1ec0
0x00001d7e      bb01000000     mov ebx, 1
0x00001d83      4883c428       add rsp, 0x28
0x00001d87      89d8           mov eax, ebx
0x00001d89      5b             pop rbx
0x00001d8a      5d             pop rbp
0x00001d8b      415c           pop r12
0x00001d8d      415d           pop r13
0x00001d8f      415e           pop r14
0x00001d91      415f           pop r15
0x00001d93      c3             ret
0x00001d94      0f1f4000       nop dword [rax]
0x00001d98      488d35396320.  lea rsi, obj.allocated_out.6895         ; 0x2080d8
0x00001d9f      4c89ef         mov rdi, r13
0x00001da2      e8c92a0000     call sym.x2realloc
0x00001da7      83fd0a         cmp ebp, 0xa
0x00001daa      4989c5         mov r13, rax
0x00001dad      4889051c6320.  mov qword [obj.line_out.6894], rax      ; [0x2080d0:8]=0
0x00001db4      0f852cfeffff   jne 0x1be6
0x00001dba      41c6441d000a   mov byte [r13 + rbx], 0xa
0x00001dc0      488b0dc16220.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001dc7      4c89f2         mov rdx, r14
0x00001dca      be01000000     mov esi, 1
0x00001dcf      4c89ef         mov rdi, r13
0x00001dd2      31db           xor ebx, ebx
0x00001dd4      4531ff         xor r15d, r15d
0x00001dd7      e894f8ffff     call sym.imp.fwrite_unlocked
0x00001ddc      e9c8fdffff     jmp 0x1ba9
0x00001de1      0f1f80000000.  nop dword [rax]
0x00001de8      4588741d00     mov byte [r13 + rbx], r14b
0x00001ded      4883c301       add rbx, 1
0x00001df1      e9b3fdffff     jmp 0x1ba9
0x00001df6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001e00      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00001e05      488d35663800.  lea rsi, [0x00005672]                   ; "r"
0x00001e0c      e8cff8ffff     call sym.imp.fopen
0x00001e11      4989c4         mov r12, rax
0x00001e14      e877f6ffff     call sym.imp.__errno_location
0x00001e19      4d85e4         test r12, r12
0x00001e1c      4889442418     mov qword [rsp + 0x18], rax
0x00001e21      0f8570fdffff   jne 0x1b97
0x00001e27      488b542410     mov rdx, qword [rsp + 0x10]
0x00001e2c      be03000000     mov esi, 3
0x00001e31      31ff           xor edi, edi
0x00001e33      31db           xor ebx, ebx
0x00001e35      e8c6200000     call sym.quotearg_n_style_colon
0x00001e3a      4889c1         mov rcx, rax
0x00001e3d      488b442418     mov rax, qword [rsp + 0x18]
0x00001e42      488d152f3800.  lea rdx, [0x00005678]                   ; "%s"
0x00001e49      31ff           xor edi, edi
0x00001e4b      8b30           mov esi, dword [rax]
0x00001e4d      31c0           xor eax, eax
0x00001e4f      e86cf8ffff     call sym.imp.error
0x00001e54      e92affffff     jmp 0x1d83
0x00001e59      0f1f80000000.  nop dword [rax]
0x00001e60      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00001e65      31ff           xor edi, edi
0x00001e67      be03000000     mov esi, 3
0x00001e6c      4889da         mov rdx, rbx
0x00001e6f      e88c200000     call sym.quotearg_n_style_colon
0x00001e74      488d15fd3700.  lea rdx, [0x00005678]                   ; "%s"
0x00001e7b      4889c1         mov rcx, rax
0x00001e7e      31ff           xor edi, edi
0x00001e80      31c0           xor eax, eax
0x00001e82      89ee           mov esi, ebp
0x00001e84      e837f8ffff     call sym.imp.error
0x00001e89      488d3d323800.  lea rdi, [0x000056c2]                   ; "-"
0x00001e90      4889de         mov rsi, rbx
0x00001e93      b902000000     mov ecx, 2
0x00001e98      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001e9a      0f97c0         seta al
0x00001e9d      1c00           sbb al, 0
0x00001e9f      31db           xor ebx, ebx
0x00001ea1      84c0           test al, al
0x00001ea3      0f84dafeffff   je 0x1d83
0x00001ea9      4c89e7         mov rdi, r12
0x00001eac      e83f300000     call sym.rpl_fclose
0x00001eb1      e9cdfeffff     jmp 0x1d83
0x00001eb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001ec0      4c89e7         mov rdi, r12
0x00001ec3      e828300000     call sym.rpl_fclose
0x00001ec8      83f8ff         cmp eax, 0xffffffff
0x00001ecb      0f85adfeffff   jne 0x1d7e
0x00001ed1      e951ffffff     jmp 0x1e27
0x00001ed6      4531ff         xor r15d, r15d
0x00001ed9      e90ffdffff     jmp 0x1bed
0x00001ede      be0a000000     mov esi, 0xa
0x00001ee3      e888f6ffff     call sym.imp.__overflow
0x00001ee8      e9c2fdffff     jmp 0x1caf
0x00001eed      0f1f00         nop dword [rax]
;-- usage:
0x00001ef0      4155           push r13
0x00001ef2      4154           push r12
0x00001ef4      ba05000000     mov edx, 5
0x00001ef9      55             push rbp
0x00001efa      53             push rbx
0x00001efb      89fd           mov ebp, edi
0x00001efd      4881ec880000.  sub rsp, 0x88
0x00001f04      488b1ded6120.  mov rbx, qword [obj.program_name]       ; [0x2080f8:8]=0
0x00001f0b      64488b042528.  mov rax, qword fs:[0x28]
0x00001f14      4889442478     mov qword [rsp + 0x78], rax
0x00001f19      31c0           xor eax, eax
0x00001f1b      85ff           test edi, edi
0x00001f1d      742e           je 0x1f4d
0x00001f1f      488d354a3400.  lea rsi, str.Try___s___help__for_more_information. ; 0x5370 ; "Try '%s --help' for more information.\n"
0x00001f26      31ff           xor edi, edi
0x00001f28      e8d3f5ffff     call sym.imp.dcgettext
0x00001f2d      488b3d8c6120.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00001f34      4889c2         mov rdx, rax
0x00001f37      4889d9         mov rcx, rbx
0x00001f3a      be01000000     mov esi, 1
0x00001f3f      31c0           xor eax, eax
0x00001f41      e8daf7ffff     call sym.imp.__fprintf_chk
0x00001f46      89ef           mov edi, ebp
0x00001f48      e8b3f7ffff     call sym.imp.exit
0x00001f4d      488d35443400.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0x5398 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00001f54      31ff           xor edi, edi
0x00001f56      e8a5f5ffff     call sym.imp.dcgettext
0x00001f5b      4889da         mov rdx, rbx
0x00001f5e      4889c6         mov rsi, rax
0x00001f61      bf01000000     mov edi, 1
0x00001f66      31c0           xor eax, eax
0x00001f68      e833f7ffff     call sym.imp.__printf_chk
0x00001f6d      488b1d146120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001f74      488d35453400.  lea rsi, str.Wrap_input_lines_in_each_FILE__writing_to_standard_output. ; 0x53c0 ; "Wrap input lines in each FILE, writing to standard output.\n"
0x00001f7b      ba05000000     mov edx, 5
0x00001f80      31ff           xor edi, edi
0x00001f82      e879f5ffff     call sym.imp.dcgettext
0x00001f87      4889de         mov rsi, rbx
0x00001f8a      4889c7         mov rdi, rax
0x00001f8d      e85ef6ffff     call sym.imp.fputs_unlocked
0x00001f92      488b1def6020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001f99      488d35603400.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x5400 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00001fa0      ba05000000     mov edx, 5
0x00001fa5      31ff           xor edi, edi
0x00001fa7      e854f5ffff     call sym.imp.dcgettext
0x00001fac      4889de         mov rsi, rbx
0x00001faf      4889c7         mov rdi, rax
0x00001fb2      e839f6ffff     call sym.imp.fputs_unlocked
0x00001fb7      488b1dca6020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001fbe      488d35733400.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x5438 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00001fc5      ba05000000     mov edx, 5
0x00001fca      31ff           xor edi, edi
0x00001fcc      e82ff5ffff     call sym.imp.dcgettext
0x00001fd1      4889de         mov rsi, rbx
0x00001fd4      4889c7         mov rdi, rax
0x00001fd7      e814f6ffff     call sym.imp.fputs_unlocked
0x00001fdc      488b1da56020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001fe3      488d359e3400.  lea rsi, str.b____bytes_________count_bytes_rather_than_columns_____s____spaces________break_at_spaces_____w____width_WIDTH___use_WIDTH_columns_instead_of_80 ; 0x5488 ; "  -b, --bytes         count bytes rather than columns\n  -s, --spaces        break at spaces\n  -w, --width=WIDTH   use WIDTH columns instead of 80\n"
0x00001fea      ba05000000     mov edx, 5
0x00001fef      31ff           xor edi, edi
0x00001ff1      e80af5ffff     call sym.imp.dcgettext
0x00001ff6      4889de         mov rsi, rbx
0x00001ff9      4889c7         mov rdi, rax
0x00001ffc      e8eff5ffff     call sym.imp.fputs_unlocked
0x00002001      488b1d806020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002008      488d35113500.  lea rsi, str.help_____display_this_help_and_exit ; 0x5520 ; "      --help     display this help and exit\n"
0x0000200f      ba05000000     mov edx, 5
0x00002014      31ff           xor edi, edi
0x00002016      e8e5f4ffff     call sym.imp.dcgettext
0x0000201b      4889de         mov rsi, rbx
0x0000201e      4889c7         mov rdi, rax
0x00002021      e8caf5ffff     call sym.imp.fputs_unlocked
0x00002026      488b1d5b6020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000202d      488d351c3500.  lea rsi, str.version__output_version_information_and_exit ; 0x5550 ; "      --version  output version information and exit\n"
0x00002034      ba05000000     mov edx, 5
0x00002039      31ff           xor edi, edi
0x0000203b      e8c0f4ffff     call sym.imp.dcgettext
0x00002040      4889de         mov rsi, rbx
0x00002043      4889c7         mov rdi, rax
0x00002046      488d1d173200.  lea rbx, str.fold                       ; 0x5264 ; "fold"
0x0000204d      e89ef5ffff     call sym.imp.fputs_unlocked
0x00002052      488d05103200.  lea rax, [0x00005269]                   ; "["
0x00002059      488d0d4a3200.  lea rcx, str.sha256sum                  ; 0x52aa ; "sha256sum"
0x00002060      48c744246000.  mov qword [rsp + 0x60], 0
0x00002069      48c744246800.  mov qword [rsp + 0x68], 0
0x00002072      4889e2         mov rdx, rsp
0x00002075      48890424       mov qword [rsp], rax
0x00002079      488d05eb3100.  lea rax, str.test_invocation            ; 0x526b ; "test invocation"
0x00002080      48894c2430     mov qword [rsp + 0x30], rcx
0x00002085      488d0d283200.  lea rcx, str.sha384sum                  ; 0x52b4 ; "sha384sum"
0x0000208c      4889442408     mov qword [rsp + 8], rax
0x00002091      488d054b3200.  lea rax, [0x000052e3]                   ; "coreutils"
0x00002098      48894c2440     mov qword [rsp + 0x40], rcx
0x0000209d      488d0d1a3200.  lea rcx, str.sha512sum                  ; 0x52be ; "sha512sum"
0x000020a4      4889442410     mov qword [rsp + 0x10], rax
0x000020a9      488d05cb3100.  lea rax, str.Multi_call_invocation      ; 0x527b ; "Multi-call invocation"
0x000020b0      48894c2450     mov qword [rsp + 0x50], rcx
0x000020b5      4889442418     mov qword [rsp + 0x18], rax
0x000020ba      488d05d03100.  lea rax, str.sha224sum                  ; 0x5291 ; "sha224sum"
0x000020c1      4889442420     mov qword [rsp + 0x20], rax
0x000020c6      488d05ce3100.  lea rax, str.sha2_utilities             ; 0x529b ; "sha2 utilities"
0x000020cd      4889442428     mov qword [rsp + 0x28], rax
0x000020d2      4889442438     mov qword [rsp + 0x38], rax
0x000020d7      4889442448     mov qword [rsp + 0x48], rax
0x000020dc      4889442458     mov qword [rsp + 0x58], rax
0x000020e1      0f1f80000000.  nop dword [rax]
0x000020e8      4883c210       add rdx, 0x10
0x000020ec      488b3a         mov rdi, qword [rdx]
0x000020ef      4885ff         test rdi, rdi
0x000020f2      7413           je 0x2107
0x000020f4      b905000000     mov ecx, 5
0x000020f9      4889de         mov rsi, rbx
0x000020fc      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000020fe      0f97c0         seta al
0x00002101      1c00           sbb al, 0
0x00002103      84c0           test al, al
0x00002105      75e1           jne 0x20e8
0x00002107      4c8b6208       mov r12, qword [rdx + 8]
0x0000210b      31ff           xor edi, edi
0x0000210d      ba05000000     mov edx, 5
0x00002112      488d35af3100.  lea rsi, str.s_online_help:___s         ; 0x52c8 ; "\n%s online help: <%s>\n"
0x00002119      4d85e4         test r12, r12
0x0000211c      0f84c1000000   je 0x21e3
0x00002122      e8d9f3ffff     call sym.imp.dcgettext
0x00002127      488d0d5a3400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5588 ; "https://www.gnu.org/software/coreutils/"
0x0000212e      488d15aa3100.  lea rdx, str.GNU_coreutils              ; 0x52df ; "GNU coreutils"
0x00002135      4889c6         mov rsi, rax
0x00002138      bf01000000     mov edi, 1
0x0000213d      31c0           xor eax, eax
0x0000213f      e85cf5ffff     call sym.imp.__printf_chk
0x00002144      31f6           xor esi, esi
0x00002146      bf05000000     mov edi, 5
0x0000214b      e840f5ffff     call sym.imp.setlocale
0x00002150      4885c0         test rax, rax
0x00002153      741c           je 0x2171
0x00002155      488d35913100.  lea rsi, [0x000052ed]                   ; "en_"
0x0000215c      ba03000000     mov edx, 3
0x00002161      4889c7         mov rdi, rax
0x00002164      e837f3ffff     call sym.imp.strncmp
0x00002169      85c0           test eax, eax
0x0000216b      0f8507010000   jne 0x2278
0x00002171      488d35793100.  lea rsi, str.Full_documentation___s_s   ; 0x52f1 ; "Full documentation <%s%s>\n"
0x00002178      31ff           xor edi, edi
0x0000217a      ba05000000     mov edx, 5
0x0000217f      e87cf3ffff     call sym.imp.dcgettext
0x00002184      488d0dd93000.  lea rcx, str.fold                       ; 0x5264 ; "fold"
0x0000218b      488d15f63300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5588 ; "https://www.gnu.org/software/coreutils/"
0x00002192      4889c6         mov rsi, rax
0x00002195      bf01000000     mov edi, 1
0x0000219a      31c0           xor eax, eax
0x0000219c      e8fff4ffff     call sym.imp.__printf_chk
0x000021a1      4939dc         cmp r12, rbx
0x000021a4      488d0dda3000.  lea rcx, [0x00005285]                   ; " invocation"
0x000021ab      488d1d4f3a00.  lea rbx, [0x00005c01]
0x000021b2      480f44d9       cmove rbx, rcx
0x000021b6      488d353b3400.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x55f8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000021bd      31ff           xor edi, edi
0x000021bf      ba05000000     mov edx, 5
0x000021c4      e837f3ffff     call sym.imp.dcgettext
0x000021c9      4889d9         mov rcx, rbx
0x000021cc      4889c6         mov rsi, rax
0x000021cf      4c89e2         mov rdx, r12
0x000021d2      bf01000000     mov edi, 1
0x000021d7      31c0           xor eax, eax
0x000021d9      e8c2f4ffff     call sym.imp.__printf_chk
0x000021de      e963fdffff     jmp 0x1f46
0x000021e3      e818f3ffff     call sym.imp.dcgettext
0x000021e8      488d0d993300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5588 ; "https://www.gnu.org/software/coreutils/"
0x000021ef      488d15e93000.  lea rdx, str.GNU_coreutils              ; 0x52df ; "GNU coreutils"
0x000021f6      4889c6         mov rsi, rax
0x000021f9      bf01000000     mov edi, 1
0x000021fe      31c0           xor eax, eax
0x00002200      e89bf4ffff     call sym.imp.__printf_chk
0x00002205      31f6           xor esi, esi
0x00002207      bf05000000     mov edi, 5
0x0000220c      e87ff4ffff     call sym.imp.setlocale
0x00002211      4885c0         test rax, rax
0x00002214      7418           je 0x222e
0x00002216      488d35d03000.  lea rsi, [0x000052ed]                   ; "en_"
0x0000221d      ba03000000     mov edx, 3
0x00002222      4889c7         mov rdi, rax
0x00002225      e876f2ffff     call sym.imp.strncmp
0x0000222a      85c0           test eax, eax
0x0000222c      7543           jne 0x2271
0x0000222e      488d35bc3000.  lea rsi, str.Full_documentation___s_s   ; 0x52f1 ; "Full documentation <%s%s>\n"
0x00002235      ba05000000     mov edx, 5
0x0000223a      31ff           xor edi, edi
0x0000223c      4c8d25213000.  lea r12, str.fold                       ; 0x5264 ; "fold"
0x00002243      488d1d3b3000.  lea rbx, [0x00005285]                   ; " invocation"
0x0000224a      e8b1f2ffff     call sym.imp.dcgettext
0x0000224f      488d0d0e3000.  lea rcx, str.fold                       ; 0x5264 ; "fold"
0x00002256      488d152b3300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5588 ; "https://www.gnu.org/software/coreutils/"
0x0000225d      4889c6         mov rsi, rax
0x00002260      bf01000000     mov edi, 1
0x00002265      31c0           xor eax, eax
0x00002267      e834f4ffff     call sym.imp.__printf_chk
0x0000226c      e945ffffff     jmp 0x21b6
0x00002271      4c8d25ec2f00.  lea r12, str.fold                       ; 0x5264 ; "fold"
0x00002278      4c8b2d095e20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000227f      488d352a3300.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x55b0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002286      31ff           xor edi, edi
0x00002288      ba05000000     mov edx, 5
0x0000228d      e86ef2ffff     call sym.imp.dcgettext
0x00002292      4c89ee         mov rsi, r13
0x00002295      4889c7         mov rdi, rax
0x00002298      e853f3ffff     call sym.imp.fputs_unlocked
0x0000229d      e9cffeffff     jmp 0x2171
0x000022a2      662e0f1f8400.  nop word cs:[rax + rax]
0x000022ac      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x000022b0      48893d395e20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2080f0:8]=0
0x000022b7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000022b8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000022c0      40883d215e20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2080e8:1]=0
0x000022c7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000022c8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000022d0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000022d1      53             push rbx
0x000022d2      4883ec08       sub rsp, 8
0x000022d6      488b3dab5d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000022dd      e8be2d0000     call sym.close_stream
0x000022e2      85c0           test eax, eax
0x000022e4      7416           je 0x22fc
0x000022e6      e8a5f1ffff     call sym.imp.__errno_location
0x000022eb      803df65d2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2080e8:1]=0
0x000022f2      4889c3         mov rbx, rax
0x000022f5      741c           je 0x2313
0x000022f7      833820         cmp dword [rax], 0x20
0x000022fa      7517           jne 0x2313
0x000022fc      488b3dbd5d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002303      e8982d0000     call sym.close_stream
0x00002308      85c0           test eax, eax
0x0000230a      7546           jne 0x2352
0x0000230c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002310      5b             pop rbx
0x00002311      5d             pop rbp
0x00002312      c3             ret
0x00002313      488d354e3300.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5668 ; "write error"
0x0000231a      31ff           xor edi, edi
0x0000231c      ba05000000     mov edx, 5
0x00002321      e8daf1ffff     call sym.imp.dcgettext
0x00002326      488b3dc35d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2080f0:8]=0
0x0000232d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002330      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002333      7428           je 0x235d
0x00002335      e8961b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000233a      8b33           mov esi, dword [rbx]
0x0000233c      488d15313300.  lea rdx, str.s:__s                      ; 0x5674 ; "%s: %s"
0x00002343      4889c1         mov rcx, rax
0x00002346      4989e8         mov r8, rbp
0x00002349      31ff           xor edi, edi
0x0000234b      31c0           xor eax, eax
0x0000234d      e86ef3ffff     call sym.imp.error
0x00002352      8b3dc05c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208018:4]=1
0x00002358      e853f1ffff     call sym.imp._exit
0x0000235d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000235f      488d15123300.  lea rdx, [0x00005678]                   ; "%s"
0x00002366      4889c1         mov rcx, rax
0x00002369      31ff           xor edi, edi
0x0000236b      31c0           xor eax, eax
0x0000236d      e84ef3ffff     call sym.imp.error
0x00002372      ebde           jmp 0x2352
0x00002374      662e0f1f8400.  nop word cs:[rax + rax]
0x0000237e      6690           nop
;-- fdadvise:
0x00002380      e94bf2ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002385      90             nop
0x00002386      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00002390      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00002393      741b           je 0x23b0
0x00002395      53             push rbx
0x00002396      89f3           mov ebx, esi
0x00002398      e883f2ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000239d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000239f      31d2           xor edx, edx
0x000023a1      31f6           xor esi, esi
0x000023a3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x000023a4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000023a6      e925f2ffff     jmp sym.imp.posix_fadvise
0x000023ab      0f1f440000     nop dword [rax + rax]
0x000023b0      f3c3           ret
0x000023b2      662e0f1f8400.  nop word cs:[rax + rax]
0x000023bc      0f1f4000       nop dword [rax]
;-- set_program_name:
0x000023c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000023c3      53             push rbx
0x000023c4      7477           je 0x243d                               ; ../coreutils-8.31/lib/progname.c:51
0x000023c6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000023cb      4889fb         mov rbx, rdi
0x000023ce      e8adf1ffff     call sym.imp.strrchr
0x000023d3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000023d6      7455           je 0x242d
0x000023d8      4c8d4001       lea r8, [rax + 1]
0x000023dc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000023df      4829da         sub rdx, rbx
0x000023e2      4883fa06       cmp rdx, 6
0x000023e6      7e45           jle 0x242d
0x000023e8      488d70fa       lea rsi, [rax - 6]
0x000023ec      488d3dc53200.  lea rdi, str..libs                      ; 0x56b8 ; "/.libs/"
0x000023f3      b907000000     mov ecx, 7
0x000023f8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000023fa      0f97c2         seta dl
0x000023fd      80da00         sbb dl, 0
0x00002400      84d2           test dl, dl
0x00002402      7529           jne 0x242d
0x00002404      488d3db53200.  lea rdi, [0x000056c0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000240b      b903000000     mov ecx, 3
0x00002410      4c89c6         mov rsi, r8
0x00002413      4c89c3         mov rbx, r8
0x00002416      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002418      0f97c2         seta dl
0x0000241b      80da00         sbb dl, 0
0x0000241e      84d2           test dl, dl
0x00002420      750b           jne 0x242d
0x00002422      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002426      48891d535c20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x208080:8]=0
0x0000242d      48891dc45c20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2080f8:8]=0
0x00002434      48891d6d5c20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x0000243b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000243c      c3             ret
0x0000243d      488b0d7c5c20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002444      488d3d353200.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5680 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000244b      ba37000000     mov edx, 0x37                           ; '7'
0x00002450      be01000000     mov esi, 1
0x00002455      e8b6f2ffff     call sym.imp.fwrite
0x0000245a      e821f0ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000245f      90             nop
;-- gettext_quote.part.1:
0x00002460      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002461      53             push rbx
0x00002462      4889fd         mov rbp, rdi
0x00002465      89f3           mov ebx, esi
0x00002467      4883ec08       sub rsp, 8
0x0000246b      e8102d0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002470      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002473      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002476      80fa55         cmp dl, 0x55
0x00002479      7475           je 0x24f0
0x0000247b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000247e      7420           je 0x24a0
0x00002480      488d054c3200.  lea rax, str.l______l                   ; 0x56d3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002487      488d15473200.  lea rdx, [0x000056d5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000248e      83fb09         cmp ebx, 9
0x00002491      480f45c2       cmovne rax, rdx
0x00002495      4883c408       add rsp, 8
0x00002499      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000249a      5d             pop rbp
0x0000249b      c3             ret
0x0000249c      0f1f4000       nop dword [rax]
0x000024a0      0fb65001       movzx edx, byte [rax + 1]
0x000024a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000024a7      80fa42         cmp dl, 0x42
0x000024aa      75d4           jne 0x2480
0x000024ac      80780231       cmp byte [rax + 2], 0x31
0x000024b0      75ce           jne 0x2480
0x000024b2      80780338       cmp byte [rax + 3], 0x38
0x000024b6      75c8           jne 0x2480
0x000024b8      80780430       cmp byte [rax + 4], 0x30
0x000024bc      75c2           jne 0x2480
0x000024be      80780533       cmp byte [rax + 5], 0x33
0x000024c2      75bc           jne 0x2480
0x000024c4      80780630       cmp byte [rax + 6], 0x30
0x000024c8      75b6           jne 0x2480
0x000024ca      80780700       cmp byte [rax + 7], 0
0x000024ce      75b0           jne 0x2480
0x000024d0      807d0060       cmp byte [rbp], 0x60
0x000024d4      488d05f13100.  lea rax, [0x000056cc]
0x000024db      488d15ee3100.  lea rdx, [0x000056d0]
0x000024e2      480f45c2       cmovne rax, rdx
0x000024e6      4883c408       add rsp, 8
0x000024ea      5b             pop rbx
0x000024eb      5d             pop rbp
0x000024ec      c3             ret
0x000024ed      0f1f00         nop dword [rax]
0x000024f0      0fb65001       movzx edx, byte [rax + 1]
0x000024f4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000024f7      80fa54         cmp dl, 0x54
0x000024fa      7584           jne 0x2480
0x000024fc      0fb65002       movzx edx, byte [rax + 2]
0x00002500      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002503      80fa46         cmp dl, 0x46
0x00002506      0f8574ffffff   jne 0x2480
0x0000250c      8078032d       cmp byte [rax + 3], 0x2d
0x00002510      0f856affffff   jne 0x2480
0x00002516      80780438       cmp byte [rax + 4], 0x38
0x0000251a      0f8560ffffff   jne 0x2480
0x00002520      80780500       cmp byte [rax + 5], 0
0x00002524      0f8556ffffff   jne 0x2480
0x0000252a      807d0060       cmp byte [rbp], 0x60
0x0000252e      488d058f3100.  lea rax, [0x000056c4]                   ; "\u2018"
0x00002535      488d158c3100.  lea rdx, [0x000056c8]                   ; "\u2019"
0x0000253c      480f45c2       cmovne rax, rdx
0x00002540      4883c408       add rsp, 8
0x00002544      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002545      5d             pop rbp
0x00002546      c3             ret
0x00002547      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002550      4157           push r15
0x00002552      4156           push r14
0x00002554      4589c7         mov r15d, r8d
0x00002557      4155           push r13
0x00002559      4154           push r12
0x0000255b      4989fe         mov r14, rdi
0x0000255e      55             push rbp
0x0000255f      53             push rbx
0x00002560      4489cb         mov ebx, r9d
0x00002563      4989f5         mov r13, rsi
0x00002566      4889cd         mov rbp, rcx
0x00002569      83e302         and ebx, 2
0x0000256c      4881ecb80000.  sub rsp, 0xb8
0x00002573      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000257b      4889542410     mov qword [rsp + 0x10], rdx
0x00002580      4489442408     mov dword [rsp + 8], r8d
0x00002585      44894c2478     mov dword [rsp + 0x78], r9d
0x0000258a      4889442420     mov qword [rsp + 0x20], rax
0x0000258f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002597      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000259c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000025a4      4889442460     mov qword [rsp + 0x60], rax
0x000025a9      64488b042528.  mov rax, qword fs:[0x28]
0x000025b2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000025ba      31c0           xor eax, eax
0x000025bc      e84fefffff     call sym.imp.__ctype_get_mb_cur_max
0x000025c1      4183ff0a       cmp r15d, 0xa
0x000025c5      4889442458     mov qword [rsp + 0x58], rax
0x000025ca      0f87af110000   ja 0x377f
0x000025d0      488d0d693100.  lea rcx, [0x00005740]                   ; "J\xdc\xff\xff\xa3\xce\xff\xffx\xde\xff\xff\x84\xdc\xff\xfft\xda\xff\xff\xd0\xda\xff\xff%\xdb\xff\xffj\xdb\xff\xff\xa4\xdb\xff\xff\xa4\xdb\xff\xff\xa4\xdb\xff\xff\xf4\xd1\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff4\xd2\xff\xff<\xd1\xff\xff\xfc\xd0\xff\xff\xc4\xd2\xff\xff\xb4\xd2\xff\xff\xa4\xd2\xff\xff\x94\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\xdc\xd2\xff\xff\x84\xd2\xff\xfft\xd2\xff\xfft\xd2\xff\xffD\xd2\xff\xfft\xd2\xff\xff\x1c\xd2\xff\xfft\xd2\xff\xff\xd7\xd0\xff\xfft\xd2\xff\xfft\xd2\xff\xfft\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xfft\xd2\xff\xfft\xd2\xff\xfft\xd2\xff\xfft\xd2\xff\xff\xa7\xd0\xff\xff\xdc\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xfft\xd2\xff\xffL\xd1\xff\xff\x1c\xd2\xff\xfft\xd2\xff\xff\x1c\xd2\xff\xfft\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\x1c\xd2\xff\xff\xd7\xcf\xff\xfft\xd2\xff\xff\xd7\xcf\xff\xffD\xd2\xff\xff\xc8\xd1\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xb8\xd1\xff\xff\b\xd3\xff\xff\xf0\xd2\xff\xff\xa0\xd1\xff\xff\xe0\xd2\xff\xff\x88\xd1\xff\xff\xc8\xd2\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xd8\xd0\xff\xff\xb0\xd2\xff\xff\x98\xd2\xff\xff\x98\xd2\xff\xff\x80\xd2\xff\xff\x98\xd2\xff\xffh\xd2\xff\xff\x98\xd2\xff\xff\xd8\xce\xff\xff\x98\xd2\xff\xff\x98\xd2\xff\xff\x98\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xff\x98\xd2\xff\xff\x98\xd2\xff\xff\x98\xd2\xff\xff\x98\xd2\xff\xff\xa8\xce\xff\xff\xd8\xd0\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xff\x98\xd2\xff\xffh\xd1\xff\xffh\xd2\xff\xff\x98\xd2\xff\xffh\xd2\xff\xff\x98\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xffh\xd2\xff\xff\xd8\xcd\xff\xff\x98\xd2\xff\xff\xd8\xcd\xff\xff\x80\xd2\xff\xff"
0x000025d7      4489fa         mov edx, r15d
0x000025da      48630491       movsxd rax, dword [rcx + rdx*4]
0x000025de      4801c8         add rax, rcx
0x000025e1      ffe0           jmp rax
0x000025e3      c644240e01     mov byte [rsp + 0xe], 1
0x000025e8      c644247c00     mov byte [rsp + 0x7c], 0
0x000025ed      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000025f0      48c744245000.  mov qword [rsp + 0x50], 0
0x000025f9      c644240f01     mov byte [rsp + 0xf], 1
0x000025fe      c644240d00     mov byte [rsp + 0xd], 0
0x00002603      488d05cb3000.  lea rax, [0x000056d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000260a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002613      4531ff         xor r15d, r15d
0x00002616      c74424080200.  mov dword [rsp + 8], 2
0x0000261e      4889442448     mov qword [rsp + 0x48], rax
0x00002623      4531db         xor r11d, r11d
0x00002626      4889e8         mov rax, rbp
0x00002629      4589e0         mov r8d, r12d
0x0000262c      4c89dd         mov rbp, r11
0x0000262f      4989c3         mov r11, rax
0x00002632      660f1f440000   nop word [rax + rax]
0x00002638      4939eb         cmp r11, rbp
0x0000263b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000263f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002643      750d           jne 0x2652
0x00002645      488b442410     mov rax, qword [rsp + 0x10]
0x0000264a      803c2800       cmp byte [rax + rbp], 0
0x0000264e      410f95c4       setne r12b
0x00002652      4584e4         test r12b, r12b
0x00002655      0f8455060000   je 0x2cb0
0x0000265b      837c240802     cmp dword [rsp + 8], 2
0x00002660      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002665      4c8d0c2f       lea r9, [rdi + rbp]
0x00002669      0f95c0         setne al
0x0000266c      2244240d       and al, byte [rsp + 0xd]
0x00002670      4189c2         mov r10d, eax
0x00002673      0f84a7000000   je 0x2720
0x00002679      488b442418     mov rax, qword [rsp + 0x18]
0x0000267e      4885c0         test rax, rax
0x00002681      0f8429040000   je 0x2ab0
0x00002687      4983fbff       cmp r11, 0xffffffffffffffff
0x0000268b      488d5c0500     lea rbx, [rbp + rax]
0x00002690      752e           jne 0x26c0
0x00002692      4883f801       cmp rax, 1
0x00002696      7628           jbe 0x26c0
0x00002698      4488442438     mov byte [rsp + 0x38], r8b
0x0000269d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000026a2      4c894c2428     mov qword [rsp + 0x28], r9
0x000026a7      e874eeffff     call sym.imp.strlen
0x000026ac      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000026b2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000026b8      4989c3         mov r11, rax
0x000026bb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000026c0      4c39db         cmp rbx, r11
0x000026c3      4488542428     mov byte [rsp + 0x28], r10b
0x000026c8      0f87b2050000   ja 0x2c80
0x000026ce      488b542418     mov rdx, qword [rsp + 0x18]
0x000026d3      488b742448     mov rsi, qword [rsp + 0x48]
0x000026d8      4c89cf         mov rdi, r9
0x000026db      4c895c2440     mov qword [rsp + 0x40], r11
0x000026e0      4488442438     mov byte [rsp + 0x38], r8b
0x000026e5      4c894c2430     mov qword [rsp + 0x30], r9
0x000026ea      e8f1eeffff     call sym.imp.memcmp
0x000026ef      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000026f1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000026f6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000026fc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002701      0f8579050000   jne 0x2c80
0x00002707      807c240f00     cmp byte [rsp + 0xf], 0
0x0000270c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002712      0f857d0f0000   jne 0x3695
0x00002718      0f1f84000000.  nop dword [rax + rax]
0x00002720      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002724      80fb7e         cmp bl, 0x7e
0x00002727      0f871b030000   ja 0x2a48
0x0000272d      488d0d383000.  lea rcx, [0x0000576c]
0x00002734      0fb6d3         movzx edx, bl
0x00002737      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000273b      4801c8         add rax, rcx
0x0000273e      ffe0           jmp rax
0x00002740      4531d2         xor r10d, r10d
0x00002743      4983fb01       cmp r11, 1
0x00002747      0f95c0         setne al
0x0000274a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000274e      750c           jne 0x275c
0x00002750      488b442410     mov rax, qword [rsp + 0x10]
0x00002755      80780100       cmp byte [rax + 1], 0
0x00002759      0f95c0         setne al
0x0000275c      837c240802     cmp dword [rsp + 8], 2
0x00002761      0f94c2         sete dl
0x00002764      84c0           test al, al
0x00002766      0f844c020000   je 0x29b8
0x0000276c      4531e4         xor r12d, r12d
0x0000276f      31c0           xor eax, eax
0x00002771      0f1f80000000.  nop dword [rax]
0x00002778      807c240d01     cmp byte [rsp + 0xd], 1
0x0000277d      0f850f010000   jne 0x2892
0x00002783      84d2           test dl, dl
0x00002785      0f8507010000   jne 0x2892
0x0000278b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002790      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002793      7414           je 0x27a9
0x00002795      89da           mov edx, ebx
0x00002797      c0ea05         shr dl, 5
0x0000279a      0fb6d2         movzx edx, dl
0x0000279d      8b1496         mov edx, dword [rsi + rdx*4]
0x000027a0      0fa3da         bt edx, ebx
0x000027a3      0f824a010000   jb 0x28f3
0x000027a9      4584d2         test r10b, r10b
0x000027ac      0f8541010000   jne 0x28f3
0x000027b2      83f001         xor eax, 1
0x000027b5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000027b9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000027bc      84c0           test al, al
0x000027be      7420           je 0x27e0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000027c0      4d39fd         cmp r13, r15
0x000027c3      7605           jbe 0x27ca
0x000027c5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000027ca      498d4701       lea rax, [r15 + 1]
0x000027ce      4939c5         cmp r13, rax
0x000027d1      7606           jbe 0x27d9
0x000027d3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000027d9      4983c702       add r15, 2
0x000027dd      4531c0         xor r8d, r8d
0x000027e0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000027e3      7304           jae 0x27e9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000027e5      43881c3e       mov byte [r14 + r15], bl
0x000027e9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000027ee      4983c701       add r15, 1
0x000027f2      b800000000     mov eax, 0
0x000027f7      4584e4         test r12b, r12b
0x000027fa      0f44f8         cmove edi, eax
0x000027fd      40887c240e     mov byte [rsp + 0xe], dil
0x00002802      e931feffff     jmp 0x2638
0x00002807      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002810      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002813      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002817      83f802         cmp eax, 2
0x0000281a      0f84b8050000   je 0x2dd8
0x00002820      83f805         cmp eax, 5
0x00002823      0f846f050000   je 0x2d98
0x00002829      83f802         cmp eax, 2
0x0000282c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002831      0f94c2         sete dl
0x00002834      4531e4         xor r12d, r12d
0x00002837      31c0           xor eax, eax
0x00002839      e93affffff     jmp 0x2778
0x0000283e      6690           nop
0x00002840      4531d2         xor r10d, r10d
0x00002843      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002848      0f8402050000   je 0x2d50
0x0000284e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002853      31d2           xor edx, edx
0x00002855      31c0           xor eax, eax
0x00002857      bb27000000     mov ebx, 0x27                           ; '''
0x0000285c      e917ffffff     jmp 0x2778
0x00002861      0f1f80000000.  nop dword [rax]
0x00002868      ba09000000     mov edx, 9
0x0000286d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002872      837c240802     cmp dword [rsp + 8], 2
0x00002877      0f94c0         sete al
0x0000287a      2244240f       and al, byte [rsp + 0xf]
0x0000287e      0f854a010000   jne 0x29ce
0x00002884      807c240d00     cmp byte [rsp + 0xd], 0
0x00002889      7565           jne 0x28f0
0x0000288b      89d3           mov ebx, edx
0x0000288d      4531e4         xor r12d, r12d
0x00002890      31c0           xor eax, eax
0x00002892      807c240f00     cmp byte [rsp + 0xf], 0
0x00002897      0f85eefeffff   jne 0x278b
0x0000289d      e907ffffff     jmp 0x27a9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000028a2      660f1f440000   nop word [rax + rax]
0x000028a8      ba08000000     mov edx, 8
0x000028ad      bb62000000     mov ebx, 0x62                           ; 'b'
0x000028b2      ebd0           jmp 0x2884
0x000028b4      0f1f4000       nop dword [rax]
0x000028b8      837c240802     cmp dword [rsp + 8], 2
0x000028bd      0f84cd030000   je 0x2c90
0x000028c3      807c240d00     cmp byte [rsp + 0xd], 0
0x000028c8      0f8412020000   je 0x2ae0
0x000028ce      807c240f00     cmp byte [rsp + 0xf], 0
0x000028d3      0f8407020000   je 0x2ae0
0x000028d9      48837c241800   cmp qword [rsp + 0x18], 0
0x000028df      0f85b6030000   jne 0x2c9b
0x000028e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000028ea      660f1f440000   nop word [rax + rax]
0x000028f0      4531e4         xor r12d, r12d
0x000028f3      837c240802     cmp dword [rsp + 8], 2
0x000028f8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000028fb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002900      89d0           mov eax, edx
0x00002902      0f8550080000   jne 0x3158
0x00002908      4489c0         mov eax, r8d
0x0000290b      83f001         xor eax, 1
0x0000290e      20d0           and al, dl
0x00002910      742f           je 0x2941
0x00002912      4d39fd         cmp r13, r15
0x00002915      7605           jbe 0x291c
0x00002917      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000291c      498d5701       lea rdx, [r15 + 1]
0x00002920      4939d5         cmp r13, rdx
0x00002923      7606           jbe 0x292b
0x00002925      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000292b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000292f      4939d5         cmp r13, rdx
0x00002932      7606           jbe 0x293a
0x00002934      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000293a      4983c703       add r15, 3
0x0000293e      4189c0         mov r8d, eax
0x00002941      4d39fd         cmp r13, r15
0x00002944      7605           jbe 0x294b
0x00002946      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000294b      4983c701       add r15, 1
0x0000294f      4883c501       add rbp, 1
0x00002953      e988feffff     jmp 0x27e0
0x00002958      0f1f84000000.  nop dword [rax + rax]
0x00002960      807c240d00     cmp byte [rsp + 0xd], 0
0x00002965      0f85c8010000   jne 0x2b33
0x0000296b      31d2           xor edx, edx
0x0000296d      f644247801     test byte [rsp + 0x78], 1
0x00002972      0f8413ffffff   je 0x288b
0x00002978      4883c501       add rbp, 1
0x0000297c      e9b7fcffff     jmp 0x2638
0x00002981      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002988      837c240802     cmp dword [rsp + 8], 2
0x0000298d      0f94c2         sete dl
0x00002990      31c0           xor eax, eax
0x00002992      e9e1fdffff     jmp 0x2778
0x00002997      660f1f840000.  nop word [rax + rax]
0x000029a0      ba07000000     mov edx, 7
0x000029a5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000029aa      e9d5feffff     jmp 0x2884
0x000029af      90             nop
0x000029b0      837c240802     cmp dword [rsp + 8], 2
0x000029b5      0f94c2         sete dl
0x000029b8      4885ed         test rbp, rbp
0x000029bb      0f85abfdffff   jne 0x276c
0x000029c1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000029c6      20d0           and al, dl
0x000029c8      0f84aafdffff   je 0x2778
0x000029ce      4c89dd         mov rbp, r11
0x000029d1      c74424080200.  mov dword [rsp + 8], 2
0x000029d9      e9fb060000     jmp 0x30d9
0x000029de      6690           nop
0x000029e0      837c240802     cmp dword [rsp + 8], 2
0x000029e5      0f94c2         sete dl
0x000029e8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000029eb      ebd4           jmp 0x29c1
0x000029ed      0f1f00         nop dword [rax]
0x000029f0      837c240802     cmp dword [rsp + 8], 2
0x000029f5      bb20000000     mov ebx, 0x20                           ; "@"
0x000029fa      0f94c2         sete dl
0x000029fd      ebc2           jmp 0x29c1
0x000029ff      90             nop
0x00002a00      ba0d000000     mov edx, 0xd
0x00002a05      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002a0a      e963feffff     jmp 0x2872
0x00002a0f      90             nop
0x00002a10      ba0c000000     mov edx, 0xc
0x00002a15      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002a1a      e965feffff     jmp 0x2884
0x00002a1f      90             nop
0x00002a20      ba0b000000     mov edx, 0xb
0x00002a25      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002a2a      e955feffff     jmp 0x2884
0x00002a2f      90             nop
0x00002a30      ba0a000000     mov edx, 0xa
0x00002a35      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00002a3a      e933feffff     jmp 0x2872
0x00002a3f      90             nop
0x00002a40      4531d2         xor r10d, r10d
0x00002a43      0f1f440000     nop dword [rax + rax]
0x00002a48      48837c245801   cmp qword [rsp + 0x58], 1
0x00002a4e      0f85a4030000   jne 0x2df8
0x00002a54      4c895c2438     mov qword [rsp + 0x38], r11
0x00002a59      4488442430     mov byte [rsp + 0x30], r8b
0x00002a5e      4488542428     mov byte [rsp + 0x28], r10b
0x00002a63      e8e8ecffff     call sym.imp.__ctype_b_loc
0x00002a68      488b08         mov rcx, qword [rax]
0x00002a6b      0fb6d3         movzx edx, bl
0x00002a6e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002a74      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002a7a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002a7f      bf01000000     mov edi, 1
0x00002a84      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002a88      66250040       and ax, 0x4000
0x00002a8c      410f95c4       setne r12b
0x00002a90      0f94c0         sete al
0x00002a93      2244240d       and al, byte [rsp + 0xd]
0x00002a97      84c0           test al, al
0x00002a99      0f8592090000   jne 0x3431
0x00002a9f      837c240802     cmp dword [rsp + 8], 2
0x00002aa4      0f94c2         sete dl
0x00002aa7      e9ccfcffff     jmp 0x2778
0x00002aac      0f1f4000       nop dword [rax]
0x00002ab0      410fb619       movzx ebx, byte [r9]
0x00002ab4      80fb7e         cmp bl, 0x7e
0x00002ab7      7787           ja 0x2a40
0x00002ab9      488d0da82e00.  lea rcx, [0x00005968]
0x00002ac0      0fb6d3         movzx edx, bl
0x00002ac3      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002ac7      4801c8         add rax, rcx
0x00002aca      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00002acc      0f1f4000       nop dword [rax]
0x00002ad0      4531d2         xor r10d, r10d
0x00002ad3      807c240d00     cmp byte [rsp + 0xd], 0
0x00002ad8      0f85f0fdffff   jne 0x28ce
0x00002ade      6690           nop
0x00002ae0      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002ae5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002aea      e995fdffff     jmp 0x2884
0x00002aef      90             nop
0x00002af0      ba0c000000     mov edx, 0xc
0x00002af5      4531d2         xor r10d, r10d
0x00002af8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002afd      e982fdffff     jmp 0x2884
0x00002b02      660f1f440000   nop word [rax + rax]
0x00002b08      ba0a000000     mov edx, 0xa
0x00002b0d      4531d2         xor r10d, r10d
0x00002b10      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002b15      e958fdffff     jmp 0x2872
0x00002b1a      660f1f440000   nop word [rax + rax]
0x00002b20      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002b25      e9c6fdffff     jmp 0x28f0
0x00002b2a      660f1f440000   nop word [rax + rax]
0x00002b30      4531d2         xor r10d, r10d
0x00002b33      837c240802     cmp dword [rsp + 8], 2
0x00002b38      0f94c2         sete dl
0x00002b3b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002b40      0f85940b0000   jne 0x36da
0x00002b46      4489c0         mov eax, r8d
0x00002b49      4c89f9         mov rcx, r15
0x00002b4c      83f001         xor eax, 1
0x00002b4f      20d0           and al, dl
0x00002b51      742d           je 0x2b80
0x00002b53      4d39fd         cmp r13, r15
0x00002b56      7605           jbe 0x2b5d
0x00002b58      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002b5d      498d4f01       lea rcx, [r15 + 1]
0x00002b61      4939cd         cmp r13, rcx
0x00002b64      7606           jbe 0x2b6c
0x00002b66      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002b6c      498d4f02       lea rcx, [r15 + 2]
0x00002b70      4939cd         cmp r13, rcx
0x00002b73      0f8730060000   ja 0x31a9
0x00002b79      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00002b7d      4189c0         mov r8d, eax
0x00002b80      4939cd         cmp r13, rcx
0x00002b83      7605           jbe 0x2b8a
0x00002b85      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002b8a      837c240802     cmp dword [rsp + 8], 2
0x00002b8f      4c8d7901       lea r15, [rcx + 1]
0x00002b93      0f8400060000   je 0x3199
0x00002b99      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002b9d      4c39d8         cmp rax, r11
0x00002ba0      7319           jae 0x2bbb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00002ba2      488b442410     mov rax, qword [rsp + 0x10]
0x00002ba7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00002bac      88442428       mov byte [rsp + 0x28], al
0x00002bb0      83e830         sub eax, 0x30
0x00002bb3      3c09           cmp al, 9
0x00002bb5      0f862e080000   jbe 0x33e9
0x00002bbb      4489e0         mov eax, r12d
0x00002bbe      bb30000000     mov ebx, 0x30                           ; '0'
0x00002bc3      4531e4         xor r12d, r12d
0x00002bc6      e9adfbffff     jmp 0x2778                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00002bcb      0f1f440000     nop dword [rax + rax]
0x00002bd0      837c240802     cmp dword [rsp + 8], 2
0x00002bd5      4589d4         mov r12d, r10d
0x00002bd8      0f94c2         sete dl
0x00002bdb      4531d2         xor r10d, r10d
0x00002bde      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002be0      e993fbffff     jmp 0x2778                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00002be5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002be8      837c240802     cmp dword [rsp + 8], 2
0x00002bed      0f94c2         sete dl
0x00002bf0      4531d2         xor r10d, r10d
0x00002bf3      e9c0fdffff     jmp 0x29b8
0x00002bf8      0f1f84000000.  nop dword [rax + rax]
0x00002c00      837c240802     cmp dword [rsp + 8], 2
0x00002c05      0f94c2         sete dl
0x00002c08      4531d2         xor r10d, r10d
0x00002c0b      4531e4         xor r12d, r12d
0x00002c0e      e9aefdffff     jmp 0x29c1
0x00002c13      0f1f440000     nop dword [rax + rax]
0x00002c18      837c240802     cmp dword [rsp + 8], 2
0x00002c1d      4589d4         mov r12d, r10d
0x00002c20      bb20000000     mov ebx, 0x20                           ; "@"
0x00002c25      0f94c2         sete dl
0x00002c28      4531d2         xor r10d, r10d
0x00002c2b      e991fdffff     jmp 0x29c1
0x00002c30      ba0d000000     mov edx, 0xd
0x00002c35      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00002c38      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002c3d      e930fcffff     jmp 0x2872
0x00002c42      660f1f440000   nop word [rax + rax]
0x00002c48      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002c4d      e99efcffff     jmp 0x28f0
0x00002c52      660f1f440000   nop word [rax + rax]
0x00002c58      ba09000000     mov edx, 9
0x00002c5d      4531d2         xor r10d, r10d
0x00002c60      bb74000000     mov ebx, 0x74                           ; 't'
0x00002c65      e908fcffff     jmp 0x2872
0x00002c6a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00002c70      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002c75      e976fcffff     jmp 0x28f0
0x00002c7a      660f1f440000   nop word [rax + rax]
0x00002c80      4531d2         xor r10d, r10d
0x00002c83      e998faffff     jmp 0x2720
0x00002c88      0f1f84000000.  nop dword [rax + rax]
0x00002c90      807c240f00     cmp byte [rsp + 0xf], 0
0x00002c95      0f8565090000   jne 0x3600
0x00002c9b      4883c501       add rbp, 1
0x00002c9f      4489c0         mov eax, r8d
0x00002ca2      4531e4         xor r12d, r12d
0x00002ca5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002caa      e90dfbffff     jmp 0x27bc
0x00002caf      90             nop
0x00002cb0      837c240802     cmp dword [rsp + 8], 2
0x00002cb5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00002cba      4589c4         mov r12d, r8d
0x00002cbd      4c89dd         mov rbp, r11
0x00002cc0      0f94c2         sete dl
0x00002cc3      89d8           mov eax, ebx
0x00002cc5      4d85ff         test r15, r15
0x00002cc8      0f94c1         sete cl
0x00002ccb      21d0           and eax, edx
0x00002ccd      20c8           and al, cl
0x00002ccf      0f85610a0000   jne 0x3736                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00002cd5      89d8           mov eax, ebx
0x00002cd7      83f001         xor eax, 1
0x00002cda      20c2           and dl, al
0x00002cdc      0f846a090000   je 0x364c
0x00002ce2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00002ce7      0f845d090000   je 0x364a
0x00002ced      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00002cf2      0f85f5090000   jne 0x36ed
0x00002cf8      4d85ed         test r13, r13
0x00002cfb      0f94c0         sete al
0x00002cfe      48837c245000   cmp qword [rsp + 0x50], 0
0x00002d04      0f95c2         setne dl
0x00002d07      20d0           and al, dl
0x00002d09      0f841d0a0000   je 0x372c
0x00002d0f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002d14      488d1dba2900.  lea rbx, [0x000056d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002d1b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00002d1f      c74424080200.  mov dword [rsp + 8], 2
0x00002d27      41bf01000000   mov r15d, 1
0x00002d2d      48c744241801.  mov qword [rsp + 0x18], 1
0x00002d36      c644240f00     mov byte [rsp + 0xf], 0
0x00002d3b      48895c2448     mov qword [rsp + 0x48], rbx
0x00002d40      8844247c       mov byte [rsp + 0x7c], al
0x00002d44      e9daf8ffff     jmp 0x2623
0x00002d49      0f1f80000000.  nop dword [rax]
0x00002d50      807c240f00     cmp byte [rsp + 0xf], 0
0x00002d55      0f85a5080000   jne 0x3600
0x00002d5b      4d85ed         test r13, r13
0x00002d5e      0f84fc030000   je 0x3160                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00002d64      31d2           xor edx, edx
0x00002d66      48837c245000   cmp qword [rsp + 0x50], 0
0x00002d6c      0f85ee030000   jne 0x3160                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002d72      4c896c2450     mov qword [rsp + 0x50], r13
0x00002d77      4983c703       add r15, 3
0x00002d7b      31c0           xor eax, eax
0x00002d7d      448864247c     mov byte [rsp + 0x7c], r12b
0x00002d82      4531c0         xor r8d, r8d
0x00002d85      4989d5         mov r13, rdx
0x00002d88      bb27000000     mov ebx, 0x27                           ; '''
0x00002d8d      e917faffff     jmp 0x27a9
0x00002d92      660f1f440000   nop word [rax + rax]
0x00002d98      f644247804     test byte [rsp + 0x78], 4
0x00002d9d      7421           je 0x2dc0
0x00002d9f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00002da3      4c39d9         cmp rcx, r11
0x00002da6      7318           jae 0x2dc0
0x00002da8      488b442410     mov rax, qword [rsp + 0x10]
0x00002dad      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00002db2      0f848a070000   je 0x3542
0x00002db8      0f1f84000000.  nop dword [rax + rax]
0x00002dc0      31d2           xor edx, edx
0x00002dc2      4531e4         xor r12d, r12d
0x00002dc5      31c0           xor eax, eax
0x00002dc7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002dcc      e9a7f9ffff     jmp 0x2778
0x00002dd1      0f1f80000000.  nop dword [rax]
0x00002dd8      807c240f00     cmp byte [rsp + 0xf], 0
0x00002ddd      0f851d080000   jne 0x3600
0x00002de3      4531e4         xor r12d, r12d
0x00002de6      31c0           xor eax, eax
0x00002de8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002ded      e9b7f9ffff     jmp 0x27a9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00002df2      660f1f440000   nop word [rax + rax]
0x00002df8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00002e00      4983fbff       cmp r11, 0xffffffffffffffff
0x00002e04      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00002e10      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00002e15      752d           jne 0x2e44
0x00002e17      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002e1c      4488442440     mov byte [rsp + 0x40], r8b
0x00002e21      4488542438     mov byte [rsp + 0x38], r10b
0x00002e26      4c894c2430     mov qword [rsp + 0x30], r9
0x00002e2b      e8f0e6ffff     call sym.imp.strlen
0x00002e30      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00002e36      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00002e3c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00002e3f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002e44      488d84249c00.  lea rax, [rsp + 0x9c]
0x00002e4c      31c9           xor ecx, ecx
0x00002e4e      885c247e       mov byte [rsp + 0x7e], bl
0x00002e52      448844247d     mov byte [rsp + 0x7d], r8b
0x00002e57      4889cb         mov rbx, rcx
0x00002e5a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00002e62      4889442438     mov qword [rsp + 0x38], rax
0x00002e67      448854247f     mov byte [rsp + 0x7f], r10b
0x00002e6c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00002e74      4c89742440     mov qword [rsp + 0x40], r14
0x00002e79      4c896c2470     mov qword [rsp + 0x70], r13
0x00002e7e      4c895c2430     mov qword [rsp + 0x30], r11
0x00002e83      488b442410     mov rax, qword [rsp + 0x10]
0x00002e88      4c8d741d00     lea r14, [rbp + rbx]
0x00002e8d      488b542430     mov rdx, qword [rsp + 0x30]
0x00002e92      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002e97      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00002e9c      4e8d2c30       lea r13, [rax + r14]
0x00002ea0      4c29f2         sub rdx, r14
0x00002ea3      4c89ee         mov rsi, r13
0x00002ea6      e865210000     call sym.rpl_mbrtowc
0x00002eab      4885c0         test rax, rax
0x00002eae      4989c7         mov r15, rax
0x00002eb1      744e           je 0x2f01
0x00002eb3      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002eb7      0f8418060000   je 0x34d5
0x00002ebd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00002ec1      0f849a050000   je 0x3461
0x00002ec7      837c240802     cmp dword [rsp + 8], 2
0x00002ecc      0f94c0         sete al
0x00002ecf      2244240f       and al, byte [rsp + 0xf]
0x00002ed3      0f8597010000   jne 0x3070
0x00002ed9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00002ee0      e85be8ffff     call sym.imp.iswprint
0x00002ee5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002eea      85c0           test eax, eax
0x00002eec      b800000000     mov eax, 0
0x00002ef1      440f44e0       cmove r12d, eax
0x00002ef5      4c01fb         add rbx, r15
0x00002ef8      e833e8ffff     call sym.imp.mbsinit
0x00002efd      85c0           test eax, eax
0x00002eff      7482           je 0x2e83
0x00002f01      4489e2         mov edx, r12d
0x00002f04      4889df         mov rdi, rbx
0x00002f07      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002f0d      83f201         xor edx, 1
0x00002f10      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00002f15      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00002f1b      2254240d       and dl, byte [rsp + 0xd]
0x00002f1f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002f27      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002f2c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002f31      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00002f36      4883ff01       cmp rdi, 1
0x00002f3a      0f86fb050000   jbe 0x353b
0x00002f40      4889f9         mov rcx, rdi
0x00002f43      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00002f45      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00002f4b      4801e9         add rcx, rbp
0x00002f4e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002f53      e9b6000000     jmp 0x300e
0x00002f58      0f1f84000000.  nop dword [rax + rax]
0x00002f60      837c240802     cmp dword [rsp + 8], 2
0x00002f65      0f94c0         sete al
0x00002f68      4584c9         test r9b, r9b
0x00002f6b      0f85af040000   jne 0x3420
0x00002f71      4489c6         mov esi, r8d
0x00002f74      83f601         xor esi, 1
0x00002f77      4020f0         and al, sil
0x00002f7a      742f           je 0x2fab                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00002f7c      4d39fd         cmp r13, r15
0x00002f7f      7605           jbe 0x2f86
0x00002f81      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002f86      498d7701       lea rsi, [r15 + 1]
0x00002f8a      4939f5         cmp r13, rsi
0x00002f8d      7606           jbe 0x2f95                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00002f8f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002f95      498d7702       lea rsi, [r15 + 2]
0x00002f99      4939f5         cmp r13, rsi
0x00002f9c      7606           jbe 0x2fa4
0x00002f9e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002fa4      4983c703       add r15, 3
0x00002fa8      4189c0         mov r8d, eax
0x00002fab      4d39fd         cmp r13, r15
0x00002fae      7605           jbe 0x2fb5
0x00002fb0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002fb5      498d4701       lea rax, [r15 + 1]
0x00002fb9      4939c5         cmp r13, rax
0x00002fbc      760d           jbe 0x2fcb
0x00002fbe      89d8           mov eax, ebx
0x00002fc0      c0e806         shr al, 6
0x00002fc3      83c030         add eax, 0x30
0x00002fc6      4388443e01     mov byte [r14 + r15 + 1], al
0x00002fcb      498d4702       lea rax, [r15 + 2]
0x00002fcf      4939c5         cmp r13, rax
0x00002fd2      7610           jbe 0x2fe4
0x00002fd4      89d8           mov eax, ebx
0x00002fd6      c0e803         shr al, 3
0x00002fd9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00002fdc      83c030         add eax, 0x30
0x00002fdf      4388443e02     mov byte [r14 + r15 + 2], al
0x00002fe4      83e307         and ebx, 7
0x00002fe7      4883c501       add rbp, 1
0x00002feb      4983c703       add r15, 3
0x00002fef      83c330         add ebx, 0x30
0x00002ff2      4839cd         cmp rbp, rcx
0x00002ff5      0f83e5f7ffff   jae 0x27e0
0x00002ffb      89d6           mov esi, edx
0x00002ffd      4d39fd         cmp r13, r15
0x00003000      7604           jbe 0x3006
0x00003002      43881c3e       mov byte [r14 + r15], bl
0x00003006      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000300a      4983c701       add r15, 1
0x0000300e      84d2           test dl, dl
0x00003010      0f854affffff   jne 0x2f60
0x00003016      89f0           mov eax, esi
0x00003018      83f001         xor eax, 1
0x0000301b      4421c0         and eax, r8d
0x0000301e      4584d2         test r10b, r10b
0x00003021      740e           je 0x3031
0x00003023      4d39fd         cmp r13, r15
0x00003026      7605           jbe 0x302d
0x00003028      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000302d      4983c701       add r15, 1
0x00003031      4883c501       add rbp, 1
0x00003035      4839cd         cmp rbp, rcx
0x00003038      0f837ef7ffff   jae 0x27bc
0x0000303e      84c0           test al, al
0x00003040      0f84f8030000   je 0x343e
0x00003046      4d39fd         cmp r13, r15
0x00003049      7605           jbe 0x3050
0x0000304b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003050      498d4701       lea rax, [r15 + 1]
0x00003054      4939c5         cmp r13, rax
0x00003057      7606           jbe 0x305f
0x00003059      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000305f      4983c702       add r15, 2
0x00003063      4531d2         xor r10d, r10d
0x00003066      4531c0         xor r8d, r8d
0x00003069      eb92           jmp 0x2ffd
0x0000306b      0f1f440000     nop dword [rax + rax]
0x00003070      4983ff01       cmp r15, 1
0x00003074      0f845ffeffff   je 0x2ed9
0x0000307a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000307f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003083      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003088      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000308c      eb0f           jmp 0x309d
0x0000308e      6690           nop
0x00003090      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003094      4939d0         cmp r8, rdx
0x00003097      0f843cfeffff   je 0x2ed9
0x0000309d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000030a0      83e95b         sub ecx, 0x5b
0x000030a3      80f921         cmp cl, 0x21
0x000030a6      77e8           ja 0x3090                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000030a8      be01000000     mov esi, 1
0x000030ad      48d3e6         shl rsi, cl
0x000030b0      4889f1         mov rcx, rsi
0x000030b3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000030bd      4885f1         test rcx, rsi
0x000030c0      74ce           je 0x3090
0x000030c2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000030c7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000030cc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000030d1      c74424080200.  mov dword [rsp + 8], 2
0x000030d9      807c240d00     cmp byte [rsp + 0xd], 0
0x000030de      7410           je 0x30f0
0x000030e0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000030e2      b804000000     mov eax, 4
0x000030e7      0f44442408     cmove eax, dword [rsp + 8]
0x000030ec      89442408       mov dword [rsp + 8], eax
0x000030f0      4883ec08       sub rsp, 8
0x000030f4      4889e9         mov rcx, rbp
0x000030f7      4c89ee         mov rsi, r13
0x000030fa      ff742468       push qword [rsp + 0x68]
0x000030fe      ff742478       push qword [rsp + 0x78]
0x00003102      4c89f7         mov rdi, r14
0x00003105      6a00           push 0
0x00003107      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000310f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003114      488b542430     mov rdx, qword [rsp + 0x30]
0x00003119      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000311d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003122      4883c420       add rsp, 0x20
0x00003126      4989c7         mov r15, rax
0x00003129      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003131      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000313a      4c89f8         mov rax, r15
0x0000313d      0f8500060000   jne 0x3743
0x00003143      4881c4b80000.  add rsp, 0xb8
0x0000314a      5b             pop rbx
0x0000314b      5d             pop rbp
0x0000314c      415c           pop r12
0x0000314e      415d           pop r13
0x00003150      415e           pop r14
0x00003152      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003154      c3             ret
0x00003155      0f1f00         nop dword [rax]
0x00003158      4c89dd         mov rbp, r11
0x0000315b      e979ffffff     jmp 0x30d9
0x00003160      4d39fd         cmp r13, r15
0x00003163      7605           jbe 0x316a
0x00003165      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000316a      498d4701       lea rax, [r15 + 1]
0x0000316e      4939c5         cmp r13, rax
0x00003171      7606           jbe 0x3179
0x00003173      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003179      498d4702       lea rax, [r15 + 2]
0x0000317d      4939c5         cmp r13, rax
0x00003180      0f86ec050000   jbe 0x3772
0x00003186      4c89ea         mov rdx, r13
0x00003189      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000318f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003194      e9d9fbffff     jmp 0x2d72
0x00003199      4489e0         mov eax, r12d
0x0000319c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000031a1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000031a4      e900f6ffff     jmp 0x27a9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000031a9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000031af      e9c5f9ffff     jmp 0x2b79
0x000031b4      85db           test ebx, ebx
0x000031b6      0f8527f4ffff   jne 0x25e3
0x000031bc      c644240d01     mov byte [rsp + 0xd], 1
0x000031c1      4d85ed         test r13, r13
0x000031c4      0f8590050000   jne 0x375a
0x000031ca      488d05042500.  lea rax, [0x000056d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000031d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000031da      c644240e01     mov byte [rsp + 0xe], 1
0x000031df      c644247c00     mov byte [rsp + 0x7c], 0
0x000031e4      4531e4         xor r12d, r12d
0x000031e7      c644240f00     mov byte [rsp + 0xf], 0
0x000031ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000031f5      4889442448     mov qword [rsp + 0x48], rax
0x000031fa      41bf01000000   mov r15d, 1
0x00003200      c74424080200.  mov dword [rsp + 8], 2
0x00003208      e916f4ffff     jmp 0x2623                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000320d      0f1f00         nop dword [rax]
0x00003210      85db           test ebx, ebx
0x00003212      0f85f5030000   jne 0x360d
0x00003218      4d85ed         test r13, r13
0x0000321b      0f8425020000   je 0x3446
0x00003221      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003225      c644240e01     mov byte [rsp + 0xe], 1
0x0000322a      4531e4         xor r12d, r12d
0x0000322d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003232      48c744245000.  mov qword [rsp + 0x50], 0
0x0000323b      488d05912400.  lea rax, str.l______l                   ; 0x56d3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003242      c644240f00     mov byte [rsp + 0xf], 0
0x00003247      c644240d01     mov byte [rsp + 0xd], 1
0x0000324c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003255      41bf01000000   mov r15d, 1
0x0000325b      4889442448     mov qword [rsp + 0x48], rax
0x00003260      e9bef3ffff     jmp 0x2623
0x00003265      488d05672400.  lea rax, str.l______l                   ; 0x56d3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000326c      c644240e01     mov byte [rsp + 0xe], 1
0x00003271      c644247c00     mov byte [rsp + 0x7c], 0
0x00003276      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003279      48c744245000.  mov qword [rsp + 0x50], 0
0x00003282      c644240f01     mov byte [rsp + 0xf], 1
0x00003287      c644240d01     mov byte [rsp + 0xd], 1
0x0000328c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003295      4531ff         xor r15d, r15d
0x00003298      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000329d      c74424080500.  mov dword [rsp + 8], 5
0x000032a5      e979f3ffff     jmp 0x2623
0x000032aa      c644240e01     mov byte [rsp + 0xe], 1
0x000032af      c644247c00     mov byte [rsp + 0x7c], 0
0x000032b4      4531e4         xor r12d, r12d
0x000032b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000032c0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000032c5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000032c8      c644240d01     mov byte [rsp + 0xd], 1
0x000032cd      48c744241800.  mov qword [rsp + 0x18], 0
0x000032d6      48c744244800.  mov qword [rsp + 0x48], 0
0x000032df      e93ff3ffff     jmp 0x2623
0x000032e4      837c24080a     cmp dword [rsp + 8], 0xa
0x000032e9      7456           je 0x3341
0x000032eb      488d35e52300.  lea rsi, [0x000056d7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000032f2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000032f4      ba05000000     mov edx, 5
0x000032f9      e802e2ffff     call sym.imp.dcgettext
0x000032fe      4889c1         mov rcx, rax
0x00003301      4889442468     mov qword [rsp + 0x68], rax
0x00003306      488d05ca2300.  lea rax, [0x000056d7]                   ; "`"
0x0000330d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003310      0f8498030000   je 0x36ae
0x00003316      488d35b82300.  lea rsi, [0x000056d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000331d      31ff           xor edi, edi
0x0000331f      ba05000000     mov edx, 5
0x00003324      e8d7e1ffff     call sym.imp.dcgettext
0x00003329      4889c1         mov rcx, rax
0x0000332c      4889442460     mov qword [rsp + 0x60], rax
0x00003331      488d059d2300.  lea rax, [0x000056d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003338      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000333b      0f8483030000   je 0x36c4
0x00003341      4531ff         xor r15d, r15d
0x00003344      85db           test ebx, ebx
0x00003346      0f84c1010000   je 0x350d
0x0000334c      85db           test ebx, ebx
0x0000334e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003353      0f9544240f     setne byte [rsp + 0xf]
0x00003358      4531e4         xor r12d, r12d
0x0000335b      4889df         mov rdi, rbx
0x0000335e      e8bde1ffff     call sym.imp.strlen
0x00003363      48895c2448     mov qword [rsp + 0x48], rbx
0x00003368      4889442418     mov qword [rsp + 0x18], rax
0x0000336d      c644240e01     mov byte [rsp + 0xe], 1
0x00003372      c644247c00     mov byte [rsp + 0x7c], 0
0x00003377      48c744245000.  mov qword [rsp + 0x50], 0
0x00003380      c644240d01     mov byte [rsp + 0xd], 1
0x00003385      e999f2ffff     jmp 0x2623
0x0000338a      c644240e01     mov byte [rsp + 0xe], 1
0x0000338f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003394      4531e4         xor r12d, r12d
0x00003397      48c744245000.  mov qword [rsp + 0x50], 0
0x000033a0      c644240f00     mov byte [rsp + 0xf], 0
0x000033a5      4531ff         xor r15d, r15d
0x000033a8      c644240d00     mov byte [rsp + 0xd], 0
0x000033ad      48c744241800.  mov qword [rsp + 0x18], 0
0x000033b6      48c744244800.  mov qword [rsp + 0x48], 0
0x000033bf      e95ff2ffff     jmp 0x2623
0x000033c4      c644240e01     mov byte [rsp + 0xe], 1
0x000033c9      c644247c00     mov byte [rsp + 0x7c], 0
0x000033ce      4531e4         xor r12d, r12d
0x000033d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000033da      c644240f01     mov byte [rsp + 0xf], 1
0x000033df      c644240d01     mov byte [rsp + 0xd], 1
0x000033e4      e91af2ffff     jmp 0x2603
0x000033e9      4d39fd         cmp r13, r15
0x000033ec      7605           jbe 0x33f3
0x000033ee      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000033f3      488d4102       lea rax, [rcx + 2]
0x000033f7      4939c5         cmp r13, rax
0x000033fa      7606           jbe 0x3402
0x000033fc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003402      4489e0         mov eax, r12d
0x00003405      4c8d7903       lea r15, [rcx + 3]
0x00003409      4531e4         xor r12d, r12d
0x0000340c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003411      e962f3ffff     jmp 0x2778
0x00003416      662e0f1f8400.  nop word cs:[rax + rax]
0x00003420      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003425      4c89dd         mov rbp, r11
0x00003428      885c240d       mov byte [rsp + 0xd], bl
0x0000342c      e9a8fcffff     jmp 0x30d9
0x00003431      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003436      4531e4         xor r12d, r12d
0x00003439      e902fbffff     jmp 0x2f40
0x0000343e      4531d2         xor r10d, r10d
0x00003441      e9b7fbffff     jmp 0x2ffd
0x00003446      48c744245000.  mov qword [rsp + 0x50], 0
0x0000344f      c644240e01     mov byte [rsp + 0xe], 1
0x00003454      4531e4         xor r12d, r12d
0x00003457      c644247c00     mov byte [rsp + 0x7c], 0
0x0000345c      e9dafdffff     jmp 0x323b
0x00003461      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003466      4c89f6         mov rsi, r14
0x00003469      4c89e9         mov rcx, r13
0x0000346c      4889d8         mov rax, rbx
0x0000346f      4889df         mov rdi, rbx
0x00003472      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003478      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000347d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003485      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003488      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000348e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003496      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000349b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000034a0      7326           jae 0x34c8
0x000034a2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000034a5      7510           jne 0x34b7
0x000034a7      eb1f           jmp 0x34c8
0x000034a9      0f1f80000000.  nop dword [rax]
0x000034b0      41803c0100     cmp byte [r9 + rax], 0
0x000034b5      740e           je 0x34c5
0x000034b7      4883c001       add rax, 1
0x000034bb      488d540500     lea rdx, [rbp + rax]
0x000034c0      4939d3         cmp r11, rdx
0x000034c3      77eb           ja 0x34b0
0x000034c5      4889c7         mov rdi, rax
0x000034c8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000034cd      4531e4         xor r12d, r12d
0x000034d0      e961faffff     jmp 0x2f36
0x000034d5      4889df         mov rdi, rbx
0x000034d8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000034de      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000034e3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000034e9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000034f1      4531e4         xor r12d, r12d
0x000034f4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000034f9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000034fe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003503      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003508      e929faffff     jmp 0x2f36
0x0000350d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003512      0fb602         movzx eax, byte [rdx]
0x00003515      84c0           test al, al
0x00003517      0f842ffeffff   je 0x334c
0x0000351d      0f1f00         nop dword [rax]
0x00003520      4d39fd         cmp r13, r15
0x00003523      7604           jbe 0x3529
0x00003525      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003529      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000352d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003532      84c0           test al, al
0x00003534      75ea           jne 0x3520
0x00003536      e911feffff     jmp 0x334c
0x0000353b      89d0           mov eax, edx
0x0000353d      e955f5ffff     jmp 0x2a97
0x00003542      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003546      80fb3e         cmp bl, 0x3e
0x00003549      0f8771f8ffff   ja 0x2dc0
0x0000354f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003559      480fa3d8       bt rax, rbx
0x0000355d      0f835df8ffff   jae 0x2dc0
0x00003563      807c240f00     cmp byte [rsp + 0xf], 0
0x00003568      0f85e4010000   jne 0x3752                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000356e      4d39fd         cmp r13, r15
0x00003571      7605           jbe 0x3578
0x00003573      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003578      498d4701       lea rax, [r15 + 1]
0x0000357c      4939c5         cmp r13, rax
0x0000357f      7606           jbe 0x3587
0x00003581      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003587      498d4702       lea rax, [r15 + 2]
0x0000358b      4939c5         cmp r13, rax
0x0000358e      7606           jbe 0x3596
0x00003590      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003596      498d4703       lea rax, [r15 + 3]
0x0000359a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000359d      7606           jbe 0x35a5
0x0000359f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000035a5      4983c704       add r15, 4
0x000035a9      31d2           xor edx, edx
0x000035ab      4531e4         xor r12d, r12d
0x000035ae      31c0           xor eax, eax
0x000035b0      4889cd         mov rbp, rcx
0x000035b3      e9c0f1ffff     jmp 0x2778
0x000035b8      85db           test ebx, ebx
0x000035ba      0f8488010000   je 0x3748
0x000035c0      488d050e2100.  lea rax, [0x000056d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000035c7      c644240e01     mov byte [rsp + 0xe], 1
0x000035cc      c644247c00     mov byte [rsp + 0x7c], 0
0x000035d1      4531e4         xor r12d, r12d
0x000035d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000035dd      c644240f01     mov byte [rsp + 0xf], 1
0x000035e2      c644240d00     mov byte [rsp + 0xd], 0
0x000035e7      48c744241801.  mov qword [rsp + 0x18], 1
0x000035f0      4531ff         xor r15d, r15d
0x000035f3      4889442448     mov qword [rsp + 0x48], rax
0x000035f8      e926f0ffff     jmp 0x2623
0x000035fd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003600      4c89dd         mov rbp, r11
0x00003603      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003608      e9ccfaffff     jmp 0x30d9
0x0000360d      488d05bf2000.  lea rax, str.l______l                   ; 0x56d3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003614      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003619      c644247c00     mov byte [rsp + 0x7c], 0
0x0000361e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003621      48c744245000.  mov qword [rsp + 0x50], 0
0x0000362a      c644240f01     mov byte [rsp + 0xf], 1
0x0000362f      c644240d01     mov byte [rsp + 0xd], 1
0x00003634      48c744241801.  mov qword [rsp + 0x18], 1
0x0000363d      4531ff         xor r15d, r15d
0x00003640      4889442448     mov qword [rsp + 0x48], rax
0x00003645      e9d9efffff     jmp 0x2623
0x0000364a      89d0           mov eax, edx
0x0000364c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003651      4885db         test rbx, rbx
0x00003654      742c           je 0x3682
0x00003656      84c0           test al, al
0x00003658      7428           je 0x3682
0x0000365a      0fb60b         movzx ecx, byte [rbx]
0x0000365d      4889d8         mov rax, rbx
0x00003660      84c9           test cl, cl
0x00003662      741e           je 0x3682
0x00003664      4c89fa         mov rdx, r15
0x00003667      4c29f8         sub rax, r15
0x0000366a      4939d5         cmp r13, rdx
0x0000366d      7604           jbe 0x3673
0x0000366f      41880c16       mov byte [r14 + rdx], cl
0x00003673      4883c201       add rdx, 1
0x00003677      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000367b      84c9           test cl, cl
0x0000367d      75eb           jne 0x366a
0x0000367f      4989d7         mov r15, rdx
0x00003682      4d39fd         cmp r13, r15
0x00003685      0f869efaffff   jbe 0x3129
0x0000368b      43c6043e00     mov byte [r14 + r15], 0
0x00003690      e994faffff     jmp 0x3129
0x00003695      837c240802     cmp dword [rsp + 8], 2
0x0000369a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000369f      4c89dd         mov rbp, r11
0x000036a2      0f94c0         sete al
0x000036a5      885c240d       mov byte [rsp + 0xd], bl
0x000036a9      e92bfaffff     jmp 0x30d9
0x000036ae      8b742408       mov esi, dword [rsp + 8]
0x000036b2      4889cf         mov rdi, rcx
0x000036b5      e8a6edffff     call sym.gettext_quote.part.1
0x000036ba      4889442468     mov qword [rsp + 0x68], rax
0x000036bf      e952fcffff     jmp 0x3316
0x000036c4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000036c8      4889cf         mov rdi, rcx
0x000036cb      e890edffff     call sym.gettext_quote.part.1
0x000036d0      4889442460     mov qword [rsp + 0x60], rax
0x000036d5      e967fcffff     jmp 0x3341
0x000036da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000036df      4c89dd         mov rbp, r11
0x000036e2      89d0           mov eax, edx
0x000036e4      885c240d       mov byte [rsp + 0xd], bl
0x000036e8      e9ecf9ffff     jmp 0x30d9
0x000036ed      4883ec08       sub rsp, 8
0x000036f1      41b805000000   mov r8d, 5
0x000036f7      4c89d9         mov rcx, r11
0x000036fa      ff742468       push qword [rsp + 0x68]
0x000036fe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003702      4c89f7         mov rdi, r14
0x00003705      ff742438       push qword [rsp + 0x38]
0x00003709      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003711      488b542430     mov rdx, qword [rsp + 0x30]
0x00003716      488b742470     mov rsi, qword [rsp + 0x70]
0x0000371b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003720      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003724      4989c7         mov r15, rax
0x00003727      e9fdf9ffff     jmp 0x3129
0x0000372c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003731      e916ffffff     jmp 0x364c
0x00003736      c74424080200.  mov dword [rsp + 8], 2
0x0000373e      e996f9ffff     jmp 0x30d9
0x00003743      e8e8ddffff     call sym.imp.__stack_chk_fail
0x00003748      c644240d00     mov byte [rsp + 0xd], 0
0x0000374d      e96ffaffff     jmp 0x31c1
0x00003752      4c89dd         mov rbp, r11
0x00003755      e996f9ffff     jmp 0x30f0
0x0000375a      c644240e01     mov byte [rsp + 0xe], 1
0x0000375f      31c0           xor eax, eax
0x00003761      4531e4         xor r12d, r12d
0x00003764      48c744245000.  mov qword [rsp + 0x50], 0
0x0000376d      e9a2f5ffff     jmp 0x2d14
0x00003772      4c89ea         mov rdx, r13
0x00003775      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000377a      e9f3f5ffff     jmp 0x2d72
0x0000377f      e8fcdcffff     call sym.imp.abort
0x00003784      6690           nop
0x00003786      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003790      4157           push r15
0x00003792      4156           push r14
0x00003794      4c63ff         movsxd r15, edi
0x00003797      4155           push r13
0x00003799      4154           push r12
0x0000379b      4989d6         mov r14, rdx
0x0000379e      55             push rbp
0x0000379f      53             push rbx
0x000037a0      4889cd         mov rbp, rcx
0x000037a3      4883ec28       sub rsp, 0x28
0x000037a7      4889742408     mov qword [rsp + 8], rsi
0x000037ac      e8dfdcffff     call sym.imp.__errno_location
0x000037b1      4989c5         mov r13, rax
0x000037b4      8b00           mov eax, dword [rax]
0x000037b6      4585ff         test r15d, r15d
0x000037b9      488b1da04820.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x000037c0      89442418       mov dword [rsp + 0x18], eax
0x000037c4      0f8867010000   js 0x3931
0x000037ca      44393d874820.  cmp dword [obj.nslots], r15d            ; [0x208058:4]=1
0x000037d1      7f62           jg 0x3835
0x000037d3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000037da      0f8456010000   je 0x3936
0x000037e0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000037e4      488d05854820.  lea rax, obj.slotvec0                   ; 0x208070
0x000037eb      4963f4         movsxd rsi, r12d
0x000037ee      48c1e604       shl rsi, 4
0x000037f2      4839c3         cmp rbx, rax
0x000037f5      0f8415010000   je 0x3910
0x000037fb      4889df         mov rdi, rbx
0x000037fe      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003803      4889c3         mov rbx, rax
0x00003806      488905534820.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x0000380d      48633d444820.  movsxd rdi, dword [obj.nslots]          ; [0x208058:4]=1
0x00003814      4489e2         mov edx, r12d
0x00003817      31f6           xor esi, esi
0x00003819      29fa           sub edx, edi
0x0000381b      48c1e704       shl rdi, 4
0x0000381f      4863d2         movsxd rdx, edx
0x00003822      4801df         add rdi, rbx
0x00003825      48c1e204       shl rdx, 4
0x00003829      e892ddffff     call sym.imp.memset
0x0000382e      448925234820.  mov dword [obj.nslots], r12d            ; [0x208058:4]=1
0x00003835      8b4504         mov eax, dword [rbp + 4]
0x00003838      49c1e704       shl r15, 4
0x0000383c      4883ec08       sub rsp, 8
0x00003840      4c01fb         add rbx, r15
0x00003843      4c8d7d08       lea r15, [rbp + 8]
0x00003847      448b4500       mov r8d, dword [rbp]
0x0000384b      4c8b1b         mov r11, qword [rbx]
0x0000384e      4c8b6308       mov r12, qword [rbx + 8]
0x00003852      4c89f1         mov rcx, r14
0x00003855      83c801         or eax, 1
0x00003858      89442424       mov dword [rsp + 0x24], eax
0x0000385c      ff7530         push qword [rbp + 0x30]
0x0000385f      4189c1         mov r9d, eax
0x00003862      ff7528         push qword [rbp + 0x28]
0x00003865      4157           push r15
0x00003867      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000386a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000386f      4c89e7         mov rdi, r12
0x00003872      4c895c2430     mov qword [rsp + 0x30], r11
0x00003877      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000387c      4883c420       add rsp, 0x20
0x00003880      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003885      4939c3         cmp r11, rax
0x00003888      7767           ja 0x38f1
0x0000388a      488d7001       lea rsi, [rax + 1]
0x0000388e      488d056b4820.  lea rax, obj.slot0                      ; 0x208100
0x00003895      4939c4         cmp r12, rax
0x00003898      488933         mov qword [rbx], rsi
0x0000389b      7412           je 0x38af
0x0000389d      4c89e7         mov rdi, r12
0x000038a0      4889742410     mov qword [rsp + 0x10], rsi
0x000038a5      e8c6dbffff     call sym.imp.free
0x000038aa      488b742410     mov rsi, qword [rsp + 0x10]
0x000038af      4889f7         mov rdi, rsi
0x000038b2      4889742410     mov qword [rsp + 0x10], rsi
0x000038b7      e8540e0000     call sym.xmalloc
0x000038bc      4883ec08       sub rsp, 8
0x000038c0      48894308       mov qword [rbx + 8], rax
0x000038c4      448b4500       mov r8d, dword [rbp]
0x000038c8      ff7530         push qword [rbp + 0x30]
0x000038cb      ff7528         push qword [rbp + 0x28]
0x000038ce      4c89f1         mov rcx, r14
0x000038d1      4157           push r15
0x000038d3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000038d8      4889c7         mov rdi, rax
0x000038db      488b542428     mov rdx, qword [rsp + 0x28]
0x000038e0      488b742430     mov rsi, qword [rsp + 0x30]
0x000038e5      4989c4         mov r12, rax
0x000038e8      e863ecffff     call sym.quotearg_buffer_restyled
0x000038ed      4883c420       add rsp, 0x20
0x000038f1      8b442418       mov eax, dword [rsp + 0x18]
0x000038f5      41894500       mov dword [r13], eax
0x000038f9      4883c428       add rsp, 0x28
0x000038fd      4c89e0         mov rax, r12
0x00003900      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003901      5d             pop rbp
0x00003902      415c           pop r12
0x00003904      415d           pop r13
0x00003906      415e           pop r14
0x00003908      415f           pop r15
0x0000390a      c3             ret
0x0000390b      0f1f440000     nop dword [rax + rax]
0x00003910      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003912      e8590e0000     call sym.xrealloc
0x00003917      660f6f055147.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000391f      4889c3         mov rbx, rax
0x00003922      488905374720.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003929      0f1100         movups xmmword [rax], xmm0
0x0000392c      e9dcfeffff     jmp 0x380d
0x00003931      e84adbffff     call sym.imp.abort
0x00003936      e825100000     call sym.xalloc_die
0x0000393b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003940      4154           push r12
0x00003942      55             push rbp
0x00003943      53             push rbx
0x00003944      4889fb         mov rbx, rdi
0x00003947      e844dbffff     call sym.imp.__errno_location
0x0000394c      448b20         mov r12d, dword [rax]
0x0000394f      4889c5         mov rbp, rax
0x00003952      488d05a74820.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003959      4885db         test rbx, rbx
0x0000395c      be38000000     mov esi, 0x38                           ; '8'
0x00003961      480f44d8       cmove rbx, rax
0x00003965      4889df         mov rdi, rbx
0x00003968      e8a30f0000     call sym.xmemdup
0x0000396d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003971      5b             pop rbx
0x00003972      5d             pop rbp
0x00003973      415c           pop r12
0x00003975      c3             ret
0x00003976      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003980      488d05794820.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003987      4885ff         test rdi, rdi
0x0000398a      480f44f8       cmove rdi, rax
0x0000398e      8b07           mov eax, dword [rdi]
0x00003990      c3             ret
0x00003991      0f1f440000     nop dword [rax + rax]
0x00003996      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000039a0      488d05594820.  lea rax, obj.default_quoting_options    ; 0x208200
0x000039a7      4885ff         test rdi, rdi
0x000039aa      480f44f8       cmove rdi, rax
0x000039ae      8937           mov dword [rdi], esi
0x000039b0      c3             ret
0x000039b1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000039b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000039c0      488d05394820.  lea rax, obj.default_quoting_options    ; 0x208200
0x000039c7      4885ff         test rdi, rdi
0x000039ca      89f1           mov ecx, esi
0x000039cc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000039d0      89f0           mov eax, esi
0x000039d2      83e11f         and ecx, 0x1f
0x000039d5      c0e805         shr al, 5
0x000039d8      0fb6c0         movzx eax, al
0x000039db      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000039e0      8b37           mov esi, dword [rdi]
0x000039e2      89f0           mov eax, esi
0x000039e4      d3e8           shr eax, cl
0x000039e6      31c2           xor edx, eax
0x000039e8      83e001         and eax, 1
0x000039eb      83e201         and edx, 1
0x000039ee      d3e2           shl edx, cl
0x000039f0      31f2           xor edx, esi
0x000039f2      8917           mov dword [rdi], edx
0x000039f4      c3             ret
0x000039f5      90             nop
0x000039f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003a00      488d05f94720.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003a07      4885ff         test rdi, rdi
0x00003a0a      480f44f8       cmove rdi, rax
0x00003a0e      8b4704         mov eax, dword [rdi + 4]
0x00003a11      897704         mov dword [rdi + 4], esi
0x00003a14      c3             ret
0x00003a15      90             nop
0x00003a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003a20      488d05d94720.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003a27      4885ff         test rdi, rdi
0x00003a2a      480f44f8       cmove rdi, rax
0x00003a2e      4885f6         test rsi, rsi
0x00003a31      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003a37      740e           je 0x3a47
0x00003a39      4885d2         test rdx, rdx
0x00003a3c      7409           je 0x3a47
0x00003a3e      48897728       mov qword [rdi + 0x28], rsi
0x00003a42      48895730       mov qword [rdi + 0x30], rdx
0x00003a46      c3             ret
0x00003a47      4883ec08       sub rsp, 8
0x00003a4b      e830daffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003a50      4157           push r15
0x00003a52      4156           push r14
0x00003a54      488d05a54720.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003a5b      4155           push r13
0x00003a5d      4154           push r12
0x00003a5f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003a62      55             push rbp
0x00003a63      53             push rbx
0x00003a64      4c89c3         mov rbx, r8
0x00003a67      4989f6         mov r14, rsi
0x00003a6a      4989d7         mov r15, rdx
0x00003a6d      4883ec18       sub rsp, 0x18
0x00003a71      4d85c0         test r8, r8
0x00003a74      480f44d8       cmove rbx, rax
0x00003a78      48894c2408     mov qword [rsp + 8], rcx
0x00003a7d      e80edaffff     call sym.imp.__errno_location
0x00003a82      448b20         mov r12d, dword [rax]
0x00003a85      4889c5         mov rbp, rax
0x00003a88      488d4308       lea rax, [rbx + 8]
0x00003a8c      4883ec08       sub rsp, 8
0x00003a90      448b4b04       mov r9d, dword [rbx + 4]
0x00003a94      ff7330         push qword [rbx + 0x30]
0x00003a97      448b03         mov r8d, dword [rbx]
0x00003a9a      ff7328         push qword [rbx + 0x28]
0x00003a9d      4c89fa         mov rdx, r15
0x00003aa0      50             push rax
0x00003aa1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003aa6      4c89f6         mov rsi, r14
0x00003aa9      4c89ef         mov rdi, r13
0x00003aac      e89feaffff     call sym.quotearg_buffer_restyled
0x00003ab1      44896500       mov dword [rbp], r12d
0x00003ab5      4883c438       add rsp, 0x38
0x00003ab9      5b             pop rbx
0x00003aba      5d             pop rbp
0x00003abb      415c           pop r12
0x00003abd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003abf      415e           pop r14
0x00003ac1      415f           pop r15
0x00003ac3      c3             ret
0x00003ac4      6690           nop
0x00003ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00003ad0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00003ad2      4156           push r14
0x00003ad4      488d05254720.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003adb      4155           push r13
0x00003add      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00003adf      4989d4         mov r12, rdx
0x00003ae2      55             push rbp
0x00003ae3      53             push rbx
0x00003ae4      4889cb         mov rbx, rcx
0x00003ae7      4989fe         mov r14, rdi
0x00003aea      4989f7         mov r15, rsi
0x00003aed      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00003af1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00003af4      480f44d8       cmove rbx, rax
0x00003af8      31ed           xor ebp, ebp
0x00003afa      e891d9ffff     call sym.imp.__errno_location
0x00003aff      4d85e4         test r12, r12
0x00003b02      4989c5         mov r13, rax
0x00003b05      8b00           mov eax, dword [rax]
0x00003b07      400f94c5       sete bpl
0x00003b0b      0b6b04         or ebp, dword [rbx + 4]
0x00003b0e      4c8d5308       lea r10, [rbx + 8]
0x00003b12      4883ec08       sub rsp, 8
0x00003b16      448b03         mov r8d, dword [rbx]
0x00003b19      4c89f9         mov rcx, r15
0x00003b1c      89442414       mov dword [rsp + 0x14], eax
0x00003b20      ff7330         push qword [rbx + 0x30]
0x00003b23      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003b26      ff7328         push qword [rbx + 0x28]
0x00003b29      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00003b2b      31f6           xor esi, esi
0x00003b2d      4189e9         mov r9d, ebp
0x00003b30      31ff           xor edi, edi
0x00003b32      4c89542440     mov qword [rsp + 0x40], r10
0x00003b37      e814eaffff     call sym.quotearg_buffer_restyled
0x00003b3c      488d7001       lea rsi, [rax + 1]
0x00003b40      4889442448     mov qword [rsp + 0x48], rax
0x00003b45      4883c420       add rsp, 0x20
0x00003b49      4889f7         mov rdi, rsi
0x00003b4c      4889742418     mov qword [rsp + 0x18], rsi
0x00003b51      e8ba0b0000     call sym.xmalloc
0x00003b56      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00003b5b      4883ec08       sub rsp, 8
0x00003b5f      ff7330         push qword [rbx + 0x30]
0x00003b62      ff7328         push qword [rbx + 0x28]
0x00003b65      4c8b542438     mov r10, qword [rsp + 0x38]
0x00003b6a      4189e9         mov r9d, ebp
0x00003b6d      448b03         mov r8d, dword [rbx]
0x00003b70      4c89f9         mov rcx, r15
0x00003b73      4c89f2         mov rdx, r14
0x00003b76      4889c7         mov rdi, rax
0x00003b79      4152           push r10
0x00003b7b      488b742438     mov rsi, qword [rsp + 0x38]
0x00003b80      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00003b85      8b44242c       mov eax, dword [rsp + 0x2c]
0x00003b89      4883c420       add rsp, 0x20
0x00003b8d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00003b90      41894500       mov dword [r13], eax
0x00003b94      7409           je 0x3b9f
0x00003b96      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00003b9b      4d891c24       mov qword [r12], r11
0x00003b9f      488b442410     mov rax, qword [rsp + 0x10]
0x00003ba4      4883c438       add rsp, 0x38
0x00003ba8      5b             pop rbx
0x00003ba9      5d             pop rbp
0x00003baa      415c           pop r12
0x00003bac      415d           pop r13
0x00003bae      415e           pop r14
0x00003bb0      415f           pop r15
0x00003bb2      c3             ret
0x00003bb3      0f1f00         nop dword [rax]
0x00003bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00003bc0      4889d1         mov rcx, rdx
0x00003bc3      31d2           xor edx, edx
0x00003bc5      e906ffffff     jmp sym.quotearg_alloc_mem
0x00003bca      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00003bd0      8b0582442000   mov eax, dword [obj.nslots]             ; [0x208058:4]=1
0x00003bd6      4154           push r12
0x00003bd8      4c8b25814420.  mov r12, qword [obj.slotvec]            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003bdf      55             push rbp
0x00003be0      53             push rbx
0x00003be1      83f801         cmp eax, 1
0x00003be4      7e2b           jle 0x3c11                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00003be6      83e802         sub eax, 2
0x00003be9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003bee      48c1e004       shl rax, 4
0x00003bf2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00003bf7      660f1f840000.  nop word [rax + rax]
0x00003c00      488b3b         mov rdi, qword [rbx]
0x00003c03      4883c310       add rbx, 0x10
0x00003c07      e864d8ffff     call sym.imp.free
0x00003c0c      4839eb         cmp rbx, rbp
0x00003c0f      75ef           jne 0x3c00
0x00003c11      498b7c2408     mov rdi, qword [r12 + 8]
0x00003c16      488d1de34420.  lea rbx, obj.slot0                      ; 0x208100
0x00003c1d      4839df         cmp rdi, rbx
0x00003c20      7417           je 0x3c39
0x00003c22      e849d8ffff     call sym.imp.free
0x00003c27      48c7053e4420.  mov qword [obj.slotvec0], 0x100         ; [0x208070:8]=256
0x00003c32      48891d3f4420.  mov qword [0x00208078], rbx             ; [0x208078:8]=0x208100 obj.slot0
0x00003c39      488d1d304420.  lea rbx, obj.slotvec0                   ; 0x208070
0x00003c40      4939dc         cmp r12, rbx
0x00003c43      740f           je 0x3c54
0x00003c45      4c89e7         mov rdi, r12
0x00003c48      e823d8ffff     call sym.imp.free
0x00003c4d      48891d0c4420.  mov qword [obj.slotvec], rbx            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003c54      5b             pop rbx
0x00003c55      c705f9432000.  mov dword [obj.nslots], 1               ; [0x208058:4]=1
0x00003c5f      5d             pop rbp
0x00003c60      415c           pop r12
0x00003c62      c3             ret
0x00003c63      0f1f00         nop dword [rax]
0x00003c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00003c70      488d0d894520.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003c77      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003c7e      e90dfbffff     jmp sym.quotearg_n_options
0x00003c83      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00003c86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00003c90      488d0d694520.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003c97      e9f4faffff     jmp sym.quotearg_n_options
0x00003c9c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00003ca0      488d0d594520.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003ca7      4889fe         mov rsi, rdi
0x00003caa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003cb1      31ff           xor edi, edi
0x00003cb3      e9d8faffff     jmp sym.quotearg_n_options
0x00003cb8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00003cc0      488d0d394520.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003cc7      4889f2         mov rdx, rsi
0x00003cca      4889fe         mov rsi, rdi
0x00003ccd      31ff           xor edi, edi
0x00003ccf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00003cd4      6690           nop
0x00003cd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00003ce0      4883ec48       sub rsp, 0x48
0x00003ce4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00003ce7      64488b142528.  mov rdx, qword fs:[0x28]
0x00003cf0      4889542438     mov qword [rsp + 0x38], rdx
0x00003cf5      31d2           xor edx, edx
0x00003cf7      83fe0a         cmp esi, 0xa
0x00003cfa      7468           je 0x3d64
0x00003cfc      893424         mov dword [rsp], esi
0x00003cff      4889e1         mov rcx, rsp
0x00003d02      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003d09      4889c6         mov rsi, rax
0x00003d0c      48c744240400.  mov qword [rsp + 4], 0
0x00003d15      48c744240c00.  mov qword [rsp + 0xc], 0
0x00003d1e      48c744241400.  mov qword [rsp + 0x14], 0
0x00003d27      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003d30      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00003d39      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003d42      c74424340000.  mov dword [rsp + 0x34], 0
0x00003d4a      e841faffff     call sym.quotearg_n_options
0x00003d4f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003d54      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003d5d      750a           jne 0x3d69                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00003d5f      4883c448       add rsp, 0x48
0x00003d63      c3             ret
0x00003d64      e817d7ffff     call sym.imp.abort
0x00003d69      e8c2d7ffff     call sym.imp.__stack_chk_fail
0x00003d6e      6690           nop
;-- quotearg_n_style_mem:
0x00003d70      4883ec48       sub rsp, 0x48
0x00003d74      4889d0         mov rax, rdx
0x00003d77      4889ca         mov rdx, rcx
0x00003d7a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00003d83      48894c2438     mov qword [rsp + 0x38], rcx
0x00003d88      31c9           xor ecx, ecx
0x00003d8a      83fe0a         cmp esi, 0xa
0x00003d8d      7461           je 0x3df0
0x00003d8f      893424         mov dword [rsp], esi
0x00003d92      4889e1         mov rcx, rsp
0x00003d95      4889c6         mov rsi, rax
0x00003d98      48c744240400.  mov qword [rsp + 4], 0
0x00003da1      48c744240c00.  mov qword [rsp + 0xc], 0
0x00003daa      48c744241400.  mov qword [rsp + 0x14], 0
0x00003db3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003dbc      48c744242400.  mov qword [rsp + 0x24], 0
0x00003dc5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003dce      c74424340000.  mov dword [rsp + 0x34], 0
0x00003dd6      e8b5f9ffff     call sym.quotearg_n_options
0x00003ddb      488b542438     mov rdx, qword [rsp + 0x38]
0x00003de0      644833142528.  xor rdx, qword fs:[0x28]
0x00003de9      750a           jne 0x3df5
0x00003deb      4883c448       add rsp, 0x48
0x00003def      c3             ret
0x00003df0      e88bd6ffff     call sym.imp.abort
0x00003df5      e836d7ffff     call sym.imp.__stack_chk_fail
0x00003dfa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00003e00      4889f2         mov rdx, rsi
0x00003e03      89fe           mov esi, edi
0x00003e05      31ff           xor edi, edi
0x00003e07      e9d4feffff     jmp sym.quotearg_n_style
0x00003e0c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00003e10      4889d1         mov rcx, rdx
0x00003e13      4889f2         mov rdx, rsi
0x00003e16      89fe           mov esi, edi
0x00003e18      31ff           xor edi, edi
0x00003e1a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00003e1f      90             nop
;-- quotearg_char_mem:
0x00003e20      4883ec48       sub rsp, 0x48
0x00003e24      89d1           mov ecx, edx
0x00003e26      64488b042528.  mov rax, qword fs:[0x28]
0x00003e2f      4889442438     mov qword [rsp + 0x38], rax
0x00003e34      31c0           xor eax, eax
0x00003e36      488b05f34320.  mov rax, qword [0x00208230]             ; [0x208230:8]=0
0x00003e3d      4989e0         mov r8, rsp
0x00003e40      83e11f         and ecx, 0x1f
0x00003e43      660f6f05b543.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003e4b      4889442430     mov qword [rsp + 0x30], rax
0x00003e50      89d0           mov eax, edx
0x00003e52      0f290424       movaps xmmword [rsp], xmm0
0x00003e56      c0e805         shr al, 5
0x00003e59      0fb6c0         movzx eax, al
0x00003e5c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00003e61      660f6f05a743.  movdqa xmm0, xmmword [0x00208210]
0x00003e69      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003e6e      660f6f05aa43.  movdqa xmm0, xmmword [0x00208220]
0x00003e76      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003e7b      418b11         mov edx, dword [r9]
0x00003e7e      89d0           mov eax, edx
0x00003e80      d3e8           shr eax, cl
0x00003e82      f7d0           not eax
0x00003e84      83e001         and eax, 1
0x00003e87      d3e0           shl eax, cl
0x00003e89      4c89c1         mov rcx, r8
0x00003e8c      31d0           xor eax, edx
0x00003e8e      4889f2         mov rdx, rsi
0x00003e91      4889fe         mov rsi, rdi
0x00003e94      418901         mov dword [r9], eax
0x00003e97      31ff           xor edi, edi
0x00003e99      e8f2f8ffff     call sym.quotearg_n_options
0x00003e9e      488b742438     mov rsi, qword [rsp + 0x38]
0x00003ea3      644833342528.  xor rsi, qword fs:[0x28]
0x00003eac      7505           jne 0x3eb3
0x00003eae      4883c448       add rsp, 0x48
0x00003eb2      c3             ret
0x00003eb3      e878d6ffff     call sym.imp.__stack_chk_fail
0x00003eb8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00003ec0      400fbed6       movsx edx, sil
0x00003ec4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00003ecb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00003ed0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00003ed5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00003edc      e93fffffff     jmp sym.quotearg_char_mem
0x00003ee1      0f1f440000     nop dword [rax + rax]
0x00003ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00003ef0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00003ef5      e926ffffff     jmp sym.quotearg_char_mem
0x00003efa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00003f00      4883ec48       sub rsp, 0x48
0x00003f04      4889d0         mov rax, rdx
0x00003f07      64488b142528.  mov rdx, qword fs:[0x28]
0x00003f10      4889542438     mov qword [rsp + 0x38], rdx
0x00003f15      31d2           xor edx, edx
0x00003f17      83fe0a         cmp esi, 0xa
0x00003f1a      7468           je 0x3f84
0x00003f1c      893424         mov dword [rsp], esi
0x00003f1f      4889e1         mov rcx, rsp
0x00003f22      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003f29      4889c6         mov rsi, rax
0x00003f2c      48c744240400.  mov qword [rsp + 4], 0
0x00003f35      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00003f3e      48c744241400.  mov qword [rsp + 0x14], 0
0x00003f47      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003f50      48c744242400.  mov qword [rsp + 0x24], 0
0x00003f59      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003f62      c74424340000.  mov dword [rsp + 0x34], 0
0x00003f6a      e821f8ffff     call sym.quotearg_n_options
0x00003f6f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003f74      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003f7d      750a           jne 0x3f89
0x00003f7f      4883c448       add rsp, 0x48
0x00003f83      c3             ret
0x00003f84      e8f7d4ffff     call sym.imp.abort
0x00003f89      e8a2d5ffff     call sym.imp.__stack_chk_fail
0x00003f8e      6690           nop
;-- quotearg_n_custom_mem:
0x00003f90      4883ec48       sub rsp, 0x48
0x00003f94      4989c9         mov r9, rcx
0x00003f97      488b0d924220.  mov rcx, qword [0x00208230]             ; [0x208230:8]=0
0x00003f9e      660f6f055a42.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003fa6      64488b042528.  mov rax, qword fs:[0x28]
0x00003faf      4889442438     mov qword [rsp + 0x38], rax
0x00003fb4      31c0           xor eax, eax
0x00003fb6      0f290424       movaps xmmword [rsp], xmm0
0x00003fba      4885f6         test rsi, rsi
0x00003fbd      48894c2430     mov qword [rsp + 0x30], rcx
0x00003fc2      c704240a0000.  mov dword [rsp], 0xa
0x00003fc9      660f6f053f42.  movdqa xmm0, xmmword [0x00208210]
0x00003fd1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003fd6      660f6f054242.  movdqa xmm0, xmmword [0x00208220]
0x00003fde      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003fe3      7432           je 0x4017
0x00003fe5      4885d2         test rdx, rdx
0x00003fe8      742d           je 0x4017
0x00003fea      4889742428     mov qword [rsp + 0x28], rsi
0x00003fef      4889542430     mov qword [rsp + 0x30], rdx
0x00003ff4      4889e1         mov rcx, rsp
0x00003ff7      4c89c2         mov rdx, r8
0x00003ffa      4c89ce         mov rsi, r9
0x00003ffd      e88ef7ffff     call sym.quotearg_n_options
0x00004002      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004007      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004010      750a           jne 0x401c
0x00004012      4883c448       add rsp, 0x48
0x00004016      c3             ret
0x00004017      e864d4ffff     call sym.imp.abort
0x0000401c      e80fd5ffff     call sym.imp.__stack_chk_fail
0x00004021      0f1f440000     nop dword [rax + rax]
0x00004026      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004030      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004037      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000403c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004040      4889d1         mov rcx, rdx
0x00004043      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000404a      4889f2         mov rdx, rsi
0x0000404d      4889fe         mov rsi, rdi
0x00004050      31ff           xor edi, edi
0x00004052      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004057      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004060      4989c8         mov r8, rcx
0x00004063      4889d1         mov rcx, rdx
0x00004066      4889f2         mov rdx, rsi
0x00004069      4889fe         mov rsi, rdi
0x0000406c      31ff           xor edi, edi
0x0000406e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004073      0f1f00         nop dword [rax]
0x00004076      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004080      488d0d993f20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004087      e904f7ffff     jmp sym.quotearg_n_options
0x0000408c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004090      488d0d893f20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004097      4889f2         mov rdx, rsi
0x0000409a      4889fe         mov rsi, rdi
0x0000409d      31ff           xor edi, edi
0x0000409f      e9ecf6ffff     jmp sym.quotearg_n_options
0x000040a4      6690           nop
0x000040a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000040b0      488d0d693f20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000040b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000040be      e9cdf6ffff     jmp sym.quotearg_n_options
0x000040c3      0f1f00         nop dword [rax]
0x000040c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000040d0      488d0d493f20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000040d7      4889fe         mov rsi, rdi
0x000040da      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000040e1      31ff           xor edi, edi
0x000040e3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000040e8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x000040f0      4157           push r15
0x000040f2      4156           push r14
0x000040f4      4155           push r13
0x000040f6      4154           push r12
0x000040f8      4d89cc         mov r12, r9
0x000040fb      55             push rbp
0x000040fc      53             push rbx
0x000040fd      4889fd         mov rbp, rdi
0x00004100      4c89c3         mov rbx, r8
0x00004103      4883ec28       sub rsp, 0x28
0x00004107      4885f6         test rsi, rsi
0x0000410a      0f8418010000   je 0x4228
0x00004110      4989d0         mov r8, rdx
0x00004113      488d158e1a00.  lea rdx, [0x00005ba8]                   ; "%s (%s) %s\n"
0x0000411a      4989c9         mov r9, rcx
0x0000411d      31c0           xor eax, eax
0x0000411f      4889f1         mov rcx, rsi
0x00004122      be01000000     mov esi, 1
0x00004127      e8f4d5ffff     call sym.imp.__fprintf_chk
0x0000412c      488d35881a00.  lea rsi, [0x00005bbb]                   ; "(C)"
0x00004133      31ff           xor edi, edi
0x00004135      ba05000000     mov edx, 5
0x0000413a      e8c1d3ffff     call sym.imp.dcgettext
0x0000413f      488d159a1d00.  lea rdx, obj.version_etc_copyright      ; 0x5ee0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004146      4889c1         mov rcx, rax
0x00004149      41b8e3070000   mov r8d, 0x7e3
0x0000414f      be01000000     mov esi, 1
0x00004154      4889ef         mov rdi, rbp
0x00004157      31c0           xor eax, eax
0x00004159      e8c2d5ffff     call sym.imp.__fprintf_chk
0x0000415e      488d35e31a00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x5c48 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004165      31ff           xor edi, edi
0x00004167      ba05000000     mov edx, 5
0x0000416c      e88fd3ffff     call sym.imp.dcgettext
0x00004171      4889ee         mov rsi, rbp
0x00004174      4889c7         mov rdi, rax
0x00004177      e874d4ffff     call sym.imp.fputs_unlocked
0x0000417c      4983fc09       cmp r12, 9
0x00004180      0f873a030000   ja 0x44c0
0x00004186      488d15171d00.  lea rdx, [0x00005ea4]
0x0000418d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004191      4801d0         add rax, rdx
0x00004194      ffe0           jmp rax
0x00004196      662e0f1f8400.  nop word cs:[rax + rax]
0x000041a0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000041a4      488b4310       mov rax, qword [rbx + 0x10]
0x000041a8      488d35091c00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x5db8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000041af      4c8b4308       mov r8, qword [rbx + 8]
0x000041b3      ba05000000     mov edx, 5
0x000041b8      31ff           xor edi, edi
0x000041ba      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000041be      4c8b6328       mov r12, qword [rbx + 0x28]
0x000041c2      4c894c2410     mov qword [rsp + 0x10], r9
0x000041c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000041cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000041cf      48890424       mov qword [rsp], rax
0x000041d3      4c89442408     mov qword [rsp + 8], r8
0x000041d8      488b1b         mov rbx, qword [rbx]
0x000041db      e820d3ffff     call sym.imp.dcgettext
0x000041e0      4883ec08       sub rsp, 8
0x000041e4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000041e9      4889c2         mov rdx, rax
0x000041ec      4889d9         mov rcx, rbx
0x000041ef      be01000000     mov esi, 1
0x000041f4      4889ef         mov rdi, rbp
0x000041f7      31c0           xor eax, eax
0x000041f9      4151           push r9
0x000041fb      4155           push r13
0x000041fd      4154           push r12
0x000041ff      4157           push r15
0x00004201      4156           push r14
0x00004203      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004208      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000420d      e80ed5ffff     call sym.imp.__fprintf_chk
0x00004212      4883c430       add rsp, 0x30
0x00004216      4883c428       add rsp, 0x28
0x0000421a      5b             pop rbx
0x0000421b      5d             pop rbp
0x0000421c      415c           pop r12
0x0000421e      415d           pop r13
0x00004220      415e           pop r14
0x00004222      415f           pop r15
0x00004224      c3             ret
0x00004225      0f1f00         nop dword [rax]
0x00004228      4989c8         mov r8, rcx
0x0000422b      4889d1         mov rcx, rdx
0x0000422e      488d157f1900.  lea rdx, str.s__s                       ; 0x5bb4 ; "%s %s\n"
0x00004235      be01000000     mov esi, 1
0x0000423a      31c0           xor eax, eax
0x0000423c      e8dfd4ffff     call sym.imp.__fprintf_chk
0x00004241      e9e6feffff     jmp 0x412c
0x00004246      662e0f1f8400.  nop word cs:[rax + rax]
0x00004250      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004254      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004258      488d35891b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x5de8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000425f      488b4310       mov rax, qword [rbx + 0x10]
0x00004263      4c8b4308       mov r8, qword [rbx + 8]
0x00004267      ba05000000     mov edx, 5
0x0000426c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004270      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004274      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004278      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000427c      488b1b         mov rbx, qword [rbx]
0x0000427f      4c89542418     mov qword [rsp + 0x18], r10
0x00004284      4c894c2410     mov qword [rsp + 0x10], r9
0x00004289      48890424       mov qword [rsp], rax
0x0000428d      4c89442408     mov qword [rsp + 8], r8
0x00004292      31ff           xor edi, edi
0x00004294      e867d2ffff     call sym.imp.dcgettext
0x00004299      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000429e      4152           push r10
0x000042a0      e93fffffff     jmp 0x41e4
0x000042a5      0f1f00         nop dword [rax]
0x000042a8      488b1b         mov rbx, qword [rbx]
0x000042ab      488d350d1900.  lea rsi, str.Written_by__s.             ; 0x5bbf ; "Written by %s.\n"
0x000042b2      ba05000000     mov edx, 5
0x000042b7      31ff           xor edi, edi
0x000042b9      e842d2ffff     call sym.imp.dcgettext
0x000042be      4883c428       add rsp, 0x28
0x000042c2      4889d9         mov rcx, rbx
0x000042c5      4889ef         mov rdi, rbp
0x000042c8      5b             pop rbx
0x000042c9      5d             pop rbp
0x000042ca      415c           pop r12
0x000042cc      415d           pop r13
0x000042ce      415e           pop r14
0x000042d0      415f           pop r15
0x000042d2      4889c2         mov rdx, rax
0x000042d5      be01000000     mov esi, 1
0x000042da      31c0           xor eax, eax
0x000042dc      e93fd4ffff     jmp sym.imp.__fprintf_chk
0x000042e1      0f1f80000000.  nop dword [rax]
0x000042e8      4c8b6308       mov r12, qword [rbx + 8]
0x000042ec      488d35dc1800.  lea rsi, str.Written_by__s_and__s.      ; 0x5bcf ; "Written by %s and %s.\n"
0x000042f3      488b1b         mov rbx, qword [rbx]
0x000042f6      ba05000000     mov edx, 5
0x000042fb      31ff           xor edi, edi
0x000042fd      e8fed1ffff     call sym.imp.dcgettext
0x00004302      4883c428       add rsp, 0x28
0x00004306      4d89e0         mov r8, r12
0x00004309      4889d9         mov rcx, rbx
0x0000430c      4889ef         mov rdi, rbp
0x0000430f      4889c2         mov rdx, rax
0x00004312      be01000000     mov esi, 1
0x00004317      5b             pop rbx
0x00004318      5d             pop rbp
0x00004319      415c           pop r12
0x0000431b      415d           pop r13
0x0000431d      415e           pop r14
0x0000431f      415f           pop r15
0x00004321      31c0           xor eax, eax
0x00004323      e9f8d3ffff     jmp sym.imp.__fprintf_chk
0x00004328      0f1f84000000.  nop dword [rax + rax]
0x00004330      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004334      4c8b6308       mov r12, qword [rbx + 8]
0x00004338      488d35a71800.  lea rsi, str.Written_by__s___s__and__s. ; 0x5be6 ; "Written by %s, %s, and %s.\n"
0x0000433f      488b1b         mov rbx, qword [rbx]
0x00004342      ba05000000     mov edx, 5
0x00004347      31ff           xor edi, edi
0x00004349      e8b2d1ffff     call sym.imp.dcgettext
0x0000434e      4883c428       add rsp, 0x28
0x00004352      4d89e9         mov r9, r13
0x00004355      4d89e0         mov r8, r12
0x00004358      4889d9         mov rcx, rbx
0x0000435b      4889ef         mov rdi, rbp
0x0000435e      4889c2         mov rdx, rax
0x00004361      5b             pop rbx
0x00004362      5d             pop rbp
0x00004363      415c           pop r12
0x00004365      415d           pop r13
0x00004367      415e           pop r14
0x00004369      415f           pop r15
0x0000436b      be01000000     mov esi, 1
0x00004370      31c0           xor eax, eax
0x00004372      e9a9d3ffff     jmp sym.imp.__fprintf_chk
0x00004377      660f1f840000.  nop word [rax + rax]
0x00004380      488d35911900.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x5d18 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004387      ba05000000     mov edx, 5
0x0000438c      31ff           xor edi, edi
0x0000438e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004392      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004396      4c8b6308       mov r12, qword [rbx + 8]
0x0000439a      488b1b         mov rbx, qword [rbx]
0x0000439d      e85ed1ffff     call sym.imp.dcgettext
0x000043a2      4883ec08       sub rsp, 8
0x000043a6      4156           push r14
0x000043a8      4889c2         mov rdx, rax
0x000043ab      4d89e9         mov r9, r13
0x000043ae      4d89e0         mov r8, r12
0x000043b1      4889d9         mov rcx, rbx
0x000043b4      4889ef         mov rdi, rbp
0x000043b7      be01000000     mov esi, 1
0x000043bc      31c0           xor eax, eax
0x000043be      e85dd3ffff     call sym.imp.__fprintf_chk
0x000043c3      58             pop rax
0x000043c4      5a             pop rdx
0x000043c5      4883c428       add rsp, 0x28
0x000043c9      5b             pop rbx
0x000043ca      5d             pop rbp
0x000043cb      415c           pop r12
0x000043cd      415d           pop r13
0x000043cf      415e           pop r14
0x000043d1      415f           pop r15
0x000043d3      c3             ret
0x000043d4      0f1f4000       nop dword [rax]
0x000043d8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000043dc      488d35551900.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x5d38 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000043e3      ba05000000     mov edx, 5
0x000043e8      31ff           xor edi, edi
0x000043ea      4c8b7318       mov r14, qword [rbx + 0x18]
0x000043ee      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000043f2      4c8b6308       mov r12, qword [rbx + 8]
0x000043f6      488b1b         mov rbx, qword [rbx]
0x000043f9      e802d1ffff     call sym.imp.dcgettext
0x000043fe      4157           push r15
0x00004400      eba4           jmp 0x43a6
0x00004402      660f1f440000   nop word [rax + rax]
0x00004408      4c8b4308       mov r8, qword [rbx + 8]
0x0000440c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004410      488d35491900.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x5d60 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004417      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000441b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000441f      ba05000000     mov edx, 5
0x00004424      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004428      31ff           xor edi, edi
0x0000442a      488b1b         mov rbx, qword [rbx]
0x0000442d      4c890424       mov qword [rsp], r8
0x00004431      e8cad0ffff     call sym.imp.dcgettext
0x00004436      4883ec08       sub rsp, 8
0x0000443a      4d89e9         mov r9, r13
0x0000443d      4154           push r12
0x0000443f      4157           push r15
0x00004441      4156           push r14
0x00004443      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004448      4889d9         mov rcx, rbx
0x0000444b      4889c2         mov rdx, rax
0x0000444e      4889ef         mov rdi, rbp
0x00004451      be01000000     mov esi, 1
0x00004456      31c0           xor eax, eax
0x00004458      e8c3d2ffff     call sym.imp.__fprintf_chk
0x0000445d      4883c420       add rsp, 0x20
0x00004461      4883c428       add rsp, 0x28
0x00004465      5b             pop rbx
0x00004466      5d             pop rbp
0x00004467      415c           pop r12
0x00004469      415d           pop r13
0x0000446b      415e           pop r14
0x0000446d      415f           pop r15
0x0000446f      c3             ret
0x00004470      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004474      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004478      488d35091900.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x5d88 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000447f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004483      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004487      ba05000000     mov edx, 5
0x0000448c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004490      4c8b4308       mov r8, qword [rbx + 8]
0x00004494      31ff           xor edi, edi
0x00004496      4c894c2408     mov qword [rsp + 8], r9
0x0000449b      488b1b         mov rbx, qword [rbx]
0x0000449e      4c890424       mov qword [rsp], r8
0x000044a2      e859d0ffff     call sym.imp.dcgettext
0x000044a7      4155           push r13
0x000044a9      4154           push r12
0x000044ab      4157           push r15
0x000044ad      4156           push r14
0x000044af      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000044b4      eb8d           jmp 0x4443
0x000044b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000044c0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000044c4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000044c8      ba05000000     mov edx, 5
0x000044cd      488b4310       mov rax, qword [rbx + 0x10]
0x000044d1      4c8b4308       mov r8, qword [rbx + 8]
0x000044d5      488d35441900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x5e20 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000044dc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000044e0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000044e4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000044e8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000044ec      4c89542418     mov qword [rsp + 0x18], r10
0x000044f1      4c894c2410     mov qword [rsp + 0x10], r9
0x000044f6      48890424       mov qword [rsp], rax
0x000044fa      4c89442408     mov qword [rsp + 8], r8
0x000044ff      488b1b         mov rbx, qword [rbx]
0x00004502      e98bfdffff     jmp 0x4292
0x00004507      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004510      4531c9         xor r9d, r9d
0x00004513      49833800       cmp qword [r8], 0
0x00004517      7412           je 0x452b
0x00004519      0f1f80000000.  nop dword [rax]
0x00004520      4983c101       add r9, 1
0x00004524      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004529      75f5           jne 0x4520
0x0000452b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004530      4883ec68       sub rsp, 0x68
0x00004534      4d89c2         mov r10, r8
0x00004537      4531c9         xor r9d, r9d
0x0000453a      64488b042528.  mov rax, qword fs:[0x28]
0x00004543      4889442458     mov qword [rsp + 0x58], rax
0x00004548      31c0           xor eax, eax
0x0000454a      4989e0         mov r8, rsp
0x0000454d      0f1f00         nop dword [rax]
0x00004550      418b02         mov eax, dword [r10]
0x00004553      83f82f         cmp eax, 0x2f
0x00004556      7742           ja 0x459a
0x00004558      4189c3         mov r11d, eax
0x0000455b      4d035a10       add r11, qword [r10 + 0x10]
0x0000455f      83c008         add eax, 8
0x00004562      418902         mov dword [r10], eax
0x00004565      498b03         mov rax, qword [r11]
0x00004568      4885c0         test rax, rax
0x0000456b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000456f      740a           je 0x457b
0x00004571      4983c101       add r9, 1
0x00004575      4983f90a       cmp r9, 0xa
0x00004579      75d5           jne 0x4550
0x0000457b      e870fbffff     call sym.version_etc_arn
0x00004580      488b442458     mov rax, qword [rsp + 0x58]
0x00004585      644833042528.  xor rax, qword fs:[0x28]
0x0000458e      7505           jne 0x4595
0x00004590      4883c468       add rsp, 0x68
0x00004594      c3             ret
0x00004595      e896cfffff     call sym.imp.__stack_chk_fail
0x0000459a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000459e      498d4308       lea rax, [r11 + 8]
0x000045a2      49894208       mov qword [r10 + 8], rax
0x000045a6      ebbd           jmp 0x4565
0x000045a8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000045b0      55             push rbp
0x000045b1      53             push rbx
0x000045b2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000045b8      4531db         xor r11d, r11d
0x000045bb      4881ecb80000.  sub rsp, 0xb8
0x000045c2      64488b042528.  mov rax, qword fs:[0x28]
0x000045cb      4889442478     mov qword [rsp + 0x78], rax
0x000045d0      31c0           xor eax, eax
0x000045d2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000045da      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000045e2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000045ea      4c8d442420     lea r8, [rsp + 0x20]
0x000045ef      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000045f7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000045ff      4889442410     mov qword [rsp + 0x10], rax
0x00004604      488d84248000.  lea rax, [rsp + 0x80]
0x0000460c      4531c9         xor r9d, r9d
0x0000460f      4889442418     mov qword [rsp + 0x18], rax
0x00004614      4889c5         mov rbp, rax
0x00004617      660f1f840000.  nop word [rax + rax]
0x00004620      4183fa2f       cmp r10d, 0x2f
0x00004624      7756           ja 0x467c
0x00004626      4489d0         mov eax, r10d
0x00004629      41bb01000000   mov r11d, 1
0x0000462f      4183c208       add r10d, 8
0x00004633      4801e8         add rax, rbp
0x00004636      488b00         mov rax, qword [rax]
0x00004639      4885c0         test rax, rax
0x0000463c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004640      740a           je 0x464c
0x00004642      4983c101       add r9, 1
0x00004646      4983f90a       cmp r9, 0xa
0x0000464a      75d4           jne 0x4620
0x0000464c      4584db         test r11b, r11b
0x0000464f      7524           jne 0x4675
0x00004651      e89afaffff     call sym.version_etc_arn
0x00004656      488b442478     mov rax, qword [rsp + 0x78]
0x0000465b      644833042528.  xor rax, qword fs:[0x28]
0x00004664      750a           jne 0x4670
0x00004666      4881c4b80000.  add rsp, 0xb8
0x0000466d      5b             pop rbx
0x0000466e      5d             pop rbp
0x0000466f      c3             ret
0x00004670      e8bbceffff     call sym.imp.__stack_chk_fail
0x00004675      4489542408     mov dword [rsp + 8], r10d
0x0000467a      ebd5           jmp 0x4651
0x0000467c      4889d8         mov rax, rbx
0x0000467f      4883c308       add rbx, 8
0x00004683      ebb1           jmp 0x4636
0x00004685      90             nop
0x00004686      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004690      53             push rbx
0x00004691      488d356a1500.  lea rsi, str.Report_bugs_to:__s         ; 0x5c02 ; "\nReport bugs to: %s\n"
0x00004698      ba05000000     mov edx, 5
0x0000469d      31ff           xor edi, edi
0x0000469f      e85cceffff     call sym.imp.dcgettext
0x000046a4      488d156c1500.  lea rdx, str.bug_coreutils_gnu.org      ; 0x5c17 ; "bug-coreutils@gnu.org"
0x000046ab      4889c6         mov rsi, rax
0x000046ae      bf01000000     mov edi, 1
0x000046b3      31c0           xor eax, eax
0x000046b5      e8e6cfffff     call sym.imp.__printf_chk
0x000046ba      488d356c1500.  lea rsi, str.s_home_page:___s           ; 0x5c2d ; "%s home page: <%s>\n"
0x000046c1      ba05000000     mov edx, 5
0x000046c6      31ff           xor edi, edi
0x000046c8      e833ceffff     call sym.imp.dcgettext
0x000046cd      488d0db40e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5588 ; "https://www.gnu.org/software/coreutils/"
0x000046d4      488d15040c00.  lea rdx, str.GNU_coreutils              ; 0x52df ; "GNU coreutils"
0x000046db      4889c6         mov rsi, rax
0x000046de      bf01000000     mov edi, 1
0x000046e3      31c0           xor eax, eax
0x000046e5      e8b6cfffff     call sym.imp.__printf_chk
0x000046ea      488b1d973920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000046f1      488d35681700.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x5e60 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000046f8      31ff           xor edi, edi
0x000046fa      ba05000000     mov edx, 5
0x000046ff      e8fccdffff     call sym.imp.dcgettext
0x00004704      4889de         mov rsi, rbx
0x00004707      4889c7         mov rdi, rax
0x0000470a      5b             pop rbx
0x0000470b      e9e0ceffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004710      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004711      4889fb         mov rbx, rdi
0x00004714      e817cfffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004719      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000471c      7505           jne 0x4723
0x0000471e      4885db         test rbx, rbx
0x00004721      7502           jne 0x4725
0x00004723      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004724      c3             ret
0x00004725      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000472a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004730      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004733      48f7e6         mul rsi
0x00004736      4889c7         mov rdi, rax
0x00004739      0f90c0         seto al
0x0000473c      4885ff         test rdi, rdi
0x0000473f      780a           js 0x474b
0x00004741      0fb6c0         movzx eax, al
0x00004744      4885c0         test rax, rax
0x00004747      7502           jne 0x474b
0x00004749      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000474b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000474f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004754      6690           nop
0x00004756      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004760      ebae           jmp sym.xmalloc
0x00004762      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004766      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004770      4885f6         test rsi, rsi
0x00004773      53             push rbx
0x00004774      4889f3         mov rbx, rsi
0x00004777      7505           jne 0x477e
0x00004779      4885ff         test rdi, rdi
0x0000477c      751a           jne 0x4798
0x0000477e      4889de         mov rsi, rbx
0x00004781      e8faceffff     call sym.imp.realloc
0x00004786      4885c0         test rax, rax
0x00004789      7505           jne 0x4790
0x0000478b      4885db         test rbx, rbx
0x0000478e      7511           jne 0x47a1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004790      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004791      c3             ret
0x00004792      660f1f440000   nop word [rax + rax]
0x00004798      e8d3ccffff     call sym.imp.free
0x0000479d      31c0           xor eax, eax
0x0000479f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000047a0      c3             ret
0x000047a1      e8ba010000     call sym.xalloc_die
0x000047a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000047b0      4889f0         mov rax, rsi
0x000047b3      48f7e2         mul rdx
0x000047b6      4889c6         mov rsi, rax
0x000047b9      0f90c0         seto al
0x000047bc      4885f6         test rsi, rsi
0x000047bf      780a           js 0x47cb
0x000047c1      0fb6c0         movzx eax, al
0x000047c4      4885c0         test rax, rax
0x000047c7      7502           jne 0x47cb
0x000047c9      eba5           jmp sym.xrealloc
0x000047cb      4883ec08       sub rsp, 8
0x000047cf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000047d4      6690           nop
0x000047d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000047e0      4885ff         test rdi, rdi
0x000047e3      4989d1         mov r9, rdx
0x000047e6      488b0e         mov rcx, qword [rsi]
0x000047e9      7435           je 0x4820
0x000047eb      31d2           xor edx, edx
0x000047ed      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000047f7      49f7f1         div r9
0x000047fa      4839c8         cmp rax, rcx
0x000047fd      763c           jbe 0x483b
0x000047ff      4889c8         mov rax, rcx
0x00004802      48d1e8         shr rax, 1
0x00004805      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000480a      48890e         mov qword [rsi], rcx
0x0000480d      490fafc9       imul rcx, r9
0x00004811      4889ce         mov rsi, rcx
0x00004814      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004819      0f1f80000000.  nop dword [rax]
0x00004820      4885c9         test rcx, rcx
0x00004823      7423           je 0x4848
0x00004825      4889c8         mov rax, rcx
0x00004828      49f7e1         mul r9
0x0000482b      0f90c2         seto dl
0x0000482e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004831      0fb6d2         movzx edx, dl
0x00004834      7805           js 0x483b
0x00004836      4885d2         test rdx, rdx
0x00004839      74cf           je 0x480a
0x0000483b      4883ec08       sub rsp, 8
0x0000483f      e81c010000     call sym.xalloc_die
0x00004844      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004848      31d2           xor edx, edx
0x0000484a      b880000000     mov eax, 0x80
0x0000484f      4531c0         xor r8d, r8d
0x00004852      49f7f1         div r9
0x00004855      4885c0         test rax, rax
0x00004858      410f94c0       sete r8b
0x0000485c      498d0c00       lea rcx, [r8 + rax]
0x00004860      ebc3           jmp 0x4825
0x00004862      0f1f4000       nop dword [rax]
0x00004866      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004870      4885ff         test rdi, rdi
0x00004873      488b06         mov rax, qword [rsi]
0x00004876      7428           je 0x48a0
0x00004878      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004882      4839d0         cmp rax, rdx
0x00004885      772a           ja 0x48b1
0x00004887      4889c2         mov rdx, rax
0x0000488a      48d1ea         shr rdx, 1
0x0000488d      488d440201     lea rax, [rdx + rax + 1]
0x00004892      488906         mov qword [rsi], rax
0x00004895      4889c6         mov rsi, rax
0x00004898      e9d3feffff     jmp sym.xrealloc
0x0000489d      0f1f00         nop dword [rax]
0x000048a0      4885c0         test rax, rax
0x000048a3      ba80000000     mov edx, 0x80
0x000048a8      480f44c2       cmove rax, rdx
0x000048ac      4885c0         test rax, rax
0x000048af      79e1           jns 0x4892
0x000048b1      4883ec08       sub rsp, 8
0x000048b5      e8a6000000     call sym.xalloc_die
0x000048ba      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000048c0      53             push rbx
0x000048c1      4889fb         mov rbx, rdi
0x000048c4      e847feffff     call sym.xmalloc
0x000048c9      4889da         mov rdx, rbx
0x000048cc      31f6           xor esi, esi
0x000048ce      4889c7         mov rdi, rax
0x000048d1      5b             pop rbx
0x000048d2      e9e9ccffff     jmp sym.imp.memset
0x000048d7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000048e0      4889f8         mov rax, rdi
0x000048e3      4883ec08       sub rsp, 8
0x000048e7      48f7e6         mul rsi
0x000048ea      0f90c2         seto dl
0x000048ed      4885c0         test rax, rax
0x000048f0      7817           js 0x4909
0x000048f2      0fb6d2         movzx edx, dl
0x000048f5      4885d2         test rdx, rdx
0x000048f8      750f           jne 0x4909
0x000048fa      e801cdffff     call sym.imp.calloc
0x000048ff      4885c0         test rax, rax
0x00004902      7405           je 0x4909
0x00004904      4883c408       add rsp, 8
0x00004908      c3             ret
0x00004909      e852000000     call sym.xalloc_die
0x0000490e      6690           nop
;-- xmemdup:
0x00004910      55             push rbp
0x00004911      53             push rbx
0x00004912      4889fd         mov rbp, rdi
0x00004915      4889f7         mov rdi, rsi
0x00004918      4889f3         mov rbx, rsi
0x0000491b      4883ec08       sub rsp, 8
0x0000491f      e8ecfdffff     call sym.xmalloc
0x00004924      4883c408       add rsp, 8
0x00004928      4889da         mov rdx, rbx
0x0000492b      4889ee         mov rsi, rbp
0x0000492e      5b             pop rbx
0x0000492f      5d             pop rbp
0x00004930      4889c7         mov rdi, rax
0x00004933      e9d8ccffff     jmp sym.imp.memcpy
0x00004938      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004940      53             push rbx
0x00004941      4889fb         mov rbx, rdi
0x00004944      e8d7cbffff     call sym.imp.strlen
0x00004949      4889df         mov rdi, rbx
0x0000494c      488d7001       lea rsi, [rax + 1]
0x00004950      5b             pop rbx
0x00004951      ebbd           jmp sym.xmemdup
0x00004953      662e0f1f8400.  nop word cs:[rax + rax]
0x0000495d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004960      488d35a81500.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x5f0f ; "memory exhausted"
0x00004967      4883ec08       sub rsp, 8
0x0000496b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004970      31ff           xor edi, edi
0x00004972      e889cbffff     call sym.imp.dcgettext
0x00004977      8b3d9b362000   mov edi, dword [obj.exit_failure]       ; [0x208018:4]=1
0x0000497d      488d15f40c00.  lea rdx, [0x00005678]                   ; "%s"
0x00004984      4889c1         mov rcx, rax
0x00004987      31f6           xor esi, esi
0x00004989      31c0           xor eax, eax
0x0000498b      e830cdffff     call sym.imp.error
0x00004990      e8ebcaffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004995      662e0f1f8400.  nop word cs:[rax + rax]
0x0000499f      90             nop
;-- xnumtoumax:
0x000049a0      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x000049a2      4156           push r14
0x000049a4      4989cf         mov r15, rcx
0x000049a7      4155           push r13
0x000049a9      4154           push r12
0x000049ab      4989d6         mov r14, rdx
0x000049ae      55             push rbp
0x000049af      53             push rbx
0x000049b0      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x000049b2      31f6           xor esi, esi
0x000049b4      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x000049b7      4d89cd         mov r13, r9
0x000049ba      4883ec18       sub rsp, 0x18
0x000049be      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x000049c1      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x000049c5      64488b042528.  mov rax, qword fs:[0x28]
0x000049ce      4889442408     mov qword [rsp + 8], rax
0x000049d3      31c0           xor eax, eax
0x000049d5      e8f6000000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x000049da      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x000049dc      0f858e000000   jne 0x4a70
0x000049e2      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x000049e6      4c39f5         cmp rbp, r14
0x000049e9      7205           jb 0x49f0
0x000049eb      4c39fd         cmp rbp, r15
0x000049ee      7654           jbe 0x4a44
0x000049f0      e89bcaffff     call sym.imp.__errno_location
0x000049f5      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x000049fc      4989c6         mov r14, rax
0x000049ff      19c0           sbb eax, eax
0x00004a01      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x00004a04      83c04b         add eax, 0x4b
0x00004a07      418906         mov dword [r14], eax
0x00004a0a      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x00004a0d      e8bef6ffff     call sym.quote
0x00004a12      418b36         mov esi, dword [r14]
0x00004a15      4989c0         mov r8, rax
0x00004a18      b800000000     mov eax, 0
0x00004a1d      488d15500c00.  lea rdx, str.s:__s                      ; 0x5674 ; "%s: %s"
0x00004a24      4c89e9         mov rcx, r13
0x00004a27      83fe16         cmp esi, 0x16
0x00004a2a      0f44f0         cmove esi, eax
0x00004a2d      85db           test ebx, ebx
0x00004a2f      b801000000     mov eax, 1
0x00004a34      0f44d8         cmove ebx, eax
0x00004a37      31c0           xor eax, eax
0x00004a39      89df           mov edi, ebx
0x00004a3b      e880ccffff     call sym.imp.error
0x00004a40      488b2c24       mov rbp, qword [rsp]
0x00004a44      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00004a49      644833142528.  xor rdx, qword fs:[0x28]
0x00004a52      4889e8         mov rax, rbp
0x00004a55      7544           jne 0x4a9b
0x00004a57      4883c418       add rsp, 0x18
0x00004a5b      5b             pop rbx
0x00004a5c      5d             pop rbp
0x00004a5d      415c           pop r12
0x00004a5f      415d           pop r13
0x00004a61      415e           pop r14
0x00004a63      415f           pop r15
0x00004a65      c3             ret
0x00004a66      662e0f1f8400.  nop word cs:[rax + rax]
0x00004a70      89c5           mov ebp, eax
0x00004a72      e819caffff     call sym.imp.__errno_location
0x00004a77      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x00004a7a      4989c6         mov r14, rax
0x00004a7d      7411           je 0x4a90
0x00004a7f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00004a82      7586           jne 0x4a0a
0x00004a84      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x00004a8a      e97bffffff     jmp 0x4a0a
0x00004a8f      90             nop
0x00004a90      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00004a96      e96fffffff     jmp 0x4a0a
0x00004a9b      e890caffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x00004aa0      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00004aa4      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00004aa6      4d89c1         mov r9, r8
0x00004aa9      4989c8         mov r8, rcx
0x00004aac      4889d1         mov rcx, rdx
0x00004aaf      4889f2         mov rdx, rsi
0x00004ab2      be0a000000     mov esi, 0xa
0x00004ab7      e8e4feffff     call sym.xnumtoumax
0x00004abc      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00004ac0      c3             ret
0x00004ac1      662e0f1f8400.  nop word cs:[rax + rax]
0x00004acb      0f1f440000     nop dword [rax + rax]
;-- xstrtoumax:
0x00004ad0      4157           push r15
0x00004ad2      4156           push r14
0x00004ad4      4155           push r13
0x00004ad6      4154           push r12
0x00004ad8      55             push rbp
0x00004ad9      53             push rbx
0x00004ada      4883ec28       sub rsp, 0x28
0x00004ade      64488b042528.  mov rax, qword fs:[0x28]
0x00004ae7      4889442418     mov qword [rsp + 0x18], rax
0x00004aec      31c0           xor eax, eax
0x00004aee      83fa24         cmp edx, 0x24
0x00004af1      0f875e030000   ja 0x4e55
0x00004af7      488d442410     lea rax, [rsp + 0x10]
0x00004afc      4989f7         mov r15, rsi
0x00004aff      4885f6         test rsi, rsi
0x00004b02      4889fd         mov rbp, rdi
0x00004b05      89542408       mov dword [rsp + 8], edx
0x00004b09      4989ce         mov r14, rcx
0x00004b0c      4d89c5         mov r13, r8
0x00004b0f      4c0f44f8       cmove r15, rax
0x00004b13      e878c9ffff     call sym.imp.__errno_location
0x00004b18      c70000000000   mov dword [rax], 0
0x00004b1e      4989c4         mov r12, rax
0x00004b21      0fb65d00       movzx ebx, byte [rbp]
0x00004b25      e826ccffff     call sym.imp.__ctype_b_loc
0x00004b2a      8b542408       mov edx, dword [rsp + 8]
0x00004b2e      488b30         mov rsi, qword [rax]
0x00004b31      4889e8         mov rax, rbp
0x00004b34      eb11           jmp 0x4b47
0x00004b36      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b40      4883c001       add rax, 1
0x00004b44      0fb618         movzx ebx, byte [rax]
0x00004b47      0fb6cb         movzx ecx, bl
0x00004b4a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00004b4f      75ef           jne 0x4b40
0x00004b51      80fb2d         cmp bl, 0x2d
0x00004b54      7452           je 0x4ba8
0x00004b56      31c9           xor ecx, ecx
0x00004b58      4c89fe         mov rsi, r15
0x00004b5b      4889ef         mov rdi, rbp
0x00004b5e      e84dcaffff     call sym.imp.__strtoul_internal
0x00004b63      498b0f         mov rcx, qword [r15]
0x00004b66      4889c3         mov rbx, rax
0x00004b69      4839e9         cmp rcx, rbp
0x00004b6c      742a           je 0x4b98
0x00004b6e      418b0424       mov eax, dword [r12]
0x00004b72      85c0           test eax, eax
0x00004b74      7462           je 0x4bd8
0x00004b76      83f822         cmp eax, 0x22
0x00004b79      bd01000000     mov ebp, 1
0x00004b7e      7528           jne 0x4ba8
0x00004b80      4d85ed         test r13, r13
0x00004b83      7409           je 0x4b8e
0x00004b85      440fb621       movzx r12d, byte [rcx]
0x00004b89      4584e4         test r12b, r12b
0x00004b8c      7579           jne 0x4c07
0x00004b8e      49891e         mov qword [r14], rbx
0x00004b91      eb1a           jmp 0x4bad
0x00004b93      0f1f440000     nop dword [rax + rax]
0x00004b98      4d85ed         test r13, r13
0x00004b9b      48894c2408     mov qword [rsp + 8], rcx
0x00004ba0      753e           jne 0x4be0
0x00004ba2      660f1f440000   nop word [rax + rax]
0x00004ba8      bd04000000     mov ebp, 4
0x00004bad      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00004bb2      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004bbb      89e8           mov eax, ebp
0x00004bbd      0f858d020000   jne 0x4e50
0x00004bc3      4883c428       add rsp, 0x28
0x00004bc7      5b             pop rbx
0x00004bc8      5d             pop rbp
0x00004bc9      415c           pop r12
0x00004bcb      415d           pop r13
0x00004bcd      415e           pop r14
0x00004bcf      415f           pop r15
0x00004bd1      c3             ret
0x00004bd2      660f1f440000   nop word [rax + rax]
0x00004bd8      31ed           xor ebp, ebp
0x00004bda      eba4           jmp 0x4b80
0x00004bdc      0f1f4000       nop dword [rax]
0x00004be0      440fb66500     movzx r12d, byte [rbp]
0x00004be5      4584e4         test r12b, r12b
0x00004be8      74be           je 0x4ba8
0x00004bea      410fbef4       movsx esi, r12b
0x00004bee      4c89ef         mov rdi, r13
0x00004bf1      31ed           xor ebp, ebp
0x00004bf3      e868c9ffff     call sym.imp.strchr
0x00004bf8      4885c0         test rax, rax
0x00004bfb      bb01000000     mov ebx, 1
0x00004c00      488b4c2408     mov rcx, qword [rsp + 8]
0x00004c05      74a1           je 0x4ba8
0x00004c07      410fbef4       movsx esi, r12b
0x00004c0b      4c89ef         mov rdi, r13
0x00004c0e      48894c2408     mov qword [rsp + 8], rcx
0x00004c13      e848c9ffff     call sym.imp.strchr
0x00004c18      4885c0         test rax, rax
0x00004c1b      488b4c2408     mov rcx, qword [rsp + 8]
0x00004c20      0f84c6000000   je 0x4cec
0x00004c26      418d4424bb     lea eax, [r12 - 0x45]
0x00004c2b      3c2f           cmp al, 0x2f
0x00004c2d      7751           ja 0x4c80
0x00004c2f      48ba45893000.  movabs rdx, 0x814400308945
0x00004c39      480fa3c2       bt rdx, rax
0x00004c3d      7341           jae 0x4c80
0x00004c3f      be30000000     mov esi, 0x30                           ; '0'
0x00004c44      4c89ef         mov rdi, r13
0x00004c47      48894c2408     mov qword [rsp + 8], rcx
0x00004c4c      e80fc9ffff     call sym.imp.strchr
0x00004c51      4885c0         test rax, rax
0x00004c54      488b4c2408     mov rcx, qword [rsp + 8]
0x00004c59      7425           je 0x4c80
0x00004c5b      0fb64101       movzx eax, byte [rcx + 1]
0x00004c5f      3c44           cmp al, 0x44
0x00004c61      740c           je 0x4c6f
0x00004c63      3c69           cmp al, 0x69
0x00004c65      0f84cd010000   je 0x4e38
0x00004c6b      3c42           cmp al, 0x42
0x00004c6d      7511           jne 0x4c80
0x00004c6f      bf02000000     mov edi, 2
0x00004c74      bee8030000     mov esi, 0x3e8
0x00004c79      eb0f           jmp 0x4c8a
0x00004c7b      0f1f440000     nop dword [rax + rax]
0x00004c80      bf01000000     mov edi, 1
0x00004c85      be00040000     mov esi, 0x400
0x00004c8a      4183ec42       sub r12d, 0x42
0x00004c8e      4180fc35       cmp r12b, 0x35
0x00004c92      7758           ja 0x4cec
0x00004c94      488d15cd1200.  lea rdx, [0x00005f68]
0x00004c9b      450fb6e4       movzx r12d, r12b
0x00004c9f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004ca3      4801d0         add rax, rdx
0x00004ca6      ffe0           jmp rax
0x00004ca8      4889d8         mov rax, rbx
0x00004cab      48f7e6         mul rsi
0x00004cae      0f80ed010000   jo 0x4ea1
0x00004cb4      4531c0         xor r8d, r8d
0x00004cb7      48f7e6         mul rsi
0x00004cba      0f80d2010000   jo 0x4e92
0x00004cc0      4889c3         mov rbx, rax
0x00004cc3      4409c5         or ebp, r8d
0x00004cc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004cd0      4863ff         movsxd rdi, edi
0x00004cd3      89e8           mov eax, ebp
0x00004cd5      4801f9         add rcx, rdi
0x00004cd8      83c802         or eax, 2
0x00004cdb      49890f         mov qword [r15], rcx
0x00004cde      803900         cmp byte [rcx], 0
0x00004ce1      49891e         mov qword [r14], rbx
0x00004ce4      0f45e8         cmovne ebp, eax
0x00004ce7      e9c1feffff     jmp 0x4bad
0x00004cec      49891e         mov qword [r14], rbx
0x00004cef      83cd02         or ebp, 2
0x00004cf2      e9b6feffff     jmp 0x4bad
0x00004cf7      ba02000000     mov edx, 2
0x00004cfc      4889d0         mov rax, rdx
0x00004cff      48f7e3         mul rbx
0x00004d02      0f8096000000   jo 0x4d9e
0x00004d08      4801db         add rbx, rbx
0x00004d0b      ebc3           jmp 0x4cd0
0x00004d0d      ba00020000     mov edx, 0x200
0x00004d12      4889d0         mov rax, rdx
0x00004d15      48f7e3         mul rbx
0x00004d18      0f8080000000   jo 0x4d9e
0x00004d1e      48c1e309       shl rbx, 9
0x00004d22      ebac           jmp 0x4cd0
0x00004d24      41b807000000   mov r8d, 7
0x00004d2a      4531c9         xor r9d, r9d
0x00004d2d      0f1f00         nop dword [rax]
0x00004d30      4889d8         mov rax, rbx
0x00004d33      48f7e6         mul rsi
0x00004d36      4889c3         mov rbx, rax
0x00004d39      0f808f010000   jo 0x4ece
0x00004d3f      4183e801       sub r8d, 1
0x00004d43      75eb           jne 0x4d30
0x00004d45      4409cd         or ebp, r9d
0x00004d48      eb86           jmp 0x4cd0
0x00004d4a      41b808000000   mov r8d, 8
0x00004d50      4531c9         xor r9d, r9d
0x00004d53      0f1f440000     nop dword [rax + rax]
0x00004d58      4889d8         mov rax, rbx
0x00004d5b      48f7e6         mul rsi
0x00004d5e      4889c3         mov rbx, rax
0x00004d61      0f8049010000   jo 0x4eb0
0x00004d67      4183e801       sub r8d, 1
0x00004d6b      75eb           jne 0x4d58
0x00004d6d      ebd6           jmp 0x4d45
0x00004d6f      41b804000000   mov r8d, 4
0x00004d75      4531c9         xor r9d, r9d
0x00004d78      4889d8         mov rax, rbx
0x00004d7b      48f7e6         mul rsi
0x00004d7e      4889c3         mov rbx, rax
0x00004d81      0f80fc000000   jo 0x4e83
0x00004d87      4183e801       sub r8d, 1
0x00004d8b      75eb           jne 0x4d78
0x00004d8d      ebb6           jmp 0x4d45
0x00004d8f      4889d8         mov rax, rbx
0x00004d92      48f7e6         mul rsi
0x00004d95      4889c3         mov rbx, rax
0x00004d98      0f8132ffffff   jno 0x4cd0
0x00004d9e      bd01000000     mov ebp, 1
0x00004da3      4883cbff       or rbx, 0xffffffffffffffff
0x00004da7      e924ffffff     jmp 0x4cd0
0x00004dac      0f1f4000       nop dword [rax]
0x00004db0      41b805000000   mov r8d, 5
0x00004db6      4531c9         xor r9d, r9d
0x00004db9      4889d8         mov rax, rbx
0x00004dbc      48f7e6         mul rsi
0x00004dbf      4889c3         mov rbx, rax
0x00004dc2      0f80f7000000   jo 0x4ebf
0x00004dc8      4183e801       sub r8d, 1
0x00004dcc      75eb           jne 0x4db9
0x00004dce      e972ffffff     jmp 0x4d45
0x00004dd3      41b806000000   mov r8d, 6
0x00004dd9      4531c9         xor r9d, r9d
0x00004ddc      4889d8         mov rax, rbx
0x00004ddf      48f7e6         mul rsi
0x00004de2      4889c3         mov rbx, rax
0x00004de5      0f8089000000   jo 0x4e74
0x00004deb      4183e801       sub r8d, 1
0x00004def      75eb           jne 0x4ddc
0x00004df1      e94fffffff     jmp 0x4d45
0x00004df6      ba00040000     mov edx, 0x400
0x00004dfb      4889d0         mov rax, rdx
0x00004dfe      48f7e3         mul rbx
0x00004e01      709b           jo 0x4d9e
0x00004e03      48c1e30a       shl rbx, 0xa
0x00004e07      e9c4feffff     jmp 0x4cd0
0x00004e0c      4889d8         mov rax, rbx
0x00004e0f      48f7e6         mul rsi
0x00004e12      0f80c5000000   jo 0x4edd
0x00004e18      4531c0         xor r8d, r8d
0x00004e1b      48f7e6         mul rsi
0x00004e1e      0f8193feffff   jno 0x4cb7
0x00004e24      41b801000000   mov r8d, 1
0x00004e2a      4883c8ff       or rax, 0xffffffffffffffff
0x00004e2e      e984feffff     jmp 0x4cb7
0x00004e33      0f1f440000     nop dword [rax + rax]
0x00004e38      31ff           xor edi, edi
0x00004e3a      80790242       cmp byte [rcx + 2], 0x42
0x00004e3e      be00040000     mov esi, 0x400
0x00004e43      400f94c7       sete dil
0x00004e47      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00004e4b      e93afeffff     jmp 0x4c8a
0x00004e50      e8dbc6ffff     call sym.imp.__stack_chk_fail
0x00004e55      488d0de41100.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x6040 ; "xstrtoumax"
0x00004e5c      488d35bd1000.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x5f20 ; "../coreutils-8.31/lib/xstrtol.c"
0x00004e63      488d3dd61000.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x5f40 ; "0 <= strtol_base && strtol_base <= 36"
0x00004e6a      ba54000000     mov edx, 0x54                           ; 'T'
0x00004e6f      e82cc7ffff     call sym.imp.__assert_fail
0x00004e74      41b901000000   mov r9d, 1
0x00004e7a      4883cbff       or rbx, 0xffffffffffffffff
0x00004e7e      e968ffffff     jmp 0x4deb
0x00004e83      41b901000000   mov r9d, 1
0x00004e89      4883cbff       or rbx, 0xffffffffffffffff
0x00004e8d      e9f5feffff     jmp 0x4d87
0x00004e92      41b801000000   mov r8d, 1
0x00004e98      4883cbff       or rbx, 0xffffffffffffffff
0x00004e9c      e922feffff     jmp 0x4cc3
0x00004ea1      4883c8ff       or rax, 0xffffffffffffffff
0x00004ea5      41b801000000   mov r8d, 1
0x00004eab      e907feffff     jmp 0x4cb7
0x00004eb0      41b901000000   mov r9d, 1
0x00004eb6      4883cbff       or rbx, 0xffffffffffffffff
0x00004eba      e9a8feffff     jmp 0x4d67
0x00004ebf      41b901000000   mov r9d, 1
0x00004ec5      4883cbff       or rbx, 0xffffffffffffffff
0x00004ec9      e9fafeffff     jmp 0x4dc8
0x00004ece      41b901000000   mov r9d, 1
0x00004ed4      4883cbff       or rbx, 0xffffffffffffffff
0x00004ed8      e962feffff     jmp 0x4d3f
0x00004edd      41b801000000   mov r8d, 1
0x00004ee3      4883c8ff       or rax, 0xffffffffffffffff
0x00004ee7      e92fffffff     jmp 0x4e1b
0x00004eec      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00004ef0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00004ef2      55             push rbp
0x00004ef3      53             push rbx
0x00004ef4      4889fb         mov rbx, rdi
0x00004ef7      e824c7ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00004efc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00004efe      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00004f01      7854           js 0x4f57                               ; ../coreutils-8.31/lib/fclose.c:66
0x00004f03      e858c7ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00004f08      85c0           test eax, eax
0x00004f0a      752c           jne 0x4f38
0x00004f0c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00004f0f      e85c000000     call sym.rpl_fflush
0x00004f14      85c0           test eax, eax
0x00004f16      743c           je 0x4f54
0x00004f18      e873c5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00004f1d      448b20         mov r12d, dword [rax]
0x00004f20      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004f23      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00004f26      e8b5c5ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00004f2b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00004f2e      7530           jne 0x4f60
0x00004f30      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004f31      5d             pop rbp
0x00004f32      415c           pop r12
0x00004f34      c3             ret
0x00004f35      0f1f00         nop dword [rax]
0x00004f38      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00004f3b      e8e0c6ffff     call sym.imp.fileno
0x00004f40      31f6           xor esi, esi
0x00004f42      ba01000000     mov edx, 1
0x00004f47      89c7           mov edi, eax
0x00004f49      e842c6ffff     call sym.imp.lseek
0x00004f4e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004f52      75b8           jne 0x4f0c
0x00004f54      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004f57      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004f58      5d             pop rbp
0x00004f59      415c           pop r12
0x00004f5b      e980c5ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00004f60      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00004f64      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00004f69      ebc5           jmp 0x4f30
0x00004f6b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00004f70      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00004f73      53             push rbx
0x00004f74      4889fb         mov rbx, rdi
0x00004f77      7411           je 0x4f8a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00004f79      e8e2c6ffff     call sym.imp.__freading
0x00004f7e      85c0           test eax, eax
0x00004f80      7408           je 0x4f8a
0x00004f82      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00004f88      750e           jne 0x4f98
0x00004f8a      4889df         mov rdi, rbx
0x00004f8d      5b             pop rbx
0x00004f8e      e9adc6ffff     jmp sym.imp.fflush
0x00004f93      0f1f440000     nop dword [rax + rax]
0x00004f98      4889df         mov rdi, rbx
0x00004f9b      ba01000000     mov edx, 1
0x00004fa0      31f6           xor esi, esi
0x00004fa2      e809000000     call sym.rpl_fseeko
0x00004fa7      4889df         mov rdi, rbx
0x00004faa      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00004fab      e990c6ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00004fb0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00004fb4      48394710       cmp qword [rdi + 0x10], rax
0x00004fb8      7406           je 0x4fc0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00004fba      e911c7ffff     jmp sym.imp.fseeko
0x00004fbf      90             nop
0x00004fc0      488b4720       mov rax, qword [rdi + 0x20]
0x00004fc4      48394728       cmp qword [rdi + 0x28], rax
0x00004fc8      75f0           jne 0x4fba                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00004fca      48837f4800     cmp qword [rdi + 0x48], 0
0x00004fcf      75e9           jne 0x4fba                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00004fd1      4154           push r12
0x00004fd3      55             push rbp
0x00004fd4      4189d4         mov r12d, edx
0x00004fd7      53             push rbx
0x00004fd8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00004fdb      4889fb         mov rbx, rdi
0x00004fde      e83dc6ffff     call sym.imp.fileno
0x00004fe3      4489e2         mov edx, r12d
0x00004fe6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00004fe9      89c7           mov edi, eax
0x00004feb      e8a0c5ffff     call sym.imp.lseek
0x00004ff0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004ff4      740c           je 0x5002
0x00004ff6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00004ff9      488983900000.  mov qword [rbx + 0x90], rax
0x00005000      31c0           xor eax, eax
0x00005002      5b             pop rbx
0x00005003      5d             pop rbp
0x00005004      415c           pop r12
0x00005006      c3             ret
0x00005007      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005010      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005012      4154           push r12
0x00005014      4989f5         mov r13, rsi
0x00005017      55             push rbp
0x00005018      53             push rbx
0x00005019      4889fb         mov rbx, rdi
0x0000501c      4989d4         mov r12, rdx
0x0000501f      4883ec18       sub rsp, 0x18
0x00005023      64488b042528.  mov rax, qword fs:[0x28]
0x0000502c      4889442408     mov qword [rsp + 8], rax
0x00005031      31c0           xor eax, eax
0x00005033      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005038      4885ff         test rdi, rdi
0x0000503b      480f44d8       cmove rbx, rax
0x0000503f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005042      e809c5ffff     call sym.imp.mbrtowc
0x00005047      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000504b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000504e      7620           jbe 0x5070                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005050      4d85e4         test r12, r12
0x00005053      741b           je 0x5070
0x00005055      31ff           xor edi, edi
0x00005057      e8c4000000     call sym.hard_locale
0x0000505c      84c0           test al, al
0x0000505e      7510           jne 0x5070
0x00005060      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005065      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000506a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000506c      0f1f4000       nop dword [rax]
0x00005070      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005075      644833142528.  xor rdx, qword fs:[0x28]
0x0000507e      4889e8         mov rax, rbp
0x00005081      750b           jne 0x508e
0x00005083      4883c418       add rsp, 0x18
0x00005087      5b             pop rbx
0x00005088      5d             pop rbp
0x00005089      415c           pop r12
0x0000508b      415d           pop r13
0x0000508d      c3             ret
0x0000508e      e89dc4ffff     call sym.imp.__stack_chk_fail
0x00005093      662e0f1f8400.  nop word cs:[rax + rax]
0x0000509d      0f1f00         nop dword [rax]
;-- close_stream:
0x000050a0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000050a2      55             push rbp
0x000050a3      4889fd         mov rbp, rdi
0x000050a6      53             push rbx
0x000050a7      e814c4ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000050ac      8b5d00         mov ebx, dword [rbp]
0x000050af      4889ef         mov rdi, rbp
0x000050b2      4989c4         mov r12, rax
0x000050b5      e836feffff     call sym.rpl_fclose
0x000050ba      83e320         and ebx, 0x20                           ; "@"
0x000050bd      85db           test ebx, ebx
0x000050bf      7517           jne 0x50d8
0x000050c1      85c0           test eax, eax
0x000050c3      740a           je 0x50cf                               ; stdio.h:-186
0x000050c5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000050c8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000050cd      7439           je 0x5108
0x000050cf      5b             pop rbx
0x000050d0      5d             pop rbp
0x000050d1      415c           pop r12
0x000050d3      c3             ret
0x000050d4      0f1f4000       nop dword [rax]
0x000050d8      85c0           test eax, eax
0x000050da      751c           jne 0x50f8
0x000050dc      e8afc3ffff     call sym.imp.__errno_location
0x000050e1      c70000000000   mov dword [rax], 0
0x000050e7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000050ec      5b             pop rbx
0x000050ed      5d             pop rbp
0x000050ee      415c           pop r12
0x000050f0      c3             ret
0x000050f1      0f1f80000000.  nop dword [rax]
0x000050f8      5b             pop rbx
0x000050f9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000050fe      5d             pop rbp                                 ; stdio.h:-186
0x000050ff      415c           pop r12
0x00005101      c3             ret
0x00005102      660f1f440000   nop word [rax + rax]
0x00005108      e883c3ffff     call sym.imp.__errno_location
0x0000510d      833809         cmp dword [rax], 9
0x00005110      5b             pop rbx
0x00005111      5d             pop rbp
0x00005112      415c           pop r12                                 ; stdio.h:-178
0x00005114      0f95c0         setne al
0x00005117      0fb6c0         movzx eax, al
0x0000511a      f7d8           neg eax
0x0000511c      c3             ret
0x0000511d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005120      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005124      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005126      e865c5ffff     call sym.imp.setlocale
0x0000512b      4889c2         mov rdx, rax
0x0000512e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005133      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005136      741d           je 0x5155
0x00005138      488d3d0c0f00.  lea rdi, [0x0000604b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000513f      b902000000     mov ecx, 2
0x00005144      4889d6         mov rsi, rdx
0x00005147      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005149      0f97c1         seta cl
0x0000514c      80d900         sbb cl, 0
0x0000514f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005151      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005153      750b           jne 0x5160
0x00005155      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005159      c3             ret
0x0000515a      660f1f440000   nop word [rax + rax]
0x00005160      488d3de60e00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x604d ; "POSIX"
0x00005167      b906000000     mov ecx, 6
0x0000516c      4889d6         mov rsi, rdx
0x0000516f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005171      0f97c0         seta al
0x00005174      1c00           sbb al, 0
0x00005176      84c0           test al, al
0x00005178      0f95c0         setne al
0x0000517b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000517f      c3             ret
;-- locale_charset:
0x00005180      4883ec08       sub rsp, 8
0x00005184      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005189      e8c2c4ffff     call sym.imp.nl_langinfo
0x0000518e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005191      741d           je 0x51b0
0x00005193      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005196      488d15b60e00.  lea rdx, str.ASCII                      ; 0x6053 ; "ASCII"
0x0000519d      480f44c2       cmove rax, rdx
0x000051a1      4883c408       add rsp, 8
0x000051a5      c3             ret
0x000051a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000051b0      488d059c0e00.  lea rax, str.ASCII                      ; 0x6053 ; "ASCII"
0x000051b7      4883c408       add rsp, 8
0x000051bb      c3             ret
0x000051bc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x000051c0      4157           push r15
0x000051c2      4156           push r14
0x000051c4      4989d7         mov r15, rdx
0x000051c7      4155           push r13
0x000051c9      4154           push r12
0x000051cb      4c8d253e2920.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b10
0x000051d2      55             push rbp
0x000051d3      488d2d3e2920.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b18
0x000051da      53             push rbx
0x000051db      4189fd         mov r13d, edi
0x000051de      4989f6         mov r14, rsi
0x000051e1      4c29e5         sub rbp, r12
0x000051e4      4883ec08       sub rsp, 8
0x000051e8      48c1fd03       sar rbp, 3
0x000051ec      e83fc2ffff     call sym._init
0x000051f1      4885ed         test rbp, rbp
0x000051f4      7420           je 0x5216
0x000051f6      31db           xor ebx, ebx
0x000051f8      0f1f84000000.  nop dword [rax + rax]
0x00005200      4c89fa         mov rdx, r15
0x00005203      4c89f6         mov rsi, r14
0x00005206      4489ef         mov edi, r13d
0x00005209      41ff14dc       call qword [r12 + rbx*8]
0x0000520d      4883c301       add rbx, 1
0x00005211      4839dd         cmp rbp, rbx
0x00005214      75ea           jne 0x5200
0x00005216      4883c408       add rsp, 8
0x0000521a      5b             pop rbx
0x0000521b      5d             pop rbp
0x0000521c      415c           pop r12
0x0000521e      415d           pop r13
0x00005220      415e           pop r14
0x00005222      415f           pop r15
0x00005224      c3             ret
0x00005225      90             nop
0x00005226      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005230      f3c3           ret
0x00005232      662e0f1f8400.  nop word cs:[rax + rax]
0x0000523c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005240      488b15c12d20.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00005247      31f6           xor esi, esi
0x00005249      e9a2c4ffff     jmp sym.imp.__cxa_atexit
0x0000524e      0000           add byte [rax], al
