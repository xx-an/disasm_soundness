;-- section..plt:
;-- .plt:
0x000013d0      ff357a6a2000   push qword [0x00207e50]                 ; [12] -r-x section size 768 named .plt
0x000013d6      ff257c6a2000   jmp qword [0x00207e58]                  ; [0x207e58:8]=0
0x000013dc      0f1f4000       nop dword [rax]
;-- imp.free:
0x000013e0      ff257a6a2000   jmp qword [reloc.free]                  ; [0x207e60:8]=0x13e6
0x000013e6      6800000000     push 0
0x000013eb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000013f0      ff25726a2000   jmp qword [reloc.abort]                 ; [0x207e68:8]=0x13f6
0x000013f6      6801000000     push 1
0x000013fb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001400      ff256a6a2000   jmp qword [reloc.__errno_location]      ; [0x207e70:8]=0x1406
0x00001406      6802000000     push 2
0x0000140b      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001410      ff25626a2000   jmp qword [reloc.strncmp]               ; [0x207e78:8]=0x1416
0x00001416      6803000000     push 3
0x0000141b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001420      ff255a6a2000   jmp qword [reloc._exit]                 ; [0x207e80:8]=0x1426 ; "&\x14"
0x00001426      6804000000     push 4
0x0000142b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001430      ff25526a2000   jmp qword [reloc.__fpending]            ; [0x207e88:8]=0x1436 ; "6\x14"
0x00001436      6805000000     push 5
0x0000143b      e990ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001440      ff254a6a2000   jmp qword [reloc.textdomain]            ; [0x207e90:8]=0x1446 ; "F\x14"
0x00001446      6806000000     push 6
0x0000144b      e980ffffff     jmp sym..plt
;-- imp.__strtol_internal:
0x00001450      ff25426a2000   jmp qword [reloc.__strtol_internal]     ; [0x207e98:8]=0x1456 ; "V\x14"
0x00001456      6807000000     push 7
0x0000145b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001460      ff253a6a2000   jmp qword [reloc.fclose]                ; [0x207ea0:8]=0x1466 ; "f\x14"
0x00001466      6808000000     push 8
0x0000146b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001470      ff25326a2000   jmp qword [reloc.bindtextdomain]        ; [0x207ea8:8]=0x1476 ; "v\x14"
0x00001476      6809000000     push 9
0x0000147b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001480      ff252a6a2000   jmp qword [reloc.dcgettext]             ; [0x207eb0:8]=0x1486
0x00001486      680a000000     push 0xa
0x0000148b      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001490      ff25226a2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207eb8:8]=0x1496
0x00001496      680b000000     push 0xb
0x0000149b      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x000014a0      ff251a6a2000   jmp qword [reloc.strlen]                ; [0x207ec0:8]=0x14a6
0x000014a6      680c000000     push 0xc
0x000014ab      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000014b0      ff25126a2000   jmp qword [reloc.__stack_chk_fail]      ; [0x207ec8:8]=0x14b6
0x000014b6      680d000000     push 0xd
0x000014bb      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000014c0      ff250a6a2000   jmp qword [reloc.getopt_long]           ; [0x207ed0:8]=0x14c6
0x000014c6      680e000000     push 0xe
0x000014cb      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x000014d0      ff25026a2000   jmp qword [reloc.mbrtowc]               ; [0x207ed8:8]=0x14d6
0x000014d6      680f000000     push 0xf
0x000014db      e9f0feffff     jmp sym..plt
;-- imp.strchr:
0x000014e0      ff25fa692000   jmp qword [reloc.strchr]                ; [0x207ee0:8]=0x14e6
0x000014e6      6810000000     push 0x10
0x000014eb      e9e0feffff     jmp sym..plt
;-- imp.strrchr:
0x000014f0      ff25f2692000   jmp qword [reloc.strrchr]               ; [0x207ee8:8]=0x14f6
0x000014f6      6811000000     push 0x11
0x000014fb      e9d0feffff     jmp sym..plt
;-- imp.ftruncate:
0x00001500      ff25ea692000   jmp qword [reloc.ftruncate]             ; [0x207ef0:8]=0x1506
0x00001506      6812000000     push 0x12
0x0000150b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001510      ff25e2692000   jmp qword [reloc.lseek]                 ; [0x207ef8:8]=0x1516
0x00001516      6813000000     push 0x13
0x0000151b      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001520      ff25da692000   jmp qword [reloc.__assert_fail]         ; [0x207f00:8]=0x1526 ; "&\x15"
0x00001526      6814000000     push 0x14
0x0000152b      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001530      ff25d2692000   jmp qword [reloc.memset]                ; [0x207f08:8]=0x1536 ; "6\x15"
0x00001536      6815000000     push 0x15
0x0000153b      e990feffff     jmp sym..plt
;-- imp.close:
0x00001540      ff25ca692000   jmp qword [reloc.close]                 ; [0x207f10:8]=0x1546 ; "F\x15"
0x00001546      6816000000     push 0x16
0x0000154b      e980feffff     jmp sym..plt
;-- imp.memcmp:
0x00001550      ff25c2692000   jmp qword [reloc.memcmp]                ; [0x207f18:8]=0x1556 ; "V\x15"
0x00001556      6817000000     push 0x17
0x0000155b      e970feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001560      ff25ba692000   jmp qword [reloc.fputs_unlocked]        ; [0x207f20:8]=0x1566 ; "f\x15"
0x00001566      6818000000     push 0x18
0x0000156b      e960feffff     jmp sym..plt
;-- imp.calloc:
0x00001570      ff25b2692000   jmp qword [reloc.calloc]                ; [0x207f28:8]=0x1576 ; "v\x15"
0x00001576      6819000000     push 0x19
0x0000157b      e950feffff     jmp sym..plt
;-- imp.memcpy:
0x00001580      ff25aa692000   jmp qword [reloc.memcpy]                ; [0x207f30:8]=0x1586
0x00001586      681a000000     push 0x1a
0x0000158b      e940feffff     jmp sym..plt
;-- imp.fileno:
0x00001590      ff25a2692000   jmp qword [reloc.fileno]                ; [0x207f38:8]=0x1596
0x00001596      681b000000     push 0x1b
0x0000159b      e930feffff     jmp sym..plt
;-- imp.__xstat:
0x000015a0      ff259a692000   jmp qword [reloc.__xstat]               ; [0x207f40:8]=0x15a6
0x000015a6      681c000000     push 0x1c
0x000015ab      e920feffff     jmp sym..plt
;-- imp.malloc:
0x000015b0      ff2592692000   jmp qword [reloc.malloc]                ; [0x207f48:8]=0x15b6
0x000015b6      681d000000     push 0x1d
0x000015bb      e910feffff     jmp sym..plt
;-- imp.fflush:
0x000015c0      ff258a692000   jmp qword [reloc.fflush]                ; [0x207f50:8]=0x15c6
0x000015c6      681e000000     push 0x1e
0x000015cb      e900feffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000015d0      ff2582692000   jmp qword [reloc.nl_langinfo]           ; [0x207f58:8]=0x15d6
0x000015d6      681f000000     push 0x1f
0x000015db      e9f0fdffff     jmp sym..plt
;-- imp.__fxstat:
0x000015e0      ff257a692000   jmp qword [reloc.__fxstat]              ; [0x207f60:8]=0x15e6
0x000015e6      6820000000     push 0x20                               ; "@"
0x000015eb      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x000015f0      ff2572692000   jmp qword [reloc.__freading]            ; [0x207f68:8]=0x15f6
0x000015f6      6821000000     push 0x21                               ; '!'
0x000015fb      e9d0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001600      ff256a692000   jmp qword [reloc.realloc]               ; [0x207f70:8]=0x1606
0x00001606      6822000000     push 0x22                               ; '"'
0x0000160b      e9c0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001610      ff2562692000   jmp qword [reloc.setlocale]             ; [0x207f78:8]=0x1616
0x00001616      6823000000     push 0x23                               ; '#'
0x0000161b      e9b0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001620      ff255a692000   jmp qword [reloc.__printf_chk]          ; [0x207f80:8]=0x1626 ; "&\x16"
0x00001626      6824000000     push 0x24                               ; '$'
0x0000162b      e9a0fdffff     jmp sym..plt
;-- imp.error:
0x00001630      ff2552692000   jmp qword [reloc.error]                 ; [0x207f88:8]=0x1636 ; "6\x16"
0x00001636      6825000000     push 0x25                               ; '%'
0x0000163b      e990fdffff     jmp sym..plt
;-- imp.open:
0x00001640      ff254a692000   jmp qword [reloc.open]                  ; [0x207f90:8]=0x1646 ; "F\x16"
0x00001646      6826000000     push 0x26                               ; '&'
0x0000164b      e980fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001650      ff2542692000   jmp qword [reloc.fseeko]                ; [0x207f98:8]=0x1656 ; "V\x16"
0x00001656      6827000000     push 0x27                               ; '''
0x0000165b      e970fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001660      ff253a692000   jmp qword [reloc.__cxa_atexit]          ; [0x207fa0:8]=0x1666 ; "f\x16"
0x00001666      6828000000     push 0x28                               ; '('
0x0000166b      e960fdffff     jmp sym..plt
;-- imp.exit:
0x00001670      ff2532692000   jmp qword [reloc.exit]                  ; [0x207fa8:8]=0x1676 ; "v\x16"
0x00001676      6829000000     push 0x29                               ; ')'
0x0000167b      e950fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001680      ff252a692000   jmp qword [reloc.fwrite]                ; [0x207fb0:8]=0x1686
0x00001686      682a000000     push 0x2a                               ; '*'
0x0000168b      e940fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001690      ff2522692000   jmp qword [reloc.__fprintf_chk]         ; [0x207fb8:8]=0x1696
0x00001696      682b000000     push 0x2b                               ; '+'
0x0000169b      e930fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000016a0      ff251a692000   jmp qword [reloc.mbsinit]               ; [0x207fc0:8]=0x16a6
0x000016a6      682c000000     push 0x2c                               ; ','
0x000016ab      e920fdffff     jmp sym..plt
;-- imp.iswprint:
0x000016b0      ff2512692000   jmp qword [reloc.iswprint]              ; [0x207fc8:8]=0x16b6
0x000016b6      682d000000     push 0x2d                               ; '-'
0x000016bb      e910fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000016c0      ff250a692000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fd0:8]=0x16c6
0x000016c6      682e000000     push 0x2e                               ; '.'
0x000016cb      e900fdffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000016d0      .qword 0x90660020692225ff                              ; [13] -r-x section size 8 named .plt.got
0x000016d8      0000           add byte [rax], al
0x000016da      0000           add byte [rax], al
0x000016dc      0000           add byte [rax], al
0x000016de      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000016e0      4157           push r15                                ; [14] -r-x section size 16686 named .text
0x000016e2      4156           push r14
0x000016e4      4155           push r13
0x000016e6      4154           push r12
0x000016e8      4189fd         mov r13d, edi
0x000016eb      55             push rbp
0x000016ec      53             push rbx
0x000016ed      4889f5         mov rbp, rsi
0x000016f0      31db           xor ebx, ebx
0x000016f2      4531e4         xor r12d, r12d
0x000016f5      4881ecd80000.  sub rsp, 0xd8
0x000016fc      488b3e         mov rdi, qword [rsi]
0x000016ff      64488b042528.  mov rax, qword fs:[0x28]
0x00001708      48898424c800.  mov qword [rsp + 0xc8], rax
0x00001710      31c0           xor eax, eax
0x00001712      e8a90f0000     call sym.set_program_name
0x00001717      488d352b4100.  lea rsi, [0x00005849]
0x0000171e      bf06000000     mov edi, 6
0x00001723      e8e8feffff     call sym.imp.setlocale
0x00001728      488d35be4100.  lea rsi, str.usr_local_share_locale     ; 0x58ed ; "/usr/local/share/locale"
0x0000172f      488d3d8e4100.  lea rdi, [0x000058c4]                   ; "coreutils"
0x00001736      e835fdffff     call sym.imp.bindtextdomain
0x0000173b      488d3d824100.  lea rdi, [0x000058c4]                   ; "coreutils"
0x00001742      e8f9fcffff     call sym.imp.textdomain
0x00001747      488d3dc20e00.  lea rdi, sym.close_stdout               ; 0x2610 ; "USH\x83\xec\bH\x8b=kZ "
0x0000174e      e8ad400000     call sym.atexit
0x00001753      488d0dc66320.  lea rcx, obj.longopts                   ; 0x207b20
0x0000175a      488d15e04100.  lea rdx, str.cor:s:                     ; 0x5941 ; "cor:s:"
0x00001761      4531c0         xor r8d, r8d
0x00001764      4889ee         mov rsi, rbp
0x00001767      4489ef         mov edi, r13d
0x0000176a      e851fdffff     call sym.imp.getopt_long
0x0000176f      83f8ff         cmp eax, 0xffffffff
0x00001772      0f8436020000   je 0x19ae
0x00001778      83f863         cmp eax, 0x63
0x0000177b      7473           je 0x17f0
0x0000177d      7e31           jle 0x17b0
0x0000177f      83f872         cmp eax, 0x72
0x00001782      0f8470010000   je 0x18f8
0x00001788      83f873         cmp eax, 0x73
0x0000178b      7473           je 0x1800
0x0000178d      83f86f         cmp eax, 0x6f
0x00001790      740e           je 0x17a0
0x00001792      bf01000000     mov edi, 1
0x00001797      e8340a0000     call sym.usage
0x0000179c      0f1f4000       nop dword [rax]
0x000017a0      c60531692000.  mov byte [obj.block_mode], 1            ; [0x2080d8:1]=0
0x000017a7      ebaa           jmp 0x1753
0x000017a9      0f1f80000000.  nop dword [rax]
0x000017b0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x000017b5      0f8542080000   jne 0x1ffd
0x000017bb      488b3dc66820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000017c2      488b0d476820.  mov rcx, qword [obj.Version]            ; [0x208010:8]=0x6093 str.8.31
0x000017c9      4c8d05634100.  lea r8, str.Padraig_Brady               ; 0x5933 ; "Padraig Brady"
0x000017d0      488d15e94000.  lea rdx, str.GNU_coreutils              ; 0x58c0 ; "GNU coreutils"
0x000017d7      488d35464000.  lea rsi, str.truncate                   ; 0x5824 ; "truncate"
0x000017de      4531c9         xor r9d, r9d
0x000017e1      31c0           xor eax, eax
0x000017e3      e8c8300000     call sym.version_etc
0x000017e8      31ff           xor edi, edi
0x000017ea      e881feffff     call sym.imp.exit
0x000017ef      90             nop
0x000017f0      c605e2682000.  mov byte [obj.no_create], 1             ; [0x2080d9:1]=0
0x000017f7      e957ffffff     jmp 0x1753
0x000017fc      0f1f4000       nop dword [rax]
0x00001800      e8bbfeffff     call sym.imp.__ctype_b_loc
0x00001805      488b08         mov rcx, qword [rax]
0x00001808      488b05896820.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x0000180f      eb0e           jmp 0x181f
0x00001811      0f1f80000000.  nop dword [rax]
0x00001818      488905796820.  mov qword [obj.optarg], rax             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x0000181f      0fb630         movzx esi, byte [rax]
0x00001822      4889c7         mov rdi, rax
0x00001825      4883c001       add rax, 1
0x00001829      f644710120     test byte [rcx + rsi*2 + 1], 0x20
0x0000182e      75e8           jne 0x1818
0x00001830      4080fe2f       cmp sil, 0x2f
0x00001834      0f844a010000   je 0x1984
0x0000183a      0f8ecb000000   jle 0x190b
0x00001840      4080fe3c       cmp sil, 0x3c
0x00001844      0f844f010000   je 0x1999
0x0000184a      4080fe3e       cmp sil, 0x3e
0x0000184e      7510           jne 0x1860
0x00001850      4883c701       add rdi, 1
0x00001854      bb02000000     mov ebx, 2
0x00001859      48893d386820.  mov qword [obj.optarg], rdi             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x00001860      488b05316820.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x00001867      eb0e           jmp 0x1877
0x00001869      0f1f80000000.  nop dword [rax]
0x00001870      488905216820.  mov qword [obj.optarg], rax             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x00001877      0fb630         movzx esi, byte [rax]
0x0000187a      4883c001       add rax, 1
0x0000187e      f644710120     test byte [rcx + rsi*2 + 1], 0x20
0x00001883      4889f2         mov rdx, rsi
0x00001886      75e8           jne 0x1870
0x00001888      83ea2b         sub edx, 0x2b
0x0000188b      81e2fd000000   and edx, 0xfd
0x00001891      ba05000000     mov edx, 5
0x00001896      0f858e000000   jne 0x192a
0x0000189c      85db           test ebx, ebx
0x0000189e      0f8509080000   jne 0x20ad
0x000018a4      488d355a4000.  lea rsi, str.Invalid_number             ; 0x5905 ; "Invalid number"
0x000018ab      31ff           xor edi, edi
0x000018ad      bb01000000     mov ebx, 1
0x000018b2      41bc01000000   mov r12d, 1
0x000018b8      e8c3fbffff     call sym.imp.dcgettext
0x000018bd      488b3dd46720.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x000018c4      488d0d494000.  lea rcx, str.EgGkKmMPtTYZ0              ; 0x5914 ; "EgGkKmMPtTYZ0"
0x000018cb      4989c0         mov r8, rax
0x000018ce      4531c9         xor r9d, r9d
0x000018d1      48baffffffff.  movabs rdx, 0x7fffffffffffffff          ; 9223372036854775807
0x000018db      48be00000000.  movabs rsi, 0x8000000000000000
0x000018e5      e8d6340000     call sym.xdectoimax
0x000018ea      4989c7         mov r15, rax
0x000018ed      e961feffff     jmp 0x1753
0x000018f2      660f1f440000   nop word [rax + rax]
0x000018f8      488b05996720.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x000018ff      488905ca6720.  mov qword [obj.ref_file], rax           ; [0x2080d0:8]=0
0x00001906      e948feffff     jmp 0x1753
0x0000190b      4080fe25       cmp sil, 0x25
0x0000190f      0f854bffffff   jne 0x1860
0x00001915      4883c701       add rdi, 1
0x00001919      bb05000000     mov ebx, 5
0x0000191e      48893d736720.  mov qword [obj.optarg], rdi             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x00001925      e936ffffff     jmp 0x1860
0x0000192a      488d35d43f00.  lea rsi, str.Invalid_number             ; 0x5905 ; "Invalid number"
0x00001931      31ff           xor edi, edi
0x00001933      e848fbffff     call sym.imp.dcgettext
0x00001938      488b3d596720.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x0000193f      488d0dce3f00.  lea rcx, str.EgGkKmMPtTYZ0              ; 0x5914 ; "EgGkKmMPtTYZ0"
0x00001946      4531c9         xor r9d, r9d
0x00001949      4989c0         mov r8, rax
0x0000194c      48baffffffff.  movabs rdx, 0x7fffffffffffffff          ; 9223372036854775807
0x00001956      48be00000000.  movabs rsi, 0x8000000000000000
0x00001960      e85b340000     call sym.xdectoimax
0x00001965      4989c7         mov r15, rax
0x00001968      8d43fc         lea eax, [rbx - 4]
0x0000196b      83f801         cmp eax, 1
0x0000196e      7709           ja 0x1979
0x00001970      4d85ff         test r15, r15
0x00001973      0f84d1060000   je 0x204a
0x00001979      41bc01000000   mov r12d, 1
0x0000197f      e9cffdffff     jmp 0x1753
0x00001984      4883c701       add rdi, 1
0x00001988      bb04000000     mov ebx, 4
0x0000198d      48893d046720.  mov qword [obj.optarg], rdi             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x00001994      e9c7feffff     jmp 0x1860
0x00001999      4883c701       add rdi, 1
0x0000199d      bb03000000     mov ebx, 3
0x000019a2      48893def6620.  mov qword [obj.optarg], rdi             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x000019a9      e9b2feffff     jmp 0x1860
0x000019ae      486315db6620.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x000019b5      4c8b35146720.  mov r14, qword [obj.ref_file]           ; [0x2080d0:8]=0
0x000019bc      4129d5         sub r13d, edx
0x000019bf      4d85f6         test r14, r14
0x000019c2      488d6cd500     lea rbp, [rbp + rdx*8]
0x000019c7      0f8447050000   je 0x1f14
0x000019cd      85db           test ebx, ebx
0x000019cf      7556           jne 0x1a27
0x000019d1      4584e4         test r12b, r12b
0x000019d4      7451           je 0x1a27
0x000019d6      488d356b3f00.  lea rsi, str.reference                  ; 0x5948 ; "--reference"
0x000019dd      bf01000000     mov edi, 1
0x000019e2      e8c9290000     call sym.quote_n
0x000019e7      488d35663f00.  lea rsi, str.size                       ; 0x5954 ; "--size"
0x000019ee      31ff           xor edi, edi
0x000019f0      4889c5         mov rbp, rax
0x000019f3      e8b8290000     call sym.quote_n
0x000019f8      488d35794500.  lea rsi, str.you_must_specify_a_relative__s_with__s ; 0x5f78 ; "you must specify a relative %s with %s"
0x000019ff      4889c3         mov rbx, rax
0x00001a02      ba05000000     mov edx, 5
0x00001a07      31ff           xor edi, edi
0x00001a09      e872faffff     call sym.imp.dcgettext
0x00001a0e      4989e8         mov r8, rbp
0x00001a11      4889c2         mov rdx, rax
0x00001a14      4889d9         mov rcx, rbx
0x00001a17      31f6           xor esi, esi
0x00001a19      31ff           xor edi, edi
0x00001a1b      31c0           xor eax, eax
0x00001a1d      e80efcffff     call sym.imp.error
0x00001a22      e96bfdffff     jmp 0x1792
0x00001a27      803daa662000.  cmp byte [obj.block_mode], 1            ; [0x2080d8:1]=0
0x00001a2e      7538           jne 0x1a68
0x00001a30      4584e4         test r12b, r12b
0x00001a33      7533           jne 0x1a68
0x00001a35      488d35183f00.  lea rsi, str.size                       ; 0x5954 ; "--size"
0x00001a3c      bf01000000     mov edi, 1
0x00001a41      e86a290000     call sym.quote_n
0x00001a46      488d350e3f00.  lea rsi, str.io_blocks                  ; 0x595b ; "--io-blocks"
0x00001a4d      31ff           xor edi, edi
0x00001a4f      4889c5         mov rbp, rax
0x00001a52      e859290000     call sym.quote_n
0x00001a57      ba05000000     mov edx, 5
0x00001a5c      4889c3         mov rbx, rax
0x00001a5f      488d353a4500.  lea rsi, str.s_was_specified_but__s_was_not ; 0x5fa0 ; "%s was specified but %s was not"
0x00001a66      eb9f           jmp 0x1a07
0x00001a68      4585ed         test r13d, r13d
0x00001a6b      0f8eb5040000   jle 0x1f26
0x00001a71      488d542430     lea rdx, [rsp + 0x30]
0x00001a76      4c89f6         mov rsi, r14
0x00001a79      bf01000000     mov edi, 1
0x00001a7e      e81dfbffff     call sym.imp.__xstat
0x00001a83      85c0           test eax, eax
0x00001a85      0f85e3050000   jne 0x206e
0x00001a8b      8b442448       mov eax, dword [rsp + 0x48]
0x00001a8f      2500d00000     and eax, 0xd000
0x00001a94      3d00800000     cmp eax, 0x8000
0x00001a99      0f8518010000   jne 0x1bb7
0x00001a9f      488b442460     mov rax, qword [rsp + 0x60]
0x00001aa4      4885c0         test rax, rax
0x00001aa7      4889442418     mov qword [rsp + 0x18], rax
0x00001aac      0f8857010000   js 0x1c09
0x00001ab2      4584e4         test r12b, r12b
0x00001ab5      750e           jne 0x1ac5
0x00001ab7      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x00001abc      48c7442418ff.  mov qword [rsp + 0x18], 0xffffffffffffffff
0x00001ac5      803d0d662000.  cmp byte [obj.no_create], 1             ; [0x2080d9:1]=0
0x00001acc      c644241000     mov byte [rsp + 0x10], 0
0x00001ad1      4c897c2408     mov qword [rsp + 8], r15
0x00001ad6      19c0           sbb eax, eax
0x00001ad8      83e040         and eax, 0x40                           ; segment.PHDR
0x00001adb      0501080000     add eax, 0x801
0x00001ae0      89442414       mov dword [rsp + 0x14], eax
0x00001ae4      488d442430     lea rax, [rsp + 0x30]
0x00001ae9      4889442420     mov qword [rsp + 0x20], rax
0x00001aee      6690           nop
0x00001af0      4883c508       add rbp, 8
0x00001af4      4c8b6df8       mov r13, qword [rbp - 8]
0x00001af8      4d85ed         test r13, r13
0x00001afb      0f8437030000   je 0x1e38
0x00001b01      8b742414       mov esi, dword [rsp + 0x14]
0x00001b05      31c0           xor eax, eax
0x00001b07      bab6010000     mov edx, 0x1b6
0x00001b0c      4c89ef         mov rdi, r13
0x00001b0f      e82cfbffff     call sym.imp.open
0x00001b14      83f8ff         cmp eax, 0xffffffff
0x00001b17      4189c7         mov r15d, eax
0x00001b1a      0f842c010000   je 0x1c4c
0x00001b20      803db1652000.  cmp byte [obj.block_mode], 0            ; [0x2080d8:1]=0
0x00001b27      0f85f7010000   jne 0x1d24
0x00001b2d      85db           test ebx, ebx
0x00001b2f      0f8471010000   je 0x1ca6
0x00001b35      48837c241800   cmp qword [rsp + 0x18], 0
0x00001b3b      0f8965010000   jns 0x1ca6
0x00001b41      488b542420     mov rdx, qword [rsp + 0x20]
0x00001b46      89c6           mov esi, eax
0x00001b48      bf01000000     mov edi, 1
0x00001b4d      e88efaffff     call sym.imp.__fxstat
0x00001b52      85c0           test eax, eax
0x00001b54      0f8488020000   je 0x1de2
0x00001b5a      4c89ee         mov rsi, r13
0x00001b5d      bf04000000     mov edi, 4
0x00001b62      e899250000     call sym.quotearg_style
0x00001b67      488d35523e00.  lea rsi, str.cannot_fstat__s            ; 0x59c0 ; "cannot fstat %s"
0x00001b6e      4989c4         mov r12, rax
0x00001b71      ba05000000     mov edx, 5
0x00001b76      31ff           xor edi, edi
0x00001b78      e803f9ffff     call sym.imp.dcgettext
0x00001b7d      4989c6         mov r14, rax
0x00001b80      e87bf8ffff     call sym.imp.__errno_location
0x00001b85      8b30           mov esi, dword [rax]
0x00001b87      4c89f2         mov rdx, r14
0x00001b8a      4c89e1         mov rcx, r12
0x00001b8d      31ff           xor edi, edi
0x00001b8f      31c0           xor eax, eax
0x00001b91      4531f6         xor r14d, r14d
0x00001b94      e897faffff     call sym.imp.error
0x00001b99      4489ff         mov edi, r15d
0x00001b9c      e89ff9ffff     call sym.imp.close
0x00001ba1      85c0           test eax, eax
0x00001ba3      0f85f3010000   jne 0x1d9c
0x00001ba9      4183f601       xor r14d, 1
0x00001bad      4408742410     or byte [rsp + 0x10], r14b
0x00001bb2      e939ffffff     jmp 0x1af0
0x00001bb7      31f6           xor esi, esi
0x00001bb9      4c89f7         mov rdi, r14
0x00001bbc      31c0           xor eax, eax
0x00001bbe      e87dfaffff     call sym.imp.open
0x00001bc3      4189c5         mov r13d, eax
0x00001bc6      e835f8ffff     call sym.imp.__errno_location
0x00001bcb      4585ed         test r13d, r13d
0x00001bce      4989c6         mov r14, rax
0x00001bd1      7836           js 0x1c09
0x00001bd3      31f6           xor esi, esi
0x00001bd5      ba02000000     mov edx, 2
0x00001bda      4489ef         mov edi, r13d
0x00001bdd      e82ef9ffff     call sym.imp.lseek
0x00001be2      418b0e         mov ecx, dword [r14]
0x00001be5      4489ef         mov edi, r13d
0x00001be8      4889442418     mov qword [rsp + 0x18], rax
0x00001bed      894c2410       mov dword [rsp + 0x10], ecx
0x00001bf1      e84af9ffff     call sym.imp.close
0x00001bf6      48837c241800   cmp qword [rsp + 0x18], 0
0x00001bfc      0f89b0feffff   jns 0x1ab2
0x00001c02      8b442410       mov eax, dword [rsp + 0x10]
0x00001c06      418906         mov dword [r14], eax
0x00001c09      488b35c06420.  mov rsi, qword [obj.ref_file]           ; [0x2080d0:8]=0
0x00001c10      bf04000000     mov edi, 4
0x00001c15      e8e6240000     call sym.quotearg_style
0x00001c1a      488d356a3d00.  lea rsi, str.cannot_get_the_size_of__s  ; 0x598b ; "cannot get the size of %s"
0x00001c21      ba05000000     mov edx, 5
0x00001c26      31ff           xor edi, edi
0x00001c28      4889c5         mov rbp, rax
0x00001c2b      e850f8ffff     call sym.imp.dcgettext
0x00001c30      4889c3         mov rbx, rax
0x00001c33      e8c8f7ffff     call sym.imp.__errno_location
0x00001c38      8b30           mov esi, dword [rax]
0x00001c3a      4889e9         mov rcx, rbp
0x00001c3d      4889da         mov rdx, rbx
0x00001c40      bf01000000     mov edi, 1
0x00001c45      31c0           xor eax, eax
0x00001c47      e8e4f9ffff     call sym.imp.error
0x00001c4c      e8aff7ffff     call sym.imp.__errno_location
0x00001c51      803d81642000.  cmp byte [obj.no_create], 0             ; [0x2080d9:1]=0
0x00001c58      4989c4         mov r12, rax
0x00001c5b      7409           je 0x1c66
0x00001c5d      833802         cmp dword [rax], 2
0x00001c60      0f848afeffff   je 0x1af0
0x00001c66      4c89ee         mov rsi, r13
0x00001c69      bf04000000     mov edi, 4
0x00001c6e      e88d240000     call sym.quotearg_style
0x00001c73      488d352b3d00.  lea rsi, str.cannot_open__s_for_writing ; 0x59a5 ; "cannot open %s for writing"
0x00001c7a      ba05000000     mov edx, 5
0x00001c7f      31ff           xor edi, edi
0x00001c81      4989c5         mov r13, rax
0x00001c84      e8f7f7ffff     call sym.imp.dcgettext
0x00001c89      418b3424       mov esi, dword [r12]
0x00001c8d      4889c2         mov rdx, rax
0x00001c90      4c89e9         mov rcx, r13
0x00001c93      31ff           xor edi, edi
0x00001c95      31c0           xor eax, eax
0x00001c97      e894f9ffff     call sym.imp.error
0x00001c9c      c644241001     mov byte [rsp + 0x10], 1
0x00001ca1      e94afeffff     jmp 0x1af0
0x00001ca6      4c8b642408     mov r12, qword [rsp + 8]
0x00001cab      85db           test ebx, ebx
0x00001cad      0f8534010000   jne 0x1de7
0x00001cb3      4d85e4         test r12, r12
0x00001cb6      b800000000     mov eax, 0
0x00001cbb      4c0f48e0       cmovs r12, rax
0x00001cbf      4c89e6         mov rsi, r12
0x00001cc2      4489ff         mov edi, r15d
0x00001cc5      41be01000000   mov r14d, 1
0x00001ccb      e830f8ffff     call sym.imp.ftruncate
0x00001cd0      83c001         add eax, 1
0x00001cd3      0f85c0feffff   jne 0x1b99
0x00001cd9      4c89ee         mov rsi, r13
0x00001cdc      bf04000000     mov edi, 4
0x00001ce1      e81a240000     call sym.quotearg_style
0x00001ce6      488d35834300.  lea rsi, str.failed_to_truncate__s_at__ld_bytes ; 0x6070 ; "failed to truncate %s at %ld bytes"
0x00001ced      ba05000000     mov edx, 5
0x00001cf2      31ff           xor edi, edi
0x00001cf4      4989c6         mov r14, rax
0x00001cf7      e884f7ffff     call sym.imp.dcgettext
0x00001cfc      4889442428     mov qword [rsp + 0x28], rax
0x00001d01      e8faf6ffff     call sym.imp.__errno_location
0x00001d06      488b542428     mov rdx, qword [rsp + 0x28]
0x00001d0b      8b30           mov esi, dword [rax]
0x00001d0d      4c89f1         mov rcx, r14
0x00001d10      4d89e0         mov r8, r12
0x00001d13      31ff           xor edi, edi
0x00001d15      31c0           xor eax, eax
0x00001d17      4531f6         xor r14d, r14d
0x00001d1a      e811f9ffff     call sym.imp.error
0x00001d1f      e975feffff     jmp 0x1b99
0x00001d24      488b542420     mov rdx, qword [rsp + 0x20]
0x00001d29      89c6           mov esi, eax
0x00001d2b      bf01000000     mov edi, 1
0x00001d30      e8abf8ffff     call sym.imp.__fxstat
0x00001d35      85c0           test eax, eax
0x00001d37      0f851dfeffff   jne 0x1b5a
0x00001d3d      4c8b642468     mov r12, qword [rsp + 0x68]
0x00001d42      48b9ffffffff.  movabs rcx, 0x1fffffffffffffff          ; 2305843009213693951
0x00001d4c      498d4424ff     lea rax, [r12 - 1]
0x00001d51      4839c8         cmp rax, rcx
0x00001d54      b800020000     mov eax, 0x200
0x00001d59      4c0f47e0       cmova r12, rax
0x00001d5d      48b800000000.  movabs rax, 0x8000000000000000
0x00001d67      4899           cqo
0x00001d69      49f7fc         idiv r12
0x00001d6c      4839442408     cmp qword [rsp + 8], rax
0x00001d71      0f8cef000000   jl 0x1e66
0x00001d77      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00001d81      4899           cqo
0x00001d83      49f7fc         idiv r12
0x00001d86      4839442408     cmp qword [rsp + 8], rax
0x00001d8b      0f8fd5000000   jg 0x1e66
0x00001d91      4c0faf642408   imul r12, qword [rsp + 8]
0x00001d97      e90fffffff     jmp 0x1cab
0x00001d9c      4c89ee         mov rsi, r13
0x00001d9f      bf04000000     mov edi, 4
0x00001da4      e857230000     call sym.quotearg_style
0x00001da9      488d35203c00.  lea rsi, str.failed_to_close__s         ; 0x59d0 ; "failed to close %s"
0x00001db0      ba05000000     mov edx, 5
0x00001db5      31ff           xor edi, edi
0x00001db7      4989c5         mov r13, rax
0x00001dba      e8c1f6ffff     call sym.imp.dcgettext
0x00001dbf      4989c4         mov r12, rax
0x00001dc2      e839f6ffff     call sym.imp.__errno_location
0x00001dc7      8b30           mov esi, dword [rax]
0x00001dc9      4c89e9         mov rcx, r13
0x00001dcc      4c89e2         mov rdx, r12
0x00001dcf      31ff           xor edi, edi
0x00001dd1      31c0           xor eax, eax
0x00001dd3      e858f8ffff     call sym.imp.error
0x00001dd8      c644241001     mov byte [rsp + 0x10], 1
0x00001ddd      e90efdffff     jmp 0x1af0
0x00001de2      4c8b642408     mov r12, qword [rsp + 8]
0x00001de7      488b442418     mov rax, qword [rsp + 0x18]
0x00001dec      4883f8ff       cmp rax, 0xffffffffffffffff
0x00001df0      0f84b4000000   je 0x1eaa
0x00001df6      83fb02         cmp ebx, 2
0x00001df9      0f8409010000   je 0x1f08
0x00001dff      83fb03         cmp ebx, 3
0x00001e02      0f8449010000   je 0x1f51
0x00001e08      83fb04         cmp ebx, 4
0x00001e0b      0f844c010000   je 0x1f5d
0x00001e11      83fb05         cmp ebx, 5
0x00001e14      0f848a010000   je 0x1fa4
0x00001e1a      48baffffffff.  movabs rdx, 0x7fffffffffffffff          ; 9223372036854775807
0x00001e24      4829c2         sub rdx, rax
0x00001e27      4939d4         cmp r12, rdx
0x00001e2a      0f8fac010000   jg 0x1fdc
0x00001e30      4901c4         add r12, rax
0x00001e33      e97bfeffff     jmp 0x1cb3
0x00001e38      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x00001e40      6448331c2528.  xor rbx, qword fs:[0x28]
0x00001e49      0fb6442410     movzx eax, byte [rsp + 0x10]
0x00001e4e      0f85bb010000   jne 0x200f
0x00001e54      4881c4d80000.  add rsp, 0xd8
0x00001e5b      5b             pop rbx
0x00001e5c      5d             pop rbp
0x00001e5d      415c           pop r12
0x00001e5f      415d           pop r13
0x00001e61      415e           pop r14
0x00001e63      415f           pop r15
0x00001e65      c3             ret
0x00001e66      4c89ee         mov rsi, r13
0x00001e69      bf04000000     mov edi, 4
0x00001e6e      e88d220000     call sym.quotearg_style
0x00001e73      488d35464100.  lea rsi, str.overflow_in__ld____ld_byte_blocks_for_file__s ; 0x5fc0 ; "overflow in %ld * %ld byte blocks for file %s"
0x00001e7a      ba05000000     mov edx, 5
0x00001e7f      31ff           xor edi, edi
0x00001e81      4989c6         mov r14, rax
0x00001e84      e8f7f5ffff     call sym.imp.dcgettext
0x00001e89      488b4c2408     mov rcx, qword [rsp + 8]
0x00001e8e      4d89f1         mov r9, r14
0x00001e91      4889c2         mov rdx, rax
0x00001e94      4d89e0         mov r8, r12
0x00001e97      31f6           xor esi, esi
0x00001e99      31ff           xor edi, edi
0x00001e9b      31c0           xor eax, eax
0x00001e9d      4531f6         xor r14d, r14d
0x00001ea0      e88bf7ffff     call sym.imp.error
0x00001ea5      e9effcffff     jmp 0x1b99
0x00001eaa      8b442448       mov eax, dword [rsp + 0x48]
0x00001eae      2500d00000     and eax, 0xd000
0x00001eb3      3d00800000     cmp eax, 0x8000
0x00001eb8      0f85ad000000   jne 0x1f6b
0x00001ebe      488b442460     mov rax, qword [rsp + 0x60]
0x00001ec3      4885c0         test rax, rax
0x00001ec6      0f892affffff   jns 0x1df6
0x00001ecc      4c89ee         mov rsi, r13
0x00001ecf      bf04000000     mov edi, 4
0x00001ed4      e827220000     call sym.quotearg_style
0x00001ed9      488d35104100.  lea rsi, str.s_has_unusable__apparently_negative_size ; 0x5ff0 ; "%s has unusable, apparently negative size"
0x00001ee0      4989c4         mov r12, rax
0x00001ee3      ba05000000     mov edx, 5
0x00001ee8      31ff           xor edi, edi
0x00001eea      4531f6         xor r14d, r14d
0x00001eed      e88ef5ffff     call sym.imp.dcgettext
0x00001ef2      4c89e1         mov rcx, r12
0x00001ef5      4889c2         mov rdx, rax
0x00001ef8      31f6           xor esi, esi
0x00001efa      31ff           xor edi, edi
0x00001efc      31c0           xor eax, eax
0x00001efe      e82df7ffff     call sym.imp.error
0x00001f03      e991fcffff     jmp 0x1b99
0x00001f08      4939c4         cmp r12, rax
0x00001f0b      4c0f42e0       cmovb r12, rax
0x00001f0f      e99ffdffff     jmp 0x1cb3
0x00001f14      4584e4         test r12b, r12b
0x00001f17      0f84f7000000   je 0x2014
0x00001f1d      4585ed         test r13d, r13d
0x00001f20      0f8f96fbffff   jg 0x1abc
0x00001f26      488d353a3a00.  lea rsi, str.missing_file_operand       ; 0x5967 ; "missing file operand"
0x00001f2d      ba05000000     mov edx, 5
0x00001f32      31ff           xor edi, edi
0x00001f34      e847f5ffff     call sym.imp.dcgettext
0x00001f39      31ff           xor edi, edi
0x00001f3b      4889c2         mov rdx, rax
0x00001f3e      31f6           xor esi, esi
0x00001f40      31c0           xor eax, eax
0x00001f42      e8e9f6ffff     call sym.imp.error
0x00001f47      bf01000000     mov edi, 1
0x00001f4c      e87f020000     call sym.usage
0x00001f51      4939c4         cmp r12, rax
0x00001f54      4c0f47e0       cmova r12, rax
0x00001f58      e962fdffff     jmp 0x1cbf
0x00001f5d      31d2           xor edx, edx
0x00001f5f      49f7f4         div r12
0x00001f62      4c0fafe0       imul r12, rax
0x00001f66      e948fdffff     jmp 0x1cb3
0x00001f6b      31f6           xor esi, esi
0x00001f6d      ba02000000     mov edx, 2
0x00001f72      4489ff         mov edi, r15d
0x00001f75      e896f5ffff     call sym.imp.lseek
0x00001f7a      4885c0         test rax, rax
0x00001f7d      0f8973feffff   jns 0x1df6
0x00001f83      4c89ee         mov rsi, r13
0x00001f86      bf04000000     mov edi, 4
0x00001f8b      e870210000     call sym.quotearg_style
0x00001f90      ba05000000     mov edx, 5
0x00001f95      4989c4         mov r12, rax
0x00001f98      488d35ec3900.  lea rsi, str.cannot_get_the_size_of__s  ; 0x598b ; "cannot get the size of %s"
0x00001f9f      e9d2fbffff     jmp 0x1b76
0x00001fa4      498d4404ff     lea rax, [r12 + rax - 1]
0x00001fa9      31d2           xor edx, edx
0x00001fab      49f7f4         div r12
0x00001fae      4c0fafe0       imul r12, rax
0x00001fb2      4d85e4         test r12, r12
0x00001fb5      0f8904fdffff   jns 0x1cbf
0x00001fbb      4c89ee         mov rsi, r13
0x00001fbe      bf04000000     mov edi, 4
0x00001fc3      e838210000     call sym.quotearg_style
0x00001fc8      ba05000000     mov edx, 5
0x00001fcd      4989c4         mov r12, rax
0x00001fd0      488d35494000.  lea rsi, str.overflow_rounding_up_size_of_file__s ; 0x6020 ; "overflow rounding up size of file %s"
0x00001fd7      e90cffffff     jmp 0x1ee8
0x00001fdc      4c89ee         mov rsi, r13
0x00001fdf      bf04000000     mov edi, 4
0x00001fe4      e817210000     call sym.quotearg_style
0x00001fe9      ba05000000     mov edx, 5
0x00001fee      4989c4         mov r12, rax
0x00001ff1      488d35504000.  lea rsi, str.overflow_extending_size_of_file__s ; 0x6048 ; "overflow extending size of file %s"
0x00001ff8      e9ebfeffff     jmp 0x1ee8
0x00001ffd      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00002002      0f858af7ffff   jne 0x1792
0x00002008      31ff           xor edi, edi
0x0000200a      e8c1010000     call sym.usage
0x0000200f      e89cf4ffff     call sym.imp.__stack_chk_fail
0x00002014      488d352d3900.  lea rsi, str.reference                  ; 0x5948 ; "--reference"
0x0000201b      bf01000000     mov edi, 1
0x00002020      e88b230000     call sym.quote_n
0x00002025      488d35283900.  lea rsi, str.size                       ; 0x5954 ; "--size"
0x0000202c      31ff           xor edi, edi
0x0000202e      4889c5         mov rbp, rax
0x00002031      e87a230000     call sym.quote_n
0x00002036      ba05000000     mov edx, 5
0x0000203b      4889c3         mov rbx, rax
0x0000203e      488d350b3f00.  lea rsi, str.you_must_specify_either__s_or__s ; 0x5f50 ; "you must specify either %s or %s"
0x00002045      e9bdf9ffff     jmp 0x1a07
0x0000204a      488d35d13800.  lea rsi, str.division_by_zero           ; 0x5922 ; "division by zero"
0x00002051      ba05000000     mov edx, 5
0x00002056      31ff           xor edi, edi
0x00002058      e823f4ffff     call sym.imp.dcgettext
0x0000205d      31f6           xor esi, esi
0x0000205f      4889c2         mov rdx, rax
0x00002062      bf01000000     mov edi, 1
0x00002067      31c0           xor eax, eax
0x00002069      e8c2f5ffff     call sym.imp.error
0x0000206e      4c89f6         mov rsi, r14
0x00002071      bf04000000     mov edi, 4
0x00002076      e885200000     call sym.quotearg_style
0x0000207b      488d35fa3800.  lea rsi, str.cannot_stat__s             ; 0x597c ; "cannot stat %s"
0x00002082      ba05000000     mov edx, 5
0x00002087      31ff           xor edi, edi
0x00002089      4889c5         mov rbp, rax
0x0000208c      e8eff3ffff     call sym.imp.dcgettext
0x00002091      4889c3         mov rbx, rax
0x00002094      e867f3ffff     call sym.imp.__errno_location
0x00002099      8b30           mov esi, dword [rax]
0x0000209b      4889e9         mov rcx, rbp
0x0000209e      4889da         mov rdx, rbx
0x000020a1      bf01000000     mov edi, 1
0x000020a6      31c0           xor eax, eax
0x000020a8      e883f5ffff     call sym.imp.error
0x000020ad      488d35743e00.  lea rsi, str.multiple_relative_modifiers_specified ; 0x5f28 ; "multiple relative modifiers specified"
0x000020b4      e979feffff     jmp 0x1f32
0x000020b9      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x000020c0      31ed           xor ebp, ebp
0x000020c2      4989d1         mov r9, rdx
0x000020c5      5e             pop rsi
0x000020c6      4889e2         mov rdx, rsp
0x000020c9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000020cd      50             push rax
0x000020ce      54             push rsp
0x000020cf      4c8d051a3700.  lea r8, sym.__libc_csu_fini             ; 0x57f0
0x000020d6      488d0da33600.  lea rcx, sym.__libc_csu_init            ; 0x5780 ; "AWAVI\x89\xd7AUATL\x8d%~# "
0x000020dd      488d3dfcf5ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x16e0 ; "AWAVAUATA\x89\xfdUSH\x89\xf51\xdbE1\xe4H\x81\xec\xd8"
0x000020e4      ff15f65e2000   call qword [reloc.__libc_start_main]    ; [0x207fe0:8]=0
0x000020ea      f4             hlt
0x000020eb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000020f0      488d3d895f20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x000020f7      55             push rbp
0x000020f8      488d05815f20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x000020ff      4839f8         cmp rax, rdi
0x00002102      4889e5         mov rbp, rsp
0x00002105      7419           je 0x2120
0x00002107      488b05ca5e20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fd8:8]=0
0x0000210e      4885c0         test rax, rax
0x00002111      740d           je 0x2120
0x00002113      5d             pop rbp
0x00002114      ffe0           jmp rax
0x00002116      662e0f1f8400.  nop word cs:[rax + rax]
0x00002120      5d             pop rbp
0x00002121      c3             ret
0x00002122      0f1f4000       nop dword [rax]
0x00002126      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002130      488d3d495f20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00002137      488d35425f20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x0000213e      55             push rbp
0x0000213f      4829fe         sub rsi, rdi
0x00002142      4889e5         mov rbp, rsp
0x00002145      48c1fe03       sar rsi, 3
0x00002149      4889f0         mov rax, rsi
0x0000214c      48c1e83f       shr rax, 0x3f
0x00002150      4801c6         add rsi, rax
0x00002153      48d1fe         sar rsi, 1
0x00002156      7418           je 0x2170
0x00002158      488b05915e20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207ff0:8]=0
0x0000215f      4885c0         test rax, rax
0x00002162      740c           je 0x2170
0x00002164      5d             pop rbp
0x00002165      ffe0           jmp rax
0x00002167      660f1f840000.  nop word [rax + rax]
0x00002170      5d             pop rbp
0x00002171      c3             ret
0x00002172      0f1f4000       nop dword [rax]
0x00002176      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002180      803d415f2000.  cmp byte [obj.completed.7697], 0        ; [0x2080c8:1]=0
0x00002187      752f           jne 0x21b8
0x00002189      48833d675e20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207ff8:8]=0
0x00002191      55             push rbp
0x00002192      4889e5         mov rbp, rsp
0x00002195      740c           je 0x21a3
0x00002197      488b3d6a5e20.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x0000219e      e82df5ffff     call sym..plt.got
0x000021a3      e848ffffff     call sym.deregister_tm_clones
0x000021a8      c605195f2000.  mov byte [obj.completed.7697], 1        ; [0x2080c8:1]=0
0x000021af      5d             pop rbp
0x000021b0      c3             ret
0x000021b1      0f1f80000000.  nop dword [rax]
0x000021b8      f3c3           ret
0x000021ba      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000021c0      55             push rbp
0x000021c1      4889e5         mov rbp, rsp
0x000021c4      5d             pop rbp
0x000021c5      e966ffffff     jmp sym.register_tm_clones
0x000021ca      660f1f440000   nop word [rax + rax]
;-- usage:
0x000021d0      4155           push r13
0x000021d2      4154           push r12
0x000021d4      ba05000000     mov edx, 5
0x000021d9      55             push rbp
0x000021da      53             push rbx
0x000021db      89fd           mov ebp, edi
0x000021dd      4881ec880000.  sub rsp, 0x88
0x000021e4      488b1d055f20.  mov rbx, qword [obj.program_name]       ; [0x2080f0:8]=0
0x000021eb      64488b042528.  mov rax, qword fs:[0x28]
0x000021f4      4889442478     mov qword [rsp + 0x78], rax
0x000021f9      31c0           xor eax, eax
0x000021fb      85ff           test edi, edi
0x000021fd      742e           je 0x222d
0x000021ff      488d35fa3700.  lea rsi, str.Try___s___help__for_more_information. ; 0x5a00 ; "Try '%s --help' for more information.\n"
0x00002206      31ff           xor edi, edi
0x00002208      e873f2ffff     call sym.imp.dcgettext
0x0000220d      488b3dac5e20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002214      4889c2         mov rdx, rax
0x00002217      4889d9         mov rcx, rbx
0x0000221a      be01000000     mov esi, 1
0x0000221f      31c0           xor eax, eax
0x00002221      e86af4ffff     call sym.imp.__fprintf_chk
0x00002226      89ef           mov edi, ebp
0x00002228      e843f4ffff     call sym.imp.exit
0x0000222d      488d35f93500.  lea rsi, str.Usage:__s_OPTION..._FILE... ; 0x582d ; "Usage: %s OPTION... FILE...\n"
0x00002234      31ff           xor edi, edi
0x00002236      e845f2ffff     call sym.imp.dcgettext
0x0000223b      4889da         mov rdx, rbx
0x0000223e      4889c6         mov rsi, rax
0x00002241      bf01000000     mov edi, 1
0x00002246      31c0           xor eax, eax
0x00002248      e8d3f3ffff     call sym.imp.__printf_chk
0x0000224d      488b1d345e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002254      488d35cd3700.  lea rsi, str.Shrink_or_extend_the_size_of_each_FILE_to_the_specified_size____A_FILE_argument_that_does_not_exist_is_created.____If_a_FILE_is_larger_than_the_specified_size__the_extra_data_is_lost.__If_a_FILE_is_shorter__it_is_extended_and_the_extended_part__hole___reads_as_zero_bytes. ; 0x5a28 ; "Shrink or extend the size of each FILE to the specified size\n\nA FILE argument that does not exist is created.\n\nIf a FILE is larger than the specified size, the extra data is lost.\nIf a FILE is shorter, it is extended and the extended part (hole)\nreads as zero bytes.\n"
0x0000225b      ba05000000     mov edx, 5
0x00002260      31ff           xor edi, edi
0x00002262      e819f2ffff     call sym.imp.dcgettext
0x00002267      4889de         mov rsi, rbx
0x0000226a      4889c7         mov rdi, rax
0x0000226d      e8eef2ffff     call sym.imp.fputs_unlocked
0x00002272      488b1d0f5e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002279      488d35b83800.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x5b38 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002280      ba05000000     mov edx, 5
0x00002285      31ff           xor edi, edi
0x00002287      e8f4f1ffff     call sym.imp.dcgettext
0x0000228c      4889de         mov rsi, rbx
0x0000228f      4889c7         mov rdi, rax
0x00002292      e8c9f2ffff     call sym.imp.fputs_unlocked
0x00002297      488b1dea5d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000229e      488d35e33800.  lea rsi, str.c____no_create________do_not_create_any_files ; 0x5b88 ; "  -c, --no-create        do not create any files\n"
0x000022a5      ba05000000     mov edx, 5
0x000022aa      31ff           xor edi, edi
0x000022ac      e8cff1ffff     call sym.imp.dcgettext
0x000022b1      4889de         mov rsi, rbx
0x000022b4      4889c7         mov rdi, rax
0x000022b7      e8a4f2ffff     call sym.imp.fputs_unlocked
0x000022bc      488b1dc55d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000022c3      488d35f63800.  lea rsi, str.o____io_blocks________treat_SIZE_as_number_of_IO_blocks_instead_of_bytes ; 0x5bc0 ; "  -o, --io-blocks        treat SIZE as number of IO blocks instead of bytes\n"
0x000022ca      ba05000000     mov edx, 5
0x000022cf      31ff           xor edi, edi
0x000022d1      e8aaf1ffff     call sym.imp.dcgettext
0x000022d6      4889de         mov rsi, rbx
0x000022d9      4889c7         mov rdi, rax
0x000022dc      e87ff2ffff     call sym.imp.fputs_unlocked
0x000022e1      488b1da05d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000022e8      488d35213900.  lea rsi, str.r____reference_RFILE__base_size_on_RFILE_____s____size_SIZE________set_or_adjust_the_file_size_by_SIZE_bytes ; 0x5c10 ; "  -r, --reference=RFILE  base size on RFILE\n  -s, --size=SIZE        set or adjust the file size by SIZE bytes\n"
0x000022ef      ba05000000     mov edx, 5
0x000022f4      31ff           xor edi, edi
0x000022f6      e885f1ffff     call sym.imp.dcgettext
0x000022fb      4889de         mov rsi, rbx
0x000022fe      4889c7         mov rdi, rax
0x00002301      e85af2ffff     call sym.imp.fputs_unlocked
0x00002306      488b1d7b5d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000230d      488d356c3900.  lea rsi, str.help_____display_this_help_and_exit ; 0x5c80 ; "      --help     display this help and exit\n"
0x00002314      ba05000000     mov edx, 5
0x00002319      31ff           xor edi, edi
0x0000231b      e860f1ffff     call sym.imp.dcgettext
0x00002320      4889de         mov rsi, rbx
0x00002323      4889c7         mov rdi, rax
0x00002326      e835f2ffff     call sym.imp.fputs_unlocked
0x0000232b      488b1d565d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002332      488d35773900.  lea rsi, str.version__output_version_information_and_exit ; 0x5cb0 ; "      --version  output version information and exit\n"
0x00002339      ba05000000     mov edx, 5
0x0000233e      31ff           xor edi, edi
0x00002340      e83bf1ffff     call sym.imp.dcgettext
0x00002345      4889de         mov rsi, rbx
0x00002348      4889c7         mov rdi, rax
0x0000234b      e810f2ffff     call sym.imp.fputs_unlocked
0x00002350      488b1d315d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002357      488d358a3900.  lea rsi, str.The_SIZE_argument_is_an_integer_and_optional_unit__example:_10K_is_10_1024_.__Units_are_K_M_G_T_P_E_Z_Y__powers_of_1024__or_KB_MB_...__powers_of_1000_.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on. ; 0x5ce8 ; "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n"
0x0000235e      ba05000000     mov edx, 5
0x00002363      31ff           xor edi, edi
0x00002365      e816f1ffff     call sym.imp.dcgettext
0x0000236a      4889de         mov rsi, rbx
0x0000236d      4889c7         mov rdi, rax
0x00002370      e8ebf1ffff     call sym.imp.fputs_unlocked
0x00002375      488b1d0c5d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000237c      488d353d3a00.  lea rsi, str.SIZE_may_also_be_prefixed_by_one_of_the_following_modifying_characters:______extend_by______reduce_by______at_most______at_least_______round_down_to_multiple_of______round_up_to_multiple_of. ; 0x5dc0 ; "\nSIZE may also be prefixed by one of the following modifying characters:\n'+' extend by, '-' reduce by, '<' at most, '>' at least,\n'/' round down to multiple of, '%' round up to multiple of.\n"
0x00002383      ba05000000     mov edx, 5
0x00002388      31ff           xor edi, edi
0x0000238a      e8f1f0ffff     call sym.imp.dcgettext
0x0000238f      4889de         mov rsi, rbx
0x00002392      4889c7         mov rdi, rax
0x00002395      488d1d883400.  lea rbx, str.truncate                   ; 0x5824 ; "truncate"
0x0000239c      e8bff1ffff     call sym.imp.fputs_unlocked
0x000023a1      488d05a23400.  lea rax, [0x0000584a]                   ; "["
0x000023a8      488d0ddc3400.  lea rcx, str.sha256sum                  ; 0x588b ; "sha256sum"
0x000023af      48c744246000.  mov qword [rsp + 0x60], 0
0x000023b8      48c744246800.  mov qword [rsp + 0x68], 0
0x000023c1      4889e2         mov rdx, rsp
0x000023c4      48890424       mov qword [rsp], rax
0x000023c8      488d057d3400.  lea rax, str.test_invocation            ; 0x584c ; "test invocation"
0x000023cf      48894c2430     mov qword [rsp + 0x30], rcx
0x000023d4      488d0dba3400.  lea rcx, str.sha384sum                  ; 0x5895 ; "sha384sum"
0x000023db      4889442408     mov qword [rsp + 8], rax
0x000023e0      488d05dd3400.  lea rax, [0x000058c4]                   ; "coreutils"
0x000023e7      48894c2440     mov qword [rsp + 0x40], rcx
0x000023ec      488d0dac3400.  lea rcx, str.sha512sum                  ; 0x589f ; "sha512sum"
0x000023f3      4889442410     mov qword [rsp + 0x10], rax
0x000023f8      488d055d3400.  lea rax, str.Multi_call_invocation      ; 0x585c ; "Multi-call invocation"
0x000023ff      48894c2450     mov qword [rsp + 0x50], rcx
0x00002404      4889442418     mov qword [rsp + 0x18], rax
0x00002409      488d05623400.  lea rax, str.sha224sum                  ; 0x5872 ; "sha224sum"
0x00002410      4889442420     mov qword [rsp + 0x20], rax
0x00002415      488d05603400.  lea rax, str.sha2_utilities             ; 0x587c ; "sha2 utilities"
0x0000241c      4889442428     mov qword [rsp + 0x28], rax
0x00002421      4889442438     mov qword [rsp + 0x38], rax
0x00002426      4889442448     mov qword [rsp + 0x48], rax
0x0000242b      4889442458     mov qword [rsp + 0x58], rax
0x00002430      4883c210       add rdx, 0x10
0x00002434      488b3a         mov rdi, qword [rdx]
0x00002437      4885ff         test rdi, rdi
0x0000243a      7413           je 0x244f
0x0000243c      b909000000     mov ecx, 9
0x00002441      4889de         mov rsi, rbx
0x00002444      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002446      0f97c0         seta al
0x00002449      1c00           sbb al, 0
0x0000244b      84c0           test al, al
0x0000244d      75e1           jne 0x2430
0x0000244f      4c8b6208       mov r12, qword [rdx + 8]
0x00002453      31ff           xor edi, edi
0x00002455      ba05000000     mov edx, 5
0x0000245a      488d35483400.  lea rsi, str.s_online_help:___s         ; 0x58a9 ; "\n%s online help: <%s>\n"
0x00002461      4d85e4         test r12, r12
0x00002464      0f84c1000000   je 0x252b
0x0000246a      e811f0ffff     call sym.imp.dcgettext
0x0000246f      488d0d0a3a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5e80 ; "https://www.gnu.org/software/coreutils/"
0x00002476      488d15433400.  lea rdx, str.GNU_coreutils              ; 0x58c0 ; "GNU coreutils"
0x0000247d      4889c6         mov rsi, rax
0x00002480      bf01000000     mov edi, 1
0x00002485      31c0           xor eax, eax
0x00002487      e894f1ffff     call sym.imp.__printf_chk
0x0000248c      31f6           xor esi, esi
0x0000248e      bf05000000     mov edi, 5
0x00002493      e878f1ffff     call sym.imp.setlocale
0x00002498      4885c0         test rax, rax
0x0000249b      741c           je 0x24b9
0x0000249d      488d352a3400.  lea rsi, [0x000058ce]                   ; "en_"
0x000024a4      ba03000000     mov edx, 3
0x000024a9      4889c7         mov rdi, rax
0x000024ac      e85fefffff     call sym.imp.strncmp
0x000024b1      85c0           test eax, eax
0x000024b3      0f8507010000   jne 0x25c0
0x000024b9      488d35123400.  lea rsi, str.Full_documentation___s_s   ; 0x58d2 ; "Full documentation <%s%s>\n"
0x000024c0      31ff           xor edi, edi
0x000024c2      ba05000000     mov edx, 5
0x000024c7      e8b4efffff     call sym.imp.dcgettext
0x000024cc      488d0d513300.  lea rcx, str.truncate                   ; 0x5824 ; "truncate"
0x000024d3      488d15a63900.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5e80 ; "https://www.gnu.org/software/coreutils/"
0x000024da      4889c6         mov rsi, rax
0x000024dd      bf01000000     mov edi, 1
0x000024e2      31c0           xor eax, eax
0x000024e4      e837f1ffff     call sym.imp.__printf_chk
0x000024e9      4939dc         cmp r12, rbx
0x000024ec      488d0d733300.  lea rcx, [0x00005866]                   ; " invocation"
0x000024f3      488d1d4f3300.  lea rbx, [0x00005849]
0x000024fa      480f44d9       cmove rbx, rcx
0x000024fe      488d35eb3900.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5ef0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002505      31ff           xor edi, edi
0x00002507      ba05000000     mov edx, 5
0x0000250c      e86fefffff     call sym.imp.dcgettext
0x00002511      4889d9         mov rcx, rbx
0x00002514      4889c6         mov rsi, rax
0x00002517      4c89e2         mov rdx, r12
0x0000251a      bf01000000     mov edi, 1
0x0000251f      31c0           xor eax, eax
0x00002521      e8faf0ffff     call sym.imp.__printf_chk
0x00002526      e9fbfcffff     jmp 0x2226
0x0000252b      e850efffff     call sym.imp.dcgettext
0x00002530      488d0d493900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5e80 ; "https://www.gnu.org/software/coreutils/"
0x00002537      488d15823300.  lea rdx, str.GNU_coreutils              ; 0x58c0 ; "GNU coreutils"
0x0000253e      4889c6         mov rsi, rax
0x00002541      bf01000000     mov edi, 1
0x00002546      31c0           xor eax, eax
0x00002548      e8d3f0ffff     call sym.imp.__printf_chk
0x0000254d      31f6           xor esi, esi
0x0000254f      bf05000000     mov edi, 5
0x00002554      e8b7f0ffff     call sym.imp.setlocale
0x00002559      4885c0         test rax, rax
0x0000255c      7418           je 0x2576
0x0000255e      488d35693300.  lea rsi, [0x000058ce]                   ; "en_"
0x00002565      ba03000000     mov edx, 3
0x0000256a      4889c7         mov rdi, rax
0x0000256d      e89eeeffff     call sym.imp.strncmp
0x00002572      85c0           test eax, eax
0x00002574      7543           jne 0x25b9
0x00002576      488d35553300.  lea rsi, str.Full_documentation___s_s   ; 0x58d2 ; "Full documentation <%s%s>\n"
0x0000257d      ba05000000     mov edx, 5
0x00002582      31ff           xor edi, edi
0x00002584      4c8d25993200.  lea r12, str.truncate                   ; 0x5824 ; "truncate"
0x0000258b      488d1dd43200.  lea rbx, [0x00005866]                   ; " invocation"
0x00002592      e8e9eeffff     call sym.imp.dcgettext
0x00002597      488d0d863200.  lea rcx, str.truncate                   ; 0x5824 ; "truncate"
0x0000259e      488d15db3800.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5e80 ; "https://www.gnu.org/software/coreutils/"
0x000025a5      4889c6         mov rsi, rax
0x000025a8      bf01000000     mov edi, 1
0x000025ad      31c0           xor eax, eax
0x000025af      e86cf0ffff     call sym.imp.__printf_chk
0x000025b4      e945ffffff     jmp 0x24fe
0x000025b9      4c8d25643200.  lea r12, str.truncate                   ; 0x5824 ; "truncate"
0x000025c0      4c8b2dc15a20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000025c7      488d35da3800.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x5ea8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000025ce      31ff           xor edi, edi
0x000025d0      ba05000000     mov edx, 5
0x000025d5      e8a6eeffff     call sym.imp.dcgettext
0x000025da      4c89ee         mov rsi, r13
0x000025dd      4889c7         mov rdi, rax
0x000025e0      e87befffff     call sym.imp.fputs_unlocked
0x000025e5      e9cffeffff     jmp 0x24b9
0x000025ea      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x000025f0      48893df15a20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2080e8:8]=0
0x000025f7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000025f8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002600      40883dd95a20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2080e0:1]=0
0x00002607      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002608      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002610      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002611      53             push rbx
0x00002612      4883ec08       sub rsp, 8
0x00002616      488b3d6b5a20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000261d      e81e2f0000     call sym.close_stream
0x00002622      85c0           test eax, eax
0x00002624      7416           je 0x263c
0x00002626      e8d5edffff     call sym.imp.__errno_location
0x0000262b      803dae5a2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2080e0:1]=0
0x00002632      4889c3         mov rbx, rax
0x00002635      741c           je 0x2653
0x00002637      833820         cmp dword [rax], 0x20
0x0000263a      7517           jne 0x2653
0x0000263c      488b3d7d5a20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002643      e8f82e0000     call sym.close_stream
0x00002648      85c0           test eax, eax
0x0000264a      7546           jne 0x2692
0x0000264c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002650      5b             pop rbx
0x00002651      5d             pop rbp
0x00002652      c3             ret
0x00002653      488d353e3a00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x6098 ; "write error"
0x0000265a      31ff           xor edi, edi
0x0000265c      ba05000000     mov edx, 5
0x00002661      e81aeeffff     call sym.imp.dcgettext
0x00002666      488b3d7b5a20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2080e8:8]=0
0x0000266d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002670      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002673      7428           je 0x269d
0x00002675      e8561b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000267a      8b33           mov esi, dword [rbx]
0x0000267c      488d15213a00.  lea rdx, str.s:__s                      ; 0x60a4 ; "%s: %s"
0x00002683      4889c1         mov rcx, rax
0x00002686      4989e8         mov r8, rbp
0x00002689      31ff           xor edi, edi
0x0000268b      31c0           xor eax, eax
0x0000268d      e89eefffff     call sym.imp.error
0x00002692      8b3d80592000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208018:4]=1
0x00002698      e883edffff     call sym.imp._exit
0x0000269d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000269f      488d15023a00.  lea rdx, [0x000060a8]                   ; "%s"
0x000026a6      4889c1         mov rcx, rax
0x000026a9      31ff           xor edi, edi
0x000026ab      31c0           xor eax, eax
0x000026ad      e87eefffff     call sym.imp.error
0x000026b2      ebde           jmp 0x2692
0x000026b4      662e0f1f8400.  nop word cs:[rax + rax]
0x000026be      6690           nop
;-- set_program_name:
0x000026c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000026c3      53             push rbx
0x000026c4      7477           je 0x273d                               ; ../coreutils-8.31/lib/progname.c:51
0x000026c6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000026cb      4889fb         mov rbx, rdi
0x000026ce      e81deeffff     call sym.imp.strrchr
0x000026d3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000026d6      7455           je 0x272d
0x000026d8      4c8d4001       lea r8, [rax + 1]
0x000026dc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000026df      4829da         sub rdx, rbx
0x000026e2      4883fa06       cmp rdx, 6
0x000026e6      7e45           jle 0x272d
0x000026e8      488d70fa       lea rsi, [rax - 6]
0x000026ec      488d3df53900.  lea rdi, str..libs                      ; 0x60e8 ; "/.libs/"
0x000026f3      b907000000     mov ecx, 7
0x000026f8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000026fa      0f97c2         seta dl
0x000026fd      80da00         sbb dl, 0
0x00002700      84d2           test dl, dl
0x00002702      7529           jne 0x272d
0x00002704      488d3de53900.  lea rdi, [0x000060f0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000270b      b903000000     mov ecx, 3
0x00002710      4c89c6         mov rsi, r8
0x00002713      4c89c3         mov rbx, r8
0x00002716      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002718      0f97c2         seta dl
0x0000271b      80da00         sbb dl, 0
0x0000271e      84d2           test dl, dl
0x00002720      750b           jne 0x272d
0x00002722      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002726      48891d535920.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x208080:8]=0
0x0000272d      48891dbc5920.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2080f0:8]=0
0x00002734      48891d655920.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x0000273b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000273c      c3             ret
0x0000273d      488b0d7c5920.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002744      488d3d653900.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x60b0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000274b      ba37000000     mov edx, 0x37                           ; '7'
0x00002750      be01000000     mov esi, 1
0x00002755      e826efffff     call sym.imp.fwrite
0x0000275a      e891ecffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000275f      90             nop
;-- gettext_quote.part.1:
0x00002760      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002761      53             push rbx
0x00002762      4889fd         mov rbp, rdi
0x00002765      89f3           mov ebx, esi
0x00002767      4883ec08       sub rsp, 8
0x0000276b      e8b02e0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002770      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002773      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002776      80fa55         cmp dl, 0x55
0x00002779      7475           je 0x27f0
0x0000277b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000277e      7420           je 0x27a0
0x00002780      488d057c3900.  lea rax, str.l______l                   ; 0x6103 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002787      488d15773900.  lea rdx, [0x00006105]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000278e      83fb09         cmp ebx, 9
0x00002791      480f45c2       cmovne rax, rdx
0x00002795      4883c408       add rsp, 8
0x00002799      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000279a      5d             pop rbp
0x0000279b      c3             ret
0x0000279c      0f1f4000       nop dword [rax]
0x000027a0      0fb65001       movzx edx, byte [rax + 1]
0x000027a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000027a7      80fa42         cmp dl, 0x42
0x000027aa      75d4           jne 0x2780
0x000027ac      80780231       cmp byte [rax + 2], 0x31
0x000027b0      75ce           jne 0x2780
0x000027b2      80780338       cmp byte [rax + 3], 0x38
0x000027b6      75c8           jne 0x2780
0x000027b8      80780430       cmp byte [rax + 4], 0x30
0x000027bc      75c2           jne 0x2780
0x000027be      80780533       cmp byte [rax + 5], 0x33
0x000027c2      75bc           jne 0x2780
0x000027c4      80780630       cmp byte [rax + 6], 0x30
0x000027c8      75b6           jne 0x2780
0x000027ca      80780700       cmp byte [rax + 7], 0
0x000027ce      75b0           jne 0x2780
0x000027d0      807d0060       cmp byte [rbp], 0x60
0x000027d4      488d05213900.  lea rax, [0x000060fc]
0x000027db      488d151e3900.  lea rdx, [0x00006100]
0x000027e2      480f45c2       cmovne rax, rdx
0x000027e6      4883c408       add rsp, 8
0x000027ea      5b             pop rbx
0x000027eb      5d             pop rbp
0x000027ec      c3             ret
0x000027ed      0f1f00         nop dword [rax]
0x000027f0      0fb65001       movzx edx, byte [rax + 1]
0x000027f4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000027f7      80fa54         cmp dl, 0x54
0x000027fa      7584           jne 0x2780
0x000027fc      0fb65002       movzx edx, byte [rax + 2]
0x00002800      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002803      80fa46         cmp dl, 0x46
0x00002806      0f8574ffffff   jne 0x2780
0x0000280c      8078032d       cmp byte [rax + 3], 0x2d
0x00002810      0f856affffff   jne 0x2780
0x00002816      80780438       cmp byte [rax + 4], 0x38
0x0000281a      0f8560ffffff   jne 0x2780
0x00002820      80780500       cmp byte [rax + 5], 0
0x00002824      0f8556ffffff   jne 0x2780
0x0000282a      807d0060       cmp byte [rbp], 0x60
0x0000282e      488d05bf3800.  lea rax, [0x000060f4]                   ; "\u2018"
0x00002835      488d15bc3800.  lea rdx, [0x000060f8]                   ; "\u2019"
0x0000283c      480f45c2       cmovne rax, rdx
0x00002840      4883c408       add rsp, 8
0x00002844      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002845      5d             pop rbp
0x00002846      c3             ret
0x00002847      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002850      4157           push r15
0x00002852      4156           push r14
0x00002854      4589c7         mov r15d, r8d
0x00002857      4155           push r13
0x00002859      4154           push r12
0x0000285b      4989fe         mov r14, rdi
0x0000285e      55             push rbp
0x0000285f      53             push rbx
0x00002860      4489cb         mov ebx, r9d
0x00002863      4989f5         mov r13, rsi
0x00002866      4889cd         mov rbp, rcx
0x00002869      83e302         and ebx, 2
0x0000286c      4881ecb80000.  sub rsp, 0xb8
0x00002873      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000287b      4889542410     mov qword [rsp + 0x10], rdx
0x00002880      4489442408     mov dword [rsp + 8], r8d
0x00002885      44894c2478     mov dword [rsp + 0x78], r9d
0x0000288a      4889442420     mov qword [rsp + 0x20], rax
0x0000288f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002897      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000289c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000028a4      4889442460     mov qword [rsp + 0x60], rax
0x000028a9      64488b042528.  mov rax, qword fs:[0x28]
0x000028b2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000028ba      31c0           xor eax, eax
0x000028bc      e8cfebffff     call sym.imp.__ctype_get_mb_cur_max
0x000028c1      4183ff0a       cmp r15d, 0xa
0x000028c5      4889442458     mov qword [rsp + 0x58], rax
0x000028ca      0f87af110000   ja 0x3a7f
0x000028d0      488d0d893800.  lea rcx, [0x00006160]                   ; "*\xd5\xff\xff\x83\xc7\xff\xffX\xd7\xff\xffd\xd5\xff\xffT\xd3\xff\xff\xb0\xd3\xff\xff\x05\xd4\xff\xffJ\xd4\xff\xff\x84\xd4\xff\xff\x84\xd4\xff\xff\x84\xd4\xff\xff\xd4\xca\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\x14\xcb\xff\xff\x1c\xca\xff\xff\xdc\xc9\xff\xff\xa4\xcb\xff\xff\x94\xcb\xff\xff\x84\xcb\xff\xfft\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xff\xbc\xcb\xff\xffd\xcb\xff\xffT\xcb\xff\xffT\xcb\xff\xff$\xcb\xff\xffT\xcb\xff\xff\xfc\xca\xff\xffT\xcb\xff\xff\xb7\xc9\xff\xffT\xcb\xff\xffT\xcb\xff\xffT\xcb\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xffT\xcb\xff\xffT\xcb\xff\xffT\xcb\xff\xffT\xcb\xff\xff\x87\xc9\xff\xff\xbc\xcb\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xffT\xcb\xff\xff,\xca\xff\xff\xfc\xca\xff\xffT\xcb\xff\xff\xfc\xca\xff\xffT\xcb\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xfc\xca\xff\xff\xb7\xc8\xff\xffT\xcb\xff\xff\xb7\xc8\xff\xff$\xcb\xff\xff\xa8\xca\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\x98\xca\xff\xff\xe8\xcb\xff\xff\xd0\xcb\xff\xff\x80\xca\xff\xff\xc0\xcb\xff\xffh\xca\xff\xff\xa8\xcb\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\xb8\xc9\xff\xff\x90\xcb\xff\xffx\xcb\xff\xffx\xcb\xff\xff`\xcb\xff\xffx\xcb\xff\xffH\xcb\xff\xffx\xcb\xff\xff\xb8\xc7\xff\xffx\xcb\xff\xffx\xcb\xff\xffx\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffx\xcb\xff\xffx\xcb\xff\xffx\xcb\xff\xffx\xcb\xff\xff\x88\xc7\xff\xff\xb8\xc9\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffx\xcb\xff\xffH\xca\xff\xffH\xcb\xff\xffx\xcb\xff\xffH\xcb\xff\xffx\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xffH\xcb\xff\xff\xb8\xc6\xff\xffx\xcb\xff\xff\xb8\xc6\xff\xff`\xcb\xff\xff"
0x000028d7      4489fa         mov edx, r15d
0x000028da      48630491       movsxd rax, dword [rcx + rdx*4]
0x000028de      4801c8         add rax, rcx
0x000028e1      ffe0           jmp rax
0x000028e3      c644240e01     mov byte [rsp + 0xe], 1
0x000028e8      c644247c00     mov byte [rsp + 0x7c], 0
0x000028ed      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000028f0      48c744245000.  mov qword [rsp + 0x50], 0
0x000028f9      c644240f01     mov byte [rsp + 0xf], 1
0x000028fe      c644240d00     mov byte [rsp + 0xd], 0
0x00002903      488d05fb3700.  lea rax, [0x00006105]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000290a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002913      4531ff         xor r15d, r15d
0x00002916      c74424080200.  mov dword [rsp + 8], 2
0x0000291e      4889442448     mov qword [rsp + 0x48], rax
0x00002923      4531db         xor r11d, r11d
0x00002926      4889e8         mov rax, rbp
0x00002929      4589e0         mov r8d, r12d
0x0000292c      4c89dd         mov rbp, r11
0x0000292f      4989c3         mov r11, rax
0x00002932      660f1f440000   nop word [rax + rax]
0x00002938      4939eb         cmp r11, rbp
0x0000293b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000293f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002943      750d           jne 0x2952
0x00002945      488b442410     mov rax, qword [rsp + 0x10]
0x0000294a      803c2800       cmp byte [rax + rbp], 0
0x0000294e      410f95c4       setne r12b
0x00002952      4584e4         test r12b, r12b
0x00002955      0f8455060000   je 0x2fb0
0x0000295b      837c240802     cmp dword [rsp + 8], 2
0x00002960      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002965      4c8d0c2f       lea r9, [rdi + rbp]
0x00002969      0f95c0         setne al
0x0000296c      2244240d       and al, byte [rsp + 0xd]
0x00002970      4189c2         mov r10d, eax
0x00002973      0f84a7000000   je 0x2a20
0x00002979      488b442418     mov rax, qword [rsp + 0x18]
0x0000297e      4885c0         test rax, rax
0x00002981      0f8429040000   je 0x2db0
0x00002987      4983fbff       cmp r11, 0xffffffffffffffff
0x0000298b      488d5c0500     lea rbx, [rbp + rax]
0x00002990      752e           jne 0x29c0
0x00002992      4883f801       cmp rax, 1
0x00002996      7628           jbe 0x29c0
0x00002998      4488442438     mov byte [rsp + 0x38], r8b
0x0000299d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000029a2      4c894c2428     mov qword [rsp + 0x28], r9
0x000029a7      e8f4eaffff     call sym.imp.strlen
0x000029ac      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000029b2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000029b8      4989c3         mov r11, rax
0x000029bb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000029c0      4c39db         cmp rbx, r11
0x000029c3      4488542428     mov byte [rsp + 0x28], r10b
0x000029c8      0f87b2050000   ja 0x2f80
0x000029ce      488b542418     mov rdx, qword [rsp + 0x18]
0x000029d3      488b742448     mov rsi, qword [rsp + 0x48]
0x000029d8      4c89cf         mov rdi, r9
0x000029db      4c895c2440     mov qword [rsp + 0x40], r11
0x000029e0      4488442438     mov byte [rsp + 0x38], r8b
0x000029e5      4c894c2430     mov qword [rsp + 0x30], r9
0x000029ea      e861ebffff     call sym.imp.memcmp
0x000029ef      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000029f1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000029f6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000029fc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002a01      0f8579050000   jne 0x2f80
0x00002a07      807c240f00     cmp byte [rsp + 0xf], 0
0x00002a0c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002a12      0f857d0f0000   jne 0x3995
0x00002a18      0f1f84000000.  nop dword [rax + rax]
0x00002a20      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002a24      80fb7e         cmp bl, 0x7e
0x00002a27      0f871b030000   ja 0x2d48
0x00002a2d      488d0d583700.  lea rcx, [0x0000618c]
0x00002a34      0fb6d3         movzx edx, bl
0x00002a37      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002a3b      4801c8         add rax, rcx
0x00002a3e      ffe0           jmp rax
0x00002a40      4531d2         xor r10d, r10d
0x00002a43      4983fb01       cmp r11, 1
0x00002a47      0f95c0         setne al
0x00002a4a      4983fbff       cmp r11, 0xffffffffffffffff
0x00002a4e      750c           jne 0x2a5c
0x00002a50      488b442410     mov rax, qword [rsp + 0x10]
0x00002a55      80780100       cmp byte [rax + 1], 0
0x00002a59      0f95c0         setne al
0x00002a5c      837c240802     cmp dword [rsp + 8], 2
0x00002a61      0f94c2         sete dl
0x00002a64      84c0           test al, al
0x00002a66      0f844c020000   je 0x2cb8
0x00002a6c      4531e4         xor r12d, r12d
0x00002a6f      31c0           xor eax, eax
0x00002a71      0f1f80000000.  nop dword [rax]
0x00002a78      807c240d01     cmp byte [rsp + 0xd], 1
0x00002a7d      0f850f010000   jne 0x2b92
0x00002a83      84d2           test dl, dl
0x00002a85      0f8507010000   jne 0x2b92
0x00002a8b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002a90      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002a93      7414           je 0x2aa9
0x00002a95      89da           mov edx, ebx
0x00002a97      c0ea05         shr dl, 5
0x00002a9a      0fb6d2         movzx edx, dl
0x00002a9d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002aa0      0fa3da         bt edx, ebx
0x00002aa3      0f824a010000   jb 0x2bf3
0x00002aa9      4584d2         test r10b, r10b
0x00002aac      0f8541010000   jne 0x2bf3
0x00002ab2      83f001         xor eax, 1
0x00002ab5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002ab9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002abc      84c0           test al, al
0x00002abe      7420           je 0x2ae0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002ac0      4d39fd         cmp r13, r15
0x00002ac3      7605           jbe 0x2aca
0x00002ac5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002aca      498d4701       lea rax, [r15 + 1]
0x00002ace      4939c5         cmp r13, rax
0x00002ad1      7606           jbe 0x2ad9
0x00002ad3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002ad9      4983c702       add r15, 2
0x00002add      4531c0         xor r8d, r8d
0x00002ae0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002ae3      7304           jae 0x2ae9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002ae5      43881c3e       mov byte [r14 + r15], bl
0x00002ae9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002aee      4983c701       add r15, 1
0x00002af2      b800000000     mov eax, 0
0x00002af7      4584e4         test r12b, r12b
0x00002afa      0f44f8         cmove edi, eax
0x00002afd      40887c240e     mov byte [rsp + 0xe], dil
0x00002b02      e931feffff     jmp 0x2938
0x00002b07      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002b10      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002b13      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002b17      83f802         cmp eax, 2
0x00002b1a      0f84b8050000   je 0x30d8
0x00002b20      83f805         cmp eax, 5
0x00002b23      0f846f050000   je 0x3098
0x00002b29      83f802         cmp eax, 2
0x00002b2c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002b31      0f94c2         sete dl
0x00002b34      4531e4         xor r12d, r12d
0x00002b37      31c0           xor eax, eax
0x00002b39      e93affffff     jmp 0x2a78
0x00002b3e      6690           nop
0x00002b40      4531d2         xor r10d, r10d
0x00002b43      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002b48      0f8402050000   je 0x3050
0x00002b4e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002b53      31d2           xor edx, edx
0x00002b55      31c0           xor eax, eax
0x00002b57      bb27000000     mov ebx, 0x27                           ; '''
0x00002b5c      e917ffffff     jmp 0x2a78
0x00002b61      0f1f80000000.  nop dword [rax]
0x00002b68      ba09000000     mov edx, 9
0x00002b6d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002b72      837c240802     cmp dword [rsp + 8], 2
0x00002b77      0f94c0         sete al
0x00002b7a      2244240f       and al, byte [rsp + 0xf]
0x00002b7e      0f854a010000   jne 0x2cce
0x00002b84      807c240d00     cmp byte [rsp + 0xd], 0
0x00002b89      7565           jne 0x2bf0
0x00002b8b      89d3           mov ebx, edx
0x00002b8d      4531e4         xor r12d, r12d
0x00002b90      31c0           xor eax, eax
0x00002b92      807c240f00     cmp byte [rsp + 0xf], 0
0x00002b97      0f85eefeffff   jne 0x2a8b
0x00002b9d      e907ffffff     jmp 0x2aa9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002ba2      660f1f440000   nop word [rax + rax]
0x00002ba8      ba08000000     mov edx, 8
0x00002bad      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002bb2      ebd0           jmp 0x2b84
0x00002bb4      0f1f4000       nop dword [rax]
0x00002bb8      837c240802     cmp dword [rsp + 8], 2
0x00002bbd      0f84cd030000   je 0x2f90
0x00002bc3      807c240d00     cmp byte [rsp + 0xd], 0
0x00002bc8      0f8412020000   je 0x2de0
0x00002bce      807c240f00     cmp byte [rsp + 0xf], 0
0x00002bd3      0f8407020000   je 0x2de0
0x00002bd9      48837c241800   cmp qword [rsp + 0x18], 0
0x00002bdf      0f85b6030000   jne 0x2f9b
0x00002be5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002bea      660f1f440000   nop word [rax + rax]
0x00002bf0      4531e4         xor r12d, r12d
0x00002bf3      837c240802     cmp dword [rsp + 8], 2
0x00002bf8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002bfb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002c00      89d0           mov eax, edx
0x00002c02      0f8550080000   jne 0x3458
0x00002c08      4489c0         mov eax, r8d
0x00002c0b      83f001         xor eax, 1
0x00002c0e      20d0           and al, dl
0x00002c10      742f           je 0x2c41
0x00002c12      4d39fd         cmp r13, r15
0x00002c15      7605           jbe 0x2c1c
0x00002c17      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002c1c      498d5701       lea rdx, [r15 + 1]
0x00002c20      4939d5         cmp r13, rdx
0x00002c23      7606           jbe 0x2c2b
0x00002c25      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002c2b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00002c2f      4939d5         cmp r13, rdx
0x00002c32      7606           jbe 0x2c3a
0x00002c34      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002c3a      4983c703       add r15, 3
0x00002c3e      4189c0         mov r8d, eax
0x00002c41      4d39fd         cmp r13, r15
0x00002c44      7605           jbe 0x2c4b
0x00002c46      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002c4b      4983c701       add r15, 1
0x00002c4f      4883c501       add rbp, 1
0x00002c53      e988feffff     jmp 0x2ae0
0x00002c58      0f1f84000000.  nop dword [rax + rax]
0x00002c60      807c240d00     cmp byte [rsp + 0xd], 0
0x00002c65      0f85c8010000   jne 0x2e33
0x00002c6b      31d2           xor edx, edx
0x00002c6d      f644247801     test byte [rsp + 0x78], 1
0x00002c72      0f8413ffffff   je 0x2b8b
0x00002c78      4883c501       add rbp, 1
0x00002c7c      e9b7fcffff     jmp 0x2938
0x00002c81      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002c88      837c240802     cmp dword [rsp + 8], 2
0x00002c8d      0f94c2         sete dl
0x00002c90      31c0           xor eax, eax
0x00002c92      e9e1fdffff     jmp 0x2a78
0x00002c97      660f1f840000.  nop word [rax + rax]
0x00002ca0      ba07000000     mov edx, 7
0x00002ca5      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002caa      e9d5feffff     jmp 0x2b84
0x00002caf      90             nop
0x00002cb0      837c240802     cmp dword [rsp + 8], 2
0x00002cb5      0f94c2         sete dl
0x00002cb8      4885ed         test rbp, rbp
0x00002cbb      0f85abfdffff   jne 0x2a6c
0x00002cc1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002cc6      20d0           and al, dl
0x00002cc8      0f84aafdffff   je 0x2a78
0x00002cce      4c89dd         mov rbp, r11
0x00002cd1      c74424080200.  mov dword [rsp + 8], 2
0x00002cd9      e9fb060000     jmp 0x33d9
0x00002cde      6690           nop
0x00002ce0      837c240802     cmp dword [rsp + 8], 2
0x00002ce5      0f94c2         sete dl
0x00002ce8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00002ceb      ebd4           jmp 0x2cc1
0x00002ced      0f1f00         nop dword [rax]
0x00002cf0      837c240802     cmp dword [rsp + 8], 2
0x00002cf5      bb20000000     mov ebx, 0x20                           ; "@"
0x00002cfa      0f94c2         sete dl
0x00002cfd      ebc2           jmp 0x2cc1
0x00002cff      90             nop
0x00002d00      ba0d000000     mov edx, 0xd
0x00002d05      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002d0a      e963feffff     jmp 0x2b72
0x00002d0f      90             nop
0x00002d10      ba0c000000     mov edx, 0xc
0x00002d15      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002d1a      e965feffff     jmp 0x2b84
0x00002d1f      90             nop
0x00002d20      ba0b000000     mov edx, 0xb
0x00002d25      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002d2a      e955feffff     jmp 0x2b84
0x00002d2f      90             nop
0x00002d30      ba0a000000     mov edx, 0xa
0x00002d35      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00002d3a      e933feffff     jmp 0x2b72
0x00002d3f      90             nop
0x00002d40      4531d2         xor r10d, r10d
0x00002d43      0f1f440000     nop dword [rax + rax]
0x00002d48      48837c245801   cmp qword [rsp + 0x58], 1
0x00002d4e      0f85a4030000   jne 0x30f8
0x00002d54      4c895c2438     mov qword [rsp + 0x38], r11
0x00002d59      4488442430     mov byte [rsp + 0x30], r8b
0x00002d5e      4488542428     mov byte [rsp + 0x28], r10b
0x00002d63      e858e9ffff     call sym.imp.__ctype_b_loc
0x00002d68      488b08         mov rcx, qword [rax]
0x00002d6b      0fb6d3         movzx edx, bl
0x00002d6e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002d74      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002d7a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002d7f      bf01000000     mov edi, 1
0x00002d84      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002d88      66250040       and ax, 0x4000
0x00002d8c      410f95c4       setne r12b
0x00002d90      0f94c0         sete al
0x00002d93      2244240d       and al, byte [rsp + 0xd]
0x00002d97      84c0           test al, al
0x00002d99      0f8592090000   jne 0x3731
0x00002d9f      837c240802     cmp dword [rsp + 8], 2
0x00002da4      0f94c2         sete dl
0x00002da7      e9ccfcffff     jmp 0x2a78
0x00002dac      0f1f4000       nop dword [rax]
0x00002db0      410fb619       movzx ebx, byte [r9]
0x00002db4      80fb7e         cmp bl, 0x7e
0x00002db7      7787           ja 0x2d40
0x00002db9      488d0dc83500.  lea rcx, [0x00006388]
0x00002dc0      0fb6d3         movzx edx, bl
0x00002dc3      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002dc7      4801c8         add rax, rcx
0x00002dca      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00002dcc      0f1f4000       nop dword [rax]
0x00002dd0      4531d2         xor r10d, r10d
0x00002dd3      807c240d00     cmp byte [rsp + 0xd], 0
0x00002dd8      0f85f0fdffff   jne 0x2bce
0x00002dde      6690           nop
0x00002de0      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002de5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002dea      e995fdffff     jmp 0x2b84
0x00002def      90             nop
0x00002df0      ba0c000000     mov edx, 0xc
0x00002df5      4531d2         xor r10d, r10d
0x00002df8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002dfd      e982fdffff     jmp 0x2b84
0x00002e02      660f1f440000   nop word [rax + rax]
0x00002e08      ba0a000000     mov edx, 0xa
0x00002e0d      4531d2         xor r10d, r10d
0x00002e10      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002e15      e958fdffff     jmp 0x2b72
0x00002e1a      660f1f440000   nop word [rax + rax]
0x00002e20      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002e25      e9c6fdffff     jmp 0x2bf0
0x00002e2a      660f1f440000   nop word [rax + rax]
0x00002e30      4531d2         xor r10d, r10d
0x00002e33      837c240802     cmp dword [rsp + 8], 2
0x00002e38      0f94c2         sete dl
0x00002e3b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002e40      0f85940b0000   jne 0x39da
0x00002e46      4489c0         mov eax, r8d
0x00002e49      4c89f9         mov rcx, r15
0x00002e4c      83f001         xor eax, 1
0x00002e4f      20d0           and al, dl
0x00002e51      742d           je 0x2e80
0x00002e53      4d39fd         cmp r13, r15
0x00002e56      7605           jbe 0x2e5d
0x00002e58      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002e5d      498d4f01       lea rcx, [r15 + 1]
0x00002e61      4939cd         cmp r13, rcx
0x00002e64      7606           jbe 0x2e6c
0x00002e66      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002e6c      498d4f02       lea rcx, [r15 + 2]
0x00002e70      4939cd         cmp r13, rcx
0x00002e73      0f8730060000   ja 0x34a9
0x00002e79      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00002e7d      4189c0         mov r8d, eax
0x00002e80      4939cd         cmp r13, rcx
0x00002e83      7605           jbe 0x2e8a
0x00002e85      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002e8a      837c240802     cmp dword [rsp + 8], 2
0x00002e8f      4c8d7901       lea r15, [rcx + 1]
0x00002e93      0f8400060000   je 0x3499
0x00002e99      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002e9d      4c39d8         cmp rax, r11
0x00002ea0      7319           jae 0x2ebb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00002ea2      488b442410     mov rax, qword [rsp + 0x10]
0x00002ea7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00002eac      88442428       mov byte [rsp + 0x28], al
0x00002eb0      83e830         sub eax, 0x30
0x00002eb3      3c09           cmp al, 9
0x00002eb5      0f862e080000   jbe 0x36e9
0x00002ebb      4489e0         mov eax, r12d
0x00002ebe      bb30000000     mov ebx, 0x30                           ; '0'
0x00002ec3      4531e4         xor r12d, r12d
0x00002ec6      e9adfbffff     jmp 0x2a78                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00002ecb      0f1f440000     nop dword [rax + rax]
0x00002ed0      837c240802     cmp dword [rsp + 8], 2
0x00002ed5      4589d4         mov r12d, r10d
0x00002ed8      0f94c2         sete dl
0x00002edb      4531d2         xor r10d, r10d
0x00002ede      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002ee0      e993fbffff     jmp 0x2a78                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00002ee5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002ee8      837c240802     cmp dword [rsp + 8], 2
0x00002eed      0f94c2         sete dl
0x00002ef0      4531d2         xor r10d, r10d
0x00002ef3      e9c0fdffff     jmp 0x2cb8
0x00002ef8      0f1f84000000.  nop dword [rax + rax]
0x00002f00      837c240802     cmp dword [rsp + 8], 2
0x00002f05      0f94c2         sete dl
0x00002f08      4531d2         xor r10d, r10d
0x00002f0b      4531e4         xor r12d, r12d
0x00002f0e      e9aefdffff     jmp 0x2cc1
0x00002f13      0f1f440000     nop dword [rax + rax]
0x00002f18      837c240802     cmp dword [rsp + 8], 2
0x00002f1d      4589d4         mov r12d, r10d
0x00002f20      bb20000000     mov ebx, 0x20                           ; "@"
0x00002f25      0f94c2         sete dl
0x00002f28      4531d2         xor r10d, r10d
0x00002f2b      e991fdffff     jmp 0x2cc1
0x00002f30      ba0d000000     mov edx, 0xd
0x00002f35      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00002f38      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002f3d      e930fcffff     jmp 0x2b72
0x00002f42      660f1f440000   nop word [rax + rax]
0x00002f48      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002f4d      e99efcffff     jmp 0x2bf0
0x00002f52      660f1f440000   nop word [rax + rax]
0x00002f58      ba09000000     mov edx, 9
0x00002f5d      4531d2         xor r10d, r10d
0x00002f60      bb74000000     mov ebx, 0x74                           ; 't'
0x00002f65      e908fcffff     jmp 0x2b72
0x00002f6a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00002f70      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002f75      e976fcffff     jmp 0x2bf0
0x00002f7a      660f1f440000   nop word [rax + rax]
0x00002f80      4531d2         xor r10d, r10d
0x00002f83      e998faffff     jmp 0x2a20
0x00002f88      0f1f84000000.  nop dword [rax + rax]
0x00002f90      807c240f00     cmp byte [rsp + 0xf], 0
0x00002f95      0f8565090000   jne 0x3900
0x00002f9b      4883c501       add rbp, 1
0x00002f9f      4489c0         mov eax, r8d
0x00002fa2      4531e4         xor r12d, r12d
0x00002fa5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002faa      e90dfbffff     jmp 0x2abc
0x00002faf      90             nop
0x00002fb0      837c240802     cmp dword [rsp + 8], 2
0x00002fb5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00002fba      4589c4         mov r12d, r8d
0x00002fbd      4c89dd         mov rbp, r11
0x00002fc0      0f94c2         sete dl
0x00002fc3      89d8           mov eax, ebx
0x00002fc5      4d85ff         test r15, r15
0x00002fc8      0f94c1         sete cl
0x00002fcb      21d0           and eax, edx
0x00002fcd      20c8           and al, cl
0x00002fcf      0f85610a0000   jne 0x3a36                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00002fd5      89d8           mov eax, ebx
0x00002fd7      83f001         xor eax, 1
0x00002fda      20c2           and dl, al
0x00002fdc      0f846a090000   je 0x394c
0x00002fe2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00002fe7      0f845d090000   je 0x394a
0x00002fed      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00002ff2      0f85f5090000   jne 0x39ed
0x00002ff8      4d85ed         test r13, r13
0x00002ffb      0f94c0         sete al
0x00002ffe      48837c245000   cmp qword [rsp + 0x50], 0
0x00003004      0f95c2         setne dl
0x00003007      20d0           and al, dl
0x00003009      0f841d0a0000   je 0x3a2c
0x0000300f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003014      488d1dea3000.  lea rbx, [0x00006105]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000301b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000301f      c74424080200.  mov dword [rsp + 8], 2
0x00003027      41bf01000000   mov r15d, 1
0x0000302d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003036      c644240f00     mov byte [rsp + 0xf], 0
0x0000303b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003040      8844247c       mov byte [rsp + 0x7c], al
0x00003044      e9daf8ffff     jmp 0x2923
0x00003049      0f1f80000000.  nop dword [rax]
0x00003050      807c240f00     cmp byte [rsp + 0xf], 0
0x00003055      0f85a5080000   jne 0x3900
0x0000305b      4d85ed         test r13, r13
0x0000305e      0f84fc030000   je 0x3460                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003064      31d2           xor edx, edx
0x00003066      48837c245000   cmp qword [rsp + 0x50], 0
0x0000306c      0f85ee030000   jne 0x3460                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003072      4c896c2450     mov qword [rsp + 0x50], r13
0x00003077      4983c703       add r15, 3
0x0000307b      31c0           xor eax, eax
0x0000307d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003082      4531c0         xor r8d, r8d
0x00003085      4989d5         mov r13, rdx
0x00003088      bb27000000     mov ebx, 0x27                           ; '''
0x0000308d      e917faffff     jmp 0x2aa9
0x00003092      660f1f440000   nop word [rax + rax]
0x00003098      f644247804     test byte [rsp + 0x78], 4
0x0000309d      7421           je 0x30c0
0x0000309f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000030a3      4c39d9         cmp rcx, r11
0x000030a6      7318           jae 0x30c0
0x000030a8      488b442410     mov rax, qword [rsp + 0x10]
0x000030ad      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000030b2      0f848a070000   je 0x3842
0x000030b8      0f1f84000000.  nop dword [rax + rax]
0x000030c0      31d2           xor edx, edx
0x000030c2      4531e4         xor r12d, r12d
0x000030c5      31c0           xor eax, eax
0x000030c7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000030cc      e9a7f9ffff     jmp 0x2a78
0x000030d1      0f1f80000000.  nop dword [rax]
0x000030d8      807c240f00     cmp byte [rsp + 0xf], 0
0x000030dd      0f851d080000   jne 0x3900
0x000030e3      4531e4         xor r12d, r12d
0x000030e6      31c0           xor eax, eax
0x000030e8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000030ed      e9b7f9ffff     jmp 0x2aa9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000030f2      660f1f440000   nop word [rax + rax]
0x000030f8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003100      4983fbff       cmp r11, 0xffffffffffffffff
0x00003104      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003110      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003115      752d           jne 0x3144
0x00003117      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000311c      4488442440     mov byte [rsp + 0x40], r8b
0x00003121      4488542438     mov byte [rsp + 0x38], r10b
0x00003126      4c894c2430     mov qword [rsp + 0x30], r9
0x0000312b      e870e3ffff     call sym.imp.strlen
0x00003130      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003136      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000313c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000313f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003144      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000314c      31c9           xor ecx, ecx
0x0000314e      885c247e       mov byte [rsp + 0x7e], bl
0x00003152      448844247d     mov byte [rsp + 0x7d], r8b
0x00003157      4889cb         mov rbx, rcx
0x0000315a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003162      4889442438     mov qword [rsp + 0x38], rax
0x00003167      448854247f     mov byte [rsp + 0x7f], r10b
0x0000316c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003174      4c89742440     mov qword [rsp + 0x40], r14
0x00003179      4c896c2470     mov qword [rsp + 0x70], r13
0x0000317e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003183      488b442410     mov rax, qword [rsp + 0x10]
0x00003188      4c8d741d00     lea r14, [rbp + rbx]
0x0000318d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003192      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003197      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000319c      4e8d2c30       lea r13, [rax + r14]
0x000031a0      4c29f2         sub rdx, r14
0x000031a3      4c89ee         mov rsi, r13
0x000031a6      e805230000     call sym.rpl_mbrtowc
0x000031ab      4885c0         test rax, rax
0x000031ae      4989c7         mov r15, rax
0x000031b1      744e           je 0x3201
0x000031b3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000031b7      0f8418060000   je 0x37d5
0x000031bd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000031c1      0f849a050000   je 0x3761
0x000031c7      837c240802     cmp dword [rsp + 8], 2
0x000031cc      0f94c0         sete al
0x000031cf      2244240f       and al, byte [rsp + 0xf]
0x000031d3      0f8597010000   jne 0x3370
0x000031d9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000031e0      e8cbe4ffff     call sym.imp.iswprint
0x000031e5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000031ea      85c0           test eax, eax
0x000031ec      b800000000     mov eax, 0
0x000031f1      440f44e0       cmove r12d, eax
0x000031f5      4c01fb         add rbx, r15
0x000031f8      e8a3e4ffff     call sym.imp.mbsinit
0x000031fd      85c0           test eax, eax
0x000031ff      7482           je 0x3183
0x00003201      4489e2         mov edx, r12d
0x00003204      4889df         mov rdi, rbx
0x00003207      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000320d      83f201         xor edx, 1
0x00003210      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003215      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000321b      2254240d       and dl, byte [rsp + 0xd]
0x0000321f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003227      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000322c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003231      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003236      4883ff01       cmp rdi, 1
0x0000323a      0f86fb050000   jbe 0x383b
0x00003240      4889f9         mov rcx, rdi
0x00003243      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003245      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000324b      4801e9         add rcx, rbp
0x0000324e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003253      e9b6000000     jmp 0x330e
0x00003258      0f1f84000000.  nop dword [rax + rax]
0x00003260      837c240802     cmp dword [rsp + 8], 2
0x00003265      0f94c0         sete al
0x00003268      4584c9         test r9b, r9b
0x0000326b      0f85af040000   jne 0x3720
0x00003271      4489c6         mov esi, r8d
0x00003274      83f601         xor esi, 1
0x00003277      4020f0         and al, sil
0x0000327a      742f           je 0x32ab                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000327c      4d39fd         cmp r13, r15
0x0000327f      7605           jbe 0x3286
0x00003281      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003286      498d7701       lea rsi, [r15 + 1]
0x0000328a      4939f5         cmp r13, rsi
0x0000328d      7606           jbe 0x3295                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000328f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003295      498d7702       lea rsi, [r15 + 2]
0x00003299      4939f5         cmp r13, rsi
0x0000329c      7606           jbe 0x32a4
0x0000329e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000032a4      4983c703       add r15, 3
0x000032a8      4189c0         mov r8d, eax
0x000032ab      4d39fd         cmp r13, r15
0x000032ae      7605           jbe 0x32b5
0x000032b0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000032b5      498d4701       lea rax, [r15 + 1]
0x000032b9      4939c5         cmp r13, rax
0x000032bc      760d           jbe 0x32cb
0x000032be      89d8           mov eax, ebx
0x000032c0      c0e806         shr al, 6
0x000032c3      83c030         add eax, 0x30
0x000032c6      4388443e01     mov byte [r14 + r15 + 1], al
0x000032cb      498d4702       lea rax, [r15 + 2]
0x000032cf      4939c5         cmp r13, rax
0x000032d2      7610           jbe 0x32e4
0x000032d4      89d8           mov eax, ebx
0x000032d6      c0e803         shr al, 3
0x000032d9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000032dc      83c030         add eax, 0x30
0x000032df      4388443e02     mov byte [r14 + r15 + 2], al
0x000032e4      83e307         and ebx, 7
0x000032e7      4883c501       add rbp, 1
0x000032eb      4983c703       add r15, 3
0x000032ef      83c330         add ebx, 0x30
0x000032f2      4839cd         cmp rbp, rcx
0x000032f5      0f83e5f7ffff   jae 0x2ae0
0x000032fb      89d6           mov esi, edx
0x000032fd      4d39fd         cmp r13, r15
0x00003300      7604           jbe 0x3306
0x00003302      43881c3e       mov byte [r14 + r15], bl
0x00003306      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000330a      4983c701       add r15, 1
0x0000330e      84d2           test dl, dl
0x00003310      0f854affffff   jne 0x3260
0x00003316      89f0           mov eax, esi
0x00003318      83f001         xor eax, 1
0x0000331b      4421c0         and eax, r8d
0x0000331e      4584d2         test r10b, r10b
0x00003321      740e           je 0x3331
0x00003323      4d39fd         cmp r13, r15
0x00003326      7605           jbe 0x332d
0x00003328      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000332d      4983c701       add r15, 1
0x00003331      4883c501       add rbp, 1
0x00003335      4839cd         cmp rbp, rcx
0x00003338      0f837ef7ffff   jae 0x2abc
0x0000333e      84c0           test al, al
0x00003340      0f84f8030000   je 0x373e
0x00003346      4d39fd         cmp r13, r15
0x00003349      7605           jbe 0x3350
0x0000334b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003350      498d4701       lea rax, [r15 + 1]
0x00003354      4939c5         cmp r13, rax
0x00003357      7606           jbe 0x335f
0x00003359      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000335f      4983c702       add r15, 2
0x00003363      4531d2         xor r10d, r10d
0x00003366      4531c0         xor r8d, r8d
0x00003369      eb92           jmp 0x32fd
0x0000336b      0f1f440000     nop dword [rax + rax]
0x00003370      4983ff01       cmp r15, 1
0x00003374      0f845ffeffff   je 0x31d9
0x0000337a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000337f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003383      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003388      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000338c      eb0f           jmp 0x339d
0x0000338e      6690           nop
0x00003390      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003394      4939d0         cmp r8, rdx
0x00003397      0f843cfeffff   je 0x31d9
0x0000339d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000033a0      83e95b         sub ecx, 0x5b
0x000033a3      80f921         cmp cl, 0x21
0x000033a6      77e8           ja 0x3390                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000033a8      be01000000     mov esi, 1
0x000033ad      48d3e6         shl rsi, cl
0x000033b0      4889f1         mov rcx, rsi
0x000033b3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000033bd      4885f1         test rcx, rsi
0x000033c0      74ce           je 0x3390
0x000033c2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000033c7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000033cc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000033d1      c74424080200.  mov dword [rsp + 8], 2
0x000033d9      807c240d00     cmp byte [rsp + 0xd], 0
0x000033de      7410           je 0x33f0
0x000033e0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000033e2      b804000000     mov eax, 4
0x000033e7      0f44442408     cmove eax, dword [rsp + 8]
0x000033ec      89442408       mov dword [rsp + 8], eax
0x000033f0      4883ec08       sub rsp, 8
0x000033f4      4889e9         mov rcx, rbp
0x000033f7      4c89ee         mov rsi, r13
0x000033fa      ff742468       push qword [rsp + 0x68]
0x000033fe      ff742478       push qword [rsp + 0x78]
0x00003402      4c89f7         mov rdi, r14
0x00003405      6a00           push 0
0x00003407      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000340f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003414      488b542430     mov rdx, qword [rsp + 0x30]
0x00003419      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000341d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003422      4883c420       add rsp, 0x20
0x00003426      4989c7         mov r15, rax
0x00003429      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003431      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000343a      4c89f8         mov rax, r15
0x0000343d      0f8500060000   jne 0x3a43
0x00003443      4881c4b80000.  add rsp, 0xb8
0x0000344a      5b             pop rbx
0x0000344b      5d             pop rbp
0x0000344c      415c           pop r12
0x0000344e      415d           pop r13
0x00003450      415e           pop r14
0x00003452      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003454      c3             ret
0x00003455      0f1f00         nop dword [rax]
0x00003458      4c89dd         mov rbp, r11
0x0000345b      e979ffffff     jmp 0x33d9
0x00003460      4d39fd         cmp r13, r15
0x00003463      7605           jbe 0x346a
0x00003465      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000346a      498d4701       lea rax, [r15 + 1]
0x0000346e      4939c5         cmp r13, rax
0x00003471      7606           jbe 0x3479
0x00003473      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003479      498d4702       lea rax, [r15 + 2]
0x0000347d      4939c5         cmp r13, rax
0x00003480      0f86ec050000   jbe 0x3a72
0x00003486      4c89ea         mov rdx, r13
0x00003489      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000348f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003494      e9d9fbffff     jmp 0x3072
0x00003499      4489e0         mov eax, r12d
0x0000349c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000034a1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000034a4      e900f6ffff     jmp 0x2aa9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000034a9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000034af      e9c5f9ffff     jmp 0x2e79
0x000034b4      85db           test ebx, ebx
0x000034b6      0f8527f4ffff   jne 0x28e3
0x000034bc      c644240d01     mov byte [rsp + 0xd], 1
0x000034c1      4d85ed         test r13, r13
0x000034c4      0f8590050000   jne 0x3a5a
0x000034ca      488d05342c00.  lea rax, [0x00006105]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000034d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000034da      c644240e01     mov byte [rsp + 0xe], 1
0x000034df      c644247c00     mov byte [rsp + 0x7c], 0
0x000034e4      4531e4         xor r12d, r12d
0x000034e7      c644240f00     mov byte [rsp + 0xf], 0
0x000034ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000034f5      4889442448     mov qword [rsp + 0x48], rax
0x000034fa      41bf01000000   mov r15d, 1
0x00003500      c74424080200.  mov dword [rsp + 8], 2
0x00003508      e916f4ffff     jmp 0x2923                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000350d      0f1f00         nop dword [rax]
0x00003510      85db           test ebx, ebx
0x00003512      0f85f5030000   jne 0x390d
0x00003518      4d85ed         test r13, r13
0x0000351b      0f8425020000   je 0x3746
0x00003521      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003525      c644240e01     mov byte [rsp + 0xe], 1
0x0000352a      4531e4         xor r12d, r12d
0x0000352d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003532      48c744245000.  mov qword [rsp + 0x50], 0
0x0000353b      488d05c12b00.  lea rax, str.l______l                   ; 0x6103 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003542      c644240f00     mov byte [rsp + 0xf], 0
0x00003547      c644240d01     mov byte [rsp + 0xd], 1
0x0000354c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003555      41bf01000000   mov r15d, 1
0x0000355b      4889442448     mov qword [rsp + 0x48], rax
0x00003560      e9bef3ffff     jmp 0x2923
0x00003565      488d05972b00.  lea rax, str.l______l                   ; 0x6103 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000356c      c644240e01     mov byte [rsp + 0xe], 1
0x00003571      c644247c00     mov byte [rsp + 0x7c], 0
0x00003576      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003579      48c744245000.  mov qword [rsp + 0x50], 0
0x00003582      c644240f01     mov byte [rsp + 0xf], 1
0x00003587      c644240d01     mov byte [rsp + 0xd], 1
0x0000358c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003595      4531ff         xor r15d, r15d
0x00003598      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000359d      c74424080500.  mov dword [rsp + 8], 5
0x000035a5      e979f3ffff     jmp 0x2923
0x000035aa      c644240e01     mov byte [rsp + 0xe], 1
0x000035af      c644247c00     mov byte [rsp + 0x7c], 0
0x000035b4      4531e4         xor r12d, r12d
0x000035b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000035c0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000035c5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000035c8      c644240d01     mov byte [rsp + 0xd], 1
0x000035cd      48c744241800.  mov qword [rsp + 0x18], 0
0x000035d6      48c744244800.  mov qword [rsp + 0x48], 0
0x000035df      e93ff3ffff     jmp 0x2923
0x000035e4      837c24080a     cmp dword [rsp + 8], 0xa
0x000035e9      7456           je 0x3641
0x000035eb      488d35152b00.  lea rsi, [0x00006107]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000035f2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000035f4      ba05000000     mov edx, 5
0x000035f9      e882deffff     call sym.imp.dcgettext
0x000035fe      4889c1         mov rcx, rax
0x00003601      4889442468     mov qword [rsp + 0x68], rax
0x00003606      488d05fa2a00.  lea rax, [0x00006107]                   ; "`"
0x0000360d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003610      0f8498030000   je 0x39ae
0x00003616      488d35e82a00.  lea rsi, [0x00006105]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000361d      31ff           xor edi, edi
0x0000361f      ba05000000     mov edx, 5
0x00003624      e857deffff     call sym.imp.dcgettext
0x00003629      4889c1         mov rcx, rax
0x0000362c      4889442460     mov qword [rsp + 0x60], rax
0x00003631      488d05cd2a00.  lea rax, [0x00006105]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003638      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000363b      0f8483030000   je 0x39c4
0x00003641      4531ff         xor r15d, r15d
0x00003644      85db           test ebx, ebx
0x00003646      0f84c1010000   je 0x380d
0x0000364c      85db           test ebx, ebx
0x0000364e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003653      0f9544240f     setne byte [rsp + 0xf]
0x00003658      4531e4         xor r12d, r12d
0x0000365b      4889df         mov rdi, rbx
0x0000365e      e83ddeffff     call sym.imp.strlen
0x00003663      48895c2448     mov qword [rsp + 0x48], rbx
0x00003668      4889442418     mov qword [rsp + 0x18], rax
0x0000366d      c644240e01     mov byte [rsp + 0xe], 1
0x00003672      c644247c00     mov byte [rsp + 0x7c], 0
0x00003677      48c744245000.  mov qword [rsp + 0x50], 0
0x00003680      c644240d01     mov byte [rsp + 0xd], 1
0x00003685      e999f2ffff     jmp 0x2923
0x0000368a      c644240e01     mov byte [rsp + 0xe], 1
0x0000368f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003694      4531e4         xor r12d, r12d
0x00003697      48c744245000.  mov qword [rsp + 0x50], 0
0x000036a0      c644240f00     mov byte [rsp + 0xf], 0
0x000036a5      4531ff         xor r15d, r15d
0x000036a8      c644240d00     mov byte [rsp + 0xd], 0
0x000036ad      48c744241800.  mov qword [rsp + 0x18], 0
0x000036b6      48c744244800.  mov qword [rsp + 0x48], 0
0x000036bf      e95ff2ffff     jmp 0x2923
0x000036c4      c644240e01     mov byte [rsp + 0xe], 1
0x000036c9      c644247c00     mov byte [rsp + 0x7c], 0
0x000036ce      4531e4         xor r12d, r12d
0x000036d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000036da      c644240f01     mov byte [rsp + 0xf], 1
0x000036df      c644240d01     mov byte [rsp + 0xd], 1
0x000036e4      e91af2ffff     jmp 0x2903
0x000036e9      4d39fd         cmp r13, r15
0x000036ec      7605           jbe 0x36f3
0x000036ee      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000036f3      488d4102       lea rax, [rcx + 2]
0x000036f7      4939c5         cmp r13, rax
0x000036fa      7606           jbe 0x3702
0x000036fc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003702      4489e0         mov eax, r12d
0x00003705      4c8d7903       lea r15, [rcx + 3]
0x00003709      4531e4         xor r12d, r12d
0x0000370c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003711      e962f3ffff     jmp 0x2a78
0x00003716      662e0f1f8400.  nop word cs:[rax + rax]
0x00003720      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003725      4c89dd         mov rbp, r11
0x00003728      885c240d       mov byte [rsp + 0xd], bl
0x0000372c      e9a8fcffff     jmp 0x33d9
0x00003731      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003736      4531e4         xor r12d, r12d
0x00003739      e902fbffff     jmp 0x3240
0x0000373e      4531d2         xor r10d, r10d
0x00003741      e9b7fbffff     jmp 0x32fd
0x00003746      48c744245000.  mov qword [rsp + 0x50], 0
0x0000374f      c644240e01     mov byte [rsp + 0xe], 1
0x00003754      4531e4         xor r12d, r12d
0x00003757      c644247c00     mov byte [rsp + 0x7c], 0
0x0000375c      e9dafdffff     jmp 0x353b
0x00003761      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003766      4c89f6         mov rsi, r14
0x00003769      4c89e9         mov rcx, r13
0x0000376c      4889d8         mov rax, rbx
0x0000376f      4889df         mov rdi, rbx
0x00003772      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003778      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000377d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003785      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003788      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000378e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003796      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000379b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000037a0      7326           jae 0x37c8
0x000037a2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000037a5      7510           jne 0x37b7
0x000037a7      eb1f           jmp 0x37c8
0x000037a9      0f1f80000000.  nop dword [rax]
0x000037b0      41803c0100     cmp byte [r9 + rax], 0
0x000037b5      740e           je 0x37c5
0x000037b7      4883c001       add rax, 1
0x000037bb      488d540500     lea rdx, [rbp + rax]
0x000037c0      4939d3         cmp r11, rdx
0x000037c3      77eb           ja 0x37b0
0x000037c5      4889c7         mov rdi, rax
0x000037c8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000037cd      4531e4         xor r12d, r12d
0x000037d0      e961faffff     jmp 0x3236
0x000037d5      4889df         mov rdi, rbx
0x000037d8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000037de      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000037e3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000037e9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000037f1      4531e4         xor r12d, r12d
0x000037f4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000037f9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000037fe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003803      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003808      e929faffff     jmp 0x3236
0x0000380d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003812      0fb602         movzx eax, byte [rdx]
0x00003815      84c0           test al, al
0x00003817      0f842ffeffff   je 0x364c
0x0000381d      0f1f00         nop dword [rax]
0x00003820      4d39fd         cmp r13, r15
0x00003823      7604           jbe 0x3829
0x00003825      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003829      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000382d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003832      84c0           test al, al
0x00003834      75ea           jne 0x3820
0x00003836      e911feffff     jmp 0x364c
0x0000383b      89d0           mov eax, edx
0x0000383d      e955f5ffff     jmp 0x2d97
0x00003842      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003846      80fb3e         cmp bl, 0x3e
0x00003849      0f8771f8ffff   ja 0x30c0
0x0000384f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003859      480fa3d8       bt rax, rbx
0x0000385d      0f835df8ffff   jae 0x30c0
0x00003863      807c240f00     cmp byte [rsp + 0xf], 0
0x00003868      0f85e4010000   jne 0x3a52                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000386e      4d39fd         cmp r13, r15
0x00003871      7605           jbe 0x3878
0x00003873      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003878      498d4701       lea rax, [r15 + 1]
0x0000387c      4939c5         cmp r13, rax
0x0000387f      7606           jbe 0x3887
0x00003881      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003887      498d4702       lea rax, [r15 + 2]
0x0000388b      4939c5         cmp r13, rax
0x0000388e      7606           jbe 0x3896
0x00003890      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003896      498d4703       lea rax, [r15 + 3]
0x0000389a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000389d      7606           jbe 0x38a5
0x0000389f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000038a5      4983c704       add r15, 4
0x000038a9      31d2           xor edx, edx
0x000038ab      4531e4         xor r12d, r12d
0x000038ae      31c0           xor eax, eax
0x000038b0      4889cd         mov rbp, rcx
0x000038b3      e9c0f1ffff     jmp 0x2a78
0x000038b8      85db           test ebx, ebx
0x000038ba      0f8488010000   je 0x3a48
0x000038c0      488d053e2800.  lea rax, [0x00006105]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000038c7      c644240e01     mov byte [rsp + 0xe], 1
0x000038cc      c644247c00     mov byte [rsp + 0x7c], 0
0x000038d1      4531e4         xor r12d, r12d
0x000038d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000038dd      c644240f01     mov byte [rsp + 0xf], 1
0x000038e2      c644240d00     mov byte [rsp + 0xd], 0
0x000038e7      48c744241801.  mov qword [rsp + 0x18], 1
0x000038f0      4531ff         xor r15d, r15d
0x000038f3      4889442448     mov qword [rsp + 0x48], rax
0x000038f8      e926f0ffff     jmp 0x2923
0x000038fd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003900      4c89dd         mov rbp, r11
0x00003903      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003908      e9ccfaffff     jmp 0x33d9
0x0000390d      488d05ef2700.  lea rax, str.l______l                   ; 0x6103 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003914      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003919      c644247c00     mov byte [rsp + 0x7c], 0
0x0000391e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003921      48c744245000.  mov qword [rsp + 0x50], 0
0x0000392a      c644240f01     mov byte [rsp + 0xf], 1
0x0000392f      c644240d01     mov byte [rsp + 0xd], 1
0x00003934      48c744241801.  mov qword [rsp + 0x18], 1
0x0000393d      4531ff         xor r15d, r15d
0x00003940      4889442448     mov qword [rsp + 0x48], rax
0x00003945      e9d9efffff     jmp 0x2923
0x0000394a      89d0           mov eax, edx
0x0000394c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003951      4885db         test rbx, rbx
0x00003954      742c           je 0x3982
0x00003956      84c0           test al, al
0x00003958      7428           je 0x3982
0x0000395a      0fb60b         movzx ecx, byte [rbx]
0x0000395d      4889d8         mov rax, rbx
0x00003960      84c9           test cl, cl
0x00003962      741e           je 0x3982
0x00003964      4c89fa         mov rdx, r15
0x00003967      4c29f8         sub rax, r15
0x0000396a      4939d5         cmp r13, rdx
0x0000396d      7604           jbe 0x3973
0x0000396f      41880c16       mov byte [r14 + rdx], cl
0x00003973      4883c201       add rdx, 1
0x00003977      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000397b      84c9           test cl, cl
0x0000397d      75eb           jne 0x396a
0x0000397f      4989d7         mov r15, rdx
0x00003982      4d39fd         cmp r13, r15
0x00003985      0f869efaffff   jbe 0x3429
0x0000398b      43c6043e00     mov byte [r14 + r15], 0
0x00003990      e994faffff     jmp 0x3429
0x00003995      837c240802     cmp dword [rsp + 8], 2
0x0000399a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000399f      4c89dd         mov rbp, r11
0x000039a2      0f94c0         sete al
0x000039a5      885c240d       mov byte [rsp + 0xd], bl
0x000039a9      e92bfaffff     jmp 0x33d9
0x000039ae      8b742408       mov esi, dword [rsp + 8]
0x000039b2      4889cf         mov rdi, rcx
0x000039b5      e8a6edffff     call sym.gettext_quote.part.1
0x000039ba      4889442468     mov qword [rsp + 0x68], rax
0x000039bf      e952fcffff     jmp 0x3616
0x000039c4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000039c8      4889cf         mov rdi, rcx
0x000039cb      e890edffff     call sym.gettext_quote.part.1
0x000039d0      4889442460     mov qword [rsp + 0x60], rax
0x000039d5      e967fcffff     jmp 0x3641
0x000039da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000039df      4c89dd         mov rbp, r11
0x000039e2      89d0           mov eax, edx
0x000039e4      885c240d       mov byte [rsp + 0xd], bl
0x000039e8      e9ecf9ffff     jmp 0x33d9
0x000039ed      4883ec08       sub rsp, 8
0x000039f1      41b805000000   mov r8d, 5
0x000039f7      4c89d9         mov rcx, r11
0x000039fa      ff742468       push qword [rsp + 0x68]
0x000039fe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003a02      4c89f7         mov rdi, r14
0x00003a05      ff742438       push qword [rsp + 0x38]
0x00003a09      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003a11      488b542430     mov rdx, qword [rsp + 0x30]
0x00003a16      488b742470     mov rsi, qword [rsp + 0x70]
0x00003a1b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003a20      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003a24      4989c7         mov r15, rax
0x00003a27      e9fdf9ffff     jmp 0x3429
0x00003a2c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003a31      e916ffffff     jmp 0x394c
0x00003a36      c74424080200.  mov dword [rsp + 8], 2
0x00003a3e      e996f9ffff     jmp 0x33d9
0x00003a43      e868daffff     call sym.imp.__stack_chk_fail
0x00003a48      c644240d00     mov byte [rsp + 0xd], 0
0x00003a4d      e96ffaffff     jmp 0x34c1
0x00003a52      4c89dd         mov rbp, r11
0x00003a55      e996f9ffff     jmp 0x33f0
0x00003a5a      c644240e01     mov byte [rsp + 0xe], 1
0x00003a5f      31c0           xor eax, eax
0x00003a61      4531e4         xor r12d, r12d
0x00003a64      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a6d      e9a2f5ffff     jmp 0x3014
0x00003a72      4c89ea         mov rdx, r13
0x00003a75      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003a7a      e9f3f5ffff     jmp 0x3072
0x00003a7f      e86cd9ffff     call sym.imp.abort
0x00003a84      6690           nop
0x00003a86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003a90      4157           push r15
0x00003a92      4156           push r14
0x00003a94      4c63ff         movsxd r15, edi
0x00003a97      4155           push r13
0x00003a99      4154           push r12
0x00003a9b      4989d6         mov r14, rdx
0x00003a9e      55             push rbp
0x00003a9f      53             push rbx
0x00003aa0      4889cd         mov rbp, rcx
0x00003aa3      4883ec28       sub rsp, 0x28
0x00003aa7      4889742408     mov qword [rsp + 8], rsi
0x00003aac      e84fd9ffff     call sym.imp.__errno_location
0x00003ab1      4989c5         mov r13, rax
0x00003ab4      8b00           mov eax, dword [rax]
0x00003ab6      4585ff         test r15d, r15d
0x00003ab9      488b1da04520.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003ac0      89442418       mov dword [rsp + 0x18], eax
0x00003ac4      0f8867010000   js 0x3c31
0x00003aca      44393d874520.  cmp dword [obj.nslots], r15d            ; [0x208058:4]=1
0x00003ad1      7f62           jg 0x3b35
0x00003ad3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003ada      0f8456010000   je 0x3c36
0x00003ae0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003ae4      488d05854520.  lea rax, obj.slotvec0                   ; 0x208070
0x00003aeb      4963f4         movsxd rsi, r12d
0x00003aee      48c1e604       shl rsi, 4
0x00003af2      4839c3         cmp rbx, rax
0x00003af5      0f8415010000   je 0x3c10
0x00003afb      4889df         mov rdi, rbx
0x00003afe      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003b03      4889c3         mov rbx, rax
0x00003b06      488905534520.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003b0d      48633d444520.  movsxd rdi, dword [obj.nslots]          ; [0x208058:4]=1
0x00003b14      4489e2         mov edx, r12d
0x00003b17      31f6           xor esi, esi
0x00003b19      29fa           sub edx, edi
0x00003b1b      48c1e704       shl rdi, 4
0x00003b1f      4863d2         movsxd rdx, edx
0x00003b22      4801df         add rdi, rbx
0x00003b25      48c1e204       shl rdx, 4
0x00003b29      e802daffff     call sym.imp.memset
0x00003b2e      448925234520.  mov dword [obj.nslots], r12d            ; [0x208058:4]=1
0x00003b35      8b4504         mov eax, dword [rbp + 4]
0x00003b38      49c1e704       shl r15, 4
0x00003b3c      4883ec08       sub rsp, 8
0x00003b40      4c01fb         add rbx, r15
0x00003b43      4c8d7d08       lea r15, [rbp + 8]
0x00003b47      448b4500       mov r8d, dword [rbp]
0x00003b4b      4c8b1b         mov r11, qword [rbx]
0x00003b4e      4c8b6308       mov r12, qword [rbx + 8]
0x00003b52      4c89f1         mov rcx, r14
0x00003b55      83c801         or eax, 1
0x00003b58      89442424       mov dword [rsp + 0x24], eax
0x00003b5c      ff7530         push qword [rbp + 0x30]
0x00003b5f      4189c1         mov r9d, eax
0x00003b62      ff7528         push qword [rbp + 0x28]
0x00003b65      4157           push r15
0x00003b67      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003b6a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003b6f      4c89e7         mov rdi, r12
0x00003b72      4c895c2430     mov qword [rsp + 0x30], r11
0x00003b77      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003b7c      4883c420       add rsp, 0x20
0x00003b80      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003b85      4939c3         cmp r11, rax
0x00003b88      7767           ja 0x3bf1
0x00003b8a      488d7001       lea rsi, [rax + 1]
0x00003b8e      488d056b4520.  lea rax, obj.slot0                      ; 0x208100
0x00003b95      4939c4         cmp r12, rax
0x00003b98      488933         mov qword [rbx], rsi
0x00003b9b      7412           je 0x3baf
0x00003b9d      4c89e7         mov rdi, r12
0x00003ba0      4889742410     mov qword [rsp + 0x10], rsi
0x00003ba5      e836d8ffff     call sym.imp.free
0x00003baa      488b742410     mov rsi, qword [rsp + 0x10]
0x00003baf      4889f7         mov rdi, rsi
0x00003bb2      4889742410     mov qword [rsp + 0x10], rsi
0x00003bb7      e8540e0000     call sym.xmalloc
0x00003bbc      4883ec08       sub rsp, 8
0x00003bc0      48894308       mov qword [rbx + 8], rax
0x00003bc4      448b4500       mov r8d, dword [rbp]
0x00003bc8      ff7530         push qword [rbp + 0x30]
0x00003bcb      ff7528         push qword [rbp + 0x28]
0x00003bce      4c89f1         mov rcx, r14
0x00003bd1      4157           push r15
0x00003bd3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003bd8      4889c7         mov rdi, rax
0x00003bdb      488b542428     mov rdx, qword [rsp + 0x28]
0x00003be0      488b742430     mov rsi, qword [rsp + 0x30]
0x00003be5      4989c4         mov r12, rax
0x00003be8      e863ecffff     call sym.quotearg_buffer_restyled
0x00003bed      4883c420       add rsp, 0x20
0x00003bf1      8b442418       mov eax, dword [rsp + 0x18]
0x00003bf5      41894500       mov dword [r13], eax
0x00003bf9      4883c428       add rsp, 0x28
0x00003bfd      4c89e0         mov rax, r12
0x00003c00      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003c01      5d             pop rbp
0x00003c02      415c           pop r12
0x00003c04      415d           pop r13
0x00003c06      415e           pop r14
0x00003c08      415f           pop r15
0x00003c0a      c3             ret
0x00003c0b      0f1f440000     nop dword [rax + rax]
0x00003c10      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003c12      e8590e0000     call sym.xrealloc
0x00003c17      660f6f055144.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00003c1f      4889c3         mov rbx, rax
0x00003c22      488905374420.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003c29      0f1100         movups xmmword [rax], xmm0
0x00003c2c      e9dcfeffff     jmp 0x3b0d
0x00003c31      e8bad7ffff     call sym.imp.abort
0x00003c36      e825100000     call sym.xalloc_die
0x00003c3b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003c40      4154           push r12
0x00003c42      55             push rbp
0x00003c43      53             push rbx
0x00003c44      4889fb         mov rbx, rdi
0x00003c47      e8b4d7ffff     call sym.imp.__errno_location
0x00003c4c      448b20         mov r12d, dword [rax]
0x00003c4f      4889c5         mov rbp, rax
0x00003c52      488d05a74520.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003c59      4885db         test rbx, rbx
0x00003c5c      be38000000     mov esi, 0x38                           ; '8'
0x00003c61      480f44d8       cmove rbx, rax
0x00003c65      4889df         mov rdi, rbx
0x00003c68      e8a30f0000     call sym.xmemdup
0x00003c6d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003c71      5b             pop rbx
0x00003c72      5d             pop rbp
0x00003c73      415c           pop r12
0x00003c75      c3             ret
0x00003c76      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003c80      488d05794520.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003c87      4885ff         test rdi, rdi
0x00003c8a      480f44f8       cmove rdi, rax
0x00003c8e      8b07           mov eax, dword [rdi]
0x00003c90      c3             ret
0x00003c91      0f1f440000     nop dword [rax + rax]
0x00003c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00003ca0      488d05594520.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003ca7      4885ff         test rdi, rdi
0x00003caa      480f44f8       cmove rdi, rax
0x00003cae      8937           mov dword [rdi], esi
0x00003cb0      c3             ret
0x00003cb1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003cb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00003cc0      488d05394520.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003cc7      4885ff         test rdi, rdi
0x00003cca      89f1           mov ecx, esi
0x00003ccc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00003cd0      89f0           mov eax, esi
0x00003cd2      83e11f         and ecx, 0x1f
0x00003cd5      c0e805         shr al, 5
0x00003cd8      0fb6c0         movzx eax, al
0x00003cdb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00003ce0      8b37           mov esi, dword [rdi]
0x00003ce2      89f0           mov eax, esi
0x00003ce4      d3e8           shr eax, cl
0x00003ce6      31c2           xor edx, eax
0x00003ce8      83e001         and eax, 1
0x00003ceb      83e201         and edx, 1
0x00003cee      d3e2           shl edx, cl
0x00003cf0      31f2           xor edx, esi
0x00003cf2      8917           mov dword [rdi], edx
0x00003cf4      c3             ret
0x00003cf5      90             nop
0x00003cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003d00      488d05f94420.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003d07      4885ff         test rdi, rdi
0x00003d0a      480f44f8       cmove rdi, rax
0x00003d0e      8b4704         mov eax, dword [rdi + 4]
0x00003d11      897704         mov dword [rdi + 4], esi
0x00003d14      c3             ret
0x00003d15      90             nop
0x00003d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003d20      488d05d94420.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003d27      4885ff         test rdi, rdi
0x00003d2a      480f44f8       cmove rdi, rax
0x00003d2e      4885f6         test rsi, rsi
0x00003d31      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003d37      740e           je 0x3d47
0x00003d39      4885d2         test rdx, rdx
0x00003d3c      7409           je 0x3d47
0x00003d3e      48897728       mov qword [rdi + 0x28], rsi
0x00003d42      48895730       mov qword [rdi + 0x30], rdx
0x00003d46      c3             ret
0x00003d47      4883ec08       sub rsp, 8
0x00003d4b      e8a0d6ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003d50      4157           push r15
0x00003d52      4156           push r14
0x00003d54      488d05a54420.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003d5b      4155           push r13
0x00003d5d      4154           push r12
0x00003d5f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003d62      55             push rbp
0x00003d63      53             push rbx
0x00003d64      4c89c3         mov rbx, r8
0x00003d67      4989f6         mov r14, rsi
0x00003d6a      4989d7         mov r15, rdx
0x00003d6d      4883ec18       sub rsp, 0x18
0x00003d71      4d85c0         test r8, r8
0x00003d74      480f44d8       cmove rbx, rax
0x00003d78      48894c2408     mov qword [rsp + 8], rcx
0x00003d7d      e87ed6ffff     call sym.imp.__errno_location
0x00003d82      448b20         mov r12d, dword [rax]
0x00003d85      4889c5         mov rbp, rax
0x00003d88      488d4308       lea rax, [rbx + 8]
0x00003d8c      4883ec08       sub rsp, 8
0x00003d90      448b4b04       mov r9d, dword [rbx + 4]
0x00003d94      ff7330         push qword [rbx + 0x30]
0x00003d97      448b03         mov r8d, dword [rbx]
0x00003d9a      ff7328         push qword [rbx + 0x28]
0x00003d9d      4c89fa         mov rdx, r15
0x00003da0      50             push rax
0x00003da1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003da6      4c89f6         mov rsi, r14
0x00003da9      4c89ef         mov rdi, r13
0x00003dac      e89feaffff     call sym.quotearg_buffer_restyled
0x00003db1      44896500       mov dword [rbp], r12d
0x00003db5      4883c438       add rsp, 0x38
0x00003db9      5b             pop rbx
0x00003dba      5d             pop rbp
0x00003dbb      415c           pop r12
0x00003dbd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003dbf      415e           pop r14
0x00003dc1      415f           pop r15
0x00003dc3      c3             ret
0x00003dc4      6690           nop
0x00003dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00003dd0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00003dd2      4156           push r14
0x00003dd4      488d05254420.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003ddb      4155           push r13
0x00003ddd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00003ddf      4989d4         mov r12, rdx
0x00003de2      55             push rbp
0x00003de3      53             push rbx
0x00003de4      4889cb         mov rbx, rcx
0x00003de7      4989fe         mov r14, rdi
0x00003dea      4989f7         mov r15, rsi
0x00003ded      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00003df1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00003df4      480f44d8       cmove rbx, rax
0x00003df8      31ed           xor ebp, ebp
0x00003dfa      e801d6ffff     call sym.imp.__errno_location
0x00003dff      4d85e4         test r12, r12
0x00003e02      4989c5         mov r13, rax
0x00003e05      8b00           mov eax, dword [rax]
0x00003e07      400f94c5       sete bpl
0x00003e0b      0b6b04         or ebp, dword [rbx + 4]
0x00003e0e      4c8d5308       lea r10, [rbx + 8]
0x00003e12      4883ec08       sub rsp, 8
0x00003e16      448b03         mov r8d, dword [rbx]
0x00003e19      4c89f9         mov rcx, r15
0x00003e1c      89442414       mov dword [rsp + 0x14], eax
0x00003e20      ff7330         push qword [rbx + 0x30]
0x00003e23      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003e26      ff7328         push qword [rbx + 0x28]
0x00003e29      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00003e2b      31f6           xor esi, esi
0x00003e2d      4189e9         mov r9d, ebp
0x00003e30      31ff           xor edi, edi
0x00003e32      4c89542440     mov qword [rsp + 0x40], r10
0x00003e37      e814eaffff     call sym.quotearg_buffer_restyled
0x00003e3c      488d7001       lea rsi, [rax + 1]
0x00003e40      4889442448     mov qword [rsp + 0x48], rax
0x00003e45      4883c420       add rsp, 0x20
0x00003e49      4889f7         mov rdi, rsi
0x00003e4c      4889742418     mov qword [rsp + 0x18], rsi
0x00003e51      e8ba0b0000     call sym.xmalloc
0x00003e56      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00003e5b      4883ec08       sub rsp, 8
0x00003e5f      ff7330         push qword [rbx + 0x30]
0x00003e62      ff7328         push qword [rbx + 0x28]
0x00003e65      4c8b542438     mov r10, qword [rsp + 0x38]
0x00003e6a      4189e9         mov r9d, ebp
0x00003e6d      448b03         mov r8d, dword [rbx]
0x00003e70      4c89f9         mov rcx, r15
0x00003e73      4c89f2         mov rdx, r14
0x00003e76      4889c7         mov rdi, rax
0x00003e79      4152           push r10
0x00003e7b      488b742438     mov rsi, qword [rsp + 0x38]
0x00003e80      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00003e85      8b44242c       mov eax, dword [rsp + 0x2c]
0x00003e89      4883c420       add rsp, 0x20
0x00003e8d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00003e90      41894500       mov dword [r13], eax
0x00003e94      7409           je 0x3e9f
0x00003e96      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00003e9b      4d891c24       mov qword [r12], r11
0x00003e9f      488b442410     mov rax, qword [rsp + 0x10]
0x00003ea4      4883c438       add rsp, 0x38
0x00003ea8      5b             pop rbx
0x00003ea9      5d             pop rbp
0x00003eaa      415c           pop r12
0x00003eac      415d           pop r13
0x00003eae      415e           pop r14
0x00003eb0      415f           pop r15
0x00003eb2      c3             ret
0x00003eb3      0f1f00         nop dword [rax]
0x00003eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00003ec0      4889d1         mov rcx, rdx
0x00003ec3      31d2           xor edx, edx
0x00003ec5      e906ffffff     jmp sym.quotearg_alloc_mem
0x00003eca      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00003ed0      8b0582412000   mov eax, dword [obj.nslots]             ; [0x208058:4]=1
0x00003ed6      4154           push r12
0x00003ed8      4c8b25814120.  mov r12, qword [obj.slotvec]            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003edf      55             push rbp
0x00003ee0      53             push rbx
0x00003ee1      83f801         cmp eax, 1
0x00003ee4      7e2b           jle 0x3f11                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00003ee6      83e802         sub eax, 2
0x00003ee9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003eee      48c1e004       shl rax, 4
0x00003ef2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00003ef7      660f1f840000.  nop word [rax + rax]
0x00003f00      488b3b         mov rdi, qword [rbx]
0x00003f03      4883c310       add rbx, 0x10
0x00003f07      e8d4d4ffff     call sym.imp.free
0x00003f0c      4839eb         cmp rbx, rbp
0x00003f0f      75ef           jne 0x3f00
0x00003f11      498b7c2408     mov rdi, qword [r12 + 8]
0x00003f16      488d1de34120.  lea rbx, obj.slot0                      ; 0x208100
0x00003f1d      4839df         cmp rdi, rbx
0x00003f20      7417           je 0x3f39
0x00003f22      e8b9d4ffff     call sym.imp.free
0x00003f27      48c7053e4120.  mov qword [obj.slotvec0], 0x100         ; [0x208070:8]=256
0x00003f32      48891d3f4120.  mov qword [0x00208078], rbx             ; [0x208078:8]=0x208100 obj.slot0
0x00003f39      488d1d304120.  lea rbx, obj.slotvec0                   ; 0x208070
0x00003f40      4939dc         cmp r12, rbx
0x00003f43      740f           je 0x3f54
0x00003f45      4c89e7         mov rdi, r12
0x00003f48      e893d4ffff     call sym.imp.free
0x00003f4d      48891d0c4120.  mov qword [obj.slotvec], rbx            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003f54      5b             pop rbx
0x00003f55      c705f9402000.  mov dword [obj.nslots], 1               ; [0x208058:4]=1
0x00003f5f      5d             pop rbp
0x00003f60      415c           pop r12
0x00003f62      c3             ret
0x00003f63      0f1f00         nop dword [rax]
0x00003f66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00003f70      488d0d894220.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003f77      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003f7e      e90dfbffff     jmp sym.quotearg_n_options
0x00003f83      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00003f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00003f90      488d0d694220.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003f97      e9f4faffff     jmp sym.quotearg_n_options
0x00003f9c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00003fa0      488d0d594220.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003fa7      4889fe         mov rsi, rdi
0x00003faa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003fb1      31ff           xor edi, edi
0x00003fb3      e9d8faffff     jmp sym.quotearg_n_options
0x00003fb8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00003fc0      488d0d394220.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003fc7      4889f2         mov rdx, rsi
0x00003fca      4889fe         mov rsi, rdi
0x00003fcd      31ff           xor edi, edi
0x00003fcf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00003fd4      6690           nop
0x00003fd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00003fe0      4883ec48       sub rsp, 0x48
0x00003fe4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00003fe7      64488b142528.  mov rdx, qword fs:[0x28]
0x00003ff0      4889542438     mov qword [rsp + 0x38], rdx
0x00003ff5      31d2           xor edx, edx
0x00003ff7      83fe0a         cmp esi, 0xa
0x00003ffa      7468           je 0x4064
0x00003ffc      893424         mov dword [rsp], esi
0x00003fff      4889e1         mov rcx, rsp
0x00004002      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004009      4889c6         mov rsi, rax
0x0000400c      48c744240400.  mov qword [rsp + 4], 0
0x00004015      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000401e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004027      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004030      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004039      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004042      c74424340000.  mov dword [rsp + 0x34], 0
0x0000404a      e841faffff     call sym.quotearg_n_options
0x0000404f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004054      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000405d      750a           jne 0x4069                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000405f      4883c448       add rsp, 0x48
0x00004063      c3             ret
0x00004064      e887d3ffff     call sym.imp.abort
0x00004069      e842d4ffff     call sym.imp.__stack_chk_fail
0x0000406e      6690           nop
;-- quotearg_n_style_mem:
0x00004070      4883ec48       sub rsp, 0x48
0x00004074      4889d0         mov rax, rdx
0x00004077      4889ca         mov rdx, rcx
0x0000407a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004083      48894c2438     mov qword [rsp + 0x38], rcx
0x00004088      31c9           xor ecx, ecx
0x0000408a      83fe0a         cmp esi, 0xa
0x0000408d      7461           je 0x40f0
0x0000408f      893424         mov dword [rsp], esi
0x00004092      4889e1         mov rcx, rsp
0x00004095      4889c6         mov rsi, rax
0x00004098      48c744240400.  mov qword [rsp + 4], 0
0x000040a1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000040aa      48c744241400.  mov qword [rsp + 0x14], 0
0x000040b3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000040bc      48c744242400.  mov qword [rsp + 0x24], 0
0x000040c5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000040ce      c74424340000.  mov dword [rsp + 0x34], 0
0x000040d6      e8b5f9ffff     call sym.quotearg_n_options
0x000040db      488b542438     mov rdx, qword [rsp + 0x38]
0x000040e0      644833142528.  xor rdx, qword fs:[0x28]
0x000040e9      750a           jne 0x40f5
0x000040eb      4883c448       add rsp, 0x48
0x000040ef      c3             ret
0x000040f0      e8fbd2ffff     call sym.imp.abort
0x000040f5      e8b6d3ffff     call sym.imp.__stack_chk_fail
0x000040fa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004100      4889f2         mov rdx, rsi
0x00004103      89fe           mov esi, edi
0x00004105      31ff           xor edi, edi
0x00004107      e9d4feffff     jmp sym.quotearg_n_style
0x0000410c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004110      4889d1         mov rcx, rdx
0x00004113      4889f2         mov rdx, rsi
0x00004116      89fe           mov esi, edi
0x00004118      31ff           xor edi, edi
0x0000411a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000411f      90             nop
;-- quotearg_char_mem:
0x00004120      4883ec48       sub rsp, 0x48
0x00004124      89d1           mov ecx, edx
0x00004126      64488b042528.  mov rax, qword fs:[0x28]
0x0000412f      4889442438     mov qword [rsp + 0x38], rax
0x00004134      31c0           xor eax, eax
0x00004136      488b05f34020.  mov rax, qword [0x00208230]             ; [0x208230:8]=0
0x0000413d      4989e0         mov r8, rsp
0x00004140      83e11f         and ecx, 0x1f
0x00004143      660f6f05b540.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000414b      4889442430     mov qword [rsp + 0x30], rax
0x00004150      89d0           mov eax, edx
0x00004152      0f290424       movaps xmmword [rsp], xmm0
0x00004156      c0e805         shr al, 5
0x00004159      0fb6c0         movzx eax, al
0x0000415c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004161      660f6f05a740.  movdqa xmm0, xmmword [0x00208210]
0x00004169      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000416e      660f6f05aa40.  movdqa xmm0, xmmword [0x00208220]
0x00004176      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000417b      418b11         mov edx, dword [r9]
0x0000417e      89d0           mov eax, edx
0x00004180      d3e8           shr eax, cl
0x00004182      f7d0           not eax
0x00004184      83e001         and eax, 1
0x00004187      d3e0           shl eax, cl
0x00004189      4c89c1         mov rcx, r8
0x0000418c      31d0           xor eax, edx
0x0000418e      4889f2         mov rdx, rsi
0x00004191      4889fe         mov rsi, rdi
0x00004194      418901         mov dword [r9], eax
0x00004197      31ff           xor edi, edi
0x00004199      e8f2f8ffff     call sym.quotearg_n_options
0x0000419e      488b742438     mov rsi, qword [rsp + 0x38]
0x000041a3      644833342528.  xor rsi, qword fs:[0x28]
0x000041ac      7505           jne 0x41b3
0x000041ae      4883c448       add rsp, 0x48
0x000041b2      c3             ret
0x000041b3      e8f8d2ffff     call sym.imp.__stack_chk_fail
0x000041b8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000041c0      400fbed6       movsx edx, sil
0x000041c4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000041cb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000041d0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000041d5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000041dc      e93fffffff     jmp sym.quotearg_char_mem
0x000041e1      0f1f440000     nop dword [rax + rax]
0x000041e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000041f0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000041f5      e926ffffff     jmp sym.quotearg_char_mem
0x000041fa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004200      4883ec48       sub rsp, 0x48
0x00004204      4889d0         mov rax, rdx
0x00004207      64488b142528.  mov rdx, qword fs:[0x28]
0x00004210      4889542438     mov qword [rsp + 0x38], rdx
0x00004215      31d2           xor edx, edx
0x00004217      83fe0a         cmp esi, 0xa
0x0000421a      7468           je 0x4284
0x0000421c      893424         mov dword [rsp], esi
0x0000421f      4889e1         mov rcx, rsp
0x00004222      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004229      4889c6         mov rsi, rax
0x0000422c      48c744240400.  mov qword [rsp + 4], 0
0x00004235      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000423e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004247      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004250      48c744242400.  mov qword [rsp + 0x24], 0
0x00004259      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004262      c74424340000.  mov dword [rsp + 0x34], 0
0x0000426a      e821f8ffff     call sym.quotearg_n_options
0x0000426f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004274      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000427d      750a           jne 0x4289
0x0000427f      4883c448       add rsp, 0x48
0x00004283      c3             ret
0x00004284      e867d1ffff     call sym.imp.abort
0x00004289      e822d2ffff     call sym.imp.__stack_chk_fail
0x0000428e      6690           nop
;-- quotearg_n_custom_mem:
0x00004290      4883ec48       sub rsp, 0x48
0x00004294      4989c9         mov r9, rcx
0x00004297      488b0d923f20.  mov rcx, qword [0x00208230]             ; [0x208230:8]=0
0x0000429e      660f6f055a3f.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000042a6      64488b042528.  mov rax, qword fs:[0x28]
0x000042af      4889442438     mov qword [rsp + 0x38], rax
0x000042b4      31c0           xor eax, eax
0x000042b6      0f290424       movaps xmmword [rsp], xmm0
0x000042ba      4885f6         test rsi, rsi
0x000042bd      48894c2430     mov qword [rsp + 0x30], rcx
0x000042c2      c704240a0000.  mov dword [rsp], 0xa
0x000042c9      660f6f053f3f.  movdqa xmm0, xmmword [0x00208210]
0x000042d1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000042d6      660f6f05423f.  movdqa xmm0, xmmword [0x00208220]
0x000042de      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000042e3      7432           je 0x4317
0x000042e5      4885d2         test rdx, rdx
0x000042e8      742d           je 0x4317
0x000042ea      4889742428     mov qword [rsp + 0x28], rsi
0x000042ef      4889542430     mov qword [rsp + 0x30], rdx
0x000042f4      4889e1         mov rcx, rsp
0x000042f7      4c89c2         mov rdx, r8
0x000042fa      4c89ce         mov rsi, r9
0x000042fd      e88ef7ffff     call sym.quotearg_n_options
0x00004302      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004307      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004310      750a           jne 0x431c
0x00004312      4883c448       add rsp, 0x48
0x00004316      c3             ret
0x00004317      e8d4d0ffff     call sym.imp.abort
0x0000431c      e88fd1ffff     call sym.imp.__stack_chk_fail
0x00004321      0f1f440000     nop dword [rax + rax]
0x00004326      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004330      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004337      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000433c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004340      4889d1         mov rcx, rdx
0x00004343      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000434a      4889f2         mov rdx, rsi
0x0000434d      4889fe         mov rsi, rdi
0x00004350      31ff           xor edi, edi
0x00004352      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004357      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004360      4989c8         mov r8, rcx
0x00004363      4889d1         mov rcx, rdx
0x00004366      4889f2         mov rdx, rsi
0x00004369      4889fe         mov rsi, rdi
0x0000436c      31ff           xor edi, edi
0x0000436e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004373      0f1f00         nop dword [rax]
0x00004376      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004380      488d0d993c20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004387      e904f7ffff     jmp sym.quotearg_n_options
0x0000438c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004390      488d0d893c20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004397      4889f2         mov rdx, rsi
0x0000439a      4889fe         mov rsi, rdi
0x0000439d      31ff           xor edi, edi
0x0000439f      e9ecf6ffff     jmp sym.quotearg_n_options
0x000043a4      6690           nop
0x000043a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000043b0      488d0d693c20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000043b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043be      e9cdf6ffff     jmp sym.quotearg_n_options
0x000043c3      0f1f00         nop dword [rax]
0x000043c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000043d0      488d0d493c20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000043d7      4889fe         mov rsi, rdi
0x000043da      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043e1      31ff           xor edi, edi
0x000043e3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000043e8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x000043f0      4157           push r15
0x000043f2      4156           push r14
0x000043f4      4155           push r13
0x000043f6      4154           push r12
0x000043f8      4d89cc         mov r12, r9
0x000043fb      55             push rbp
0x000043fc      53             push rbx
0x000043fd      4889fd         mov rbp, rdi
0x00004400      4c89c3         mov rbx, r8
0x00004403      4883ec28       sub rsp, 0x28
0x00004407      4885f6         test rsi, rsi
0x0000440a      0f8418010000   je 0x4528
0x00004410      4989d0         mov r8, rdx
0x00004413      488d15ae2100.  lea rdx, [0x000065c8]                   ; "%s (%s) %s\n"
0x0000441a      4989c9         mov r9, rcx
0x0000441d      31c0           xor eax, eax
0x0000441f      4889f1         mov rcx, rsi
0x00004422      be01000000     mov esi, 1
0x00004427      e864d2ffff     call sym.imp.__fprintf_chk
0x0000442c      488d35a82100.  lea rsi, [0x000065db]                   ; "(C)"
0x00004433      31ff           xor edi, edi
0x00004435      ba05000000     mov edx, 5
0x0000443a      e841d0ffff     call sym.imp.dcgettext
0x0000443f      488d15ba2400.  lea rdx, obj.version_etc_copyright      ; 0x6900 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004446      4889c1         mov rcx, rax
0x00004449      41b8e3070000   mov r8d, 0x7e3
0x0000444f      be01000000     mov esi, 1
0x00004454      4889ef         mov rdi, rbp
0x00004457      31c0           xor eax, eax
0x00004459      e832d2ffff     call sym.imp.__fprintf_chk
0x0000445e      488d35032200.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6668 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004465      31ff           xor edi, edi
0x00004467      ba05000000     mov edx, 5
0x0000446c      e80fd0ffff     call sym.imp.dcgettext
0x00004471      4889ee         mov rsi, rbp
0x00004474      4889c7         mov rdi, rax
0x00004477      e8e4d0ffff     call sym.imp.fputs_unlocked
0x0000447c      4983fc09       cmp r12, 9
0x00004480      0f873a030000   ja 0x47c0
0x00004486      488d15372400.  lea rdx, [0x000068c4]
0x0000448d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004491      4801d0         add rax, rdx
0x00004494      ffe0           jmp rax
0x00004496      662e0f1f8400.  nop word cs:[rax + rax]
0x000044a0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000044a4      488b4310       mov rax, qword [rbx + 0x10]
0x000044a8      488d35292300.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x67d8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000044af      4c8b4308       mov r8, qword [rbx + 8]
0x000044b3      ba05000000     mov edx, 5
0x000044b8      31ff           xor edi, edi
0x000044ba      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000044be      4c8b6328       mov r12, qword [rbx + 0x28]
0x000044c2      4c894c2410     mov qword [rsp + 0x10], r9
0x000044c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000044cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000044cf      48890424       mov qword [rsp], rax
0x000044d3      4c89442408     mov qword [rsp + 8], r8
0x000044d8      488b1b         mov rbx, qword [rbx]
0x000044db      e8a0cfffff     call sym.imp.dcgettext
0x000044e0      4883ec08       sub rsp, 8
0x000044e4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000044e9      4889c2         mov rdx, rax
0x000044ec      4889d9         mov rcx, rbx
0x000044ef      be01000000     mov esi, 1
0x000044f4      4889ef         mov rdi, rbp
0x000044f7      31c0           xor eax, eax
0x000044f9      4151           push r9
0x000044fb      4155           push r13
0x000044fd      4154           push r12
0x000044ff      4157           push r15
0x00004501      4156           push r14
0x00004503      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004508      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000450d      e87ed1ffff     call sym.imp.__fprintf_chk
0x00004512      4883c430       add rsp, 0x30
0x00004516      4883c428       add rsp, 0x28
0x0000451a      5b             pop rbx
0x0000451b      5d             pop rbp
0x0000451c      415c           pop r12
0x0000451e      415d           pop r13
0x00004520      415e           pop r14
0x00004522      415f           pop r15
0x00004524      c3             ret
0x00004525      0f1f00         nop dword [rax]
0x00004528      4989c8         mov r8, rcx
0x0000452b      4889d1         mov rcx, rdx
0x0000452e      488d159f2000.  lea rdx, str.s__s                       ; 0x65d4 ; "%s %s\n"
0x00004535      be01000000     mov esi, 1
0x0000453a      31c0           xor eax, eax
0x0000453c      e84fd1ffff     call sym.imp.__fprintf_chk
0x00004541      e9e6feffff     jmp 0x442c
0x00004546      662e0f1f8400.  nop word cs:[rax + rax]
0x00004550      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004554      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004558      488d35a92200.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6808 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000455f      488b4310       mov rax, qword [rbx + 0x10]
0x00004563      4c8b4308       mov r8, qword [rbx + 8]
0x00004567      ba05000000     mov edx, 5
0x0000456c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004570      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004574      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004578      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000457c      488b1b         mov rbx, qword [rbx]
0x0000457f      4c89542418     mov qword [rsp + 0x18], r10
0x00004584      4c894c2410     mov qword [rsp + 0x10], r9
0x00004589      48890424       mov qword [rsp], rax
0x0000458d      4c89442408     mov qword [rsp + 8], r8
0x00004592      31ff           xor edi, edi
0x00004594      e8e7ceffff     call sym.imp.dcgettext
0x00004599      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000459e      4152           push r10
0x000045a0      e93fffffff     jmp 0x44e4
0x000045a5      0f1f00         nop dword [rax]
0x000045a8      488b1b         mov rbx, qword [rbx]
0x000045ab      488d352d2000.  lea rsi, str.Written_by__s.             ; 0x65df ; "Written by %s.\n"
0x000045b2      ba05000000     mov edx, 5
0x000045b7      31ff           xor edi, edi
0x000045b9      e8c2ceffff     call sym.imp.dcgettext
0x000045be      4883c428       add rsp, 0x28
0x000045c2      4889d9         mov rcx, rbx
0x000045c5      4889ef         mov rdi, rbp
0x000045c8      5b             pop rbx
0x000045c9      5d             pop rbp
0x000045ca      415c           pop r12
0x000045cc      415d           pop r13
0x000045ce      415e           pop r14
0x000045d0      415f           pop r15
0x000045d2      4889c2         mov rdx, rax
0x000045d5      be01000000     mov esi, 1
0x000045da      31c0           xor eax, eax
0x000045dc      e9afd0ffff     jmp sym.imp.__fprintf_chk
0x000045e1      0f1f80000000.  nop dword [rax]
0x000045e8      4c8b6308       mov r12, qword [rbx + 8]
0x000045ec      488d35fc1f00.  lea rsi, str.Written_by__s_and__s.      ; 0x65ef ; "Written by %s and %s.\n"
0x000045f3      488b1b         mov rbx, qword [rbx]
0x000045f6      ba05000000     mov edx, 5
0x000045fb      31ff           xor edi, edi
0x000045fd      e87eceffff     call sym.imp.dcgettext
0x00004602      4883c428       add rsp, 0x28
0x00004606      4d89e0         mov r8, r12
0x00004609      4889d9         mov rcx, rbx
0x0000460c      4889ef         mov rdi, rbp
0x0000460f      4889c2         mov rdx, rax
0x00004612      be01000000     mov esi, 1
0x00004617      5b             pop rbx
0x00004618      5d             pop rbp
0x00004619      415c           pop r12
0x0000461b      415d           pop r13
0x0000461d      415e           pop r14
0x0000461f      415f           pop r15
0x00004621      31c0           xor eax, eax
0x00004623      e968d0ffff     jmp sym.imp.__fprintf_chk
0x00004628      0f1f84000000.  nop dword [rax + rax]
0x00004630      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004634      4c8b6308       mov r12, qword [rbx + 8]
0x00004638      488d35c71f00.  lea rsi, str.Written_by__s___s__and__s. ; 0x6606 ; "Written by %s, %s, and %s.\n"
0x0000463f      488b1b         mov rbx, qword [rbx]
0x00004642      ba05000000     mov edx, 5
0x00004647      31ff           xor edi, edi
0x00004649      e832ceffff     call sym.imp.dcgettext
0x0000464e      4883c428       add rsp, 0x28
0x00004652      4d89e9         mov r9, r13
0x00004655      4d89e0         mov r8, r12
0x00004658      4889d9         mov rcx, rbx
0x0000465b      4889ef         mov rdi, rbp
0x0000465e      4889c2         mov rdx, rax
0x00004661      5b             pop rbx
0x00004662      5d             pop rbp
0x00004663      415c           pop r12
0x00004665      415d           pop r13
0x00004667      415e           pop r14
0x00004669      415f           pop r15
0x0000466b      be01000000     mov esi, 1
0x00004670      31c0           xor eax, eax
0x00004672      e919d0ffff     jmp sym.imp.__fprintf_chk
0x00004677      660f1f840000.  nop word [rax + rax]
0x00004680      488d35b12000.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6738 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004687      ba05000000     mov edx, 5
0x0000468c      31ff           xor edi, edi
0x0000468e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004692      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004696      4c8b6308       mov r12, qword [rbx + 8]
0x0000469a      488b1b         mov rbx, qword [rbx]
0x0000469d      e8decdffff     call sym.imp.dcgettext
0x000046a2      4883ec08       sub rsp, 8
0x000046a6      4156           push r14
0x000046a8      4889c2         mov rdx, rax
0x000046ab      4d89e9         mov r9, r13
0x000046ae      4d89e0         mov r8, r12
0x000046b1      4889d9         mov rcx, rbx
0x000046b4      4889ef         mov rdi, rbp
0x000046b7      be01000000     mov esi, 1
0x000046bc      31c0           xor eax, eax
0x000046be      e8cdcfffff     call sym.imp.__fprintf_chk
0x000046c3      58             pop rax
0x000046c4      5a             pop rdx
0x000046c5      4883c428       add rsp, 0x28
0x000046c9      5b             pop rbx
0x000046ca      5d             pop rbp
0x000046cb      415c           pop r12
0x000046cd      415d           pop r13
0x000046cf      415e           pop r14
0x000046d1      415f           pop r15
0x000046d3      c3             ret
0x000046d4      0f1f4000       nop dword [rax]
0x000046d8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000046dc      488d35752000.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6758 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000046e3      ba05000000     mov edx, 5
0x000046e8      31ff           xor edi, edi
0x000046ea      4c8b7318       mov r14, qword [rbx + 0x18]
0x000046ee      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000046f2      4c8b6308       mov r12, qword [rbx + 8]
0x000046f6      488b1b         mov rbx, qword [rbx]
0x000046f9      e882cdffff     call sym.imp.dcgettext
0x000046fe      4157           push r15
0x00004700      eba4           jmp 0x46a6
0x00004702      660f1f440000   nop word [rax + rax]
0x00004708      4c8b4308       mov r8, qword [rbx + 8]
0x0000470c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004710      488d35692000.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6780 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004717      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000471b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000471f      ba05000000     mov edx, 5
0x00004724      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004728      31ff           xor edi, edi
0x0000472a      488b1b         mov rbx, qword [rbx]
0x0000472d      4c890424       mov qword [rsp], r8
0x00004731      e84acdffff     call sym.imp.dcgettext
0x00004736      4883ec08       sub rsp, 8
0x0000473a      4d89e9         mov r9, r13
0x0000473d      4154           push r12
0x0000473f      4157           push r15
0x00004741      4156           push r14
0x00004743      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004748      4889d9         mov rcx, rbx
0x0000474b      4889c2         mov rdx, rax
0x0000474e      4889ef         mov rdi, rbp
0x00004751      be01000000     mov esi, 1
0x00004756      31c0           xor eax, eax
0x00004758      e833cfffff     call sym.imp.__fprintf_chk
0x0000475d      4883c420       add rsp, 0x20
0x00004761      4883c428       add rsp, 0x28
0x00004765      5b             pop rbx
0x00004766      5d             pop rbp
0x00004767      415c           pop r12
0x00004769      415d           pop r13
0x0000476b      415e           pop r14
0x0000476d      415f           pop r15
0x0000476f      c3             ret
0x00004770      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004774      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004778      488d35292000.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x67a8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000477f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004783      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004787      ba05000000     mov edx, 5
0x0000478c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004790      4c8b4308       mov r8, qword [rbx + 8]
0x00004794      31ff           xor edi, edi
0x00004796      4c894c2408     mov qword [rsp + 8], r9
0x0000479b      488b1b         mov rbx, qword [rbx]
0x0000479e      4c890424       mov qword [rsp], r8
0x000047a2      e8d9ccffff     call sym.imp.dcgettext
0x000047a7      4155           push r13
0x000047a9      4154           push r12
0x000047ab      4157           push r15
0x000047ad      4156           push r14
0x000047af      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000047b4      eb8d           jmp 0x4743
0x000047b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000047c0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000047c4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000047c8      ba05000000     mov edx, 5
0x000047cd      488b4310       mov rax, qword [rbx + 0x10]
0x000047d1      4c8b4308       mov r8, qword [rbx + 8]
0x000047d5      488d35642000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6840 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000047dc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000047e0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000047e4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000047e8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000047ec      4c89542418     mov qword [rsp + 0x18], r10
0x000047f1      4c894c2410     mov qword [rsp + 0x10], r9
0x000047f6      48890424       mov qword [rsp], rax
0x000047fa      4c89442408     mov qword [rsp + 8], r8
0x000047ff      488b1b         mov rbx, qword [rbx]
0x00004802      e98bfdffff     jmp 0x4592
0x00004807      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004810      4531c9         xor r9d, r9d
0x00004813      49833800       cmp qword [r8], 0
0x00004817      7412           je 0x482b
0x00004819      0f1f80000000.  nop dword [rax]
0x00004820      4983c101       add r9, 1
0x00004824      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004829      75f5           jne 0x4820
0x0000482b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004830      4883ec68       sub rsp, 0x68
0x00004834      4d89c2         mov r10, r8
0x00004837      4531c9         xor r9d, r9d
0x0000483a      64488b042528.  mov rax, qword fs:[0x28]
0x00004843      4889442458     mov qword [rsp + 0x58], rax
0x00004848      31c0           xor eax, eax
0x0000484a      4989e0         mov r8, rsp
0x0000484d      0f1f00         nop dword [rax]
0x00004850      418b02         mov eax, dword [r10]
0x00004853      83f82f         cmp eax, 0x2f
0x00004856      7742           ja 0x489a
0x00004858      4189c3         mov r11d, eax
0x0000485b      4d035a10       add r11, qword [r10 + 0x10]
0x0000485f      83c008         add eax, 8
0x00004862      418902         mov dword [r10], eax
0x00004865      498b03         mov rax, qword [r11]
0x00004868      4885c0         test rax, rax
0x0000486b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000486f      740a           je 0x487b
0x00004871      4983c101       add r9, 1
0x00004875      4983f90a       cmp r9, 0xa
0x00004879      75d5           jne 0x4850
0x0000487b      e870fbffff     call sym.version_etc_arn
0x00004880      488b442458     mov rax, qword [rsp + 0x58]
0x00004885      644833042528.  xor rax, qword fs:[0x28]
0x0000488e      7505           jne 0x4895
0x00004890      4883c468       add rsp, 0x68
0x00004894      c3             ret
0x00004895      e816ccffff     call sym.imp.__stack_chk_fail
0x0000489a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000489e      498d4308       lea rax, [r11 + 8]
0x000048a2      49894208       mov qword [r10 + 8], rax
0x000048a6      ebbd           jmp 0x4865
0x000048a8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000048b0      55             push rbp
0x000048b1      53             push rbx
0x000048b2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000048b8      4531db         xor r11d, r11d
0x000048bb      4881ecb80000.  sub rsp, 0xb8
0x000048c2      64488b042528.  mov rax, qword fs:[0x28]
0x000048cb      4889442478     mov qword [rsp + 0x78], rax
0x000048d0      31c0           xor eax, eax
0x000048d2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000048da      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000048e2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000048ea      4c8d442420     lea r8, [rsp + 0x20]
0x000048ef      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000048f7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000048ff      4889442410     mov qword [rsp + 0x10], rax
0x00004904      488d84248000.  lea rax, [rsp + 0x80]
0x0000490c      4531c9         xor r9d, r9d
0x0000490f      4889442418     mov qword [rsp + 0x18], rax
0x00004914      4889c5         mov rbp, rax
0x00004917      660f1f840000.  nop word [rax + rax]
0x00004920      4183fa2f       cmp r10d, 0x2f
0x00004924      7756           ja 0x497c
0x00004926      4489d0         mov eax, r10d
0x00004929      41bb01000000   mov r11d, 1
0x0000492f      4183c208       add r10d, 8
0x00004933      4801e8         add rax, rbp
0x00004936      488b00         mov rax, qword [rax]
0x00004939      4885c0         test rax, rax
0x0000493c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004940      740a           je 0x494c
0x00004942      4983c101       add r9, 1
0x00004946      4983f90a       cmp r9, 0xa
0x0000494a      75d4           jne 0x4920
0x0000494c      4584db         test r11b, r11b
0x0000494f      7524           jne 0x4975
0x00004951      e89afaffff     call sym.version_etc_arn
0x00004956      488b442478     mov rax, qword [rsp + 0x78]
0x0000495b      644833042528.  xor rax, qword fs:[0x28]
0x00004964      750a           jne 0x4970
0x00004966      4881c4b80000.  add rsp, 0xb8
0x0000496d      5b             pop rbx
0x0000496e      5d             pop rbp
0x0000496f      c3             ret
0x00004970      e83bcbffff     call sym.imp.__stack_chk_fail
0x00004975      4489542408     mov dword [rsp + 8], r10d
0x0000497a      ebd5           jmp 0x4951
0x0000497c      4889d8         mov rax, rbx
0x0000497f      4883c308       add rbx, 8
0x00004983      ebb1           jmp 0x4936
0x00004985      90             nop
0x00004986      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004990      53             push rbx
0x00004991      488d358a1c00.  lea rsi, str.Report_bugs_to:__s         ; 0x6622 ; "\nReport bugs to: %s\n"
0x00004998      ba05000000     mov edx, 5
0x0000499d      31ff           xor edi, edi
0x0000499f      e8dccaffff     call sym.imp.dcgettext
0x000049a4      488d158c1c00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6637 ; "bug-coreutils@gnu.org"
0x000049ab      4889c6         mov rsi, rax
0x000049ae      bf01000000     mov edi, 1
0x000049b3      31c0           xor eax, eax
0x000049b5      e866ccffff     call sym.imp.__printf_chk
0x000049ba      488d358c1c00.  lea rsi, str.s_home_page:___s           ; 0x664d ; "%s home page: <%s>\n"
0x000049c1      ba05000000     mov edx, 5
0x000049c6      31ff           xor edi, edi
0x000049c8      e8b3caffff     call sym.imp.dcgettext
0x000049cd      488d0dac1400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5e80 ; "https://www.gnu.org/software/coreutils/"
0x000049d4      488d15e50e00.  lea rdx, str.GNU_coreutils              ; 0x58c0 ; "GNU coreutils"
0x000049db      4889c6         mov rsi, rax
0x000049de      bf01000000     mov edi, 1
0x000049e3      31c0           xor eax, eax
0x000049e5      e836ccffff     call sym.imp.__printf_chk
0x000049ea      488b1d973620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000049f1      488d35881e00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x6880 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000049f8      31ff           xor edi, edi
0x000049fa      ba05000000     mov edx, 5
0x000049ff      e87ccaffff     call sym.imp.dcgettext
0x00004a04      4889de         mov rsi, rbx
0x00004a07      4889c7         mov rdi, rax
0x00004a0a      5b             pop rbx
0x00004a0b      e950cbffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004a10      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004a11      4889fb         mov rbx, rdi
0x00004a14      e897cbffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004a19      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00004a1c      7505           jne 0x4a23
0x00004a1e      4885db         test rbx, rbx
0x00004a21      7502           jne 0x4a25
0x00004a23      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004a24      c3             ret
0x00004a25      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00004a2a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004a30      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004a33      48f7e6         mul rsi
0x00004a36      4889c7         mov rdi, rax
0x00004a39      0f90c0         seto al
0x00004a3c      4885ff         test rdi, rdi
0x00004a3f      780a           js 0x4a4b
0x00004a41      0fb6c0         movzx eax, al
0x00004a44      4885c0         test rax, rax
0x00004a47      7502           jne 0x4a4b
0x00004a49      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00004a4b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00004a4f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004a54      6690           nop
0x00004a56      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004a60      ebae           jmp sym.xmalloc
0x00004a62      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004a66      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004a70      4885f6         test rsi, rsi
0x00004a73      53             push rbx
0x00004a74      4889f3         mov rbx, rsi
0x00004a77      7505           jne 0x4a7e
0x00004a79      4885ff         test rdi, rdi
0x00004a7c      751a           jne 0x4a98
0x00004a7e      4889de         mov rsi, rbx
0x00004a81      e87acbffff     call sym.imp.realloc
0x00004a86      4885c0         test rax, rax
0x00004a89      7505           jne 0x4a90
0x00004a8b      4885db         test rbx, rbx
0x00004a8e      7511           jne 0x4aa1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004a90      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004a91      c3             ret
0x00004a92      660f1f440000   nop word [rax + rax]
0x00004a98      e843c9ffff     call sym.imp.free
0x00004a9d      31c0           xor eax, eax
0x00004a9f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004aa0      c3             ret
0x00004aa1      e8ba010000     call sym.xalloc_die
0x00004aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004ab0      4889f0         mov rax, rsi
0x00004ab3      48f7e2         mul rdx
0x00004ab6      4889c6         mov rsi, rax
0x00004ab9      0f90c0         seto al
0x00004abc      4885f6         test rsi, rsi
0x00004abf      780a           js 0x4acb
0x00004ac1      0fb6c0         movzx eax, al
0x00004ac4      4885c0         test rax, rax
0x00004ac7      7502           jne 0x4acb
0x00004ac9      eba5           jmp sym.xrealloc
0x00004acb      4883ec08       sub rsp, 8
0x00004acf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004ad4      6690           nop
0x00004ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004ae0      4885ff         test rdi, rdi
0x00004ae3      4989d1         mov r9, rdx
0x00004ae6      488b0e         mov rcx, qword [rsi]
0x00004ae9      7435           je 0x4b20
0x00004aeb      31d2           xor edx, edx
0x00004aed      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00004af7      49f7f1         div r9
0x00004afa      4839c8         cmp rax, rcx
0x00004afd      763c           jbe 0x4b3b
0x00004aff      4889c8         mov rax, rcx
0x00004b02      48d1e8         shr rax, 1
0x00004b05      488d4c0801     lea rcx, [rax + rcx + 1]
0x00004b0a      48890e         mov qword [rsi], rcx
0x00004b0d      490fafc9       imul rcx, r9
0x00004b11      4889ce         mov rsi, rcx
0x00004b14      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004b19      0f1f80000000.  nop dword [rax]
0x00004b20      4885c9         test rcx, rcx
0x00004b23      7423           je 0x4b48
0x00004b25      4889c8         mov rax, rcx
0x00004b28      49f7e1         mul r9
0x00004b2b      0f90c2         seto dl
0x00004b2e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004b31      0fb6d2         movzx edx, dl
0x00004b34      7805           js 0x4b3b
0x00004b36      4885d2         test rdx, rdx
0x00004b39      74cf           je 0x4b0a
0x00004b3b      4883ec08       sub rsp, 8
0x00004b3f      e81c010000     call sym.xalloc_die
0x00004b44      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004b48      31d2           xor edx, edx
0x00004b4a      b880000000     mov eax, 0x80
0x00004b4f      4531c0         xor r8d, r8d
0x00004b52      49f7f1         div r9
0x00004b55      4885c0         test rax, rax
0x00004b58      410f94c0       sete r8b
0x00004b5c      498d0c00       lea rcx, [r8 + rax]
0x00004b60      ebc3           jmp 0x4b25
0x00004b62      0f1f4000       nop dword [rax]
0x00004b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004b70      4885ff         test rdi, rdi
0x00004b73      488b06         mov rax, qword [rsi]
0x00004b76      7428           je 0x4ba0
0x00004b78      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004b82      4839d0         cmp rax, rdx
0x00004b85      772a           ja 0x4bb1
0x00004b87      4889c2         mov rdx, rax
0x00004b8a      48d1ea         shr rdx, 1
0x00004b8d      488d440201     lea rax, [rdx + rax + 1]
0x00004b92      488906         mov qword [rsi], rax
0x00004b95      4889c6         mov rsi, rax
0x00004b98      e9d3feffff     jmp sym.xrealloc
0x00004b9d      0f1f00         nop dword [rax]
0x00004ba0      4885c0         test rax, rax
0x00004ba3      ba80000000     mov edx, 0x80
0x00004ba8      480f44c2       cmove rax, rdx
0x00004bac      4885c0         test rax, rax
0x00004baf      79e1           jns 0x4b92
0x00004bb1      4883ec08       sub rsp, 8
0x00004bb5      e8a6000000     call sym.xalloc_die
0x00004bba      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004bc0      53             push rbx
0x00004bc1      4889fb         mov rbx, rdi
0x00004bc4      e847feffff     call sym.xmalloc
0x00004bc9      4889da         mov rdx, rbx
0x00004bcc      31f6           xor esi, esi
0x00004bce      4889c7         mov rdi, rax
0x00004bd1      5b             pop rbx
0x00004bd2      e959c9ffff     jmp sym.imp.memset
0x00004bd7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004be0      4889f8         mov rax, rdi
0x00004be3      4883ec08       sub rsp, 8
0x00004be7      48f7e6         mul rsi
0x00004bea      0f90c2         seto dl
0x00004bed      4885c0         test rax, rax
0x00004bf0      7817           js 0x4c09
0x00004bf2      0fb6d2         movzx edx, dl
0x00004bf5      4885d2         test rdx, rdx
0x00004bf8      750f           jne 0x4c09
0x00004bfa      e871c9ffff     call sym.imp.calloc
0x00004bff      4885c0         test rax, rax
0x00004c02      7405           je 0x4c09
0x00004c04      4883c408       add rsp, 8
0x00004c08      c3             ret
0x00004c09      e852000000     call sym.xalloc_die
0x00004c0e      6690           nop
;-- xmemdup:
0x00004c10      55             push rbp
0x00004c11      53             push rbx
0x00004c12      4889fd         mov rbp, rdi
0x00004c15      4889f7         mov rdi, rsi
0x00004c18      4889f3         mov rbx, rsi
0x00004c1b      4883ec08       sub rsp, 8
0x00004c1f      e8ecfdffff     call sym.xmalloc
0x00004c24      4883c408       add rsp, 8
0x00004c28      4889da         mov rdx, rbx
0x00004c2b      4889ee         mov rsi, rbp
0x00004c2e      5b             pop rbx
0x00004c2f      5d             pop rbp
0x00004c30      4889c7         mov rdi, rax
0x00004c33      e948c9ffff     jmp sym.imp.memcpy
0x00004c38      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004c40      53             push rbx
0x00004c41      4889fb         mov rbx, rdi
0x00004c44      e857c8ffff     call sym.imp.strlen
0x00004c49      4889df         mov rdi, rbx
0x00004c4c      488d7001       lea rsi, [rax + 1]
0x00004c50      5b             pop rbx
0x00004c51      ebbd           jmp sym.xmemdup
0x00004c53      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c5d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004c60      488d35c81c00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x692f ; "memory exhausted"
0x00004c67      4883ec08       sub rsp, 8
0x00004c6b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004c70      31ff           xor edi, edi
0x00004c72      e809c8ffff     call sym.imp.dcgettext
0x00004c77      8b3d9b332000   mov edi, dword [obj.exit_failure]       ; [0x208018:4]=1
0x00004c7d      488d15241400.  lea rdx, [0x000060a8]                   ; "%s"
0x00004c84      4889c1         mov rcx, rax
0x00004c87      31f6           xor esi, esi
0x00004c89      31c0           xor eax, eax
0x00004c8b      e8a0c9ffff     call sym.imp.error
0x00004c90      e85bc7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004c95      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c9f      90             nop
;-- xnumtoimax:
0x00004ca0      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00004ca2      4156           push r14
0x00004ca4      4989cf         mov r15, rcx
0x00004ca7      4155           push r13
0x00004ca9      4154           push r12
0x00004cab      4989d6         mov r14, rdx
0x00004cae      55             push rbp
0x00004caf      53             push rbx
0x00004cb0      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00004cb2      31f6           xor esi, esi
0x00004cb4      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00004cb7      4d89cd         mov r13, r9
0x00004cba      4883ec18       sub rsp, 0x18
0x00004cbe      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00004cc1      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00004cc5      64488b042528.  mov rax, qword fs:[0x28]
0x00004cce      4889442408     mov qword [rsp + 8], rax
0x00004cd3      31c0           xor eax, eax
0x00004cd5      e816010000     call sym.xstrtoimax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x00004cda      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x00004cdc      0f858e000000   jne 0x4d70
0x00004ce2      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00004ce6      4c39f5         cmp rbp, r14
0x00004ce9      7c05           jl 0x4cf0
0x00004ceb      4c39fd         cmp rbp, r15
0x00004cee      7e56           jle 0x4d46
0x00004cf0      e80bc7ffff     call sym.imp.__errno_location
0x00004cf5      4881fdffffff.  cmp rbp, 0x3fffffff                     ; ../coreutils-8.31/lib/xdectoint.c:51
0x00004cfc      4989c6         mov r14, rax
0x00004cff      0f8e8b000000   jle 0x4d90
0x00004d05      41c7064b0000.  mov dword [r14], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00004d0c      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x00004d0f      e8bcf6ffff     call sym.quote
0x00004d14      418b36         mov esi, dword [r14]
0x00004d17      4989c0         mov r8, rax
0x00004d1a      b800000000     mov eax, 0
0x00004d1f      488d157e1300.  lea rdx, str.s:__s                      ; 0x60a4 ; "%s: %s"
0x00004d26      4c89e9         mov rcx, r13
0x00004d29      83fe16         cmp esi, 0x16
0x00004d2c      0f44f0         cmove esi, eax
0x00004d2f      85db           test ebx, ebx
0x00004d31      b801000000     mov eax, 1
0x00004d36      0f44d8         cmove ebx, eax
0x00004d39      31c0           xor eax, eax
0x00004d3b      89df           mov edi, ebx
0x00004d3d      e8eec8ffff     call sym.imp.error
0x00004d42      488b2c24       mov rbp, qword [rsp]
0x00004d46      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00004d4b      644833142528.  xor rdx, qword fs:[0x28]
0x00004d54      4889e8         mov rax, rbp
0x00004d57      7553           jne 0x4dac
0x00004d59      4883c418       add rsp, 0x18
0x00004d5d      5b             pop rbx
0x00004d5e      5d             pop rbp
0x00004d5f      415c           pop r12
0x00004d61      415d           pop r13
0x00004d63      415e           pop r14
0x00004d65      415f           pop r15
0x00004d67      c3             ret
0x00004d68      0f1f84000000.  nop dword [rax + rax]
0x00004d70      89c5           mov ebp, eax
0x00004d72      e889c6ffff     call sym.imp.__errno_location
0x00004d77      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x00004d7a      4989c6         mov r14, rax
0x00004d7d      7486           je 0x4d05
0x00004d7f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00004d82      7588           jne 0x4d0c
0x00004d84      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x00004d8a      eb80           jmp 0x4d0c
0x00004d8c      0f1f4000       nop dword [rax]
0x00004d90      4881fdffffff.  cmp rbp, 0xffffffffbfffffff             ; ../coreutils-8.31/lib/xdectoint.c:55
0x00004d97      b822000000     mov eax, 0x22                           ; '"'
0x00004d9c      ba4b000000     mov edx, 0x4b                           ; 'K'
0x00004da1      0f4ec2         cmovle eax, edx
0x00004da4      418906         mov dword [r14], eax
0x00004da7      e960ffffff     jmp 0x4d0c
0x00004dac      e8ffc6ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
0x00004db1      0f1f440000     nop dword [rax + rax]
0x00004db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xdectoimax:
0x00004dc0      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00004dc4      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00004dc6      4d89c1         mov r9, r8
0x00004dc9      4989c8         mov r8, rcx
0x00004dcc      4889d1         mov rcx, rdx
0x00004dcf      4889f2         mov rdx, rsi
0x00004dd2      be0a000000     mov esi, 0xa
0x00004dd7      e8c4feffff     call sym.xnumtoimax
0x00004ddc      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00004de0      c3             ret
0x00004de1      662e0f1f8400.  nop word cs:[rax + rax]
0x00004deb      0f1f440000     nop dword [rax + rax]
;-- xstrtoimax:
0x00004df0      4157           push r15
0x00004df2      4156           push r14
0x00004df4      4155           push r13
0x00004df6      4154           push r12
0x00004df8      55             push rbp
0x00004df9      53             push rbx
0x00004dfa      4883ec28       sub rsp, 0x28
0x00004dfe      64488b042528.  mov rax, qword fs:[0x28]
0x00004e07      4889442418     mov qword [rsp + 0x18], rax
0x00004e0c      31c0           xor eax, eax
0x00004e0e      83fa24         cmp edx, 0x24
0x00004e11      0f8768060000   ja 0x547f
0x00004e17      488d442410     lea rax, [rsp + 0x10]
0x00004e1c      4885f6         test rsi, rsi
0x00004e1f      4889f3         mov rbx, rsi
0x00004e22      4989fc         mov r12, rdi
0x00004e25      89d5           mov ebp, edx
0x00004e27      4989ce         mov r14, rcx
0x00004e2a      480f44d8       cmove rbx, rax
0x00004e2e      4d89c7         mov r15, r8
0x00004e31      e8cac5ffff     call sym.imp.__errno_location
0x00004e36      31c9           xor ecx, ecx
0x00004e38      89ea           mov edx, ebp
0x00004e3a      c70000000000   mov dword [rax], 0
0x00004e40      4889de         mov rsi, rbx
0x00004e43      4c89e7         mov rdi, r12
0x00004e46      4989c5         mov r13, rax
0x00004e49      e802c6ffff     call sym.imp.__strtol_internal
0x00004e4e      488b0b         mov rcx, qword [rbx]
0x00004e51      4889c5         mov rbp, rax
0x00004e54      4c39e1         cmp rcx, r12
0x00004e57      745f           je 0x4eb8
0x00004e59      418b4500       mov eax, dword [r13]
0x00004e5d      85c0           test eax, eax
0x00004e5f      753f           jne 0x4ea0
0x00004e61      4531e4         xor r12d, r12d
0x00004e64      4d85ff         test r15, r15
0x00004e67      740d           je 0x4e76
0x00004e69      440fb629       movzx r13d, byte [rcx]
0x00004e6d      4584ed         test r13b, r13b
0x00004e70      0f857d000000   jne 0x4ef3
0x00004e76      49892e         mov qword [r14], rbp
0x00004e79      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00004e7e      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004e87      4489e0         mov eax, r12d
0x00004e8a      0f850e060000   jne 0x549e
0x00004e90      4883c428       add rsp, 0x28
0x00004e94      5b             pop rbx
0x00004e95      5d             pop rbp
0x00004e96      415c           pop r12
0x00004e98      415d           pop r13
0x00004e9a      415e           pop r14
0x00004e9c      415f           pop r15
0x00004e9e      c3             ret
0x00004e9f      90             nop
0x00004ea0      83f822         cmp eax, 0x22
0x00004ea3      41bc04000000   mov r12d, 4
0x00004ea9      75ce           jne 0x4e79
0x00004eab      41bc01000000   mov r12d, 1
0x00004eb1      ebb1           jmp 0x4e64
0x00004eb3      0f1f440000     nop dword [rax + rax]
0x00004eb8      4d85ff         test r15, r15
0x00004ebb      0f848f040000   je 0x5350
0x00004ec1      440fb629       movzx r13d, byte [rcx]
0x00004ec5      48894c2408     mov qword [rsp + 8], rcx
0x00004eca      41bc04000000   mov r12d, 4
0x00004ed0      4584ed         test r13b, r13b
0x00004ed3      74a4           je 0x4e79
0x00004ed5      410fbef5       movsx esi, r13b
0x00004ed9      4c89ff         mov rdi, r15
0x00004edc      e8ffc5ffff     call sym.imp.strchr
0x00004ee1      4885c0         test rax, rax
0x00004ee4      488b4c2408     mov rcx, qword [rsp + 8]
0x00004ee9      748e           je 0x4e79
0x00004eeb      bd01000000     mov ebp, 1
0x00004ef0      4531e4         xor r12d, r12d
0x00004ef3      410fbef5       movsx esi, r13b
0x00004ef7      4c89ff         mov rdi, r15
0x00004efa      48894c2408     mov qword [rsp + 8], rcx
0x00004eff      e8dcc5ffff     call sym.imp.strchr
0x00004f04      4885c0         test rax, rax
0x00004f07      488b4c2408     mov rcx, qword [rsp + 8]
0x00004f0c      745a           je 0x4f68
0x00004f0e      418d45bb       lea eax, [r13 - 0x45]
0x00004f12      3c2f           cmp al, 0x2f
0x00004f14      7762           ja 0x4f78
0x00004f16      48ba45893000.  movabs rdx, 0x814400308945
0x00004f20      480fa3c2       bt rdx, rax
0x00004f24      7352           jae 0x4f78
0x00004f26      be30000000     mov esi, 0x30                           ; '0'
0x00004f2b      4c89ff         mov rdi, r15
0x00004f2e      48894c2408     mov qword [rsp + 8], rcx
0x00004f33      e8a8c5ffff     call sym.imp.strchr
0x00004f38      4885c0         test rax, rax
0x00004f3b      488b4c2408     mov rcx, qword [rsp + 8]
0x00004f40      7436           je 0x4f78
0x00004f42      0fb64101       movzx eax, byte [rcx + 1]
0x00004f46      3c44           cmp al, 0x44
0x00004f48      740c           je 0x4f56
0x00004f4a      3c69           cmp al, 0x69
0x00004f4c      0f84e6040000   je 0x5438
0x00004f52      3c42           cmp al, 0x42
0x00004f54      7522           jne 0x4f78
0x00004f56      bf02000000     mov edi, 2
0x00004f5b      b8e8030000     mov eax, 0x3e8
0x00004f60      eb20           jmp 0x4f82
0x00004f62      660f1f440000   nop word [rax + rax]
0x00004f68      49892e         mov qword [r14], rbp
0x00004f6b      4183cc02       or r12d, 2
0x00004f6f      e905ffffff     jmp 0x4e79
0x00004f74      0f1f4000       nop dword [rax]
0x00004f78      bf01000000     mov edi, 1
0x00004f7d      b800040000     mov eax, 0x400
0x00004f82      4183ed42       sub r13d, 0x42
0x00004f86      4180fd35       cmp r13b, 0x35
0x00004f8a      77dc           ja 0x4f68
0x00004f8c      488d35f51900.  lea rsi, [0x00006988]
0x00004f93      450fb6ed       movzx r13d, r13b
0x00004f97      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x00004f9b      4801f2         add rdx, rsi
0x00004f9e      ffe2           jmp rdx
0x00004fa0      49b800000000.  movabs r8, 0x8000000000000000
0x00004faa      4863f0         movsxd rsi, eax
0x00004fad      4c89c0         mov rax, r8
0x00004fb0      4899           cqo
0x00004fb2      48f7fe         idiv rsi
0x00004fb5      4839c5         cmp rbp, rax
0x00004fb8      4989c1         mov r9, rax
0x00004fbb      0f8ca4040000   jl 0x5465
0x00004fc1      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x00004fcb      4c89d0         mov rax, r10
0x00004fce      4899           cqo
0x00004fd0      48f7fe         idiv rsi
0x00004fd3      4839c5         cmp rbp, rax
0x00004fd6      0f8f96040000   jg 0x5472
0x00004fdc      480fafee       imul rbp, rsi
0x00004fe0      4939e9         cmp r9, rbp
0x00004fe3      0f8f7c040000   jg 0x5465
0x00004fe9      4839e8         cmp rax, rbp
0x00004fec      0f8c80040000   jl 0x5472
0x00004ff2      480fafee       imul rbp, rsi
0x00004ff6      31c0           xor eax, eax
0x00004ff8      4109c4         or r12d, eax
0x00004ffb      0f1f440000     nop dword [rax + rax]
0x00005000      4863c7         movsxd rax, edi
0x00005003      4801c1         add rcx, rax
0x00005006      4489e0         mov eax, r12d
0x00005009      83c802         or eax, 2
0x0000500c      48890b         mov qword [rbx], rcx
0x0000500f      803900         cmp byte [rcx], 0
0x00005012      440f45e0       cmovne r12d, eax
0x00005016      e95bfeffff     jmp 0x4e76
0x0000501b      0f1f440000     nop dword [rax + rax]
0x00005020      48b800000000.  movabs rax, 0xc000000000000000
0x0000502a      4839c5         cmp rbp, rax
0x0000502d      0f8c2d030000   jl 0x5360
0x00005033      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x0000503d      4839c5         cmp rbp, rax
0x00005040      0f8fda030000   jg 0x5420
0x00005046      4801ed         add rbp, rbp
0x00005049      ebb5           jmp 0x5000
0x0000504b      0f1f440000     nop dword [rax + rax]
0x00005050      48b800000000.  movabs rax, 0xffc0000000000000
0x0000505a      4839c5         cmp rbp, rax
0x0000505d      0f8cfd020000   jl 0x5360
0x00005063      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x0000506d      4839c5         cmp rbp, rax
0x00005070      0f8faa030000   jg 0x5420
0x00005076      48c1e509       shl rbp, 9
0x0000507a      eb84           jmp 0x5000
0x0000507c      0f1f4000       nop dword [rax]
0x00005080      4863f0         movsxd rsi, eax
0x00005083      48b800000000.  movabs rax, 0x8000000000000000
0x0000508d      41b807000000   mov r8d, 7
0x00005093      4899           cqo
0x00005095      4531db         xor r11d, r11d
0x00005098      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x000050a2      48f7fe         idiv rsi
0x000050a5      4989c2         mov r10, rax
0x000050a8      eb25           jmp 0x50cf
0x000050aa      660f1f440000   nop word [rax + rax]
0x000050b0      4c89c8         mov rax, r9
0x000050b3      4899           cqo
0x000050b5      48f7fe         idiv rsi
0x000050b8      4839e8         cmp rax, rbp
0x000050bb      0f8ce7020000   jl 0x53a8
0x000050c1      480fafee       imul rbp, rsi
0x000050c5      4183e801       sub r8d, 1
0x000050c9      0f8421010000   je 0x51f0
0x000050cf      4939ea         cmp r10, rbp
0x000050d2      7edc           jle 0x50b0
0x000050d4      41bb01000000   mov r11d, 1
0x000050da      48bd00000000.  movabs rbp, 0x8000000000000000
0x000050e4      ebdf           jmp 0x50c5
0x000050e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000050f0      4863f0         movsxd rsi, eax
0x000050f3      48b800000000.  movabs rax, 0x8000000000000000
0x000050fd      41b808000000   mov r8d, 8
0x00005103      4899           cqo
0x00005105      4531db         xor r11d, r11d
0x00005108      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00005112      48f7fe         idiv rsi
0x00005115      4989c2         mov r10, rax
0x00005118      eb25           jmp 0x513f
0x0000511a      660f1f440000   nop word [rax + rax]
0x00005120      4c89c8         mov rax, r9
0x00005123      4899           cqo
0x00005125      48f7fe         idiv rsi
0x00005128      4839e8         cmp rax, rbp
0x0000512b      0f8c47020000   jl 0x5378
0x00005131      480fafee       imul rbp, rsi
0x00005135      4183e801       sub r8d, 1
0x00005139      0f84b1000000   je 0x51f0
0x0000513f      4939ea         cmp r10, rbp
0x00005142      7edc           jle 0x5120
0x00005144      41bb01000000   mov r11d, 1
0x0000514a      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005154      ebdf           jmp 0x5135
0x00005156      662e0f1f8400.  nop word cs:[rax + rax]
0x00005160      49b800000000.  movabs r8, 0x8000000000000000
0x0000516a      4863f0         movsxd rsi, eax
0x0000516d      4c89c0         mov rax, r8
0x00005170      4899           cqo
0x00005172      48f7fe         idiv rsi
0x00005175      4839c5         cmp rbp, rax
0x00005178      0f8ce2010000   jl 0x5360
0x0000517e      4983e801       sub r8, 1
0x00005182      4c89c0         mov rax, r8
0x00005185      4899           cqo
0x00005187      48f7fe         idiv rsi
0x0000518a      4839c5         cmp rbp, rax
0x0000518d      0f8f8d020000   jg 0x5420
0x00005193      480fafee       imul rbp, rsi
0x00005197      e964feffff     jmp 0x5000
0x0000519c      0f1f4000       nop dword [rax]
0x000051a0      4863f0         movsxd rsi, eax
0x000051a3      48b800000000.  movabs rax, 0x8000000000000000
0x000051ad      41b803000000   mov r8d, 3
0x000051b3      4899           cqo
0x000051b5      4531db         xor r11d, r11d
0x000051b8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x000051c2      48f7fe         idiv rsi
0x000051c5      4989c2         mov r10, rax
0x000051c8      4939ea         cmp r10, rbp
0x000051cb      0f8fef010000   jg 0x53c0
0x000051d1      4c89c8         mov rax, r9
0x000051d4      4899           cqo
0x000051d6      48f7fe         idiv rsi
0x000051d9      4839e8         cmp rax, rbp
0x000051dc      0f8c6e020000   jl 0x5450
0x000051e2      480fafee       imul rbp, rsi
0x000051e6      4183e801       sub r8d, 1
0x000051ea      75dc           jne 0x51c8
0x000051ec      0f1f4000       nop dword [rax]
0x000051f0      4509dc         or r12d, r11d
0x000051f3      e908feffff     jmp 0x5000
0x000051f8      0f1f84000000.  nop dword [rax + rax]
0x00005200      4863f0         movsxd rsi, eax
0x00005203      48b800000000.  movabs rax, 0x8000000000000000
0x0000520d      41b806000000   mov r8d, 6
0x00005213      4899           cqo
0x00005215      4531db         xor r11d, r11d
0x00005218      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00005222      48f7fe         idiv rsi
0x00005225      4989c2         mov r10, rax
0x00005228      eb21           jmp 0x524b
0x0000522a      660f1f440000   nop word [rax + rax]
0x00005230      4c89c8         mov rax, r9
0x00005233      4899           cqo
0x00005235      48f7fe         idiv rsi
0x00005238      4839e8         cmp rax, rbp
0x0000523b      0f8c97010000   jl 0x53d8
0x00005241      480fafee       imul rbp, rsi
0x00005245      4183e801       sub r8d, 1
0x00005249      74a5           je 0x51f0
0x0000524b      4939ea         cmp r10, rbp
0x0000524e      7ee0           jle 0x5230
0x00005250      41bb01000000   mov r11d, 1
0x00005256      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005260      ebe3           jmp 0x5245
0x00005262      660f1f440000   nop word [rax + rax]
0x00005268      4863f0         movsxd rsi, eax
0x0000526b      48b800000000.  movabs rax, 0x8000000000000000
0x00005275      41b805000000   mov r8d, 5
0x0000527b      4899           cqo
0x0000527d      4531db         xor r11d, r11d
0x00005280      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000528a      48f7fe         idiv rsi
0x0000528d      4989c2         mov r10, rax
0x00005290      eb25           jmp 0x52b7
0x00005292      660f1f440000   nop word [rax + rax]
0x00005298      4c89c8         mov rax, r9
0x0000529b      4899           cqo
0x0000529d      48f7fe         idiv rsi
0x000052a0      4839e8         cmp rax, rbp
0x000052a3      0f8c47010000   jl 0x53f0
0x000052a9      480fafee       imul rbp, rsi
0x000052ad      4183e801       sub r8d, 1
0x000052b1      0f8439ffffff   je 0x51f0
0x000052b7      4939ea         cmp r10, rbp
0x000052ba      7edc           jle 0x5298
0x000052bc      41bb01000000   mov r11d, 1
0x000052c2      48bd00000000.  movabs rbp, 0x8000000000000000
0x000052cc      ebdf           jmp 0x52ad
0x000052ce      6690           nop
0x000052d0      48b800000000.  movabs rax, 0xffe0000000000000
0x000052da      4839c5         cmp rbp, rax
0x000052dd      0f8c7d000000   jl 0x5360
0x000052e3      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x000052ed      4839c5         cmp rbp, rax
0x000052f0      0f8f2a010000   jg 0x5420
0x000052f6      48c1e50a       shl rbp, 0xa
0x000052fa      e901fdffff     jmp 0x5000
0x000052ff      90             nop
0x00005300      4863f0         movsxd rsi, eax
0x00005303      48b800000000.  movabs rax, 0x8000000000000000
0x0000530d      41b804000000   mov r8d, 4
0x00005313      4899           cqo
0x00005315      4531db         xor r11d, r11d
0x00005318      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00005322      48f7fe         idiv rsi
0x00005325      4989c2         mov r10, rax
0x00005328      4939ea         cmp r10, rbp
0x0000532b      7f63           jg 0x5390
0x0000532d      4c89c8         mov rax, r9
0x00005330      4899           cqo
0x00005332      48f7fe         idiv rsi
0x00005335      4839e8         cmp rax, rbp
0x00005338      0f8cca000000   jl 0x5408
0x0000533e      480fafee       imul rbp, rsi
0x00005342      4183e801       sub r8d, 1
0x00005346      75e0           jne 0x5328
0x00005348      e9a3feffff     jmp 0x51f0
0x0000534d      0f1f00         nop dword [rax]
0x00005350      41bc04000000   mov r12d, 4
0x00005356      e91efbffff     jmp 0x4e79
0x0000535b      0f1f440000     nop dword [rax + rax]
0x00005360      41bc01000000   mov r12d, 1
0x00005366      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005370      e98bfcffff     jmp 0x5000
0x00005375      0f1f00         nop dword [rax]
0x00005378      41bb01000000   mov r11d, 1
0x0000537e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005388      e9a8fdffff     jmp 0x5135
0x0000538d      0f1f00         nop dword [rax]
0x00005390      41bb01000000   mov r11d, 1
0x00005396      48bd00000000.  movabs rbp, 0x8000000000000000
0x000053a0      eba0           jmp 0x5342
0x000053a2      660f1f440000   nop word [rax + rax]
0x000053a8      41bb01000000   mov r11d, 1
0x000053ae      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x000053b8      e908fdffff     jmp 0x50c5
0x000053bd      0f1f00         nop dword [rax]
0x000053c0      41bb01000000   mov r11d, 1
0x000053c6      48bd00000000.  movabs rbp, 0x8000000000000000
0x000053d0      e911feffff     jmp 0x51e6
0x000053d5      0f1f00         nop dword [rax]
0x000053d8      41bb01000000   mov r11d, 1
0x000053de      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x000053e8      e958feffff     jmp 0x5245
0x000053ed      0f1f00         nop dword [rax]
0x000053f0      41bb01000000   mov r11d, 1
0x000053f6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005400      e9a8feffff     jmp 0x52ad
0x00005405      0f1f00         nop dword [rax]
0x00005408      41bb01000000   mov r11d, 1
0x0000540e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005418      e925ffffff     jmp 0x5342
0x0000541d      0f1f00         nop dword [rax]
0x00005420      41bc01000000   mov r12d, 1
0x00005426      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005430      e9cbfbffff     jmp 0x5000
0x00005435      0f1f00         nop dword [rax]
0x00005438      31ff           xor edi, edi
0x0000543a      80790242       cmp byte [rcx + 2], 0x42
0x0000543e      b800040000     mov eax, 0x400
0x00005443      400f94c7       sete dil
0x00005447      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000544b      e932fbffff     jmp 0x4f82
0x00005450      41bb01000000   mov r11d, 1
0x00005456      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005460      e981fdffff     jmp 0x51e6
0x00005465      b801000000     mov eax, 1
0x0000546a      4c89c5         mov rbp, r8
0x0000546d      e986fbffff     jmp 0x4ff8
0x00005472      b801000000     mov eax, 1
0x00005477      4c89d5         mov rbp, r10
0x0000547a      e979fbffff     jmp 0x4ff8
0x0000547f      488d0dda1500.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x6a60 ; "xstrtoimax"
0x00005486      488d35b31400.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x6940 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000548d      488d3dcc1400.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x6960 ; "0 <= strtol_base && strtol_base <= 36"
0x00005494      ba54000000     mov edx, 0x54                           ; 'T'
0x00005499      e882c0ffff     call sym.imp.__assert_fail
0x0000549e      e80dc0ffff     call sym.imp.__stack_chk_fail
0x000054a3      662e0f1f8400.  nop word cs:[rax + rax]
0x000054ad      0f1f00         nop dword [rax]
;-- rpl_mbrtowc:
0x000054b0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000054b2      4154           push r12
0x000054b4      4989f5         mov r13, rsi
0x000054b7      55             push rbp
0x000054b8      53             push rbx
0x000054b9      4889fb         mov rbx, rdi
0x000054bc      4989d4         mov r12, rdx
0x000054bf      4883ec18       sub rsp, 0x18
0x000054c3      64488b042528.  mov rax, qword fs:[0x28]
0x000054cc      4889442408     mov qword [rsp + 8], rax
0x000054d1      31c0           xor eax, eax
0x000054d3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000054d8      4885ff         test rdi, rdi
0x000054db      480f44d8       cmove rbx, rax
0x000054df      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000054e2      e8e9bfffff     call sym.imp.mbrtowc
0x000054e7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000054eb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000054ee      7620           jbe 0x5510                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000054f0      4d85e4         test r12, r12
0x000054f3      741b           je 0x5510
0x000054f5      31ff           xor edi, edi
0x000054f7      e8c4000000     call sym.hard_locale
0x000054fc      84c0           test al, al
0x000054fe      7510           jne 0x5510
0x00005500      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005505      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000550a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000550c      0f1f4000       nop dword [rax]
0x00005510      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005515      644833142528.  xor rdx, qword fs:[0x28]
0x0000551e      4889e8         mov rax, rbp
0x00005521      750b           jne 0x552e
0x00005523      4883c418       add rsp, 0x18
0x00005527      5b             pop rbx
0x00005528      5d             pop rbp
0x00005529      415c           pop r12
0x0000552b      415d           pop r13
0x0000552d      c3             ret
0x0000552e      e87dbfffff     call sym.imp.__stack_chk_fail
0x00005533      662e0f1f8400.  nop word cs:[rax + rax]
0x0000553d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005540      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005542      55             push rbp
0x00005543      4889fd         mov rbp, rdi
0x00005546      53             push rbx
0x00005547      e8e4beffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000554c      8b5d00         mov ebx, dword [rbp]
0x0000554f      4889ef         mov rdi, rbp
0x00005552      4989c4         mov r12, rax
0x00005555      e806010000     call sym.rpl_fclose
0x0000555a      83e320         and ebx, 0x20                           ; "@"
0x0000555d      85db           test ebx, ebx
0x0000555f      7517           jne 0x5578
0x00005561      85c0           test eax, eax
0x00005563      740a           je 0x556f                               ; stdio.h:-186
0x00005565      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005568      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000556d      7439           je 0x55a8
0x0000556f      5b             pop rbx
0x00005570      5d             pop rbp
0x00005571      415c           pop r12
0x00005573      c3             ret
0x00005574      0f1f4000       nop dword [rax]
0x00005578      85c0           test eax, eax
0x0000557a      751c           jne 0x5598
0x0000557c      e87fbeffff     call sym.imp.__errno_location
0x00005581      c70000000000   mov dword [rax], 0
0x00005587      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000558c      5b             pop rbx
0x0000558d      5d             pop rbp
0x0000558e      415c           pop r12
0x00005590      c3             ret
0x00005591      0f1f80000000.  nop dword [rax]
0x00005598      5b             pop rbx
0x00005599      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000559e      5d             pop rbp                                 ; stdio.h:-186
0x0000559f      415c           pop r12
0x000055a1      c3             ret
0x000055a2      660f1f440000   nop word [rax + rax]
0x000055a8      e853beffff     call sym.imp.__errno_location
0x000055ad      833809         cmp dword [rax], 9
0x000055b0      5b             pop rbx
0x000055b1      5d             pop rbp
0x000055b2      415c           pop r12                                 ; stdio.h:-178
0x000055b4      0f95c0         setne al
0x000055b7      0fb6c0         movzx eax, al
0x000055ba      f7d8           neg eax
0x000055bc      c3             ret
0x000055bd      0f1f00         nop dword [rax]
;-- hard_locale:
0x000055c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000055c4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000055c6      e845c0ffff     call sym.imp.setlocale
0x000055cb      4889c2         mov rdx, rax
0x000055ce      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000055d3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000055d6      741d           je 0x55f5
0x000055d8      488d3d8c1400.  lea rdi, [0x00006a6b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000055df      b902000000     mov ecx, 2
0x000055e4      4889d6         mov rsi, rdx
0x000055e7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000055e9      0f97c1         seta cl
0x000055ec      80d900         sbb cl, 0
0x000055ef      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000055f1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000055f3      750b           jne 0x5600
0x000055f5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000055f9      c3             ret
0x000055fa      660f1f440000   nop word [rax + rax]
0x00005600      488d3d661400.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x6a6d ; "POSIX"
0x00005607      b906000000     mov ecx, 6
0x0000560c      4889d6         mov rsi, rdx
0x0000560f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005611      0f97c0         seta al
0x00005614      1c00           sbb al, 0
0x00005616      84c0           test al, al
0x00005618      0f95c0         setne al
0x0000561b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000561f      c3             ret
;-- locale_charset:
0x00005620      4883ec08       sub rsp, 8
0x00005624      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005629      e8a2bfffff     call sym.imp.nl_langinfo
0x0000562e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005631      741d           je 0x5650
0x00005633      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005636      488d15361400.  lea rdx, str.ASCII                      ; 0x6a73 ; "ASCII"
0x0000563d      480f44c2       cmove rax, rdx
0x00005641      4883c408       add rsp, 8
0x00005645      c3             ret
0x00005646      662e0f1f8400.  nop word cs:[rax + rax]
0x00005650      488d051c1400.  lea rax, str.ASCII                      ; 0x6a73 ; "ASCII"
0x00005657      4883c408       add rsp, 8
0x0000565b      c3             ret
0x0000565c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005660      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005662      55             push rbp
0x00005663      53             push rbx
0x00005664      4889fb         mov rbx, rdi
0x00005667      e824bfffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000566c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000566e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005671      7854           js 0x56c7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005673      e878bfffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005678      85c0           test eax, eax
0x0000567a      752c           jne 0x56a8
0x0000567c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000567f      e85c000000     call sym.rpl_fflush
0x00005684      85c0           test eax, eax
0x00005686      743c           je 0x56c4
0x00005688      e873bdffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000568d      448b20         mov r12d, dword [rax]
0x00005690      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005693      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005696      e8c5bdffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000569b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000569e      7530           jne 0x56d0
0x000056a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000056a1      5d             pop rbp
0x000056a2      415c           pop r12
0x000056a4      c3             ret
0x000056a5      0f1f00         nop dword [rax]
0x000056a8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000056ab      e8e0beffff     call sym.imp.fileno
0x000056b0      31f6           xor esi, esi
0x000056b2      ba01000000     mov edx, 1
0x000056b7      89c7           mov edi, eax
0x000056b9      e852beffff     call sym.imp.lseek
0x000056be      4883f8ff       cmp rax, 0xffffffffffffffff
0x000056c2      75b8           jne 0x567c
0x000056c4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000056c7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000056c8      5d             pop rbp
0x000056c9      415c           pop r12
0x000056cb      e990bdffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000056d0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000056d4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000056d9      ebc5           jmp 0x56a0
0x000056db      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000056e0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000056e3      53             push rbx
0x000056e4      4889fb         mov rbx, rdi
0x000056e7      7411           je 0x56fa                               ; ../coreutils-8.31/lib/fflush.c:150
0x000056e9      e802bfffff     call sym.imp.__freading
0x000056ee      85c0           test eax, eax
0x000056f0      7408           je 0x56fa
0x000056f2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000056f8      750e           jne 0x5708
0x000056fa      4889df         mov rdi, rbx
0x000056fd      5b             pop rbx
0x000056fe      e9bdbeffff     jmp sym.imp.fflush
0x00005703      0f1f440000     nop dword [rax + rax]
0x00005708      4889df         mov rdi, rbx
0x0000570b      ba01000000     mov edx, 1
0x00005710      31f6           xor esi, esi
0x00005712      e809000000     call sym.rpl_fseeko
0x00005717      4889df         mov rdi, rbx
0x0000571a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000571b      e9a0beffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005720      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005724      48394710       cmp qword [rdi + 0x10], rax
0x00005728      7406           je 0x5730                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000572a      e921bfffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x0000572f      90             nop
0x00005730      488b4720       mov rax, qword [rdi + 0x20]
0x00005734      48394728       cmp qword [rdi + 0x28], rax
0x00005738      75f0           jne 0x572a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000573a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000573f      75e9           jne 0x572a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005741      4154           push r12
0x00005743      55             push rbp
0x00005744      4189d4         mov r12d, edx
0x00005747      53             push rbx
0x00005748      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000574b      4889fb         mov rbx, rdi
0x0000574e      e83dbeffff     call sym.imp.fileno
0x00005753      4489e2         mov edx, r12d
0x00005756      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005759      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x0000575b      e8b0bdffff     call sym.imp.lseek
0x00005760      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005764      740c           je 0x5772
0x00005766      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005769      488983900000.  mov qword [rbx + 0x90], rax
0x00005770      31c0           xor eax, eax
0x00005772      5b             pop rbx                                 ; /sys_errlist.h:19
0x00005773      5d             pop rbp
0x00005774      415c           pop r12
0x00005776      c3             ret
0x00005777      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00005780      4157           push r15
0x00005782      4156           push r14
0x00005784      4989d7         mov r15, rdx
0x00005787      4155           push r13
0x00005789      4154           push r12
0x0000578b      4c8d257e2320.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b10
0x00005792      55             push rbp
0x00005793      488d2d7e2320.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b18
0x0000579a      53             push rbx
0x0000579b      4189fd         mov r13d, edi
0x0000579e      4989f6         mov r14, rsi
0x000057a1      4c29e5         sub rbp, r12
0x000057a4      4883ec08       sub rsp, 8
0x000057a8      48c1fd03       sar rbp, 3
0x000057ac      e807bcffff     call sym._init
0x000057b1      4885ed         test rbp, rbp
0x000057b4      7420           je 0x57d6
0x000057b6      31db           xor ebx, ebx
0x000057b8      0f1f84000000.  nop dword [rax + rax]
0x000057c0      4c89fa         mov rdx, r15
0x000057c3      4c89f6         mov rsi, r14
0x000057c6      4489ef         mov edi, r13d
0x000057c9      41ff14dc       call qword [r12 + rbx*8]
0x000057cd      4883c301       add rbx, 1
0x000057d1      4839dd         cmp rbp, rbx
0x000057d4      75ea           jne 0x57c0
0x000057d6      4883c408       add rsp, 8
0x000057da      5b             pop rbx
0x000057db      5d             pop rbp
0x000057dc      415c           pop r12
0x000057de      415d           pop r13
0x000057e0      415e           pop r14
0x000057e2      415f           pop r15
0x000057e4      c3             ret
0x000057e5      90             nop
0x000057e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000057f0      f3c3           ret
0x000057f2      662e0f1f8400.  nop word cs:[rax + rax]
0x000057fc      0f1f4000       nop dword [rax]
;-- atexit:
0x00005800      488b15012820.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00005807      31f6           xor esi, esi
0x00005809      e952beffff     jmp sym.imp.__cxa_atexit
0x0000580e      0000           add byte [rax], al
