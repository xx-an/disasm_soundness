;-- section..plt:
;-- .plt:
0x00001390      ff35ba6a2000   push qword [0x00207e50]                 ; [12] -r-x section size 736 named .plt
0x00001396      ff25bc6a2000   jmp qword [0x00207e58]                  ; [0x207e58:8]=0
0x0000139c      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x000013a0      ff25ba6a2000   jmp qword [reloc.__uflow]               ; [0x207e60:8]=0x13a6
0x000013a6      6800000000     push 0
0x000013ab      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x000013b0      ff25b26a2000   jmp qword [reloc.free]                  ; [0x207e68:8]=0x13b6
0x000013b6      6801000000     push 1
0x000013bb      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000013c0      ff25aa6a2000   jmp qword [reloc.abort]                 ; [0x207e70:8]=0x13c6
0x000013c6      6802000000     push 2
0x000013cb      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000013d0      ff25a26a2000   jmp qword [reloc.__errno_location]      ; [0x207e78:8]=0x13d6
0x000013d6      6803000000     push 3
0x000013db      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000013e0      ff259a6a2000   jmp qword [reloc.strncmp]               ; [0x207e80:8]=0x13e6
0x000013e6      6804000000     push 4
0x000013eb      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x000013f0      ff25926a2000   jmp qword [reloc._exit]                 ; [0x207e88:8]=0x13f6
0x000013f6      6805000000     push 5
0x000013fb      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001400      ff258a6a2000   jmp qword [reloc.__fpending]            ; [0x207e90:8]=0x1406
0x00001406      6806000000     push 6
0x0000140b      e980ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00001410      ff25826a2000   jmp qword [reloc.clearerr_unlocked]     ; [0x207e98:8]=0x1416
0x00001416      6807000000     push 7
0x0000141b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001420      ff257a6a2000   jmp qword [reloc.textdomain]            ; [0x207ea0:8]=0x1426 ; "&\x14"
0x00001426      6808000000     push 8
0x0000142b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001430      ff25726a2000   jmp qword [reloc.fclose]                ; [0x207ea8:8]=0x1436 ; "6\x14"
0x00001436      6809000000     push 9
0x0000143b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001440      ff256a6a2000   jmp qword [reloc.bindtextdomain]        ; [0x207eb0:8]=0x1446 ; "F\x14"
0x00001446      680a000000     push 0xa
0x0000144b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001450      ff25626a2000   jmp qword [reloc.dcgettext]             ; [0x207eb8:8]=0x1456 ; "V\x14"
0x00001456      680b000000     push 0xb
0x0000145b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001460      ff255a6a2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207ec0:8]=0x1466 ; "f\x14"
0x00001466      680c000000     push 0xc
0x0000146b      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001470      ff25526a2000   jmp qword [reloc.strlen]                ; [0x207ec8:8]=0x1476 ; "v\x14"
0x00001476      680d000000     push 0xd
0x0000147b      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001480      ff254a6a2000   jmp qword [reloc.__stack_chk_fail]      ; [0x207ed0:8]=0x1486
0x00001486      680e000000     push 0xe
0x0000148b      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001490      ff25426a2000   jmp qword [reloc.getopt_long]           ; [0x207ed8:8]=0x1496
0x00001496      680f000000     push 0xf
0x0000149b      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000014a0      ff253a6a2000   jmp qword [reloc.mbrtowc]               ; [0x207ee0:8]=0x14a6
0x000014a6      6810000000     push 0x10
0x000014ab      e9e0feffff     jmp sym..plt
;-- imp.__overflow:
0x000014b0      ff25326a2000   jmp qword [reloc.__overflow]            ; [0x207ee8:8]=0x14b6
0x000014b6      6811000000     push 0x11
0x000014bb      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x000014c0      ff252a6a2000   jmp qword [reloc.strrchr]               ; [0x207ef0:8]=0x14c6
0x000014c6      6812000000     push 0x12
0x000014cb      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x000014d0      ff25226a2000   jmp qword [reloc.lseek]                 ; [0x207ef8:8]=0x14d6
0x000014d6      6813000000     push 0x13
0x000014db      e9b0feffff     jmp sym..plt
;-- imp.memset:
0x000014e0      ff251a6a2000   jmp qword [reloc.memset]                ; [0x207f00:8]=0x14e6
0x000014e6      6814000000     push 0x14
0x000014eb      e9a0feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x000014f0      ff25126a2000   jmp qword [reloc.posix_fadvise]         ; [0x207f08:8]=0x14f6
0x000014f6      6815000000     push 0x15
0x000014fb      e990feffff     jmp sym..plt
;-- imp.memcmp:
0x00001500      ff250a6a2000   jmp qword [reloc.memcmp]                ; [0x207f10:8]=0x1506
0x00001506      6816000000     push 0x16
0x0000150b      e980feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001510      ff25026a2000   jmp qword [reloc.fputs_unlocked]        ; [0x207f18:8]=0x1516
0x00001516      6817000000     push 0x17
0x0000151b      e970feffff     jmp sym..plt
;-- imp.calloc:
0x00001520      ff25fa692000   jmp qword [reloc.calloc]                ; [0x207f20:8]=0x1526 ; "&\x15"
0x00001526      6818000000     push 0x18
0x0000152b      e960feffff     jmp sym..plt
;-- imp.memcpy:
0x00001530      ff25f2692000   jmp qword [reloc.memcpy]                ; [0x207f28:8]=0x1536 ; "6\x15"
0x00001536      6819000000     push 0x19
0x0000153b      e950feffff     jmp sym..plt
;-- imp.fileno:
0x00001540      ff25ea692000   jmp qword [reloc.fileno]                ; [0x207f30:8]=0x1546 ; "F\x15"
0x00001546      681a000000     push 0x1a
0x0000154b      e940feffff     jmp sym..plt
;-- imp.malloc:
0x00001550      ff25e2692000   jmp qword [reloc.malloc]                ; [0x207f38:8]=0x1556 ; "V\x15"
0x00001556      681b000000     push 0x1b
0x0000155b      e930feffff     jmp sym..plt
;-- imp.fflush:
0x00001560      ff25da692000   jmp qword [reloc.fflush]                ; [0x207f40:8]=0x1566 ; "f\x15"
0x00001566      681c000000     push 0x1c
0x0000156b      e920feffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001570      ff25d2692000   jmp qword [reloc.nl_langinfo]           ; [0x207f48:8]=0x1576 ; "v\x15"
0x00001576      681d000000     push 0x1d
0x0000157b      e910feffff     jmp sym..plt
;-- imp.__freading:
0x00001580      ff25ca692000   jmp qword [reloc.__freading]            ; [0x207f50:8]=0x1586
0x00001586      681e000000     push 0x1e
0x0000158b      e900feffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001590      ff25c2692000   jmp qword [reloc.fwrite_unlocked]       ; [0x207f58:8]=0x1596
0x00001596      681f000000     push 0x1f
0x0000159b      e9f0fdffff     jmp sym..plt
;-- imp.realloc:
0x000015a0      ff25ba692000   jmp qword [reloc.realloc]               ; [0x207f60:8]=0x15a6
0x000015a6      6820000000     push 0x20                               ; "@"
0x000015ab      e9e0fdffff     jmp sym..plt
;-- imp.setlocale:
0x000015b0      ff25b2692000   jmp qword [reloc.setlocale]             ; [0x207f68:8]=0x15b6
0x000015b6      6821000000     push 0x21                               ; '!'
0x000015bb      e9d0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000015c0      ff25aa692000   jmp qword [reloc.__printf_chk]          ; [0x207f70:8]=0x15c6
0x000015c6      6822000000     push 0x22                               ; '"'
0x000015cb      e9c0fdffff     jmp sym..plt
;-- imp.error:
0x000015d0      ff25a2692000   jmp qword [reloc.error]                 ; [0x207f78:8]=0x15d6
0x000015d6      6823000000     push 0x23                               ; '#'
0x000015db      e9b0fdffff     jmp sym..plt
;-- imp.fseeko:
0x000015e0      ff259a692000   jmp qword [reloc.fseeko]                ; [0x207f80:8]=0x15e6
0x000015e6      6824000000     push 0x24                               ; '$'
0x000015eb      e9a0fdffff     jmp sym..plt
;-- imp.fopen:
0x000015f0      ff2592692000   jmp qword [reloc.fopen]                 ; [0x207f88:8]=0x15f6
0x000015f6      6825000000     push 0x25                               ; '%'
0x000015fb      e990fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001600      ff258a692000   jmp qword [reloc.__cxa_atexit]          ; [0x207f90:8]=0x1606
0x00001606      6826000000     push 0x26                               ; '&'
0x0000160b      e980fdffff     jmp sym..plt
;-- imp.exit:
0x00001610      ff2582692000   jmp qword [reloc.exit]                  ; [0x207f98:8]=0x1616
0x00001616      6827000000     push 0x27                               ; '''
0x0000161b      e970fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001620      ff257a692000   jmp qword [reloc.fwrite]                ; [0x207fa0:8]=0x1626 ; "&\x16"
0x00001626      6828000000     push 0x28                               ; '('
0x0000162b      e960fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001630      ff2572692000   jmp qword [reloc.__fprintf_chk]         ; [0x207fa8:8]=0x1636 ; "6\x16"
0x00001636      6829000000     push 0x29                               ; ')'
0x0000163b      e950fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001640      ff256a692000   jmp qword [reloc.mbsinit]               ; [0x207fb0:8]=0x1646 ; "F\x16"
0x00001646      682a000000     push 0x2a                               ; '*'
0x0000164b      e940fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001650      ff2562692000   jmp qword [reloc.iswprint]              ; [0x207fb8:8]=0x1656 ; "V\x16"
0x00001656      682b000000     push 0x2b                               ; '+'
0x0000165b      e930fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001660      ff255a692000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fc0:8]=0x1666 ; "f\x16"
0x00001666      682c000000     push 0x2c                               ; ','
0x0000166b      e920fdffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001670      .qword 0x90660020697225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001678      0000           add byte [rax], al
0x0000167a      0000           add byte [rax], al
0x0000167c      0000           add byte [rax], al
0x0000167e      0000           add byte [rax], al
;-- section..text:
;-- .text:
;-- write_error:
0x00001680      53             push rbx                                ; /src:162 ; [14] -r-x section size 15182 named .text
0x00001681      488d355c3b00.  lea rsi, str.write_error                ; /src:163 ; 0x51e4 ; "write error"
0x00001688      ba05000000     mov edx, 5
0x0000168d      31ff           xor edi, edi
0x0000168f      e8bcfdffff     call sym.imp.dcgettext
0x00001694      4889c3         mov rbx, rax
0x00001697      e834fdffff     call sym.imp.__errno_location
0x0000169c      8b30           mov esi, dword [rax]
0x0000169e      4889da         mov rdx, rbx
0x000016a1      bf01000000     mov edi, 1
0x000016a6      31c0           xor eax, eax
0x000016a8      e823ffffff     call sym.imp.error
0x000016ad      0f1f00         nop dword [rax]
;-- main:
0x000016b0      4155           push r13
0x000016b2      4154           push r12
0x000016b4      4c8d2df73b00.  lea r13, [0x000052b2]                   ; "\0"
0x000016bb      55             push rbp
0x000016bc      53             push rbx
0x000016bd      89fd           mov ebp, edi
0x000016bf      4889f3         mov rbx, rsi
0x000016c2      4c8d25ec3b00.  lea r12, [0x000052b5]                   ; "\t"
0x000016c9      4883ec08       sub rsp, 8
0x000016cd      488b3e         mov rdi, qword [rsi]
0x000016d0      e8bb110000     call sym.set_program_name
0x000016d5      488d35da3b00.  lea rsi, [0x000052b6]
0x000016dc      bf06000000     mov edi, 6
0x000016e1      e8cafeffff     call sym.imp.setlocale
0x000016e6      488d35ca3b00.  lea rsi, [0x000052b7]                   ; "/usr/local/share/locale"
0x000016ed      488d3d953b00.  lea rdi, [0x00005289]                   ; "coreutils"
0x000016f4      e847fdffff     call sym.imp.bindtextdomain
0x000016f9      488d3d893b00.  lea rdi, [0x00005289]                   ; "coreutils"
0x00001700      e81bfdffff     call sym.imp.textdomain
0x00001705      488d3d941000.  lea rdi, sym.close_stdout               ; 0x27a0 ; "USH\x83\xec\bH\x8b=\xfbX "
0x0000170c      e8af3a0000     call sym.atexit
0x00001711      c605e9692000.  mov byte [obj.have_read_stdin], 0       ; [0x208101:1]=0
0x00001718      c605e1692000.  mov byte [obj.serial_merge], 0          ; [0x208100:1]=0
0x0000171f      488d0d1a6420.  lea rcx, obj.longopts                   ; 0x207b40
0x00001726      488d15c13b00.  lea rdx, str.d:sz                       ; 0x52ee ; "d:sz"
0x0000172d      4531c0         xor r8d, r8d
0x00001730      4889de         mov rsi, rbx
0x00001733      89ef           mov edi, ebp
0x00001735      e856fdffff     call sym.imp.getopt_long
0x0000173a      83f8ff         cmp eax, 0xffffffff
0x0000173d      0f8499000000   je 0x17dc
0x00001743      83f864         cmp eax, 0x64
0x00001746      7470           je 0x17b8
0x00001748      7e1e           jle 0x1768
0x0000174a      83f873         cmp eax, 0x73
0x0000174d      0f847d000000   je 0x17d0
0x00001753      83f87a         cmp eax, 0x7a
0x00001756      0f853b020000   jne 0x1997
0x0000175c      c605ad682000.  mov byte [obj.line_delim], 0            ; [0x208010:1]=10 ; "\n"
0x00001763      ebba           jmp 0x171f
0x00001765      0f1f00         nop dword [rax]
0x00001768      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x0000176d      0f8516020000   jne 0x1989
0x00001773      4883ec08       sub rsp, 8
0x00001777      488b3d2a6920.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x0000177e      488b0d936820.  mov rcx, qword [obj.Version]            ; [0x208018:8]=0x568c str.8.31
0x00001785      6a00           push 0
0x00001787      4c8d0d413b00.  lea r9, [0x000052cf]                    ; "David MacKenzie"
0x0000178e      4c8d054a3b00.  lea r8, str.David_M._Ihnat              ; 0x52df ; "David M. Ihnat"
0x00001795      488d15e93a00.  lea rdx, str.GNU_coreutils              ; 0x5285 ; "GNU coreutils"
0x0000179c      488d35663a00.  lea rsi, str.paste                      ; 0x5209 ; "paste"
0x000017a3      31c0           xor eax, eax
0x000017a5      e8d6320000     call sym.version_etc
0x000017aa      31ff           xor edi, edi
0x000017ac      e85ffeffff     call sym.imp.exit
0x000017b1      0f1f80000000.  nop dword [rax]
0x000017b8      4c8b25016920.  mov r12, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x000017bf      41803c2400     cmp byte [r12], 0
0x000017c4      4d0f44e5       cmove r12, r13
0x000017c8      e952ffffff     jmp 0x171f
0x000017cd      0f1f00         nop dword [rax]
0x000017d0      c60529692000.  mov byte [obj.serial_merge], 1          ; [0x208100:1]=0
0x000017d7      e943ffffff     jmp 0x171f
0x000017dc      486305d56820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2080b8:4]=0
0x000017e3      29c5           sub ebp, eax
0x000017e5      7510           jne 0x17f7
0x000017e7      488d0dec3e00.  lea rcx, [0x000056da]                   ; "-"
0x000017ee      bd01000000     mov ebp, 1
0x000017f3      48890cc3       mov qword [rbx + rax*8], rcx
0x000017f7      4c89e7         mov rdi, r12
0x000017fa      e811360000     call sym.xstrdup
0x000017ff      4c89e1         mov rcx, r12
0x00001802      488905ef6820.  mov qword [obj.delims], rax             ; [0x2080f8:8]=0
0x00001809      eb0f           jmp 0x181a
0x0000180b      0f1f440000     nop dword [rax + rax]
0x00001810      4883c101       add rcx, 1
0x00001814      8810           mov byte [rax], dl
0x00001816      4883c001       add rax, 1
0x0000181a      0fb611         movzx edx, byte [rcx]
0x0000181d      84d2           test dl, dl
0x0000181f      7464           je 0x1885
0x00001821      80fa5c         cmp dl, 0x5c
0x00001824      75ea           jne 0x1810
0x00001826      0fb65101       movzx edx, byte [rcx + 1]
0x0000182a      80fa66         cmp dl, 0x66
0x0000182d      0f844e010000   je 0x1981
0x00001833      7f26           jg 0x185b
0x00001835      80fa30         cmp dl, 0x30
0x00001838      0f843b010000   je 0x1979
0x0000183e      0f8e96000000   jle 0x18da
0x00001844      80fa5c         cmp dl, 0x5c
0x00001847      0f84de000000   je 0x192b
0x0000184d      80fa62         cmp dl, 0x62
0x00001850      0f85e5000000   jne 0x193b
0x00001856      c60008         mov byte [rax], 8
0x00001859      eb24           jmp 0x187f
0x0000185b      80fa72         cmp dl, 0x72
0x0000185e      0f840d010000   je 0x1971
0x00001864      0f8eb4000000   jle 0x191e
0x0000186a      80fa74         cmp dl, 0x74
0x0000186d      0f84c0000000   je 0x1933
0x00001873      80fa76         cmp dl, 0x76
0x00001876      0f85bf000000   jne 0x193b
0x0000187c      c6000b         mov byte [rax], 0xb                     ; [0xb:1]=0
0x0000187f      4883c102       add rcx, 2
0x00001883      eb91           jmp 0x1816
0x00001885      803d74682000.  cmp byte [obj.serial_merge], 0          ; [0x208100:1]=0
0x0000188c      4889055d6820.  mov qword [obj.delim_end], rax          ; [0x2080f0:8]=0
0x00001893      488d15260200.  lea rdx, sym.paste_parallel             ; 0x1ac0 ; "AWAVAUATUSH\x89\xfbH\x83\xc7\x02H\x83\xecHH\x89t$0\xe8\x011"
0x0000189a      488d05cf0700.  lea rax, sym.paste_serial               ; 0x2070 ; "AWAVAUATUSH\x83\xec\x18H\x85\xff\x0f\x84\xf9\x02"
0x000018a1      4863fd         movsxd rdi, ebp
0x000018a4      480f44c2       cmove rax, rdx
0x000018a8      486315096820.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2080b8:4]=0
0x000018af      488d34d3       lea rsi, [rbx + rdx*8]
0x000018b3      ffd0           call rax
0x000018b5      488b3d3c6820.  mov rdi, qword [obj.delims]             ; [0x2080f8:8]=0
0x000018bc      89c3           mov ebx, eax
0x000018be      e8edfaffff     call sym.imp.free
0x000018c3      803d37682000.  cmp byte [obj.have_read_stdin], 0       ; [0x208101:1]=0
0x000018ca      7576           jne 0x1942
0x000018cc      83f301         xor ebx, 1
0x000018cf      5a             pop rdx
0x000018d0      0fb6c3         movzx eax, bl
0x000018d3      5b             pop rbx
0x000018d4      5d             pop rbp
0x000018d5      415c           pop r12
0x000018d7      415d           pop r13
0x000018d9      c3             ret
0x000018da      84d2           test dl, dl
0x000018dc      755d           jne 0x193b
0x000018de      4c89e2         mov rdx, r12
0x000018e1      be06000000     mov esi, 6
0x000018e6      31ff           xor edi, edi
0x000018e8      488905016820.  mov qword [obj.delim_end], rax          ; [0x2080f0:8]=0
0x000018ef      e8dc2a0000     call sym.quotearg_n_style_colon
0x000018f4      488d355d3d00.  lea rsi, str.delimiter_list_ends_with_an_unescaped_backslash:__s ; 0x5658 ; "delimiter list ends with an unescaped backslash: %s"
0x000018fb      4889c3         mov rbx, rax
0x000018fe      ba05000000     mov edx, 5
0x00001903      31ff           xor edi, edi
0x00001905      e846fbffff     call sym.imp.dcgettext
0x0000190a      4889d9         mov rcx, rbx
0x0000190d      4889c2         mov rdx, rax
0x00001910      31f6           xor esi, esi
0x00001912      bf01000000     mov edi, 1
0x00001917      31c0           xor eax, eax
0x00001919      e8b2fcffff     call sym.imp.error
0x0000191e      80fa6e         cmp dl, 0x6e
0x00001921      7518           jne 0x193b
0x00001923      c6000a         mov byte [rax], 0xa
0x00001926      e954ffffff     jmp 0x187f
0x0000192b      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x0000192e      e94cffffff     jmp 0x187f
0x00001933      c60009         mov byte [rax], 9
0x00001936      e944ffffff     jmp 0x187f
0x0000193b      8810           mov byte [rax], dl
0x0000193d      e93dffffff     jmp 0x187f
0x00001942      488b3d676720.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x00001949      e822350000     call sym.rpl_fclose
0x0000194e      83c001         add eax, 1
0x00001951      0f8575ffffff   jne 0x18cc
0x00001957      e874faffff     call sym.imp.__errno_location
0x0000195c      8b30           mov esi, dword [rax]
0x0000195e      488d15753d00.  lea rdx, [0x000056da]                   ; "-"
0x00001965      bf01000000     mov edi, 1
0x0000196a      31c0           xor eax, eax
0x0000196c      e85ffcffff     call sym.imp.error
0x00001971      c6000d         mov byte [rax], 0xd                     ; [0xd:1]=0
0x00001974      e906ffffff     jmp 0x187f
0x00001979      c60000         mov byte [rax], 0
0x0000197c      e9fefeffff     jmp 0x187f
0x00001981      c6000c         mov byte [rax], 0xc                     ; [0xc:1]=0
0x00001984      e9f6feffff     jmp 0x187f
0x00001989      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x0000198e      7507           jne 0x1997
0x00001990      31ff           xor edi, edi
0x00001992      e8090a0000     call sym.usage
0x00001997      bf01000000     mov edi, 1
0x0000199c      e8ff090000     call sym.usage
0x000019a1      662e0f1f8400.  nop word cs:[rax + rax]
0x000019ab      0f1f440000     nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x000019b0      31ed           xor ebp, ebp
0x000019b2      4989d1         mov r9, rdx
0x000019b5      5e             pop rsi
0x000019b6      4889e2         mov rdx, rsp
0x000019b9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000019bd      50             push rax
0x000019be      54             push rsp
0x000019bf      4c8d05ea3700.  lea r8, sym.__libc_csu_fini             ; 0x51b0
0x000019c6      488d0d733700.  lea rcx, sym.__libc_csu_init            ; 0x5140 ; "AWAVI\x89\xd7AUATL\x8d%\xde) "
0x000019cd      488d3ddcfcff.  lea rdi, main                           ; sym.main
                                                                       ; 0x16b0 ; "AUATL\x8d-\xf7;"
0x000019d4      ff15f6652000   call qword [reloc.__libc_start_main]    ; [0x207fd0:8]=0
0x000019da      f4             hlt
0x000019db      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000019e0      488d3db96620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x000019e7      55             push rbp
0x000019e8      488d05b16620.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x000019ef      4839f8         cmp rax, rdi
0x000019f2      4889e5         mov rbp, rsp
0x000019f5      7419           je 0x1a10
0x000019f7      488b05ca6520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fc8:8]=0
0x000019fe      4885c0         test rax, rax
0x00001a01      740d           je 0x1a10
0x00001a03      5d             pop rbp
0x00001a04      ffe0           jmp rax
0x00001a06      662e0f1f8400.  nop word cs:[rax + rax]
0x00001a10      5d             pop rbp
0x00001a11      c3             ret
0x00001a12      0f1f4000       nop dword [rax]
0x00001a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001a20      488d3d796620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001a27      488d35726620.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001a2e      55             push rbp
0x00001a2f      4829fe         sub rsi, rdi
0x00001a32      4889e5         mov rbp, rsp
0x00001a35      48c1fe03       sar rsi, 3
0x00001a39      4889f0         mov rax, rsi
0x00001a3c      48c1e83f       shr rax, 0x3f
0x00001a40      4801c6         add rsi, rax
0x00001a43      48d1fe         sar rsi, 1
0x00001a46      7418           je 0x1a60
0x00001a48      488b05916520.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fe0:8]=0
0x00001a4f      4885c0         test rax, rax
0x00001a52      740c           je 0x1a60
0x00001a54      5d             pop rbp
0x00001a55      ffe0           jmp rax
0x00001a57      660f1f840000.  nop word [rax + rax]
0x00001a60      5d             pop rbp
0x00001a61      c3             ret
0x00001a62      0f1f4000       nop dword [rax]
0x00001a66      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001a70      803d71662000.  cmp byte [obj.completed.7697], 0        ; [0x2080e8:1]=0
0x00001a77      752f           jne 0x1aa8
0x00001a79      48833d676520.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207fe8:8]=0
0x00001a81      55             push rbp
0x00001a82      4889e5         mov rbp, rsp
0x00001a85      740c           je 0x1a93
0x00001a87      488b3d7a6520.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001a8e      e8ddfbffff     call sym..plt.got
0x00001a93      e848ffffff     call sym.deregister_tm_clones
0x00001a98      c60549662000.  mov byte [obj.completed.7697], 1        ; [0x2080e8:1]=0
0x00001a9f      5d             pop rbp
0x00001aa0      c3             ret
0x00001aa1      0f1f80000000.  nop dword [rax]
0x00001aa8      f3c3           ret
0x00001aaa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001ab0      55             push rbp
0x00001ab1      4889e5         mov rbp, rsp
0x00001ab4      5d             pop rbp
0x00001ab5      e966ffffff     jmp sym.register_tm_clones
0x00001aba      660f1f440000   nop word [rax + rax]
;-- paste_parallel:
0x00001ac0      4157           push r15
0x00001ac2      4156           push r14
0x00001ac4      4155           push r13
0x00001ac6      4154           push r12
0x00001ac8      55             push rbp
0x00001ac9      53             push rbx
0x00001aca      4889fb         mov rbx, rdi
0x00001acd      4883c702       add rdi, 2
0x00001ad1      4883ec48       sub rsp, 0x48
0x00001ad5      4889742430     mov qword [rsp + 0x30], rsi
0x00001ada      e801310000     call sym.xmalloc
0x00001adf      ba08000000     mov edx, 8
0x00001ae4      488d4b01       lea rcx, [rbx + 1]
0x00001ae8      4889442420     mov qword [rsp + 0x20], rax
0x00001aed      4889d0         mov rax, rdx
0x00001af0      48f7e1         mul rcx
0x00001af3      0f800d050000   jo 0x2006
0x00001af9      31f6           xor esi, esi
0x00001afb      4885c0         test rax, rax
0x00001afe      0f880c050000   js 0x2010
0x00001b04      4885f6         test rsi, rsi
0x00001b07      0f8503050000   jne 0x2010
0x00001b0d      488d3ccd0000.  lea rdi, [rcx*8]
0x00001b15      e8c6300000     call sym.xmalloc
0x00001b1a      4885db         test rbx, rbx
0x00001b1d      4889442438     mov qword [rsp + 0x38], rax
0x00001b22      0f84d4040000   je 0x1ffc
0x00001b28      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x00001b2d      c644242f00     mov byte [rsp + 0x2f], 0
0x00001b32      4531f6         xor r14d, r14d
0x00001b35      4c8d259e3b00.  lea r12, [0x000056da]                   ; "-"
0x00001b3c      bd01000000     mov ebp, 1
0x00001b41      4989c7         mov r15, rax
0x00001b44      eb1f           jmp 0x1b65
0x00001b46      488b05636520.  mov rax, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x00001b4d      4983c508       add r13, 8
0x00001b51      40882da96520.  mov byte [obj.have_read_stdin], bpl     ; [0x208101:1]=0
0x00001b58      4b8904f7       mov qword [r15 + r14*8], rax
0x00001b5c      4983c601       add r14, 1
0x00001b60      4c39f3         cmp rbx, r14
0x00001b63      7470           je 0x1bd5
0x00001b65      4d8b4500       mov r8, qword [r13]
0x00001b69      b902000000     mov ecx, 2
0x00001b6e      4c89e7         mov rdi, r12
0x00001b71      4c89c6         mov rsi, r8
0x00001b74      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001b76      0f97c0         seta al
0x00001b79      1c00           sbb al, 0
0x00001b7b      84c0           test al, al
0x00001b7d      74c7           je 0x1b46
0x00001b7f      488d35683600.  lea rsi, [0x000051ee]                   ; "r"
0x00001b86      4c89c7         mov rdi, r8
0x00001b89      e862faffff     call sym.imp.fopen
0x00001b8e      4885c0         test rax, rax
0x00001b91      4b8904f7       mov qword [r15 + r14*8], rax
0x00001b95      0f847a040000   je 0x2015
0x00001b9b      4889c7         mov rdi, rax
0x00001b9e      4889442408     mov qword [rsp + 8], rax
0x00001ba3      e898f9ffff     call sym.imp.fileno
0x00001ba8      85c0           test eax, eax
0x00001baa      0fb644242f     movzx eax, byte [rsp + 0x2f]
0x00001baf      488b4c2408     mov rcx, qword [rsp + 8]
0x00001bb4      be02000000     mov esi, 2
0x00001bb9      4889cf         mov rdi, rcx
0x00001bbc      0f44c5         cmove eax, ebp
0x00001bbf      4983c601       add r14, 1
0x00001bc3      4983c508       add r13, 8
0x00001bc7      8844242f       mov byte [rsp + 0x2f], al
0x00001bcb      e8900c0000     call sym.fadvise
0x00001bd0      4c39f3         cmp rbx, r14
0x00001bd3      7590           jne 0x1b65
0x00001bd5      807c242f00     cmp byte [rsp + 0x2f], 0
0x00001bda      4c89742408     mov qword [rsp + 8], r14
0x00001bdf      0f8403040000   je 0x1fe8
0x00001be5      803d15652000.  cmp byte [obj.have_read_stdin], 0       ; [0x208101:1]=0
0x00001bec      0f8553040000   jne 0x2045
0x00001bf2      488b442408     mov rax, qword [rsp + 8]
0x00001bf7      4889442410     mov qword [rsp + 0x10], rax
0x00001bfc      0f1f4000       nop dword [rax]
0x00001c00      488b2df16420.  mov rbp, qword [obj.delims]             ; [0x2080f8:8]=0
0x00001c07      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00001c0c      bb01000000     mov ebx, 1
0x00001c11      4531e4         xor r12d, r12d
0x00001c14      c644242e00     mov byte [rsp + 0x2e], 0
0x00001c19      0f1f80000000.  nop dword [rax]
0x00001c20      4d8b2f         mov r13, qword [r15]
0x00001c23      4d85ed         test r13, r13
0x00001c26      0f840a010000   je 0x1d36
0x00001c2c      498b4508       mov rax, qword [r13 + 8]
0x00001c30      49394510       cmp qword [r13 + 0x10], rax
0x00001c34      0f86ee020000   jbe 0x1f28
0x00001c3a      488d5001       lea rdx, [rax + 1]
0x00001c3e      49895508       mov qword [r13 + 8], rdx
0x00001c42      440fb630       movzx r14d, byte [rax]
0x00001c46      e885f7ffff     call sym.imp.__errno_location
0x00001c4b      4889442418     mov qword [rsp + 0x18], rax
0x00001c50      8b00           mov eax, dword [rax]
0x00001c52      4d85e4         test r12, r12
0x00001c55      89442428       mov dword [rsp + 0x28], eax
0x00001c59      7427           je 0x1c82
0x00001c5b      488b0d466420.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001c62      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00001c67      4c89e2         mov rdx, r12
0x00001c6a      be01000000     mov esi, 1
0x00001c6f      e81cf9ffff     call sym.imp.fwrite_unlocked
0x00001c74      4939c4         cmp r12, rax
0x00001c77      757b           jne 0x1cf4
0x00001c79      4531e4         xor r12d, r12d
0x00001c7c      4183feff       cmp r14d, 0xffffffff
0x00001c80      747e           je 0x1d00
0x00001c82      0fb605876320.  movzx eax, byte [obj.line_delim]        ; [0x208010:1]=10 ; "\n"
0x00001c89      4489f6         mov esi, r14d
0x00001c8c      4139c6         cmp r14d, eax
0x00001c8f      7545           jne 0x1cd6
0x00001c91      e942010000     jmp 0x1dd8
0x00001c96      662e0f1f8400.  nop word cs:[rax + rax]
0x00001ca0      488d4201       lea rax, [rdx + 1]
0x00001ca4      48894728       mov qword [rdi + 0x28], rax
0x00001ca8      408832         mov byte [rdx], sil
0x00001cab      498b3f         mov rdi, qword [r15]
0x00001cae      488b4708       mov rax, qword [rdi + 8]
0x00001cb2      483b4710       cmp rax, qword [rdi + 0x10]
0x00001cb6      0f83d4000000   jae 0x1d90
0x00001cbc      488d5001       lea rdx, [rax + 1]
0x00001cc0      48895708       mov qword [rdi + 8], rdx
0x00001cc4      0fb630         movzx esi, byte [rax]
0x00001cc7      0fb605426320.  movzx eax, byte [obj.line_delim]        ; [0x208010:1]=10 ; "\n"
0x00001cce      39f0           cmp eax, esi
0x00001cd0      0f8402010000   je 0x1dd8
0x00001cd6      488b3dcb6320.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001cdd      488b5728       mov rdx, qword [rdi + 0x28]
0x00001ce1      483b5730       cmp rdx, qword [rdi + 0x30]
0x00001ce5      72b9           jb 0x1ca0
0x00001ce7      400fb6f6       movzx esi, sil
0x00001ceb      e8c0f7ffff     call sym.imp.__overflow
0x00001cf0      85c0           test eax, eax
0x00001cf2      79b7           jns 0x1cab
0x00001cf4      e887f9ffff     call sym.write_error
0x00001cf9      0f1f80000000.  nop dword [rax]
0x00001d00      41f6450020     test byte [r13], 0x20
0x00001d05      0f8595010000   jne 0x1ea0
0x00001d0b      4c3b2d9e6320.  cmp r13, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x00001d12      4c89ef         mov rdi, r13
0x00001d15      0f84c7010000   je 0x1ee2
0x00001d1b      e850310000     call sym.rpl_fclose
0x00001d20      83f8ff         cmp eax, 0xffffffff
0x00001d23      0f8437020000   je 0x1f60
0x00001d29      48836c241001   sub qword [rsp + 0x10], 1
0x00001d2f      49c707000000.  mov qword [r15], 0
0x00001d36      48395c2408     cmp qword [rsp + 8], rbx
0x00001d3b      0f84cf000000   je 0x1e10
0x00001d41      0fb64500       movzx eax, byte [rbp]
0x00001d45      84c0           test al, al
0x00001d47      740d           je 0x1d56
0x00001d49      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00001d4e      42880421       mov byte [rcx + r12], al
0x00001d52      4983c401       add r12, 1
0x00001d56      4883c501       add rbp, 1
0x00001d5a      48392d8f6320.  cmp qword [obj.delim_end], rbp          ; [0x2080f0:8]=0
0x00001d61      7466           je 0x1dc9
0x00001d63      48395c2408     cmp qword [rsp + 8], rbx
0x00001d68      0f97c2         seta dl
0x00001d6b      48837c241000   cmp qword [rsp + 0x10], 0
0x00001d71      0f95c0         setne al
0x00001d74      4983c708       add r15, 8
0x00001d78      4883c301       add rbx, 1
0x00001d7c      84c2           test dl, al
0x00001d7e      0f859cfeffff   jne 0x1c20
0x00001d84      e9db000000     jmp 0x1e64
0x00001d89      0f1f80000000.  nop dword [rax]
0x00001d90      e80bf6ffff     call sym.imp.__uflow
0x00001d95      83f8ff         cmp eax, 0xffffffff
0x00001d98      89c6           mov esi, eax
0x00001d9a      0f8527ffffff   jne 0x1cc7
0x00001da0      48395c2408     cmp qword [rsp + 8], rbx
0x00001da5      0f8445010000   je 0x1ef0
0x00001dab      0fb64500       movzx eax, byte [rbp]
0x00001daf      84c0           test al, al
0x00001db1      0f8549010000   jne 0x1f00
0x00001db7      4883c501       add rbp, 1
0x00001dbb      48392d2e6320.  cmp qword [obj.delim_end], rbp          ; [0x2080f0:8]=0
0x00001dc2      c644242e01     mov byte [rsp + 0x2e], 1
0x00001dc7      759a           jne 0x1d63
0x00001dc9      488b2d286320.  mov rbp, qword [obj.delims]             ; [0x2080f8:8]=0
0x00001dd0      eb91           jmp 0x1d63
0x00001dd2      660f1f440000   nop word [rax + rax]
0x00001dd8      48395c2408     cmp qword [rsp + 8], rbx
0x00001ddd      75cc           jne 0x1dab
0x00001ddf      488b3dc26220.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001de6      488b5728       mov rdx, qword [rdi + 0x28]
0x00001dea      483b5730       cmp rdx, qword [rdi + 0x30]
0x00001dee      0f83a6010000   jae 0x1f9a
0x00001df4      488d4a01       lea rcx, [rdx + 1]
0x00001df8      48894f28       mov qword [rdi + 0x28], rcx
0x00001dfc      8802           mov byte [rdx], al
0x00001dfe      c644242e01     mov byte [rsp + 0x2e], 1
0x00001e03      e95bffffff     jmp 0x1d63
0x00001e08      0f1f84000000.  nop dword [rax + rax]
0x00001e10      807c242e00     cmp byte [rsp + 0x2e], 0
0x00001e15      744d           je 0x1e64
0x00001e17      4d85e4         test r12, r12
0x00001e1a      488b0d876220.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001e21      7422           je 0x1e45
0x00001e23      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00001e28      4c89e2         mov rdx, r12
0x00001e2b      be01000000     mov esi, 1
0x00001e30      e85bf7ffff     call sym.imp.fwrite_unlocked
0x00001e35      4c39e0         cmp rax, r12
0x00001e38      0f85b6feffff   jne 0x1cf4
0x00001e3e      488b0d636220.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001e45      488b4128       mov rax, qword [rcx + 0x28]
0x00001e49      483b4130       cmp rax, qword [rcx + 0x30]
0x00001e4d      0fb615bc6120.  movzx edx, byte [obj.line_delim]        ; [0x208010:1]=10 ; "\n"
0x00001e54      0f8356010000   jae 0x1fb0
0x00001e5a      488d7001       lea rsi, [rax + 1]
0x00001e5e      48897128       mov qword [rcx + 0x28], rsi
0x00001e62      8810           mov byte [rax], dl
0x00001e64      48837c241000   cmp qword [rsp + 0x10], 0
0x00001e6a      0f8590fdffff   jne 0x1c00
0x00001e70      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00001e75      e836f5ffff     call sym.imp.free
0x00001e7a      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00001e7f      e82cf5ffff     call sym.imp.free
0x00001e84      0fb644242f     movzx eax, byte [rsp + 0x2f]
0x00001e89      4883c448       add rsp, 0x48
0x00001e8d      5b             pop rbx
0x00001e8e      5d             pop rbp
0x00001e8f      415c           pop r12
0x00001e91      415d           pop r13
0x00001e93      415e           pop r14
0x00001e95      415f           pop r15
0x00001e97      c3             ret
0x00001e98      0f1f84000000.  nop dword [rax + rax]
0x00001ea0      488b442430     mov rax, qword [rsp + 0x30]
0x00001ea5      31ff           xor edi, edi
0x00001ea7      be03000000     mov esi, 3
0x00001eac      488b54d8f8     mov rdx, qword [rax + rbx*8 - 8]
0x00001eb1      e81a250000     call sym.quotearg_n_style_colon
0x00001eb6      8b742428       mov esi, dword [rsp + 0x28]
0x00001eba      488d15d43700.  lea rdx, [0x00005695]                   ; "%s"
0x00001ec1      31ff           xor edi, edi
0x00001ec3      4889c1         mov rcx, rax
0x00001ec6      31c0           xor eax, eax
0x00001ec8      e803f7ffff     call sym.imp.error
0x00001ecd      4c3b2ddc6120.  cmp r13, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x00001ed4      c644242f00     mov byte [rsp + 0x2f], 0
0x00001ed9      4c89ef         mov rdi, r13
0x00001edc      0f8539feffff   jne 0x1d1b
0x00001ee2      e829f5ffff     call sym.imp.clearerr_unlocked
0x00001ee7      e93dfeffff     jmp 0x1d29
0x00001eec      0f1f4000       nop dword [rax]
0x00001ef0      0fb605196120.  movzx eax, byte [obj.line_delim]        ; [0x208010:1]=10 ; "\n"
0x00001ef7      e9e3feffff     jmp 0x1ddf
0x00001efc      0f1f4000       nop dword [rax]
0x00001f00      488b3da16120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001f07      488b5728       mov rdx, qword [rdi + 0x28]
0x00001f0b      483b5730       cmp rdx, qword [rdi + 0x30]
0x00001f0f      0f83bb000000   jae 0x1fd0
0x00001f15      488d4a01       lea rcx, [rdx + 1]
0x00001f19      48894f28       mov qword [rdi + 0x28], rcx
0x00001f1d      8802           mov byte [rdx], al
0x00001f1f      e993feffff     jmp 0x1db7
0x00001f24      0f1f4000       nop dword [rax]
0x00001f28      4c89ef         mov rdi, r13
0x00001f2b      e870f4ffff     call sym.imp.__uflow
0x00001f30      4189c6         mov r14d, eax
0x00001f33      e898f4ffff     call sym.imp.__errno_location
0x00001f38      4889442418     mov qword [rsp + 0x18], rax
0x00001f3d      8b00           mov eax, dword [rax]
0x00001f3f      4d85e4         test r12, r12
0x00001f42      89442428       mov dword [rsp + 0x28], eax
0x00001f46      0f8430fdffff   je 0x1c7c
0x00001f4c      4183feff       cmp r14d, 0xffffffff
0x00001f50      0f8505fdffff   jne 0x1c5b
0x00001f56      e921fdffff     jmp 0x1c7c
0x00001f5b      0f1f440000     nop dword [rax + rax]
0x00001f60      488b442430     mov rax, qword [rsp + 0x30]
0x00001f65      be03000000     mov esi, 3
0x00001f6a      31ff           xor edi, edi
0x00001f6c      488b54d8f8     mov rdx, qword [rax + rbx*8 - 8]
0x00001f71      e85a240000     call sym.quotearg_n_style_colon
0x00001f76      4889c1         mov rcx, rax
0x00001f79      488b442418     mov rax, qword [rsp + 0x18]
0x00001f7e      488d15103700.  lea rdx, [0x00005695]                   ; "%s"
0x00001f85      31ff           xor edi, edi
0x00001f87      8b30           mov esi, dword [rax]
0x00001f89      31c0           xor eax, eax
0x00001f8b      e840f6ffff     call sym.imp.error
0x00001f90      c644242f00     mov byte [rsp + 0x2f], 0
0x00001f95      e98ffdffff     jmp 0x1d29
0x00001f9a      0fb6f0         movzx esi, al
0x00001f9d      e80ef5ffff     call sym.imp.__overflow
0x00001fa2      85c0           test eax, eax
0x00001fa4      0f8954feffff   jns 0x1dfe
0x00001faa      e945fdffff     jmp 0x1cf4
0x00001faf      90             nop
0x00001fb0      0fb6f2         movzx esi, dl
0x00001fb3      4889cf         mov rdi, rcx
0x00001fb6      e8f5f4ffff     call sym.imp.__overflow
0x00001fbb      85c0           test eax, eax
0x00001fbd      0f89a1feffff   jns 0x1e64
0x00001fc3      e92cfdffff     jmp 0x1cf4
0x00001fc8      0f1f84000000.  nop dword [rax + rax]
0x00001fd0      0fb6f0         movzx esi, al
0x00001fd3      e8d8f4ffff     call sym.imp.__overflow
0x00001fd8      85c0           test eax, eax
0x00001fda      0f89d7fdffff   jns 0x1db7
0x00001fe0      e90ffdffff     jmp 0x1cf4
0x00001fe5      0f1f00         nop dword [rax]
0x00001fe8      488b442408     mov rax, qword [rsp + 8]
0x00001fed      c644242f01     mov byte [rsp + 0x2f], 1
0x00001ff2      4889442410     mov qword [rsp + 0x10], rax
0x00001ff7      e904fcffff     jmp 0x1c00
0x00001ffc      c644242f01     mov byte [rsp + 0x2f], 1
0x00002001      e96afeffff     jmp 0x1e70
0x00002006      be01000000     mov esi, 1
0x0000200b      e9ebfaffff     jmp 0x1afb
0x00002010      e81b2e0000     call sym.xalloc_die
0x00002015      498b5500       mov rdx, qword [r13]
0x00002019      be03000000     mov esi, 3
0x0000201e      31ff           xor edi, edi
0x00002020      e8ab230000     call sym.quotearg_n_style_colon
0x00002025      4889c3         mov rbx, rax
0x00002028      e8a3f3ffff     call sym.imp.__errno_location
0x0000202d      8b30           mov esi, dword [rax]
0x0000202f      488d155f3600.  lea rdx, [0x00005695]                   ; "%s"
0x00002036      4889d9         mov rcx, rbx
0x00002039      bf01000000     mov edi, 1
0x0000203e      31c0           xor eax, eax
0x00002040      e88bf5ffff     call sym.imp.error
0x00002045      488d35a43100.  lea rsi, str.standard_input_is_closed   ; 0x51f0 ; "standard input is closed"
0x0000204c      ba05000000     mov edx, 5
0x00002051      31ff           xor edi, edi
0x00002053      e8f8f3ffff     call sym.imp.dcgettext
0x00002058      31f6           xor esi, esi
0x0000205a      4889c2         mov rdx, rax
0x0000205d      bf01000000     mov edi, 1
0x00002062      31c0           xor eax, eax
0x00002064      e867f5ffff     call sym.imp.error
0x00002069      0f1f80000000.  nop dword [rax]
;-- paste_serial:
0x00002070      4157           push r15
0x00002072      4156           push r14
0x00002074      4155           push r13
0x00002076      4154           push r12
0x00002078      55             push rbp
0x00002079      53             push rbx
0x0000207a      4883ec18       sub rsp, 0x18
0x0000207e      4885ff         test rdi, rdi
0x00002081      0f84f9020000   je 0x2380
0x00002087      4889fd         mov rbp, rdi
0x0000208a      4889f3         mov rbx, rsi
0x0000208d      e83ef3ffff     call sym.imp.__errno_location
0x00002092      c644240b01     mov byte [rsp + 0xb], 1
0x00002097      48890424       mov qword [rsp], rax
0x0000209b      0f1f440000     nop dword [rax + rax]
0x000020a0      488b03         mov rax, qword [rbx]
0x000020a3      488d3d303600.  lea rdi, [0x000056da]                   ; "-"
0x000020aa      b902000000     mov ecx, 2
0x000020af      4889c6         mov rsi, rax
0x000020b2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000020b4      410f97c1       seta r9b
0x000020b8      4180d900       sbb r9b, 0
0x000020bc      450fbee1       movsx r12d, r9b
0x000020c0      4585e4         test r12d, r12d
0x000020c3      0f85d7000000   jne 0x21a0
0x000020c9      4c8b3de05f20.  mov r15, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x000020d0      c6052a602000.  mov byte [obj.have_read_stdin], 1       ; [0x208101:1]=0
0x000020d7      498b5708       mov rdx, qword [r15 + 8]
0x000020db      498b7710       mov rsi, qword [r15 + 0x10]
0x000020df      4c8b35126020.  mov r14, qword [obj.delims]             ; [0x2080f8:8]=0
0x000020e6      4839f2         cmp rdx, rsi
0x000020e9      0f83b1010000   jae 0x22a0
0x000020ef      488d4201       lea rax, [rdx + 1]
0x000020f3      49894708       mov qword [r15 + 8], rax
0x000020f7      0fb612         movzx edx, byte [rdx]
0x000020fa      eb24           jmp 0x2120
0x000020fc      0f1f4000       nop dword [rax]
0x00002100      410fb606       movzx eax, byte [r14]
0x00002104      84c0           test al, al
0x00002106      7560           jne 0x2168
0x00002108      4983c601       add r14, 1
0x0000210c      4c3935dd5f20.  cmp qword [obj.delim_end], r14          ; [0x2080f0:8]=0
0x00002113      747f           je 0x2194
0x00002115      498b4708       mov rax, qword [r15 + 8]
0x00002119      498b7710       mov rsi, qword [r15 + 0x10]
0x0000211d      4489ea         mov edx, r13d
0x00002120      4839c6         cmp rsi, rax
0x00002123      0f86a7000000   jbe 0x21d0
0x00002129      488d7001       lea rsi, [rax + 1]
0x0000212d      49897708       mov qword [r15 + 8], rsi
0x00002131      440fb628       movzx r13d, byte [rax]
0x00002135      0fb605d45e20.  movzx eax, byte [obj.line_delim]        ; [0x208010:1]=10 ; "\n"
0x0000213c      39d0           cmp eax, edx
0x0000213e      74c0           je 0x2100
0x00002140      488b3d615f20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002147      488b4728       mov rax, qword [rdi + 0x28]
0x0000214b      483b4730       cmp rax, qword [rdi + 0x30]
0x0000214f      0f83c3010000   jae 0x2318
0x00002155      488d7001       lea rsi, [rax + 1]
0x00002159      48897728       mov qword [rdi + 0x28], rsi
0x0000215d      8810           mov byte [rax], dl
0x0000215f      ebb4           jmp 0x2115
0x00002161      0f1f80000000.  nop dword [rax]
0x00002168      488b3d395f20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x0000216f      488b5728       mov rdx, qword [rdi + 0x28]
0x00002173      483b5730       cmp rdx, qword [rdi + 0x30]
0x00002177      0f83eb010000   jae 0x2368
0x0000217d      4983c601       add r14, 1
0x00002181      4c3935685f20.  cmp qword [obj.delim_end], r14          ; [0x2080f0:8]=0
0x00002188      488d7201       lea rsi, [rdx + 1]
0x0000218c      48897728       mov qword [rdi + 0x28], rsi
0x00002190      8802           mov byte [rdx], al
0x00002192      7581           jne 0x2115
0x00002194      4c8b355d5f20.  mov r14, qword [obj.delims]             ; [0x2080f8:8]=0
0x0000219b      e975ffffff     jmp 0x2115
0x000021a0      488d35473000.  lea rsi, [0x000051ee]                   ; "r"
0x000021a7      4889c7         mov rdi, rax
0x000021aa      e841f4ffff     call sym.imp.fopen
0x000021af      4885c0         test rax, rax
0x000021b2      4989c7         mov r15, rax
0x000021b5      0f84af000000   je 0x226a
0x000021bb      be02000000     mov esi, 2
0x000021c0      4889c7         mov rdi, rax
0x000021c3      e898060000     call sym.fadvise
0x000021c8      e90affffff     jmp 0x20d7
0x000021cd      0f1f00         nop dword [rax]
0x000021d0      4c89ff         mov rdi, r15
0x000021d3      8954240c       mov dword [rsp + 0xc], edx
0x000021d7      e8c4f1ffff     call sym.imp.__uflow
0x000021dc      83f8ff         cmp eax, 0xffffffff
0x000021df      4189c5         mov r13d, eax
0x000021e2      8b54240c       mov edx, dword [rsp + 0xc]
0x000021e6      0f8549ffffff   jne 0x2135
0x000021ec      488b0424       mov rax, qword [rsp]
0x000021f0      488b3db15e20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000021f7      448b28         mov r13d, dword [rax]
0x000021fa      488b4728       mov rax, qword [rdi + 0x28]
0x000021fe      483b4730       cmp rax, qword [rdi + 0x30]
0x00002202      0f8328010000   jae 0x2330
0x00002208      488d4801       lea rcx, [rax + 1]
0x0000220c      48894f28       mov qword [rdi + 0x28], rcx
0x00002210      8810           mov byte [rax], dl
0x00002212      0fb60df75d20.  movzx ecx, byte [obj.line_delim]        ; [0x208010:1]=10 ; "\n"
0x00002219      39d1           cmp ecx, edx
0x0000221b      89c8           mov eax, ecx
0x0000221d      0f859e000000   jne 0x22c1
0x00002223      41f60720       test byte [r15], 0x20
0x00002227      0f85b9000000   jne 0x22e6
0x0000222d      4585e4         test r12d, r12d
0x00002230      4c89ff         mov rdi, r15
0x00002233      752b           jne 0x2260
0x00002235      e8d6f1ffff     call sym.imp.clearerr_unlocked
0x0000223a      4883c308       add rbx, 8
0x0000223e      4883ed01       sub rbp, 1
0x00002242      0f8558feffff   jne 0x20a0
0x00002248      0fb644240b     movzx eax, byte [rsp + 0xb]
0x0000224d      4883c418       add rsp, 0x18
0x00002251      5b             pop rbx
0x00002252      5d             pop rbp
0x00002253      415c           pop r12
0x00002255      415d           pop r13
0x00002257      415e           pop r14
0x00002259      415f           pop r15
0x0000225b      c3             ret
0x0000225c      0f1f4000       nop dword [rax]
0x00002260      e80b2c0000     call sym.rpl_fclose
0x00002265      83f8ff         cmp eax, 0xffffffff
0x00002268      75d0           jne 0x223a
0x0000226a      488b13         mov rdx, qword [rbx]
0x0000226d      be03000000     mov esi, 3
0x00002272      31ff           xor edi, edi
0x00002274      e857210000     call sym.quotearg_n_style_colon
0x00002279      4889c1         mov rcx, rax
0x0000227c      488b0424       mov rax, qword [rsp]
0x00002280      488d150e3400.  lea rdx, [0x00005695]                   ; "%s"
0x00002287      31ff           xor edi, edi
0x00002289      8b30           mov esi, dword [rax]
0x0000228b      31c0           xor eax, eax
0x0000228d      e83ef3ffff     call sym.imp.error
0x00002292      c644240b00     mov byte [rsp + 0xb], 0
0x00002297      eba1           jmp 0x223a
0x00002299      0f1f80000000.  nop dword [rax]
0x000022a0      4c89ff         mov rdi, r15
0x000022a3      e8f8f0ffff     call sym.imp.__uflow
0x000022a8      89c2           mov edx, eax
0x000022aa      488b0424       mov rax, qword [rsp]
0x000022ae      83faff         cmp edx, 0xffffffff
0x000022b1      448b28         mov r13d, dword [rax]
0x000022b4      0f85d0000000   jne 0x238a
0x000022ba      0fb6054f5d20.  movzx eax, byte [obj.line_delim]        ; [0x208010:1]=10 ; "\n"
0x000022c1      488b3de05d20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000022c8      488b5728       mov rdx, qword [rdi + 0x28]
0x000022cc      483b5730       cmp rdx, qword [rdi + 0x30]
0x000022d0      737e           jae 0x2350
0x000022d2      488d4a01       lea rcx, [rdx + 1]
0x000022d6      48894f28       mov qword [rdi + 0x28], rcx
0x000022da      8802           mov byte [rdx], al
0x000022dc      41f60720       test byte [r15], 0x20
0x000022e0      0f8447ffffff   je 0x222d
0x000022e6      488b13         mov rdx, qword [rbx]
0x000022e9      be03000000     mov esi, 3
0x000022ee      31ff           xor edi, edi
0x000022f0      e8db200000     call sym.quotearg_n_style_colon
0x000022f5      488d15993300.  lea rdx, [0x00005695]                   ; "%s"
0x000022fc      4889c1         mov rcx, rax
0x000022ff      4489ee         mov esi, r13d
0x00002302      31ff           xor edi, edi
0x00002304      31c0           xor eax, eax
0x00002306      e8c5f2ffff     call sym.imp.error
0x0000230b      c644240b00     mov byte [rsp + 0xb], 0
0x00002310      e918ffffff     jmp 0x222d
0x00002315      0f1f00         nop dword [rax]
0x00002318      0fb6f2         movzx esi, dl
0x0000231b      e890f1ffff     call sym.imp.__overflow
0x00002320      85c0           test eax, eax
0x00002322      0f89edfdffff   jns 0x2115
0x00002328      e853f3ffff     call sym.write_error
0x0000232d      0f1f00         nop dword [rax]
0x00002330      0fb6f2         movzx esi, dl
0x00002333      8954240c       mov dword [rsp + 0xc], edx
0x00002337      e874f1ffff     call sym.imp.__overflow
0x0000233c      85c0           test eax, eax
0x0000233e      8b54240c       mov edx, dword [rsp + 0xc]
0x00002342      0f89cafeffff   jns 0x2212
0x00002348      ebde           jmp 0x2328
0x0000234a      660f1f440000   nop word [rax + rax]
0x00002350      0fb6f0         movzx esi, al
0x00002353      e858f1ffff     call sym.imp.__overflow
0x00002358      85c0           test eax, eax
0x0000235a      0f89c3feffff   jns 0x2223
0x00002360      ebc6           jmp 0x2328
0x00002362      660f1f440000   nop word [rax + rax]
0x00002368      0fb6f0         movzx esi, al
0x0000236b      e840f1ffff     call sym.imp.__overflow
0x00002370      85c0           test eax, eax
0x00002372      0f8990fdffff   jns 0x2108
0x00002378      ebae           jmp 0x2328
0x0000237a      660f1f440000   nop word [rax + rax]
0x00002380      c644240b01     mov byte [rsp + 0xb], 1
0x00002385      e9befeffff     jmp 0x2248
0x0000238a      498b4708       mov rax, qword [r15 + 8]
0x0000238e      498b7710       mov rsi, qword [r15 + 0x10]
0x00002392      e989fdffff     jmp 0x2120
0x00002397      660f1f840000.  nop word [rax + rax]
;-- usage:
0x000023a0      4155           push r13
0x000023a2      4154           push r12
0x000023a4      ba05000000     mov edx, 5
0x000023a9      55             push rbp
0x000023aa      53             push rbx
0x000023ab      89fd           mov ebp, edi
0x000023ad      4881ec880000.  sub rsp, 0x88
0x000023b4      488b1d5d5d20.  mov rbx, qword [obj.program_name]       ; [0x208118:8]=0
0x000023bb      64488b042528.  mov rax, qword fs:[0x28]
0x000023c4      4889442478     mov qword [rsp + 0x78], rax
0x000023c9      31c0           xor eax, eax
0x000023cb      85ff           test edi, edi
0x000023cd      742e           je 0x23fd
0x000023cf      488d35522f00.  lea rsi, str.Try___s___help__for_more_information. ; 0x5328 ; "Try '%s --help' for more information.\n"
0x000023d6      31ff           xor edi, edi
0x000023d8      e873f0ffff     call sym.imp.dcgettext
0x000023dd      488b3dfc5c20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x000023e4      4889c2         mov rdx, rax
0x000023e7      4889d9         mov rcx, rbx
0x000023ea      be01000000     mov esi, 1
0x000023ef      31c0           xor eax, eax
0x000023f1      e83af2ffff     call sym.imp.__fprintf_chk
0x000023f6      89ef           mov edi, ebp
0x000023f8      e813f2ffff     call sym.imp.exit
0x000023fd      488d354c2f00.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0x5350 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00002404      31ff           xor edi, edi
0x00002406      e845f0ffff     call sym.imp.dcgettext
0x0000240b      4889da         mov rdx, rbx
0x0000240e      4889c6         mov rsi, rax
0x00002411      bf01000000     mov edi, 1
0x00002416      31c0           xor eax, eax
0x00002418      e8a3f1ffff     call sym.imp.__printf_chk
0x0000241d      488b1d845c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002424      488d354d2f00.  lea rsi, str.Write_lines_consisting_of_the_sequentially_corresponding_lines_from__each_FILE__separated_by_TABs__to_standard_output. ; 0x5378 ; "Write lines consisting of the sequentially corresponding lines from\neach FILE, separated by TABs, to standard output.\n"
0x0000242b      ba05000000     mov edx, 5
0x00002430      31ff           xor edi, edi
0x00002432      e819f0ffff     call sym.imp.dcgettext
0x00002437      4889de         mov rsi, rbx
0x0000243a      4889c7         mov rdi, rax
0x0000243d      e8cef0ffff     call sym.imp.fputs_unlocked
0x00002442      488b1d5f5c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002449      488d35a02f00.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x53f0 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002450      ba05000000     mov edx, 5
0x00002455      31ff           xor edi, edi
0x00002457      e8f4efffff     call sym.imp.dcgettext
0x0000245c      4889de         mov rsi, rbx
0x0000245f      4889c7         mov rdi, rax
0x00002462      e8a9f0ffff     call sym.imp.fputs_unlocked
0x00002467      488b1d3a5c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x0000246e      488d35b32f00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x5428 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002475      ba05000000     mov edx, 5
0x0000247a      31ff           xor edi, edi
0x0000247c      e8cfefffff     call sym.imp.dcgettext
0x00002481      4889de         mov rsi, rbx
0x00002484      4889c7         mov rdi, rax
0x00002487      e884f0ffff     call sym.imp.fputs_unlocked
0x0000248c      488b1d155c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002493      488d35de2f00.  lea rsi, str.d____delimiters_LIST___reuse_characters_from_LIST_instead_of_TABs_____s____serial____________paste_one_file_at_a_time_instead_of_in_parallel ; 0x5478 ; "  -d, --delimiters=LIST   reuse characters from LIST instead of TABs\n  -s, --serial            paste one file at a time instead of in parallel\n"
0x0000249a      ba05000000     mov edx, 5
0x0000249f      31ff           xor edi, edi
0x000024a1      e8aaefffff     call sym.imp.dcgettext
0x000024a6      4889de         mov rsi, rbx
0x000024a9      4889c7         mov rdi, rax
0x000024ac      e85ff0ffff     call sym.imp.fputs_unlocked
0x000024b1      488b1df05b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000024b8      488d35493000.  lea rsi, str.z____zero_terminated____line_delimiter_is_NUL__not_newline ; 0x5508 ; "  -z, --zero-terminated    line delimiter is NUL, not newline\n"
0x000024bf      ba05000000     mov edx, 5
0x000024c4      31ff           xor edi, edi
0x000024c6      e885efffff     call sym.imp.dcgettext
0x000024cb      4889de         mov rsi, rbx
0x000024ce      4889c7         mov rdi, rax
0x000024d1      e83af0ffff     call sym.imp.fputs_unlocked
0x000024d6      488b1dcb5b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000024dd      488d35643000.  lea rsi, str.help_____display_this_help_and_exit ; 0x5548 ; "      --help     display this help and exit\n"
0x000024e4      ba05000000     mov edx, 5
0x000024e9      31ff           xor edi, edi
0x000024eb      e860efffff     call sym.imp.dcgettext
0x000024f0      4889de         mov rsi, rbx
0x000024f3      4889c7         mov rdi, rax
0x000024f6      e815f0ffff     call sym.imp.fputs_unlocked
0x000024fb      488b1da65b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002502      488d356f3000.  lea rsi, str.version__output_version_information_and_exit ; 0x5578 ; "      --version  output version information and exit\n"
0x00002509      ba05000000     mov edx, 5
0x0000250e      31ff           xor edi, edi
0x00002510      e83befffff     call sym.imp.dcgettext
0x00002515      4889de         mov rsi, rbx
0x00002518      4889c7         mov rdi, rax
0x0000251b      488d1de72c00.  lea rbx, str.paste                      ; 0x5209 ; "paste"
0x00002522      e8e9efffff     call sym.imp.fputs_unlocked
0x00002527      488d05e12c00.  lea rax, [0x0000520f]                   ; "["
0x0000252e      488d0d1b2d00.  lea rcx, str.sha256sum                  ; 0x5250 ; "sha256sum"
0x00002535      48c744246000.  mov qword [rsp + 0x60], 0
0x0000253e      48c744246800.  mov qword [rsp + 0x68], 0
0x00002547      4889e2         mov rdx, rsp
0x0000254a      48890424       mov qword [rsp], rax
0x0000254e      488d05bc2c00.  lea rax, str.test_invocation            ; 0x5211 ; "test invocation"
0x00002555      48894c2430     mov qword [rsp + 0x30], rcx
0x0000255a      488d0df92c00.  lea rcx, str.sha384sum                  ; 0x525a ; "sha384sum"
0x00002561      4889442408     mov qword [rsp + 8], rax
0x00002566      488d051c2d00.  lea rax, [0x00005289]                   ; "coreutils"
0x0000256d      48894c2440     mov qword [rsp + 0x40], rcx
0x00002572      488d0deb2c00.  lea rcx, str.sha512sum                  ; 0x5264 ; "sha512sum"
0x00002579      4889442410     mov qword [rsp + 0x10], rax
0x0000257e      488d059c2c00.  lea rax, str.Multi_call_invocation      ; 0x5221 ; "Multi-call invocation"
0x00002585      48894c2450     mov qword [rsp + 0x50], rcx
0x0000258a      4889442418     mov qword [rsp + 0x18], rax
0x0000258f      488d05a12c00.  lea rax, str.sha224sum                  ; 0x5237 ; "sha224sum"
0x00002596      4889442420     mov qword [rsp + 0x20], rax
0x0000259b      488d059f2c00.  lea rax, str.sha2_utilities             ; 0x5241 ; "sha2 utilities"
0x000025a2      4889442428     mov qword [rsp + 0x28], rax
0x000025a7      4889442438     mov qword [rsp + 0x38], rax
0x000025ac      4889442448     mov qword [rsp + 0x48], rax
0x000025b1      4889442458     mov qword [rsp + 0x58], rax
0x000025b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000025c0      4883c210       add rdx, 0x10
0x000025c4      488b3a         mov rdi, qword [rdx]
0x000025c7      4885ff         test rdi, rdi
0x000025ca      7413           je 0x25df
0x000025cc      b906000000     mov ecx, 6
0x000025d1      4889de         mov rsi, rbx
0x000025d4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000025d6      0f97c0         seta al
0x000025d9      1c00           sbb al, 0
0x000025db      84c0           test al, al
0x000025dd      75e1           jne 0x25c0
0x000025df      4c8b6208       mov r12, qword [rdx + 8]
0x000025e3      31ff           xor edi, edi
0x000025e5      ba05000000     mov edx, 5
0x000025ea      488d357d2c00.  lea rsi, str.s_online_help:___s         ; 0x526e ; "\n%s online help: <%s>\n"
0x000025f1      4d85e4         test r12, r12
0x000025f4      0f84c1000000   je 0x26bb
0x000025fa      e851eeffff     call sym.imp.dcgettext
0x000025ff      488d0daa2f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x55b0 ; "https://www.gnu.org/software/coreutils/"
0x00002606      488d15782c00.  lea rdx, str.GNU_coreutils              ; 0x5285 ; "GNU coreutils"
0x0000260d      4889c6         mov rsi, rax
0x00002610      bf01000000     mov edi, 1
0x00002615      31c0           xor eax, eax
0x00002617      e8a4efffff     call sym.imp.__printf_chk
0x0000261c      31f6           xor esi, esi
0x0000261e      bf05000000     mov edi, 5
0x00002623      e888efffff     call sym.imp.setlocale
0x00002628      4885c0         test rax, rax
0x0000262b      741c           je 0x2649
0x0000262d      488d355f2c00.  lea rsi, [0x00005293]                   ; "en_"
0x00002634      ba03000000     mov edx, 3
0x00002639      4889c7         mov rdi, rax
0x0000263c      e89fedffff     call sym.imp.strncmp
0x00002641      85c0           test eax, eax
0x00002643      0f8507010000   jne 0x2750
0x00002649      488d35472c00.  lea rsi, str.Full_documentation___s_s   ; 0x5297 ; "Full documentation <%s%s>\n"
0x00002650      31ff           xor edi, edi
0x00002652      ba05000000     mov edx, 5
0x00002657      e8f4edffff     call sym.imp.dcgettext
0x0000265c      488d0da62b00.  lea rcx, str.paste                      ; 0x5209 ; "paste"
0x00002663      488d15462f00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x55b0 ; "https://www.gnu.org/software/coreutils/"
0x0000266a      4889c6         mov rsi, rax
0x0000266d      bf01000000     mov edi, 1
0x00002672      31c0           xor eax, eax
0x00002674      e847efffff     call sym.imp.__printf_chk
0x00002679      4939dc         cmp r12, rbx
0x0000267c      488d0da82b00.  lea rcx, [0x0000522b]                   ; " invocation"
0x00002683      488d1d2c2c00.  lea rbx, [0x000052b6]
0x0000268a      480f44d9       cmove rbx, rcx
0x0000268e      488d358b2f00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5620 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002695      31ff           xor edi, edi
0x00002697      ba05000000     mov edx, 5
0x0000269c      e8afedffff     call sym.imp.dcgettext
0x000026a1      4889d9         mov rcx, rbx
0x000026a4      4889c6         mov rsi, rax
0x000026a7      4c89e2         mov rdx, r12
0x000026aa      bf01000000     mov edi, 1
0x000026af      31c0           xor eax, eax
0x000026b1      e80aefffff     call sym.imp.__printf_chk
0x000026b6      e93bfdffff     jmp 0x23f6
0x000026bb      e890edffff     call sym.imp.dcgettext
0x000026c0      488d0de92e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x55b0 ; "https://www.gnu.org/software/coreutils/"
0x000026c7      488d15b72b00.  lea rdx, str.GNU_coreutils              ; 0x5285 ; "GNU coreutils"
0x000026ce      4889c6         mov rsi, rax
0x000026d1      bf01000000     mov edi, 1
0x000026d6      31c0           xor eax, eax
0x000026d8      e8e3eeffff     call sym.imp.__printf_chk
0x000026dd      31f6           xor esi, esi
0x000026df      bf05000000     mov edi, 5
0x000026e4      e8c7eeffff     call sym.imp.setlocale
0x000026e9      4885c0         test rax, rax
0x000026ec      7418           je 0x2706
0x000026ee      488d359e2b00.  lea rsi, [0x00005293]                   ; "en_"
0x000026f5      ba03000000     mov edx, 3
0x000026fa      4889c7         mov rdi, rax
0x000026fd      e8deecffff     call sym.imp.strncmp
0x00002702      85c0           test eax, eax
0x00002704      7543           jne 0x2749
0x00002706      488d358a2b00.  lea rsi, str.Full_documentation___s_s   ; 0x5297 ; "Full documentation <%s%s>\n"
0x0000270d      ba05000000     mov edx, 5
0x00002712      31ff           xor edi, edi
0x00002714      4c8d25ee2a00.  lea r12, str.paste                      ; 0x5209 ; "paste"
0x0000271b      488d1d092b00.  lea rbx, [0x0000522b]                   ; " invocation"
0x00002722      e829edffff     call sym.imp.dcgettext
0x00002727      488d0ddb2a00.  lea rcx, str.paste                      ; 0x5209 ; "paste"
0x0000272e      488d157b2e00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x55b0 ; "https://www.gnu.org/software/coreutils/"
0x00002735      4889c6         mov rsi, rax
0x00002738      bf01000000     mov edi, 1
0x0000273d      31c0           xor eax, eax
0x0000273f      e87ceeffff     call sym.imp.__printf_chk
0x00002744      e945ffffff     jmp 0x268e
0x00002749      4c8d25b92a00.  lea r12, str.paste                      ; 0x5209 ; "paste"
0x00002750      4c8b2d515920.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002757      488d357a2e00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x55d8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000275e      31ff           xor edi, edi
0x00002760      ba05000000     mov edx, 5
0x00002765      e8e6ecffff     call sym.imp.dcgettext
0x0000276a      4c89ee         mov rsi, r13
0x0000276d      4889c7         mov rdi, rax
0x00002770      e89bedffff     call sym.imp.fputs_unlocked
0x00002775      e9cffeffff     jmp 0x2649
0x0000277a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00002780      48893d895920.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x208110:8]=0
0x00002787      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002788      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002790      40883d715920.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x208108:1]=0
0x00002797      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002798      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000027a0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000027a1      53             push rbx
0x000027a2      4883ec08       sub rsp, 8
0x000027a6      488b3dfb5820.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000027ad      e86e280000     call sym.close_stream
0x000027b2      85c0           test eax, eax
0x000027b4      7416           je 0x27cc
0x000027b6      e815ecffff     call sym.imp.__errno_location
0x000027bb      803d46592000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x208108:1]=0
0x000027c2      4889c3         mov rbx, rax
0x000027c5      741c           je 0x27e3
0x000027c7      833820         cmp dword [rax], 0x20
0x000027ca      7517           jne 0x27e3
0x000027cc      488b3d0d5920.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x000027d3      e848280000     call sym.close_stream
0x000027d8      85c0           test eax, eax
0x000027da      7546           jne 0x2822
0x000027dc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000027e0      5b             pop rbx
0x000027e1      5d             pop rbp
0x000027e2      c3             ret
0x000027e3      488d35fa2900.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x51e4 ; "write error"
0x000027ea      31ff           xor edi, edi
0x000027ec      ba05000000     mov edx, 5
0x000027f1      e85aecffff     call sym.imp.dcgettext
0x000027f6      488b3d135920.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x208110:8]=0
0x000027fd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002800      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002803      7428           je 0x282d
0x00002805      e8961b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000280a      8b33           mov esi, dword [rbx]
0x0000280c      488d157e2e00.  lea rdx, str.s:__s                      ; 0x5691 ; "%s: %s"
0x00002813      4889c1         mov rcx, rax
0x00002816      4989e8         mov r8, rbp
0x00002819      31ff           xor edi, edi
0x0000281b      31c0           xor eax, eax
0x0000281d      e8aeedffff     call sym.imp.error
0x00002822      8b3df8572000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208020:4]=1
0x00002828      e8c3ebffff     call sym.imp._exit
0x0000282d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000282f      488d155f2e00.  lea rdx, [0x00005695]                   ; "%s"
0x00002836      4889c1         mov rcx, rax
0x00002839      31ff           xor edi, edi
0x0000283b      31c0           xor eax, eax
0x0000283d      e88eedffff     call sym.imp.error
0x00002842      ebde           jmp 0x2822
0x00002844      662e0f1f8400.  nop word cs:[rax + rax]
0x0000284e      6690           nop
;-- fdadvise:
0x00002850      e99becffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002855      90             nop
0x00002856      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00002860      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00002863      741b           je 0x2880
0x00002865      53             push rbx
0x00002866      89f3           mov ebx, esi
0x00002868      e8d3ecffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000286d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000286f      31d2           xor edx, edx
0x00002871      31f6           xor esi, esi
0x00002873      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00002874      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002876      e975ecffff     jmp sym.imp.posix_fadvise
0x0000287b      0f1f440000     nop dword [rax + rax]
0x00002880      f3c3           ret
0x00002882      662e0f1f8400.  nop word cs:[rax + rax]
0x0000288c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00002890      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002893      53             push rbx
0x00002894      7477           je 0x290d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002896      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000289b      4889fb         mov rbx, rdi
0x0000289e      e81decffff     call sym.imp.strrchr
0x000028a3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000028a6      7455           je 0x28fd
0x000028a8      4c8d4001       lea r8, [rax + 1]
0x000028ac      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000028af      4829da         sub rdx, rbx
0x000028b2      4883fa06       cmp rdx, 6
0x000028b6      7e45           jle 0x28fd
0x000028b8      488d70fa       lea rsi, [rax - 6]
0x000028bc      488d3d0d2e00.  lea rdi, str..libs                      ; 0x56d0 ; "/.libs/"
0x000028c3      b907000000     mov ecx, 7
0x000028c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000028ca      0f97c2         seta dl
0x000028cd      80da00         sbb dl, 0
0x000028d0      84d2           test dl, dl
0x000028d2      7529           jne 0x28fd
0x000028d4      488d3dfd2d00.  lea rdi, [0x000056d8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000028db      b903000000     mov ecx, 3
0x000028e0      4c89c6         mov rsi, r8
0x000028e3      4c89c3         mov rbx, r8
0x000028e6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000028e8      0f97c2         seta dl
0x000028eb      80da00         sbb dl, 0
0x000028ee      84d2           test dl, dl
0x000028f0      750b           jne 0x28fd
0x000028f2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000028f6      48891da35720.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x000028fd      48891d145820.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x208118:8]=0
0x00002904      48891dbd5720.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080c8:8]=0
0x0000290b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000290c      c3             ret
0x0000290d      488b0dcc5720.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002914      488d3d7d2d00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5698 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000291b      ba37000000     mov edx, 0x37                           ; '7'
0x00002920      be01000000     mov esi, 1
0x00002925      e8f6ecffff     call sym.imp.fwrite
0x0000292a      e891eaffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000292f      90             nop
;-- gettext_quote.part.1:
0x00002930      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002931      53             push rbx
0x00002932      4889fd         mov rbp, rdi
0x00002935      89f3           mov ebx, esi
0x00002937      4883ec08       sub rsp, 8
0x0000293b      e8c0270000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002940      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002943      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002946      80fa55         cmp dl, 0x55
0x00002949      7475           je 0x29c0
0x0000294b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000294e      7420           je 0x2970
0x00002950      488d05942d00.  lea rax, str.l______l                   ; 0x56eb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0\uc4ff\uffd6\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\u04ff\uffd7\u0cff\uffd6\uccff\uffd5\u94ff\uffd7\u84ff\uffd7\u74ff\uffd7\u64ff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\u54ff\uffd7\u44ff\uffd7\u44ff\uffd7\u14ff\uffd7\u44ff\uffd7\uecff\uffd6\u44ff\uffd7\ua7ff\uffd5\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\u77ff\uffd5\uacff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\u44ff\uffd7\u1cff\uffd6\uecff\uffd6\u44ff\uffd7\uecff\uffd6\u44ff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\ua7ff\uffd4\u44ff\uffd7\ua7ff\uffd4\u14ff\uffd7\u98ff\uffd6\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\u88ff\uffd6\U010003d7\uc0ff\uffd7\u70ff\uffd6\ub0ff\uffd7\u58ff\uffd6\u98ff\uffd7\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\u80ff\uffd7\u68ff\uffd7\u68ff\uffd7\u50ff\uffd7\u68ff\uffd7\u38ff\uffd7\u68ff\uffd7\ua8ff\uffd3\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u78ff\uffd3\ua8ff\uffd5\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u68ff\uffd7\u38ff\uffd6\u38ff\uffd7\u68ff\uffd7\u38ff\uffd7\u68ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\ua8ff\uffd2\u68ff\uffd7\ua8ff\uffd2\u50ff\uffd7\xff"
0x00002957      488d158f2d00.  lea rdx, [0x000056ed]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0"
0x0000295e      83fb09         cmp ebx, 9
0x00002961      480f45c2       cmovne rax, rdx
0x00002965      4883c408       add rsp, 8
0x00002969      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000296a      5d             pop rbp
0x0000296b      c3             ret
0x0000296c      0f1f4000       nop dword [rax]
0x00002970      0fb65001       movzx edx, byte [rax + 1]
0x00002974      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002977      80fa42         cmp dl, 0x42
0x0000297a      75d4           jne 0x2950
0x0000297c      80780231       cmp byte [rax + 2], 0x31
0x00002980      75ce           jne 0x2950
0x00002982      80780338       cmp byte [rax + 3], 0x38
0x00002986      75c8           jne 0x2950
0x00002988      80780430       cmp byte [rax + 4], 0x30
0x0000298c      75c2           jne 0x2950
0x0000298e      80780533       cmp byte [rax + 5], 0x33
0x00002992      75bc           jne 0x2950
0x00002994      80780630       cmp byte [rax + 6], 0x30
0x00002998      75b6           jne 0x2950
0x0000299a      80780700       cmp byte [rax + 7], 0
0x0000299e      75b0           jne 0x2950
0x000029a0      807d0060       cmp byte [rbp], 0x60
0x000029a4      488d05392d00.  lea rax, [0x000056e4]
0x000029ab      488d15362d00.  lea rdx, [0x000056e8]
0x000029b2      480f45c2       cmovne rax, rdx
0x000029b6      4883c408       add rsp, 8
0x000029ba      5b             pop rbx
0x000029bb      5d             pop rbp
0x000029bc      c3             ret
0x000029bd      0f1f00         nop dword [rax]
0x000029c0      0fb65001       movzx edx, byte [rax + 1]
0x000029c4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000029c7      80fa54         cmp dl, 0x54
0x000029ca      7584           jne 0x2950
0x000029cc      0fb65002       movzx edx, byte [rax + 2]
0x000029d0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000029d3      80fa46         cmp dl, 0x46
0x000029d6      0f8574ffffff   jne 0x2950
0x000029dc      8078032d       cmp byte [rax + 3], 0x2d
0x000029e0      0f856affffff   jne 0x2950
0x000029e6      80780438       cmp byte [rax + 4], 0x38
0x000029ea      0f8560ffffff   jne 0x2950
0x000029f0      80780500       cmp byte [rax + 5], 0
0x000029f4      0f8556ffffff   jne 0x2950
0x000029fa      807d0060       cmp byte [rbp], 0x60
0x000029fe      488d05d72c00.  lea rax, [0x000056dc]                   ; "\u2018"
0x00002a05      488d15d42c00.  lea rdx, [0x000056e0]                   ; "\u2019"
0x00002a0c      480f45c2       cmovne rax, rdx
0x00002a10      4883c408       add rsp, 8
0x00002a14      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002a15      5d             pop rbp
0x00002a16      c3             ret
0x00002a17      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002a20      4157           push r15
0x00002a22      4156           push r14
0x00002a24      4589c7         mov r15d, r8d
0x00002a27      4155           push r13
0x00002a29      4154           push r12
0x00002a2b      4989fe         mov r14, rdi
0x00002a2e      55             push rbp
0x00002a2f      53             push rbx
0x00002a30      4489cb         mov ebx, r9d
0x00002a33      4989f5         mov r13, rsi
0x00002a36      4889cd         mov rbp, rcx
0x00002a39      83e302         and ebx, 2
0x00002a3c      4881ecb80000.  sub rsp, 0xb8
0x00002a43      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002a4b      4889542410     mov qword [rsp + 0x10], rdx
0x00002a50      4489442408     mov dword [rsp + 8], r8d
0x00002a55      44894c2478     mov dword [rsp + 0x78], r9d
0x00002a5a      4889442420     mov qword [rsp + 0x20], rax
0x00002a5f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002a67      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002a6c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002a74      4889442460     mov qword [rsp + 0x60], rax
0x00002a79      64488b042528.  mov rax, qword fs:[0x28]
0x00002a82      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002a8a      31c0           xor eax, eax
0x00002a8c      e8cfe9ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002a91      4183ff0a       cmp r15d, 0xa
0x00002a95      4889442458     mov qword [rsp + 0x58], rax
0x00002a9a      0f87af110000   ja 0x3c4f
0x00002aa0      488d0d992c00.  lea rcx, [0x00005740]
0x00002aa7      4489fa         mov edx, r15d
0x00002aaa      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002aae      4801c8         add rax, rcx
0x00002ab1      ffe0           jmp rax
0x00002ab3      c644240e01     mov byte [rsp + 0xe], 1
0x00002ab8      c644247c00     mov byte [rsp + 0x7c], 0
0x00002abd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002ac0      48c744245000.  mov qword [rsp + 0x50], 0
0x00002ac9      c644240f01     mov byte [rsp + 0xf], 1
0x00002ace      c644240d00     mov byte [rsp + 0xd], 0
0x00002ad3      488d05132c00.  lea rax, [0x000056ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0"
0x00002ada      48c744241801.  mov qword [rsp + 0x18], 1
0x00002ae3      4531ff         xor r15d, r15d
0x00002ae6      c74424080200.  mov dword [rsp + 8], 2
0x00002aee      4889442448     mov qword [rsp + 0x48], rax
0x00002af3      4531db         xor r11d, r11d
0x00002af6      4889e8         mov rax, rbp
0x00002af9      4589e0         mov r8d, r12d
0x00002afc      4c89dd         mov rbp, r11
0x00002aff      4989c3         mov r11, rax
0x00002b02      660f1f440000   nop word [rax + rax]
0x00002b08      4939eb         cmp r11, rbp
0x00002b0b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002b0f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002b13      750d           jne 0x2b22
0x00002b15      488b442410     mov rax, qword [rsp + 0x10]
0x00002b1a      803c2800       cmp byte [rax + rbp], 0
0x00002b1e      410f95c4       setne r12b
0x00002b22      4584e4         test r12b, r12b
0x00002b25      0f8455060000   je 0x3180
0x00002b2b      837c240802     cmp dword [rsp + 8], 2
0x00002b30      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002b35      4c8d0c2f       lea r9, [rdi + rbp]
0x00002b39      0f95c0         setne al
0x00002b3c      2244240d       and al, byte [rsp + 0xd]
0x00002b40      4189c2         mov r10d, eax
0x00002b43      0f84a7000000   je 0x2bf0
0x00002b49      488b442418     mov rax, qword [rsp + 0x18]
0x00002b4e      4885c0         test rax, rax
0x00002b51      0f8429040000   je 0x2f80
0x00002b57      4983fbff       cmp r11, 0xffffffffffffffff
0x00002b5b      488d5c0500     lea rbx, [rbp + rax]
0x00002b60      752e           jne 0x2b90
0x00002b62      4883f801       cmp rax, 1
0x00002b66      7628           jbe 0x2b90
0x00002b68      4488442438     mov byte [rsp + 0x38], r8b
0x00002b6d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002b72      4c894c2428     mov qword [rsp + 0x28], r9
0x00002b77      e8f4e8ffff     call sym.imp.strlen
0x00002b7c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002b82      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002b88      4989c3         mov r11, rax
0x00002b8b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002b90      4c39db         cmp rbx, r11
0x00002b93      4488542428     mov byte [rsp + 0x28], r10b
0x00002b98      0f87b2050000   ja 0x3150
0x00002b9e      488b542418     mov rdx, qword [rsp + 0x18]
0x00002ba3      488b742448     mov rsi, qword [rsp + 0x48]
0x00002ba8      4c89cf         mov rdi, r9
0x00002bab      4c895c2440     mov qword [rsp + 0x40], r11
0x00002bb0      4488442438     mov byte [rsp + 0x38], r8b
0x00002bb5      4c894c2430     mov qword [rsp + 0x30], r9
0x00002bba      e841e9ffff     call sym.imp.memcmp
0x00002bbf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002bc1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002bc6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002bcc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002bd1      0f8579050000   jne 0x3150
0x00002bd7      807c240f00     cmp byte [rsp + 0xf], 0
0x00002bdc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002be2      0f857d0f0000   jne 0x3b65
0x00002be8      0f1f84000000.  nop dword [rax + rax]
0x00002bf0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002bf4      80fb7e         cmp bl, 0x7e
0x00002bf7      0f871b030000   ja 0x2f18
0x00002bfd      488d0d682b00.  lea rcx, [0x0000576c]
0x00002c04      0fb6d3         movzx edx, bl
0x00002c07      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002c0b      4801c8         add rax, rcx
0x00002c0e      ffe0           jmp rax
0x00002c10      4531d2         xor r10d, r10d
0x00002c13      4983fb01       cmp r11, 1
0x00002c17      0f95c0         setne al
0x00002c1a      4983fbff       cmp r11, 0xffffffffffffffff
0x00002c1e      750c           jne 0x2c2c
0x00002c20      488b442410     mov rax, qword [rsp + 0x10]
0x00002c25      80780100       cmp byte [rax + 1], 0
0x00002c29      0f95c0         setne al
0x00002c2c      837c240802     cmp dword [rsp + 8], 2
0x00002c31      0f94c2         sete dl
0x00002c34      84c0           test al, al
0x00002c36      0f844c020000   je 0x2e88
0x00002c3c      4531e4         xor r12d, r12d
0x00002c3f      31c0           xor eax, eax
0x00002c41      0f1f80000000.  nop dword [rax]
0x00002c48      807c240d01     cmp byte [rsp + 0xd], 1
0x00002c4d      0f850f010000   jne 0x2d62
0x00002c53      84d2           test dl, dl
0x00002c55      0f8507010000   jne 0x2d62
0x00002c5b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002c60      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002c63      7414           je 0x2c79
0x00002c65      89da           mov edx, ebx
0x00002c67      c0ea05         shr dl, 5
0x00002c6a      0fb6d2         movzx edx, dl
0x00002c6d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002c70      0fa3da         bt edx, ebx
0x00002c73      0f824a010000   jb 0x2dc3
0x00002c79      4584d2         test r10b, r10b
0x00002c7c      0f8541010000   jne 0x2dc3
0x00002c82      83f001         xor eax, 1
0x00002c85      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002c89      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002c8c      84c0           test al, al
0x00002c8e      7420           je 0x2cb0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002c90      4d39fd         cmp r13, r15
0x00002c93      7605           jbe 0x2c9a
0x00002c95      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002c9a      498d4701       lea rax, [r15 + 1]
0x00002c9e      4939c5         cmp r13, rax
0x00002ca1      7606           jbe 0x2ca9
0x00002ca3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002ca9      4983c702       add r15, 2
0x00002cad      4531c0         xor r8d, r8d
0x00002cb0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002cb3      7304           jae 0x2cb9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002cb5      43881c3e       mov byte [r14 + r15], bl
0x00002cb9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002cbe      4983c701       add r15, 1
0x00002cc2      b800000000     mov eax, 0
0x00002cc7      4584e4         test r12b, r12b
0x00002cca      0f44f8         cmove edi, eax
0x00002ccd      40887c240e     mov byte [rsp + 0xe], dil
0x00002cd2      e931feffff     jmp 0x2b08
0x00002cd7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002ce0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002ce3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002ce7      83f802         cmp eax, 2
0x00002cea      0f84b8050000   je 0x32a8
0x00002cf0      83f805         cmp eax, 5
0x00002cf3      0f846f050000   je 0x3268
0x00002cf9      83f802         cmp eax, 2
0x00002cfc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002d01      0f94c2         sete dl
0x00002d04      4531e4         xor r12d, r12d
0x00002d07      31c0           xor eax, eax
0x00002d09      e93affffff     jmp 0x2c48
0x00002d0e      6690           nop
0x00002d10      4531d2         xor r10d, r10d
0x00002d13      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002d18      0f8402050000   je 0x3220
0x00002d1e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002d23      31d2           xor edx, edx
0x00002d25      31c0           xor eax, eax
0x00002d27      bb27000000     mov ebx, 0x27                           ; '''
0x00002d2c      e917ffffff     jmp 0x2c48
0x00002d31      0f1f80000000.  nop dword [rax]
0x00002d38      ba09000000     mov edx, 9
0x00002d3d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002d42      837c240802     cmp dword [rsp + 8], 2
0x00002d47      0f94c0         sete al
0x00002d4a      2244240f       and al, byte [rsp + 0xf]
0x00002d4e      0f854a010000   jne 0x2e9e
0x00002d54      807c240d00     cmp byte [rsp + 0xd], 0
0x00002d59      7565           jne 0x2dc0
0x00002d5b      89d3           mov ebx, edx
0x00002d5d      4531e4         xor r12d, r12d
0x00002d60      31c0           xor eax, eax
0x00002d62      807c240f00     cmp byte [rsp + 0xf], 0
0x00002d67      0f85eefeffff   jne 0x2c5b
0x00002d6d      e907ffffff     jmp 0x2c79                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002d72      660f1f440000   nop word [rax + rax]
0x00002d78      ba08000000     mov edx, 8
0x00002d7d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002d82      ebd0           jmp 0x2d54
0x00002d84      0f1f4000       nop dword [rax]
0x00002d88      837c240802     cmp dword [rsp + 8], 2
0x00002d8d      0f84cd030000   je 0x3160
0x00002d93      807c240d00     cmp byte [rsp + 0xd], 0
0x00002d98      0f8412020000   je 0x2fb0
0x00002d9e      807c240f00     cmp byte [rsp + 0xf], 0
0x00002da3      0f8407020000   je 0x2fb0
0x00002da9      48837c241800   cmp qword [rsp + 0x18], 0
0x00002daf      0f85b6030000   jne 0x316b
0x00002db5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002dba      660f1f440000   nop word [rax + rax]
0x00002dc0      4531e4         xor r12d, r12d
0x00002dc3      837c240802     cmp dword [rsp + 8], 2
0x00002dc8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002dcb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002dd0      89d0           mov eax, edx
0x00002dd2      0f8550080000   jne 0x3628
0x00002dd8      4489c0         mov eax, r8d
0x00002ddb      83f001         xor eax, 1
0x00002dde      20d0           and al, dl
0x00002de0      742f           je 0x2e11
0x00002de2      4d39fd         cmp r13, r15
0x00002de5      7605           jbe 0x2dec
0x00002de7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002dec      498d5701       lea rdx, [r15 + 1]
0x00002df0      4939d5         cmp r13, rdx
0x00002df3      7606           jbe 0x2dfb
0x00002df5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002dfb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00002dff      4939d5         cmp r13, rdx
0x00002e02      7606           jbe 0x2e0a
0x00002e04      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002e0a      4983c703       add r15, 3
0x00002e0e      4189c0         mov r8d, eax
0x00002e11      4d39fd         cmp r13, r15
0x00002e14      7605           jbe 0x2e1b
0x00002e16      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002e1b      4983c701       add r15, 1
0x00002e1f      4883c501       add rbp, 1
0x00002e23      e988feffff     jmp 0x2cb0
0x00002e28      0f1f84000000.  nop dword [rax + rax]
0x00002e30      807c240d00     cmp byte [rsp + 0xd], 0
0x00002e35      0f85c8010000   jne 0x3003
0x00002e3b      31d2           xor edx, edx
0x00002e3d      f644247801     test byte [rsp + 0x78], 1
0x00002e42      0f8413ffffff   je 0x2d5b
0x00002e48      4883c501       add rbp, 1
0x00002e4c      e9b7fcffff     jmp 0x2b08
0x00002e51      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002e58      837c240802     cmp dword [rsp + 8], 2
0x00002e5d      0f94c2         sete dl
0x00002e60      31c0           xor eax, eax
0x00002e62      e9e1fdffff     jmp 0x2c48
0x00002e67      660f1f840000.  nop word [rax + rax]
0x00002e70      ba07000000     mov edx, 7
0x00002e75      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002e7a      e9d5feffff     jmp 0x2d54
0x00002e7f      90             nop
0x00002e80      837c240802     cmp dword [rsp + 8], 2
0x00002e85      0f94c2         sete dl
0x00002e88      4885ed         test rbp, rbp
0x00002e8b      0f85abfdffff   jne 0x2c3c
0x00002e91      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002e96      20d0           and al, dl
0x00002e98      0f84aafdffff   je 0x2c48
0x00002e9e      4c89dd         mov rbp, r11
0x00002ea1      c74424080200.  mov dword [rsp + 8], 2
0x00002ea9      e9fb060000     jmp 0x35a9
0x00002eae      6690           nop
0x00002eb0      837c240802     cmp dword [rsp + 8], 2
0x00002eb5      0f94c2         sete dl
0x00002eb8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00002ebb      ebd4           jmp 0x2e91
0x00002ebd      0f1f00         nop dword [rax]
0x00002ec0      837c240802     cmp dword [rsp + 8], 2
0x00002ec5      bb20000000     mov ebx, 0x20                           ; "@"
0x00002eca      0f94c2         sete dl
0x00002ecd      ebc2           jmp 0x2e91
0x00002ecf      90             nop
0x00002ed0      ba0d000000     mov edx, 0xd
0x00002ed5      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002eda      e963feffff     jmp 0x2d42
0x00002edf      90             nop
0x00002ee0      ba0c000000     mov edx, 0xc
0x00002ee5      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002eea      e965feffff     jmp 0x2d54
0x00002eef      90             nop
0x00002ef0      ba0b000000     mov edx, 0xb
0x00002ef5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002efa      e955feffff     jmp 0x2d54
0x00002eff      90             nop
0x00002f00      ba0a000000     mov edx, 0xa
0x00002f05      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00002f0a      e933feffff     jmp 0x2d42
0x00002f0f      90             nop
0x00002f10      4531d2         xor r10d, r10d
0x00002f13      0f1f440000     nop dword [rax + rax]
0x00002f18      48837c245801   cmp qword [rsp + 0x58], 1
0x00002f1e      0f85a4030000   jne 0x32c8
0x00002f24      4c895c2438     mov qword [rsp + 0x38], r11
0x00002f29      4488442430     mov byte [rsp + 0x30], r8b
0x00002f2e      4488542428     mov byte [rsp + 0x28], r10b
0x00002f33      e828e7ffff     call sym.imp.__ctype_b_loc
0x00002f38      488b08         mov rcx, qword [rax]
0x00002f3b      0fb6d3         movzx edx, bl
0x00002f3e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002f44      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002f4a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002f4f      bf01000000     mov edi, 1
0x00002f54      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002f58      66250040       and ax, 0x4000                          ; "1\xffL\x89T$@\xe8\x14\xea\xff\xffH\x8dp\x01H\x89D$HH\x83\xc4 H\x89\xf7H\x89t$\x18\xe8\xba\v"
0x00002f5c      410f95c4       setne r12b
0x00002f60      0f94c0         sete al
0x00002f63      2244240d       and al, byte [rsp + 0xd]
0x00002f67      84c0           test al, al
0x00002f69      0f8592090000   jne 0x3901
0x00002f6f      837c240802     cmp dword [rsp + 8], 2
0x00002f74      0f94c2         sete dl
0x00002f77      e9ccfcffff     jmp 0x2c48
0x00002f7c      0f1f4000       nop dword [rax]
0x00002f80      410fb619       movzx ebx, byte [r9]
0x00002f84      80fb7e         cmp bl, 0x7e
0x00002f87      7787           ja 0x2f10
0x00002f89      488d0dd82900.  lea rcx, [0x00005968]
0x00002f90      0fb6d3         movzx edx, bl
0x00002f93      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002f97      4801c8         add rax, rcx
0x00002f9a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00002f9c      0f1f4000       nop dword [rax]
0x00002fa0      4531d2         xor r10d, r10d
0x00002fa3      807c240d00     cmp byte [rsp + 0xd], 0
0x00002fa8      0f85f0fdffff   jne 0x2d9e
0x00002fae      6690           nop
0x00002fb0      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002fb5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002fba      e995fdffff     jmp 0x2d54
0x00002fbf      90             nop
0x00002fc0      ba0c000000     mov edx, 0xc
0x00002fc5      4531d2         xor r10d, r10d
0x00002fc8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002fcd      e982fdffff     jmp 0x2d54
0x00002fd2      660f1f440000   nop word [rax + rax]
0x00002fd8      ba0a000000     mov edx, 0xa
0x00002fdd      4531d2         xor r10d, r10d
0x00002fe0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002fe5      e958fdffff     jmp 0x2d42
0x00002fea      660f1f440000   nop word [rax + rax]
0x00002ff0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002ff5      e9c6fdffff     jmp 0x2dc0
0x00002ffa      660f1f440000   nop word [rax + rax]
0x00003000      4531d2         xor r10d, r10d
0x00003003      837c240802     cmp dword [rsp + 8], 2
0x00003008      0f94c2         sete dl
0x0000300b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003010      0f85940b0000   jne 0x3baa
0x00003016      4489c0         mov eax, r8d
0x00003019      4c89f9         mov rcx, r15
0x0000301c      83f001         xor eax, 1
0x0000301f      20d0           and al, dl
0x00003021      742d           je 0x3050
0x00003023      4d39fd         cmp r13, r15
0x00003026      7605           jbe 0x302d
0x00003028      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000302d      498d4f01       lea rcx, [r15 + 1]
0x00003031      4939cd         cmp r13, rcx
0x00003034      7606           jbe 0x303c
0x00003036      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000303c      498d4f02       lea rcx, [r15 + 2]
0x00003040      4939cd         cmp r13, rcx
0x00003043      0f8730060000   ja 0x3679
0x00003049      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000304d      4189c0         mov r8d, eax
0x00003050      4939cd         cmp r13, rcx
0x00003053      7605           jbe 0x305a
0x00003055      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000305a      837c240802     cmp dword [rsp + 8], 2
0x0000305f      4c8d7901       lea r15, [rcx + 1]
0x00003063      0f8400060000   je 0x3669
0x00003069      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000306d      4c39d8         cmp rax, r11
0x00003070      7319           jae 0x308b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003072      488b442410     mov rax, qword [rsp + 0x10]
0x00003077      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000307c      88442428       mov byte [rsp + 0x28], al
0x00003080      83e830         sub eax, 0x30
0x00003083      3c09           cmp al, 9
0x00003085      0f862e080000   jbe 0x38b9
0x0000308b      4489e0         mov eax, r12d
0x0000308e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003093      4531e4         xor r12d, r12d
0x00003096      e9adfbffff     jmp 0x2c48                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000309b      0f1f440000     nop dword [rax + rax]
0x000030a0      837c240802     cmp dword [rsp + 8], 2
0x000030a5      4589d4         mov r12d, r10d
0x000030a8      0f94c2         sete dl
0x000030ab      4531d2         xor r10d, r10d
0x000030ae      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000030b0      e993fbffff     jmp 0x2c48                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000030b5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000030b8      837c240802     cmp dword [rsp + 8], 2
0x000030bd      0f94c2         sete dl
0x000030c0      4531d2         xor r10d, r10d
0x000030c3      e9c0fdffff     jmp 0x2e88
0x000030c8      0f1f84000000.  nop dword [rax + rax]
0x000030d0      837c240802     cmp dword [rsp + 8], 2
0x000030d5      0f94c2         sete dl
0x000030d8      4531d2         xor r10d, r10d
0x000030db      4531e4         xor r12d, r12d
0x000030de      e9aefdffff     jmp 0x2e91
0x000030e3      0f1f440000     nop dword [rax + rax]
0x000030e8      837c240802     cmp dword [rsp + 8], 2
0x000030ed      4589d4         mov r12d, r10d
0x000030f0      bb20000000     mov ebx, 0x20                           ; "@"
0x000030f5      0f94c2         sete dl
0x000030f8      4531d2         xor r10d, r10d
0x000030fb      e991fdffff     jmp 0x2e91
0x00003100      ba0d000000     mov edx, 0xd
0x00003105      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003108      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000310d      e930fcffff     jmp 0x2d42
0x00003112      660f1f440000   nop word [rax + rax]
0x00003118      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000311d      e99efcffff     jmp 0x2dc0
0x00003122      660f1f440000   nop word [rax + rax]
0x00003128      ba09000000     mov edx, 9
0x0000312d      4531d2         xor r10d, r10d
0x00003130      bb74000000     mov ebx, 0x74                           ; 't'
0x00003135      e908fcffff     jmp 0x2d42
0x0000313a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003140      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003145      e976fcffff     jmp 0x2dc0
0x0000314a      660f1f440000   nop word [rax + rax]
0x00003150      4531d2         xor r10d, r10d
0x00003153      e998faffff     jmp 0x2bf0
0x00003158      0f1f84000000.  nop dword [rax + rax]
0x00003160      807c240f00     cmp byte [rsp + 0xf], 0
0x00003165      0f8565090000   jne 0x3ad0
0x0000316b      4883c501       add rbp, 1
0x0000316f      4489c0         mov eax, r8d
0x00003172      4531e4         xor r12d, r12d
0x00003175      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000317a      e90dfbffff     jmp 0x2c8c
0x0000317f      90             nop
0x00003180      837c240802     cmp dword [rsp + 8], 2
0x00003185      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000318a      4589c4         mov r12d, r8d
0x0000318d      4c89dd         mov rbp, r11
0x00003190      0f94c2         sete dl
0x00003193      89d8           mov eax, ebx
0x00003195      4d85ff         test r15, r15
0x00003198      0f94c1         sete cl
0x0000319b      21d0           and eax, edx
0x0000319d      20c8           and al, cl
0x0000319f      0f85610a0000   jne 0x3c06                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000031a5      89d8           mov eax, ebx
0x000031a7      83f001         xor eax, 1
0x000031aa      20c2           and dl, al
0x000031ac      0f846a090000   je 0x3b1c
0x000031b2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000031b7      0f845d090000   je 0x3b1a
0x000031bd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000031c2      0f85f5090000   jne 0x3bbd
0x000031c8      4d85ed         test r13, r13
0x000031cb      0f94c0         sete al
0x000031ce      48837c245000   cmp qword [rsp + 0x50], 0
0x000031d4      0f95c2         setne dl
0x000031d7      20d0           and al, dl
0x000031d9      0f841d0a0000   je 0x3bfc
0x000031df      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000031e4      488d1d022500.  lea rbx, [0x000056ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0"
0x000031eb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000031ef      c74424080200.  mov dword [rsp + 8], 2
0x000031f7      41bf01000000   mov r15d, 1
0x000031fd      48c744241801.  mov qword [rsp + 0x18], 1
0x00003206      c644240f00     mov byte [rsp + 0xf], 0
0x0000320b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003210      8844247c       mov byte [rsp + 0x7c], al
0x00003214      e9daf8ffff     jmp 0x2af3
0x00003219      0f1f80000000.  nop dword [rax]
0x00003220      807c240f00     cmp byte [rsp + 0xf], 0
0x00003225      0f85a5080000   jne 0x3ad0
0x0000322b      4d85ed         test r13, r13
0x0000322e      0f84fc030000   je 0x3630                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003234      31d2           xor edx, edx
0x00003236      48837c245000   cmp qword [rsp + 0x50], 0
0x0000323c      0f85ee030000   jne 0x3630                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003242      4c896c2450     mov qword [rsp + 0x50], r13
0x00003247      4983c703       add r15, 3
0x0000324b      31c0           xor eax, eax
0x0000324d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003252      4531c0         xor r8d, r8d
0x00003255      4989d5         mov r13, rdx
0x00003258      bb27000000     mov ebx, 0x27                           ; '''
0x0000325d      e917faffff     jmp 0x2c79
0x00003262      660f1f440000   nop word [rax + rax]
0x00003268      f644247804     test byte [rsp + 0x78], 4
0x0000326d      7421           je 0x3290
0x0000326f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003273      4c39d9         cmp rcx, r11
0x00003276      7318           jae 0x3290
0x00003278      488b442410     mov rax, qword [rsp + 0x10]
0x0000327d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003282      0f848a070000   je 0x3a12
0x00003288      0f1f84000000.  nop dword [rax + rax]
0x00003290      31d2           xor edx, edx
0x00003292      4531e4         xor r12d, r12d
0x00003295      31c0           xor eax, eax
0x00003297      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000329c      e9a7f9ffff     jmp 0x2c48
0x000032a1      0f1f80000000.  nop dword [rax]
0x000032a8      807c240f00     cmp byte [rsp + 0xf], 0
0x000032ad      0f851d080000   jne 0x3ad0
0x000032b3      4531e4         xor r12d, r12d
0x000032b6      31c0           xor eax, eax
0x000032b8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000032bd      e9b7f9ffff     jmp 0x2c79                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000032c2      660f1f440000   nop word [rax + rax]
0x000032c8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000032d0      4983fbff       cmp r11, 0xffffffffffffffff
0x000032d4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000032e0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000032e5      752d           jne 0x3314
0x000032e7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000032ec      4488442440     mov byte [rsp + 0x40], r8b
0x000032f1      4488542438     mov byte [rsp + 0x38], r10b
0x000032f6      4c894c2430     mov qword [rsp + 0x30], r9
0x000032fb      e870e1ffff     call sym.imp.strlen
0x00003300      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003306      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000330c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000330f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003314      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000331c      31c9           xor ecx, ecx
0x0000331e      885c247e       mov byte [rsp + 0x7e], bl
0x00003322      448844247d     mov byte [rsp + 0x7d], r8b
0x00003327      4889cb         mov rbx, rcx
0x0000332a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003332      4889442438     mov qword [rsp + 0x38], rax
0x00003337      448854247f     mov byte [rsp + 0x7f], r10b
0x0000333c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003344      4c89742440     mov qword [rsp + 0x40], r14
0x00003349      4c896c2470     mov qword [rsp + 0x70], r13
0x0000334e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003353      488b442410     mov rax, qword [rsp + 0x10]
0x00003358      4c8d741d00     lea r14, [rbp + rbx]
0x0000335d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003362      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003367      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000336c      4e8d2c30       lea r13, [rax + r14]
0x00003370      4c29f2         sub rdx, r14
0x00003373      4c89ee         mov rsi, r13
0x00003376      e8151c0000     call sym.rpl_mbrtowc
0x0000337b      4885c0         test rax, rax
0x0000337e      4989c7         mov r15, rax
0x00003381      744e           je 0x33d1
0x00003383      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003387      0f8418060000   je 0x39a5
0x0000338d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003391      0f849a050000   je 0x3931
0x00003397      837c240802     cmp dword [rsp + 8], 2
0x0000339c      0f94c0         sete al
0x0000339f      2244240f       and al, byte [rsp + 0xf]
0x000033a3      0f8597010000   jne 0x3540
0x000033a9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000033b0      e89be2ffff     call sym.imp.iswprint
0x000033b5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000033ba      85c0           test eax, eax
0x000033bc      b800000000     mov eax, 0
0x000033c1      440f44e0       cmove r12d, eax
0x000033c5      4c01fb         add rbx, r15
0x000033c8      e873e2ffff     call sym.imp.mbsinit
0x000033cd      85c0           test eax, eax
0x000033cf      7482           je 0x3353
0x000033d1      4489e2         mov edx, r12d
0x000033d4      4889df         mov rdi, rbx
0x000033d7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000033dd      83f201         xor edx, 1
0x000033e0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000033e5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000033eb      2254240d       and dl, byte [rsp + 0xd]
0x000033ef      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000033f7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000033fc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003401      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003406      4883ff01       cmp rdi, 1
0x0000340a      0f86fb050000   jbe 0x3a0b
0x00003410      4889f9         mov rcx, rdi
0x00003413      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003415      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000341b      4801e9         add rcx, rbp
0x0000341e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003423      e9b6000000     jmp 0x34de
0x00003428      0f1f84000000.  nop dword [rax + rax]
0x00003430      837c240802     cmp dword [rsp + 8], 2
0x00003435      0f94c0         sete al
0x00003438      4584c9         test r9b, r9b
0x0000343b      0f85af040000   jne 0x38f0
0x00003441      4489c6         mov esi, r8d
0x00003444      83f601         xor esi, 1
0x00003447      4020f0         and al, sil
0x0000344a      742f           je 0x347b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000344c      4d39fd         cmp r13, r15
0x0000344f      7605           jbe 0x3456
0x00003451      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003456      498d7701       lea rsi, [r15 + 1]
0x0000345a      4939f5         cmp r13, rsi
0x0000345d      7606           jbe 0x3465                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000345f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003465      498d7702       lea rsi, [r15 + 2]
0x00003469      4939f5         cmp r13, rsi
0x0000346c      7606           jbe 0x3474
0x0000346e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003474      4983c703       add r15, 3
0x00003478      4189c0         mov r8d, eax
0x0000347b      4d39fd         cmp r13, r15
0x0000347e      7605           jbe 0x3485
0x00003480      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003485      498d4701       lea rax, [r15 + 1]
0x00003489      4939c5         cmp r13, rax
0x0000348c      760d           jbe 0x349b
0x0000348e      89d8           mov eax, ebx
0x00003490      c0e806         shr al, 6
0x00003493      83c030         add eax, 0x30
0x00003496      4388443e01     mov byte [r14 + r15 + 1], al
0x0000349b      498d4702       lea rax, [r15 + 2]
0x0000349f      4939c5         cmp r13, rax
0x000034a2      7610           jbe 0x34b4
0x000034a4      89d8           mov eax, ebx
0x000034a6      c0e803         shr al, 3
0x000034a9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000034ac      83c030         add eax, 0x30
0x000034af      4388443e02     mov byte [r14 + r15 + 2], al
0x000034b4      83e307         and ebx, 7
0x000034b7      4883c501       add rbp, 1
0x000034bb      4983c703       add r15, 3
0x000034bf      83c330         add ebx, 0x30
0x000034c2      4839cd         cmp rbp, rcx
0x000034c5      0f83e5f7ffff   jae 0x2cb0
0x000034cb      89d6           mov esi, edx
0x000034cd      4d39fd         cmp r13, r15
0x000034d0      7604           jbe 0x34d6
0x000034d2      43881c3e       mov byte [r14 + r15], bl
0x000034d6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000034da      4983c701       add r15, 1
0x000034de      84d2           test dl, dl
0x000034e0      0f854affffff   jne 0x3430
0x000034e6      89f0           mov eax, esi
0x000034e8      83f001         xor eax, 1
0x000034eb      4421c0         and eax, r8d
0x000034ee      4584d2         test r10b, r10b
0x000034f1      740e           je 0x3501
0x000034f3      4d39fd         cmp r13, r15
0x000034f6      7605           jbe 0x34fd
0x000034f8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000034fd      4983c701       add r15, 1
0x00003501      4883c501       add rbp, 1
0x00003505      4839cd         cmp rbp, rcx
0x00003508      0f837ef7ffff   jae 0x2c8c
0x0000350e      84c0           test al, al
0x00003510      0f84f8030000   je 0x390e
0x00003516      4d39fd         cmp r13, r15
0x00003519      7605           jbe 0x3520
0x0000351b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003520      498d4701       lea rax, [r15 + 1]
0x00003524      4939c5         cmp r13, rax
0x00003527      7606           jbe 0x352f
0x00003529      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000352f      4983c702       add r15, 2
0x00003533      4531d2         xor r10d, r10d
0x00003536      4531c0         xor r8d, r8d
0x00003539      eb92           jmp 0x34cd
0x0000353b      0f1f440000     nop dword [rax + rax]
0x00003540      4983ff01       cmp r15, 1
0x00003544      0f845ffeffff   je 0x33a9
0x0000354a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000354f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003553      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003558      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000355c      eb0f           jmp 0x356d
0x0000355e      6690           nop
0x00003560      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003564      4939d0         cmp r8, rdx
0x00003567      0f843cfeffff   je 0x33a9
0x0000356d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003570      83e95b         sub ecx, 0x5b
0x00003573      80f921         cmp cl, 0x21
0x00003576      77e8           ja 0x3560                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003578      be01000000     mov esi, 1
0x0000357d      48d3e6         shl rsi, cl
0x00003580      4889f1         mov rcx, rsi
0x00003583      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000358d      4885f1         test rcx, rsi
0x00003590      74ce           je 0x3560
0x00003592      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003597      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000359c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000035a1      c74424080200.  mov dword [rsp + 8], 2
0x000035a9      807c240d00     cmp byte [rsp + 0xd], 0
0x000035ae      7410           je 0x35c0
0x000035b0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000035b2      b804000000     mov eax, 4
0x000035b7      0f44442408     cmove eax, dword [rsp + 8]
0x000035bc      89442408       mov dword [rsp + 8], eax
0x000035c0      4883ec08       sub rsp, 8
0x000035c4      4889e9         mov rcx, rbp
0x000035c7      4c89ee         mov rsi, r13
0x000035ca      ff742468       push qword [rsp + 0x68]
0x000035ce      ff742478       push qword [rsp + 0x78]
0x000035d2      4c89f7         mov rdi, r14
0x000035d5      6a00           push 0
0x000035d7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000035df      448b442428     mov r8d, dword [rsp + 0x28]
0x000035e4      488b542430     mov rdx, qword [rsp + 0x30]
0x000035e9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000035ed      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000035f2      4883c420       add rsp, 0x20
0x000035f6      4989c7         mov r15, rax
0x000035f9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003601      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000360a      4c89f8         mov rax, r15
0x0000360d      0f8500060000   jne 0x3c13
0x00003613      4881c4b80000.  add rsp, 0xb8
0x0000361a      5b             pop rbx
0x0000361b      5d             pop rbp
0x0000361c      415c           pop r12
0x0000361e      415d           pop r13
0x00003620      415e           pop r14
0x00003622      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003624      c3             ret
0x00003625      0f1f00         nop dword [rax]
0x00003628      4c89dd         mov rbp, r11
0x0000362b      e979ffffff     jmp 0x35a9
0x00003630      4d39fd         cmp r13, r15
0x00003633      7605           jbe 0x363a
0x00003635      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000363a      498d4701       lea rax, [r15 + 1]
0x0000363e      4939c5         cmp r13, rax
0x00003641      7606           jbe 0x3649
0x00003643      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003649      498d4702       lea rax, [r15 + 2]
0x0000364d      4939c5         cmp r13, rax
0x00003650      0f86ec050000   jbe 0x3c42
0x00003656      4c89ea         mov rdx, r13
0x00003659      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000365f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003664      e9d9fbffff     jmp 0x3242
0x00003669      4489e0         mov eax, r12d
0x0000366c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003671      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003674      e900f6ffff     jmp 0x2c79                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003679      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000367f      e9c5f9ffff     jmp 0x3049
0x00003684      85db           test ebx, ebx
0x00003686      0f8527f4ffff   jne 0x2ab3
0x0000368c      c644240d01     mov byte [rsp + 0xd], 1
0x00003691      4d85ed         test r13, r13
0x00003694      0f8590050000   jne 0x3c2a
0x0000369a      488d054c2000.  lea rax, [0x000056ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0"
0x000036a1      48c744245000.  mov qword [rsp + 0x50], 0
0x000036aa      c644240e01     mov byte [rsp + 0xe], 1
0x000036af      c644247c00     mov byte [rsp + 0x7c], 0
0x000036b4      4531e4         xor r12d, r12d
0x000036b7      c644240f00     mov byte [rsp + 0xf], 0
0x000036bc      48c744241801.  mov qword [rsp + 0x18], 1
0x000036c5      4889442448     mov qword [rsp + 0x48], rax
0x000036ca      41bf01000000   mov r15d, 1
0x000036d0      c74424080200.  mov dword [rsp + 8], 2
0x000036d8      e916f4ffff     jmp 0x2af3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000036dd      0f1f00         nop dword [rax]
0x000036e0      85db           test ebx, ebx
0x000036e2      0f85f5030000   jne 0x3add
0x000036e8      4d85ed         test r13, r13
0x000036eb      0f8425020000   je 0x3916
0x000036f1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000036f5      c644240e01     mov byte [rsp + 0xe], 1
0x000036fa      4531e4         xor r12d, r12d
0x000036fd      c644247c00     mov byte [rsp + 0x7c], 0
0x00003702      48c744245000.  mov qword [rsp + 0x50], 0
0x0000370b      488d05d91f00.  lea rax, str.l______l                   ; 0x56eb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0\uc4ff\uffd6\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\u04ff\uffd7\u0cff\uffd6\uccff\uffd5\u94ff\uffd7\u84ff\uffd7\u74ff\uffd7\u64ff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\u54ff\uffd7\u44ff\uffd7\u44ff\uffd7\u14ff\uffd7\u44ff\uffd7\uecff\uffd6\u44ff\uffd7\ua7ff\uffd5\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\u77ff\uffd5\uacff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\u44ff\uffd7\u1cff\uffd6\uecff\uffd6\u44ff\uffd7\uecff\uffd6\u44ff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\ua7ff\uffd4\u44ff\uffd7\ua7ff\uffd4\u14ff\uffd7\u98ff\uffd6\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\u88ff\uffd6\U010003d7\uc0ff\uffd7\u70ff\uffd6\ub0ff\uffd7\u58ff\uffd6\u98ff\uffd7\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\u80ff\uffd7\u68ff\uffd7\u68ff\uffd7\u50ff\uffd7\u68ff\uffd7\u38ff\uffd7\u68ff\uffd7\ua8ff\uffd3\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u78ff\uffd3\ua8ff\uffd5\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u68ff\uffd7\u38ff\uffd6\u38ff\uffd7\u68ff\uffd7\u38ff\uffd7\u68ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\ua8ff\uffd2\u68ff\uffd7\ua8ff\uffd2\u50ff\uffd7\xff"
0x00003712      c644240f00     mov byte [rsp + 0xf], 0
0x00003717      c644240d01     mov byte [rsp + 0xd], 1
0x0000371c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003725      41bf01000000   mov r15d, 1
0x0000372b      4889442448     mov qword [rsp + 0x48], rax
0x00003730      e9bef3ffff     jmp 0x2af3
0x00003735      488d05af1f00.  lea rax, str.l______l                   ; 0x56eb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0\uc4ff\uffd6\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\u04ff\uffd7\u0cff\uffd6\uccff\uffd5\u94ff\uffd7\u84ff\uffd7\u74ff\uffd7\u64ff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\u54ff\uffd7\u44ff\uffd7\u44ff\uffd7\u14ff\uffd7\u44ff\uffd7\uecff\uffd6\u44ff\uffd7\ua7ff\uffd5\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\u77ff\uffd5\uacff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\u44ff\uffd7\u1cff\uffd6\uecff\uffd6\u44ff\uffd7\uecff\uffd6\u44ff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\ua7ff\uffd4\u44ff\uffd7\ua7ff\uffd4\u14ff\uffd7\u98ff\uffd6\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\u88ff\uffd6\U010003d7\uc0ff\uffd7\u70ff\uffd6\ub0ff\uffd7\u58ff\uffd6\u98ff\uffd7\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\u80ff\uffd7\u68ff\uffd7\u68ff\uffd7\u50ff\uffd7\u68ff\uffd7\u38ff\uffd7\u68ff\uffd7\ua8ff\uffd3\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u78ff\uffd3\ua8ff\uffd5\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u68ff\uffd7\u38ff\uffd6\u38ff\uffd7\u68ff\uffd7\u38ff\uffd7\u68ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\ua8ff\uffd2\u68ff\uffd7\ua8ff\uffd2\u50ff\uffd7\xff"
0x0000373c      c644240e01     mov byte [rsp + 0xe], 1
0x00003741      c644247c00     mov byte [rsp + 0x7c], 0
0x00003746      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003749      48c744245000.  mov qword [rsp + 0x50], 0
0x00003752      c644240f01     mov byte [rsp + 0xf], 1
0x00003757      c644240d01     mov byte [rsp + 0xd], 1
0x0000375c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003765      4531ff         xor r15d, r15d
0x00003768      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000376d      c74424080500.  mov dword [rsp + 8], 5
0x00003775      e979f3ffff     jmp 0x2af3
0x0000377a      c644240e01     mov byte [rsp + 0xe], 1
0x0000377f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003784      4531e4         xor r12d, r12d
0x00003787      48c744245000.  mov qword [rsp + 0x50], 0
0x00003790      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003795      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003798      c644240d01     mov byte [rsp + 0xd], 1
0x0000379d      48c744241800.  mov qword [rsp + 0x18], 0
0x000037a6      48c744244800.  mov qword [rsp + 0x48], 0
0x000037af      e93ff3ffff     jmp 0x2af3
0x000037b4      837c24080a     cmp dword [rsp + 8], 0xa
0x000037b9      7456           je 0x3811
0x000037bb      488d352d1f00.  lea rsi, [0x000056ef]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000037c2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000037c4      ba05000000     mov edx, 5
0x000037c9      e882dcffff     call sym.imp.dcgettext
0x000037ce      4889c1         mov rcx, rax
0x000037d1      4889442468     mov qword [rsp + 0x68], rax
0x000037d6      488d05121f00.  lea rax, [0x000056ef]                   ; "`"
0x000037dd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000037e0      0f8498030000   je 0x3b7e
0x000037e6      488d35001f00.  lea rsi, [0x000056ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0"
0x000037ed      31ff           xor edi, edi
0x000037ef      ba05000000     mov edx, 5
0x000037f4      e857dcffff     call sym.imp.dcgettext
0x000037f9      4889c1         mov rcx, rax
0x000037fc      4889442460     mov qword [rsp + 0x60], rax
0x00003801      488d05e51e00.  lea rax, [0x000056ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0"
0x00003808      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000380b      0f8483030000   je 0x3b94
0x00003811      4531ff         xor r15d, r15d
0x00003814      85db           test ebx, ebx
0x00003816      0f84c1010000   je 0x39dd
0x0000381c      85db           test ebx, ebx
0x0000381e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003823      0f9544240f     setne byte [rsp + 0xf]
0x00003828      4531e4         xor r12d, r12d
0x0000382b      4889df         mov rdi, rbx
0x0000382e      e83ddcffff     call sym.imp.strlen
0x00003833      48895c2448     mov qword [rsp + 0x48], rbx
0x00003838      4889442418     mov qword [rsp + 0x18], rax
0x0000383d      c644240e01     mov byte [rsp + 0xe], 1
0x00003842      c644247c00     mov byte [rsp + 0x7c], 0
0x00003847      48c744245000.  mov qword [rsp + 0x50], 0
0x00003850      c644240d01     mov byte [rsp + 0xd], 1
0x00003855      e999f2ffff     jmp 0x2af3
0x0000385a      c644240e01     mov byte [rsp + 0xe], 1
0x0000385f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003864      4531e4         xor r12d, r12d
0x00003867      48c744245000.  mov qword [rsp + 0x50], 0
0x00003870      c644240f00     mov byte [rsp + 0xf], 0
0x00003875      4531ff         xor r15d, r15d
0x00003878      c644240d00     mov byte [rsp + 0xd], 0
0x0000387d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003886      48c744244800.  mov qword [rsp + 0x48], 0
0x0000388f      e95ff2ffff     jmp 0x2af3
0x00003894      c644240e01     mov byte [rsp + 0xe], 1
0x00003899      c644247c00     mov byte [rsp + 0x7c], 0
0x0000389e      4531e4         xor r12d, r12d
0x000038a1      48c744245000.  mov qword [rsp + 0x50], 0
0x000038aa      c644240f01     mov byte [rsp + 0xf], 1
0x000038af      c644240d01     mov byte [rsp + 0xd], 1
0x000038b4      e91af2ffff     jmp 0x2ad3
0x000038b9      4d39fd         cmp r13, r15
0x000038bc      7605           jbe 0x38c3
0x000038be      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000038c3      488d4102       lea rax, [rcx + 2]
0x000038c7      4939c5         cmp r13, rax
0x000038ca      7606           jbe 0x38d2
0x000038cc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000038d2      4489e0         mov eax, r12d
0x000038d5      4c8d7903       lea r15, [rcx + 3]
0x000038d9      4531e4         xor r12d, r12d
0x000038dc      bb30000000     mov ebx, 0x30                           ; '0'
0x000038e1      e962f3ffff     jmp 0x2c48
0x000038e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000038f0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000038f5      4c89dd         mov rbp, r11
0x000038f8      885c240d       mov byte [rsp + 0xd], bl
0x000038fc      e9a8fcffff     jmp 0x35a9
0x00003901      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003906      4531e4         xor r12d, r12d
0x00003909      e902fbffff     jmp 0x3410
0x0000390e      4531d2         xor r10d, r10d
0x00003911      e9b7fbffff     jmp 0x34cd
0x00003916      48c744245000.  mov qword [rsp + 0x50], 0
0x0000391f      c644240e01     mov byte [rsp + 0xe], 1
0x00003924      4531e4         xor r12d, r12d
0x00003927      c644247c00     mov byte [rsp + 0x7c], 0
0x0000392c      e9dafdffff     jmp 0x370b
0x00003931      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003936      4c89f6         mov rsi, r14
0x00003939      4c89e9         mov rcx, r13
0x0000393c      4889d8         mov rax, rbx
0x0000393f      4889df         mov rdi, rbx
0x00003942      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003948      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000394d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003955      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003958      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000395e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003966      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000396b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003970      7326           jae 0x3998
0x00003972      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003975      7510           jne 0x3987
0x00003977      eb1f           jmp 0x3998
0x00003979      0f1f80000000.  nop dword [rax]
0x00003980      41803c0100     cmp byte [r9 + rax], 0
0x00003985      740e           je 0x3995
0x00003987      4883c001       add rax, 1
0x0000398b      488d540500     lea rdx, [rbp + rax]
0x00003990      4939d3         cmp r11, rdx
0x00003993      77eb           ja 0x3980
0x00003995      4889c7         mov rdi, rax
0x00003998      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000399d      4531e4         xor r12d, r12d
0x000039a0      e961faffff     jmp 0x3406
0x000039a5      4889df         mov rdi, rbx
0x000039a8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000039ae      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000039b3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000039b9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000039c1      4531e4         xor r12d, r12d
0x000039c4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000039c9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000039ce      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000039d3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000039d8      e929faffff     jmp 0x3406
0x000039dd      488b542468     mov rdx, qword [rsp + 0x68]
0x000039e2      0fb602         movzx eax, byte [rdx]
0x000039e5      84c0           test al, al
0x000039e7      0f842ffeffff   je 0x381c
0x000039ed      0f1f00         nop dword [rax]
0x000039f0      4d39fd         cmp r13, r15
0x000039f3      7604           jbe 0x39f9
0x000039f5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000039f9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000039fd      420fb6043a     movzx eax, byte [rdx + r15]
0x00003a02      84c0           test al, al
0x00003a04      75ea           jne 0x39f0
0x00003a06      e911feffff     jmp 0x381c
0x00003a0b      89d0           mov eax, edx
0x00003a0d      e955f5ffff     jmp 0x2f67
0x00003a12      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003a16      80fb3e         cmp bl, 0x3e
0x00003a19      0f8771f8ffff   ja 0x3290
0x00003a1f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003a29      480fa3d8       bt rax, rbx
0x00003a2d      0f835df8ffff   jae 0x3290
0x00003a33      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a38      0f85e4010000   jne 0x3c22                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003a3e      4d39fd         cmp r13, r15
0x00003a41      7605           jbe 0x3a48
0x00003a43      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003a48      498d4701       lea rax, [r15 + 1]
0x00003a4c      4939c5         cmp r13, rax
0x00003a4f      7606           jbe 0x3a57
0x00003a51      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003a57      498d4702       lea rax, [r15 + 2]
0x00003a5b      4939c5         cmp r13, rax
0x00003a5e      7606           jbe 0x3a66
0x00003a60      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003a66      498d4703       lea rax, [r15 + 3]
0x00003a6a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003a6d      7606           jbe 0x3a75
0x00003a6f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003a75      4983c704       add r15, 4
0x00003a79      31d2           xor edx, edx
0x00003a7b      4531e4         xor r12d, r12d
0x00003a7e      31c0           xor eax, eax
0x00003a80      4889cd         mov rbp, rcx
0x00003a83      e9c0f1ffff     jmp 0x2c48
0x00003a88      85db           test ebx, ebx
0x00003a8a      0f8488010000   je 0x3c18
0x00003a90      488d05561c00.  lea rax, [0x000056ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0"
0x00003a97      c644240e01     mov byte [rsp + 0xe], 1
0x00003a9c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003aa1      4531e4         xor r12d, r12d
0x00003aa4      48c744245000.  mov qword [rsp + 0x50], 0
0x00003aad      c644240f01     mov byte [rsp + 0xf], 1
0x00003ab2      c644240d00     mov byte [rsp + 0xd], 0
0x00003ab7      48c744241801.  mov qword [rsp + 0x18], 1
0x00003ac0      4531ff         xor r15d, r15d
0x00003ac3      4889442448     mov qword [rsp + 0x48], rax
0x00003ac8      e926f0ffff     jmp 0x2af3
0x00003acd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003ad0      4c89dd         mov rbp, r11
0x00003ad3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003ad8      e9ccfaffff     jmp 0x35a9
0x00003add      488d05071c00.  lea rax, str.l______l                   ; 0x56eb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u1a00\uffe1\u73ff\uffd3\u48ff\uffe3\u54ff\uffe1\u44ff\uffdf\ua0ff\uffdf\uf5ff\uffdf\u3aff\uffe0\u74ff\uffe0\u74ff\uffe0\u74ff\uffe0\uc4ff\uffd6\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\u04ff\uffd7\u0cff\uffd6\uccff\uffd5\u94ff\uffd7\u84ff\uffd7\u74ff\uffd7\u64ff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\uacff\uffd7\u54ff\uffd7\u44ff\uffd7\u44ff\uffd7\u14ff\uffd7\u44ff\uffd7\uecff\uffd6\u44ff\uffd7\ua7ff\uffd5\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\u44ff\uffd7\u77ff\uffd5\uacff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\u44ff\uffd7\u1cff\uffd6\uecff\uffd6\u44ff\uffd7\uecff\uffd6\u44ff\uffd7\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\uecff\uffd6\ua7ff\uffd4\u44ff\uffd7\ua7ff\uffd4\u14ff\uffd7\u98ff\uffd6\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\u88ff\uffd6\U010003d7\uc0ff\uffd7\u70ff\uffd6\ub0ff\uffd7\u58ff\uffd6\u98ff\uffd7\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\ua8ff\uffd5\u80ff\uffd7\u68ff\uffd7\u68ff\uffd7\u50ff\uffd7\u68ff\uffd7\u38ff\uffd7\u68ff\uffd7\ua8ff\uffd3\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u68ff\uffd7\u78ff\uffd3\ua8ff\uffd5\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u68ff\uffd7\u38ff\uffd6\u38ff\uffd7\u68ff\uffd7\u38ff\uffd7\u68ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\u38ff\uffd7\ua8ff\uffd2\u68ff\uffd7\ua8ff\uffd2\u50ff\uffd7\xff"
0x00003ae4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003ae9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003aee      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003af1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003afa      c644240f01     mov byte [rsp + 0xf], 1
0x00003aff      c644240d01     mov byte [rsp + 0xd], 1
0x00003b04      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b0d      4531ff         xor r15d, r15d
0x00003b10      4889442448     mov qword [rsp + 0x48], rax
0x00003b15      e9d9efffff     jmp 0x2af3
0x00003b1a      89d0           mov eax, edx
0x00003b1c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003b21      4885db         test rbx, rbx
0x00003b24      742c           je 0x3b52
0x00003b26      84c0           test al, al
0x00003b28      7428           je 0x3b52
0x00003b2a      0fb60b         movzx ecx, byte [rbx]
0x00003b2d      4889d8         mov rax, rbx
0x00003b30      84c9           test cl, cl
0x00003b32      741e           je 0x3b52
0x00003b34      4c89fa         mov rdx, r15
0x00003b37      4c29f8         sub rax, r15
0x00003b3a      4939d5         cmp r13, rdx
0x00003b3d      7604           jbe 0x3b43
0x00003b3f      41880c16       mov byte [r14 + rdx], cl
0x00003b43      4883c201       add rdx, 1
0x00003b47      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003b4b      84c9           test cl, cl
0x00003b4d      75eb           jne 0x3b3a
0x00003b4f      4989d7         mov r15, rdx
0x00003b52      4d39fd         cmp r13, r15
0x00003b55      0f869efaffff   jbe 0x35f9
0x00003b5b      43c6043e00     mov byte [r14 + r15], 0
0x00003b60      e994faffff     jmp 0x35f9
0x00003b65      837c240802     cmp dword [rsp + 8], 2
0x00003b6a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003b6f      4c89dd         mov rbp, r11
0x00003b72      0f94c0         sete al
0x00003b75      885c240d       mov byte [rsp + 0xd], bl
0x00003b79      e92bfaffff     jmp 0x35a9
0x00003b7e      8b742408       mov esi, dword [rsp + 8]
0x00003b82      4889cf         mov rdi, rcx
0x00003b85      e8a6edffff     call sym.gettext_quote.part.1
0x00003b8a      4889442468     mov qword [rsp + 0x68], rax
0x00003b8f      e952fcffff     jmp 0x37e6
0x00003b94      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003b98      4889cf         mov rdi, rcx
0x00003b9b      e890edffff     call sym.gettext_quote.part.1
0x00003ba0      4889442460     mov qword [rsp + 0x60], rax
0x00003ba5      e967fcffff     jmp 0x3811
0x00003baa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003baf      4c89dd         mov rbp, r11
0x00003bb2      89d0           mov eax, edx
0x00003bb4      885c240d       mov byte [rsp + 0xd], bl
0x00003bb8      e9ecf9ffff     jmp 0x35a9
0x00003bbd      4883ec08       sub rsp, 8
0x00003bc1      41b805000000   mov r8d, 5
0x00003bc7      4c89d9         mov rcx, r11
0x00003bca      ff742468       push qword [rsp + 0x68]
0x00003bce      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003bd2      4c89f7         mov rdi, r14
0x00003bd5      ff742438       push qword [rsp + 0x38]
0x00003bd9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003be1      488b542430     mov rdx, qword [rsp + 0x30]
0x00003be6      488b742470     mov rsi, qword [rsp + 0x70]
0x00003beb      e830eeffff     call sym.quotearg_buffer_restyled
0x00003bf0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003bf4      4989c7         mov r15, rax
0x00003bf7      e9fdf9ffff     jmp 0x35f9
0x00003bfc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003c01      e916ffffff     jmp 0x3b1c
0x00003c06      c74424080200.  mov dword [rsp + 8], 2
0x00003c0e      e996f9ffff     jmp 0x35a9
0x00003c13      e868d8ffff     call sym.imp.__stack_chk_fail
0x00003c18      c644240d00     mov byte [rsp + 0xd], 0
0x00003c1d      e96ffaffff     jmp 0x3691
0x00003c22      4c89dd         mov rbp, r11
0x00003c25      e996f9ffff     jmp 0x35c0
0x00003c2a      c644240e01     mov byte [rsp + 0xe], 1
0x00003c2f      31c0           xor eax, eax
0x00003c31      4531e4         xor r12d, r12d
0x00003c34      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c3d      e9a2f5ffff     jmp 0x31e4
0x00003c42      4c89ea         mov rdx, r13
0x00003c45      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003c4a      e9f3f5ffff     jmp 0x3242
0x00003c4f      e86cd7ffff     call sym.imp.abort
0x00003c54      6690           nop
0x00003c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003c60      4157           push r15
0x00003c62      4156           push r14
0x00003c64      4c63ff         movsxd r15, edi
0x00003c67      4155           push r13
0x00003c69      4154           push r12
0x00003c6b      4989d6         mov r14, rdx
0x00003c6e      55             push rbp
0x00003c6f      53             push rbx
0x00003c70      4889cd         mov rbp, rcx
0x00003c73      4883ec28       sub rsp, 0x28
0x00003c77      4889742408     mov qword [rsp + 8], rsi
0x00003c7c      e84fd7ffff     call sym.imp.__errno_location
0x00003c81      4989c5         mov r13, rax
0x00003c84      8b00           mov eax, dword [rax]
0x00003c86      4585ff         test r15d, r15d
0x00003c89      488b1df04320.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208080:8]=0x208090 obj.slotvec0
0x00003c90      89442418       mov dword [rsp + 0x18], eax
0x00003c94      0f8867010000   js 0x3e01
0x00003c9a      44393dd74320.  cmp dword [obj.nslots], r15d            ; [0x208078:4]=1
0x00003ca1      7f62           jg 0x3d05
0x00003ca3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003caa      0f8456010000   je 0x3e06
0x00003cb0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003cb4      488d05d54320.  lea rax, obj.slotvec0                   ; 0x208090
0x00003cbb      4963f4         movsxd rsi, r12d
0x00003cbe      48c1e604       shl rsi, 4
0x00003cc2      4839c3         cmp rbx, rax
0x00003cc5      0f8415010000   je 0x3de0
0x00003ccb      4889df         mov rdi, rbx
0x00003cce      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003cd3      4889c3         mov rbx, rax
0x00003cd6      488905a34320.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x00003cdd      48633d944320.  movsxd rdi, dword [obj.nslots]          ; [0x208078:4]=1
0x00003ce4      4489e2         mov edx, r12d
0x00003ce7      31f6           xor esi, esi
0x00003ce9      29fa           sub edx, edi
0x00003ceb      48c1e704       shl rdi, 4
0x00003cef      4863d2         movsxd rdx, edx
0x00003cf2      4801df         add rdi, rbx
0x00003cf5      48c1e204       shl rdx, 4
0x00003cf9      e8e2d7ffff     call sym.imp.memset
0x00003cfe      448925734320.  mov dword [obj.nslots], r12d            ; [0x208078:4]=1
0x00003d05      8b4504         mov eax, dword [rbp + 4]
0x00003d08      49c1e704       shl r15, 4
0x00003d0c      4883ec08       sub rsp, 8
0x00003d10      4c01fb         add rbx, r15
0x00003d13      4c8d7d08       lea r15, [rbp + 8]
0x00003d17      448b4500       mov r8d, dword [rbp]
0x00003d1b      4c8b1b         mov r11, qword [rbx]
0x00003d1e      4c8b6308       mov r12, qword [rbx + 8]
0x00003d22      4c89f1         mov rcx, r14
0x00003d25      83c801         or eax, 1
0x00003d28      89442424       mov dword [rsp + 0x24], eax
0x00003d2c      ff7530         push qword [rbp + 0x30]
0x00003d2f      4189c1         mov r9d, eax
0x00003d32      ff7528         push qword [rbp + 0x28]
0x00003d35      4157           push r15
0x00003d37      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003d3a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003d3f      4c89e7         mov rdi, r12
0x00003d42      4c895c2430     mov qword [rsp + 0x30], r11
0x00003d47      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003d4c      4883c420       add rsp, 0x20
0x00003d50      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003d55      4939c3         cmp r11, rax
0x00003d58      7767           ja 0x3dc1
0x00003d5a      488d7001       lea rsi, [rax + 1]
0x00003d5e      488d05bb4320.  lea rax, obj.slot0                      ; 0x208120
0x00003d65      4939c4         cmp r12, rax
0x00003d68      488933         mov qword [rbx], rsi
0x00003d6b      7412           je 0x3d7f
0x00003d6d      4c89e7         mov rdi, r12
0x00003d70      4889742410     mov qword [rsp + 0x10], rsi
0x00003d75      e836d6ffff     call sym.imp.free
0x00003d7a      488b742410     mov rsi, qword [rsp + 0x10]
0x00003d7f      4889f7         mov rdi, rsi
0x00003d82      4889742410     mov qword [rsp + 0x10], rsi
0x00003d87      e8540e0000     call sym.xmalloc
0x00003d8c      4883ec08       sub rsp, 8
0x00003d90      48894308       mov qword [rbx + 8], rax
0x00003d94      448b4500       mov r8d, dword [rbp]
0x00003d98      ff7530         push qword [rbp + 0x30]
0x00003d9b      ff7528         push qword [rbp + 0x28]
0x00003d9e      4c89f1         mov rcx, r14
0x00003da1      4157           push r15
0x00003da3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003da8      4889c7         mov rdi, rax
0x00003dab      488b542428     mov rdx, qword [rsp + 0x28]
0x00003db0      488b742430     mov rsi, qword [rsp + 0x30]
0x00003db5      4989c4         mov r12, rax
0x00003db8      e863ecffff     call sym.quotearg_buffer_restyled
0x00003dbd      4883c420       add rsp, 0x20
0x00003dc1      8b442418       mov eax, dword [rsp + 0x18]
0x00003dc5      41894500       mov dword [r13], eax
0x00003dc9      4883c428       add rsp, 0x28
0x00003dcd      4c89e0         mov rax, r12
0x00003dd0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003dd1      5d             pop rbp
0x00003dd2      415c           pop r12
0x00003dd4      415d           pop r13
0x00003dd6      415e           pop r14
0x00003dd8      415f           pop r15
0x00003dda      c3             ret
0x00003ddb      0f1f440000     nop dword [rax + rax]
0x00003de0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003de2      e8590e0000     call sym.xrealloc
0x00003de7      660f6f05a142.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00003def      4889c3         mov rbx, rax
0x00003df2      488905874220.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x00003df9      0f1100         movups xmmword [rax], xmm0
0x00003dfc      e9dcfeffff     jmp 0x3cdd
0x00003e01      e8bad5ffff     call sym.imp.abort
0x00003e06      e825100000     call sym.xalloc_die
0x00003e0b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003e10      4154           push r12
0x00003e12      55             push rbp
0x00003e13      53             push rbx
0x00003e14      4889fb         mov rbx, rdi
0x00003e17      e8b4d5ffff     call sym.imp.__errno_location
0x00003e1c      448b20         mov r12d, dword [rax]
0x00003e1f      4889c5         mov rbp, rax
0x00003e22      488d05f74320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003e29      4885db         test rbx, rbx
0x00003e2c      be38000000     mov esi, 0x38                           ; '8'
0x00003e31      480f44d8       cmove rbx, rax
0x00003e35      4889df         mov rdi, rbx
0x00003e38      e8a30f0000     call sym.xmemdup
0x00003e3d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003e41      5b             pop rbx
0x00003e42      5d             pop rbp
0x00003e43      415c           pop r12
0x00003e45      c3             ret
0x00003e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003e50      488d05c94320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003e57      4885ff         test rdi, rdi
0x00003e5a      480f44f8       cmove rdi, rax
0x00003e5e      8b07           mov eax, dword [rdi]
0x00003e60      c3             ret
0x00003e61      0f1f440000     nop dword [rax + rax]
0x00003e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00003e70      488d05a94320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003e77      4885ff         test rdi, rdi
0x00003e7a      480f44f8       cmove rdi, rax
0x00003e7e      8937           mov dword [rdi], esi
0x00003e80      c3             ret
0x00003e81      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00003e90      488d05894320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003e97      4885ff         test rdi, rdi
0x00003e9a      89f1           mov ecx, esi
0x00003e9c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00003ea0      89f0           mov eax, esi
0x00003ea2      83e11f         and ecx, 0x1f
0x00003ea5      c0e805         shr al, 5
0x00003ea8      0fb6c0         movzx eax, al
0x00003eab      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00003eb0      8b37           mov esi, dword [rdi]
0x00003eb2      89f0           mov eax, esi
0x00003eb4      d3e8           shr eax, cl
0x00003eb6      31c2           xor edx, eax
0x00003eb8      83e001         and eax, 1
0x00003ebb      83e201         and edx, 1
0x00003ebe      d3e2           shl edx, cl
0x00003ec0      31f2           xor edx, esi
0x00003ec2      8917           mov dword [rdi], edx
0x00003ec4      c3             ret
0x00003ec5      90             nop
0x00003ec6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003ed0      488d05494320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003ed7      4885ff         test rdi, rdi
0x00003eda      480f44f8       cmove rdi, rax
0x00003ede      8b4704         mov eax, dword [rdi + 4]
0x00003ee1      897704         mov dword [rdi + 4], esi
0x00003ee4      c3             ret
0x00003ee5      90             nop
0x00003ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003ef0      488d05294320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003ef7      4885ff         test rdi, rdi
0x00003efa      480f44f8       cmove rdi, rax
0x00003efe      4885f6         test rsi, rsi
0x00003f01      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003f07      740e           je 0x3f17
0x00003f09      4885d2         test rdx, rdx
0x00003f0c      7409           je 0x3f17
0x00003f0e      48897728       mov qword [rdi + 0x28], rsi
0x00003f12      48895730       mov qword [rdi + 0x30], rdx
0x00003f16      c3             ret
0x00003f17      4883ec08       sub rsp, 8
0x00003f1b      e8a0d4ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003f20      4157           push r15
0x00003f22      4156           push r14
0x00003f24      488d05f54220.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003f2b      4155           push r13
0x00003f2d      4154           push r12
0x00003f2f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003f32      55             push rbp
0x00003f33      53             push rbx
0x00003f34      4c89c3         mov rbx, r8
0x00003f37      4989f6         mov r14, rsi
0x00003f3a      4989d7         mov r15, rdx
0x00003f3d      4883ec18       sub rsp, 0x18
0x00003f41      4d85c0         test r8, r8
0x00003f44      480f44d8       cmove rbx, rax
0x00003f48      48894c2408     mov qword [rsp + 8], rcx
0x00003f4d      e87ed4ffff     call sym.imp.__errno_location
0x00003f52      448b20         mov r12d, dword [rax]
0x00003f55      4889c5         mov rbp, rax
0x00003f58      488d4308       lea rax, [rbx + 8]
0x00003f5c      4883ec08       sub rsp, 8
0x00003f60      448b4b04       mov r9d, dword [rbx + 4]
0x00003f64      ff7330         push qword [rbx + 0x30]
0x00003f67      448b03         mov r8d, dword [rbx]
0x00003f6a      ff7328         push qword [rbx + 0x28]
0x00003f6d      4c89fa         mov rdx, r15
0x00003f70      50             push rax
0x00003f71      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003f76      4c89f6         mov rsi, r14
0x00003f79      4c89ef         mov rdi, r13
0x00003f7c      e89feaffff     call sym.quotearg_buffer_restyled
0x00003f81      44896500       mov dword [rbp], r12d
0x00003f85      4883c438       add rsp, 0x38
0x00003f89      5b             pop rbx
0x00003f8a      5d             pop rbp
0x00003f8b      415c           pop r12
0x00003f8d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003f8f      415e           pop r14
0x00003f91      415f           pop r15
0x00003f93      c3             ret
0x00003f94      6690           nop
0x00003f96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00003fa0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00003fa2      4156           push r14
0x00003fa4      488d05754220.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003fab      4155           push r13
0x00003fad      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00003faf      4989d4         mov r12, rdx
0x00003fb2      55             push rbp
0x00003fb3      53             push rbx
0x00003fb4      4889cb         mov rbx, rcx
0x00003fb7      4989fe         mov r14, rdi
0x00003fba      4989f7         mov r15, rsi
0x00003fbd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00003fc1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00003fc4      480f44d8       cmove rbx, rax
0x00003fc8      31ed           xor ebp, ebp
0x00003fca      e801d4ffff     call sym.imp.__errno_location
0x00003fcf      4d85e4         test r12, r12
0x00003fd2      4989c5         mov r13, rax
0x00003fd5      8b00           mov eax, dword [rax]
0x00003fd7      400f94c5       sete bpl
0x00003fdb      0b6b04         or ebp, dword [rbx + 4]
0x00003fde      4c8d5308       lea r10, [rbx + 8]
0x00003fe2      4883ec08       sub rsp, 8
0x00003fe6      448b03         mov r8d, dword [rbx]
0x00003fe9      4c89f9         mov rcx, r15
0x00003fec      89442414       mov dword [rsp + 0x14], eax
0x00003ff0      ff7330         push qword [rbx + 0x30]
0x00003ff3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003ff6      ff7328         push qword [rbx + 0x28]
0x00003ff9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00003ffb      31f6           xor esi, esi
0x00003ffd      4189e9         mov r9d, ebp
0x00004000      31ff           xor edi, edi
0x00004002      4c89542440     mov qword [rsp + 0x40], r10
0x00004007      e814eaffff     call sym.quotearg_buffer_restyled
0x0000400c      488d7001       lea rsi, [rax + 1]
0x00004010      4889442448     mov qword [rsp + 0x48], rax
0x00004015      4883c420       add rsp, 0x20
0x00004019      4889f7         mov rdi, rsi
0x0000401c      4889742418     mov qword [rsp + 0x18], rsi
0x00004021      e8ba0b0000     call sym.xmalloc
0x00004026      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000402b      4883ec08       sub rsp, 8
0x0000402f      ff7330         push qword [rbx + 0x30]
0x00004032      ff7328         push qword [rbx + 0x28]
0x00004035      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000403a      4189e9         mov r9d, ebp
0x0000403d      448b03         mov r8d, dword [rbx]
0x00004040      4c89f9         mov rcx, r15
0x00004043      4c89f2         mov rdx, r14
0x00004046      4889c7         mov rdi, rax
0x00004049      4152           push r10
0x0000404b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004050      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004055      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004059      4883c420       add rsp, 0x20
0x0000405d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004060      41894500       mov dword [r13], eax
0x00004064      7409           je 0x406f
0x00004066      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000406b      4d891c24       mov qword [r12], r11
0x0000406f      488b442410     mov rax, qword [rsp + 0x10]
0x00004074      4883c438       add rsp, 0x38
0x00004078      5b             pop rbx
0x00004079      5d             pop rbp
0x0000407a      415c           pop r12
0x0000407c      415d           pop r13
0x0000407e      415e           pop r14
0x00004080      415f           pop r15
0x00004082      c3             ret
0x00004083      0f1f00         nop dword [rax]
0x00004086      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004090      4889d1         mov rcx, rdx
0x00004093      31d2           xor edx, edx
0x00004095      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000409a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000040a0      8b05d23f2000   mov eax, dword [obj.nslots]             ; [0x208078:4]=1
0x000040a6      4154           push r12
0x000040a8      4c8b25d13f20.  mov r12, qword [obj.slotvec]            ; [0x208080:8]=0x208090 obj.slotvec0
0x000040af      55             push rbp
0x000040b0      53             push rbx
0x000040b1      83f801         cmp eax, 1
0x000040b4      7e2b           jle 0x40e1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000040b6      83e802         sub eax, 2
0x000040b9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000040be      48c1e004       shl rax, 4
0x000040c2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000040c7      660f1f840000.  nop word [rax + rax]
0x000040d0      488b3b         mov rdi, qword [rbx]
0x000040d3      4883c310       add rbx, 0x10
0x000040d7      e8d4d2ffff     call sym.imp.free
0x000040dc      4839eb         cmp rbx, rbp
0x000040df      75ef           jne 0x40d0
0x000040e1      498b7c2408     mov rdi, qword [r12 + 8]
0x000040e6      488d1d334020.  lea rbx, obj.slot0                      ; 0x208120
0x000040ed      4839df         cmp rdi, rbx
0x000040f0      7417           je 0x4109
0x000040f2      e8b9d2ffff     call sym.imp.free
0x000040f7      48c7058e3f20.  mov qword [obj.slotvec0], 0x100         ; [0x208090:8]=256
0x00004102      48891d8f3f20.  mov qword [0x00208098], rbx             ; [0x208098:8]=0x208120 obj.slot0
0x00004109      488d1d803f20.  lea rbx, obj.slotvec0                   ; 0x208090
0x00004110      4939dc         cmp r12, rbx
0x00004113      740f           je 0x4124
0x00004115      4c89e7         mov rdi, r12
0x00004118      e893d2ffff     call sym.imp.free
0x0000411d      48891d5c3f20.  mov qword [obj.slotvec], rbx            ; [0x208080:8]=0x208090 obj.slotvec0
0x00004124      5b             pop rbx
0x00004125      c705493f2000.  mov dword [obj.nslots], 1               ; [0x208078:4]=1
0x0000412f      5d             pop rbp
0x00004130      415c           pop r12
0x00004132      c3             ret
0x00004133      0f1f00         nop dword [rax]
0x00004136      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004140      488d0dd94020.  lea rcx, obj.default_quoting_options    ; 0x208220
0x00004147      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000414e      e90dfbffff     jmp sym.quotearg_n_options
0x00004153      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004156      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004160      488d0db94020.  lea rcx, obj.default_quoting_options    ; 0x208220
0x00004167      e9f4faffff     jmp sym.quotearg_n_options
0x0000416c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004170      488d0da94020.  lea rcx, obj.default_quoting_options    ; 0x208220
0x00004177      4889fe         mov rsi, rdi
0x0000417a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004181      31ff           xor edi, edi
0x00004183      e9d8faffff     jmp sym.quotearg_n_options
0x00004188      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004190      488d0d894020.  lea rcx, obj.default_quoting_options    ; 0x208220
0x00004197      4889f2         mov rdx, rsi
0x0000419a      4889fe         mov rsi, rdi
0x0000419d      31ff           xor edi, edi
0x0000419f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000041a4      6690           nop
0x000041a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000041b0      4883ec48       sub rsp, 0x48
0x000041b4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000041b7      64488b142528.  mov rdx, qword fs:[0x28]
0x000041c0      4889542438     mov qword [rsp + 0x38], rdx
0x000041c5      31d2           xor edx, edx
0x000041c7      83fe0a         cmp esi, 0xa
0x000041ca      7468           je 0x4234
0x000041cc      893424         mov dword [rsp], esi
0x000041cf      4889e1         mov rcx, rsp
0x000041d2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000041d9      4889c6         mov rsi, rax
0x000041dc      48c744240400.  mov qword [rsp + 4], 0
0x000041e5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000041ee      48c744241400.  mov qword [rsp + 0x14], 0
0x000041f7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004200      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004209      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004212      c74424340000.  mov dword [rsp + 0x34], 0
0x0000421a      e841faffff     call sym.quotearg_n_options
0x0000421f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004224      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000422d      750a           jne 0x4239                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000422f      4883c448       add rsp, 0x48
0x00004233      c3             ret
0x00004234      e887d1ffff     call sym.imp.abort
0x00004239      e842d2ffff     call sym.imp.__stack_chk_fail
0x0000423e      6690           nop
;-- quotearg_n_style_mem:
0x00004240      4883ec48       sub rsp, 0x48
0x00004244      4889d0         mov rax, rdx
0x00004247      4889ca         mov rdx, rcx
0x0000424a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004253      48894c2438     mov qword [rsp + 0x38], rcx
0x00004258      31c9           xor ecx, ecx
0x0000425a      83fe0a         cmp esi, 0xa
0x0000425d      7461           je 0x42c0
0x0000425f      893424         mov dword [rsp], esi
0x00004262      4889e1         mov rcx, rsp
0x00004265      4889c6         mov rsi, rax
0x00004268      48c744240400.  mov qword [rsp + 4], 0
0x00004271      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000427a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004283      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000428c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004295      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000429e      c74424340000.  mov dword [rsp + 0x34], 0
0x000042a6      e8b5f9ffff     call sym.quotearg_n_options
0x000042ab      488b542438     mov rdx, qword [rsp + 0x38]
0x000042b0      644833142528.  xor rdx, qword fs:[0x28]
0x000042b9      750a           jne 0x42c5
0x000042bb      4883c448       add rsp, 0x48
0x000042bf      c3             ret
0x000042c0      e8fbd0ffff     call sym.imp.abort
0x000042c5      e8b6d1ffff     call sym.imp.__stack_chk_fail
0x000042ca      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000042d0      4889f2         mov rdx, rsi
0x000042d3      89fe           mov esi, edi
0x000042d5      31ff           xor edi, edi
0x000042d7      e9d4feffff     jmp sym.quotearg_n_style
0x000042dc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000042e0      4889d1         mov rcx, rdx
0x000042e3      4889f2         mov rdx, rsi
0x000042e6      89fe           mov esi, edi
0x000042e8      31ff           xor edi, edi
0x000042ea      e951ffffff     jmp sym.quotearg_n_style_mem
0x000042ef      90             nop
;-- quotearg_char_mem:
0x000042f0      4883ec48       sub rsp, 0x48
0x000042f4      89d1           mov ecx, edx
0x000042f6      64488b042528.  mov rax, qword fs:[0x28]
0x000042ff      4889442438     mov qword [rsp + 0x38], rax
0x00004304      31c0           xor eax, eax
0x00004306      488b05433f20.  mov rax, qword [0x00208250]             ; [0x208250:8]=0
0x0000430d      4989e0         mov r8, rsp
0x00004310      83e11f         and ecx, 0x1f
0x00004313      660f6f05053f.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000431b      4889442430     mov qword [rsp + 0x30], rax
0x00004320      89d0           mov eax, edx
0x00004322      0f290424       movaps xmmword [rsp], xmm0
0x00004326      c0e805         shr al, 5
0x00004329      0fb6c0         movzx eax, al
0x0000432c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004331      660f6f05f73e.  movdqa xmm0, xmmword [0x00208230]
0x00004339      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000433e      660f6f05fa3e.  movdqa xmm0, xmmword [0x00208240]
0x00004346      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000434b      418b11         mov edx, dword [r9]
0x0000434e      89d0           mov eax, edx
0x00004350      d3e8           shr eax, cl
0x00004352      f7d0           not eax
0x00004354      83e001         and eax, 1
0x00004357      d3e0           shl eax, cl
0x00004359      4c89c1         mov rcx, r8
0x0000435c      31d0           xor eax, edx
0x0000435e      4889f2         mov rdx, rsi
0x00004361      4889fe         mov rsi, rdi
0x00004364      418901         mov dword [r9], eax
0x00004367      31ff           xor edi, edi
0x00004369      e8f2f8ffff     call sym.quotearg_n_options
0x0000436e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004373      644833342528.  xor rsi, qword fs:[0x28]
0x0000437c      7505           jne 0x4383
0x0000437e      4883c448       add rsp, 0x48
0x00004382      c3             ret
0x00004383      e8f8d0ffff     call sym.imp.__stack_chk_fail
0x00004388      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004390      400fbed6       movsx edx, sil
0x00004394      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000439b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000043a0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000043a5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000043ac      e93fffffff     jmp sym.quotearg_char_mem
0x000043b1      0f1f440000     nop dword [rax + rax]
0x000043b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000043c0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000043c5      e926ffffff     jmp sym.quotearg_char_mem
0x000043ca      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000043d0      4883ec48       sub rsp, 0x48
0x000043d4      4889d0         mov rax, rdx
0x000043d7      64488b142528.  mov rdx, qword fs:[0x28]
0x000043e0      4889542438     mov qword [rsp + 0x38], rdx
0x000043e5      31d2           xor edx, edx
0x000043e7      83fe0a         cmp esi, 0xa
0x000043ea      7468           je 0x4454
0x000043ec      893424         mov dword [rsp], esi
0x000043ef      4889e1         mov rcx, rsp
0x000043f2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043f9      4889c6         mov rsi, rax
0x000043fc      48c744240400.  mov qword [rsp + 4], 0
0x00004405      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000440e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004417      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004420      48c744242400.  mov qword [rsp + 0x24], 0
0x00004429      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004432      c74424340000.  mov dword [rsp + 0x34], 0
0x0000443a      e821f8ffff     call sym.quotearg_n_options
0x0000443f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004444      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000444d      750a           jne 0x4459
0x0000444f      4883c448       add rsp, 0x48
0x00004453      c3             ret
0x00004454      e867cfffff     call sym.imp.abort
0x00004459      e822d0ffff     call sym.imp.__stack_chk_fail
0x0000445e      6690           nop
;-- quotearg_n_custom_mem:
0x00004460      4883ec48       sub rsp, 0x48
0x00004464      4989c9         mov r9, rcx
0x00004467      488b0de23d20.  mov rcx, qword [0x00208250]             ; [0x208250:8]=0
0x0000446e      660f6f05aa3d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004476      64488b042528.  mov rax, qword fs:[0x28]
0x0000447f      4889442438     mov qword [rsp + 0x38], rax
0x00004484      31c0           xor eax, eax
0x00004486      0f290424       movaps xmmword [rsp], xmm0
0x0000448a      4885f6         test rsi, rsi
0x0000448d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004492      c704240a0000.  mov dword [rsp], 0xa
0x00004499      660f6f058f3d.  movdqa xmm0, xmmword [0x00208230]
0x000044a1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000044a6      660f6f05923d.  movdqa xmm0, xmmword [0x00208240]
0x000044ae      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000044b3      7432           je 0x44e7
0x000044b5      4885d2         test rdx, rdx
0x000044b8      742d           je 0x44e7
0x000044ba      4889742428     mov qword [rsp + 0x28], rsi
0x000044bf      4889542430     mov qword [rsp + 0x30], rdx
0x000044c4      4889e1         mov rcx, rsp
0x000044c7      4c89c2         mov rdx, r8
0x000044ca      4c89ce         mov rsi, r9
0x000044cd      e88ef7ffff     call sym.quotearg_n_options
0x000044d2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000044d7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000044e0      750a           jne 0x44ec
0x000044e2      4883c448       add rsp, 0x48
0x000044e6      c3             ret
0x000044e7      e8d4ceffff     call sym.imp.abort
0x000044ec      e88fcfffff     call sym.imp.__stack_chk_fail
0x000044f1      0f1f440000     nop dword [rax + rax]
0x000044f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004500      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004507      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000450c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004510      4889d1         mov rcx, rdx
0x00004513      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000451a      4889f2         mov rdx, rsi
0x0000451d      4889fe         mov rsi, rdi
0x00004520      31ff           xor edi, edi
0x00004522      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004527      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004530      4989c8         mov r8, rcx
0x00004533      4889d1         mov rcx, rdx
0x00004536      4889f2         mov rdx, rsi
0x00004539      4889fe         mov rsi, rdi
0x0000453c      31ff           xor edi, edi
0x0000453e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004543      0f1f00         nop dword [rax]
0x00004546      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004550      488d0de93a20.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004557      e904f7ffff     jmp sym.quotearg_n_options
0x0000455c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004560      488d0dd93a20.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004567      4889f2         mov rdx, rsi
0x0000456a      4889fe         mov rsi, rdi
0x0000456d      31ff           xor edi, edi
0x0000456f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004574      6690           nop
0x00004576      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004580      488d0db93a20.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004587      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000458e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004593      0f1f00         nop dword [rax]
0x00004596      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000045a0      488d0d993a20.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x000045a7      4889fe         mov rsi, rdi
0x000045aa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000045b1      31ff           xor edi, edi
0x000045b3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000045b8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x000045c0      4157           push r15
0x000045c2      4156           push r14
0x000045c4      4155           push r13
0x000045c6      4154           push r12
0x000045c8      4d89cc         mov r12, r9
0x000045cb      55             push rbp
0x000045cc      53             push rbx
0x000045cd      4889fd         mov rbp, rdi
0x000045d0      4c89c3         mov rbx, r8
0x000045d3      4883ec28       sub rsp, 0x28
0x000045d7      4885f6         test rsi, rsi
0x000045da      0f8418010000   je 0x46f8
0x000045e0      4989d0         mov r8, rdx
0x000045e3      488d15be1500.  lea rdx, [0x00005ba8]                   ; "%s (%s) %s\n"
0x000045ea      4989c9         mov r9, rcx
0x000045ed      31c0           xor eax, eax
0x000045ef      4889f1         mov rcx, rsi
0x000045f2      be01000000     mov esi, 1
0x000045f7      e834d0ffff     call sym.imp.__fprintf_chk
0x000045fc      488d35b81500.  lea rsi, [0x00005bbb]                   ; "(C)"
0x00004603      31ff           xor edi, edi
0x00004605      ba05000000     mov edx, 5
0x0000460a      e841ceffff     call sym.imp.dcgettext
0x0000460f      488d15ca1800.  lea rdx, obj.version_etc_copyright      ; 0x5ee0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004616      4889c1         mov rcx, rax
0x00004619      41b8e3070000   mov r8d, 0x7e3
0x0000461f      be01000000     mov esi, 1
0x00004624      4889ef         mov rdi, rbp
0x00004627      31c0           xor eax, eax
0x00004629      e802d0ffff     call sym.imp.__fprintf_chk
0x0000462e      488d35131600.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x5c48 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004635      31ff           xor edi, edi
0x00004637      ba05000000     mov edx, 5
0x0000463c      e80fceffff     call sym.imp.dcgettext
0x00004641      4889ee         mov rsi, rbp
0x00004644      4889c7         mov rdi, rax
0x00004647      e8c4ceffff     call sym.imp.fputs_unlocked
0x0000464c      4983fc09       cmp r12, 9
0x00004650      0f873a030000   ja 0x4990
0x00004656      488d154b1800.  lea rdx, [0x00005ea8]
0x0000465d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004661      4801d0         add rax, rdx
0x00004664      ffe0           jmp rax
0x00004666      662e0f1f8400.  nop word cs:[rax + rax]
0x00004670      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004674      488b4310       mov rax, qword [rbx + 0x10]
0x00004678      488d35391700.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x5db8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000467f      4c8b4308       mov r8, qword [rbx + 8]
0x00004683      ba05000000     mov edx, 5
0x00004688      31ff           xor edi, edi
0x0000468a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000468e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004692      4c894c2410     mov qword [rsp + 0x10], r9
0x00004697      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000469b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000469f      48890424       mov qword [rsp], rax
0x000046a3      4c89442408     mov qword [rsp + 8], r8
0x000046a8      488b1b         mov rbx, qword [rbx]
0x000046ab      e8a0cdffff     call sym.imp.dcgettext
0x000046b0      4883ec08       sub rsp, 8
0x000046b4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000046b9      4889c2         mov rdx, rax
0x000046bc      4889d9         mov rcx, rbx
0x000046bf      be01000000     mov esi, 1
0x000046c4      4889ef         mov rdi, rbp
0x000046c7      31c0           xor eax, eax
0x000046c9      4151           push r9
0x000046cb      4155           push r13
0x000046cd      4154           push r12
0x000046cf      4157           push r15
0x000046d1      4156           push r14
0x000046d3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000046d8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000046dd      e84ecfffff     call sym.imp.__fprintf_chk
0x000046e2      4883c430       add rsp, 0x30
0x000046e6      4883c428       add rsp, 0x28
0x000046ea      5b             pop rbx
0x000046eb      5d             pop rbp
0x000046ec      415c           pop r12
0x000046ee      415d           pop r13
0x000046f0      415e           pop r14
0x000046f2      415f           pop r15
0x000046f4      c3             ret
0x000046f5      0f1f00         nop dword [rax]
0x000046f8      4989c8         mov r8, rcx
0x000046fb      4889d1         mov rcx, rdx
0x000046fe      488d15af1400.  lea rdx, str.s__s                       ; 0x5bb4 ; "%s %s\n"
0x00004705      be01000000     mov esi, 1
0x0000470a      31c0           xor eax, eax
0x0000470c      e81fcfffff     call sym.imp.__fprintf_chk
0x00004711      e9e6feffff     jmp 0x45fc
0x00004716      662e0f1f8400.  nop word cs:[rax + rax]
0x00004720      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004724      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004728      488d35b91600.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x5de8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000472f      488b4310       mov rax, qword [rbx + 0x10]
0x00004733      4c8b4308       mov r8, qword [rbx + 8]
0x00004737      ba05000000     mov edx, 5
0x0000473c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004740      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004744      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004748      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000474c      488b1b         mov rbx, qword [rbx]
0x0000474f      4c89542418     mov qword [rsp + 0x18], r10
0x00004754      4c894c2410     mov qword [rsp + 0x10], r9
0x00004759      48890424       mov qword [rsp], rax
0x0000475d      4c89442408     mov qword [rsp + 8], r8
0x00004762      31ff           xor edi, edi
0x00004764      e8e7ccffff     call sym.imp.dcgettext
0x00004769      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000476e      4152           push r10
0x00004770      e93fffffff     jmp 0x46b4
0x00004775      0f1f00         nop dword [rax]
0x00004778      488b1b         mov rbx, qword [rbx]
0x0000477b      488d353d1400.  lea rsi, str.Written_by__s.             ; 0x5bbf ; "Written by %s.\n"
0x00004782      ba05000000     mov edx, 5
0x00004787      31ff           xor edi, edi
0x00004789      e8c2ccffff     call sym.imp.dcgettext
0x0000478e      4883c428       add rsp, 0x28
0x00004792      4889d9         mov rcx, rbx
0x00004795      4889ef         mov rdi, rbp
0x00004798      5b             pop rbx
0x00004799      5d             pop rbp
0x0000479a      415c           pop r12
0x0000479c      415d           pop r13
0x0000479e      415e           pop r14
0x000047a0      415f           pop r15
0x000047a2      4889c2         mov rdx, rax
0x000047a5      be01000000     mov esi, 1
0x000047aa      31c0           xor eax, eax
0x000047ac      e97fceffff     jmp sym.imp.__fprintf_chk
0x000047b1      0f1f80000000.  nop dword [rax]
0x000047b8      4c8b6308       mov r12, qword [rbx + 8]
0x000047bc      488d350c1400.  lea rsi, str.Written_by__s_and__s.      ; 0x5bcf ; "Written by %s and %s.\n"
0x000047c3      488b1b         mov rbx, qword [rbx]
0x000047c6      ba05000000     mov edx, 5
0x000047cb      31ff           xor edi, edi
0x000047cd      e87eccffff     call sym.imp.dcgettext
0x000047d2      4883c428       add rsp, 0x28
0x000047d6      4d89e0         mov r8, r12
0x000047d9      4889d9         mov rcx, rbx
0x000047dc      4889ef         mov rdi, rbp
0x000047df      4889c2         mov rdx, rax
0x000047e2      be01000000     mov esi, 1
0x000047e7      5b             pop rbx
0x000047e8      5d             pop rbp
0x000047e9      415c           pop r12
0x000047eb      415d           pop r13
0x000047ed      415e           pop r14
0x000047ef      415f           pop r15
0x000047f1      31c0           xor eax, eax
0x000047f3      e938ceffff     jmp sym.imp.__fprintf_chk
0x000047f8      0f1f84000000.  nop dword [rax + rax]
0x00004800      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004804      4c8b6308       mov r12, qword [rbx + 8]
0x00004808      488d35d71300.  lea rsi, str.Written_by__s___s__and__s. ; 0x5be6 ; "Written by %s, %s, and %s.\n"
0x0000480f      488b1b         mov rbx, qword [rbx]
0x00004812      ba05000000     mov edx, 5
0x00004817      31ff           xor edi, edi
0x00004819      e832ccffff     call sym.imp.dcgettext
0x0000481e      4883c428       add rsp, 0x28
0x00004822      4d89e9         mov r9, r13
0x00004825      4d89e0         mov r8, r12
0x00004828      4889d9         mov rcx, rbx
0x0000482b      4889ef         mov rdi, rbp
0x0000482e      4889c2         mov rdx, rax
0x00004831      5b             pop rbx
0x00004832      5d             pop rbp
0x00004833      415c           pop r12
0x00004835      415d           pop r13
0x00004837      415e           pop r14
0x00004839      415f           pop r15
0x0000483b      be01000000     mov esi, 1
0x00004840      31c0           xor eax, eax
0x00004842      e9e9cdffff     jmp sym.imp.__fprintf_chk
0x00004847      660f1f840000.  nop word [rax + rax]
0x00004850      488d35c11400.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x5d18 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004857      ba05000000     mov edx, 5
0x0000485c      31ff           xor edi, edi
0x0000485e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004862      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004866      4c8b6308       mov r12, qword [rbx + 8]
0x0000486a      488b1b         mov rbx, qword [rbx]
0x0000486d      e8decbffff     call sym.imp.dcgettext
0x00004872      4883ec08       sub rsp, 8
0x00004876      4156           push r14
0x00004878      4889c2         mov rdx, rax
0x0000487b      4d89e9         mov r9, r13
0x0000487e      4d89e0         mov r8, r12
0x00004881      4889d9         mov rcx, rbx
0x00004884      4889ef         mov rdi, rbp
0x00004887      be01000000     mov esi, 1
0x0000488c      31c0           xor eax, eax
0x0000488e      e89dcdffff     call sym.imp.__fprintf_chk
0x00004893      58             pop rax
0x00004894      5a             pop rdx
0x00004895      4883c428       add rsp, 0x28
0x00004899      5b             pop rbx
0x0000489a      5d             pop rbp
0x0000489b      415c           pop r12
0x0000489d      415d           pop r13
0x0000489f      415e           pop r14
0x000048a1      415f           pop r15
0x000048a3      c3             ret
0x000048a4      0f1f4000       nop dword [rax]
0x000048a8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000048ac      488d35851400.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x5d38 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000048b3      ba05000000     mov edx, 5
0x000048b8      31ff           xor edi, edi
0x000048ba      4c8b7318       mov r14, qword [rbx + 0x18]
0x000048be      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000048c2      4c8b6308       mov r12, qword [rbx + 8]
0x000048c6      488b1b         mov rbx, qword [rbx]
0x000048c9      e882cbffff     call sym.imp.dcgettext
0x000048ce      4157           push r15
0x000048d0      eba4           jmp 0x4876
0x000048d2      660f1f440000   nop word [rax + rax]
0x000048d8      4c8b4308       mov r8, qword [rbx + 8]
0x000048dc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000048e0      488d35791400.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x5d60 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000048e7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000048eb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000048ef      ba05000000     mov edx, 5
0x000048f4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000048f8      31ff           xor edi, edi
0x000048fa      488b1b         mov rbx, qword [rbx]
0x000048fd      4c890424       mov qword [rsp], r8
0x00004901      e84acbffff     call sym.imp.dcgettext
0x00004906      4883ec08       sub rsp, 8
0x0000490a      4d89e9         mov r9, r13
0x0000490d      4154           push r12
0x0000490f      4157           push r15
0x00004911      4156           push r14
0x00004913      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004918      4889d9         mov rcx, rbx
0x0000491b      4889c2         mov rdx, rax
0x0000491e      4889ef         mov rdi, rbp
0x00004921      be01000000     mov esi, 1
0x00004926      31c0           xor eax, eax
0x00004928      e803cdffff     call sym.imp.__fprintf_chk
0x0000492d      4883c420       add rsp, 0x20
0x00004931      4883c428       add rsp, 0x28
0x00004935      5b             pop rbx
0x00004936      5d             pop rbp
0x00004937      415c           pop r12
0x00004939      415d           pop r13
0x0000493b      415e           pop r14
0x0000493d      415f           pop r15
0x0000493f      c3             ret
0x00004940      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004944      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004948      488d35391400.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x5d88 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000494f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004953      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004957      ba05000000     mov edx, 5
0x0000495c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004960      4c8b4308       mov r8, qword [rbx + 8]
0x00004964      31ff           xor edi, edi
0x00004966      4c894c2408     mov qword [rsp + 8], r9
0x0000496b      488b1b         mov rbx, qword [rbx]
0x0000496e      4c890424       mov qword [rsp], r8
0x00004972      e8d9caffff     call sym.imp.dcgettext
0x00004977      4155           push r13
0x00004979      4154           push r12
0x0000497b      4157           push r15
0x0000497d      4156           push r14
0x0000497f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004984      eb8d           jmp 0x4913
0x00004986      662e0f1f8400.  nop word cs:[rax + rax]
0x00004990      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004994      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004998      ba05000000     mov edx, 5
0x0000499d      488b4310       mov rax, qword [rbx + 0x10]
0x000049a1      4c8b4308       mov r8, qword [rbx + 8]
0x000049a5      488d35741400.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x5e20 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000049ac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000049b0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000049b4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000049b8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000049bc      4c89542418     mov qword [rsp + 0x18], r10
0x000049c1      4c894c2410     mov qword [rsp + 0x10], r9
0x000049c6      48890424       mov qword [rsp], rax
0x000049ca      4c89442408     mov qword [rsp + 8], r8
0x000049cf      488b1b         mov rbx, qword [rbx]
0x000049d2      e98bfdffff     jmp 0x4762
0x000049d7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000049e0      4531c9         xor r9d, r9d
0x000049e3      49833800       cmp qword [r8], 0
0x000049e7      7412           je 0x49fb
0x000049e9      0f1f80000000.  nop dword [rax]
0x000049f0      4983c101       add r9, 1
0x000049f4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000049f9      75f5           jne 0x49f0
0x000049fb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004a00      4883ec68       sub rsp, 0x68
0x00004a04      4d89c2         mov r10, r8
0x00004a07      4531c9         xor r9d, r9d
0x00004a0a      64488b042528.  mov rax, qword fs:[0x28]
0x00004a13      4889442458     mov qword [rsp + 0x58], rax
0x00004a18      31c0           xor eax, eax
0x00004a1a      4989e0         mov r8, rsp
0x00004a1d      0f1f00         nop dword [rax]
0x00004a20      418b02         mov eax, dword [r10]
0x00004a23      83f82f         cmp eax, 0x2f
0x00004a26      7742           ja 0x4a6a
0x00004a28      4189c3         mov r11d, eax
0x00004a2b      4d035a10       add r11, qword [r10 + 0x10]
0x00004a2f      83c008         add eax, 8
0x00004a32      418902         mov dword [r10], eax
0x00004a35      498b03         mov rax, qword [r11]
0x00004a38      4885c0         test rax, rax
0x00004a3b      4b8904c8       mov qword [r8 + r9*8], rax
0x00004a3f      740a           je 0x4a4b
0x00004a41      4983c101       add r9, 1
0x00004a45      4983f90a       cmp r9, 0xa
0x00004a49      75d5           jne 0x4a20
0x00004a4b      e870fbffff     call sym.version_etc_arn
0x00004a50      488b442458     mov rax, qword [rsp + 0x58]
0x00004a55      644833042528.  xor rax, qword fs:[0x28]
0x00004a5e      7505           jne 0x4a65
0x00004a60      4883c468       add rsp, 0x68
0x00004a64      c3             ret
0x00004a65      e816caffff     call sym.imp.__stack_chk_fail
0x00004a6a      4d8b5a08       mov r11, qword [r10 + 8]
0x00004a6e      498d4308       lea rax, [r11 + 8]
0x00004a72      49894208       mov qword [r10 + 8], rax
0x00004a76      ebbd           jmp 0x4a35
0x00004a78      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004a80      55             push rbp
0x00004a81      53             push rbx
0x00004a82      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004a88      4531db         xor r11d, r11d
0x00004a8b      4881ecb80000.  sub rsp, 0xb8
0x00004a92      64488b042528.  mov rax, qword fs:[0x28]
0x00004a9b      4889442478     mov qword [rsp + 0x78], rax
0x00004aa0      31c0           xor eax, eax
0x00004aa2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004aaa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004ab2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00004aba      4c8d442420     lea r8, [rsp + 0x20]
0x00004abf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004ac7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00004acf      4889442410     mov qword [rsp + 0x10], rax
0x00004ad4      488d84248000.  lea rax, [rsp + 0x80]
0x00004adc      4531c9         xor r9d, r9d
0x00004adf      4889442418     mov qword [rsp + 0x18], rax
0x00004ae4      4889c5         mov rbp, rax
0x00004ae7      660f1f840000.  nop word [rax + rax]
0x00004af0      4183fa2f       cmp r10d, 0x2f
0x00004af4      7756           ja 0x4b4c
0x00004af6      4489d0         mov eax, r10d
0x00004af9      41bb01000000   mov r11d, 1
0x00004aff      4183c208       add r10d, 8
0x00004b03      4801e8         add rax, rbp
0x00004b06      488b00         mov rax, qword [rax]
0x00004b09      4885c0         test rax, rax
0x00004b0c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004b10      740a           je 0x4b1c
0x00004b12      4983c101       add r9, 1
0x00004b16      4983f90a       cmp r9, 0xa
0x00004b1a      75d4           jne 0x4af0
0x00004b1c      4584db         test r11b, r11b
0x00004b1f      7524           jne 0x4b45
0x00004b21      e89afaffff     call sym.version_etc_arn
0x00004b26      488b442478     mov rax, qword [rsp + 0x78]
0x00004b2b      644833042528.  xor rax, qword fs:[0x28]
0x00004b34      750a           jne 0x4b40
0x00004b36      4881c4b80000.  add rsp, 0xb8
0x00004b3d      5b             pop rbx
0x00004b3e      5d             pop rbp
0x00004b3f      c3             ret
0x00004b40      e83bc9ffff     call sym.imp.__stack_chk_fail
0x00004b45      4489542408     mov dword [rsp + 8], r10d
0x00004b4a      ebd5           jmp 0x4b21
0x00004b4c      4889d8         mov rax, rbx
0x00004b4f      4883c308       add rbx, 8
0x00004b53      ebb1           jmp 0x4b06
0x00004b55      90             nop
0x00004b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004b60      53             push rbx
0x00004b61      488d359a1000.  lea rsi, str.Report_bugs_to:__s         ; 0x5c02 ; "\nReport bugs to: %s\n"
0x00004b68      ba05000000     mov edx, 5
0x00004b6d      31ff           xor edi, edi
0x00004b6f      e8dcc8ffff     call sym.imp.dcgettext
0x00004b74      488d159c1000.  lea rdx, str.bug_coreutils_gnu.org      ; 0x5c17 ; "bug-coreutils@gnu.org"
0x00004b7b      4889c6         mov rsi, rax
0x00004b7e      bf01000000     mov edi, 1
0x00004b83      31c0           xor eax, eax
0x00004b85      e836caffff     call sym.imp.__printf_chk
0x00004b8a      488d359c1000.  lea rsi, str.s_home_page:___s           ; 0x5c2d ; "%s home page: <%s>\n"
0x00004b91      ba05000000     mov edx, 5
0x00004b96      31ff           xor edi, edi
0x00004b98      e8b3c8ffff     call sym.imp.dcgettext
0x00004b9d      488d0d0c0a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x55b0 ; "https://www.gnu.org/software/coreutils/"
0x00004ba4      488d15da0600.  lea rdx, str.GNU_coreutils              ; 0x5285 ; "GNU coreutils"
0x00004bab      4889c6         mov rsi, rax
0x00004bae      bf01000000     mov edi, 1
0x00004bb3      31c0           xor eax, eax
0x00004bb5      e806caffff     call sym.imp.__printf_chk
0x00004bba      488b1de73420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00004bc1      488d35981200.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x5e60 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004bc8      31ff           xor edi, edi
0x00004bca      ba05000000     mov edx, 5
0x00004bcf      e87cc8ffff     call sym.imp.dcgettext
0x00004bd4      4889de         mov rsi, rbx
0x00004bd7      4889c7         mov rdi, rax
0x00004bda      5b             pop rbx
0x00004bdb      e930c9ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004be0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004be1      4889fb         mov rbx, rdi
0x00004be4      e867c9ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004be9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00004bec      7505           jne 0x4bf3
0x00004bee      4885db         test rbx, rbx
0x00004bf1      7502           jne 0x4bf5
0x00004bf3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004bf4      c3             ret
0x00004bf5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00004bfa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004c00      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004c03      48f7e6         mul rsi
0x00004c06      4889c7         mov rdi, rax
0x00004c09      0f90c0         seto al
0x00004c0c      4885ff         test rdi, rdi
0x00004c0f      780a           js 0x4c1b
0x00004c11      0fb6c0         movzx eax, al
0x00004c14      4885c0         test rax, rax
0x00004c17      7502           jne 0x4c1b
0x00004c19      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00004c1b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00004c1f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004c24      6690           nop
0x00004c26      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004c30      ebae           jmp sym.xmalloc
0x00004c32      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004c36      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004c40      4885f6         test rsi, rsi
0x00004c43      53             push rbx
0x00004c44      4889f3         mov rbx, rsi
0x00004c47      7505           jne 0x4c4e
0x00004c49      4885ff         test rdi, rdi
0x00004c4c      751a           jne 0x4c68
0x00004c4e      4889de         mov rsi, rbx
0x00004c51      e84ac9ffff     call sym.imp.realloc
0x00004c56      4885c0         test rax, rax
0x00004c59      7505           jne 0x4c60
0x00004c5b      4885db         test rbx, rbx
0x00004c5e      7511           jne 0x4c71                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004c60      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004c61      c3             ret
0x00004c62      660f1f440000   nop word [rax + rax]
0x00004c68      e843c7ffff     call sym.imp.free
0x00004c6d      31c0           xor eax, eax
0x00004c6f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004c70      c3             ret
0x00004c71      e8ba010000     call sym.xalloc_die
0x00004c76      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004c80      4889f0         mov rax, rsi
0x00004c83      48f7e2         mul rdx
0x00004c86      4889c6         mov rsi, rax
0x00004c89      0f90c0         seto al
0x00004c8c      4885f6         test rsi, rsi
0x00004c8f      780a           js 0x4c9b
0x00004c91      0fb6c0         movzx eax, al
0x00004c94      4885c0         test rax, rax
0x00004c97      7502           jne 0x4c9b
0x00004c99      eba5           jmp sym.xrealloc
0x00004c9b      4883ec08       sub rsp, 8
0x00004c9f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004ca4      6690           nop
0x00004ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004cb0      4885ff         test rdi, rdi
0x00004cb3      4989d1         mov r9, rdx
0x00004cb6      488b0e         mov rcx, qword [rsi]
0x00004cb9      7435           je 0x4cf0
0x00004cbb      31d2           xor edx, edx
0x00004cbd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00004cc7      49f7f1         div r9
0x00004cca      4839c8         cmp rax, rcx
0x00004ccd      763c           jbe 0x4d0b
0x00004ccf      4889c8         mov rax, rcx
0x00004cd2      48d1e8         shr rax, 1
0x00004cd5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00004cda      48890e         mov qword [rsi], rcx
0x00004cdd      490fafc9       imul rcx, r9
0x00004ce1      4889ce         mov rsi, rcx
0x00004ce4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004ce9      0f1f80000000.  nop dword [rax]
0x00004cf0      4885c9         test rcx, rcx
0x00004cf3      7423           je 0x4d18
0x00004cf5      4889c8         mov rax, rcx
0x00004cf8      49f7e1         mul r9
0x00004cfb      0f90c2         seto dl
0x00004cfe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004d01      0fb6d2         movzx edx, dl
0x00004d04      7805           js 0x4d0b
0x00004d06      4885d2         test rdx, rdx
0x00004d09      74cf           je 0x4cda
0x00004d0b      4883ec08       sub rsp, 8
0x00004d0f      e81c010000     call sym.xalloc_die
0x00004d14      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004d18      31d2           xor edx, edx
0x00004d1a      b880000000     mov eax, 0x80
0x00004d1f      4531c0         xor r8d, r8d
0x00004d22      49f7f1         div r9
0x00004d25      4885c0         test rax, rax
0x00004d28      410f94c0       sete r8b
0x00004d2c      498d0c00       lea rcx, [r8 + rax]
0x00004d30      ebc3           jmp 0x4cf5
0x00004d32      0f1f4000       nop dword [rax]
0x00004d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004d40      4885ff         test rdi, rdi
0x00004d43      488b06         mov rax, qword [rsi]
0x00004d46      7428           je 0x4d70
0x00004d48      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004d52      4839d0         cmp rax, rdx
0x00004d55      772a           ja 0x4d81
0x00004d57      4889c2         mov rdx, rax
0x00004d5a      48d1ea         shr rdx, 1
0x00004d5d      488d440201     lea rax, [rdx + rax + 1]
0x00004d62      488906         mov qword [rsi], rax
0x00004d65      4889c6         mov rsi, rax
0x00004d68      e9d3feffff     jmp sym.xrealloc
0x00004d6d      0f1f00         nop dword [rax]
0x00004d70      4885c0         test rax, rax
0x00004d73      ba80000000     mov edx, 0x80
0x00004d78      480f44c2       cmove rax, rdx
0x00004d7c      4885c0         test rax, rax
0x00004d7f      79e1           jns 0x4d62
0x00004d81      4883ec08       sub rsp, 8
0x00004d85      e8a6000000     call sym.xalloc_die
0x00004d8a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004d90      53             push rbx
0x00004d91      4889fb         mov rbx, rdi
0x00004d94      e847feffff     call sym.xmalloc
0x00004d99      4889da         mov rdx, rbx
0x00004d9c      31f6           xor esi, esi
0x00004d9e      4889c7         mov rdi, rax
0x00004da1      5b             pop rbx
0x00004da2      e939c7ffff     jmp sym.imp.memset
0x00004da7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004db0      4889f8         mov rax, rdi
0x00004db3      4883ec08       sub rsp, 8
0x00004db7      48f7e6         mul rsi
0x00004dba      0f90c2         seto dl
0x00004dbd      4885c0         test rax, rax
0x00004dc0      7817           js 0x4dd9
0x00004dc2      0fb6d2         movzx edx, dl
0x00004dc5      4885d2         test rdx, rdx
0x00004dc8      750f           jne 0x4dd9
0x00004dca      e851c7ffff     call sym.imp.calloc
0x00004dcf      4885c0         test rax, rax
0x00004dd2      7405           je 0x4dd9
0x00004dd4      4883c408       add rsp, 8
0x00004dd8      c3             ret
0x00004dd9      e852000000     call sym.xalloc_die
0x00004dde      6690           nop
;-- xmemdup:
0x00004de0      55             push rbp
0x00004de1      53             push rbx
0x00004de2      4889fd         mov rbp, rdi
0x00004de5      4889f7         mov rdi, rsi
0x00004de8      4889f3         mov rbx, rsi
0x00004deb      4883ec08       sub rsp, 8
0x00004def      e8ecfdffff     call sym.xmalloc
0x00004df4      4883c408       add rsp, 8
0x00004df8      4889da         mov rdx, rbx
0x00004dfb      4889ee         mov rsi, rbp
0x00004dfe      5b             pop rbx
0x00004dff      5d             pop rbp
0x00004e00      4889c7         mov rdi, rax
0x00004e03      e928c7ffff     jmp sym.imp.memcpy
0x00004e08      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004e10      53             push rbx
0x00004e11      4889fb         mov rbx, rdi
0x00004e14      e857c6ffff     call sym.imp.strlen
0x00004e19      4889df         mov rdi, rbx
0x00004e1c      488d7001       lea rsi, [rax + 1]
0x00004e20      5b             pop rbx
0x00004e21      ebbd           jmp sym.xmemdup
0x00004e23      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e2d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004e30      488d35d81000.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x5f0f ; "memory exhausted"
0x00004e37      4883ec08       sub rsp, 8
0x00004e3b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004e40      31ff           xor edi, edi
0x00004e42      e809c6ffff     call sym.imp.dcgettext
0x00004e47      8b3dd3312000   mov edi, dword [obj.exit_failure]       ; [0x208020:4]=1
0x00004e4d      488d15410800.  lea rdx, [0x00005695]                   ; "%s"
0x00004e54      4889c1         mov rcx, rax
0x00004e57      31f6           xor esi, esi
0x00004e59      31c0           xor eax, eax
0x00004e5b      e870c7ffff     call sym.imp.error
0x00004e60      e85bc5ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004e65      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e6f      90             nop
;-- rpl_fclose:
0x00004e70      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00004e72      55             push rbp
0x00004e73      53             push rbx
0x00004e74      4889fb         mov rbx, rdi
0x00004e77      e8c4c6ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00004e7c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00004e7e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00004e81      7854           js 0x4ed7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00004e83      e8f8c6ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00004e88      85c0           test eax, eax
0x00004e8a      752c           jne 0x4eb8
0x00004e8c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00004e8f      e85c000000     call sym.rpl_fflush
0x00004e94      85c0           test eax, eax
0x00004e96      743c           je 0x4ed4
0x00004e98      e833c5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00004e9d      448b20         mov r12d, dword [rax]
0x00004ea0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004ea3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00004ea6      e885c5ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00004eab      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00004eae      7530           jne 0x4ee0
0x00004eb0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004eb1      5d             pop rbp
0x00004eb2      415c           pop r12
0x00004eb4      c3             ret
0x00004eb5      0f1f00         nop dword [rax]
0x00004eb8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00004ebb      e880c6ffff     call sym.imp.fileno
0x00004ec0      31f6           xor esi, esi
0x00004ec2      ba01000000     mov edx, 1
0x00004ec7      89c7           mov edi, eax
0x00004ec9      e802c6ffff     call sym.imp.lseek
0x00004ece      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004ed2      75b8           jne 0x4e8c
0x00004ed4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004ed7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004ed8      5d             pop rbp
0x00004ed9      415c           pop r12
0x00004edb      e950c5ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00004ee0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00004ee4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00004ee9      ebc5           jmp 0x4eb0
0x00004eeb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00004ef0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00004ef3      53             push rbx
0x00004ef4      4889fb         mov rbx, rdi
0x00004ef7      7411           je 0x4f0a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00004ef9      e882c6ffff     call sym.imp.__freading
0x00004efe      85c0           test eax, eax
0x00004f00      7408           je 0x4f0a
0x00004f02      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00004f08      750e           jne 0x4f18
0x00004f0a      4889df         mov rdi, rbx
0x00004f0d      5b             pop rbx
0x00004f0e      e94dc6ffff     jmp sym.imp.fflush
0x00004f13      0f1f440000     nop dword [rax + rax]
0x00004f18      4889df         mov rdi, rbx
0x00004f1b      ba01000000     mov edx, 1
0x00004f20      31f6           xor esi, esi
0x00004f22      e809000000     call sym.rpl_fseeko
0x00004f27      4889df         mov rdi, rbx
0x00004f2a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00004f2b      e930c6ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00004f30      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00004f34      48394710       cmp qword [rdi + 0x10], rax
0x00004f38      7406           je 0x4f40                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00004f3a      e9a1c6ffff     jmp sym.imp.fseeko
0x00004f3f      90             nop
0x00004f40      488b4720       mov rax, qword [rdi + 0x20]
0x00004f44      48394728       cmp qword [rdi + 0x28], rax
0x00004f48      75f0           jne 0x4f3a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00004f4a      48837f4800     cmp qword [rdi + 0x48], 0
0x00004f4f      75e9           jne 0x4f3a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00004f51      4154           push r12
0x00004f53      55             push rbp
0x00004f54      4189d4         mov r12d, edx
0x00004f57      53             push rbx
0x00004f58      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00004f5b      4889fb         mov rbx, rdi
0x00004f5e      e8ddc5ffff     call sym.imp.fileno
0x00004f63      4489e2         mov edx, r12d
0x00004f66      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00004f69      89c7           mov edi, eax
0x00004f6b      e860c5ffff     call sym.imp.lseek
0x00004f70      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004f74      740c           je 0x4f82
0x00004f76      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00004f79      488983900000.  mov qword [rbx + 0x90], rax
0x00004f80      31c0           xor eax, eax
0x00004f82      5b             pop rbx
0x00004f83      5d             pop rbp
0x00004f84      415c           pop r12
0x00004f86      c3             ret
0x00004f87      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00004f90      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00004f92      4154           push r12
0x00004f94      4989f5         mov r13, rsi
0x00004f97      55             push rbp
0x00004f98      53             push rbx
0x00004f99      4889fb         mov rbx, rdi
0x00004f9c      4989d4         mov r12, rdx
0x00004f9f      4883ec18       sub rsp, 0x18
0x00004fa3      64488b042528.  mov rax, qword fs:[0x28]
0x00004fac      4889442408     mov qword [rsp + 8], rax
0x00004fb1      31c0           xor eax, eax
0x00004fb3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00004fb8      4885ff         test rdi, rdi
0x00004fbb      480f44d8       cmove rbx, rax
0x00004fbf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00004fc2      e8d9c4ffff     call sym.imp.mbrtowc
0x00004fc7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004fcb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00004fce      7620           jbe 0x4ff0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004fd0      4d85e4         test r12, r12
0x00004fd3      741b           je 0x4ff0
0x00004fd5      31ff           xor edi, edi
0x00004fd7      e8c4000000     call sym.hard_locale
0x00004fdc      84c0           test al, al
0x00004fde      7510           jne 0x4ff0
0x00004fe0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004fe5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00004fea      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004fec      0f1f4000       nop dword [rax]
0x00004ff0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00004ff5      644833142528.  xor rdx, qword fs:[0x28]
0x00004ffe      4889e8         mov rax, rbp
0x00005001      750b           jne 0x500e
0x00005003      4883c418       add rsp, 0x18
0x00005007      5b             pop rbx
0x00005008      5d             pop rbp
0x00005009      415c           pop r12
0x0000500b      415d           pop r13
0x0000500d      c3             ret
0x0000500e      e86dc4ffff     call sym.imp.__stack_chk_fail
0x00005013      662e0f1f8400.  nop word cs:[rax + rax]
0x0000501d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005020      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005022      55             push rbp
0x00005023      4889fd         mov rbp, rdi
0x00005026      53             push rbx
0x00005027      e8d4c3ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000502c      8b5d00         mov ebx, dword [rbp]
0x0000502f      4889ef         mov rdi, rbp
0x00005032      4989c4         mov r12, rax
0x00005035      e836feffff     call sym.rpl_fclose
0x0000503a      83e320         and ebx, 0x20                           ; "@"
0x0000503d      85db           test ebx, ebx
0x0000503f      7517           jne 0x5058
0x00005041      85c0           test eax, eax
0x00005043      740a           je 0x504f                               ; stdio.h:-186
0x00005045      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005048      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000504d      7439           je 0x5088
0x0000504f      5b             pop rbx
0x00005050      5d             pop rbp
0x00005051      415c           pop r12
0x00005053      c3             ret
0x00005054      0f1f4000       nop dword [rax]
0x00005058      85c0           test eax, eax
0x0000505a      751c           jne 0x5078
0x0000505c      e86fc3ffff     call sym.imp.__errno_location
0x00005061      c70000000000   mov dword [rax], 0
0x00005067      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000506c      5b             pop rbx
0x0000506d      5d             pop rbp
0x0000506e      415c           pop r12
0x00005070      c3             ret
0x00005071      0f1f80000000.  nop dword [rax]
0x00005078      5b             pop rbx
0x00005079      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000507e      5d             pop rbp                                 ; stdio.h:-186
0x0000507f      415c           pop r12
0x00005081      c3             ret
0x00005082      660f1f440000   nop word [rax + rax]
0x00005088      e843c3ffff     call sym.imp.__errno_location
0x0000508d      833809         cmp dword [rax], 9
0x00005090      5b             pop rbx
0x00005091      5d             pop rbp
0x00005092      415c           pop r12                                 ; stdio.h:-178
0x00005094      0f95c0         setne al
0x00005097      0fb6c0         movzx eax, al
0x0000509a      f7d8           neg eax
0x0000509c      c3             ret
0x0000509d      0f1f00         nop dword [rax]
;-- hard_locale:
0x000050a0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000050a4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000050a6      e805c5ffff     call sym.imp.setlocale
0x000050ab      4889c2         mov rdx, rax
0x000050ae      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000050b3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000050b6      741d           je 0x50d5
0x000050b8      488d3d610e00.  lea rdi, [0x00005f20]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000050bf      b902000000     mov ecx, 2
0x000050c4      4889d6         mov rsi, rdx
0x000050c7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000050c9      0f97c1         seta cl
0x000050cc      80d900         sbb cl, 0
0x000050cf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000050d1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000050d3      750b           jne 0x50e0
0x000050d5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000050d9      c3             ret
0x000050da      660f1f440000   nop word [rax + rax]
0x000050e0      488d3d3b0e00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x5f22 ; "POSIX"
0x000050e7      b906000000     mov ecx, 6
0x000050ec      4889d6         mov rsi, rdx
0x000050ef      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000050f1      0f97c0         seta al
0x000050f4      1c00           sbb al, 0
0x000050f6      84c0           test al, al
0x000050f8      0f95c0         setne al
0x000050fb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000050ff      c3             ret
;-- locale_charset:
0x00005100      4883ec08       sub rsp, 8
0x00005104      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005109      e862c4ffff     call sym.imp.nl_langinfo
0x0000510e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005111      741d           je 0x5130
0x00005113      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005116      488d150b0e00.  lea rdx, str.ASCII                      ; 0x5f28 ; "ASCII"
0x0000511d      480f44c2       cmove rax, rdx
0x00005121      4883c408       add rsp, 8
0x00005125      c3             ret
0x00005126      662e0f1f8400.  nop word cs:[rax + rax]
0x00005130      488d05f10d00.  lea rax, str.ASCII                      ; 0x5f28 ; "ASCII"
0x00005137      4883c408       add rsp, 8
0x0000513b      c3             ret
0x0000513c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00005140      4157           push r15
0x00005142      4156           push r14
0x00005144      4989d7         mov r15, rdx
0x00005147      4155           push r13
0x00005149      4154           push r12
0x0000514b      4c8d25de2920.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b30
0x00005152      55             push rbp
0x00005153      488d2dde2920.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b38 ; "p\x1a"
0x0000515a      53             push rbx
0x0000515b      4189fd         mov r13d, edi
0x0000515e      4989f6         mov r14, rsi
0x00005161      4c29e5         sub rbp, r12
0x00005164      4883ec08       sub rsp, 8
0x00005168      48c1fd03       sar rbp, 3
0x0000516c      e807c2ffff     call sym._init
0x00005171      4885ed         test rbp, rbp
0x00005174      7420           je 0x5196
0x00005176      31db           xor ebx, ebx
0x00005178      0f1f84000000.  nop dword [rax + rax]
0x00005180      4c89fa         mov rdx, r15
0x00005183      4c89f6         mov rsi, r14
0x00005186      4489ef         mov edi, r13d
0x00005189      41ff14dc       call qword [r12 + rbx*8]
0x0000518d      4883c301       add rbx, 1
0x00005191      4839dd         cmp rbp, rbx
0x00005194      75ea           jne 0x5180
0x00005196      4883c408       add rsp, 8
0x0000519a      5b             pop rbx
0x0000519b      5d             pop rbp
0x0000519c      415c           pop r12
0x0000519e      415d           pop r13
0x000051a0      415e           pop r14
0x000051a2      415f           pop r15
0x000051a4      c3             ret
0x000051a5      90             nop
0x000051a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000051b0      f3c3           ret
0x000051b2      662e0f1f8400.  nop word cs:[rax + rax]
0x000051bc      0f1f4000       nop dword [rax]
;-- atexit:
0x000051c0      488b15412e20.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x000051c7      31f6           xor esi, esi
0x000051c9      e932c4ffff     jmp sym.imp.__cxa_atexit
0x000051ce      0000           add byte [rax], al
