;-- section..plt:
;-- .plt:
0x00001770      ff355a862000   push qword [0x00209dd0]                 ; [12] -r-x section size 1008 named .plt
0x00001776      ff255c862000   jmp qword [0x00209dd8]                  ; [0x209dd8:8]=0
0x0000177c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00001780      ff255a862000   jmp qword [reloc.getenv]                ; [0x209de0:8]=0x1786
0x00001786      6800000000     push 0
0x0000178b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001790      ff2552862000   jmp qword [reloc.free]                  ; [0x209de8:8]=0x1796
0x00001796      6801000000     push 1
0x0000179b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000017a0      ff254a862000   jmp qword [reloc.abort]                 ; [0x209df0:8]=0x17a6
0x000017a6      6802000000     push 2
0x000017ab      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000017b0      ff2542862000   jmp qword [reloc.__errno_location]      ; [0x209df8:8]=0x17b6
0x000017b6      6803000000     push 3
0x000017bb      e9b0ffffff     jmp sym..plt
;-- imp.remove:
0x000017c0      ff253a862000   jmp qword [reloc.remove]                ; [0x209e00:8]=0x17c6
0x000017c6      6804000000     push 4
0x000017cb      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000017d0      ff2532862000   jmp qword [reloc.strncmp]               ; [0x209e08:8]=0x17d6
0x000017d6      6805000000     push 5
0x000017db      e990ffffff     jmp sym..plt
;-- imp._exit:
0x000017e0      ff252a862000   jmp qword [reloc._exit]                 ; [0x209e10:8]=0x17e6
0x000017e6      6806000000     push 6
0x000017eb      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x000017f0      ff2522862000   jmp qword [reloc.__fpending]            ; [0x209e18:8]=0x17f6
0x000017f6      6807000000     push 7
0x000017fb      e970ffffff     jmp sym..plt
;-- imp.__read_chk:
0x00001800      ff251a862000   jmp qword [reloc.__read_chk]            ; [0x209e20:8]=0x1806
0x00001806      6808000000     push 8
0x0000180b      e960ffffff     jmp sym..plt
;-- imp.mkdir:
0x00001810      ff2512862000   jmp qword [reloc.mkdir]                 ; [0x209e28:8]=0x1816
0x00001816      6809000000     push 9
0x0000181b      e950ffffff     jmp sym..plt
;-- imp.puts:
0x00001820      ff250a862000   jmp qword [reloc.puts]                  ; [0x209e30:8]=0x1826 ; "&\x18"
0x00001826      680a000000     push 0xa
0x0000182b      e940ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001830      ff2502862000   jmp qword [reloc.fcntl]                 ; [0x209e38:8]=0x1836 ; "6\x18"
0x00001836      680b000000     push 0xb
0x0000183b      e930ffffff     jmp sym..plt
;-- imp.getpid:
0x00001840      ff25fa852000   jmp qword [reloc.getpid]                ; [0x209e40:8]=0x1846 ; "F\x18"
0x00001846      680c000000     push 0xc
0x0000184b      e920ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001850      ff25f2852000   jmp qword [reloc.fread_unlocked]        ; [0x209e48:8]=0x1856 ; "V\x18"
0x00001856      680d000000     push 0xd
0x0000185b      e910ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001860      ff25ea852000   jmp qword [reloc.textdomain]            ; [0x209e50:8]=0x1866 ; "f\x18"
0x00001866      680e000000     push 0xe
0x0000186b      e900ffffff     jmp sym..plt
;-- imp.fclose:
0x00001870      ff25e2852000   jmp qword [reloc.fclose]                ; [0x209e58:8]=0x1876 ; "v\x18"
0x00001876      680f000000     push 0xf
0x0000187b      e9f0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001880      ff25da852000   jmp qword [reloc.bindtextdomain]        ; [0x209e60:8]=0x1886
0x00001886      6810000000     push 0x10
0x0000188b      e9e0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001890      ff25d2852000   jmp qword [reloc.dcgettext]             ; [0x209e68:8]=0x1896
0x00001896      6811000000     push 0x11
0x0000189b      e9d0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000018a0      ff25ca852000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x209e70:8]=0x18a6
0x000018a6      6812000000     push 0x12
0x000018ab      e9c0feffff     jmp sym..plt
;-- imp.strlen:
0x000018b0      ff25c2852000   jmp qword [reloc.strlen]                ; [0x209e78:8]=0x18b6
0x000018b6      6813000000     push 0x13
0x000018bb      e9b0feffff     jmp sym..plt
;-- imp.__lxstat:
0x000018c0      ff25ba852000   jmp qword [reloc.__lxstat]              ; [0x209e80:8]=0x18c6
0x000018c6      6814000000     push 0x14
0x000018cb      e9a0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000018d0      ff25b2852000   jmp qword [reloc.__stack_chk_fail]      ; [0x209e88:8]=0x18d6
0x000018d6      6815000000     push 0x15
0x000018db      e990feffff     jmp sym..plt
;-- imp.getuid:
0x000018e0      ff25aa852000   jmp qword [reloc.getuid]                ; [0x209e90:8]=0x18e6
0x000018e6      6816000000     push 0x16
0x000018eb      e980feffff     jmp sym..plt
;-- imp.getopt_long:
0x000018f0      ff25a2852000   jmp qword [reloc.getopt_long]           ; [0x209e98:8]=0x18f6
0x000018f6      6817000000     push 0x17
0x000018fb      e970feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001900      ff259a852000   jmp qword [reloc.mbrtowc]               ; [0x209ea0:8]=0x1906
0x00001906      6818000000     push 0x18
0x0000190b      e960feffff     jmp sym..plt
;-- imp.strrchr:
0x00001910      ff2592852000   jmp qword [reloc.strrchr]               ; [0x209ea8:8]=0x1916
0x00001916      6819000000     push 0x19
0x0000191b      e950feffff     jmp sym..plt
;-- imp.lseek:
0x00001920      ff258a852000   jmp qword [reloc.lseek]                 ; [0x209eb0:8]=0x1926 ; "&\x19"
0x00001926      681a000000     push 0x1a
0x0000192b      e940feffff     jmp sym..plt
;-- imp.gettimeofday:
0x00001930      ff2582852000   jmp qword [reloc.gettimeofday]          ; [0x209eb8:8]=0x1936 ; "6\x19"
0x00001936      681b000000     push 0x1b
0x0000193b      e930feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001940      ff257a852000   jmp qword [reloc.__assert_fail]         ; [0x209ec0:8]=0x1946 ; "F\x19"
0x00001946      681c000000     push 0x1c
0x0000194b      e920feffff     jmp sym..plt
;-- imp.memset:
0x00001950      ff2572852000   jmp qword [reloc.memset]                ; [0x209ec8:8]=0x1956 ; "V\x19"
0x00001956      681d000000     push 0x1d
0x0000195b      e910feffff     jmp sym..plt
;-- imp.close:
0x00001960      ff256a852000   jmp qword [reloc.close]                 ; [0x209ed0:8]=0x1966 ; "f\x19"
0x00001966      681e000000     push 0x1e
0x0000196b      e900feffff     jmp sym..plt
;-- imp.strspn:
0x00001970      ff2562852000   jmp qword [reloc.strspn]                ; [0x209ed8:8]=0x1976 ; "v\x19"
0x00001976      681f000000     push 0x1f
0x0000197b      e9f0fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001980      ff255a852000   jmp qword [reloc.memcmp]                ; [0x209ee0:8]=0x1986
0x00001986      6820000000     push 0x20                               ; "@"
0x0000198b      e9e0fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001990      ff2552852000   jmp qword [reloc.fputs_unlocked]        ; [0x209ee8:8]=0x1996
0x00001996      6821000000     push 0x21                               ; '!'
0x0000199b      e9d0fdffff     jmp sym..plt
;-- imp.calloc:
0x000019a0      ff254a852000   jmp qword [reloc.calloc]                ; [0x209ef0:8]=0x19a6
0x000019a6      6822000000     push 0x22                               ; '"'
0x000019ab      e9c0fdffff     jmp sym..plt
;-- imp.fputc_unlocked:
0x000019b0      ff2542852000   jmp qword [reloc.fputc_unlocked]        ; [0x209ef8:8]=0x19b6
0x000019b6      6823000000     push 0x23                               ; '#'
0x000019bb      e9b0fdffff     jmp sym..plt
;-- imp.memcpy:
0x000019c0      ff253a852000   jmp qword [reloc.memcpy]                ; [0x209f00:8]=0x19c6
0x000019c6      6824000000     push 0x24                               ; '$'
0x000019cb      e9a0fdffff     jmp sym..plt
;-- imp.fileno:
0x000019d0      ff2532852000   jmp qword [reloc.fileno]                ; [0x209f08:8]=0x19d6
0x000019d6      6825000000     push 0x25                               ; '%'
0x000019db      e990fdffff     jmp sym..plt
;-- imp.getgid:
0x000019e0      ff252a852000   jmp qword [reloc.getgid]                ; [0x209f10:8]=0x19e6
0x000019e6      6826000000     push 0x26                               ; '&'
0x000019eb      e980fdffff     jmp sym..plt
;-- imp.malloc:
0x000019f0      ff2522852000   jmp qword [reloc.malloc]                ; [0x209f18:8]=0x19f6
0x000019f6      6827000000     push 0x27                               ; '''
0x000019fb      e970fdffff     jmp sym..plt
;-- imp.fflush:
0x00001a00      ff251a852000   jmp qword [reloc.fflush]                ; [0x209f20:8]=0x1a06
0x00001a06      6828000000     push 0x28                               ; '('
0x00001a0b      e960fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001a10      ff2512852000   jmp qword [reloc.nl_langinfo]           ; [0x209f28:8]=0x1a16
0x00001a16      6829000000     push 0x29                               ; ')'
0x00001a1b      e950fdffff     jmp sym..plt
;-- imp.__freading:
0x00001a20      ff250a852000   jmp qword [reloc.__freading]            ; [0x209f30:8]=0x1a26 ; "&\x1a"
0x00001a26      682a000000     push 0x2a                               ; '*'
0x00001a2b      e940fdffff     jmp sym..plt
;-- imp.realloc:
0x00001a30      ff2502852000   jmp qword [reloc.realloc]               ; [0x209f38:8]=0x1a36 ; "6\x1a"
0x00001a36      682b000000     push 0x2b                               ; '+'
0x00001a3b      e930fdffff     jmp sym..plt
;-- imp.fdopen:
0x00001a40      ff25fa842000   jmp qword [reloc.fdopen]                ; [0x209f40:8]=0x1a46 ; "F\x1a"
0x00001a46      682c000000     push 0x2c                               ; ','
0x00001a4b      e920fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001a50      ff25f2842000   jmp qword [reloc.setlocale]             ; [0x209f48:8]=0x1a56 ; "V\x1a"
0x00001a56      682d000000     push 0x2d                               ; '-'
0x00001a5b      e910fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001a60      ff25ea842000   jmp qword [reloc.__printf_chk]          ; [0x209f50:8]=0x1a66 ; "f\x1a"
0x00001a66      682e000000     push 0x2e                               ; '.'
0x00001a6b      e900fdffff     jmp sym..plt
;-- imp.setvbuf:
0x00001a70      ff25e2842000   jmp qword [reloc.setvbuf]               ; [0x209f58:8]=0x1a76 ; "v\x1a"
0x00001a76      682f000000     push 0x2f                               ; '/'
0x00001a7b      e9f0fcffff     jmp sym..plt
;-- imp.mempcpy:
0x00001a80      ff25da842000   jmp qword [reloc.mempcpy]               ; [0x209f60:8]=0x1a86
0x00001a86      6830000000     push 0x30                               ; '0'
0x00001a8b      e9e0fcffff     jmp sym..plt
;-- imp.error:
0x00001a90      ff25d2842000   jmp qword [reloc.error]                 ; [0x209f68:8]=0x1a96
0x00001a96      6831000000     push 0x31                               ; '1'
0x00001a9b      e9d0fcffff     jmp sym..plt
;-- imp.__explicit_bzero_chk:
0x00001aa0      ff25ca842000   jmp qword [reloc.__explicit_bzero_chk]  ; [0x209f70:8]=0x1aa6
0x00001aa6      6832000000     push 0x32                               ; '2'
0x00001aab      e9c0fcffff     jmp sym..plt
;-- imp.open:
0x00001ab0      ff25c2842000   jmp qword [reloc.open]                  ; [0x209f78:8]=0x1ab6
0x00001ab6      6833000000     push 0x33                               ; '3'
0x00001abb      e9b0fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001ac0      ff25ba842000   jmp qword [reloc.fseeko]                ; [0x209f80:8]=0x1ac6
0x00001ac6      6834000000     push 0x34                               ; '4'
0x00001acb      e9a0fcffff     jmp sym..plt
;-- imp.fopen:
0x00001ad0      ff25b2842000   jmp qword [reloc.fopen]                 ; [0x209f88:8]=0x1ad6
0x00001ad6      6835000000     push 0x35                               ; '5'
0x00001adb      e990fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001ae0      ff25aa842000   jmp qword [reloc.__cxa_atexit]          ; [0x209f90:8]=0x1ae6
0x00001ae6      6836000000     push 0x36                               ; '6'
0x00001aeb      e980fcffff     jmp sym..plt
;-- imp.getppid:
0x00001af0      ff25a2842000   jmp qword [reloc.getppid]               ; [0x209f98:8]=0x1af6
0x00001af6      6837000000     push 0x37                               ; '7'
0x00001afb      e970fcffff     jmp sym..plt
;-- imp.exit:
0x00001b00      ff259a842000   jmp qword [reloc.exit]                  ; [0x209fa0:8]=0x1b06
0x00001b06      6838000000     push 0x38                               ; '8'
0x00001b0b      e960fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001b10      ff2592842000   jmp qword [reloc.fwrite]                ; [0x209fa8:8]=0x1b16
0x00001b16      6839000000     push 0x39                               ; '9'
0x00001b1b      e950fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001b20      ff258a842000   jmp qword [reloc.__fprintf_chk]         ; [0x209fb0:8]=0x1b26 ; "&\x1b"
0x00001b26      683a000000     push 0x3a                               ; ':'
0x00001b2b      e940fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001b30      ff2582842000   jmp qword [reloc.mbsinit]               ; [0x209fb8:8]=0x1b36 ; "6\x1b"
0x00001b36      683b000000     push 0x3b                               ; ';'
0x00001b3b      e930fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001b40      ff257a842000   jmp qword [reloc.iswprint]              ; [0x209fc0:8]=0x1b46 ; "F\x1b"
0x00001b46      683c000000     push 0x3c                               ; '<'
0x00001b4b      e920fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001b50      ff2572842000   jmp qword [reloc.__ctype_b_loc]         ; [0x209fc8:8]=0x1b56 ; "V\x1b"
0x00001b56      683d000000     push 0x3d                               ; '='
0x00001b5b      e910fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001b60      .qword 0x90660020848a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001b68      0000           add byte [rax], al
0x00001b6a      0000           add byte [rax], al
0x00001b6c      0000           add byte [rax], al
0x00001b6e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001b70      4157           push r15                                ; [14] -r-x section size 19102 named .text
0x00001b72      4156           push r14
0x00001b74      4531ff         xor r15d, r15d
0x00001b77      4155           push r13
0x00001b79      4154           push r12
0x00001b7b      4531f6         xor r14d, r14d
0x00001b7e      55             push rbp
0x00001b7f      53             push rbx
0x00001b80      89fd           mov ebp, edi
0x00001b82      4889f3         mov rbx, rsi
0x00001b85      4531e4         xor r12d, r12d
0x00001b88      4531ed         xor r13d, r13d
0x00001b8b      4883ec38       sub rsp, 0x38
0x00001b8f      488b3e         mov rdi, qword [rsi]
0x00001b92      e8190f0000     call sym.set_program_name
0x00001b97      488d35ba5900.  lea rsi, [0x00007558]
0x00001b9e      bf06000000     mov edi, 6
0x00001ba3      e8a8feffff     call sym.imp.setlocale
0x00001ba8      488d35334b00.  lea rsi, str.usr_local_share_locale     ; 0x66e2 ; "/usr/local/share/locale"
0x00001baf      488d3def4a00.  lea rdi, [0x000066a5]                   ; "coreutils"
0x00001bb6      e8c5fcffff     call sym.imp.bindtextdomain
0x00001bbb      488d3de34a00.  lea rdi, [0x000066a5]                   ; "coreutils"
0x00001bc2      e899fcffff     call sym.imp.textdomain
0x00001bc7      488d3d720700.  lea rdi, sym.maybe_close_stdout         ; 0x2340
0x00001bce      e82d4a0000     call sym.atexit
0x00001bd3      c644241600     mov byte [rsp + 0x16], 0
0x00001bd8      c644241700     mov byte [rsp + 0x17], 0
0x00001bdd      48c744240800.  mov qword [rsp + 8], 0
0x00001be6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001bf0      488d0d897e20.  lea rcx, obj.longopts                   ; 0x209a80 ; "[g"
0x00001bf7      488d15144b00.  lea rdx, str.dp:qtuV                    ; 0x6712 ; "dp:qtuV"
0x00001bfe      4531c0         xor r8d, r8d
0x00001c01      4889de         mov rsi, rbx
0x00001c04      89ef           mov edi, ebp
0x00001c06      e8e5fcffff     call sym.imp.getopt_long
0x00001c0b      83f8ff         cmp eax, 0xffffffff
0x00001c0e      0f84f0000000   je 0x1d04
0x00001c14      83f870         cmp eax, 0x70
0x00001c17      744f           je 0x1c68
0x00001c19      7e25           jle 0x1c40
0x00001c1b      83f874         cmp eax, 0x74
0x00001c1e      7478           je 0x1c98
0x00001c20      7e5e           jle 0x1c80
0x00001c22      83f875         cmp eax, 0x75
0x00001c25      0f8485000000   je 0x1cb0
0x00001c2b      83c080         add eax, 0xffffff80
0x00001c2e      0f8589040000   jne 0x20bd
0x00001c34      4c8b2d5d8420.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a098:8]=0
0x00001c3b      ebb3           jmp 0x1bf0
0x00001c3d      0f1f00         nop dword [rax]
0x00001c40      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001c45      0f8441050000   je 0x218c
0x00001c4b      7e6e           jle 0x1cbb
0x00001c4d      83f856         cmp eax, 0x56
0x00001c50      7474           je 0x1cc6
0x00001c52      83f864         cmp eax, 0x64
0x00001c55      0f8562040000   jne 0x20bd
0x00001c5b      41be01000000   mov r14d, 1
0x00001c61      eb8d           jmp 0x1bf0
0x00001c63      0f1f440000     nop dword [rax + rax]
0x00001c68      488b05298420.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a098:8]=0
0x00001c6f      41bc01000000   mov r12d, 1
0x00001c75      4889442408     mov qword [rsp + 8], rax
0x00001c7a      e971ffffff     jmp 0x1bf0
0x00001c7f      90             nop
0x00001c80      83f871         cmp eax, 0x71
0x00001c83      0f8534040000   jne 0x20bd
0x00001c89      c644241701     mov byte [rsp + 0x17], 1
0x00001c8e      e95dffffff     jmp 0x1bf0
0x00001c93      0f1f440000     nop dword [rax + rax]
0x00001c98      c644241601     mov byte [rsp + 0x16], 1
0x00001c9d      41bc01000000   mov r12d, 1
0x00001ca3      e948ffffff     jmp 0x1bf0
0x00001ca8      0f1f84000000.  nop dword [rax + rax]
0x00001cb0      41bf01000000   mov r15d, 1
0x00001cb6      e935ffffff     jmp 0x1bf0
0x00001cbb      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001cc0      0f85f7030000   jne 0x20bd
0x00001cc6      4883ec08       sub rsp, 8
0x00001cca      488b3db78320.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x00001cd1      488b0d388320.  mov rcx, qword [obj.Version]            ; [0x20a010:8]=0x6f0e str.8.31
0x00001cd8      6a00           push 0
0x00001cda      4c8d0d194a00.  lea r9, str.Eric_Blake                  ; 0x66fa ; "Eric Blake"
0x00001ce1      4c8d051d4a00.  lea r8, str.Jim_Meyering                ; 0x6705 ; "Jim Meyering"
0x00001ce8      488d15b24900.  lea rdx, str.GNU_coreutils              ; 0x66a1 ; "GNU coreutils"
0x00001cef      488d352e4900.  lea rsi, str.mktemp                     ; 0x6624 ; "mktemp"
0x00001cf6      31c0           xor eax, eax
0x00001cf8      e883320000     call sym.version_etc
0x00001cfd      31ff           xor edi, edi
0x00001cff      e8fcfdffff     call sym.imp.exit
0x00001d04      486305858320.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a090:4]=0
0x00001d0b      29c5           sub ebp, eax
0x00001d0d      83fd01         cmp ebp, 1
0x00001d10      0f8786030000   ja 0x209c
0x00001d16      85ed           test ebp, ebp
0x00001d18      0f85a1010000   jne 0x1ebf
0x00001d1e      4d85ed         test r13, r13
0x00001d21      41bc01000000   mov r12d, 1
0x00001d27      488d35a04900.  lea rsi, str.tmp.XXXXXXXXXX             ; 0x66ce ; "tmp.XXXXXXXXXX"
0x00001d2e      0f8407040000   je 0x213b
0x00001d34      488d35934900.  lea rsi, str.tmp.XXXXXXXXXX             ; 0x66ce ; "tmp.XXXXXXXXXX"
0x00001d3b      48c74424180e.  mov qword [rsp + 0x18], 0xe             ; [0xe:8]=0x1003e00030000
0x00001d44      41bc01000000   mov r12d, 1
0x00001d4a      4889742428     mov qword [rsp + 0x28], rsi
0x00001d4f      31c0           xor eax, eax
0x00001d51      4c89ef         mov rdi, r13
0x00001d54      4883c9ff       or rcx, 0xffffffffffffffff
0x00001d58      f2ae           repne scasb al, byte [rdi]
0x00001d5a      488b442418     mov rax, qword [rsp + 0x18]
0x00001d5f      4889ca         mov rdx, rcx
0x00001d62      48f7d2         not rdx
0x00001d65      488d6aff       lea rbp, [rdx - 1]
0x00001d69      4889542420     mov qword [rsp + 0x20], rdx
0x00001d6e      488d7c2801     lea rdi, [rax + rbp + 1]
0x00001d73      e868330000     call sym.xmalloc
0x00001d78      488b542418     mov rdx, qword [rsp + 0x18]
0x00001d7d      488b742428     mov rsi, qword [rsp + 0x28]
0x00001d82      4889c7         mov rdi, rax
0x00001d85      4889c3         mov rbx, rax
0x00001d88      e833fcffff     call sym.imp.memcpy
0x00001d8d      488b442418     mov rax, qword [rsp + 0x18]
0x00001d92      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00001d97      4c89ee         mov rsi, r13
0x00001d9a      4c8d0403       lea r8, [rbx + rax]
0x00001d9e      4889ca         mov rdx, rcx
0x00001da1      4c89c7         mov rdi, r8
0x00001da4      e817fcffff     call sym.imp.memcpy
0x00001da9      4989c0         mov r8, rax
0x00001dac      4885ed         test rbp, rbp
0x00001daf      741b           je 0x1dcc
0x00001db1      4c89c7         mov rdi, r8
0x00001db4      4c89442418     mov qword [rsp + 0x18], r8
0x00001db9      e8220b0000     call sym.last_component
0x00001dbe      4c8b442418     mov r8, qword [rsp + 0x18]
0x00001dc3      4c39c0         cmp rax, r8
0x00001dc6      0f852b040000   jne 0x21f7
0x00001dcc      4c89c0         mov rax, r8
0x00001dcf      4829d8         sub rax, rbx
0x00001dd2      0f84ed030000   je 0x21c5
0x00001dd8      418078ff58     cmp byte [r8 - 1], 0x58
0x00001ddd      0f85e2030000   jne 0x21c5
0x00001de3      488d4403fe     lea rax, [rbx + rax - 2]
0x00001de8      488d53ff       lea rdx, [rbx - 1]
0x00001dec      4531ed         xor r13d, r13d
0x00001def      eb11           jmp 0x1e02
0x00001df1      0f1f80000000.  nop dword [rax]
0x00001df8      4883e801       sub rax, 1
0x00001dfc      80780158       cmp byte [rax + 1], 0x58
0x00001e00      7509           jne 0x1e0b
0x00001e02      4983c501       add r13, 1
0x00001e06      4839c2         cmp rdx, rax
0x00001e09      75ed           jne 0x1df8
0x00001e0b      4983fd02       cmp r13, 2
0x00001e0f      0f86b0030000   jbe 0x21c5
0x00001e15      4584e4         test r12b, r12b
0x00001e18      7449           je 0x1e63
0x00001e1a      807c241600     cmp byte [rsp + 0x16], 0
0x00001e1f      0f85a2020000   jne 0x20c7
0x00001e25      488b442408     mov rax, qword [rsp + 8]
0x00001e2a      4885c0         test rax, rax
0x00001e2d      0f84f5000000   je 0x1f28
0x00001e33      803800         cmp byte [rax], 0
0x00001e36      4989c4         mov r12, rax
0x00001e39      0f84e9000000   je 0x1f28
0x00001e3f      803b2f         cmp byte [rbx], 0x2f
0x00001e42      0f844b030000   je 0x2193
0x00001e48      4889de         mov rsi, rbx
0x00001e4b      4c89e7         mov rdi, r12
0x00001e4e      31d2           xor edx, edx
0x00001e50      e83b0b0000     call sym.file_name_concat
0x00001e55      4989c4         mov r12, rax
0x00001e58      4889df         mov rdi, rbx
0x00001e5b      4c89e3         mov rbx, r12
0x00001e5e      e82df9ffff     call sym.imp.free
0x00001e63      4889df         mov rdi, rbx
0x00001e66      e8a5340000     call sym.xstrdup
0x00001e6b      4584f6         test r14b, r14b
0x00001e6e      4989c4         mov r12, rax
0x00001e71      0f84da000000   je 0x1f51
0x00001e77      4584ff         test r15b, r15b
0x00001e7a      0f843d010000   je 0x1fbd
0x00001e80      31d2           xor edx, edx
0x00001e82      89ee           mov esi, ebp
0x00001e84      4d89e8         mov r8, r13
0x00001e87      b902000000     mov ecx, 2
0x00001e8c      4889c7         mov rdi, rax
0x00001e8f      e87c2b0000     call sym.gen_tempname_len
0x00001e94      85c0           test eax, eax
0x00001e96      89c5           mov ebp, eax
0x00001e98      0f84f1010000   je 0x208f
0x00001e9e      807c241700     cmp byte [rsp + 0x17], 0
0x00001ea3      0f84aa010000   je 0x2053
0x00001ea9      bd01000000     mov ebp, 1
0x00001eae      4883c438       add rsp, 0x38
0x00001eb2      89e8           mov eax, ebp
0x00001eb4      5b             pop rbx
0x00001eb5      5d             pop rbp
0x00001eb6      415c           pop r12
0x00001eb8      415d           pop r13
0x00001eba      415e           pop r14
0x00001ebc      415f           pop r15
0x00001ebe      c3             ret
0x00001ebf      4d85ed         test r13, r13
0x00001ec2      488b34c3       mov rsi, qword [rbx + rax*8]
0x00001ec6      0f846f020000   je 0x213b
0x00001ecc      4883c9ff       or rcx, 0xffffffffffffffff
0x00001ed0      31c0           xor eax, eax
0x00001ed2      4889f7         mov rdi, rsi
0x00001ed5      f2ae           repne scasb al, byte [rdi]
0x00001ed7      4889ca         mov rdx, rcx
0x00001eda      48f7d2         not rdx
0x00001edd      4889d1         mov rcx, rdx
0x00001ee0      4883e901       sub rcx, 1
0x00001ee4      48894c2418     mov qword [rsp + 0x18], rcx
0x00001ee9      740b           je 0x1ef6
0x00001eeb      807c0eff58     cmp byte [rsi + rcx - 1], 0x58
0x00001ef0      0f8454feffff   je 0x1d4a
0x00001ef6      4889f7         mov rdi, rsi
0x00001ef9      e8c2280000     call sym.quote
0x00001efe      488d35db4e00.  lea rsi, str.with___suffix__template__s_must_end_in_X ; 0x6de0 ; "with --suffix, template %s must end in X"
0x00001f05      4889c3         mov rbx, rax
0x00001f08      ba05000000     mov edx, 5
0x00001f0d      31ff           xor edi, edi
0x00001f0f      e87cf9ffff     call sym.imp.dcgettext
0x00001f14      4889d9         mov rcx, rbx
0x00001f17      4889c2         mov rdx, rax
0x00001f1a      31f6           xor esi, esi
0x00001f1c      bf01000000     mov edi, 1
0x00001f21      31c0           xor eax, eax
0x00001f23      e868fbffff     call sym.imp.error
0x00001f28      488d3d194800.  lea rdi, str.TMPDIR                     ; 0x6748 ; "TMPDIR"
0x00001f2f      e84cf8ffff     call sym.imp.getenv
0x00001f34      4885c0         test rax, rax
0x00001f37      4989c4         mov r12, rax
0x00001f3a      7409           je 0x1f45
0x00001f3c      803800         cmp byte [rax], 0
0x00001f3f      0f85fafeffff   jne 0x1e3f
0x00001f45      4c8d25914700.  lea r12, str.tmp                        ; 0x66dd ; "/tmp"
0x00001f4c      e9eefeffff     jmp 0x1e3f
0x00001f51      4584ff         test r15b, r15b
0x00001f54      7427           je 0x1f7d
0x00001f56      31d2           xor edx, edx
0x00001f58      4d89e8         mov r8, r13
0x00001f5b      b902000000     mov ecx, 2
0x00001f60      89ee           mov esi, ebp
0x00001f62      4889c7         mov rdi, rax
0x00001f65      e8a62a0000     call sym.gen_tempname_len
0x00001f6a      85c0           test eax, eax
0x00001f6c      7828           js 0x1f96
0x00001f6e      4c89e7         mov rdi, r12
0x00001f71      31ed           xor ebp, ebp
0x00001f73      e8a8f8ffff     call sym.imp.puts
0x00001f78      e931ffffff     jmp 0x1eae
0x00001f7d      31c9           xor ecx, ecx
0x00001f7f      31d2           xor edx, edx
0x00001f81      4d89e8         mov r8, r13
0x00001f84      89ee           mov esi, ebp
0x00001f86      4889c7         mov rdi, rax
0x00001f89      e8822a0000     call sym.gen_tempname_len
0x00001f8e      85c0           test eax, eax
0x00001f90      0f89ad000000   jns 0x2043
0x00001f96      807c241700     cmp byte [rsp + 0x17], 0
0x00001f9b      0f8508ffffff   jne 0x1ea9
0x00001fa1      4889df         mov rdi, rbx
0x00001fa4      e817280000     call sym.quote
0x00001fa9      ba05000000     mov edx, 5
0x00001fae      4889c5         mov rbp, rax
0x00001fb1      488d35304f00.  lea rsi, str.failed_to_create_file_via_template__s ; 0x6ee8 ; "failed to create file via template %s"
0x00001fb8      e9ad000000     jmp 0x206a
0x00001fbd      31d2           xor edx, edx
0x00001fbf      4d89e8         mov r8, r13
0x00001fc2      b901000000     mov ecx, 1
0x00001fc7      89ee           mov esi, ebp
0x00001fc9      4889c7         mov rdi, rax
0x00001fcc      e83f2a0000     call sym.gen_tempname_len
0x00001fd1      85c0           test eax, eax
0x00001fd3      0f85c5feffff   jne 0x1e9e
0x00001fd9      4c89e7         mov rdi, r12
0x00001fdc      e83ff8ffff     call sym.imp.puts
0x00001fe1      488b3da08020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x00001fe8      c605da802000.  mov byte [obj.stdout_closed], 1         ; [0x20a0c9:1]=0
0x00001fef      e89c070000     call sym.close_stream
0x00001ff4      85c0           test eax, eax
0x00001ff6      89c5           mov ebp, eax
0x00001ff8      0f84b0feffff   je 0x1eae
0x00001ffe      e8adf7ffff     call sym.imp.__errno_location
0x00002003      4c89e7         mov rdi, r12
0x00002006      8b18           mov ebx, dword [rax]
0x00002008      e8b3f7ffff     call sym.imp.remove
0x0000200d      807c241700     cmp byte [rsp + 0x17], 0
0x00002012      0f8591feffff   jne 0x1ea9
0x00002018      488d35304700.  lea rsi, str.write_error                ; 0x674f ; "write error"
0x0000201f      ba05000000     mov edx, 5
0x00002024      31ff           xor edi, edi
0x00002026      bd01000000     mov ebp, 1
0x0000202b      e860f8ffff     call sym.imp.dcgettext
0x00002030      89de           mov esi, ebx
0x00002032      4889c2         mov rdx, rax
0x00002035      31ff           xor edi, edi
0x00002037      31c0           xor eax, eax
0x00002039      e852faffff     call sym.imp.error
0x0000203e      e96bfeffff     jmp 0x1eae
0x00002043      89c7           mov edi, eax
0x00002045      e816f9ffff     call sym.imp.close
0x0000204a      85c0           test eax, eax
0x0000204c      748b           je 0x1fd9
0x0000204e      e943ffffff     jmp 0x1f96
0x00002053      4889df         mov rdi, rbx
0x00002056      e865270000     call sym.quote
0x0000205b      488d35564e00.  lea rsi, str.failed_to_create_directory_via_template__s ; 0x6eb8 ; "failed to create directory via template %s"
0x00002062      4889c5         mov rbp, rax
0x00002065      ba05000000     mov edx, 5
0x0000206a      31ff           xor edi, edi
0x0000206c      e81ff8ffff     call sym.imp.dcgettext
0x00002071      4889c3         mov rbx, rax
0x00002074      e837f7ffff     call sym.imp.__errno_location
0x00002079      8b30           mov esi, dword [rax]
0x0000207b      4889e9         mov rcx, rbp
0x0000207e      4889da         mov rdx, rbx
0x00002081      31ff           xor edi, edi
0x00002083      31c0           xor eax, eax
0x00002085      e806faffff     call sym.imp.error
0x0000208a      e91afeffff     jmp 0x1ea9
0x0000208f      4c89e7         mov rdi, r12
0x00002092      e889f7ffff     call sym.imp.puts
0x00002097      e912feffff     jmp 0x1eae
0x0000209c      488d35774600.  lea rsi, str.too_many_templates         ; 0x671a ; "too many templates"
0x000020a3      ba05000000     mov edx, 5
0x000020a8      31ff           xor edi, edi
0x000020aa      e8e1f7ffff     call sym.imp.dcgettext
0x000020af      31f6           xor esi, esi
0x000020b1      4889c2         mov rdx, rax
0x000020b4      31ff           xor edi, edi
0x000020b6      31c0           xor eax, eax
0x000020b8      e8d3f9ffff     call sym.imp.error
0x000020bd      bf01000000     mov edi, 1
0x000020c2      e8b9020000     call sym.usage
0x000020c7      488d3d7a4600.  lea rdi, str.TMPDIR                     ; 0x6748 ; "TMPDIR"
0x000020ce      e8adf6ffff     call sym.imp.getenv
0x000020d3      4885c0         test rax, rax
0x000020d6      4989c4         mov r12, rax
0x000020d9      7405           je 0x20e0
0x000020db      803800         cmp byte [rax], 0
0x000020de      7518           jne 0x20f8
0x000020e0      488b442408     mov rax, qword [rsp + 8]
0x000020e5      4c8d25f14500.  lea r12, str.tmp                        ; 0x66dd ; "/tmp"
0x000020ec      4885c0         test rax, rax
0x000020ef      7407           je 0x20f8
0x000020f1      803800         cmp byte [rax], 0
0x000020f4      4c0f45e0       cmovne r12, rax
0x000020f8      4889df         mov rdi, rbx
0x000020fb      e8e0070000     call sym.last_component
0x00002100      4839d8         cmp rax, rbx
0x00002103      0f843ffdffff   je 0x1e48
0x00002109      4889df         mov rdi, rbx
0x0000210c      e8af260000     call sym.quote
0x00002111      488d35284d00.  lea rsi, str.invalid_template___s__contains_directory_separator ; 0x6e40 ; "invalid template, %s, contains directory separator"
0x00002118      4889c3         mov rbx, rax
0x0000211b      ba05000000     mov edx, 5
0x00002120      31ff           xor edi, edi
0x00002122      e869f7ffff     call sym.imp.dcgettext
0x00002127      4889d9         mov rcx, rbx
0x0000212a      4889c2         mov rdx, rax
0x0000212d      31f6           xor esi, esi
0x0000212f      bf01000000     mov edi, 1
0x00002134      31c0           xor eax, eax
0x00002136      e855f9ffff     call sym.imp.error
0x0000213b      4889f7         mov rdi, rsi
0x0000213e      e8cd310000     call sym.xstrdup
0x00002143      be58000000     mov esi, 0x58                           ; 'X'
0x00002148      4889c7         mov rdi, rax
0x0000214b      4889c3         mov rbx, rax
0x0000214e      e8bdf7ffff     call sym.imp.strrchr
0x00002153      4885c0         test rax, rax
0x00002156      4c8d4001       lea r8, [rax + 1]
0x0000215a      741a           je 0x2176
0x0000215c      31c0           xor eax, eax
0x0000215e      4883c9ff       or rcx, 0xffffffffffffffff
0x00002162      4c89c7         mov rdi, r8
0x00002165      f2ae           repne scasb al, byte [rdi]
0x00002167      4889c8         mov rax, rcx
0x0000216a      48f7d0         not rax
0x0000216d      488d68ff       lea rbp, [rax - 1]
0x00002171      e936fcffff     jmp 0x1dac
0x00002176      4883c9ff       or rcx, 0xffffffffffffffff
0x0000217a      4889df         mov rdi, rbx
0x0000217d      f2ae           repne scasb al, byte [rdi]
0x0000217f      4889c8         mov rax, rcx
0x00002182      48f7d0         not rax
0x00002185      4c8d4403ff     lea r8, [rbx + rax - 1]
0x0000218a      ebd0           jmp 0x215c
0x0000218c      31ff           xor edi, edi
0x0000218e      e8ed010000     call sym.usage
0x00002193      4889df         mov rdi, rbx
0x00002196      e825260000     call sym.quote
0x0000219b      488d35d64c00.  lea rsi, str.invalid_template___s__with___tmpdir__it_may_not_be_absolute ; 0x6e78 ; "invalid template, %s; with --tmpdir, it may not be absolute"
0x000021a2      4889c3         mov rbx, rax
0x000021a5      ba05000000     mov edx, 5
0x000021aa      31ff           xor edi, edi
0x000021ac      e8dff6ffff     call sym.imp.dcgettext
0x000021b1      4889d9         mov rcx, rbx
0x000021b4      4889c2         mov rdx, rax
0x000021b7      31f6           xor esi, esi
0x000021b9      bf01000000     mov edi, 1
0x000021be      31c0           xor eax, eax
0x000021c0      e8cbf8ffff     call sym.imp.error
0x000021c5      4889df         mov rdi, rbx
0x000021c8      e8f3250000     call sym.quote
0x000021cd      488d35594500.  lea rsi, str.too_few_X_s_in_template__s ; 0x672d ; "too few X's in template %s"
0x000021d4      4889c3         mov rbx, rax
0x000021d7      ba05000000     mov edx, 5
0x000021dc      31ff           xor edi, edi
0x000021de      e8adf6ffff     call sym.imp.dcgettext
0x000021e3      4889d9         mov rcx, rbx
0x000021e6      4889c2         mov rdx, rax
0x000021e9      31f6           xor esi, esi
0x000021eb      bf01000000     mov edi, 1
0x000021f0      31c0           xor eax, eax
0x000021f2      e899f8ffff     call sym.imp.error
0x000021f7      4c89c7         mov rdi, r8
0x000021fa      e8c1250000     call sym.quote
0x000021ff      488d350a4c00.  lea rsi, str.invalid_suffix__s__contains_directory_separator ; 0x6e10 ; "invalid suffix %s, contains directory separator"
0x00002206      4889c3         mov rbx, rax
0x00002209      ba05000000     mov edx, 5
0x0000220e      31ff           xor edi, edi
0x00002210      e87bf6ffff     call sym.imp.dcgettext
0x00002215      4889d9         mov rcx, rbx
0x00002218      4889c2         mov rdx, rax
0x0000221b      31f6           xor esi, esi
0x0000221d      bf01000000     mov edi, 1
0x00002222      31c0           xor eax, eax
0x00002224      e867f8ffff     call sym.imp.error
0x00002229      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002230      31ed           xor ebp, ebp
0x00002232      4989d1         mov r9, rdx
0x00002235      5e             pop rsi
0x00002236      4889e2         mov rdx, rsp
0x00002239      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000223d      50             push rax
0x0000223e      54             push rsp
0x0000223f      4c8d05aa4300.  lea r8, sym.__libc_csu_fini             ; 0x65f0
0x00002246      488d0d334300.  lea rcx, sym.__libc_csu_init            ; 0x6580 ; "AWAVI\x89\xd7AUATL\x8d%\xde4 "
0x0000224d      488d3d1cf9ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1b70 ; "AWAVE1\xffAUATE1\xf6US\x89\xfdH\x89\xf3E1\xe4E1\xedH\x83\xec8H\x8b>\xe8\x19\x0f"
0x00002254      ff157e7d2000   call qword [reloc.__libc_start_main]    ; [0x209fd8:8]=0
0x0000225a      f4             hlt
0x0000225b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002260      488d3d197e20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a080
0x00002267      55             push rbp
0x00002268      488d05117e20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a080
0x0000226f      4839f8         cmp rax, rdi
0x00002272      4889e5         mov rbp, rsp
0x00002275      7419           je 0x2290
0x00002277      488b05527d20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x209fd0:8]=0
0x0000227e      4885c0         test rax, rax
0x00002281      740d           je 0x2290
0x00002283      5d             pop rbp
0x00002284      ffe0           jmp rax
0x00002286      662e0f1f8400.  nop word cs:[rax + rax]
0x00002290      5d             pop rbp
0x00002291      c3             ret
0x00002292      0f1f4000       nop dword [rax]
0x00002296      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000022a0      488d3dd97d20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a080
0x000022a7      488d35d27d20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a080
0x000022ae      55             push rbp
0x000022af      4829fe         sub rsi, rdi
0x000022b2      4889e5         mov rbp, rsp
0x000022b5      48c1fe03       sar rsi, 3
0x000022b9      4889f0         mov rax, rsi
0x000022bc      48c1e83f       shr rax, 0x3f
0x000022c0      4801c6         add rsi, rax
0x000022c3      48d1fe         sar rsi, 1
0x000022c6      7418           je 0x22e0
0x000022c8      488b05197d20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x209fe8:8]=0
0x000022cf      4885c0         test rax, rax
0x000022d2      740c           je 0x22e0
0x000022d4      5d             pop rbp
0x000022d5      ffe0           jmp rax
0x000022d7      660f1f840000.  nop word [rax + rax]
0x000022e0      5d             pop rbp
0x000022e1      c3             ret
0x000022e2      0f1f4000       nop dword [rax]
0x000022e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000022f0      803dd17d2000.  cmp byte [obj.completed.7697], 0        ; [0x20a0c8:1]=0
0x000022f7      752f           jne 0x2328
0x000022f9      48833def7c20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x209ff0:8]=0
0x00002301      55             push rbp
0x00002302      4889e5         mov rbp, rsp
0x00002305      740c           je 0x2313
0x00002307      488b3dfa7c20.  mov rdi, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x0000230e      e84df8ffff     call sym..plt.got
0x00002313      e848ffffff     call sym.deregister_tm_clones
0x00002318      c605a97d2000.  mov byte [obj.completed.7697], 1        ; [0x20a0c8:1]=0
0x0000231f      5d             pop rbp
0x00002320      c3             ret
0x00002321      0f1f80000000.  nop dword [rax]
0x00002328      f3c3           ret
0x0000232a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002330      55             push rbp
0x00002331      4889e5         mov rbp, rsp
0x00002334      5d             pop rbp
0x00002335      e966ffffff     jmp sym.register_tm_clones
0x0000233a      660f1f440000   nop word [rax + rax]
;-- maybe_close_stdout:
0x00002340      803d827d2000.  cmp byte [obj.stdout_closed], 0         ; .//src:138 ; [0x20a0c9:1]=0
0x00002347      741f           je 0x2368
0x00002349      4883ec08       sub rsp, 8
0x0000234d      488b3d6c7d20.  mov rdi, qword [obj.stderr]             ; .//src:141 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00002354      e837040000     call sym.close_stream
0x00002359      85c0           test eax, eax
0x0000235b      7510           jne 0x236d
0x0000235d      4883c408       add rsp, 8                              ; .//src:143
0x00002361      c3             ret
0x00002362      660f1f440000   nop word [rax + rax]
0x00002368      e9c3040000     jmp sym.close_stdout                    ; .//src:140
0x0000236d      bf01000000     mov edi, 1                              ; .//src:142
0x00002372      e869f4ffff     call sym.imp._exit
0x00002377      660f1f840000.  nop word [rax + rax]
;-- usage:
0x00002380      4155           push r13                                ; .//src:62
0x00002382      4154           push r12
0x00002384      ba05000000     mov edx, 5                              ; .//src:64
0x00002389      55             push rbp                                ; .//src:62
0x0000238a      53             push rbx
0x0000238b      89fd           mov ebp, edi
0x0000238d      4881ec880000.  sub rsp, 0x88
0x00002394      488b1d457d20.  mov rbx, qword [obj.program_name]       ; [0x20a0e0:8]=0
0x0000239b      64488b042528.  mov rax, qword fs:[0x28]
0x000023a4      4889442478     mov qword [rsp + 0x78], rax
0x000023a9      31c0           xor eax, eax
0x000023ab      85ff           test edi, edi                           ; .//src:63
0x000023ad      742e           je 0x23dd
0x000023af      488d35da4300.  lea rsi, str.Try___s___help__for_more_information. ; .//src:64 ; 0x6790 ; "Try '%s --help' for more information.\n"
0x000023b6      31ff           xor edi, edi
0x000023b8      e8d3f4ffff     call sym.imp.dcgettext
0x000023bd      488b3dfc7c20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/src/temp.c:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x000023c4      4889c2         mov rdx, rax
0x000023c7      4889d9         mov rcx, rbx
0x000023ca      be01000000     mov esi, 1
0x000023cf      31c0           xor eax, eax
0x000023d1      e84af7ffff     call sym.imp.__fprintf_chk
0x000023d6      89ef           mov edi, ebp                            ; .//src:103
0x000023d8      e823f7ffff     call sym.imp.exit
0x000023dd      488d35d44300.  lea rsi, str.Usage:__s__OPTION_...__TEMPLATE ; .//src:67 ; 0x67b8 ; "Usage: %s [OPTION]... [TEMPLATE]\n"
0x000023e4      31ff           xor edi, edi
0x000023e6      e8a5f4ffff     call sym.imp.dcgettext
0x000023eb      4889da         mov rdx, rbx                            ; ../coreutils-8.31/src/temp.c:104
0x000023ee      4889c6         mov rsi, rax
0x000023f1      bf01000000     mov edi, 1
0x000023f6      31c0           xor eax, eax
0x000023f8      e863f6ffff     call sym.imp.__printf_chk
0x000023fd      488b1d847c20.  mov rbx, qword [obj.stdout]             ; .//src:68 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x00002404      488d35d54300.  lea rsi, str.Create_a_temporary_file_or_directory__safely__and_print_its_name.__TEMPLATE_must_contain_at_least_3_consecutive__X_s_in_last_component.__If_TEMPLATE_is_not_specified__use_tmp.XXXXXXXXXX__and___tmpdir_is_implied. ; 0x67e0 ; "Create a temporary file or directory, safely, and print its name.\nTEMPLATE must contain at least 3 consecutive 'X's in last component.\nIf TEMPLATE is not specified, use tmp.XXXXXXXXXX, and --tmpdir is implied.\n"
0x0000240b      ba05000000     mov edx, 5
0x00002410      31ff           xor edi, edi
0x00002412      e879f4ffff     call sym.imp.dcgettext
0x00002417      4889de         mov rsi, rbx
0x0000241a      4889c7         mov rdi, rax
0x0000241d      e86ef5ffff     call sym.imp.fputs_unlocked
0x00002422      488b1d5f7c20.  mov rbx, qword [obj.stdout]             ; .//src:73 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x00002429      488d35884400.  lea rsi, str.Files_are_created_u_rw__and_directories_u_rwx__minus_umask_restrictions. ; 0x68b8 ; "Files are created u+rw, and directories u+rwx, minus umask restrictions.\n"
0x00002430      ba05000000     mov edx, 5
0x00002435      31ff           xor edi, edi
0x00002437      e854f4ffff     call sym.imp.dcgettext
0x0000243c      4889de         mov rsi, rbx
0x0000243f      4889c7         mov rdi, rax
0x00002442      e849f5ffff     call sym.imp.fputs_unlocked
0x00002447      488b353a7c20.  mov rsi, qword [obj.stdout]             ; .//src:76 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x0000244e      bf0a000000     mov edi, 0xa
0x00002453      e858f5ffff     call sym.imp.fputc_unlocked
0x00002458      488b1d297c20.  mov rbx, qword [obj.stdout]             ; .//src:77 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x0000245f      488d35a24400.  lea rsi, str.d____directory_____create_a_directory__not_a_file_____u____dry_run_______do_not_create_anything__merely_print_a_name__unsafe______q____quiet_________suppress_diagnostics_about_file_dir_creation_failure ; 0x6908 ; "  -d, --directory     create a directory, not a file\n  -u, --dry-run       do not create anything; merely print a name (unsafe)\n  -q, --quiet         suppress diagnostics about file/dir-creation failure\n"
0x00002466      ba05000000     mov edx, 5
0x0000246b      31ff           xor edi, edi
0x0000246d      e81ef4ffff     call sym.imp.dcgettext
0x00002472      4889de         mov rsi, rbx
0x00002475      4889c7         mov rdi, rax
0x00002478      e813f5ffff     call sym.imp.fputs_unlocked
0x0000247d      488b1d047c20.  mov rbx, qword [obj.stdout]             ; .//src:82 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x00002484      488d354d4500.  lea rsi, str.suffix_SUFF___append_SUFF_to_TEMPLATE__SUFF_must_not_contain_a_slash.__________________________This_option_is_implied_if_TEMPLATE_does_not_end_in_X ; 0x69d8 ; "      --suffix=SUFF   append SUFF to TEMPLATE; SUFF must not contain a slash.\n                        This option is implied if TEMPLATE does not end in X\n"
0x0000248b      ba05000000     mov edx, 5
0x00002490      31ff           xor edi, edi
0x00002492      e8f9f3ffff     call sym.imp.dcgettext
0x00002497      4889de         mov rsi, rbx
0x0000249a      4889c7         mov rdi, rax
0x0000249d      e8eef4ffff     call sym.imp.fputs_unlocked
0x000024a2      488b1ddf7b20.  mov rbx, qword [obj.stdout]             ; .//src:86 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x000024a9      488d35c84500.  lea rsi, str.p_DIR____tmpdir__DIR___interpret_TEMPLATE_relative_to_DIR__if_DIR_is_not__________________________specified__use__TMPDIR_if_set__else__tmp.__With__________________________this_option__TEMPLATE_must_not_be_an_absolute_name___________________________unlike_with__t__TEMPLATE_may_contain_slashes__but__________________________mktemp_creates_only_the_final_component ; 0x6a78 ; "  -p DIR, --tmpdir[=DIR]  interpret TEMPLATE relative to DIR; if DIR is not\n                        specified, use $TMPDIR if set, else /tmp.  With\n                        this option, TEMPLATE must not be an absolute name;\n                        unlike with -t, TEMPLATE may contain slashes, but\n                        mktemp creates only the final component\n"
0x000024b0      ba05000000     mov edx, 5
0x000024b5      31ff           xor edi, edi
0x000024b7      e8d4f3ffff     call sym.imp.dcgettext
0x000024bc      4889de         mov rsi, rbx
0x000024bf      4889c7         mov rdi, rax
0x000024c2      e8c9f4ffff     call sym.imp.fputs_unlocked
0x000024c7      488b1dba7b20.  mov rbx, qword [obj.stdout]             ; .//src:93 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x000024ce      488d35134700.  lea rsi, str.t__________________interpret_TEMPLATE_as_a_single_file_name_component___________________________relative_to_a_directory:__TMPDIR__if_set__else_the__________________________directory_specified_via__p__else__tmp__deprecated ; 0x6be8 ; "  -t                  interpret TEMPLATE as a single file name component,\n                        relative to a directory: $TMPDIR, if set; else the\n                        directory specified via -p; else /tmp [deprecated]\n"
0x000024d5      ba05000000     mov edx, 5
0x000024da      31ff           xor edi, edi
0x000024dc      e8aff3ffff     call sym.imp.dcgettext
0x000024e1      4889de         mov rsi, rbx
0x000024e4      4889c7         mov rdi, rax
0x000024e7      e8a4f4ffff     call sym.imp.fputs_unlocked
0x000024ec      488b1d957b20.  mov rbx, qword [obj.stdout]             ; .//src:98 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x000024f3      488d35d64700.  lea rsi, str.help_____display_this_help_and_exit ; 0x6cd0 ; "      --help     display this help and exit\n"
0x000024fa      ba05000000     mov edx, 5
0x000024ff      31ff           xor edi, edi
0x00002501      e88af3ffff     call sym.imp.dcgettext
0x00002506      4889de         mov rsi, rbx
0x00002509      4889c7         mov rdi, rax
0x0000250c      e87ff4ffff     call sym.imp.fputs_unlocked
0x00002511      488b1d707b20.  mov rbx, qword [obj.stdout]             ; .//src:99 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x00002518      488d35e14700.  lea rsi, str.version__output_version_information_and_exit ; 0x6d00 ; "      --version  output version information and exit\n"
0x0000251f      ba05000000     mov edx, 5
0x00002524      31ff           xor edi, edi
0x00002526      e865f3ffff     call sym.imp.dcgettext
0x0000252b      4889de         mov rsi, rbx
0x0000252e      4889c7         mov rdi, rax
0x00002531      488d1dec4000.  lea rbx, str.mktemp                     ; 0x6624 ; "mktemp"
0x00002538      e853f4ffff     call sym.imp.fputs_unlocked
0x0000253d      488d05e74000.  lea rax, [0x0000662b]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633 ; "["
0x00002544      488d0d214100.  lea rcx, str.sha256sum                  ; 0x666c ; "sha256sum"
0x0000254b      48c744246000.  mov qword [rsp + 0x60], 0
0x00002554      48c744246800.  mov qword [rsp + 0x68], 0
0x0000255d      4889e2         mov rdx, rsp                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:644
0x00002560      48890424       mov qword [rsp], rax                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633
0x00002564      488d05c24000.  lea rax, str.test_invocation            ; 0x662d ; "test invocation"
0x0000256b      48894c2430     mov qword [rsp + 0x30], rcx
0x00002570      488d0dff4000.  lea rcx, str.sha384sum                  ; 0x6676 ; "sha384sum"
0x00002577      4889442408     mov qword [rsp + 8], rax
0x0000257c      488d05224100.  lea rax, [0x000066a5]                   ; "coreutils"
0x00002583      48894c2440     mov qword [rsp + 0x40], rcx
0x00002588      488d0df14000.  lea rcx, str.sha512sum                  ; 0x6680 ; "sha512sum"
0x0000258f      4889442410     mov qword [rsp + 0x10], rax
0x00002594      488d05a24000.  lea rax, str.Multi_call_invocation      ; 0x663d ; "Multi-call invocation"
0x0000259b      48894c2450     mov qword [rsp + 0x50], rcx
0x000025a0      4889442418     mov qword [rsp + 0x18], rax
0x000025a5      488d05a74000.  lea rax, str.sha224sum                  ; 0x6653 ; "sha224sum"
0x000025ac      4889442420     mov qword [rsp + 0x20], rax
0x000025b1      488d05a54000.  lea rax, str.sha2_utilities             ; 0x665d ; "sha2 utilities"
0x000025b8      4889442428     mov qword [rsp + 0x28], rax
0x000025bd      4889442438     mov qword [rsp + 0x38], rax
0x000025c2      4889442448     mov qword [rsp + 0x48], rax
0x000025c7      4889442458     mov qword [rsp + 0x58], rax
0x000025cc      0f1f4000       nop dword [rax]
0x000025d0      4883c210       add rdx, 0x10                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:647
0x000025d4      488b3a         mov rdi, qword [rdx]                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:646
0x000025d7      4885ff         test rdi, rdi
0x000025da      7413           je 0x25ef
0x000025dc      b907000000     mov ecx, 7
0x000025e1      4889de         mov rsi, rbx
0x000025e4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000025e6      0f97c0         seta al
0x000025e9      1c00           sbb al, 0
0x000025eb      84c0           test al, al
0x000025ed      75e1           jne 0x25d0
0x000025ef      4c8b6208       mov r12, qword [rdx + 8]                ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x000025f3      31ff           xor edi, edi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x000025f5      ba05000000     mov edx, 5
0x000025fa      488d35894000.  lea rsi, str.s_online_help:___s         ; 0x668a ; "\n%s online help: <%s>\n"
0x00002601      4d85e4         test r12, r12                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x00002604      0f84c1000000   je 0x26cb
0x0000260a      e881f2ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x0000260f      488d0d224700.  lea rcx, str.https:__www.gnu.org_software_coreutils ; ../coreutils-8.31/src/temp.c:104 ; 0x6d38 ; "https://www.gnu.org/software/coreutils/"
0x00002616      488d15844000.  lea rdx, str.GNU_coreutils              ; 0x66a1 ; "GNU coreutils"
0x0000261d      4889c6         mov rsi, rax
0x00002620      bf01000000     mov edi, 1
0x00002625      31c0           xor eax, eax
0x00002627      e834f4ffff     call sym.imp.__printf_chk
0x0000262c      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x0000262e      bf05000000     mov edi, 5
0x00002633      e818f4ffff     call sym.imp.setlocale
0x00002638      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x0000263b      741c           je 0x2659
0x0000263d      488d356b4000.  lea rsi, [0x000066af]                   ; "en_"
0x00002644      ba03000000     mov edx, 3
0x00002649      4889c7         mov rdi, rax
0x0000264c      e87ff1ffff     call sym.imp.strncmp
0x00002651      85c0           test eax, eax
0x00002653      0f8507010000   jne 0x2760
0x00002659      488d35534000.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x66b3 ; "Full documentation <%s%s>\n"
0x00002660      31ff           xor edi, edi
0x00002662      ba05000000     mov edx, 5
0x00002667      e824f2ffff     call sym.imp.dcgettext
0x0000266c      488d0db13f00.  lea rcx, str.mktemp                     ; ../coreutils-8.31/src/temp.c:104 ; 0x6624 ; "mktemp"
0x00002673      488d15be4600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6d38 ; "https://www.gnu.org/software/coreutils/"
0x0000267a      4889c6         mov rsi, rax
0x0000267d      bf01000000     mov edi, 1
0x00002682      31c0           xor eax, eax
0x00002684      e8d7f3ffff     call sym.imp.__printf_chk
0x00002689      4939dc         cmp r12, rbx                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668
0x0000268c      488d0db43f00.  lea rcx, [0x00006647]                   ; " invocation"
0x00002693      488d1dbe4e00.  lea rbx, [0x00007558]
0x0000269a      480f44d9       cmove rbx, rcx
0x0000269e      488d35034700.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6da8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000026a5      31ff           xor edi, edi
0x000026a7      ba05000000     mov edx, 5
0x000026ac      e8dff1ffff     call sym.imp.dcgettext
0x000026b1      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/src/temp.c:104
0x000026b4      4889c6         mov rsi, rax
0x000026b7      4c89e2         mov rdx, r12
0x000026ba      bf01000000     mov edi, 1
0x000026bf      31c0           xor eax, eax
0x000026c1      e89af3ffff     call sym.imp.__printf_chk
0x000026c6      e90bfdffff     jmp 0x23d6
0x000026cb      e8c0f1ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x000026d0      488d0d614600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; ../coreutils-8.31/src/temp.c:104 ; 0x6d38 ; "https://www.gnu.org/software/coreutils/"
0x000026d7      488d15c33f00.  lea rdx, str.GNU_coreutils              ; 0x66a1 ; "GNU coreutils"
0x000026de      4889c6         mov rsi, rax
0x000026e1      bf01000000     mov edi, 1
0x000026e6      31c0           xor eax, eax
0x000026e8      e873f3ffff     call sym.imp.__printf_chk
0x000026ed      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x000026ef      bf05000000     mov edi, 5
0x000026f4      e857f3ffff     call sym.imp.setlocale
0x000026f9      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x000026fc      7418           je 0x2716
0x000026fe      488d35aa3f00.  lea rsi, [0x000066af]                   ; "en_"
0x00002705      ba03000000     mov edx, 3
0x0000270a      4889c7         mov rdi, rax
0x0000270d      e8bef0ffff     call sym.imp.strncmp
0x00002712      85c0           test eax, eax
0x00002714      7543           jne 0x2759
0x00002716      488d35963f00.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x66b3 ; "Full documentation <%s%s>\n"
0x0000271d      ba05000000     mov edx, 5
0x00002722      31ff           xor edi, edi
0x00002724      4c8d25f93e00.  lea r12, str.mktemp                     ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; 0x6624 ; "mktemp"
0x0000272b      488d1d153f00.  lea rbx, [0x00006647]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668 ; " invocation"
0x00002732      e859f1ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666
0x00002737      488d0de63e00.  lea rcx, str.mktemp                     ; ../coreutils-8.31/src/temp.c:104 ; 0x6624 ; "mktemp"
0x0000273e      488d15f34500.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6d38 ; "https://www.gnu.org/software/coreutils/"
0x00002745      4889c6         mov rsi, rax
0x00002748      bf01000000     mov edi, 1
0x0000274d      31c0           xor eax, eax
0x0000274f      e80cf3ffff     call sym.imp.__printf_chk
0x00002754      e945ffffff     jmp 0x269e
0x00002759      4c8d25c43e00.  lea r12, str.mktemp                     ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; 0x6624 ; "mktemp"
0x00002760      4c8b2d217920.  mov r13, qword [obj.stdout]             ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x00002767      488d35f24500.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6d60 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000276e      31ff           xor edi, edi
0x00002770      ba05000000     mov edx, 5
0x00002775      e816f1ffff     call sym.imp.dcgettext
0x0000277a      4c89ee         mov rsi, r13
0x0000277d      4889c7         mov rdi, rax
0x00002780      e80bf2ffff     call sym.imp.fputs_unlocked
0x00002785      e9cffeffff     jmp 0x2659
0x0000278a      660f1f440000   nop word [rax + rax]
;-- close_stream:
0x00002790      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00002792      55             push rbp
0x00002793      4889fd         mov rbp, rdi
0x00002796      53             push rbx
0x00002797      e854f0ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000279c      8b5d00         mov ebx, dword [rbp]
0x0000279f      4889ef         mov rdi, rbp
0x000027a2      4989c4         mov r12, rax
0x000027a5      e8c62b0000     call sym.rpl_fclose
0x000027aa      83e320         and ebx, 0x20                           ; "@"
0x000027ad      85db           test ebx, ebx
0x000027af      7517           jne 0x27c8
0x000027b1      85c0           test eax, eax
0x000027b3      740a           je 0x27bf                               ; stdio.h:-186
0x000027b5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000027b8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000027bd      7439           je 0x27f8
0x000027bf      5b             pop rbx
0x000027c0      5d             pop rbp
0x000027c1      415c           pop r12
0x000027c3      c3             ret
0x000027c4      0f1f4000       nop dword [rax]
0x000027c8      85c0           test eax, eax
0x000027ca      751c           jne 0x27e8
0x000027cc      e8dfefffff     call sym.imp.__errno_location
0x000027d1      c70000000000   mov dword [rax], 0
0x000027d7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000027dc      5b             pop rbx
0x000027dd      5d             pop rbp
0x000027de      415c           pop r12
0x000027e0      c3             ret
0x000027e1      0f1f80000000.  nop dword [rax]
0x000027e8      5b             pop rbx
0x000027e9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000027ee      5d             pop rbp                                 ; stdio.h:-186
0x000027ef      415c           pop r12
0x000027f1      c3             ret
0x000027f2      660f1f440000   nop word [rax + rax]
0x000027f8      e8b3efffff     call sym.imp.__errno_location
0x000027fd      833809         cmp dword [rax], 9
0x00002800      5b             pop rbx
0x00002801      5d             pop rbp
0x00002802      415c           pop r12                                 ; stdio.h:-178
0x00002804      0f95c0         setne al
0x00002807      0fb6c0         movzx eax, al
0x0000280a      f7d8           neg eax
0x0000280c      c3             ret
0x0000280d      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00002810      48893dc17820.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20a0d8:8]=0
0x00002817      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002818      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002820      40883da97820.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20a0d0:1]=0
0x00002827      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002828      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002830      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002831      53             push rbx
0x00002832      4883ec08       sub rsp, 8
0x00002836      488b3d4b7820.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x0000283d      e84effffff     call sym.close_stream
0x00002842      85c0           test eax, eax
0x00002844      7416           je 0x285c
0x00002846      e865efffff     call sym.imp.__errno_location
0x0000284b      803d7e782000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20a0d0:1]=0
0x00002852      4889c3         mov rbx, rax
0x00002855      741c           je 0x2873
0x00002857      833820         cmp dword [rax], 0x20
0x0000285a      7517           jne 0x2873
0x0000285c      488b3d5d7820.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00002863      e828ffffff     call sym.close_stream
0x00002868      85c0           test eax, eax
0x0000286a      7546           jne 0x28b2
0x0000286c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002870      5b             pop rbx
0x00002871      5d             pop rbp
0x00002872      c3             ret
0x00002873      488d35d53e00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x674f ; "write error"
0x0000287a      31ff           xor edi, edi
0x0000287c      ba05000000     mov edx, 5
0x00002881      e80af0ffff     call sym.imp.dcgettext
0x00002886      488b3d4b7820.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20a0d8:8]=0
0x0000288d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002890      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002893      7428           je 0x28bd
0x00002895      e8261d0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000289a      8b33           mov esi, dword [rbx]
0x0000289c      488d15704600.  lea rdx, str.s:__s                      ; 0x6f13 ; "%s: %s"
0x000028a3      4889c1         mov rcx, rax
0x000028a6      4989e8         mov r8, rbp
0x000028a9      31ff           xor edi, edi
0x000028ab      31c0           xor eax, eax
0x000028ad      e8def1ffff     call sym.imp.error
0x000028b2      8b3d60772000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20a018:4]=1
0x000028b8      e823efffff     call sym.imp._exit
0x000028bd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000028bf      488d15514600.  lea rdx, [0x00006f17]                   ; "%s"
0x000028c6      4889c1         mov rcx, rax
0x000028c9      31ff           xor edi, edi
0x000028cb      31c0           xor eax, eax
0x000028cd      e8bef1ffff     call sym.imp.error
0x000028d2      ebde           jmp 0x28b2
0x000028d4      662e0f1f8400.  nop word cs:[rax + rax]
0x000028de      6690           nop
;-- last_component:
0x000028e0      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x000028e3      4889f8         mov rax, rdi
0x000028e6      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x000028e9      7511           jne 0x28fc
0x000028eb      0f1f440000     nop dword [rax + rax]
0x000028f0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x000028f4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x000028f7      80fa2f         cmp dl, 0x2f
0x000028fa      74f4           je 0x28f0
0x000028fc      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000028fe      743a           je 0x293a
0x00002900      4889c1         mov rcx, rax
0x00002903      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x00002905      eb1e           jmp 0x2925
0x00002907      660f1f840000.  nop word [rax + rax]
0x00002910      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x00002913      7405           je 0x291a
0x00002915      4889c8         mov rax, rcx
0x00002918      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x0000291a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000291e      0fb611         movzx edx, byte [rcx]
0x00002921      84d2           test dl, dl
0x00002923      7415           je 0x293a
0x00002925      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x00002928      75e6           jne 0x2910
0x0000292a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000292e      0fb611         movzx edx, byte [rcx]
0x00002931      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x00002936      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00002938      75eb           jne 0x2925
0x0000293a      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x0000293c      0f1f4000       nop dword [rax]
;-- base_len:
0x00002940      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00002941      4889fb         mov rbx, rdi
0x00002944      e867efffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00002949      4883f801       cmp rax, 1
0x0000294d      760b           jbe 0x295a
0x0000294f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00002954      488d50ff       lea rdx, [rax - 1]
0x00002958      740e           je 0x2968
0x0000295a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000295b      c3             ret
0x0000295c      0f1f4000       nop dword [rax]
0x00002960      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00002963      0f1f440000     nop dword [rax + rax]
0x00002968      4883fa01       cmp rdx, 1
0x0000296c      7412           je 0x2980
0x0000296e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00002973      488d42ff       lea rax, [rdx - 1]
0x00002977      74e7           je 0x2960
0x00002979      4889d0         mov rax, rdx
0x0000297c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000297d      c3             ret
0x0000297e      6690           nop
0x00002980      b801000000     mov eax, 1
0x00002985      5b             pop rbx
0x00002986      c3             ret
0x00002987      660f1f840000.  nop word [rax + rax]
;-- file_name_concat:
0x00002990      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:36
0x00002994      e817000000     call sym.mfile_name_concat              ; ../coreutils-8.31/lib/filenamecat.c:37
0x00002999      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat.c:38
0x0000299c      7405           je 0x29a3
0x0000299e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:41
0x000029a2      c3             ret
0x000029a3      e888290000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/filenamecat.c:39
0x000029a8      0f1f84000000.  nop dword [rax + rax]
;-- mfile_name_concat:
0x000029b0      4157           push r15                                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:48
0x000029b2      4156           push r14
0x000029b4      4989d7         mov r15, rdx
0x000029b7      4155           push r13
0x000029b9      4154           push r12
0x000029bb      4989fc         mov r12, rdi
0x000029be      55             push rbp
0x000029bf      53             push rbx
0x000029c0      4889f5         mov rbp, rsi
0x000029c3      4883ec18       sub rsp, 0x18
0x000029c7      e814ffffff     call sym.last_component                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:49
0x000029cc      4889c3         mov rbx, rax
0x000029cf      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x000029d2      e869ffffff     call sym.base_len
0x000029d7      4c29e3         sub rbx, r12                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x000029da      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x000029dd      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x000029e0      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x000029e3      e8c8eeffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x000029e8      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x000029eb      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x000029ee      7430           je 0x2a20                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x000029f0      41807c1cff2f   cmp byte [r12 + rbx - 1], 0x2f          ; ../coreutils-8.31/lib/filenamecat-lgpl.c:57
0x000029f6      0f84a4000000   je 0x2aa0
0x000029fc      31c0           xor eax, eax
0x000029fe      807d002f       cmp byte [rbp], 0x2f
0x00002a02      ba00000000     mov edx, 0
0x00002a07      0f95c0         setne al
0x00002a0a      48890424       mov qword [rsp], rax
0x00002a0e      b82f000000     mov eax, 0x2f                           ; '/'
0x00002a13      0f44c2         cmove eax, edx
0x00002a16      8844240f       mov byte [rsp + 0xf], al
0x00002a1a      eb22           jmp 0x2a3e
0x00002a1c      0f1f4000       nop dword [rax]
0x00002a20      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:60
0x00002a22      807d002f       cmp byte [rbp], 0x2f
0x00002a26      ba00000000     mov edx, 0
0x00002a2b      0f94c0         sete al
0x00002a2e      48890424       mov qword [rsp], rax
0x00002a32      b82e000000     mov eax, 0x2e                           ; '.'
0x00002a37      0f45c2         cmovne eax, edx
0x00002a3a      8844240f       mov byte [rsp + 0xf], al
0x00002a3e      4a8d7c3301     lea rdi, [rbx + r14 + 1]                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x00002a43      48033c24       add rdi, qword [rsp]
0x00002a47      e8a4efffff     call sym.imp.malloc
0x00002a4c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x00002a4f      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x00002a52      7432           je 0x2a86                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x00002a54      4889c7         mov rdi, rax                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00002a57      4889da         mov rdx, rbx
0x00002a5a      4c89e6         mov rsi, r12
0x00002a5d      e81ef0ffff     call sym.imp.mempcpy
0x00002a62      0fb64c240f     movzx ecx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x00002a67      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:78
0x00002a6b      4801c7         add rdi, rax
0x00002a6e      4d85ff         test r15, r15                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x00002a71      8808           mov byte [rax], cl                      ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x00002a73      7403           je 0x2a78                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x00002a75      49893f         mov qword [r15], rdi                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:81
0x00002a78      4c89f2         mov rdx, r14                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00002a7b      4889ee         mov rsi, rbp
0x00002a7e      e8fdefffff     call sym.imp.mempcpy
0x00002a83      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/filenamecat-lgpl.c:84
0x00002a86      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:87
0x00002a8a      4c89e8         mov rax, r13
0x00002a8d      5b             pop rbx
0x00002a8e      5d             pop rbp
0x00002a8f      415c           pop r12
0x00002a91      415d           pop r13
0x00002a93      415e           pop r14
0x00002a95      415f           pop r15
0x00002a97      c3             ret
0x00002a98      0f1f84000000.  nop dword [rax + rax]
0x00002aa0      48c704240000.  mov qword [rsp], 0
0x00002aa8      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:53
0x00002aad      eb8f           jmp 0x2a3e
0x00002aaf      90             nop
;-- set_program_name:
0x00002ab0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002ab3      53             push rbx
0x00002ab4      7477           je 0x2b2d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002ab6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002abb      4889fb         mov rbx, rdi
0x00002abe      e84deeffff     call sym.imp.strrchr
0x00002ac3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002ac6      7455           je 0x2b1d
0x00002ac8      4c8d4001       lea r8, [rax + 1]
0x00002acc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002acf      4829da         sub rdx, rbx
0x00002ad2      4883fa06       cmp rdx, 6
0x00002ad6      7e45           jle 0x2b1d
0x00002ad8      488d70fa       lea rsi, [rax - 6]
0x00002adc      488d3d754400.  lea rdi, str..libs                      ; 0x6f58 ; "/.libs/"
0x00002ae3      b907000000     mov ecx, 7
0x00002ae8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002aea      0f97c2         seta dl
0x00002aed      80da00         sbb dl, 0
0x00002af0      84d2           test dl, dl
0x00002af2      7529           jne 0x2b1d
0x00002af4      488d3d654400.  lea rdi, [0x00006f60]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002afb      b903000000     mov ecx, 3
0x00002b00      4c89c6         mov rsi, r8
0x00002b03      4c89c3         mov rbx, r8
0x00002b06      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002b08      0f97c2         seta dl
0x00002b0b      80da00         sbb dl, 0
0x00002b0e      84d2           test dl, dl
0x00002b10      750b           jne 0x2b1d
0x00002b12      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002b16      48891d637520.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20a080:8]=0
0x00002b1d      48891dbc7520.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20a0e0:8]=0
0x00002b24      48891d757520.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20a0a0:8]=0
0x00002b2b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002b2c      c3             ret
0x00002b2d      488b0d8c7520.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00002b34      488d3de54300.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x6f20 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002b3b      ba37000000     mov edx, 0x37                           ; '7'
0x00002b40      be01000000     mov esi, 1
0x00002b45      e8c6efffff     call sym.imp.fwrite
0x00002b4a      e851ecffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002b4f      90             nop
;-- gettext_quote.part.1:
0x00002b50      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002b51      53             push rbx
0x00002b52      4889fd         mov rbp, rdi
0x00002b55      89f3           mov ebx, esi
0x00002b57      4883ec08       sub rsp, 8
0x00002b5b      e8202a0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002b60      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002b63      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002b66      80fa55         cmp dl, 0x55
0x00002b69      7475           je 0x2be0
0x00002b6b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002b6e      7420           je 0x2b90
0x00002b70      488d05fc4300.  lea rax, str.l______l                   ; 0x6f73 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002b77      488d15f74300.  lea rdx, [0x00006f75]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002b7e      83fb09         cmp ebx, 9
0x00002b81      480f45c2       cmovne rax, rdx
0x00002b85      4883c408       add rsp, 8
0x00002b89      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002b8a      5d             pop rbp
0x00002b8b      c3             ret
0x00002b8c      0f1f4000       nop dword [rax]
0x00002b90      0fb65001       movzx edx, byte [rax + 1]
0x00002b94      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002b97      80fa42         cmp dl, 0x42
0x00002b9a      75d4           jne 0x2b70
0x00002b9c      80780231       cmp byte [rax + 2], 0x31
0x00002ba0      75ce           jne 0x2b70
0x00002ba2      80780338       cmp byte [rax + 3], 0x38
0x00002ba6      75c8           jne 0x2b70
0x00002ba8      80780430       cmp byte [rax + 4], 0x30
0x00002bac      75c2           jne 0x2b70
0x00002bae      80780533       cmp byte [rax + 5], 0x33
0x00002bb2      75bc           jne 0x2b70
0x00002bb4      80780630       cmp byte [rax + 6], 0x30
0x00002bb8      75b6           jne 0x2b70
0x00002bba      80780700       cmp byte [rax + 7], 0
0x00002bbe      75b0           jne 0x2b70
0x00002bc0      807d0060       cmp byte [rbp], 0x60
0x00002bc4      488d05a14300.  lea rax, [0x00006f6c]
0x00002bcb      488d159e4300.  lea rdx, [0x00006f70]
0x00002bd2      480f45c2       cmovne rax, rdx
0x00002bd6      4883c408       add rsp, 8
0x00002bda      5b             pop rbx
0x00002bdb      5d             pop rbp
0x00002bdc      c3             ret
0x00002bdd      0f1f00         nop dword [rax]
0x00002be0      0fb65001       movzx edx, byte [rax + 1]
0x00002be4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002be7      80fa54         cmp dl, 0x54
0x00002bea      7584           jne 0x2b70
0x00002bec      0fb65002       movzx edx, byte [rax + 2]
0x00002bf0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002bf3      80fa46         cmp dl, 0x46
0x00002bf6      0f8574ffffff   jne 0x2b70
0x00002bfc      8078032d       cmp byte [rax + 3], 0x2d
0x00002c00      0f856affffff   jne 0x2b70
0x00002c06      80780438       cmp byte [rax + 4], 0x38
0x00002c0a      0f8560ffffff   jne 0x2b70
0x00002c10      80780500       cmp byte [rax + 5], 0
0x00002c14      0f8556ffffff   jne 0x2b70
0x00002c1a      807d0060       cmp byte [rbp], 0x60
0x00002c1e      488d053f4300.  lea rax, [0x00006f64]                   ; "\u2018"
0x00002c25      488d153c4300.  lea rdx, [0x00006f68]                   ; "\u2019"
0x00002c2c      480f45c2       cmovne rax, rdx
0x00002c30      4883c408       add rsp, 8
0x00002c34      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002c35      5d             pop rbp
0x00002c36      c3             ret
0x00002c37      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002c40      4157           push r15
0x00002c42      4156           push r14
0x00002c44      4589c7         mov r15d, r8d
0x00002c47      4155           push r13
0x00002c49      4154           push r12
0x00002c4b      4989fe         mov r14, rdi
0x00002c4e      55             push rbp
0x00002c4f      53             push rbx
0x00002c50      4489cb         mov ebx, r9d
0x00002c53      4989f5         mov r13, rsi
0x00002c56      4889cd         mov rbp, rcx
0x00002c59      83e302         and ebx, 2
0x00002c5c      4881ecb80000.  sub rsp, 0xb8
0x00002c63      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002c6b      4889542410     mov qword [rsp + 0x10], rdx
0x00002c70      4489442408     mov dword [rsp + 8], r8d
0x00002c75      44894c2478     mov dword [rsp + 0x78], r9d
0x00002c7a      4889442420     mov qword [rsp + 0x20], rax
0x00002c7f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002c87      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002c8c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002c94      4889442460     mov qword [rsp + 0x60], rax
0x00002c99      64488b042528.  mov rax, qword fs:[0x28]
0x00002ca2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002caa      31c0           xor eax, eax
0x00002cac      e8efebffff     call sym.imp.__ctype_get_mb_cur_max
0x00002cb1      4183ff0a       cmp r15d, 0xa
0x00002cb5      4889442458     mov qword [rsp + 0x58], rax
0x00002cba      0f87af110000   ja 0x3e6f
0x00002cc0      488d0d194300.  lea rcx, [0x00006fe0]
0x00002cc7      4489fa         mov edx, r15d
0x00002cca      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002cce      4801c8         add rax, rcx
0x00002cd1      ffe0           jmp rax
0x00002cd3      c644240e01     mov byte [rsp + 0xe], 1
0x00002cd8      c644247c00     mov byte [rsp + 0x7c], 0
0x00002cdd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002ce0      48c744245000.  mov qword [rsp + 0x50], 0
0x00002ce9      c644240f01     mov byte [rsp + 0xf], 1
0x00002cee      c644240d00     mov byte [rsp + 0xd], 0
0x00002cf3      488d057b4200.  lea rax, [0x00006f75]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002cfa      48c744241801.  mov qword [rsp + 0x18], 1
0x00002d03      4531ff         xor r15d, r15d
0x00002d06      c74424080200.  mov dword [rsp + 8], 2
0x00002d0e      4889442448     mov qword [rsp + 0x48], rax
0x00002d13      4531db         xor r11d, r11d
0x00002d16      4889e8         mov rax, rbp
0x00002d19      4589e0         mov r8d, r12d
0x00002d1c      4c89dd         mov rbp, r11
0x00002d1f      4989c3         mov r11, rax
0x00002d22      660f1f440000   nop word [rax + rax]
0x00002d28      4939eb         cmp r11, rbp
0x00002d2b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002d2f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002d33      750d           jne 0x2d42
0x00002d35      488b442410     mov rax, qword [rsp + 0x10]
0x00002d3a      803c2800       cmp byte [rax + rbp], 0
0x00002d3e      410f95c4       setne r12b
0x00002d42      4584e4         test r12b, r12b
0x00002d45      0f8455060000   je 0x33a0
0x00002d4b      837c240802     cmp dword [rsp + 8], 2
0x00002d50      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002d55      4c8d0c2f       lea r9, [rdi + rbp]
0x00002d59      0f95c0         setne al
0x00002d5c      2244240d       and al, byte [rsp + 0xd]
0x00002d60      4189c2         mov r10d, eax
0x00002d63      0f84a7000000   je 0x2e10
0x00002d69      488b442418     mov rax, qword [rsp + 0x18]
0x00002d6e      4885c0         test rax, rax
0x00002d71      0f8429040000   je 0x31a0
0x00002d77      4983fbff       cmp r11, 0xffffffffffffffff
0x00002d7b      488d5c0500     lea rbx, [rbp + rax]
0x00002d80      752e           jne 0x2db0
0x00002d82      4883f801       cmp rax, 1
0x00002d86      7628           jbe 0x2db0
0x00002d88      4488442438     mov byte [rsp + 0x38], r8b
0x00002d8d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002d92      4c894c2428     mov qword [rsp + 0x28], r9
0x00002d97      e814ebffff     call sym.imp.strlen
0x00002d9c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002da2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002da8      4989c3         mov r11, rax
0x00002dab      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002db0      4c39db         cmp rbx, r11
0x00002db3      4488542428     mov byte [rsp + 0x28], r10b
0x00002db8      0f87b2050000   ja 0x3370
0x00002dbe      488b542418     mov rdx, qword [rsp + 0x18]
0x00002dc3      488b742448     mov rsi, qword [rsp + 0x48]
0x00002dc8      4c89cf         mov rdi, r9
0x00002dcb      4c895c2440     mov qword [rsp + 0x40], r11
0x00002dd0      4488442438     mov byte [rsp + 0x38], r8b
0x00002dd5      4c894c2430     mov qword [rsp + 0x30], r9
0x00002dda      e8a1ebffff     call sym.imp.memcmp
0x00002ddf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002de1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002de6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002dec      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002df1      0f8579050000   jne 0x3370
0x00002df7      807c240f00     cmp byte [rsp + 0xf], 0
0x00002dfc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002e02      0f857d0f0000   jne 0x3d85
0x00002e08      0f1f84000000.  nop dword [rax + rax]
0x00002e10      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002e14      80fb7e         cmp bl, 0x7e
0x00002e17      0f871b030000   ja 0x3138
0x00002e1d      488d0de84100.  lea rcx, [0x0000700c]
0x00002e24      0fb6d3         movzx edx, bl
0x00002e27      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002e2b      4801c8         add rax, rcx
0x00002e2e      ffe0           jmp rax
0x00002e30      4531d2         xor r10d, r10d
0x00002e33      4983fb01       cmp r11, 1
0x00002e37      0f95c0         setne al
0x00002e3a      4983fbff       cmp r11, 0xffffffffffffffff
0x00002e3e      750c           jne 0x2e4c
0x00002e40      488b442410     mov rax, qword [rsp + 0x10]
0x00002e45      80780100       cmp byte [rax + 1], 0
0x00002e49      0f95c0         setne al
0x00002e4c      837c240802     cmp dword [rsp + 8], 2
0x00002e51      0f94c2         sete dl
0x00002e54      84c0           test al, al
0x00002e56      0f844c020000   je 0x30a8
0x00002e5c      4531e4         xor r12d, r12d
0x00002e5f      31c0           xor eax, eax
0x00002e61      0f1f80000000.  nop dword [rax]
0x00002e68      807c240d01     cmp byte [rsp + 0xd], 1
0x00002e6d      0f850f010000   jne 0x2f82
0x00002e73      84d2           test dl, dl
0x00002e75      0f8507010000   jne 0x2f82
0x00002e7b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002e80      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002e83      7414           je 0x2e99
0x00002e85      89da           mov edx, ebx
0x00002e87      c0ea05         shr dl, 5
0x00002e8a      0fb6d2         movzx edx, dl
0x00002e8d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002e90      0fa3da         bt edx, ebx
0x00002e93      0f824a010000   jb 0x2fe3
0x00002e99      4584d2         test r10b, r10b
0x00002e9c      0f8541010000   jne 0x2fe3
0x00002ea2      83f001         xor eax, 1
0x00002ea5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002ea9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002eac      84c0           test al, al
0x00002eae      7420           je 0x2ed0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002eb0      4d39fd         cmp r13, r15
0x00002eb3      7605           jbe 0x2eba
0x00002eb5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002eba      498d4701       lea rax, [r15 + 1]
0x00002ebe      4939c5         cmp r13, rax
0x00002ec1      7606           jbe 0x2ec9
0x00002ec3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002ec9      4983c702       add r15, 2
0x00002ecd      4531c0         xor r8d, r8d
0x00002ed0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002ed3      7304           jae 0x2ed9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002ed5      43881c3e       mov byte [r14 + r15], bl
0x00002ed9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002ede      4983c701       add r15, 1
0x00002ee2      b800000000     mov eax, 0
0x00002ee7      4584e4         test r12b, r12b
0x00002eea      0f44f8         cmove edi, eax
0x00002eed      40887c240e     mov byte [rsp + 0xe], dil
0x00002ef2      e931feffff     jmp 0x2d28
0x00002ef7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002f00      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002f03      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002f07      83f802         cmp eax, 2
0x00002f0a      0f84b8050000   je 0x34c8
0x00002f10      83f805         cmp eax, 5
0x00002f13      0f846f050000   je 0x3488
0x00002f19      83f802         cmp eax, 2
0x00002f1c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002f21      0f94c2         sete dl
0x00002f24      4531e4         xor r12d, r12d
0x00002f27      31c0           xor eax, eax
0x00002f29      e93affffff     jmp 0x2e68
0x00002f2e      6690           nop
0x00002f30      4531d2         xor r10d, r10d
0x00002f33      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002f38      0f8402050000   je 0x3440
0x00002f3e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002f43      31d2           xor edx, edx
0x00002f45      31c0           xor eax, eax
0x00002f47      bb27000000     mov ebx, 0x27                           ; '''
0x00002f4c      e917ffffff     jmp 0x2e68
0x00002f51      0f1f80000000.  nop dword [rax]
0x00002f58      ba09000000     mov edx, 9
0x00002f5d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002f62      837c240802     cmp dword [rsp + 8], 2
0x00002f67      0f94c0         sete al
0x00002f6a      2244240f       and al, byte [rsp + 0xf]
0x00002f6e      0f854a010000   jne 0x30be
0x00002f74      807c240d00     cmp byte [rsp + 0xd], 0
0x00002f79      7565           jne 0x2fe0
0x00002f7b      89d3           mov ebx, edx
0x00002f7d      4531e4         xor r12d, r12d
0x00002f80      31c0           xor eax, eax
0x00002f82      807c240f00     cmp byte [rsp + 0xf], 0
0x00002f87      0f85eefeffff   jne 0x2e7b
0x00002f8d      e907ffffff     jmp 0x2e99                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002f92      660f1f440000   nop word [rax + rax]
0x00002f98      ba08000000     mov edx, 8
0x00002f9d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002fa2      ebd0           jmp 0x2f74
0x00002fa4      0f1f4000       nop dword [rax]
0x00002fa8      837c240802     cmp dword [rsp + 8], 2
0x00002fad      0f84cd030000   je 0x3380
0x00002fb3      807c240d00     cmp byte [rsp + 0xd], 0
0x00002fb8      0f8412020000   je 0x31d0
0x00002fbe      807c240f00     cmp byte [rsp + 0xf], 0
0x00002fc3      0f8407020000   je 0x31d0
0x00002fc9      48837c241800   cmp qword [rsp + 0x18], 0
0x00002fcf      0f85b6030000   jne 0x338b
0x00002fd5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002fda      660f1f440000   nop word [rax + rax]
0x00002fe0      4531e4         xor r12d, r12d
0x00002fe3      837c240802     cmp dword [rsp + 8], 2
0x00002fe8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002feb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002ff0      89d0           mov eax, edx
0x00002ff2      0f8550080000   jne 0x3848
0x00002ff8      4489c0         mov eax, r8d
0x00002ffb      83f001         xor eax, 1
0x00002ffe      20d0           and al, dl
0x00003000      742f           je 0x3031
0x00003002      4d39fd         cmp r13, r15
0x00003005      7605           jbe 0x300c
0x00003007      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000300c      498d5701       lea rdx, [r15 + 1]
0x00003010      4939d5         cmp r13, rdx
0x00003013      7606           jbe 0x301b
0x00003015      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000301b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000301f      4939d5         cmp r13, rdx
0x00003022      7606           jbe 0x302a
0x00003024      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000302a      4983c703       add r15, 3
0x0000302e      4189c0         mov r8d, eax
0x00003031      4d39fd         cmp r13, r15
0x00003034      7605           jbe 0x303b
0x00003036      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000303b      4983c701       add r15, 1
0x0000303f      4883c501       add rbp, 1
0x00003043      e988feffff     jmp 0x2ed0
0x00003048      0f1f84000000.  nop dword [rax + rax]
0x00003050      807c240d00     cmp byte [rsp + 0xd], 0
0x00003055      0f85c8010000   jne 0x3223
0x0000305b      31d2           xor edx, edx
0x0000305d      f644247801     test byte [rsp + 0x78], 1
0x00003062      0f8413ffffff   je 0x2f7b
0x00003068      4883c501       add rbp, 1
0x0000306c      e9b7fcffff     jmp 0x2d28
0x00003071      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003078      837c240802     cmp dword [rsp + 8], 2
0x0000307d      0f94c2         sete dl
0x00003080      31c0           xor eax, eax
0x00003082      e9e1fdffff     jmp 0x2e68
0x00003087      660f1f840000.  nop word [rax + rax]
0x00003090      ba07000000     mov edx, 7
0x00003095      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000309a      e9d5feffff     jmp 0x2f74
0x0000309f      90             nop
0x000030a0      837c240802     cmp dword [rsp + 8], 2
0x000030a5      0f94c2         sete dl
0x000030a8      4885ed         test rbp, rbp
0x000030ab      0f85abfdffff   jne 0x2e5c
0x000030b1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000030b6      20d0           and al, dl
0x000030b8      0f84aafdffff   je 0x2e68
0x000030be      4c89dd         mov rbp, r11
0x000030c1      c74424080200.  mov dword [rsp + 8], 2
0x000030c9      e9fb060000     jmp 0x37c9
0x000030ce      6690           nop
0x000030d0      837c240802     cmp dword [rsp + 8], 2
0x000030d5      0f94c2         sete dl
0x000030d8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000030db      ebd4           jmp 0x30b1
0x000030dd      0f1f00         nop dword [rax]
0x000030e0      837c240802     cmp dword [rsp + 8], 2
0x000030e5      bb20000000     mov ebx, 0x20                           ; "@"
0x000030ea      0f94c2         sete dl
0x000030ed      ebc2           jmp 0x30b1
0x000030ef      90             nop
0x000030f0      ba0d000000     mov edx, 0xd
0x000030f5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000030fa      e963feffff     jmp 0x2f62
0x000030ff      90             nop
0x00003100      ba0c000000     mov edx, 0xc
0x00003105      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000310a      e965feffff     jmp 0x2f74
0x0000310f      90             nop
0x00003110      ba0b000000     mov edx, 0xb
0x00003115      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000311a      e955feffff     jmp 0x2f74
0x0000311f      90             nop
0x00003120      ba0a000000     mov edx, 0xa
0x00003125      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000312a      e933feffff     jmp 0x2f62
0x0000312f      90             nop
0x00003130      4531d2         xor r10d, r10d
0x00003133      0f1f440000     nop dword [rax + rax]
0x00003138      48837c245801   cmp qword [rsp + 0x58], 1
0x0000313e      0f85a4030000   jne 0x34e8
0x00003144      4c895c2438     mov qword [rsp + 0x38], r11
0x00003149      4488442430     mov byte [rsp + 0x30], r8b
0x0000314e      4488542428     mov byte [rsp + 0x28], r10b
0x00003153      e8f8e9ffff     call sym.imp.__ctype_b_loc
0x00003158      488b08         mov rcx, qword [rax]
0x0000315b      0fb6d3         movzx edx, bl
0x0000315e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003164      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000316a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000316f      bf01000000     mov edi, 1
0x00003174      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003178      66250040       and ax, 0x4000                          ; "1\xff\xe89\x11"
0x0000317c      410f95c4       setne r12b
0x00003180      0f94c0         sete al
0x00003183      2244240d       and al, byte [rsp + 0xd]
0x00003187      84c0           test al, al
0x00003189      0f8592090000   jne 0x3b21
0x0000318f      837c240802     cmp dword [rsp + 8], 2
0x00003194      0f94c2         sete dl
0x00003197      e9ccfcffff     jmp 0x2e68
0x0000319c      0f1f4000       nop dword [rax]
0x000031a0      410fb619       movzx ebx, byte [r9]
0x000031a4      80fb7e         cmp bl, 0x7e
0x000031a7      7787           ja 0x3130
0x000031a9      488d0d584000.  lea rcx, [0x00007208]
0x000031b0      0fb6d3         movzx edx, bl
0x000031b3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000031b7      4801c8         add rax, rcx
0x000031ba      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000031bc      0f1f4000       nop dword [rax]
0x000031c0      4531d2         xor r10d, r10d
0x000031c3      807c240d00     cmp byte [rsp + 0xd], 0
0x000031c8      0f85f0fdffff   jne 0x2fbe
0x000031ce      6690           nop
0x000031d0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000031d5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000031da      e995fdffff     jmp 0x2f74
0x000031df      90             nop
0x000031e0      ba0c000000     mov edx, 0xc
0x000031e5      4531d2         xor r10d, r10d
0x000031e8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000031ed      e982fdffff     jmp 0x2f74
0x000031f2      660f1f440000   nop word [rax + rax]
0x000031f8      ba0a000000     mov edx, 0xa
0x000031fd      4531d2         xor r10d, r10d
0x00003200      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003205      e958fdffff     jmp 0x2f62
0x0000320a      660f1f440000   nop word [rax + rax]
0x00003210      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003215      e9c6fdffff     jmp 0x2fe0
0x0000321a      660f1f440000   nop word [rax + rax]
0x00003220      4531d2         xor r10d, r10d
0x00003223      837c240802     cmp dword [rsp + 8], 2
0x00003228      0f94c2         sete dl
0x0000322b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003230      0f85940b0000   jne 0x3dca
0x00003236      4489c0         mov eax, r8d
0x00003239      4c89f9         mov rcx, r15
0x0000323c      83f001         xor eax, 1
0x0000323f      20d0           and al, dl
0x00003241      742d           je 0x3270
0x00003243      4d39fd         cmp r13, r15
0x00003246      7605           jbe 0x324d
0x00003248      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000324d      498d4f01       lea rcx, [r15 + 1]
0x00003251      4939cd         cmp r13, rcx
0x00003254      7606           jbe 0x325c
0x00003256      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000325c      498d4f02       lea rcx, [r15 + 2]
0x00003260      4939cd         cmp r13, rcx
0x00003263      0f8730060000   ja 0x3899
0x00003269      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000326d      4189c0         mov r8d, eax
0x00003270      4939cd         cmp r13, rcx
0x00003273      7605           jbe 0x327a
0x00003275      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000327a      837c240802     cmp dword [rsp + 8], 2
0x0000327f      4c8d7901       lea r15, [rcx + 1]
0x00003283      0f8400060000   je 0x3889
0x00003289      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000328d      4c39d8         cmp rax, r11
0x00003290      7319           jae 0x32ab                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003292      488b442410     mov rax, qword [rsp + 0x10]
0x00003297      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000329c      88442428       mov byte [rsp + 0x28], al
0x000032a0      83e830         sub eax, 0x30
0x000032a3      3c09           cmp al, 9
0x000032a5      0f862e080000   jbe 0x3ad9
0x000032ab      4489e0         mov eax, r12d
0x000032ae      bb30000000     mov ebx, 0x30                           ; '0'
0x000032b3      4531e4         xor r12d, r12d
0x000032b6      e9adfbffff     jmp 0x2e68                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000032bb      0f1f440000     nop dword [rax + rax]
0x000032c0      837c240802     cmp dword [rsp + 8], 2
0x000032c5      4589d4         mov r12d, r10d
0x000032c8      0f94c2         sete dl
0x000032cb      4531d2         xor r10d, r10d
0x000032ce      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000032d0      e993fbffff     jmp 0x2e68                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000032d5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000032d8      837c240802     cmp dword [rsp + 8], 2
0x000032dd      0f94c2         sete dl
0x000032e0      4531d2         xor r10d, r10d
0x000032e3      e9c0fdffff     jmp 0x30a8
0x000032e8      0f1f84000000.  nop dword [rax + rax]
0x000032f0      837c240802     cmp dword [rsp + 8], 2
0x000032f5      0f94c2         sete dl
0x000032f8      4531d2         xor r10d, r10d
0x000032fb      4531e4         xor r12d, r12d
0x000032fe      e9aefdffff     jmp 0x30b1
0x00003303      0f1f440000     nop dword [rax + rax]
0x00003308      837c240802     cmp dword [rsp + 8], 2
0x0000330d      4589d4         mov r12d, r10d
0x00003310      bb20000000     mov ebx, 0x20                           ; "@"
0x00003315      0f94c2         sete dl
0x00003318      4531d2         xor r10d, r10d
0x0000331b      e991fdffff     jmp 0x30b1
0x00003320      ba0d000000     mov edx, 0xd
0x00003325      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003328      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000332d      e930fcffff     jmp 0x2f62
0x00003332      660f1f440000   nop word [rax + rax]
0x00003338      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000333d      e99efcffff     jmp 0x2fe0
0x00003342      660f1f440000   nop word [rax + rax]
0x00003348      ba09000000     mov edx, 9
0x0000334d      4531d2         xor r10d, r10d
0x00003350      bb74000000     mov ebx, 0x74                           ; 't'
0x00003355      e908fcffff     jmp 0x2f62
0x0000335a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003360      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003365      e976fcffff     jmp 0x2fe0
0x0000336a      660f1f440000   nop word [rax + rax]
0x00003370      4531d2         xor r10d, r10d
0x00003373      e998faffff     jmp 0x2e10
0x00003378      0f1f84000000.  nop dword [rax + rax]
0x00003380      807c240f00     cmp byte [rsp + 0xf], 0
0x00003385      0f8565090000   jne 0x3cf0
0x0000338b      4883c501       add rbp, 1
0x0000338f      4489c0         mov eax, r8d
0x00003392      4531e4         xor r12d, r12d
0x00003395      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000339a      e90dfbffff     jmp 0x2eac
0x0000339f      90             nop
0x000033a0      837c240802     cmp dword [rsp + 8], 2
0x000033a5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000033aa      4589c4         mov r12d, r8d
0x000033ad      4c89dd         mov rbp, r11
0x000033b0      0f94c2         sete dl
0x000033b3      89d8           mov eax, ebx
0x000033b5      4d85ff         test r15, r15
0x000033b8      0f94c1         sete cl
0x000033bb      21d0           and eax, edx
0x000033bd      20c8           and al, cl
0x000033bf      0f85610a0000   jne 0x3e26                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000033c5      89d8           mov eax, ebx
0x000033c7      83f001         xor eax, 1
0x000033ca      20c2           and dl, al
0x000033cc      0f846a090000   je 0x3d3c
0x000033d2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000033d7      0f845d090000   je 0x3d3a
0x000033dd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000033e2      0f85f5090000   jne 0x3ddd
0x000033e8      4d85ed         test r13, r13
0x000033eb      0f94c0         sete al
0x000033ee      48837c245000   cmp qword [rsp + 0x50], 0
0x000033f4      0f95c2         setne dl
0x000033f7      20d0           and al, dl
0x000033f9      0f841d0a0000   je 0x3e1c
0x000033ff      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003404      488d1d6a3b00.  lea rbx, [0x00006f75]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000340b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000340f      c74424080200.  mov dword [rsp + 8], 2
0x00003417      41bf01000000   mov r15d, 1
0x0000341d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003426      c644240f00     mov byte [rsp + 0xf], 0
0x0000342b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003430      8844247c       mov byte [rsp + 0x7c], al
0x00003434      e9daf8ffff     jmp 0x2d13
0x00003439      0f1f80000000.  nop dword [rax]
0x00003440      807c240f00     cmp byte [rsp + 0xf], 0
0x00003445      0f85a5080000   jne 0x3cf0
0x0000344b      4d85ed         test r13, r13
0x0000344e      0f84fc030000   je 0x3850                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003454      31d2           xor edx, edx
0x00003456      48837c245000   cmp qword [rsp + 0x50], 0
0x0000345c      0f85ee030000   jne 0x3850                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003462      4c896c2450     mov qword [rsp + 0x50], r13
0x00003467      4983c703       add r15, 3
0x0000346b      31c0           xor eax, eax
0x0000346d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003472      4531c0         xor r8d, r8d
0x00003475      4989d5         mov r13, rdx
0x00003478      bb27000000     mov ebx, 0x27                           ; '''
0x0000347d      e917faffff     jmp 0x2e99
0x00003482      660f1f440000   nop word [rax + rax]
0x00003488      f644247804     test byte [rsp + 0x78], 4
0x0000348d      7421           je 0x34b0
0x0000348f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003493      4c39d9         cmp rcx, r11
0x00003496      7318           jae 0x34b0
0x00003498      488b442410     mov rax, qword [rsp + 0x10]
0x0000349d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000034a2      0f848a070000   je 0x3c32
0x000034a8      0f1f84000000.  nop dword [rax + rax]
0x000034b0      31d2           xor edx, edx
0x000034b2      4531e4         xor r12d, r12d
0x000034b5      31c0           xor eax, eax
0x000034b7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000034bc      e9a7f9ffff     jmp 0x2e68
0x000034c1      0f1f80000000.  nop dword [rax]
0x000034c8      807c240f00     cmp byte [rsp + 0xf], 0
0x000034cd      0f851d080000   jne 0x3cf0
0x000034d3      4531e4         xor r12d, r12d
0x000034d6      31c0           xor eax, eax
0x000034d8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000034dd      e9b7f9ffff     jmp 0x2e99                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000034e2      660f1f440000   nop word [rax + rax]
0x000034e8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000034f0      4983fbff       cmp r11, 0xffffffffffffffff
0x000034f4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003500      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003505      752d           jne 0x3534
0x00003507      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000350c      4488442440     mov byte [rsp + 0x40], r8b
0x00003511      4488542438     mov byte [rsp + 0x38], r10b
0x00003516      4c894c2430     mov qword [rsp + 0x30], r9
0x0000351b      e890e3ffff     call sym.imp.strlen
0x00003520      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003526      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000352c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000352f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003534      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000353c      31c9           xor ecx, ecx
0x0000353e      885c247e       mov byte [rsp + 0x7e], bl
0x00003542      448844247d     mov byte [rsp + 0x7d], r8b
0x00003547      4889cb         mov rbx, rcx
0x0000354a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003552      4889442438     mov qword [rsp + 0x38], rax
0x00003557      448854247f     mov byte [rsp + 0x7f], r10b
0x0000355c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003564      4c89742440     mov qword [rsp + 0x40], r14
0x00003569      4c896c2470     mov qword [rsp + 0x70], r13
0x0000356e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003573      488b442410     mov rax, qword [rsp + 0x10]
0x00003578      4c8d741d00     lea r14, [rbp + rbx]
0x0000357d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003582      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003587      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000358c      4e8d2c30       lea r13, [rax + r14]
0x00003590      4c29f2         sub rdx, r14
0x00003593      4c89ee         mov rsi, r13
0x00003596      e8f51e0000     call sym.rpl_mbrtowc
0x0000359b      4885c0         test rax, rax
0x0000359e      4989c7         mov r15, rax
0x000035a1      744e           je 0x35f1
0x000035a3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000035a7      0f8418060000   je 0x3bc5
0x000035ad      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000035b1      0f849a050000   je 0x3b51
0x000035b7      837c240802     cmp dword [rsp + 8], 2
0x000035bc      0f94c0         sete al
0x000035bf      2244240f       and al, byte [rsp + 0xf]
0x000035c3      0f8597010000   jne 0x3760
0x000035c9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000035d0      e86be5ffff     call sym.imp.iswprint
0x000035d5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000035da      85c0           test eax, eax
0x000035dc      b800000000     mov eax, 0
0x000035e1      440f44e0       cmove r12d, eax
0x000035e5      4c01fb         add rbx, r15
0x000035e8      e843e5ffff     call sym.imp.mbsinit
0x000035ed      85c0           test eax, eax
0x000035ef      7482           je 0x3573
0x000035f1      4489e2         mov edx, r12d
0x000035f4      4889df         mov rdi, rbx
0x000035f7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000035fd      83f201         xor edx, 1
0x00003600      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003605      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000360b      2254240d       and dl, byte [rsp + 0xd]
0x0000360f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003617      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000361c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003621      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003626      4883ff01       cmp rdi, 1
0x0000362a      0f86fb050000   jbe 0x3c2b
0x00003630      4889f9         mov rcx, rdi
0x00003633      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003635      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000363b      4801e9         add rcx, rbp
0x0000363e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003643      e9b6000000     jmp 0x36fe
0x00003648      0f1f84000000.  nop dword [rax + rax]
0x00003650      837c240802     cmp dword [rsp + 8], 2
0x00003655      0f94c0         sete al
0x00003658      4584c9         test r9b, r9b
0x0000365b      0f85af040000   jne 0x3b10
0x00003661      4489c6         mov esi, r8d
0x00003664      83f601         xor esi, 1
0x00003667      4020f0         and al, sil
0x0000366a      742f           je 0x369b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000366c      4d39fd         cmp r13, r15
0x0000366f      7605           jbe 0x3676
0x00003671      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003676      498d7701       lea rsi, [r15 + 1]
0x0000367a      4939f5         cmp r13, rsi
0x0000367d      7606           jbe 0x3685                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000367f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003685      498d7702       lea rsi, [r15 + 2]
0x00003689      4939f5         cmp r13, rsi
0x0000368c      7606           jbe 0x3694
0x0000368e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003694      4983c703       add r15, 3
0x00003698      4189c0         mov r8d, eax
0x0000369b      4d39fd         cmp r13, r15
0x0000369e      7605           jbe 0x36a5
0x000036a0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000036a5      498d4701       lea rax, [r15 + 1]
0x000036a9      4939c5         cmp r13, rax
0x000036ac      760d           jbe 0x36bb
0x000036ae      89d8           mov eax, ebx
0x000036b0      c0e806         shr al, 6
0x000036b3      83c030         add eax, 0x30
0x000036b6      4388443e01     mov byte [r14 + r15 + 1], al
0x000036bb      498d4702       lea rax, [r15 + 2]
0x000036bf      4939c5         cmp r13, rax
0x000036c2      7610           jbe 0x36d4
0x000036c4      89d8           mov eax, ebx
0x000036c6      c0e803         shr al, 3
0x000036c9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000036cc      83c030         add eax, 0x30
0x000036cf      4388443e02     mov byte [r14 + r15 + 2], al
0x000036d4      83e307         and ebx, 7
0x000036d7      4883c501       add rbp, 1
0x000036db      4983c703       add r15, 3
0x000036df      83c330         add ebx, 0x30
0x000036e2      4839cd         cmp rbp, rcx
0x000036e5      0f83e5f7ffff   jae 0x2ed0
0x000036eb      89d6           mov esi, edx
0x000036ed      4d39fd         cmp r13, r15
0x000036f0      7604           jbe 0x36f6
0x000036f2      43881c3e       mov byte [r14 + r15], bl
0x000036f6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000036fa      4983c701       add r15, 1
0x000036fe      84d2           test dl, dl
0x00003700      0f854affffff   jne 0x3650
0x00003706      89f0           mov eax, esi
0x00003708      83f001         xor eax, 1
0x0000370b      4421c0         and eax, r8d
0x0000370e      4584d2         test r10b, r10b
0x00003711      740e           je 0x3721
0x00003713      4d39fd         cmp r13, r15
0x00003716      7605           jbe 0x371d
0x00003718      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000371d      4983c701       add r15, 1
0x00003721      4883c501       add rbp, 1
0x00003725      4839cd         cmp rbp, rcx
0x00003728      0f837ef7ffff   jae 0x2eac
0x0000372e      84c0           test al, al
0x00003730      0f84f8030000   je 0x3b2e
0x00003736      4d39fd         cmp r13, r15
0x00003739      7605           jbe 0x3740
0x0000373b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003740      498d4701       lea rax, [r15 + 1]
0x00003744      4939c5         cmp r13, rax
0x00003747      7606           jbe 0x374f
0x00003749      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000374f      4983c702       add r15, 2
0x00003753      4531d2         xor r10d, r10d
0x00003756      4531c0         xor r8d, r8d
0x00003759      eb92           jmp 0x36ed
0x0000375b      0f1f440000     nop dword [rax + rax]
0x00003760      4983ff01       cmp r15, 1
0x00003764      0f845ffeffff   je 0x35c9
0x0000376a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000376f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003773      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003778      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000377c      eb0f           jmp 0x378d
0x0000377e      6690           nop
0x00003780      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003784      4939d0         cmp r8, rdx
0x00003787      0f843cfeffff   je 0x35c9
0x0000378d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003790      83e95b         sub ecx, 0x5b
0x00003793      80f921         cmp cl, 0x21
0x00003796      77e8           ja 0x3780                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003798      be01000000     mov esi, 1
0x0000379d      48d3e6         shl rsi, cl
0x000037a0      4889f1         mov rcx, rsi
0x000037a3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000037ad      4885f1         test rcx, rsi
0x000037b0      74ce           je 0x3780
0x000037b2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000037b7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000037bc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000037c1      c74424080200.  mov dword [rsp + 8], 2
0x000037c9      807c240d00     cmp byte [rsp + 0xd], 0
0x000037ce      7410           je 0x37e0
0x000037d0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000037d2      b804000000     mov eax, 4
0x000037d7      0f44442408     cmove eax, dword [rsp + 8]
0x000037dc      89442408       mov dword [rsp + 8], eax
0x000037e0      4883ec08       sub rsp, 8
0x000037e4      4889e9         mov rcx, rbp
0x000037e7      4c89ee         mov rsi, r13
0x000037ea      ff742468       push qword [rsp + 0x68]
0x000037ee      ff742478       push qword [rsp + 0x78]
0x000037f2      4c89f7         mov rdi, r14
0x000037f5      6a00           push 0
0x000037f7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000037ff      448b442428     mov r8d, dword [rsp + 0x28]
0x00003804      488b542430     mov rdx, qword [rsp + 0x30]
0x00003809      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000380d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003812      4883c420       add rsp, 0x20
0x00003816      4989c7         mov r15, rax
0x00003819      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003821      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000382a      4c89f8         mov rax, r15
0x0000382d      0f8500060000   jne 0x3e33
0x00003833      4881c4b80000.  add rsp, 0xb8
0x0000383a      5b             pop rbx
0x0000383b      5d             pop rbp
0x0000383c      415c           pop r12
0x0000383e      415d           pop r13
0x00003840      415e           pop r14
0x00003842      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003844      c3             ret
0x00003845      0f1f00         nop dword [rax]
0x00003848      4c89dd         mov rbp, r11
0x0000384b      e979ffffff     jmp 0x37c9
0x00003850      4d39fd         cmp r13, r15
0x00003853      7605           jbe 0x385a
0x00003855      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000385a      498d4701       lea rax, [r15 + 1]
0x0000385e      4939c5         cmp r13, rax
0x00003861      7606           jbe 0x3869
0x00003863      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003869      498d4702       lea rax, [r15 + 2]
0x0000386d      4939c5         cmp r13, rax
0x00003870      0f86ec050000   jbe 0x3e62
0x00003876      4c89ea         mov rdx, r13
0x00003879      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000387f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003884      e9d9fbffff     jmp 0x3462
0x00003889      4489e0         mov eax, r12d
0x0000388c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003891      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003894      e900f6ffff     jmp 0x2e99                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003899      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000389f      e9c5f9ffff     jmp 0x3269
0x000038a4      85db           test ebx, ebx
0x000038a6      0f8527f4ffff   jne 0x2cd3
0x000038ac      c644240d01     mov byte [rsp + 0xd], 1
0x000038b1      4d85ed         test r13, r13
0x000038b4      0f8590050000   jne 0x3e4a
0x000038ba      488d05b43600.  lea rax, [0x00006f75]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000038c1      48c744245000.  mov qword [rsp + 0x50], 0
0x000038ca      c644240e01     mov byte [rsp + 0xe], 1
0x000038cf      c644247c00     mov byte [rsp + 0x7c], 0
0x000038d4      4531e4         xor r12d, r12d
0x000038d7      c644240f00     mov byte [rsp + 0xf], 0
0x000038dc      48c744241801.  mov qword [rsp + 0x18], 1
0x000038e5      4889442448     mov qword [rsp + 0x48], rax
0x000038ea      41bf01000000   mov r15d, 1
0x000038f0      c74424080200.  mov dword [rsp + 8], 2
0x000038f8      e916f4ffff     jmp 0x2d13                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000038fd      0f1f00         nop dword [rax]
0x00003900      85db           test ebx, ebx
0x00003902      0f85f5030000   jne 0x3cfd
0x00003908      4d85ed         test r13, r13
0x0000390b      0f8425020000   je 0x3b36
0x00003911      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003915      c644240e01     mov byte [rsp + 0xe], 1
0x0000391a      4531e4         xor r12d, r12d
0x0000391d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003922      48c744245000.  mov qword [rsp + 0x50], 0
0x0000392b      488d05413600.  lea rax, str.l______l                   ; 0x6f73 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003932      c644240f00     mov byte [rsp + 0xf], 0
0x00003937      c644240d01     mov byte [rsp + 0xd], 1
0x0000393c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003945      41bf01000000   mov r15d, 1
0x0000394b      4889442448     mov qword [rsp + 0x48], rax
0x00003950      e9bef3ffff     jmp 0x2d13
0x00003955      488d05173600.  lea rax, str.l______l                   ; 0x6f73 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000395c      c644240e01     mov byte [rsp + 0xe], 1
0x00003961      c644247c00     mov byte [rsp + 0x7c], 0
0x00003966      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003969      48c744245000.  mov qword [rsp + 0x50], 0
0x00003972      c644240f01     mov byte [rsp + 0xf], 1
0x00003977      c644240d01     mov byte [rsp + 0xd], 1
0x0000397c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003985      4531ff         xor r15d, r15d
0x00003988      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000398d      c74424080500.  mov dword [rsp + 8], 5
0x00003995      e979f3ffff     jmp 0x2d13
0x0000399a      c644240e01     mov byte [rsp + 0xe], 1
0x0000399f      c644247c00     mov byte [rsp + 0x7c], 0
0x000039a4      4531e4         xor r12d, r12d
0x000039a7      48c744245000.  mov qword [rsp + 0x50], 0
0x000039b0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000039b5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000039b8      c644240d01     mov byte [rsp + 0xd], 1
0x000039bd      48c744241800.  mov qword [rsp + 0x18], 0
0x000039c6      48c744244800.  mov qword [rsp + 0x48], 0
0x000039cf      e93ff3ffff     jmp 0x2d13
0x000039d4      837c24080a     cmp dword [rsp + 8], 0xa
0x000039d9      7456           je 0x3a31
0x000039db      488d35953500.  lea rsi, [0x00006f77]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000039e2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000039e4      ba05000000     mov edx, 5
0x000039e9      e8a2deffff     call sym.imp.dcgettext
0x000039ee      4889c1         mov rcx, rax
0x000039f1      4889442468     mov qword [rsp + 0x68], rax
0x000039f6      488d057a3500.  lea rax, [0x00006f77]                   ; "`"
0x000039fd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003a00      0f8498030000   je 0x3d9e
0x00003a06      488d35683500.  lea rsi, [0x00006f75]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003a0d      31ff           xor edi, edi
0x00003a0f      ba05000000     mov edx, 5
0x00003a14      e877deffff     call sym.imp.dcgettext
0x00003a19      4889c1         mov rcx, rax
0x00003a1c      4889442460     mov qword [rsp + 0x60], rax
0x00003a21      488d054d3500.  lea rax, [0x00006f75]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003a28      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003a2b      0f8483030000   je 0x3db4
0x00003a31      4531ff         xor r15d, r15d
0x00003a34      85db           test ebx, ebx
0x00003a36      0f84c1010000   je 0x3bfd
0x00003a3c      85db           test ebx, ebx
0x00003a3e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003a43      0f9544240f     setne byte [rsp + 0xf]
0x00003a48      4531e4         xor r12d, r12d
0x00003a4b      4889df         mov rdi, rbx
0x00003a4e      e85ddeffff     call sym.imp.strlen
0x00003a53      48895c2448     mov qword [rsp + 0x48], rbx
0x00003a58      4889442418     mov qword [rsp + 0x18], rax
0x00003a5d      c644240e01     mov byte [rsp + 0xe], 1
0x00003a62      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a67      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a70      c644240d01     mov byte [rsp + 0xd], 1
0x00003a75      e999f2ffff     jmp 0x2d13
0x00003a7a      c644240e01     mov byte [rsp + 0xe], 1
0x00003a7f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a84      4531e4         xor r12d, r12d
0x00003a87      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a90      c644240f00     mov byte [rsp + 0xf], 0
0x00003a95      4531ff         xor r15d, r15d
0x00003a98      c644240d00     mov byte [rsp + 0xd], 0
0x00003a9d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003aa6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003aaf      e95ff2ffff     jmp 0x2d13
0x00003ab4      c644240e01     mov byte [rsp + 0xe], 1
0x00003ab9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003abe      4531e4         xor r12d, r12d
0x00003ac1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003aca      c644240f01     mov byte [rsp + 0xf], 1
0x00003acf      c644240d01     mov byte [rsp + 0xd], 1
0x00003ad4      e91af2ffff     jmp 0x2cf3
0x00003ad9      4d39fd         cmp r13, r15
0x00003adc      7605           jbe 0x3ae3
0x00003ade      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003ae3      488d4102       lea rax, [rcx + 2]
0x00003ae7      4939c5         cmp r13, rax
0x00003aea      7606           jbe 0x3af2
0x00003aec      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003af2      4489e0         mov eax, r12d
0x00003af5      4c8d7903       lea r15, [rcx + 3]
0x00003af9      4531e4         xor r12d, r12d
0x00003afc      bb30000000     mov ebx, 0x30                           ; '0'
0x00003b01      e962f3ffff     jmp 0x2e68
0x00003b06      662e0f1f8400.  nop word cs:[rax + rax]
0x00003b10      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003b15      4c89dd         mov rbp, r11
0x00003b18      885c240d       mov byte [rsp + 0xd], bl
0x00003b1c      e9a8fcffff     jmp 0x37c9
0x00003b21      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003b26      4531e4         xor r12d, r12d
0x00003b29      e902fbffff     jmp 0x3630
0x00003b2e      4531d2         xor r10d, r10d
0x00003b31      e9b7fbffff     jmp 0x36ed
0x00003b36      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b3f      c644240e01     mov byte [rsp + 0xe], 1
0x00003b44      4531e4         xor r12d, r12d
0x00003b47      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b4c      e9dafdffff     jmp 0x392b
0x00003b51      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003b56      4c89f6         mov rsi, r14
0x00003b59      4c89e9         mov rcx, r13
0x00003b5c      4889d8         mov rax, rbx
0x00003b5f      4889df         mov rdi, rbx
0x00003b62      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003b68      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003b6d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003b75      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003b78      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003b7e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003b86      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003b8b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003b90      7326           jae 0x3bb8
0x00003b92      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003b95      7510           jne 0x3ba7
0x00003b97      eb1f           jmp 0x3bb8
0x00003b99      0f1f80000000.  nop dword [rax]
0x00003ba0      41803c0100     cmp byte [r9 + rax], 0
0x00003ba5      740e           je 0x3bb5
0x00003ba7      4883c001       add rax, 1
0x00003bab      488d540500     lea rdx, [rbp + rax]
0x00003bb0      4939d3         cmp r11, rdx
0x00003bb3      77eb           ja 0x3ba0
0x00003bb5      4889c7         mov rdi, rax
0x00003bb8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003bbd      4531e4         xor r12d, r12d
0x00003bc0      e961faffff     jmp 0x3626
0x00003bc5      4889df         mov rdi, rbx
0x00003bc8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003bce      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003bd3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003bd9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003be1      4531e4         xor r12d, r12d
0x00003be4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003be9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003bee      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003bf3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003bf8      e929faffff     jmp 0x3626
0x00003bfd      488b542468     mov rdx, qword [rsp + 0x68]
0x00003c02      0fb602         movzx eax, byte [rdx]
0x00003c05      84c0           test al, al
0x00003c07      0f842ffeffff   je 0x3a3c
0x00003c0d      0f1f00         nop dword [rax]
0x00003c10      4d39fd         cmp r13, r15
0x00003c13      7604           jbe 0x3c19
0x00003c15      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003c19      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003c1d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003c22      84c0           test al, al
0x00003c24      75ea           jne 0x3c10
0x00003c26      e911feffff     jmp 0x3a3c
0x00003c2b      89d0           mov eax, edx
0x00003c2d      e955f5ffff     jmp 0x3187
0x00003c32      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003c36      80fb3e         cmp bl, 0x3e
0x00003c39      0f8771f8ffff   ja 0x34b0
0x00003c3f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003c49      480fa3d8       bt rax, rbx
0x00003c4d      0f835df8ffff   jae 0x34b0
0x00003c53      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c58      0f85e4010000   jne 0x3e42                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003c5e      4d39fd         cmp r13, r15
0x00003c61      7605           jbe 0x3c68
0x00003c63      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003c68      498d4701       lea rax, [r15 + 1]
0x00003c6c      4939c5         cmp r13, rax
0x00003c6f      7606           jbe 0x3c77
0x00003c71      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003c77      498d4702       lea rax, [r15 + 2]
0x00003c7b      4939c5         cmp r13, rax
0x00003c7e      7606           jbe 0x3c86
0x00003c80      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003c86      498d4703       lea rax, [r15 + 3]
0x00003c8a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003c8d      7606           jbe 0x3c95
0x00003c8f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003c95      4983c704       add r15, 4
0x00003c99      31d2           xor edx, edx
0x00003c9b      4531e4         xor r12d, r12d
0x00003c9e      31c0           xor eax, eax
0x00003ca0      4889cd         mov rbp, rcx
0x00003ca3      e9c0f1ffff     jmp 0x2e68
0x00003ca8      85db           test ebx, ebx
0x00003caa      0f8488010000   je 0x3e38
0x00003cb0      488d05be3200.  lea rax, [0x00006f75]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003cb7      c644240e01     mov byte [rsp + 0xe], 1
0x00003cbc      c644247c00     mov byte [rsp + 0x7c], 0
0x00003cc1      4531e4         xor r12d, r12d
0x00003cc4      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ccd      c644240f01     mov byte [rsp + 0xf], 1
0x00003cd2      c644240d00     mov byte [rsp + 0xd], 0
0x00003cd7      48c744241801.  mov qword [rsp + 0x18], 1
0x00003ce0      4531ff         xor r15d, r15d
0x00003ce3      4889442448     mov qword [rsp + 0x48], rax
0x00003ce8      e926f0ffff     jmp 0x2d13
0x00003ced      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003cf0      4c89dd         mov rbp, r11
0x00003cf3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003cf8      e9ccfaffff     jmp 0x37c9
0x00003cfd      488d056f3200.  lea rax, str.l______l                   ; 0x6f73 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003d04      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003d09      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d0e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003d11      48c744245000.  mov qword [rsp + 0x50], 0
0x00003d1a      c644240f01     mov byte [rsp + 0xf], 1
0x00003d1f      c644240d01     mov byte [rsp + 0xd], 1
0x00003d24      48c744241801.  mov qword [rsp + 0x18], 1
0x00003d2d      4531ff         xor r15d, r15d
0x00003d30      4889442448     mov qword [rsp + 0x48], rax
0x00003d35      e9d9efffff     jmp 0x2d13
0x00003d3a      89d0           mov eax, edx
0x00003d3c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003d41      4885db         test rbx, rbx
0x00003d44      742c           je 0x3d72
0x00003d46      84c0           test al, al
0x00003d48      7428           je 0x3d72
0x00003d4a      0fb60b         movzx ecx, byte [rbx]
0x00003d4d      4889d8         mov rax, rbx
0x00003d50      84c9           test cl, cl
0x00003d52      741e           je 0x3d72
0x00003d54      4c89fa         mov rdx, r15
0x00003d57      4c29f8         sub rax, r15
0x00003d5a      4939d5         cmp r13, rdx
0x00003d5d      7604           jbe 0x3d63
0x00003d5f      41880c16       mov byte [r14 + rdx], cl
0x00003d63      4883c201       add rdx, 1
0x00003d67      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003d6b      84c9           test cl, cl
0x00003d6d      75eb           jne 0x3d5a
0x00003d6f      4989d7         mov r15, rdx
0x00003d72      4d39fd         cmp r13, r15
0x00003d75      0f869efaffff   jbe 0x3819
0x00003d7b      43c6043e00     mov byte [r14 + r15], 0
0x00003d80      e994faffff     jmp 0x3819
0x00003d85      837c240802     cmp dword [rsp + 8], 2
0x00003d8a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003d8f      4c89dd         mov rbp, r11
0x00003d92      0f94c0         sete al
0x00003d95      885c240d       mov byte [rsp + 0xd], bl
0x00003d99      e92bfaffff     jmp 0x37c9
0x00003d9e      8b742408       mov esi, dword [rsp + 8]
0x00003da2      4889cf         mov rdi, rcx
0x00003da5      e8a6edffff     call sym.gettext_quote.part.1
0x00003daa      4889442468     mov qword [rsp + 0x68], rax
0x00003daf      e952fcffff     jmp 0x3a06
0x00003db4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003db8      4889cf         mov rdi, rcx
0x00003dbb      e890edffff     call sym.gettext_quote.part.1
0x00003dc0      4889442460     mov qword [rsp + 0x60], rax
0x00003dc5      e967fcffff     jmp 0x3a31
0x00003dca      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003dcf      4c89dd         mov rbp, r11
0x00003dd2      89d0           mov eax, edx
0x00003dd4      885c240d       mov byte [rsp + 0xd], bl
0x00003dd8      e9ecf9ffff     jmp 0x37c9
0x00003ddd      4883ec08       sub rsp, 8
0x00003de1      41b805000000   mov r8d, 5
0x00003de7      4c89d9         mov rcx, r11
0x00003dea      ff742468       push qword [rsp + 0x68]
0x00003dee      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003df2      4c89f7         mov rdi, r14
0x00003df5      ff742438       push qword [rsp + 0x38]
0x00003df9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003e01      488b542430     mov rdx, qword [rsp + 0x30]
0x00003e06      488b742470     mov rsi, qword [rsp + 0x70]
0x00003e0b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003e10      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003e14      4989c7         mov r15, rax
0x00003e17      e9fdf9ffff     jmp 0x3819
0x00003e1c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003e21      e916ffffff     jmp 0x3d3c
0x00003e26      c74424080200.  mov dword [rsp + 8], 2
0x00003e2e      e996f9ffff     jmp 0x37c9
0x00003e33      e898daffff     call sym.imp.__stack_chk_fail
0x00003e38      c644240d00     mov byte [rsp + 0xd], 0
0x00003e3d      e96ffaffff     jmp 0x38b1
0x00003e42      4c89dd         mov rbp, r11
0x00003e45      e996f9ffff     jmp 0x37e0
0x00003e4a      c644240e01     mov byte [rsp + 0xe], 1
0x00003e4f      31c0           xor eax, eax
0x00003e51      4531e4         xor r12d, r12d
0x00003e54      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e5d      e9a2f5ffff     jmp 0x3404
0x00003e62      4c89ea         mov rdx, r13
0x00003e65      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003e6a      e9f3f5ffff     jmp 0x3462
0x00003e6f      e82cd9ffff     call sym.imp.abort
0x00003e74      6690           nop
0x00003e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003e80      4157           push r15
0x00003e82      4156           push r14
0x00003e84      4c63ff         movsxd r15, edi
0x00003e87      4155           push r13
0x00003e89      4154           push r12
0x00003e8b      4989d6         mov r14, rdx
0x00003e8e      55             push rbp
0x00003e8f      53             push rbx
0x00003e90      4889cd         mov rbp, rcx
0x00003e93      4883ec28       sub rsp, 0x28
0x00003e97      4889742408     mov qword [rsp + 8], rsi
0x00003e9c      e80fd9ffff     call sym.imp.__errno_location
0x00003ea1      4989c5         mov r13, rax
0x00003ea4      8b00           mov eax, dword [rax]
0x00003ea6      4585ff         test r15d, r15d
0x00003ea9      488b1db06120.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00003eb0      89442418       mov dword [rsp + 0x18], eax
0x00003eb4      0f8867010000   js 0x4021
0x00003eba      44393d976120.  cmp dword [obj.nslots], r15d            ; [0x20a058:4]=1
0x00003ec1      7f62           jg 0x3f25
0x00003ec3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003eca      0f8456010000   je 0x4026
0x00003ed0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003ed4      488d05956120.  lea rax, obj.slotvec0                   ; 0x20a070
0x00003edb      4963f4         movsxd rsi, r12d
0x00003ede      48c1e604       shl rsi, 4
0x00003ee2      4839c3         cmp rbx, rax
0x00003ee5      0f8415010000   je 0x4000
0x00003eeb      4889df         mov rdi, rbx
0x00003eee      e84d120000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003ef3      4889c3         mov rbx, rax
0x00003ef6      488905636120.  mov qword [obj.slotvec], rax            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00003efd      48633d546120.  movsxd rdi, dword [obj.nslots]          ; [0x20a058:4]=1
0x00003f04      4489e2         mov edx, r12d
0x00003f07      31f6           xor esi, esi
0x00003f09      29fa           sub edx, edi
0x00003f0b      48c1e704       shl rdi, 4
0x00003f0f      4863d2         movsxd rdx, edx
0x00003f12      4801df         add rdi, rbx
0x00003f15      48c1e204       shl rdx, 4
0x00003f19      e832daffff     call sym.imp.memset
0x00003f1e      448925336120.  mov dword [obj.nslots], r12d            ; [0x20a058:4]=1
0x00003f25      8b4504         mov eax, dword [rbp + 4]
0x00003f28      49c1e704       shl r15, 4
0x00003f2c      4883ec08       sub rsp, 8
0x00003f30      4c01fb         add rbx, r15
0x00003f33      4c8d7d08       lea r15, [rbp + 8]
0x00003f37      448b4500       mov r8d, dword [rbp]
0x00003f3b      4c8b1b         mov r11, qword [rbx]
0x00003f3e      4c8b6308       mov r12, qword [rbx + 8]
0x00003f42      4c89f1         mov rcx, r14
0x00003f45      83c801         or eax, 1
0x00003f48      89442424       mov dword [rsp + 0x24], eax
0x00003f4c      ff7530         push qword [rbp + 0x30]
0x00003f4f      4189c1         mov r9d, eax
0x00003f52      ff7528         push qword [rbp + 0x28]
0x00003f55      4157           push r15
0x00003f57      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003f5a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003f5f      4c89e7         mov rdi, r12
0x00003f62      4c895c2430     mov qword [rsp + 0x30], r11
0x00003f67      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003f6c      4883c420       add rsp, 0x20
0x00003f70      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003f75      4939c3         cmp r11, rax
0x00003f78      7767           ja 0x3fe1
0x00003f7a      488d7001       lea rsi, [rax + 1]
0x00003f7e      488d057b6120.  lea rax, obj.slot0                      ; 0x20a100
0x00003f85      4939c4         cmp r12, rax
0x00003f88      488933         mov qword [rbx], rsi
0x00003f8b      7412           je 0x3f9f
0x00003f8d      4c89e7         mov rdi, r12
0x00003f90      4889742410     mov qword [rsp + 0x10], rsi
0x00003f95      e8f6d7ffff     call sym.imp.free
0x00003f9a      488b742410     mov rsi, qword [rsp + 0x10]
0x00003f9f      4889f7         mov rdi, rsi
0x00003fa2      4889742410     mov qword [rsp + 0x10], rsi
0x00003fa7      e834110000     call sym.xmalloc
0x00003fac      4883ec08       sub rsp, 8
0x00003fb0      48894308       mov qword [rbx + 8], rax
0x00003fb4      448b4500       mov r8d, dword [rbp]
0x00003fb8      ff7530         push qword [rbp + 0x30]
0x00003fbb      ff7528         push qword [rbp + 0x28]
0x00003fbe      4c89f1         mov rcx, r14
0x00003fc1      4157           push r15
0x00003fc3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003fc8      4889c7         mov rdi, rax
0x00003fcb      488b542428     mov rdx, qword [rsp + 0x28]
0x00003fd0      488b742430     mov rsi, qword [rsp + 0x30]
0x00003fd5      4989c4         mov r12, rax
0x00003fd8      e863ecffff     call sym.quotearg_buffer_restyled
0x00003fdd      4883c420       add rsp, 0x20
0x00003fe1      8b442418       mov eax, dword [rsp + 0x18]
0x00003fe5      41894500       mov dword [r13], eax
0x00003fe9      4883c428       add rsp, 0x28
0x00003fed      4c89e0         mov rax, r12
0x00003ff0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003ff1      5d             pop rbp
0x00003ff2      415c           pop r12
0x00003ff4      415d           pop r13
0x00003ff6      415e           pop r14
0x00003ff8      415f           pop r15
0x00003ffa      c3             ret
0x00003ffb      0f1f440000     nop dword [rax + rax]
0x00004000      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004002      e839110000     call sym.xrealloc
0x00004007      660f6f056160.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000400f      4889c3         mov rbx, rax
0x00004012      488905476020.  mov qword [obj.slotvec], rax            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00004019      0f1100         movups xmmword [rax], xmm0
0x0000401c      e9dcfeffff     jmp 0x3efd
0x00004021      e87ad7ffff     call sym.imp.abort
0x00004026      e805130000     call sym.xalloc_die
0x0000402b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004030      4154           push r12
0x00004032      55             push rbp
0x00004033      53             push rbx
0x00004034      4889fb         mov rbx, rdi
0x00004037      e874d7ffff     call sym.imp.__errno_location
0x0000403c      448b20         mov r12d, dword [rax]
0x0000403f      4889c5         mov rbp, rax
0x00004042      488d05b76120.  lea rax, obj.default_quoting_options    ; 0x20a200
0x00004049      4885db         test rbx, rbx
0x0000404c      be38000000     mov esi, 0x38                           ; '8'
0x00004051      480f44d8       cmove rbx, rax
0x00004055      4889df         mov rdi, rbx
0x00004058      e883120000     call sym.xmemdup
0x0000405d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004061      5b             pop rbx
0x00004062      5d             pop rbp
0x00004063      415c           pop r12
0x00004065      c3             ret
0x00004066      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004070      488d05896120.  lea rax, obj.default_quoting_options    ; 0x20a200
0x00004077      4885ff         test rdi, rdi
0x0000407a      480f44f8       cmove rdi, rax
0x0000407e      8b07           mov eax, dword [rdi]
0x00004080      c3             ret
0x00004081      0f1f440000     nop dword [rax + rax]
0x00004086      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004090      488d05696120.  lea rax, obj.default_quoting_options    ; 0x20a200
0x00004097      4885ff         test rdi, rdi
0x0000409a      480f44f8       cmove rdi, rax
0x0000409e      8937           mov dword [rdi], esi
0x000040a0      c3             ret
0x000040a1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000040a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000040b0      488d05496120.  lea rax, obj.default_quoting_options    ; 0x20a200
0x000040b7      4885ff         test rdi, rdi
0x000040ba      89f1           mov ecx, esi
0x000040bc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000040c0      89f0           mov eax, esi
0x000040c2      83e11f         and ecx, 0x1f
0x000040c5      c0e805         shr al, 5
0x000040c8      0fb6c0         movzx eax, al
0x000040cb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000040d0      8b37           mov esi, dword [rdi]
0x000040d2      89f0           mov eax, esi
0x000040d4      d3e8           shr eax, cl
0x000040d6      31c2           xor edx, eax
0x000040d8      83e001         and eax, 1
0x000040db      83e201         and edx, 1
0x000040de      d3e2           shl edx, cl
0x000040e0      31f2           xor edx, esi
0x000040e2      8917           mov dword [rdi], edx
0x000040e4      c3             ret
0x000040e5      90             nop
0x000040e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000040f0      488d05096120.  lea rax, obj.default_quoting_options    ; 0x20a200
0x000040f7      4885ff         test rdi, rdi
0x000040fa      480f44f8       cmove rdi, rax
0x000040fe      8b4704         mov eax, dword [rdi + 4]
0x00004101      897704         mov dword [rdi + 4], esi
0x00004104      c3             ret
0x00004105      90             nop
0x00004106      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004110      488d05e96020.  lea rax, obj.default_quoting_options    ; 0x20a200
0x00004117      4885ff         test rdi, rdi
0x0000411a      480f44f8       cmove rdi, rax
0x0000411e      4885f6         test rsi, rsi
0x00004121      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004127      740e           je 0x4137
0x00004129      4885d2         test rdx, rdx
0x0000412c      7409           je 0x4137
0x0000412e      48897728       mov qword [rdi + 0x28], rsi
0x00004132      48895730       mov qword [rdi + 0x30], rdx
0x00004136      c3             ret
0x00004137      4883ec08       sub rsp, 8
0x0000413b      e860d6ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004140      4157           push r15
0x00004142      4156           push r14
0x00004144      488d05b56020.  lea rax, obj.default_quoting_options    ; 0x20a200
0x0000414b      4155           push r13
0x0000414d      4154           push r12
0x0000414f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004152      55             push rbp
0x00004153      53             push rbx
0x00004154      4c89c3         mov rbx, r8
0x00004157      4989f6         mov r14, rsi
0x0000415a      4989d7         mov r15, rdx
0x0000415d      4883ec18       sub rsp, 0x18
0x00004161      4d85c0         test r8, r8
0x00004164      480f44d8       cmove rbx, rax
0x00004168      48894c2408     mov qword [rsp + 8], rcx
0x0000416d      e83ed6ffff     call sym.imp.__errno_location
0x00004172      448b20         mov r12d, dword [rax]
0x00004175      4889c5         mov rbp, rax
0x00004178      488d4308       lea rax, [rbx + 8]
0x0000417c      4883ec08       sub rsp, 8
0x00004180      448b4b04       mov r9d, dword [rbx + 4]
0x00004184      ff7330         push qword [rbx + 0x30]
0x00004187      448b03         mov r8d, dword [rbx]
0x0000418a      ff7328         push qword [rbx + 0x28]
0x0000418d      4c89fa         mov rdx, r15
0x00004190      50             push rax
0x00004191      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004196      4c89f6         mov rsi, r14
0x00004199      4c89ef         mov rdi, r13
0x0000419c      e89feaffff     call sym.quotearg_buffer_restyled
0x000041a1      44896500       mov dword [rbp], r12d
0x000041a5      4883c438       add rsp, 0x38
0x000041a9      5b             pop rbx
0x000041aa      5d             pop rbp
0x000041ab      415c           pop r12
0x000041ad      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000041af      415e           pop r14
0x000041b1      415f           pop r15
0x000041b3      c3             ret
0x000041b4      6690           nop
0x000041b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000041c0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000041c2      4156           push r14
0x000041c4      488d05356020.  lea rax, obj.default_quoting_options    ; 0x20a200
0x000041cb      4155           push r13
0x000041cd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000041cf      4989d4         mov r12, rdx
0x000041d2      55             push rbp
0x000041d3      53             push rbx
0x000041d4      4889cb         mov rbx, rcx
0x000041d7      4989fe         mov r14, rdi
0x000041da      4989f7         mov r15, rsi
0x000041dd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000041e1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000041e4      480f44d8       cmove rbx, rax
0x000041e8      31ed           xor ebp, ebp
0x000041ea      e8c1d5ffff     call sym.imp.__errno_location
0x000041ef      4d85e4         test r12, r12
0x000041f2      4989c5         mov r13, rax
0x000041f5      8b00           mov eax, dword [rax]
0x000041f7      400f94c5       sete bpl
0x000041fb      0b6b04         or ebp, dword [rbx + 4]
0x000041fe      4c8d5308       lea r10, [rbx + 8]
0x00004202      4883ec08       sub rsp, 8
0x00004206      448b03         mov r8d, dword [rbx]
0x00004209      4c89f9         mov rcx, r15
0x0000420c      89442414       mov dword [rsp + 0x14], eax
0x00004210      ff7330         push qword [rbx + 0x30]
0x00004213      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004216      ff7328         push qword [rbx + 0x28]
0x00004219      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000421b      31f6           xor esi, esi
0x0000421d      4189e9         mov r9d, ebp
0x00004220      31ff           xor edi, edi
0x00004222      4c89542440     mov qword [rsp + 0x40], r10
0x00004227      e814eaffff     call sym.quotearg_buffer_restyled
0x0000422c      488d7001       lea rsi, [rax + 1]
0x00004230      4889442448     mov qword [rsp + 0x48], rax
0x00004235      4883c420       add rsp, 0x20
0x00004239      4889f7         mov rdi, rsi
0x0000423c      4889742418     mov qword [rsp + 0x18], rsi
0x00004241      e89a0e0000     call sym.xmalloc
0x00004246      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000424b      4883ec08       sub rsp, 8
0x0000424f      ff7330         push qword [rbx + 0x30]
0x00004252      ff7328         push qword [rbx + 0x28]
0x00004255      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000425a      4189e9         mov r9d, ebp
0x0000425d      448b03         mov r8d, dword [rbx]
0x00004260      4c89f9         mov rcx, r15
0x00004263      4c89f2         mov rdx, r14
0x00004266      4889c7         mov rdi, rax
0x00004269      4152           push r10
0x0000426b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004270      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004275      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004279      4883c420       add rsp, 0x20
0x0000427d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004280      41894500       mov dword [r13], eax
0x00004284      7409           je 0x428f
0x00004286      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000428b      4d891c24       mov qword [r12], r11
0x0000428f      488b442410     mov rax, qword [rsp + 0x10]
0x00004294      4883c438       add rsp, 0x38
0x00004298      5b             pop rbx
0x00004299      5d             pop rbp
0x0000429a      415c           pop r12
0x0000429c      415d           pop r13
0x0000429e      415e           pop r14
0x000042a0      415f           pop r15
0x000042a2      c3             ret
0x000042a3      0f1f00         nop dword [rax]
0x000042a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000042b0      4889d1         mov rcx, rdx
0x000042b3      31d2           xor edx, edx
0x000042b5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000042ba      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000042c0      8b05925d2000   mov eax, dword [obj.nslots]             ; [0x20a058:4]=1
0x000042c6      4154           push r12
0x000042c8      4c8b25915d20.  mov r12, qword [obj.slotvec]            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x000042cf      55             push rbp
0x000042d0      53             push rbx
0x000042d1      83f801         cmp eax, 1
0x000042d4      7e2b           jle 0x4301                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000042d6      83e802         sub eax, 2
0x000042d9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000042de      48c1e004       shl rax, 4
0x000042e2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000042e7      660f1f840000.  nop word [rax + rax]
0x000042f0      488b3b         mov rdi, qword [rbx]
0x000042f3      4883c310       add rbx, 0x10
0x000042f7      e894d4ffff     call sym.imp.free
0x000042fc      4839eb         cmp rbx, rbp
0x000042ff      75ef           jne 0x42f0
0x00004301      498b7c2408     mov rdi, qword [r12 + 8]
0x00004306      488d1df35d20.  lea rbx, obj.slot0                      ; 0x20a100
0x0000430d      4839df         cmp rdi, rbx
0x00004310      7417           je 0x4329
0x00004312      e879d4ffff     call sym.imp.free
0x00004317      48c7054e5d20.  mov qword [obj.slotvec0], 0x100         ; [0x20a070:8]=256
0x00004322      48891d4f5d20.  mov qword [0x0020a078], rbx             ; [0x20a078:8]=0x20a100 obj.slot0
0x00004329      488d1d405d20.  lea rbx, obj.slotvec0                   ; 0x20a070
0x00004330      4939dc         cmp r12, rbx
0x00004333      740f           je 0x4344
0x00004335      4c89e7         mov rdi, r12
0x00004338      e853d4ffff     call sym.imp.free
0x0000433d      48891d1c5d20.  mov qword [obj.slotvec], rbx            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00004344      5b             pop rbx
0x00004345      c705095d2000.  mov dword [obj.nslots], 1               ; [0x20a058:4]=1
0x0000434f      5d             pop rbp
0x00004350      415c           pop r12
0x00004352      c3             ret
0x00004353      0f1f00         nop dword [rax]
0x00004356      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004360      488d0d995e20.  lea rcx, obj.default_quoting_options    ; 0x20a200
0x00004367      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000436e      e90dfbffff     jmp sym.quotearg_n_options
0x00004373      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004376      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004380      488d0d795e20.  lea rcx, obj.default_quoting_options    ; 0x20a200
0x00004387      e9f4faffff     jmp sym.quotearg_n_options
0x0000438c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004390      488d0d695e20.  lea rcx, obj.default_quoting_options    ; 0x20a200
0x00004397      4889fe         mov rsi, rdi
0x0000439a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043a1      31ff           xor edi, edi
0x000043a3      e9d8faffff     jmp sym.quotearg_n_options
0x000043a8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000043b0      488d0d495e20.  lea rcx, obj.default_quoting_options    ; 0x20a200
0x000043b7      4889f2         mov rdx, rsi
0x000043ba      4889fe         mov rsi, rdi
0x000043bd      31ff           xor edi, edi
0x000043bf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000043c4      6690           nop
0x000043c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000043d0      4883ec48       sub rsp, 0x48
0x000043d4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000043d7      64488b142528.  mov rdx, qword fs:[0x28]
0x000043e0      4889542438     mov qword [rsp + 0x38], rdx
0x000043e5      31d2           xor edx, edx
0x000043e7      83fe0a         cmp esi, 0xa
0x000043ea      7468           je 0x4454
0x000043ec      893424         mov dword [rsp], esi
0x000043ef      4889e1         mov rcx, rsp
0x000043f2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043f9      4889c6         mov rsi, rax
0x000043fc      48c744240400.  mov qword [rsp + 4], 0
0x00004405      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000440e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004417      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004420      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004429      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004432      c74424340000.  mov dword [rsp + 0x34], 0
0x0000443a      e841faffff     call sym.quotearg_n_options
0x0000443f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004444      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000444d      750a           jne 0x4459                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000444f      4883c448       add rsp, 0x48
0x00004453      c3             ret
0x00004454      e847d3ffff     call sym.imp.abort
0x00004459      e872d4ffff     call sym.imp.__stack_chk_fail
0x0000445e      6690           nop
;-- quotearg_n_style_mem:
0x00004460      4883ec48       sub rsp, 0x48
0x00004464      4889d0         mov rax, rdx
0x00004467      4889ca         mov rdx, rcx
0x0000446a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004473      48894c2438     mov qword [rsp + 0x38], rcx
0x00004478      31c9           xor ecx, ecx
0x0000447a      83fe0a         cmp esi, 0xa
0x0000447d      7461           je 0x44e0
0x0000447f      893424         mov dword [rsp], esi
0x00004482      4889e1         mov rcx, rsp
0x00004485      4889c6         mov rsi, rax
0x00004488      48c744240400.  mov qword [rsp + 4], 0
0x00004491      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000449a      48c744241400.  mov qword [rsp + 0x14], 0
0x000044a3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000044ac      48c744242400.  mov qword [rsp + 0x24], 0
0x000044b5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000044be      c74424340000.  mov dword [rsp + 0x34], 0
0x000044c6      e8b5f9ffff     call sym.quotearg_n_options
0x000044cb      488b542438     mov rdx, qword [rsp + 0x38]
0x000044d0      644833142528.  xor rdx, qword fs:[0x28]
0x000044d9      750a           jne 0x44e5
0x000044db      4883c448       add rsp, 0x48
0x000044df      c3             ret
0x000044e0      e8bbd2ffff     call sym.imp.abort
0x000044e5      e8e6d3ffff     call sym.imp.__stack_chk_fail
0x000044ea      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000044f0      4889f2         mov rdx, rsi
0x000044f3      89fe           mov esi, edi
0x000044f5      31ff           xor edi, edi
0x000044f7      e9d4feffff     jmp sym.quotearg_n_style
0x000044fc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004500      4889d1         mov rcx, rdx
0x00004503      4889f2         mov rdx, rsi
0x00004506      89fe           mov esi, edi
0x00004508      31ff           xor edi, edi
0x0000450a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000450f      90             nop
;-- quotearg_char_mem:
0x00004510      4883ec48       sub rsp, 0x48
0x00004514      89d1           mov ecx, edx
0x00004516      64488b042528.  mov rax, qword fs:[0x28]
0x0000451f      4889442438     mov qword [rsp + 0x38], rax
0x00004524      31c0           xor eax, eax
0x00004526      488b05035d20.  mov rax, qword [0x0020a230]             ; [0x20a230:8]=0
0x0000452d      4989e0         mov r8, rsp
0x00004530      83e11f         and ecx, 0x1f
0x00004533      660f6f05c55c.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000453b      4889442430     mov qword [rsp + 0x30], rax
0x00004540      89d0           mov eax, edx
0x00004542      0f290424       movaps xmmword [rsp], xmm0
0x00004546      c0e805         shr al, 5
0x00004549      0fb6c0         movzx eax, al
0x0000454c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004551      660f6f05b75c.  movdqa xmm0, xmmword [0x0020a210]
0x00004559      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000455e      660f6f05ba5c.  movdqa xmm0, xmmword [0x0020a220]
0x00004566      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000456b      418b11         mov edx, dword [r9]
0x0000456e      89d0           mov eax, edx
0x00004570      d3e8           shr eax, cl
0x00004572      f7d0           not eax
0x00004574      83e001         and eax, 1
0x00004577      d3e0           shl eax, cl
0x00004579      4c89c1         mov rcx, r8
0x0000457c      31d0           xor eax, edx
0x0000457e      4889f2         mov rdx, rsi
0x00004581      4889fe         mov rsi, rdi
0x00004584      418901         mov dword [r9], eax
0x00004587      31ff           xor edi, edi
0x00004589      e8f2f8ffff     call sym.quotearg_n_options
0x0000458e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004593      644833342528.  xor rsi, qword fs:[0x28]
0x0000459c      7505           jne 0x45a3
0x0000459e      4883c448       add rsp, 0x48
0x000045a2      c3             ret
0x000045a3      e828d3ffff     call sym.imp.__stack_chk_fail
0x000045a8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000045b0      400fbed6       movsx edx, sil
0x000045b4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000045bb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000045c0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000045c5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000045cc      e93fffffff     jmp sym.quotearg_char_mem
0x000045d1      0f1f440000     nop dword [rax + rax]
0x000045d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000045e0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000045e5      e926ffffff     jmp sym.quotearg_char_mem
0x000045ea      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000045f0      4883ec48       sub rsp, 0x48
0x000045f4      4889d0         mov rax, rdx
0x000045f7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004600      4889542438     mov qword [rsp + 0x38], rdx
0x00004605      31d2           xor edx, edx
0x00004607      83fe0a         cmp esi, 0xa
0x0000460a      7468           je 0x4674
0x0000460c      893424         mov dword [rsp], esi
0x0000460f      4889e1         mov rcx, rsp
0x00004612      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004619      4889c6         mov rsi, rax
0x0000461c      48c744240400.  mov qword [rsp + 4], 0
0x00004625      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000462e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004637      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004640      48c744242400.  mov qword [rsp + 0x24], 0
0x00004649      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004652      c74424340000.  mov dword [rsp + 0x34], 0
0x0000465a      e821f8ffff     call sym.quotearg_n_options
0x0000465f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004664      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000466d      750a           jne 0x4679
0x0000466f      4883c448       add rsp, 0x48
0x00004673      c3             ret
0x00004674      e827d1ffff     call sym.imp.abort
0x00004679      e852d2ffff     call sym.imp.__stack_chk_fail
0x0000467e      6690           nop
;-- quotearg_n_custom_mem:
0x00004680      4883ec48       sub rsp, 0x48
0x00004684      4989c9         mov r9, rcx
0x00004687      488b0da25b20.  mov rcx, qword [0x0020a230]             ; [0x20a230:8]=0
0x0000468e      660f6f056a5b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004696      64488b042528.  mov rax, qword fs:[0x28]
0x0000469f      4889442438     mov qword [rsp + 0x38], rax
0x000046a4      31c0           xor eax, eax
0x000046a6      0f290424       movaps xmmword [rsp], xmm0
0x000046aa      4885f6         test rsi, rsi
0x000046ad      48894c2430     mov qword [rsp + 0x30], rcx
0x000046b2      c704240a0000.  mov dword [rsp], 0xa
0x000046b9      660f6f054f5b.  movdqa xmm0, xmmword [0x0020a210]
0x000046c1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000046c6      660f6f05525b.  movdqa xmm0, xmmword [0x0020a220]
0x000046ce      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000046d3      7432           je 0x4707
0x000046d5      4885d2         test rdx, rdx
0x000046d8      742d           je 0x4707
0x000046da      4889742428     mov qword [rsp + 0x28], rsi
0x000046df      4889542430     mov qword [rsp + 0x30], rdx
0x000046e4      4889e1         mov rcx, rsp
0x000046e7      4c89c2         mov rdx, r8
0x000046ea      4c89ce         mov rsi, r9
0x000046ed      e88ef7ffff     call sym.quotearg_n_options
0x000046f2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000046f7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004700      750a           jne 0x470c
0x00004702      4883c448       add rsp, 0x48
0x00004706      c3             ret
0x00004707      e894d0ffff     call sym.imp.abort
0x0000470c      e8bfd1ffff     call sym.imp.__stack_chk_fail
0x00004711      0f1f440000     nop dword [rax + rax]
0x00004716      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004720      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004727      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000472c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004730      4889d1         mov rcx, rdx
0x00004733      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000473a      4889f2         mov rdx, rsi
0x0000473d      4889fe         mov rsi, rdi
0x00004740      31ff           xor edi, edi
0x00004742      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004747      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004750      4989c8         mov r8, rcx
0x00004753      4889d1         mov rcx, rdx
0x00004756      4889f2         mov rdx, rsi
0x00004759      4889fe         mov rsi, rdi
0x0000475c      31ff           xor edi, edi
0x0000475e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004763      0f1f00         nop dword [rax]
0x00004766      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004770      488d0da95820.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00004777      e904f7ffff     jmp sym.quotearg_n_options
0x0000477c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004780      488d0d995820.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00004787      4889f2         mov rdx, rsi
0x0000478a      4889fe         mov rsi, rdi
0x0000478d      31ff           xor edi, edi
0x0000478f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004794      6690           nop
0x00004796      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000047a0      488d0d795820.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x000047a7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000047ae      e9cdf6ffff     jmp sym.quotearg_n_options
0x000047b3      0f1f00         nop dword [rax]
0x000047b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000047c0      488d0d595820.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x000047c7      4889fe         mov rsi, rdi
0x000047ca      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000047d1      31ff           xor edi, edi
0x000047d3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000047d8      0f1f84000000.  nop dword [rax + rax]
;-- try_nocreate:
0x000047e0      53             push rbx                                ; ../coreutils-8.31/lib/tempname.c:284
0x000047e1      4889fe         mov rsi, rdi
0x000047e4      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x000047e9      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/tempname.c:284
0x000047f0      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x000047f3      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/tempname.c:284
0x000047fc      488984249800.  mov qword [rsp + 0x98], rax
0x00004804      31c0           xor eax, eax
0x00004806      e8b5d0ffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000480b      89c3           mov ebx, eax
0x0000480d      e89ecfffff     call sym.imp.__errno_location
0x00004812      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/tempname.c:287
0x00004814      741a           je 0x4830
0x00004816      8b10           mov edx, dword [rax]
0x00004818      83fa4b         cmp edx, 0x4b
0x0000481b      7413           je 0x4830
0x0000481d      31c0           xor eax, eax
0x0000481f      83fa02         cmp edx, 2
0x00004822      0f95c0         setne al
0x00004825      f7d8           neg eax
0x00004827      eb12           jmp 0x483b
0x00004829      0f1f80000000.  nop dword [rax]
0x00004830      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:288 ; [0x11:4]=0x1003e00
0x00004836      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000483b      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/tempname.c:290
0x00004843      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000484c      7509           jne 0x4857
0x0000484e      4881c4a00000.  add rsp, 0xa0
0x00004855      5b             pop rbx
0x00004856      c3             ret
0x00004857      e874d0ffff     call sym.imp.__stack_chk_fail
0x0000485c      0f1f4000       nop dword [rax]
;-- try_dir:
0x00004860      bec0010000     mov esi, 0x1c0                          ; ../coreutils-8.31/lib/tempname.c:278
0x00004865      e9a6cfffff     jmp sym.imp.mkdir
0x0000486a      660f1f440000   nop word [rax + rax]
;-- try_file:
0x00004870      8b36           mov esi, dword [rsi]                    ; ../coreutils-8.31/lib/tempname.c:269
0x00004872      ba80010000     mov edx, 0x180                          ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00004877      31c0           xor eax, eax
0x00004879      4080e63c       and sil, 0x3c                           ; ../coreutils-8.31/lib/tempname.c:273
0x0000487d      4080cec2       or sil, 0xc2                            ; ../coreutils-8.31/lib/tempname.c:271
0x00004881      e92ad2ffff     jmp sym.imp.open                        ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00004886      662e0f1f8400.  nop word cs:[rax + rax]
;-- try_tempname_len:
0x00004890      4157           push r15                                ; ../coreutils-8.31/lib/tempname.c:190
0x00004892      4156           push r14
0x00004894      4989ff         mov r15, rdi
0x00004897      4155           push r13
0x00004899      4154           push r12
0x0000489b      4d89c6         mov r14, r8
0x0000489e      55             push rbp
0x0000489f      53             push rbx
0x000048a0      89f5           mov ebp, esi
0x000048a2      4883ec38       sub rsp, 0x38
0x000048a6      4889542418     mov qword [rsp + 0x18], rdx
0x000048ab      48893c24       mov qword [rsp], rdi
0x000048af      48894c2420     mov qword [rsp + 0x20], rcx
0x000048b4      e8f7ceffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/tempname.c:195
0x000048b9      4889442408     mov qword [rsp + 8], rax
0x000048be      8b00           mov eax, dword [rax]
0x000048c0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/tempname.c:215
0x000048c3      8944242c       mov dword [rsp + 0x2c], eax             ; ../coreutils-8.31/lib/tempname.c:195
0x000048c7      e8e4cfffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/tempname.c:215
0x000048cc      4863f5         movsxd rsi, ebp                         ; ../coreutils-8.31/lib/tempname.c:216
0x000048cf      4a8d1436       lea rdx, [rsi + r14]
0x000048d3      4839c2         cmp rdx, rax
0x000048d6      0f870f010000   ja 0x49eb
0x000048dc      4c29f0         sub rax, r14                            ; ../coreutils-8.31/lib/tempname.c:217
0x000048df      4889c3         mov rbx, rax
0x000048e2      4829f3         sub rbx, rsi
0x000048e5      488d357a2f00.  lea rsi, [0x00007866]                   ; ../coreutils-8.31/lib/tempname.c:180 ; "X"
0x000048ec      498d041f       lea rax, [r15 + rbx]                    ; ../coreutils-8.31/lib/tempname.c:217
0x000048f0      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/tempname.c:180
0x000048f3      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/tempname.c:217
0x000048f8      e873d0ffff     call sym.imp.strspn                     ; ../coreutils-8.31/lib/tempname.c:180
0x000048fd      4939c6         cmp r14, rax                            ; ../coreutils-8.31/lib/tempname.c:217
0x00004900      0f87e5000000   ja 0x49eb
0x00004906      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/tempname.c:228
0x00004908      4c89f6         mov rsi, r14
0x0000490b      e8e00c0000     call sym.randint_all_new
0x00004910      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/tempname.c:229
0x00004913      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/tempname.c:228
0x00004916      0f84e1000000   je 0x49fd                               ; ../coreutils-8.31/lib/tempname.c:229
0x0000491c      488b0424       mov rax, qword [rsp]
0x00004920      4c8d25992b00.  lea r12, obj.letters                    ; 0x74c0 ; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
0x00004927      41bdf8a20300   mov r13d, 0x3a2f8
0x0000492d      4c01f0         add rax, r14
0x00004930      4801c3         add rbx, rax
0x00004933      0f1f440000     nop dword [rax + rax]
0x00004938      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/tempname.c:236
0x0000493b      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00004940      7425           je 0x4967
0x00004942      660f1f440000   nop word [rax + rax]
0x00004948      be3d000000     mov esi, 0x3d                           ; ../coreutils-8.31/lib/tempname.c:237 ; '='
0x0000494d      4889ef         mov rdi, rbp
0x00004950      4983c701       add r15, 1
0x00004954      e8e70c0000     call sym.randint_genmax
0x00004959      410fb60404     movzx eax, byte [r12 + rax]
0x0000495e      418847ff       mov byte [r15 - 1], al
0x00004962      4939df         cmp r15, rbx                            ; ../coreutils-8.31/lib/tempname.c:236
0x00004965      75e1           jne 0x4948
0x00004967      488b742418     mov rsi, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/tempname.c:239
0x0000496c      488b3c24       mov rdi, qword [rsp]
0x00004970      488b442420     mov rax, qword [rsp + 0x20]
0x00004975      ffd0           call rax
0x00004977      85c0           test eax, eax                           ; ../coreutils-8.31/lib/tempname.c:240
0x00004979      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/tempname.c:239
0x0000497b      792c           jns 0x49a9                              ; ../coreutils-8.31/lib/tempname.c:240
0x0000497d      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:245
0x00004982      8b08           mov ecx, dword [rax]
0x00004984      83f911         cmp ecx, 0x11
0x00004987      755b           jne 0x49e4
0x00004989      4183ed01       sub r13d, 1                             ; ../coreutils-8.31/lib/tempname.c:232
0x0000498d      75a9           jne 0x4938
0x0000498f      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:252
0x00004992      e8e90d0000     call sym.randint_all_free
0x00004997      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:255
0x0000499c      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:256 ; -1
0x000049a1      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:255 ; [0x11:4]=0x1003e00
0x000049a7      eb2a           jmp 0x49d3                              ; ../coreutils-8.31/lib/tempname.c:256
0x000049a9      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:242
0x000049ae      8b44242c       mov eax, dword [rsp + 0x2c]
0x000049b2      8901           mov dword [rcx], eax
0x000049b4      89c1           mov ecx, eax                            ; ../coreutils-8.31/lib/tempname.c:243
0x000049b6      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:261
0x000049b9      89542410       mov dword [rsp + 0x10], edx
0x000049bd      890c24         mov dword [rsp], ecx
0x000049c0      e8bb0d0000     call sym.randint_all_free
0x000049c5      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:262
0x000049ca      8b0c24         mov ecx, dword [rsp]
0x000049cd      8b542410       mov edx, dword [rsp + 0x10]             ; ../coreutils-8.31/lib/tempname.c:264
0x000049d1      8908           mov dword [rax], ecx                    ; ../coreutils-8.31/lib/tempname.c:262
0x000049d3      4883c438       add rsp, 0x38                           ; ../coreutils-8.31/lib/tempname.c:265
0x000049d7      89d0           mov eax, edx
0x000049d9      5b             pop rbx
0x000049da      5d             pop rbp
0x000049db      415c           pop r12
0x000049dd      415d           pop r13
0x000049df      415e           pop r14
0x000049e1      415f           pop r15
0x000049e3      c3             ret
0x000049e4      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:247 ; -1
0x000049e9      ebcb           jmp 0x49b6
0x000049eb      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:220
0x000049f0      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:221 ; -1
0x000049f5      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/tempname.c:220 ; [0x16:4]=0x22300000
0x000049fb      ebd6           jmp 0x49d3                              ; ../coreutils-8.31/lib/tempname.c:221
0x000049fd      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:230 ; -1
0x00004a02      ebcf           jmp 0x49d3
0x00004a04      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:181
0x00004a06      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname_len:
0x00004a10      4883ec18       sub rsp, 0x18
0x00004a14      83f901         cmp ecx, 1
0x00004a17      8954240c       mov dword [rsp + 0xc], edx
0x00004a1b      7463           je 0x4a80
0x00004a1d      83f902         cmp ecx, 2
0x00004a20      7426           je 0x4a48
0x00004a22      85c9           test ecx, ecx
0x00004a24      743a           je 0x4a60
0x00004a26      488d0d732a00.  lea rcx, obj.__PRETTY_FUNCTION__.5642   ; 0x74a0 ; "gen_tempname_len"
0x00004a2d      488d35142a00.  lea rsi, [0x00007448]                   ; "../coreutils-8.31/lib/tempname.c"
0x00004a34      488d3d352a00.  lea rdi, str.invalid_KIND_in___gen_tempname ; 0x7470 ; "! \"invalid KIND in __gen_tempname\""
0x00004a3b      ba47010000     mov edx, 0x147
0x00004a40      e8fbceffff     call sym.imp.__assert_fail
0x00004a45      0f1f00         nop dword [rax]
0x00004a48      488d54240c     lea rdx, [rsp + 0xc]
0x00004a4d      488d0d8cfdff.  lea rcx, sym.try_nocreate               ; ../coreutils-8.31/lib/tempname.c:202 ; 0x47e0 ; "SH\x89\xfe\xbf\x01"
0x00004a54      e837feffff     call sym.try_tempname_len
0x00004a59      4883c418       add rsp, 0x18
0x00004a5d      c3             ret
0x00004a5e      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:203
0x00004a60      488d54240c     lea rdx, [rsp + 0xc]
0x00004a65      488d0d04feff.  lea rcx, sym.try_file                   ; 0x4870
0x00004a6c      e81ffeffff     call sym.try_tempname_len
0x00004a71      4883c418       add rsp, 0x18
0x00004a75      c3             ret
0x00004a76      662e0f1f8400.  nop word cs:[rax + rax]
0x00004a80      488d54240c     lea rdx, [rsp + 0xc]
0x00004a85      488d0dd4fdff.  lea rcx, sym.try_dir                    ; 0x4860
0x00004a8c      e8fffdffff     call sym.try_tempname_len
0x00004a91      4883c418       add rsp, 0x18
0x00004a95      c3             ret
0x00004a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname:
0x00004aa0      41b806000000   mov r8d, 6
0x00004aa6      e965ffffff     jmp sym.gen_tempname_len
0x00004aab      0f1f440000     nop dword [rax + rax]
;-- try_tempname:
0x00004ab0      41b806000000   mov r8d, 6
0x00004ab6      e9d5fdffff     jmp sym.try_tempname_len
0x00004abb      0f1f440000     nop dword [rax + rax]
;-- version_etc_arn:
0x00004ac0      4157           push r15
0x00004ac2      4156           push r14
0x00004ac4      4155           push r13
0x00004ac6      4154           push r12
0x00004ac8      4d89cc         mov r12, r9
0x00004acb      55             push rbp
0x00004acc      53             push rbx
0x00004acd      4889fd         mov rbp, rdi
0x00004ad0      4c89c3         mov rbx, r8
0x00004ad3      4883ec28       sub rsp, 0x28
0x00004ad7      4885f6         test rsi, rsi
0x00004ada      0f8418010000   je 0x4bf8
0x00004ae0      4989d0         mov r8, rdx
0x00004ae3      488d15152a00.  lea rdx, str.s___s___s                  ; 0x74ff ; "%s (%s) %s\n"
0x00004aea      4989c9         mov r9, rcx
0x00004aed      31c0           xor eax, eax
0x00004aef      4889f1         mov rcx, rsi
0x00004af2      be01000000     mov esi, 1
0x00004af7      e824d0ffff     call sym.imp.__fprintf_chk
0x00004afc      488d350f2a00.  lea rsi, [0x00007512]                   ; "(C)"
0x00004b03      31ff           xor edi, edi
0x00004b05      ba05000000     mov edx, 5
0x00004b0a      e881cdffff     call sym.imp.dcgettext
0x00004b0f      488d150a2d00.  lea rdx, obj.version_etc_copyright      ; 0x7820 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004b16      4889c1         mov rcx, rax
0x00004b19      41b8e3070000   mov r8d, 0x7e3
0x00004b1f      be01000000     mov esi, 1
0x00004b24      4889ef         mov rdi, rbp
0x00004b27      31c0           xor eax, eax
0x00004b29      e8f2cfffff     call sym.imp.__fprintf_chk
0x00004b2e      488d35632a00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x7598 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004b35      31ff           xor edi, edi
0x00004b37      ba05000000     mov edx, 5
0x00004b3c      e84fcdffff     call sym.imp.dcgettext
0x00004b41      4889ee         mov rsi, rbp
0x00004b44      4889c7         mov rdi, rax
0x00004b47      e844ceffff     call sym.imp.fputs_unlocked
0x00004b4c      4983fc09       cmp r12, 9
0x00004b50      0f873a030000   ja 0x4e90
0x00004b56      488d159b2c00.  lea rdx, [0x000077f8]
0x00004b5d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004b61      4801d0         add rax, rdx
0x00004b64      ffe0           jmp rax
0x00004b66      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b70      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004b74      488b4310       mov rax, qword [rbx + 0x10]
0x00004b78      488d35892b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x7708 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004b7f      4c8b4308       mov r8, qword [rbx + 8]
0x00004b83      ba05000000     mov edx, 5
0x00004b88      31ff           xor edi, edi
0x00004b8a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004b8e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004b92      4c894c2410     mov qword [rsp + 0x10], r9
0x00004b97      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004b9b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004b9f      48890424       mov qword [rsp], rax
0x00004ba3      4c89442408     mov qword [rsp + 8], r8
0x00004ba8      488b1b         mov rbx, qword [rbx]
0x00004bab      e8e0ccffff     call sym.imp.dcgettext
0x00004bb0      4883ec08       sub rsp, 8
0x00004bb4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004bb9      4889c2         mov rdx, rax
0x00004bbc      4889d9         mov rcx, rbx
0x00004bbf      be01000000     mov esi, 1
0x00004bc4      4889ef         mov rdi, rbp
0x00004bc7      31c0           xor eax, eax
0x00004bc9      4151           push r9
0x00004bcb      4155           push r13
0x00004bcd      4154           push r12
0x00004bcf      4157           push r15
0x00004bd1      4156           push r14
0x00004bd3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004bd8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004bdd      e83ecfffff     call sym.imp.__fprintf_chk
0x00004be2      4883c430       add rsp, 0x30
0x00004be6      4883c428       add rsp, 0x28
0x00004bea      5b             pop rbx
0x00004beb      5d             pop rbp
0x00004bec      415c           pop r12
0x00004bee      415d           pop r13
0x00004bf0      415e           pop r14
0x00004bf2      415f           pop r15
0x00004bf4      c3             ret
0x00004bf5      0f1f00         nop dword [rax]
0x00004bf8      4989c8         mov r8, rcx
0x00004bfb      4889d1         mov rcx, rdx
0x00004bfe      488d15062900.  lea rdx, str.s__s                       ; 0x750b ; "%s %s\n"
0x00004c05      be01000000     mov esi, 1
0x00004c0a      31c0           xor eax, eax
0x00004c0c      e80fcfffff     call sym.imp.__fprintf_chk
0x00004c11      e9e6feffff     jmp 0x4afc
0x00004c16      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c20      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004c24      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004c28      488d35092b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x7738 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004c2f      488b4310       mov rax, qword [rbx + 0x10]
0x00004c33      4c8b4308       mov r8, qword [rbx + 8]
0x00004c37      ba05000000     mov edx, 5
0x00004c3c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004c40      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004c44      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004c48      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004c4c      488b1b         mov rbx, qword [rbx]
0x00004c4f      4c89542418     mov qword [rsp + 0x18], r10
0x00004c54      4c894c2410     mov qword [rsp + 0x10], r9
0x00004c59      48890424       mov qword [rsp], rax
0x00004c5d      4c89442408     mov qword [rsp + 8], r8
0x00004c62      31ff           xor edi, edi
0x00004c64      e827ccffff     call sym.imp.dcgettext
0x00004c69      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004c6e      4152           push r10
0x00004c70      e93fffffff     jmp 0x4bb4
0x00004c75      0f1f00         nop dword [rax]
0x00004c78      488b1b         mov rbx, qword [rbx]
0x00004c7b      488d35942800.  lea rsi, str.Written_by__s.             ; 0x7516 ; "Written by %s.\n"
0x00004c82      ba05000000     mov edx, 5
0x00004c87      31ff           xor edi, edi
0x00004c89      e802ccffff     call sym.imp.dcgettext
0x00004c8e      4883c428       add rsp, 0x28
0x00004c92      4889d9         mov rcx, rbx
0x00004c95      4889ef         mov rdi, rbp
0x00004c98      5b             pop rbx
0x00004c99      5d             pop rbp
0x00004c9a      415c           pop r12
0x00004c9c      415d           pop r13
0x00004c9e      415e           pop r14
0x00004ca0      415f           pop r15
0x00004ca2      4889c2         mov rdx, rax
0x00004ca5      be01000000     mov esi, 1
0x00004caa      31c0           xor eax, eax
0x00004cac      e96fceffff     jmp sym.imp.__fprintf_chk
0x00004cb1      0f1f80000000.  nop dword [rax]
0x00004cb8      4c8b6308       mov r12, qword [rbx + 8]
0x00004cbc      488d35632800.  lea rsi, str.Written_by__s_and__s.      ; 0x7526 ; "Written by %s and %s.\n"
0x00004cc3      488b1b         mov rbx, qword [rbx]
0x00004cc6      ba05000000     mov edx, 5
0x00004ccb      31ff           xor edi, edi
0x00004ccd      e8becbffff     call sym.imp.dcgettext
0x00004cd2      4883c428       add rsp, 0x28
0x00004cd6      4d89e0         mov r8, r12
0x00004cd9      4889d9         mov rcx, rbx
0x00004cdc      4889ef         mov rdi, rbp
0x00004cdf      4889c2         mov rdx, rax
0x00004ce2      be01000000     mov esi, 1
0x00004ce7      5b             pop rbx
0x00004ce8      5d             pop rbp
0x00004ce9      415c           pop r12
0x00004ceb      415d           pop r13
0x00004ced      415e           pop r14
0x00004cef      415f           pop r15
0x00004cf1      31c0           xor eax, eax
0x00004cf3      e928ceffff     jmp sym.imp.__fprintf_chk
0x00004cf8      0f1f84000000.  nop dword [rax + rax]
0x00004d00      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004d04      4c8b6308       mov r12, qword [rbx + 8]
0x00004d08      488d352e2800.  lea rsi, str.Written_by__s___s__and__s. ; 0x753d ; "Written by %s, %s, and %s.\n"
0x00004d0f      488b1b         mov rbx, qword [rbx]
0x00004d12      ba05000000     mov edx, 5
0x00004d17      31ff           xor edi, edi
0x00004d19      e872cbffff     call sym.imp.dcgettext
0x00004d1e      4883c428       add rsp, 0x28
0x00004d22      4d89e9         mov r9, r13
0x00004d25      4d89e0         mov r8, r12
0x00004d28      4889d9         mov rcx, rbx
0x00004d2b      4889ef         mov rdi, rbp
0x00004d2e      4889c2         mov rdx, rax
0x00004d31      5b             pop rbx
0x00004d32      5d             pop rbp
0x00004d33      415c           pop r12
0x00004d35      415d           pop r13
0x00004d37      415e           pop r14
0x00004d39      415f           pop r15
0x00004d3b      be01000000     mov esi, 1
0x00004d40      31c0           xor eax, eax
0x00004d42      e9d9cdffff     jmp sym.imp.__fprintf_chk
0x00004d47      660f1f840000.  nop word [rax + rax]
0x00004d50      488d35112900.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x7668 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004d57      ba05000000     mov edx, 5
0x00004d5c      31ff           xor edi, edi
0x00004d5e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004d62      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004d66      4c8b6308       mov r12, qword [rbx + 8]
0x00004d6a      488b1b         mov rbx, qword [rbx]
0x00004d6d      e81ecbffff     call sym.imp.dcgettext
0x00004d72      4883ec08       sub rsp, 8
0x00004d76      4156           push r14
0x00004d78      4889c2         mov rdx, rax
0x00004d7b      4d89e9         mov r9, r13
0x00004d7e      4d89e0         mov r8, r12
0x00004d81      4889d9         mov rcx, rbx
0x00004d84      4889ef         mov rdi, rbp
0x00004d87      be01000000     mov esi, 1
0x00004d8c      31c0           xor eax, eax
0x00004d8e      e88dcdffff     call sym.imp.__fprintf_chk
0x00004d93      58             pop rax
0x00004d94      5a             pop rdx
0x00004d95      4883c428       add rsp, 0x28
0x00004d99      5b             pop rbx
0x00004d9a      5d             pop rbp
0x00004d9b      415c           pop r12
0x00004d9d      415d           pop r13
0x00004d9f      415e           pop r14
0x00004da1      415f           pop r15
0x00004da3      c3             ret
0x00004da4      0f1f4000       nop dword [rax]
0x00004da8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004dac      488d35d52800.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x7688 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004db3      ba05000000     mov edx, 5
0x00004db8      31ff           xor edi, edi
0x00004dba      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004dbe      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004dc2      4c8b6308       mov r12, qword [rbx + 8]
0x00004dc6      488b1b         mov rbx, qword [rbx]
0x00004dc9      e8c2caffff     call sym.imp.dcgettext
0x00004dce      4157           push r15
0x00004dd0      eba4           jmp 0x4d76
0x00004dd2      660f1f440000   nop word [rax + rax]
0x00004dd8      4c8b4308       mov r8, qword [rbx + 8]
0x00004ddc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004de0      488d35c92800.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x76b0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004de7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004deb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004def      ba05000000     mov edx, 5
0x00004df4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004df8      31ff           xor edi, edi
0x00004dfa      488b1b         mov rbx, qword [rbx]
0x00004dfd      4c890424       mov qword [rsp], r8
0x00004e01      e88acaffff     call sym.imp.dcgettext
0x00004e06      4883ec08       sub rsp, 8
0x00004e0a      4d89e9         mov r9, r13
0x00004e0d      4154           push r12
0x00004e0f      4157           push r15
0x00004e11      4156           push r14
0x00004e13      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004e18      4889d9         mov rcx, rbx
0x00004e1b      4889c2         mov rdx, rax
0x00004e1e      4889ef         mov rdi, rbp
0x00004e21      be01000000     mov esi, 1
0x00004e26      31c0           xor eax, eax
0x00004e28      e8f3ccffff     call sym.imp.__fprintf_chk
0x00004e2d      4883c420       add rsp, 0x20
0x00004e31      4883c428       add rsp, 0x28
0x00004e35      5b             pop rbx
0x00004e36      5d             pop rbp
0x00004e37      415c           pop r12
0x00004e39      415d           pop r13
0x00004e3b      415e           pop r14
0x00004e3d      415f           pop r15
0x00004e3f      c3             ret
0x00004e40      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004e44      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004e48      488d35892800.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x76d8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004e4f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004e53      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004e57      ba05000000     mov edx, 5
0x00004e5c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004e60      4c8b4308       mov r8, qword [rbx + 8]
0x00004e64      31ff           xor edi, edi
0x00004e66      4c894c2408     mov qword [rsp + 8], r9
0x00004e6b      488b1b         mov rbx, qword [rbx]
0x00004e6e      4c890424       mov qword [rsp], r8
0x00004e72      e819caffff     call sym.imp.dcgettext
0x00004e77      4155           push r13
0x00004e79      4154           push r12
0x00004e7b      4157           push r15
0x00004e7d      4156           push r14
0x00004e7f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004e84      eb8d           jmp 0x4e13
0x00004e86      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e90      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004e94      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004e98      ba05000000     mov edx, 5
0x00004e9d      488b4310       mov rax, qword [rbx + 0x10]
0x00004ea1      4c8b4308       mov r8, qword [rbx + 8]
0x00004ea5      488d35c42800.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x7770 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00004eac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004eb0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004eb4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004eb8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004ebc      4c89542418     mov qword [rsp + 0x18], r10
0x00004ec1      4c894c2410     mov qword [rsp + 0x10], r9
0x00004ec6      48890424       mov qword [rsp], rax
0x00004eca      4c89442408     mov qword [rsp + 8], r8
0x00004ecf      488b1b         mov rbx, qword [rbx]
0x00004ed2      e98bfdffff     jmp 0x4c62
0x00004ed7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004ee0      4531c9         xor r9d, r9d
0x00004ee3      49833800       cmp qword [r8], 0
0x00004ee7      7412           je 0x4efb
0x00004ee9      0f1f80000000.  nop dword [rax]
0x00004ef0      4983c101       add r9, 1
0x00004ef4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004ef9      75f5           jne 0x4ef0
0x00004efb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004f00      4883ec68       sub rsp, 0x68
0x00004f04      4d89c2         mov r10, r8
0x00004f07      4531c9         xor r9d, r9d
0x00004f0a      64488b042528.  mov rax, qword fs:[0x28]
0x00004f13      4889442458     mov qword [rsp + 0x58], rax
0x00004f18      31c0           xor eax, eax
0x00004f1a      4989e0         mov r8, rsp
0x00004f1d      0f1f00         nop dword [rax]
0x00004f20      418b02         mov eax, dword [r10]
0x00004f23      83f82f         cmp eax, 0x2f
0x00004f26      7742           ja 0x4f6a
0x00004f28      4189c3         mov r11d, eax
0x00004f2b      4d035a10       add r11, qword [r10 + 0x10]
0x00004f2f      83c008         add eax, 8
0x00004f32      418902         mov dword [r10], eax
0x00004f35      498b03         mov rax, qword [r11]
0x00004f38      4885c0         test rax, rax
0x00004f3b      4b8904c8       mov qword [r8 + r9*8], rax
0x00004f3f      740a           je 0x4f4b
0x00004f41      4983c101       add r9, 1
0x00004f45      4983f90a       cmp r9, 0xa
0x00004f49      75d5           jne 0x4f20
0x00004f4b      e870fbffff     call sym.version_etc_arn
0x00004f50      488b442458     mov rax, qword [rsp + 0x58]
0x00004f55      644833042528.  xor rax, qword fs:[0x28]
0x00004f5e      7505           jne 0x4f65
0x00004f60      4883c468       add rsp, 0x68
0x00004f64      c3             ret
0x00004f65      e866c9ffff     call sym.imp.__stack_chk_fail
0x00004f6a      4d8b5a08       mov r11, qword [r10 + 8]
0x00004f6e      498d4308       lea rax, [r11 + 8]
0x00004f72      49894208       mov qword [r10 + 8], rax
0x00004f76      ebbd           jmp 0x4f35
0x00004f78      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004f80      55             push rbp
0x00004f81      53             push rbx
0x00004f82      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004f88      4531db         xor r11d, r11d
0x00004f8b      4881ecb80000.  sub rsp, 0xb8
0x00004f92      64488b042528.  mov rax, qword fs:[0x28]
0x00004f9b      4889442478     mov qword [rsp + 0x78], rax
0x00004fa0      31c0           xor eax, eax
0x00004fa2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004faa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004fb2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00004fba      4c8d442420     lea r8, [rsp + 0x20]
0x00004fbf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004fc7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00004fcf      4889442410     mov qword [rsp + 0x10], rax
0x00004fd4      488d84248000.  lea rax, [rsp + 0x80]
0x00004fdc      4531c9         xor r9d, r9d
0x00004fdf      4889442418     mov qword [rsp + 0x18], rax
0x00004fe4      4889c5         mov rbp, rax
0x00004fe7      660f1f840000.  nop word [rax + rax]
0x00004ff0      4183fa2f       cmp r10d, 0x2f
0x00004ff4      7756           ja 0x504c
0x00004ff6      4489d0         mov eax, r10d
0x00004ff9      41bb01000000   mov r11d, 1
0x00004fff      4183c208       add r10d, 8
0x00005003      4801e8         add rax, rbp
0x00005006      488b00         mov rax, qword [rax]
0x00005009      4885c0         test rax, rax
0x0000500c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005010      740a           je 0x501c
0x00005012      4983c101       add r9, 1
0x00005016      4983f90a       cmp r9, 0xa
0x0000501a      75d4           jne 0x4ff0
0x0000501c      4584db         test r11b, r11b
0x0000501f      7524           jne 0x5045
0x00005021      e89afaffff     call sym.version_etc_arn
0x00005026      488b442478     mov rax, qword [rsp + 0x78]
0x0000502b      644833042528.  xor rax, qword fs:[0x28]
0x00005034      750a           jne 0x5040
0x00005036      4881c4b80000.  add rsp, 0xb8
0x0000503d      5b             pop rbx
0x0000503e      5d             pop rbp
0x0000503f      c3             ret
0x00005040      e88bc8ffff     call sym.imp.__stack_chk_fail
0x00005045      4489542408     mov dword [rsp + 8], r10d
0x0000504a      ebd5           jmp 0x5021
0x0000504c      4889d8         mov rax, rbx
0x0000504f      4883c308       add rbx, 8
0x00005053      ebb1           jmp 0x5006
0x00005055      90             nop
0x00005056      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005060      53             push rbx
0x00005061      488d35f12400.  lea rsi, str.Report_bugs_to:__s         ; 0x7559 ; "\nReport bugs to: %s\n"
0x00005068      ba05000000     mov edx, 5
0x0000506d      31ff           xor edi, edi
0x0000506f      e81cc8ffff     call sym.imp.dcgettext
0x00005074      488d15f32400.  lea rdx, str.bug_coreutils_gnu.org      ; 0x756e ; "bug-coreutils@gnu.org"
0x0000507b      4889c6         mov rsi, rax
0x0000507e      bf01000000     mov edi, 1
0x00005083      31c0           xor eax, eax
0x00005085      e8d6c9ffff     call sym.imp.__printf_chk
0x0000508a      488d35f32400.  lea rsi, str.s_home_page:___s           ; 0x7584 ; "%s home page: <%s>\n"
0x00005091      ba05000000     mov edx, 5
0x00005096      31ff           xor edi, edi
0x00005098      e8f3c7ffff     call sym.imp.dcgettext
0x0000509d      488d0d941c00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6d38 ; "https://www.gnu.org/software/coreutils/"
0x000050a4      488d15f61500.  lea rdx, str.GNU_coreutils              ; 0x66a1 ; "GNU coreutils"
0x000050ab      4889c6         mov rsi, rax
0x000050ae      bf01000000     mov edi, 1
0x000050b3      31c0           xor eax, eax
0x000050b5      e8a6c9ffff     call sym.imp.__printf_chk
0x000050ba      488b1dc74f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a088:8]=0
0x000050c1      488d35e82600.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x77b0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000050c8      31ff           xor edi, edi
0x000050ca      ba05000000     mov edx, 5
0x000050cf      e8bcc7ffff     call sym.imp.dcgettext
0x000050d4      4889de         mov rsi, rbx
0x000050d7      4889c7         mov rdi, rax
0x000050da      5b             pop rbx
0x000050db      e9b0c8ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000050e0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000050e1      4889fb         mov rbx, rdi
0x000050e4      e807c9ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000050e9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000050ec      7505           jne 0x50f3
0x000050ee      4885db         test rbx, rbx
0x000050f1      7502           jne 0x50f5
0x000050f3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000050f4      c3             ret
0x000050f5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000050fa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005100      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005103      48f7e6         mul rsi
0x00005106      4889c7         mov rdi, rax
0x00005109      0f90c0         seto al
0x0000510c      4885ff         test rdi, rdi
0x0000510f      780a           js 0x511b
0x00005111      0fb6c0         movzx eax, al
0x00005114      4885c0         test rax, rax
0x00005117      7502           jne 0x511b
0x00005119      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000511b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000511f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005124      6690           nop
0x00005126      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005130      ebae           jmp sym.xmalloc
0x00005132      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005136      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005140      4885f6         test rsi, rsi
0x00005143      53             push rbx
0x00005144      4889f3         mov rbx, rsi
0x00005147      7505           jne 0x514e
0x00005149      4885ff         test rdi, rdi
0x0000514c      751a           jne 0x5168
0x0000514e      4889de         mov rsi, rbx
0x00005151      e8dac8ffff     call sym.imp.realloc
0x00005156      4885c0         test rax, rax
0x00005159      7505           jne 0x5160
0x0000515b      4885db         test rbx, rbx
0x0000515e      7511           jne 0x5171                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005160      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005161      c3             ret
0x00005162      660f1f440000   nop word [rax + rax]
0x00005168      e823c6ffff     call sym.imp.free
0x0000516d      31c0           xor eax, eax
0x0000516f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005170      c3             ret
0x00005171      e8ba010000     call sym.xalloc_die
0x00005176      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005180      4889f0         mov rax, rsi
0x00005183      48f7e2         mul rdx
0x00005186      4889c6         mov rsi, rax
0x00005189      0f90c0         seto al
0x0000518c      4885f6         test rsi, rsi
0x0000518f      780a           js 0x519b
0x00005191      0fb6c0         movzx eax, al
0x00005194      4885c0         test rax, rax
0x00005197      7502           jne 0x519b
0x00005199      eba5           jmp sym.xrealloc
0x0000519b      4883ec08       sub rsp, 8
0x0000519f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000051a4      6690           nop
0x000051a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000051b0      4885ff         test rdi, rdi
0x000051b3      4989d1         mov r9, rdx
0x000051b6      488b0e         mov rcx, qword [rsi]
0x000051b9      7435           je 0x51f0
0x000051bb      31d2           xor edx, edx
0x000051bd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000051c7      49f7f1         div r9
0x000051ca      4839c8         cmp rax, rcx
0x000051cd      763c           jbe 0x520b
0x000051cf      4889c8         mov rax, rcx
0x000051d2      48d1e8         shr rax, 1
0x000051d5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000051da      48890e         mov qword [rsi], rcx
0x000051dd      490fafc9       imul rcx, r9
0x000051e1      4889ce         mov rsi, rcx
0x000051e4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000051e9      0f1f80000000.  nop dword [rax]
0x000051f0      4885c9         test rcx, rcx
0x000051f3      7423           je 0x5218
0x000051f5      4889c8         mov rax, rcx
0x000051f8      49f7e1         mul r9
0x000051fb      0f90c2         seto dl
0x000051fe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005201      0fb6d2         movzx edx, dl
0x00005204      7805           js 0x520b
0x00005206      4885d2         test rdx, rdx
0x00005209      74cf           je 0x51da
0x0000520b      4883ec08       sub rsp, 8
0x0000520f      e81c010000     call sym.xalloc_die
0x00005214      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005218      31d2           xor edx, edx
0x0000521a      b880000000     mov eax, 0x80
0x0000521f      4531c0         xor r8d, r8d
0x00005222      49f7f1         div r9
0x00005225      4885c0         test rax, rax
0x00005228      410f94c0       sete r8b
0x0000522c      498d0c00       lea rcx, [r8 + rax]
0x00005230      ebc3           jmp 0x51f5
0x00005232      0f1f4000       nop dword [rax]
0x00005236      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005240      4885ff         test rdi, rdi
0x00005243      488b06         mov rax, qword [rsi]
0x00005246      7428           je 0x5270
0x00005248      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005252      4839d0         cmp rax, rdx
0x00005255      772a           ja 0x5281
0x00005257      4889c2         mov rdx, rax
0x0000525a      48d1ea         shr rdx, 1
0x0000525d      488d440201     lea rax, [rdx + rax + 1]
0x00005262      488906         mov qword [rsi], rax
0x00005265      4889c6         mov rsi, rax
0x00005268      e9d3feffff     jmp sym.xrealloc
0x0000526d      0f1f00         nop dword [rax]
0x00005270      4885c0         test rax, rax
0x00005273      ba80000000     mov edx, 0x80
0x00005278      480f44c2       cmove rax, rdx
0x0000527c      4885c0         test rax, rax
0x0000527f      79e1           jns 0x5262
0x00005281      4883ec08       sub rsp, 8
0x00005285      e8a6000000     call sym.xalloc_die
0x0000528a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005290      53             push rbx
0x00005291      4889fb         mov rbx, rdi
0x00005294      e847feffff     call sym.xmalloc
0x00005299      4889da         mov rdx, rbx
0x0000529c      31f6           xor esi, esi
0x0000529e      4889c7         mov rdi, rax
0x000052a1      5b             pop rbx
0x000052a2      e9a9c6ffff     jmp sym.imp.memset
0x000052a7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000052b0      4889f8         mov rax, rdi
0x000052b3      4883ec08       sub rsp, 8
0x000052b7      48f7e6         mul rsi
0x000052ba      0f90c2         seto dl
0x000052bd      4885c0         test rax, rax
0x000052c0      7817           js 0x52d9
0x000052c2      0fb6d2         movzx edx, dl
0x000052c5      4885d2         test rdx, rdx
0x000052c8      750f           jne 0x52d9
0x000052ca      e8d1c6ffff     call sym.imp.calloc
0x000052cf      4885c0         test rax, rax
0x000052d2      7405           je 0x52d9
0x000052d4      4883c408       add rsp, 8
0x000052d8      c3             ret
0x000052d9      e852000000     call sym.xalloc_die
0x000052de      6690           nop
;-- xmemdup:
0x000052e0      55             push rbp
0x000052e1      53             push rbx
0x000052e2      4889fd         mov rbp, rdi
0x000052e5      4889f7         mov rdi, rsi
0x000052e8      4889f3         mov rbx, rsi
0x000052eb      4883ec08       sub rsp, 8
0x000052ef      e8ecfdffff     call sym.xmalloc
0x000052f4      4883c408       add rsp, 8
0x000052f8      4889da         mov rdx, rbx
0x000052fb      4889ee         mov rsi, rbp
0x000052fe      5b             pop rbx
0x000052ff      5d             pop rbp
0x00005300      4889c7         mov rdi, rax
0x00005303      e9b8c6ffff     jmp sym.imp.memcpy
0x00005308      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005310      53             push rbx
0x00005311      4889fb         mov rbx, rdi
0x00005314      e897c5ffff     call sym.imp.strlen
0x00005319      4889df         mov rdi, rbx
0x0000531c      488d7001       lea rsi, [rax + 1]
0x00005320      5b             pop rbx
0x00005321      ebbd           jmp sym.xmemdup
0x00005323      662e0f1f8400.  nop word cs:[rax + rax]
0x0000532d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005330      488d35182500.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x784f ; "memory exhausted"
0x00005337      4883ec08       sub rsp, 8
0x0000533b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005340      31ff           xor edi, edi
0x00005342      e849c5ffff     call sym.imp.dcgettext
0x00005347      8b3dcb4c2000   mov edi, dword [obj.exit_failure]       ; [0x20a018:4]=1
0x0000534d      488d15c31b00.  lea rdx, [0x00006f17]                   ; "%s"
0x00005354      4889c1         mov rcx, rax
0x00005357      31f6           xor esi, esi
0x00005359      31c0           xor eax, eax
0x0000535b      e830c7ffff     call sym.imp.error
0x00005360      e83bc4ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005365      662e0f1f8400.  nop word cs:[rax + rax]
0x0000536f      90             nop
;-- rpl_fclose:
0x00005370      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005372      55             push rbp
0x00005373      53             push rbx
0x00005374      4889fb         mov rbx, rdi
0x00005377      e854c6ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000537c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000537e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005381      7854           js 0x53d7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005383      e898c6ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005388      85c0           test eax, eax
0x0000538a      752c           jne 0x53b8
0x0000538c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000538f      e85c000000     call sym.rpl_fflush
0x00005394      85c0           test eax, eax
0x00005396      743c           je 0x53d4
0x00005398      e813c4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000539d      448b20         mov r12d, dword [rax]
0x000053a0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000053a3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000053a6      e8c5c4ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000053ab      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000053ae      7530           jne 0x53e0
0x000053b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000053b1      5d             pop rbp
0x000053b2      415c           pop r12
0x000053b4      c3             ret
0x000053b5      0f1f00         nop dword [rax]
0x000053b8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000053bb      e810c6ffff     call sym.imp.fileno
0x000053c0      31f6           xor esi, esi
0x000053c2      ba01000000     mov edx, 1
0x000053c7      89c7           mov edi, eax
0x000053c9      e852c5ffff     call sym.imp.lseek
0x000053ce      4883f8ff       cmp rax, 0xffffffffffffffff
0x000053d2      75b8           jne 0x538c
0x000053d4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000053d7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000053d8      5d             pop rbp
0x000053d9      415c           pop r12
0x000053db      e990c4ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000053e0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000053e4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000053e9      ebc5           jmp 0x53b0
0x000053eb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000053f0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000053f3      53             push rbx
0x000053f4      4889fb         mov rbx, rdi
0x000053f7      7411           je 0x540a                               ; ../coreutils-8.31/lib/fflush.c:150
0x000053f9      e822c6ffff     call sym.imp.__freading
0x000053fe      85c0           test eax, eax
0x00005400      7408           je 0x540a
0x00005402      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005408      750e           jne 0x5418
0x0000540a      4889df         mov rdi, rbx
0x0000540d      5b             pop rbx
0x0000540e      e9edc5ffff     jmp sym.imp.fflush
0x00005413      0f1f440000     nop dword [rax + rax]
0x00005418      4889df         mov rdi, rbx
0x0000541b      ba01000000     mov edx, 1
0x00005420      31f6           xor esi, esi
0x00005422      e809000000     call sym.rpl_fseeko
0x00005427      4889df         mov rdi, rbx
0x0000542a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000542b      e9d0c5ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005430      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005434      48394710       cmp qword [rdi + 0x10], rax
0x00005438      7406           je 0x5440                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000543a      e981c6ffff     jmp sym.imp.fseeko
0x0000543f      90             nop
0x00005440      488b4720       mov rax, qword [rdi + 0x20]
0x00005444      48394728       cmp qword [rdi + 0x28], rax
0x00005448      75f0           jne 0x543a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000544a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000544f      75e9           jne 0x543a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005451      4154           push r12
0x00005453      55             push rbp
0x00005454      4189d4         mov r12d, edx
0x00005457      53             push rbx
0x00005458      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000545b      4889fb         mov rbx, rdi
0x0000545e      e86dc5ffff     call sym.imp.fileno
0x00005463      4489e2         mov edx, r12d
0x00005466      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005469      89c7           mov edi, eax
0x0000546b      e8b0c4ffff     call sym.imp.lseek
0x00005470      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005474      740c           je 0x5482
0x00005476      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005479      488983900000.  mov qword [rbx + 0x90], rax
0x00005480      31c0           xor eax, eax
0x00005482      5b             pop rbx
0x00005483      5d             pop rbp
0x00005484      415c           pop r12
0x00005486      c3             ret
0x00005487      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005490      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005492      4154           push r12
0x00005494      4989f5         mov r13, rsi
0x00005497      55             push rbp
0x00005498      53             push rbx
0x00005499      4889fb         mov rbx, rdi
0x0000549c      4989d4         mov r12, rdx
0x0000549f      4883ec18       sub rsp, 0x18
0x000054a3      64488b042528.  mov rax, qword fs:[0x28]
0x000054ac      4889442408     mov qword [rsp + 8], rax
0x000054b1      31c0           xor eax, eax
0x000054b3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000054b8      4885ff         test rdi, rdi
0x000054bb      480f44d8       cmove rbx, rax
0x000054bf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000054c2      e839c4ffff     call sym.imp.mbrtowc
0x000054c7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000054cb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000054ce      7620           jbe 0x54f0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000054d0      4d85e4         test r12, r12
0x000054d3      741b           je 0x54f0
0x000054d5      31ff           xor edi, edi
0x000054d7      e844000000     call sym.hard_locale
0x000054dc      84c0           test al, al
0x000054de      7510           jne 0x54f0
0x000054e0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000054e5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000054ea      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000054ec      0f1f4000       nop dword [rax]
0x000054f0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000054f5      644833142528.  xor rdx, qword fs:[0x28]
0x000054fe      4889e8         mov rax, rbp
0x00005501      750b           jne 0x550e
0x00005503      4883c418       add rsp, 0x18
0x00005507      5b             pop rbx
0x00005508      5d             pop rbp
0x00005509      415c           pop r12
0x0000550b      415d           pop r13
0x0000550d      c3             ret
0x0000550e      e8bdc3ffff     call sym.imp.__stack_chk_fail
0x00005513      662e0f1f8400.  nop word cs:[rax + rax]
0x0000551d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005520      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005524      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005526      e825c5ffff     call sym.imp.setlocale
0x0000552b      4889c2         mov rdx, rax
0x0000552e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005533      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005536      741d           je 0x5555
0x00005538      488d3d212300.  lea rdi, [0x00007860]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000553f      b902000000     mov ecx, 2
0x00005544      4889d6         mov rsi, rdx
0x00005547      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005549      0f97c1         seta cl
0x0000554c      80d900         sbb cl, 0
0x0000554f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005551      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005553      750b           jne 0x5560
0x00005555      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005559      c3             ret
0x0000555a      660f1f440000   nop word [rax + rax]
0x00005560      488d3dfb2200.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x7862 ; "POSIX"
0x00005567      b906000000     mov ecx, 6
0x0000556c      4889d6         mov rsi, rdx
0x0000556f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005571      0f97c0         seta al
0x00005574      1c00           sbb al, 0
0x00005576      84c0           test al, al
0x00005578      0f95c0         setne al
0x0000557b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000557f      c3             ret
;-- locale_charset:
0x00005580      4883ec08       sub rsp, 8
0x00005584      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005589      e882c4ffff     call sym.imp.nl_langinfo
0x0000558e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005591      741d           je 0x55b0
0x00005593      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005596      488d15cb2200.  lea rdx, str.ASCII                      ; 0x7868 ; "ASCII"
0x0000559d      480f44c2       cmove rax, rdx
0x000055a1      4883c408       add rsp, 8
0x000055a5      c3             ret
0x000055a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000055b0      488d05b12200.  lea rax, str.ASCII                      ; 0x7868 ; "ASCII"
0x000055b7      4883c408       add rsp, 8
0x000055bb      c3             ret
0x000055bc      0f1f4000       nop dword [rax]
;-- randint_new:
0x000055c0      53             push rbx
0x000055c1      4889fb         mov rbx, rdi
0x000055c4      bf18000000     mov edi, 0x18
0x000055c9      e812fbffff     call sym.xmalloc
0x000055ce      488918         mov qword [rax], rbx
0x000055d1      48c740100000.  mov qword [rax + 0x10], 0
0x000055d9      48c740080000.  mov qword [rax + 8], 0
0x000055e1      5b             pop rbx
0x000055e2      c3             ret
0x000055e3      0f1f00         nop dword [rax]
0x000055e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_all_new:
0x000055f0      53             push rbx
0x000055f1      e84a020000     call sym.randread_new
0x000055f6      4885c0         test rax, rax
0x000055f9      7425           je 0x5620
0x000055fb      4889c3         mov rbx, rax
0x000055fe      bf18000000     mov edi, 0x18
0x00005603      e8d8faffff     call sym.xmalloc
0x00005608      488918         mov qword [rax], rbx
0x0000560b      48c740100000.  mov qword [rax + 0x10], 0
0x00005613      48c740080000.  mov qword [rax + 8], 0
0x0000561b      5b             pop rbx
0x0000561c      c3             ret
0x0000561d      0f1f00         nop dword [rax]
0x00005620      31c0           xor eax, eax
0x00005622      5b             pop rbx
0x00005623      c3             ret
0x00005624      6690           nop
0x00005626      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_get_source:
0x00005630      488b07         mov rax, qword [rdi]
0x00005633      c3             ret
0x00005634      6690           nop
0x00005636      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_genmax:
0x00005640      4157           push r15
0x00005642      4156           push r14
0x00005644      4c8d7e01       lea r15, [rsi + 1]
0x00005648      4155           push r13
0x0000564a      4154           push r12
0x0000564c      4989fd         mov r13, rdi
0x0000564f      55             push rbp
0x00005650      53             push rbx
0x00005651      4989f6         mov r14, rsi
0x00005654      4883ec28       sub rsp, 0x28
0x00005658      488b6f08       mov rbp, qword [rdi + 8]
0x0000565c      488b5f10       mov rbx, qword [rdi + 0x10]
0x00005660      64488b042528.  mov rax, qword fs:[0x28]
0x00005669      4889442418     mov qword [rsp + 0x18], rax
0x0000566e      31c0           xor eax, eax
0x00005670      488b07         mov rax, qword [rdi]
0x00005673      4c8d642410     lea r12, [rsp + 0x10]
0x00005678      4889442408     mov qword [rsp + 8], rax
0x0000567d      eb36           jmp 0x56b5
0x0000567f      90             nop
0x00005680      4c39f3         cmp rbx, r14
0x00005683      0f8486000000   je 0x570f
0x00005689      4889d8         mov rax, rbx
0x0000568c      31d2           xor edx, edx
0x0000568e      4c29f0         sub rax, r14
0x00005691      49f7f7         div r15
0x00005694      4829d3         sub rbx, rdx
0x00005697      4889d7         mov rdi, rdx
0x0000569a      4889c6         mov rsi, rax
0x0000569d      31d2           xor edx, edx
0x0000569f      4889e8         mov rax, rbp
0x000056a2      49f7f7         div r15
0x000056a5      4839dd         cmp rbp, rbx
0x000056a8      0f869a000000   jbe 0x5748
0x000056ae      488d5fff       lea rbx, [rdi - 1]
0x000056b2      4889d5         mov rbp, rdx
0x000056b5      4c39f3         cmp rbx, r14
0x000056b8      73c6           jae 0x5680
0x000056ba      4889d8         mov rax, rbx
0x000056bd      31d2           xor edx, edx
0x000056bf      90             nop
0x000056c0      48c1e008       shl rax, 8
0x000056c4      4883c201       add rdx, 1
0x000056c8      4805ff000000   add rax, 0xff
0x000056ce      4939c6         cmp r14, rax
0x000056d1      77ed           ja 0x56c0
0x000056d3      488b7c2408     mov rdi, qword [rsp + 8]
0x000056d8      4c89e6         mov rsi, r12
0x000056db      e8b0040000     call sym.randread
0x000056e0      4c89e0         mov rax, r12
0x000056e3      0f1f440000     nop dword [rax + rax]
0x000056e8      0fb610         movzx edx, byte [rax]
0x000056eb      48c1e308       shl rbx, 8
0x000056ef      48c1e508       shl rbp, 8
0x000056f3      4881c3ff0000.  add rbx, 0xff
0x000056fa      4883c001       add rax, 1
0x000056fe      4801d5         add rbp, rdx
0x00005701      4939de         cmp r14, rbx
0x00005704      77e2           ja 0x56e8
0x00005706      4c39f3         cmp rbx, r14
0x00005709      0f857affffff   jne 0x5689
0x0000570f      49c745100000.  mov qword [r13 + 0x10], 0
0x00005717      49c745080000.  mov qword [r13 + 8], 0
0x0000571f      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00005724      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000572d      4889e8         mov rax, rbp
0x00005730      7523           jne 0x5755
0x00005732      4883c428       add rsp, 0x28
0x00005736      5b             pop rbx
0x00005737      5d             pop rbp
0x00005738      415c           pop r12
0x0000573a      415d           pop r13
0x0000573c      415e           pop r14
0x0000573e      415f           pop r15
0x00005740      c3             ret
0x00005741      0f1f80000000.  nop dword [rax]
0x00005748      49894508       mov qword [r13 + 8], rax
0x0000574c      49897510       mov qword [r13 + 0x10], rsi
0x00005750      4889d5         mov rbp, rdx
0x00005753      ebca           jmp 0x571f
0x00005755      e876c1ffff     call sym.imp.__stack_chk_fail
0x0000575a      660f1f440000   nop word [rax + rax]
;-- randint_free:
0x00005760      53             push rbx
0x00005761      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005768      4889fb         mov rbx, rdi
0x0000576b      be18000000     mov esi, 0x18
0x00005770      e82bc3ffff     call sym.imp.__explicit_bzero_chk
0x00005775      4889df         mov rdi, rbx
0x00005778      5b             pop rbx
0x00005779      e912c0ffff     jmp sym.imp.free
0x0000577e      6690           nop
;-- randint_all_free:
0x00005780      4155           push r13
0x00005782      4154           push r12
0x00005784      55             push rbp
0x00005785      53             push rbx
0x00005786      4889fb         mov rbx, rdi
0x00005789      4883ec08       sub rsp, 8
0x0000578d      488b3f         mov rdi, qword [rdi]
0x00005790      e89b050000     call sym.randread_free
0x00005795      4189c4         mov r12d, eax
0x00005798      e813c0ffff     call sym.imp.__errno_location
0x0000579d      448b28         mov r13d, dword [rax]
0x000057a0      4889df         mov rdi, rbx
0x000057a3      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000057aa      be18000000     mov esi, 0x18
0x000057af      4889c5         mov rbp, rax
0x000057b2      e8e9c2ffff     call sym.imp.__explicit_bzero_chk
0x000057b7      4889df         mov rdi, rbx
0x000057ba      e8d1bfffff     call sym.imp.free
0x000057bf      44896d00       mov dword [rbp], r13d
0x000057c3      4883c408       add rsp, 8
0x000057c7      4489e0         mov eax, r12d
0x000057ca      5b             pop rbx
0x000057cb      5d             pop rbp
0x000057cc      415c           pop r12
0x000057ce      415d           pop r13
0x000057d0      c3             ret
0x000057d1      662e0f1f8400.  nop word cs:[rax + rax]
0x000057db      0f1f440000     nop dword [rax + rax]
;-- randread_error:
0x000057e0      55             push rbp
0x000057e1      53             push rbx
0x000057e2      4883ec08       sub rsp, 8
0x000057e6      4885ff         test rdi, rdi
0x000057e9      743d           je 0x5828
0x000057eb      e8d0efffff     call sym.quote
0x000057f0      4889c5         mov rbp, rax
0x000057f3      e8b8bfffff     call sym.imp.__errno_location
0x000057f8      833800         cmp dword [rax], 0
0x000057fb      4889c3         mov rbx, rax
0x000057fe      ba05000000     mov edx, 5
0x00005803      7428           je 0x582d
0x00005805      488d35722000.  lea rsi, str.s:_read_error              ; 0x787e ; "%s: read error"
0x0000580c      31ff           xor edi, edi
0x0000580e      e87dc0ffff     call sym.imp.dcgettext
0x00005813      8b3dff472000   mov edi, dword [obj.exit_failure]       ; [0x20a018:4]=1
0x00005819      8b33           mov esi, dword [rbx]
0x0000581b      4889c2         mov rdx, rax
0x0000581e      4889e9         mov rcx, rbp
0x00005821      31c0           xor eax, eax
0x00005823      e868c2ffff     call sym.imp.error
0x00005828      e873bfffff     call sym.imp.abort
0x0000582d      488d353a2000.  lea rsi, str.s:_end_of_file             ; 0x786e ; "%s: end of file"
0x00005834      31ff           xor edi, edi
0x00005836      e855c0ffff     call sym.imp.dcgettext
0x0000583b      ebd6           jmp 0x5813
0x0000583d      0f1f00         nop dword [rax]
;-- randread_new:
0x00005840      4157           push r15
0x00005842      4156           push r14
0x00005844      4155           push r13
0x00005846      4154           push r12
0x00005848      55             push rbp
0x00005849      53             push rbx
0x0000584a      4883ec38       sub rsp, 0x38
0x0000584e      64488b042528.  mov rax, qword fs:[0x28]
0x00005857      4889442428     mov qword [rsp + 0x28], rax
0x0000585c      31c0           xor eax, eax
0x0000585e      4885f6         test rsi, rsi
0x00005861      0f8421010000   je 0x5988
0x00005867      4885ff         test rdi, rdi
0x0000586a      4989fc         mov r12, rdi
0x0000586d      4889f5         mov rbp, rsi
0x00005870      747e           je 0x58f0
0x00005872      488d35212000.  lea rsi, [0x0000789a]                   ; "rb"
0x00005879      e8d2090000     call sym.fopen_safer
0x0000587e      4885c0         test rax, rax
0x00005881      4989c5         mov r13, rax
0x00005884      0f84fe010000   je 0x5a88
0x0000588a      bf38100000     mov edi, 0x1038
0x0000588f      e84cf8ffff     call sym.xmalloc
0x00005894      4889c3         mov rbx, rax
0x00005897      4c8928         mov qword [rax], r13
0x0000589a      488d053fffff.  lea rax, sym.randread_error             ; 0x57e0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xd0\xef\xff\xffH\x89\xc5\u8e3f\xff\xff\x838"
0x000058a1      4881fd001000.  cmp rbp, 0x1000
0x000058a8      b900100000     mov ecx, 0x1000
0x000058ad      488d7318       lea rsi, [rbx + 0x18]
0x000058b1      480f46cd       cmovbe rcx, rbp
0x000058b5      48894308       mov qword [rbx + 8], rax
0x000058b9      4c896310       mov qword [rbx + 0x10], r12
0x000058bd      31d2           xor edx, edx
0x000058bf      4c89ef         mov rdi, r13
0x000058c2      e8a9c1ffff     call sym.imp.setvbuf
0x000058c7      488b542428     mov rdx, qword [rsp + 0x28]
0x000058cc      644833142528.  xor rdx, qword fs:[0x28]
0x000058d5      4889d8         mov rax, rbx
0x000058d8      0f85b1010000   jne 0x5a8f
0x000058de      4883c438       add rsp, 0x38
0x000058e2      5b             pop rbx
0x000058e3      5d             pop rbp
0x000058e4      415c           pop r12
0x000058e6      415d           pop r13
0x000058e8      415e           pop r14
0x000058ea      415f           pop r15
0x000058ec      c3             ret
0x000058ed      0f1f00         nop dword [rax]
0x000058f0      bf38100000     mov edi, 0x1038
0x000058f5      e8e6f7ffff     call sym.xmalloc
0x000058fa      4889c3         mov rbx, rax
0x000058fd      48c700000000.  mov qword [rax], 0
0x00005904      488d05d5feff.  lea rax, sym.randread_error             ; 0x57e0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xd0\xef\xff\xffH\x89\xc5\u8e3f\xff\xff\x838"
0x0000590b      488d3d7b1f00.  lea rdi, str.dev_urandom                ; 0x788d ; "/dev/urandom"
0x00005912      31f6           xor esi, esi
0x00005914      48c743100000.  mov qword [rbx + 0x10], 0
0x0000591c      48894308       mov qword [rbx + 8], rax
0x00005920      48c743180000.  mov qword [rbx + 0x18], 0
0x00005928      31c0           xor eax, eax
0x0000592a      e881c1ffff     call sym.imp.open
0x0000592f      85c0           test eax, eax
0x00005931      4c8d6b20       lea r13, [rbx + 0x20]
0x00005935      4189c7         mov r15d, eax
0x00005938      787e           js 0x59b8
0x0000593a      4881fd000800.  cmp rbp, 0x800
0x00005941      4889ea         mov rdx, rbp
0x00005944      41be00080000   mov r14d, 0x800
0x0000594a      490f47d6       cmova rdx, r14
0x0000594e      b918100000     mov ecx, 0x1018
0x00005953      4c89ee         mov rsi, r13
0x00005956      89c7           mov edi, eax
0x00005958      e8a3beffff     call sym.imp.__read_chk
0x0000595d      4489ff         mov edi, r15d
0x00005960      4889c5         mov rbp, rax
0x00005963      e8f8bfffff     call sym.imp.close
0x00005968      4881fdff0700.  cmp rbp, 0x7ff
0x0000596f      0f8e1f010000   jle 0x5a94
0x00005975      4c89ef         mov rdi, r13
0x00005978      e893060000     call sym.isaac_seed
0x0000597d      e945ffffff     jmp 0x58c7
0x00005982      660f1f440000   nop word [rax + rax]
0x00005988      bf38100000     mov edi, 0x1038
0x0000598d      e84ef7ffff     call sym.xmalloc
0x00005992      4889c3         mov rbx, rax
0x00005995      48c700000000.  mov qword [rax], 0
0x0000599c      488d053dfeff.  lea rax, sym.randread_error             ; 0x57e0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xd0\xef\xff\xffH\x89\xc5\u8e3f\xff\xff\x838"
0x000059a3      48c743100000.  mov qword [rbx + 0x10], 0
0x000059ab      48894308       mov qword [rbx + 8], rax
0x000059af      e913ffffff     jmp 0x58c7
0x000059b4      0f1f4000       nop dword [rax]
0x000059b8      4c8d642410     lea r12, [rsp + 0x10]
0x000059bd      31f6           xor esi, esi
0x000059bf      41be18000000   mov r14d, 0x18
0x000059c5      4c89e7         mov rdi, r12
0x000059c8      e863bfffff     call sym.imp.gettimeofday
0x000059cd      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x000059d3      0f114320       movups xmmword [rbx + 0x20], xmm0
0x000059d7      e864beffff     call sym.imp.getpid
0x000059dc      894330         mov dword [rbx + 0x30], eax
0x000059df      89442410       mov dword [rsp + 0x10], eax
0x000059e3      e808c1ffff     call sym.imp.getppid
0x000059e8      89442410       mov dword [rsp + 0x10], eax
0x000059ec      894334         mov dword [rbx + 0x34], eax
0x000059ef      bd00080000     mov ebp, 0x800
0x000059f4      b804000000     mov eax, 4
0x000059f9      4c29f5         sub rbp, r14
0x000059fc      4883fd04       cmp rbp, 4
0x00005a00      480f47e8       cmova rbp, rax
0x00005a04      e8d7beffff     call sym.imp.getuid
0x00005a09      85ed           test ebp, ebp
0x00005a0b      89442410       mov dword [rsp + 0x10], eax
0x00005a0f      4b8d4c3500     lea rcx, [r13 + r14]
0x00005a14      89ee           mov esi, ebp
0x00005a16      7414           je 0x5a2c
0x00005a18      31c0           xor eax, eax
0x00005a1a      89c2           mov edx, eax
0x00005a1c      83c001         add eax, 1
0x00005a1f      410fb63c14     movzx edi, byte [r12 + rdx]
0x00005a24      39f0           cmp eax, esi
0x00005a26      40883c11       mov byte [rcx + rdx], dil
0x00005a2a      72ee           jb 0x5a1a
0x00005a2c      4c01f5         add rbp, r14
0x00005a2f      4881fdff0700.  cmp rbp, 0x7ff
0x00005a36      0f8739ffffff   ja 0x5975
0x00005a3c      e89fbfffff     call sym.imp.getgid
0x00005a41      89442410       mov dword [rsp + 0x10], eax
0x00005a45      b800080000     mov eax, 0x800
0x00005a4a      ba04000000     mov edx, 4
0x00005a4f      4829e8         sub rax, rbp
0x00005a52      498d4c2d00     lea rcx, [r13 + rbp]
0x00005a57      4883f804       cmp rax, 4
0x00005a5b      480f47c2       cmova rax, rdx
0x00005a5f      85c0           test eax, eax
0x00005a61      89c6           mov esi, eax
0x00005a63      0f840cffffff   je 0x5975
0x00005a69      31c0           xor eax, eax
0x00005a6b      89c2           mov edx, eax
0x00005a6d      83c001         add eax, 1
0x00005a70      410fb63c14     movzx edi, byte [r12 + rdx]
0x00005a75      39f0           cmp eax, esi
0x00005a77      40883c11       mov byte [rcx + rdx], dil
0x00005a7b      72ee           jb 0x5a6b
0x00005a7d      e9f3feffff     jmp 0x5975
0x00005a82      660f1f440000   nop word [rax + rax]
0x00005a88      31db           xor ebx, ebx
0x00005a8a      e938feffff     jmp 0x58c7
0x00005a8f      e83cbeffff     call sym.imp.__stack_chk_fail
0x00005a94      4885ed         test rbp, rbp
0x00005a97      4d89f7         mov r15, r14
0x00005a9a      b810000000     mov eax, 0x10
0x00005a9f      490f48ec       cmovs rbp, r12
0x00005aa3      4c8d642410     lea r12, [rsp + 0x10]
0x00005aa8      4929ef         sub r15, rbp
0x00005aab      4983ff10       cmp r15, 0x10
0x00005aaf      4c89e7         mov rdi, r12
0x00005ab2      4c0f47f8       cmova r15, rax
0x00005ab6      31f6           xor esi, esi
0x00005ab8      e873beffff     call sym.imp.gettimeofday
0x00005abd      498d442d00     lea rax, [r13 + rbp]
0x00005ac2      4c01fd         add rbp, r15
0x00005ac5      4489f9         mov ecx, r15d
0x00005ac8      4881fdff0700.  cmp rbp, 0x7ff
0x00005acf      4c89e6         mov rsi, r12
0x00005ad2      4889c7         mov rdi, rax
0x00005ad5      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00005ad7      0f8798feffff   ja 0x5975
0x00005add      4d89f7         mov r15, r14
0x00005ae0      41b804000000   mov r8d, 4
0x00005ae6      4929ef         sub r15, rbp
0x00005ae9      4c89442408     mov qword [rsp + 8], r8
0x00005aee      4983ff04       cmp r15, 4
0x00005af2      4d0f47f8       cmova r15, r8
0x00005af6      4a8d543d00     lea rdx, [rbp + r15]
0x00005afb      4c01ed         add rbp, r13
0x00005afe      48891424       mov qword [rsp], rdx
0x00005b02      e839bdffff     call sym.imp.getpid
0x00005b07      488b1424       mov rdx, qword [rsp]
0x00005b0b      89442410       mov dword [rsp + 0x10], eax
0x00005b0f      4489f9         mov ecx, r15d
0x00005b12      4889ef         mov rdi, rbp
0x00005b15      4c89e6         mov rsi, r12
0x00005b18      4c8b442408     mov r8, qword [rsp + 8]
0x00005b1d      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00005b1f      4881faff0700.  cmp rdx, 0x7ff
0x00005b26      0f8f49feffff   jg 0x5975
0x00005b2c      4929d6         sub r14, rdx
0x00005b2f      4983fe04       cmp r14, 4
0x00005b33      4d0f47f0       cmova r14, r8
0x00005b37      e8b4bfffff     call sym.imp.getppid
0x00005b3c      488b1424       mov rdx, qword [rsp]
0x00005b40      89442410       mov dword [rsp + 0x10], eax
0x00005b44      4489f1         mov ecx, r14d
0x00005b47      4c89e6         mov rsi, r12
0x00005b4a      498d441500     lea rax, [r13 + rdx]
0x00005b4f      4901d6         add r14, rdx
0x00005b52      4981feff0700.  cmp r14, 0x7ff
0x00005b59      4889c7         mov rdi, rax
0x00005b5c      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00005b5e      0f8711feffff   ja 0x5975
0x00005b64      e986feffff     jmp 0x59ef
0x00005b69      0f1f80000000.  nop dword [rax]
;-- randread_set_handler:
0x00005b70      48897708       mov qword [rdi + 8], rsi
0x00005b74      c3             ret
0x00005b75      90             nop
0x00005b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_set_handler_arg:
0x00005b80      48897710       mov qword [rdi + 0x10], rsi
0x00005b84      c3             ret
0x00005b85      90             nop
0x00005b86      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread:
0x00005b90      4157           push r15
0x00005b92      4156           push r14
0x00005b94      4155           push r13
0x00005b96      4154           push r12
0x00005b98      4989fc         mov r12, rdi
0x00005b9b      55             push rbp
0x00005b9c      53             push rbx
0x00005b9d      4889d5         mov rbp, rdx
0x00005ba0      4889f3         mov rbx, rsi
0x00005ba3      4883ec18       sub rsp, 0x18
0x00005ba7      488b0f         mov rcx, qword [rdi]
0x00005baa      4885c9         test rcx, rcx
0x00005bad      48894c2408     mov qword [rsp + 8], rcx
0x00005bb2      7464           je 0x5c18
0x00005bb4      e8f7bbffff     call sym.imp.__errno_location
0x00005bb9      488b4c2408     mov rcx, qword [rsp + 8]
0x00005bbe      4989c5         mov r13, rax
0x00005bc1      eb23           jmp 0x5be6
0x00005bc3      0f1f440000     nop dword [rax + rax]
0x00005bc8      498b0424       mov rax, qword [r12]
0x00005bcc      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00005bd1      8b00           mov eax, dword [rax]
0x00005bd3      83e020         and eax, 0x20                           ; "@"
0x00005bd6      0f45c2         cmovne eax, edx
0x00005bd9      41894500       mov dword [r13], eax
0x00005bdd      41ff542408     call qword [r12 + 8]
0x00005be2      498b0c24       mov rcx, qword [r12]
0x00005be6      4889ea         mov rdx, rbp
0x00005be9      4889df         mov rdi, rbx
0x00005bec      be01000000     mov esi, 1
0x00005bf1      e85abcffff     call sym.imp.fread_unlocked
0x00005bf6      4801c3         add rbx, rax
0x00005bf9      4829c5         sub rbp, rax
0x00005bfc      418b5500       mov edx, dword [r13]
0x00005c00      75c6           jne 0x5bc8
0x00005c02      4883c418       add rsp, 0x18
0x00005c06      5b             pop rbx
0x00005c07      5d             pop rbp
0x00005c08      415c           pop r12
0x00005c0a      415d           pop r13
0x00005c0c      415e           pop r14
0x00005c0e      415f           pop r15
0x00005c10      c3             ret
0x00005c11      0f1f80000000.  nop dword [rax]
0x00005c18      4c8b7718       mov r14, qword [rdi + 0x18]
0x00005c1c      488d87380800.  lea rax, [rdi + 0x838]
0x00005c23      4c8d6f20       lea r13, [rdi + 0x20]
0x00005c27      4889442408     mov qword [rsp + 8], rax
0x00005c2c      4c39f2         cmp rdx, r14
0x00005c2f      0f86dd000000   jbe 0x5d12
0x00005c35      be00080000     mov esi, 0x800
0x00005c3a      4889df         mov rdi, rbx
0x00005c3d      4c89f2         mov rdx, r14
0x00005c40      4c29f6         sub rsi, r14
0x00005c43      4803742408     add rsi, qword [rsp + 8]
0x00005c48      4c01f3         add rbx, r14
0x00005c4b      4c29f5         sub rbp, r14
0x00005c4e      e86dbdffff     call sym.imp.memcpy
0x00005c53      f6c307         test bl, 7
0x00005c56      7568           jne 0x5cc0
0x00005c58      4881fdff0700.  cmp rbp, 0x7ff
0x00005c5f      0f869e000000   jbe 0x5d03
0x00005c65      4c8dbd00f8ff.  lea r15, [rbp - 0x800]
0x00005c6c      4d89fe         mov r14, r15
0x00005c6f      4181e6ff0700.  and r14d, 0x7ff
0x00005c76      eb14           jmp 0x5c8c
0x00005c78      0f1f84000000.  nop dword [rax + rax]
0x00005c80      4d39f7         cmp r15, r14
0x00005c83      743b           je 0x5cc0
0x00005c85      4981ef000800.  sub r15, 0x800
0x00005c8c      4889de         mov rsi, rbx
0x00005c8f      4c89ef         mov rdi, r13
0x00005c92      4881c3000800.  add rbx, 0x800
0x00005c99      e8e2000000     call sym.isaac_refill
0x00005c9e      4d85ff         test r15, r15
0x00005ca1      4c89fd         mov rbp, r15
0x00005ca4      75da           jne 0x5c80
0x00005ca6      49c744241800.  mov qword [r12 + 0x18], 0
0x00005caf      4883c418       add rsp, 0x18
0x00005cb3      5b             pop rbx
0x00005cb4      5d             pop rbp
0x00005cb5      415c           pop r12
0x00005cb7      415d           pop r13
0x00005cb9      415e           pop r14
0x00005cbb      415f           pop r15
0x00005cbd      c3             ret
0x00005cbe      6690           nop
0x00005cc0      488b742408     mov rsi, qword [rsp + 8]
0x00005cc5      4c89ef         mov rdi, r13
0x00005cc8      41be00080000   mov r14d, 0x800
0x00005cce      e8ad000000     call sym.isaac_refill
0x00005cd3      4881fd000800.  cmp rbp, 0x800
0x00005cda      0f8755ffffff   ja 0x5c35
0x00005ce0      41be00080000   mov r14d, 0x800
0x00005ce6      488b742408     mov rsi, qword [rsp + 8]
0x00005ceb      4889ea         mov rdx, rbp
0x00005cee      4889df         mov rdi, rbx
0x00005cf1      4929ee         sub r14, rbp
0x00005cf4      e8c7bcffff     call sym.imp.memcpy
0x00005cf9      4d89742418     mov qword [r12 + 0x18], r14
0x00005cfe      e9fffeffff     jmp 0x5c02
0x00005d03      488b742408     mov rsi, qword [rsp + 8]
0x00005d08      4c89ef         mov rdi, r13
0x00005d0b      e870000000     call sym.isaac_refill
0x00005d10      ebce           jmp 0x5ce0
0x00005d12      4989c7         mov r15, rax
0x00005d15      4d29f7         sub r15, r14
0x00005d18      498d87000800.  lea rax, [r15 + 0x800]
0x00005d1f      4889442408     mov qword [rsp + 8], rax
0x00005d24      ebc0           jmp 0x5ce6
0x00005d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_free:
0x00005d30      55             push rbp
0x00005d31      53             push rbx
0x00005d32      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005d39      4889fb         mov rbx, rdi
0x00005d3c      be38100000     mov esi, 0x1038
0x00005d41      4883ec08       sub rsp, 8
0x00005d45      488b2f         mov rbp, qword [rdi]
0x00005d48      e853bdffff     call sym.imp.__explicit_bzero_chk
0x00005d4d      4889df         mov rdi, rbx
0x00005d50      e83bbaffff     call sym.imp.free
0x00005d55      4885ed         test rbp, rbp
0x00005d58      7416           je 0x5d70
0x00005d5a      4883c408       add rsp, 8
0x00005d5e      4889ef         mov rdi, rbp
0x00005d61      5b             pop rbx
0x00005d62      5d             pop rbp
0x00005d63      e908f6ffff     jmp sym.rpl_fclose
0x00005d68      0f1f84000000.  nop dword [rax + rax]
0x00005d70      4883c408       add rsp, 8
0x00005d74      31c0           xor eax, eax
0x00005d76      5b             pop rbx
0x00005d77      5d             pop rbp
0x00005d78      c3             ret
0x00005d79      0f1f80000000.  nop dword [rax]
;-- isaac_refill:
0x00005d80      488b87100800.  mov rax, qword [rdi + 0x810]
0x00005d87      488b97000800.  mov rdx, qword [rdi + 0x800]
0x00005d8e      4c8d8f000400.  lea r9, [rdi + 0x400]
0x00005d95      488d4801       lea rcx, [rax + 1]
0x00005d99      4889f8         mov rax, rdi
0x00005d9c      48898f100800.  mov qword [rdi + 0x810], rcx
0x00005da3      48038f080800.  add rcx, qword [rdi + 0x808]
0x00005daa      660f1f440000   nop word [rax + rax]
0x00005db0      4989d0         mov r8, rdx
0x00005db3      49c1e015       shl r8, 0x15
0x00005db7      4c31c2         xor rdx, r8
0x00005dba      4c8b00         mov r8, qword [rax]
0x00005dbd      48f7d2         not rdx
0x00005dc0      480390000400.  add rdx, qword [rax + 0x400]
0x00005dc7      4d89c2         mov r10, r8
0x00005dca      4181e2f80700.  and r10d, 0x7f8
0x00005dd1      4e8b1c17       mov r11, qword [rdi + r10]
0x00005dd5      4989d2         mov r10, rdx
0x00005dd8      49c1ea05       shr r10, 5
0x00005ddc      4901d3         add r11, rdx
0x00005ddf      4c31d2         xor rdx, r10
0x00005de2      4c01d9         add rcx, r11
0x00005de5      488908         mov qword [rax], rcx
0x00005de8      48c1e908       shr rcx, 8
0x00005dec      81e1f8070000   and ecx, 0x7f8
0x00005df2      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00005df6      4d01c3         add r11, r8
0x00005df9      4c891e         mov qword [rsi], r11
0x00005dfc      480390080400.  add rdx, qword [rax + 0x408]
0x00005e03      488b4808       mov rcx, qword [rax + 8]
0x00005e07      4989d2         mov r10, rdx
0x00005e0a      4889ca         mov rdx, rcx
0x00005e0d      81e2f8070000   and edx, 0x7f8
0x00005e13      4c8b0417       mov r8, qword [rdi + rdx]
0x00005e17      4c89d2         mov rdx, r10
0x00005e1a      48c1e20c       shl rdx, 0xc
0x00005e1e      4c31d2         xor rdx, r10
0x00005e21      4d01d0         add r8, r10
0x00005e24      4d01d8         add r8, r11
0x00005e27      4c894008       mov qword [rax + 8], r8
0x00005e2b      49c1e808       shr r8, 8
0x00005e2f      4181e0f80700.  and r8d, 0x7f8
0x00005e36      4a030c07       add rcx, qword [rdi + r8]
0x00005e3a      48894e08       mov qword [rsi + 8], rcx
0x00005e3e      4c8b4010       mov r8, qword [rax + 0x10]
0x00005e42      4989cb         mov r11, rcx
0x00005e45      480390100400.  add rdx, qword [rax + 0x410]
0x00005e4c      4c89c1         mov rcx, r8
0x00005e4f      81e1f8070000   and ecx, 0x7f8
0x00005e55      4c8b140f       mov r10, qword [rdi + rcx]
0x00005e59      4901d2         add r10, rdx
0x00005e5c      4c89d1         mov rcx, r10
0x00005e5f      4c01d9         add rcx, r11
0x00005e62      48894810       mov qword [rax + 0x10], rcx
0x00005e66      48c1e908       shr rcx, 8
0x00005e6a      81e1f8070000   and ecx, 0x7f8
0x00005e70      4c8b140f       mov r10, qword [rdi + rcx]
0x00005e74      4889d1         mov rcx, rdx
0x00005e77      48c1e921       shr rcx, 0x21
0x00005e7b      4831ca         xor rdx, rcx
0x00005e7e      4d01c2         add r10, r8
0x00005e81      4c895610       mov qword [rsi + 0x10], r10
0x00005e85      488b4818       mov rcx, qword [rax + 0x18]
0x00005e89      480390180400.  add rdx, qword [rax + 0x418]
0x00005e90      4989c8         mov r8, rcx
0x00005e93      4181e0f80700.  and r8d, 0x7f8
0x00005e9a      4e8b1c07       mov r11, qword [rdi + r8]
0x00005e9e      4901d3         add r11, rdx
0x00005ea1      4d89d8         mov r8, r11
0x00005ea4      4d01d0         add r8, r10
0x00005ea7      4883c020       add rax, 0x20                           ; "@"
0x00005eab      4883c620       add rsi, 0x20                           ; "@"
0x00005eaf      4c8940f8       mov qword [rax - 8], r8
0x00005eb3      49c1e808       shr r8, 8
0x00005eb7      4181e0f80700.  and r8d, 0x7f8
0x00005ebe      4a030c07       add rcx, qword [rdi + r8]
0x00005ec2      48894ef8       mov qword [rsi - 8], rcx
0x00005ec6      4c39c8         cmp rax, r9
0x00005ec9      0f82e1feffff   jb 0x5db0
0x00005ecf      4c8d8f000800.  lea r9, [rdi + 0x800]
0x00005ed6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ee0      4989d0         mov r8, rdx
0x00005ee3      49c1e015       shl r8, 0x15
0x00005ee7      4c31c2         xor rdx, r8
0x00005eea      4c8b00         mov r8, qword [rax]
0x00005eed      48f7d2         not rdx
0x00005ef0      48039000fcff.  add rdx, qword [rax - 0x400]
0x00005ef7      4d89c2         mov r10, r8
0x00005efa      4181e2f80700.  and r10d, 0x7f8
0x00005f01      4e8b1c17       mov r11, qword [rdi + r10]
0x00005f05      4989d2         mov r10, rdx
0x00005f08      49c1ea05       shr r10, 5
0x00005f0c      4901d3         add r11, rdx
0x00005f0f      4c31d2         xor rdx, r10
0x00005f12      4c01d9         add rcx, r11
0x00005f15      488908         mov qword [rax], rcx
0x00005f18      48c1e908       shr rcx, 8
0x00005f1c      81e1f8070000   and ecx, 0x7f8
0x00005f22      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00005f26      4d01c3         add r11, r8
0x00005f29      4c891e         mov qword [rsi], r11
0x00005f2c      48039008fcff.  add rdx, qword [rax - 0x3f8]
0x00005f33      488b4808       mov rcx, qword [rax + 8]
0x00005f37      4989d2         mov r10, rdx
0x00005f3a      4889ca         mov rdx, rcx
0x00005f3d      81e2f8070000   and edx, 0x7f8
0x00005f43      4c8b0417       mov r8, qword [rdi + rdx]
0x00005f47      4c89d2         mov rdx, r10
0x00005f4a      48c1e20c       shl rdx, 0xc
0x00005f4e      4c31d2         xor rdx, r10
0x00005f51      4d01d0         add r8, r10
0x00005f54      4d01d8         add r8, r11
0x00005f57      4c894008       mov qword [rax + 8], r8
0x00005f5b      49c1e808       shr r8, 8
0x00005f5f      4181e0f80700.  and r8d, 0x7f8
0x00005f66      4a030c07       add rcx, qword [rdi + r8]
0x00005f6a      48894e08       mov qword [rsi + 8], rcx
0x00005f6e      4c8b4010       mov r8, qword [rax + 0x10]
0x00005f72      4989cb         mov r11, rcx
0x00005f75      48039010fcff.  add rdx, qword [rax - 0x3f0]
0x00005f7c      4c89c1         mov rcx, r8
0x00005f7f      81e1f8070000   and ecx, 0x7f8
0x00005f85      4c8b140f       mov r10, qword [rdi + rcx]
0x00005f89      4901d2         add r10, rdx
0x00005f8c      4c89d1         mov rcx, r10
0x00005f8f      4c01d9         add rcx, r11
0x00005f92      48894810       mov qword [rax + 0x10], rcx
0x00005f96      48c1e908       shr rcx, 8
0x00005f9a      81e1f8070000   and ecx, 0x7f8
0x00005fa0      4c8b140f       mov r10, qword [rdi + rcx]
0x00005fa4      4889d1         mov rcx, rdx
0x00005fa7      48c1e921       shr rcx, 0x21
0x00005fab      4831ca         xor rdx, rcx
0x00005fae      4d01c2         add r10, r8
0x00005fb1      4c895610       mov qword [rsi + 0x10], r10
0x00005fb5      488b4818       mov rcx, qword [rax + 0x18]
0x00005fb9      48039018fcff.  add rdx, qword [rax - 0x3e8]
0x00005fc0      4989c8         mov r8, rcx
0x00005fc3      4181e0f80700.  and r8d, 0x7f8
0x00005fca      4e8b1c07       mov r11, qword [rdi + r8]
0x00005fce      4901d3         add r11, rdx
0x00005fd1      4d89d8         mov r8, r11
0x00005fd4      4d01d0         add r8, r10
0x00005fd7      4883c020       add rax, 0x20                           ; "@"
0x00005fdb      4883c620       add rsi, 0x20                           ; "@"
0x00005fdf      4c8940f8       mov qword [rax - 8], r8
0x00005fe3      49c1e808       shr r8, 8
0x00005fe7      4181e0f80700.  and r8d, 0x7f8
0x00005fee      4a030c07       add rcx, qword [rdi + r8]
0x00005ff2      48894ef8       mov qword [rsi - 8], rcx
0x00005ff6      4c39c8         cmp rax, r9
0x00005ff9      0f82e1feffff   jb 0x5ee0
0x00005fff      488997000800.  mov qword [rdi + 0x800], rdx
0x00006006      48898f080800.  mov qword [rdi + 0x808], rcx
0x0000600d      c3             ret
0x0000600e      6690           nop
;-- isaac_seed:
0x00006010      4155           push r13
0x00006012      4154           push r12
0x00006014      4c8da7000800.  lea r12, [rdi + 0x800]
0x0000601b      55             push rbp
0x0000601c      4889fa         mov rdx, rdi
0x0000601f      53             push rbx
0x00006020      4889f8         mov rax, rdi
0x00006023      48b9abc0446c.  movabs rcx, 0x98f5704f6c44c0ab
0x0000602d      49baed89fccb.  movabs r10, 0xae985bf2cbfc89ed
0x00006037      48bd1593a0a5.  movabs rbp, 0x48fe4a0fa5a09315
0x00006041      48becee05583.  movabs rsi, 0x82f053db8355e0ce
0x0000604b      49b82455594a.  movabs r8, 0xb29b2e824a595524
0x00006055      48bba012473d.  movabs rbx, 0x8c0ea5053d4712a0
0x0000605f      49bb62c83ac7.  movabs r11, 0xb9f8b322c73ac862
0x00006069      49b97c4b88a2.  movabs r9, 0x647c4677a2884b7c
0x00006073      0f1f440000     nop dword [rax + rax]
0x00006078      48037020       add rsi, qword [rax + 0x20]
0x0000607c      48034838       add rcx, qword [rax + 0x38]
0x00006080      4c8b28         mov r13, qword [rax]
0x00006083      48036828       add rbp, qword [rax + 0x28]
0x00006087      4c035030       add r10, qword [rax + 0x30]
0x0000608b      4929f5         sub r13, rsi
0x0000608e      4d01e9         add r9, r13
0x00006091      4989cd         mov r13, rcx
0x00006094      49c1ed09       shr r13, 9
0x00006098      4c01c9         add rcx, r9
0x0000609b      4c31ed         xor rbp, r13
0x0000609e      4c8b6808       mov r13, qword [rax + 8]
0x000060a2      4929ed         sub r13, rbp
0x000060a5      4d01eb         add r11, r13
0x000060a8      4d89cd         mov r13, r9
0x000060ab      49c1e509       shl r13, 9
0x000060af      4d01d9         add r9, r11
0x000060b2      4d31ea         xor r10, r13
0x000060b5      4c8b6810       mov r13, qword [rax + 0x10]
0x000060b9      4d29d5         sub r13, r10
0x000060bc      4c01eb         add rbx, r13
0x000060bf      4d89dd         mov r13, r11
0x000060c2      49c1ed17       shr r13, 0x17
0x000060c6      4901db         add r11, rbx
0x000060c9      4c31e9         xor rcx, r13
0x000060cc      4c8b6818       mov r13, qword [rax + 0x18]
0x000060d0      4929cd         sub r13, rcx
0x000060d3      4d01e8         add r8, r13
0x000060d6      4989dd         mov r13, rbx
0x000060d9      49c1e50f       shl r13, 0xf
0x000060dd      4c01c3         add rbx, r8
0x000060e0      4d31e9         xor r9, r13
0x000060e3      4d89c5         mov r13, r8
0x000060e6      4c29ce         sub rsi, r9
0x000060e9      49c1ed0e       shr r13, 0xe
0x000060ed      4c8908         mov qword [rax], r9
0x000060f0      4d31eb         xor r11, r13
0x000060f3      4989f5         mov r13, rsi
0x000060f6      4901f0         add r8, rsi
0x000060f9      4c29dd         sub rbp, r11
0x000060fc      49c1e514       shl r13, 0x14
0x00006100      4c895808       mov qword [rax + 8], r11
0x00006104      4c31eb         xor rbx, r13
0x00006107      4c8d2c2e       lea r13, [rsi + rbp]
0x0000610b      4889ee         mov rsi, rbp
0x0000610e      4929da         sub r10, rbx
0x00006111      48c1ee11       shr rsi, 0x11
0x00006115      48895810       mov qword [rax + 0x10], rbx
0x00006119      4931f0         xor r8, rsi
0x0000611c      4c89d6         mov rsi, r10
0x0000611f      4c01d5         add rbp, r10
0x00006122      4c29c1         sub rcx, r8
0x00006125      48c1e60e       shl rsi, 0xe
0x00006129      4c894018       mov qword [rax + 0x18], r8
0x0000612d      4c31ee         xor rsi, r13
0x00006130      4901ca         add r10, rcx
0x00006133      48896828       mov qword [rax + 0x28], rbp
0x00006137      48897020       mov qword [rax + 0x20], rsi
0x0000613b      4c895030       mov qword [rax + 0x30], r10
0x0000613f      4883c040       add rax, 0x40                           ; segment.PHDR
0x00006143      488948f8       mov qword [rax - 8], rcx
0x00006147      4939c4         cmp r12, rax
0x0000614a      0f8528ffffff   jne 0x6078
0x00006150      48037220       add rsi, qword [rdx + 0x20]
0x00006154      48034a38       add rcx, qword [rdx + 0x38]
0x00006158      4c8b22         mov r12, qword [rdx]
0x0000615b      48036a28       add rbp, qword [rdx + 0x28]
0x0000615f      4c035230       add r10, qword [rdx + 0x30]
0x00006163      4929f4         sub r12, rsi
0x00006166      4d01e1         add r9, r12
0x00006169      4989cc         mov r12, rcx
0x0000616c      49c1ec09       shr r12, 9
0x00006170      4c01c9         add rcx, r9
0x00006173      4c31e5         xor rbp, r12
0x00006176      4c8b6208       mov r12, qword [rdx + 8]
0x0000617a      4929ec         sub r12, rbp
0x0000617d      4d01e3         add r11, r12
0x00006180      4d89cc         mov r12, r9
0x00006183      49c1e409       shl r12, 9
0x00006187      4d01d9         add r9, r11
0x0000618a      4d31e2         xor r10, r12
0x0000618d      4c8b6210       mov r12, qword [rdx + 0x10]
0x00006191      4d29d4         sub r12, r10
0x00006194      4c01e3         add rbx, r12
0x00006197      4d89dc         mov r12, r11
0x0000619a      49c1ec17       shr r12, 0x17
0x0000619e      4901db         add r11, rbx
0x000061a1      4c31e1         xor rcx, r12
0x000061a4      4c8b6218       mov r12, qword [rdx + 0x18]
0x000061a8      4929cc         sub r12, rcx
0x000061ab      4d01e0         add r8, r12
0x000061ae      4989dc         mov r12, rbx
0x000061b1      49c1e40f       shl r12, 0xf
0x000061b5      4c01c3         add rbx, r8
0x000061b8      4d31e1         xor r9, r12
0x000061bb      4d89c4         mov r12, r8
0x000061be      4c29ce         sub rsi, r9
0x000061c1      49c1ec0e       shr r12, 0xe
0x000061c5      4c890a         mov qword [rdx], r9
0x000061c8      4d31e3         xor r11, r12
0x000061cb      4989f4         mov r12, rsi
0x000061ce      4901f0         add r8, rsi
0x000061d1      4c29dd         sub rbp, r11
0x000061d4      49c1e414       shl r12, 0x14
0x000061d8      4c895a08       mov qword [rdx + 8], r11
0x000061dc      4c31e3         xor rbx, r12
0x000061df      4c8d242e       lea r12, [rsi + rbp]
0x000061e3      4889ee         mov rsi, rbp
0x000061e6      4929da         sub r10, rbx
0x000061e9      48c1ee11       shr rsi, 0x11
0x000061ed      48895a10       mov qword [rdx + 0x10], rbx
0x000061f1      4931f0         xor r8, rsi
0x000061f4      4c89d6         mov rsi, r10
0x000061f7      4c01d5         add rbp, r10
0x000061fa      4c29c1         sub rcx, r8
0x000061fd      48c1e60e       shl rsi, 0xe
0x00006201      4c894218       mov qword [rdx + 0x18], r8
0x00006205      4c31e6         xor rsi, r12
0x00006208      4901ca         add r10, rcx
0x0000620b      48896a28       mov qword [rdx + 0x28], rbp
0x0000620f      48897220       mov qword [rdx + 0x20], rsi
0x00006213      4c895230       mov qword [rdx + 0x30], r10
0x00006217      4883c240       add rdx, 0x40                           ; segment.PHDR
0x0000621b      48894af8       mov qword [rdx - 8], rcx
0x0000621f      4839d0         cmp rax, rdx
0x00006222      0f8528ffffff   jne 0x6150
0x00006228      5b             pop rbx
0x00006229      48c787100800.  mov qword [rdi + 0x810], 0
0x00006234      48c787080800.  mov qword [rdi + 0x808], 0
0x0000623f      5d             pop rbp
0x00006240      48c787000800.  mov qword [rdi + 0x800], 0
0x0000624b      415c           pop r12
0x0000624d      415d           pop r13
0x0000624f      c3             ret
;-- fopen_safer:
0x00006250      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00006252      55             push rbp
0x00006253      4889f5         mov rbp, rsi
0x00006256      53             push rbx
0x00006257      e874b8ffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x0000625c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x0000625f      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00006262      740d           je 0x6271                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00006264      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00006267      e864b7ffff     call sym.imp.fileno
0x0000626c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x0000626f      760f           jbe 0x6280
0x00006271      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00006274      5b             pop rbx
0x00006275      5d             pop rbp
0x00006276      415c           pop r12
0x00006278      c3             ret
0x00006279      0f1f80000000.  nop dword [rax]
0x00006280      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00006282      e869000000     call sym.dup_safer
0x00006287      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00006289      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x0000628c      783a           js 0x62c8                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x0000628e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00006291      e8daf0ffff     call sym.rpl_fclose
0x00006296      85c0           test eax, eax
0x00006298      7513           jne 0x62ad
0x0000629a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x0000629d      4489e7         mov edi, r12d
0x000062a0      e89bb7ffff     call sym.imp.fdopen
0x000062a5      4885c0         test rax, rax
0x000062a8      4889c3         mov rbx, rax
0x000062ab      75c4           jne 0x6271
0x000062ad      e8feb4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x000062b2      8b28           mov ebp, dword [rax]
0x000062b4      4889c3         mov rbx, rax
0x000062b7      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x000062ba      e8a1b6ffff     call sym.imp.close
0x000062bf      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x000062c1      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x000062c3      ebac           jmp 0x6271
0x000062c5      0f1f00         nop dword [rax]
0x000062c8      e8e3b4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x000062cd      448b20         mov r12d, dword [rax]
0x000062d0      4889c5         mov rbp, rax
0x000062d3      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x000062d6      e895f0ffff     call sym.rpl_fclose
0x000062db      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x000062dd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x000062e1      eb8e           jmp 0x6271                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x000062e3      662e0f1f8400.  nop word cs:[rax + rax]
0x000062ed      0f1f00         nop dword [rax]
;-- dup_safer:
0x000062f0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x000062f5      31f6           xor esi, esi
0x000062f7      31c0           xor eax, eax
0x000062f9      e902000000     jmp sym.rpl_fcntl
0x000062fe      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fcntl:
0x00006300      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00006302      55             push rbp
0x00006303      89fd           mov ebp, edi
0x00006305      53             push rbx
0x00006306      4883ec50       sub rsp, 0x50
0x0000630a      64488b042528.  mov rax, qword fs:[0x28]
0x00006313      4889442418     mov qword [rsp + 0x18], rax
0x00006318      31c0           xor eax, eax
0x0000631a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000631f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00006321      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00006326      48894c2438     mov qword [rsp + 0x38], rcx
0x0000632b      4c89442440     mov qword [rsp + 0x40], r8
0x00006330      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00006335      488d442420     lea rax, [rsp + 0x20]
0x0000633a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000633f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00006346      4889442410     mov qword [rsp + 0x10], rax
0x0000634b      0f8401020000   je 0x6552                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00006351      81fe06040000   cmp esi, 0x406
0x00006357      7547           jne 0x63a0
0x00006359      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000635e      833dd33e2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20a238:4]=0
0x00006365      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2230 rip
0x0000636c      448b6010       mov r12d, dword [rax + 0x10]
0x00006370      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00006373      0f882a010000   js 0x64a3                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00006379      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000637b      be06040000     mov esi, 0x406
0x00006380      e8abb4ffff     call sym.imp.fcntl
0x00006385      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00006387      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00006389      0f8889010000   js 0x6518                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000638f      c7059f3e2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20a238:4]=0
0x00006399      eb45           jmp 0x63e0
0x0000639b      0f1f440000     nop dword [rax + rax]
0x000063a0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x000063a3      742b           je 0x63d0
0x000063a5      7f59           jg 0x6400
0x000063a7      83fe04         cmp esi, 4
0x000063aa      0f84d0000000   je 0x6480
0x000063b0      0f8fba000000   jg 0x6470
0x000063b6      83fe02         cmp esi, 2
0x000063b9      0f84c1000000   je 0x6480
0x000063bf      7f0f           jg 0x63d0
0x000063c1      83fe01         cmp esi, 1
0x000063c4      7562           jne 0x6428
0x000063c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000063d0      89ef           mov edi, ebp
0x000063d2      31c0           xor eax, eax
0x000063d4      e857b4ffff     call sym.imp.fcntl
0x000063d9      89c3           mov ebx, eax
0x000063db      0f1f440000     nop dword [rax + rax]
0x000063e0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000063e5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000063ee      89d8           mov eax, ebx
0x000063f0      0f8557010000   jne 0x654d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x000063f6      4883c450       add rsp, 0x50
0x000063fa      5b             pop rbx
0x000063fb      5d             pop rbp
0x000063fc      415c           pop r12
0x000063fe      c3             ret
0x000063ff      90             nop
0x00006400      81fe07040000   cmp esi, 0x407
0x00006406      7f48           jg 0x6450
0x00006408      81fe06040000   cmp esi, 0x406
0x0000640e      7d70           jge 0x6480
0x00006410      81fe01040000   cmp esi, 0x401
0x00006416      74b8           je 0x63d0
0x00006418      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000641e      7460           je 0x6480
0x00006420      81fe00040000   cmp esi, 0x400
0x00006426      7458           je 0x6480
0x00006428      8b0424         mov eax, dword [rsp]
0x0000642b      83f82f         cmp eax, 0x2f
0x0000642e      0f8736010000   ja 0x656a
0x00006434      4803442410     add rax, qword [rsp + 0x10]
0x00006439      488b10         mov rdx, qword [rax]
0x0000643c      89ef           mov edi, ebp
0x0000643e      31c0           xor eax, eax
0x00006440      e8ebb3ffff     call sym.imp.fcntl
0x00006445      89c3           mov ebx, eax
0x00006447      eb97           jmp 0x63e0
0x00006449      0f1f80000000.  nop dword [rax]
0x00006450      81fe09040000   cmp esi, 0x409
0x00006456      7428           je 0x6480
0x00006458      0f8c72ffffff   jl 0x63d0
0x0000645e      81fe0a040000   cmp esi, 0x40a
0x00006464      75c2           jne 0x6428
0x00006466      e965ffffff     jmp 0x63d0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000646b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00006470      83fe09         cmp esi, 9
0x00006473      0f8457ffffff   je 0x63d0
0x00006479      7f05           jg 0x6480
0x0000647b      83fe08         cmp esi, 8
0x0000647e      75a8           jne 0x6428
0x00006480      8b0424         mov eax, dword [rsp]
0x00006483      83f82f         cmp eax, 0x2f
0x00006486      0f87e8000000   ja 0x6574
0x0000648c      4803442410     add rax, qword [rsp + 0x10]
0x00006491      8b10           mov edx, dword [rax]
0x00006493      89ef           mov edi, ebp
0x00006495      31c0           xor eax, eax
0x00006497      e894b3ffff     call sym.imp.fcntl
0x0000649c      89c3           mov ebx, eax
0x0000649e      e93dffffff     jmp 0x63e0
0x000064a3      31f6           xor esi, esi
0x000064a5      31c0           xor eax, eax
0x000064a7      e884b3ffff     call sym.imp.fcntl
0x000064ac      85c0           test eax, eax
0x000064ae      89c3           mov ebx, eax
0x000064b0      0f882affffff   js 0x63e0
0x000064b6      833d7b3d2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20a238:4]=0
0x000064bd      0f851dffffff   jne 0x63e0
0x000064c3      31c0           xor eax, eax
0x000064c5      be01000000     mov esi, 1
0x000064ca      89df           mov edi, ebx
0x000064cc      e85fb3ffff     call sym.imp.fcntl
0x000064d1      85c0           test eax, eax
0x000064d3      781c           js 0x64f1
0x000064d5      83c801         or eax, 1
0x000064d8      be02000000     mov esi, 2
0x000064dd      89df           mov edi, ebx
0x000064df      89c2           mov edx, eax
0x000064e1      31c0           xor eax, eax
0x000064e3      e848b3ffff     call sym.imp.fcntl
0x000064e8      83f8ff         cmp eax, 0xffffffff
0x000064eb      0f85effeffff   jne 0x63e0
0x000064f1      e8bab2ffff     call sym.imp.__errno_location
0x000064f6      448b20         mov r12d, dword [rax]
0x000064f9      4889c5         mov rbp, rax
0x000064fc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x000064fe      e85db4ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00006503      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00006508      44896500       mov dword [rbp], r12d
0x0000650c      e9cffeffff     jmp 0x63e0
0x00006511      0f1f80000000.  nop dword [rax]
0x00006518      e893b2ffff     call sym.imp.__errno_location
0x0000651d      833816         cmp dword [rax], 0x16
0x00006520      0f8569feffff   jne 0x638f
0x00006526      31f6           xor esi, esi
0x00006528      31c0           xor eax, eax
0x0000652a      4489e2         mov edx, r12d
0x0000652d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000652f      e8fcb2ffff     call sym.imp.fcntl
0x00006534      85c0           test eax, eax
0x00006536      89c3           mov ebx, eax
0x00006538      0f88a2feffff   js 0x63e0
0x0000653e      c705f03c2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20a238:4]=0
0x00006548      e976ffffff     jmp 0x64c3
0x0000654d      e87eb3ffff     call sym.imp.__stack_chk_fail
0x00006552      488b442410     mov rax, qword [rsp + 0x10]
0x00006557      31f6           xor esi, esi
0x00006559      8b5010         mov edx, dword [rax + 0x10]
0x0000655c      31c0           xor eax, eax
0x0000655e      e8cdb2ffff     call sym.imp.fcntl
0x00006563      89c3           mov ebx, eax
0x00006565      e976feffff     jmp 0x63e0
0x0000656a      488b442408     mov rax, qword [rsp + 8]
0x0000656f      e9c5feffff     jmp 0x6439
0x00006574      488b442408     mov rax, qword [rsp + 8]
0x00006579      e913ffffff     jmp 0x6491
0x0000657e      6690           nop
;-- __libc_csu_init:
0x00006580      4157           push r15
0x00006582      4156           push r14
0x00006584      4989d7         mov r15, rdx
0x00006587      4155           push r13
0x00006589      4154           push r12
0x0000658b      4c8d25de3420.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x209a70 ; "0#"
0x00006592      55             push rbp
0x00006593      488d2dde3420.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x209a78
0x0000659a      53             push rbx
0x0000659b      4189fd         mov r13d, edi
0x0000659e      4989f6         mov r14, rsi
0x000065a1      4c29e5         sub rbp, r12
0x000065a4      4883ec08       sub rsp, 8
0x000065a8      48c1fd03       sar rbp, 3
0x000065ac      e8a7b1ffff     call sym._init
0x000065b1      4885ed         test rbp, rbp
0x000065b4      7420           je 0x65d6
0x000065b6      31db           xor ebx, ebx
0x000065b8      0f1f84000000.  nop dword [rax + rax]
0x000065c0      4c89fa         mov rdx, r15
0x000065c3      4c89f6         mov rsi, r14
0x000065c6      4489ef         mov edi, r13d
0x000065c9      41ff14dc       call qword [r12 + rbx*8]
0x000065cd      4883c301       add rbx, 1
0x000065d1      4839dd         cmp rbp, rbx
0x000065d4      75ea           jne 0x65c0
0x000065d6      4883c408       add rsp, 8
0x000065da      5b             pop rbx
0x000065db      5d             pop rbp
0x000065dc      415c           pop r12
0x000065de      415d           pop r13
0x000065e0      415e           pop r14
0x000065e2      415f           pop r15
0x000065e4      c3             ret
0x000065e5      90             nop
0x000065e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000065f0      f3c3           ret
0x000065f2      662e0f1f8400.  nop word cs:[rax + rax]
0x000065fc      0f1f4000       nop dword [rax]
;-- atexit:
0x00006600      488b15013a20.  mov rdx, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00006607      31f6           xor esi, esi
0x00006609      e9d2b4ffff     jmp sym.imp.__cxa_atexit
0x0000660e      0000           add byte [rax], al
