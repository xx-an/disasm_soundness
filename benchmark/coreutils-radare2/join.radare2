;-- section..plt:
;-- .plt:
0x00001620      ff35ea972000   push qword [0x0020ae10]                 ; [12] -r-x section size 896 named .plt
0x00001626      ff25ec972000   jmp qword [0x0020ae18]                  ; [0x20ae18:8]=0
0x0000162c      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00001630      ff25ea972000   jmp qword [reloc.__ctype_toupper_loc]   ; [0x20ae20:8]=0x1636 ; "6\x16"
0x00001636      6800000000     push 0
0x0000163b      e9e0ffffff     jmp sym..plt
;-- imp.__uflow:
0x00001640      ff25e2972000   jmp qword [reloc.__uflow]               ; [0x20ae28:8]=0x1646 ; "F\x16"
0x00001646      6801000000     push 1
0x0000164b      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00001650      ff25da972000   jmp qword [reloc.free]                  ; [0x20ae30:8]=0x1656 ; "V\x16"
0x00001656      6802000000     push 2
0x0000165b      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x00001660      ff25d2972000   jmp qword [reloc.abort]                 ; [0x20ae38:8]=0x1666 ; "f\x16"
0x00001666      6803000000     push 3
0x0000166b      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001670      ff25ca972000   jmp qword [reloc.__errno_location]      ; [0x20ae40:8]=0x1676 ; "v\x16"
0x00001676      6804000000     push 4
0x0000167b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001680      ff25c2972000   jmp qword [reloc.strncmp]               ; [0x20ae48:8]=0x1686
0x00001686      6805000000     push 5
0x0000168b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001690      ff25ba972000   jmp qword [reloc._exit]                 ; [0x20ae50:8]=0x1696
0x00001696      6806000000     push 6
0x0000169b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x000016a0      ff25b2972000   jmp qword [reloc.__fpending]            ; [0x20ae58:8]=0x16a6
0x000016a6      6807000000     push 7
0x000016ab      e970ffffff     jmp sym..plt
;-- imp.fcntl:
0x000016b0      ff25aa972000   jmp qword [reloc.fcntl]                 ; [0x20ae60:8]=0x16b6
0x000016b6      6808000000     push 8
0x000016bb      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x000016c0      ff25a2972000   jmp qword [reloc.textdomain]            ; [0x20ae68:8]=0x16c6
0x000016c6      6809000000     push 9
0x000016cb      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x000016d0      ff259a972000   jmp qword [reloc.fclose]                ; [0x20ae70:8]=0x16d6
0x000016d6      680a000000     push 0xa
0x000016db      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000016e0      ff2592972000   jmp qword [reloc.bindtextdomain]        ; [0x20ae78:8]=0x16e6
0x000016e6      680b000000     push 0xb
0x000016eb      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000016f0      ff258a972000   jmp qword [reloc.dcgettext]             ; [0x20ae80:8]=0x16f6
0x000016f6      680c000000     push 0xc
0x000016fb      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001700      ff2582972000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ae88:8]=0x1706
0x00001706      680d000000     push 0xd
0x0000170b      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x00001710      ff257a972000   jmp qword [reloc.strlen]                ; [0x20ae90:8]=0x1716
0x00001716      680e000000     push 0xe
0x0000171b      e900ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001720      ff2572972000   jmp qword [reloc.__stack_chk_fail]      ; [0x20ae98:8]=0x1726 ; "&\x17"
0x00001726      680f000000     push 0xf
0x0000172b      e9f0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001730      ff256a972000   jmp qword [reloc.getopt_long]           ; [0x20aea0:8]=0x1736 ; "6\x17"
0x00001736      6810000000     push 0x10
0x0000173b      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001740      ff2562972000   jmp qword [reloc.mbrtowc]               ; [0x20aea8:8]=0x1746 ; "F\x17"
0x00001746      6811000000     push 0x11
0x0000174b      e9d0feffff     jmp sym..plt
;-- imp.strchr:
0x00001750      ff255a972000   jmp qword [reloc.strchr]                ; [0x20aeb0:8]=0x1756 ; "V\x17"
0x00001756      6812000000     push 0x12
0x0000175b      e9c0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001760      ff2552972000   jmp qword [reloc.__overflow]            ; [0x20aeb8:8]=0x1766 ; "f\x17"
0x00001766      6813000000     push 0x13
0x0000176b      e9b0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001770      ff254a972000   jmp qword [reloc.strrchr]               ; [0x20aec0:8]=0x1776 ; "v\x17"
0x00001776      6814000000     push 0x14
0x0000177b      e9a0feffff     jmp sym..plt
;-- imp.lseek:
0x00001780      ff2542972000   jmp qword [reloc.lseek]                 ; [0x20aec8:8]=0x1786
0x00001786      6815000000     push 0x15
0x0000178b      e990feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001790      ff253a972000   jmp qword [reloc.__assert_fail]         ; [0x20aed0:8]=0x1796
0x00001796      6816000000     push 0x16
0x0000179b      e980feffff     jmp sym..plt
;-- imp.memset:
0x000017a0      ff2532972000   jmp qword [reloc.memset]                ; [0x20aed8:8]=0x17a6
0x000017a6      6817000000     push 0x17
0x000017ab      e970feffff     jmp sym..plt
;-- imp.close:
0x000017b0      ff252a972000   jmp qword [reloc.close]                 ; [0x20aee0:8]=0x17b6
0x000017b6      6818000000     push 0x18
0x000017bb      e960feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x000017c0      ff2522972000   jmp qword [reloc.posix_fadvise]         ; [0x20aee8:8]=0x17c6
0x000017c6      6819000000     push 0x19
0x000017cb      e950feffff     jmp sym..plt
;-- imp.memchr:
0x000017d0      ff251a972000   jmp qword [reloc.memchr]                ; [0x20aef0:8]=0x17d6
0x000017d6      681a000000     push 0x1a
0x000017db      e940feffff     jmp sym..plt
;-- imp.memcmp:
0x000017e0      ff2512972000   jmp qword [reloc.memcmp]                ; [0x20aef8:8]=0x17e6
0x000017e6      681b000000     push 0x1b
0x000017eb      e930feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000017f0      ff250a972000   jmp qword [reloc.fputs_unlocked]        ; [0x20af00:8]=0x17f6
0x000017f6      681c000000     push 0x1c
0x000017fb      e920feffff     jmp sym..plt
;-- imp.calloc:
0x00001800      ff2502972000   jmp qword [reloc.calloc]                ; [0x20af08:8]=0x1806
0x00001806      681d000000     push 0x1d
0x0000180b      e910feffff     jmp sym..plt
;-- imp.strcmp:
0x00001810      ff25fa962000   jmp qword [reloc.strcmp]                ; [0x20af10:8]=0x1816
0x00001816      681e000000     push 0x1e
0x0000181b      e900feffff     jmp sym..plt
;-- imp.memcpy:
0x00001820      ff25f2962000   jmp qword [reloc.memcpy]                ; [0x20af18:8]=0x1826 ; "&\x18"
0x00001826      681f000000     push 0x1f
0x0000182b      e9f0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001830      ff25ea962000   jmp qword [reloc.fileno]                ; [0x20af20:8]=0x1836 ; "6\x18"
0x00001836      6820000000     push 0x20                               ; "@"
0x0000183b      e9e0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001840      ff25e2962000   jmp qword [reloc.malloc]                ; [0x20af28:8]=0x1846 ; "F\x18"
0x00001846      6821000000     push 0x21                               ; '!'
0x0000184b      e9d0fdffff     jmp sym..plt
;-- imp.fflush:
0x00001850      ff25da962000   jmp qword [reloc.fflush]                ; [0x20af30:8]=0x1856 ; "V\x18"
0x00001856      6822000000     push 0x22                               ; '"'
0x0000185b      e9c0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001860      ff25d2962000   jmp qword [reloc.nl_langinfo]           ; [0x20af38:8]=0x1866 ; "f\x18"
0x00001866      6823000000     push 0x23                               ; '#'
0x0000186b      e9b0fdffff     jmp sym..plt
;-- imp.strcoll:
0x00001870      ff25ca962000   jmp qword [reloc.strcoll]               ; [0x20af40:8]=0x1876 ; "v\x18"
0x00001876      6824000000     push 0x24                               ; '$'
0x0000187b      e9a0fdffff     jmp sym..plt
;-- imp.strpbrk:
0x00001880      ff25c2962000   jmp qword [reloc.strpbrk]               ; [0x20af48:8]=0x1886
0x00001886      6825000000     push 0x25                               ; '%'
0x0000188b      e990fdffff     jmp sym..plt
;-- imp.__freading:
0x00001890      ff25ba962000   jmp qword [reloc.__freading]            ; [0x20af50:8]=0x1896
0x00001896      6826000000     push 0x26                               ; '&'
0x0000189b      e980fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000018a0      ff25b2962000   jmp qword [reloc.fwrite_unlocked]       ; [0x20af58:8]=0x18a6
0x000018a6      6827000000     push 0x27                               ; '''
0x000018ab      e970fdffff     jmp sym..plt
;-- imp.realloc:
0x000018b0      ff25aa962000   jmp qword [reloc.realloc]               ; [0x20af60:8]=0x18b6
0x000018b6      6828000000     push 0x28                               ; '('
0x000018bb      e960fdffff     jmp sym..plt
;-- imp.fdopen:
0x000018c0      ff25a2962000   jmp qword [reloc.fdopen]                ; [0x20af68:8]=0x18c6
0x000018c6      6829000000     push 0x29                               ; ')'
0x000018cb      e950fdffff     jmp sym..plt
;-- imp.setlocale:
0x000018d0      ff259a962000   jmp qword [reloc.setlocale]             ; [0x20af70:8]=0x18d6
0x000018d6      682a000000     push 0x2a                               ; '*'
0x000018db      e940fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000018e0      ff2592962000   jmp qword [reloc.__printf_chk]          ; [0x20af78:8]=0x18e6
0x000018e6      682b000000     push 0x2b                               ; '+'
0x000018eb      e930fdffff     jmp sym..plt
;-- imp.error:
0x000018f0      ff258a962000   jmp qword [reloc.error]                 ; [0x20af80:8]=0x18f6
0x000018f6      682c000000     push 0x2c                               ; ','
0x000018fb      e920fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001900      ff2582962000   jmp qword [reloc.fseeko]                ; [0x20af88:8]=0x1906
0x00001906      682d000000     push 0x2d                               ; '-'
0x0000190b      e910fdffff     jmp sym..plt
;-- imp.fopen:
0x00001910      ff257a962000   jmp qword [reloc.fopen]                 ; [0x20af90:8]=0x1916
0x00001916      682e000000     push 0x2e                               ; '.'
0x0000191b      e900fdffff     jmp sym..plt
;-- imp.strtoul:
0x00001920      ff2572962000   jmp qword [reloc.strtoul]               ; [0x20af98:8]=0x1926 ; "&\x19"
0x00001926      682f000000     push 0x2f                               ; '/'
0x0000192b      e9f0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001930      ff256a962000   jmp qword [reloc.__cxa_atexit]          ; [0x20afa0:8]=0x1936 ; "6\x19"
0x00001936      6830000000     push 0x30                               ; '0'
0x0000193b      e9e0fcffff     jmp sym..plt
;-- imp.exit:
0x00001940      ff2562962000   jmp qword [reloc.exit]                  ; [0x20afa8:8]=0x1946 ; "F\x19"
0x00001946      6831000000     push 0x31                               ; '1'
0x0000194b      e9d0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001950      ff255a962000   jmp qword [reloc.fwrite]                ; [0x20afb0:8]=0x1956 ; "V\x19"
0x00001956      6832000000     push 0x32                               ; '2'
0x0000195b      e9c0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001960      ff2552962000   jmp qword [reloc.__fprintf_chk]         ; [0x20afb8:8]=0x1966 ; "f\x19"
0x00001966      6833000000     push 0x33                               ; '3'
0x0000196b      e9b0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001970      ff254a962000   jmp qword [reloc.mbsinit]               ; [0x20afc0:8]=0x1976 ; "v\x19"
0x00001976      6834000000     push 0x34                               ; '4'
0x0000197b      e9a0fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001980      ff2542962000   jmp qword [reloc.iswprint]              ; [0x20afc8:8]=0x1986
0x00001986      6835000000     push 0x35                               ; '5'
0x0000198b      e990fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001990      ff253a962000   jmp qword [reloc.__ctype_b_loc]         ; [0x20afd0:8]=0x1996
0x00001996      6836000000     push 0x36                               ; '6'
0x0000199b      e980fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000019a0      .qword 0x90660020965225ff                              ; [13] -r-x section size 8 named .plt.got
0x000019a8      0000           add byte [rax], al
0x000019aa      0000           add byte [rax], al
0x000019ac      0000           add byte [rax], al
0x000019ae      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000019b0      4157           push r15                                ; [14] -r-x section size 22862 named .text
0x000019b2      4156           push r14
0x000019b4      4155           push r13
0x000019b6      4154           push r12
0x000019b8      55             push rbp
0x000019b9      53             push rbx
0x000019ba      4863ef         movsxd rbp, edi
0x000019bd      4889f3         mov rbx, rsi
0x000019c0      4881ec980000.  sub rsp, 0x98
0x000019c7      488b3e         mov rdi, qword [rsi]
0x000019ca      64488b042528.  mov rax, qword fs:[0x28]
0x000019d3      488984248800.  mov qword [rsp + 0x88], rax
0x000019db      31c0           xor eax, eax
0x000019dd      c74424300000.  mov dword [rsp + 0x30], 0
0x000019e5      48c784248000.  mov qword [rsp + 0x80], 0
0x000019f1      4c8d7c2460     lea r15, [rsp + 0x60]
0x000019f6      c74424340000.  mov dword [rsp + 0x34], 0
0x000019fe      e83d260000     call sym.set_program_name
0x00001a03      488d354e6300.  lea rsi, [0x00007d58]
0x00001a0a      bf06000000     mov edi, 6
0x00001a0f      e8bcfeffff     call sym.imp.setlocale
0x00001a14      488d353a6400.  lea rsi, str.usr_local_share_locale     ; 0x7e55 ; "/usr/local/share/locale"
0x00001a1b      488d3df96300.  lea rdi, [0x00007e1b]                   ; "coreutils"
0x00001a22      e8b9fcffff     call sym.imp.bindtextdomain
0x00001a27      488d3ded6300.  lea rdi, [0x00007e1b]                   ; "coreutils"
0x00001a2e      e88dfcffff     call sym.imp.textdomain
0x00001a33      bf03000000     mov edi, 3
0x00001a38      e813240000     call sym.hard_locale
0x00001a3d      488d3d7c2200.  lea rdi, sym.close_stdout               ; 0x3cc0 ; "USH\x83\xec\bH\x8b=\xdbs "
0x00001a44      880554972000   mov byte [obj.hard_LC_COLLATE], al      ; [0x20b19e:1]=0
0x00001a4a      e8a1580000     call sym.atexit
0x00001a4f      488d3d4a1200.  lea rdi, sym.free_spareline             ; 0x2ca0 ; "SH\x8b\x1d\xf8\x84 "
0x00001a56      e895580000     call sym.atexit
0x00001a5b      488d44242c     lea rax, [rsp + 0x2c]
0x00001a60      c60534972000.  mov byte [obj.print_pairables], 1       ; [0x20b19b:1]=0
0x00001a67      c6052c972000.  mov byte [obj.seen_unpairable], 0       ; [0x20b19a:1]=0
0x00001a6e      c60524972000.  mov byte [0x0020b199], 0                ; [0x20b199:1]=0
0x00001a75      c6051c972000.  mov byte [obj.issued_disorder_warning], 0 ; [0x20b198:1]=0
0x00001a7c      4889442408     mov qword [rsp + 8], rax
0x00001a81      488d442430     lea rax, [rsp + 0x30]
0x00001a86      c705c0962000.  mov dword [obj.check_input_order], 0    ; [0x20b150:4]=0
0x00001a90      4889442410     mov qword [rsp + 0x10], rax
0x00001a95      eb4d           jmp 0x1ae4
0x00001a97      660f1f840000.  nop word [rax + rax]
0x00001aa0      83f876         cmp eax, 0x76
0x00001aa3      0f849f010000   je 0x1c48
0x00001aa9      0f8ec9000000   jle 0x1b78
0x00001aaf      3d80000000     cmp eax, 0x80
0x00001ab4      0f84b6020000   je 0x1d70
0x00001aba      0f8e90020000   jle 0x1d50
0x00001ac0      3d81000000     cmp eax, 0x81
0x00001ac5      0f8435030000   je 0x1e00
0x00001acb      3d82000000     cmp eax, 0x82
0x00001ad0      756f           jne 0x1b41
0x00001ad2      c60527962000.  mov byte [obj.join_header_lines], 1     ; [0x20b100:1]=0
0x00001ad9      31c0           xor eax, eax
0x00001adb      0f1f440000     nop dword [rax + rax]
0x00001ae0      89442430       mov dword [rsp + 0x30], eax
0x00001ae4      488d0dd58f20.  lea rcx, obj.longopts                   ; 0x20aac0
0x00001aeb      488d15b96300.  lea rdx, str.a:e:i1:2:j:o:t:v:z         ; 0x7eab ; "-a:e:i1:2:j:o:t:v:z"
0x00001af2      4531c0         xor r8d, r8d
0x00001af5      4889de         mov rsi, rbx
0x00001af8      89ef           mov edi, ebp
0x00001afa      e831fcffff     call sym.imp.getopt_long
0x00001aff      83f8ff         cmp eax, 0xffffffff
0x00001b02      0f8459030000   je 0x1e61
0x00001b08      83f869         cmp eax, 0x69
0x00001b0b      c744242c0000.  mov dword [rsp + 0x2c], 0
0x00001b13      0f84cf020000   je 0x1de8
0x00001b19      7f85           jg 0x1aa0
0x00001b1b      83f831         cmp eax, 0x31
0x00001b1e      0f849c020000   je 0x1dc0
0x00001b24      0f8ec6000000   jle 0x1bf0
0x00001b2a      83f861         cmp eax, 0x61
0x00001b2d      0f841c010000   je 0x1c4f
0x00001b33      83f865         cmp eax, 0x65
0x00001b36      0f84dc010000   je 0x1d18
0x00001b3c      83f832         cmp eax, 0x32
0x00001b3f      740f           je 0x1b50
0x00001b41      bf01000000     mov edi, 1
0x00001b46      e8751b0000     call sym.usage
0x00001b4b      0f1f440000     nop dword [rax + rax]
0x00001b50      488b3d699520.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00001b57      e8340f0000     call sym.string_to_join_field
0x00001b5c      488d3db59420.  lea rdi, obj.join_field_2               ; 0x20b018
0x00001b63      4889c6         mov rsi, rax
0x00001b66      e8d50e0000     call sym.set_join_field
0x00001b6b      8b44242c       mov eax, dword [rsp + 0x2c]
0x00001b6f      e96cffffff     jmp 0x1ae0
0x00001b74      0f1f4000       nop dword [rax]
0x00001b78      83f86f         cmp eax, 0x6f
0x00001b7b      0f841f010000   je 0x1ca0
0x00001b81      83f874         cmp eax, 0x74
0x00001b84      0f84fe010000   je 0x1d88
0x00001b8a      83f86a         cmp eax, 0x6a
0x00001b8d      75b2           jne 0x1b41
0x00001b8f      488b3d2a9520.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00001b96      0fb607         movzx eax, byte [rdi]
0x00001b99      8d50cf         lea edx, [rax - 0x31]
0x00001b9c      80fa01         cmp dl, 1
0x00001b9f      771f           ja 0x1bc0
0x00001ba1      807f0100       cmp byte [rdi + 1], 0
0x00001ba5      7519           jne 0x1bc0
0x00001ba7      4863150a9520.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b0b8:4]=0
0x00001bae      488b54d3f8     mov rdx, qword [rbx + rdx*8 - 8]
0x00001bb3      4883c202       add rdx, 2
0x00001bb7      4839d7         cmp rdi, rdx
0x00001bba      0f84be070000   je 0x237e
0x00001bc0      e8cb0e0000     call sym.string_to_join_field
0x00001bc5      488d3d549420.  lea rdi, obj.join_field_1               ; 0x20b020
0x00001bcc      4889c6         mov rsi, rax
0x00001bcf      e86c0e0000     call sym.set_join_field
0x00001bd4      488b35459420.  mov rsi, qword [obj.join_field_1]       ; [0x20b020:8]=-1
0x00001bdb      488d3d369420.  lea rdi, obj.join_field_2               ; 0x20b018
0x00001be2      e8590e0000     call sym.set_join_field
0x00001be7      8b44242c       mov eax, dword [rsp + 0x2c]
0x00001beb      e9f0feffff     jmp 0x1ae0
0x00001bf0      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001bf5      0f84db0a0000   je 0x26d6
0x00001bfb      83f801         cmp eax, 1
0x00001bfe      0f84d4000000   je 0x1cd8
0x00001c04      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001c09      0f8532ffffff   jne 0x1b41
0x00001c0f      488b3d929420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00001c16      488b0d139420.  mov rcx, qword [obj.Version]            ; [0x20b030:8]=0x7f43 str.8.31 ; "C\x7f"
0x00001c1d      4c8d057a6200.  lea r8, str.Mike_Haertel                ; 0x7e9e ; "Mike Haertel"
0x00001c24      488d15ec6100.  lea rdx, str.GNU_coreutils              ; 0x7e17 ; "GNU coreutils"
0x00001c2b      488d356a6100.  lea rsi, str.join                       ; 0x7d9c ; "join"
0x00001c32      4531c9         xor r9d, r9d
0x00001c35      31c0           xor eax, eax
0x00001c37      e804460000     call sym.version_etc
0x00001c3c      31ff           xor edi, edi
0x00001c3e      e8fdfcffff     call sym.imp.exit
0x00001c43      0f1f440000     nop dword [rax + rax]
0x00001c48      c6054c952000.  mov byte [obj.print_pairables], 0       ; [0x20b19b:1]=0
0x00001c4f      488b3d6a9420.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00001c56      4c8d05fb6000.  lea r8, [0x00007d58]
0x00001c5d      31f6           xor esi, esi
0x00001c5f      4c89f9         mov rcx, r15
0x00001c62      ba0a000000     mov edx, 0xa
0x00001c67      e8244b0000     call sym.xstrtoul
0x00001c6c      85c0           test eax, eax
0x00001c6e      0f85850a0000   jne 0x26f9
0x00001c74      488b442460     mov rax, qword [rsp + 0x60]
0x00001c79      488d50ff       lea rdx, [rax - 1]
0x00001c7d      4883fa01       cmp rdx, 1
0x00001c81      0f87720a0000   ja 0x26f9
0x00001c87      4883f801       cmp rax, 1
0x00001c8b      0f8480010000   je 0x1e11
0x00001c91      c60504952000.  mov byte [obj.print_unpairables_2], 1   ; [0x20b19c:1]=0
0x00001c98      e94affffff     jmp 0x1be7
0x00001c9d      0f1f00         nop dword [rax]
0x00001ca0      488b15199420.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00001ca7      488d3dbf6100.  lea rdi, str.auto                       ; 0x7e6d ; "auto"
0x00001cae      b905000000     mov ecx, 5
0x00001cb3      4889d6         mov rsi, rdx
0x00001cb6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001cb8      0f97c0         seta al
0x00001cbb      1c00           sbb al, 0
0x00001cbd      0fbec0         movsx eax, al
0x00001cc0      85c0           test eax, eax
0x00001cc2      0f857f010000   jne 0x1e47
0x00001cc8      c605b9942000.  mov byte [obj.autoformat], 1            ; [0x20b188:1]=0
0x00001ccf      e90cfeffff     jmp 0x1ae0
0x00001cd4      0f1f4000       nop dword [rax]
0x00001cd8      4c8d742434     lea r14, [rsp + 0x34]
0x00001cdd      4c8dac248000.  lea r13, [rsp + 0x80]
0x00001ce5      4c8d642478     lea r12, [rsp + 0x78]
0x00001cea      4c8b4c2408     mov r9, qword [rsp + 8]
0x00001cef      4c8b442410     mov r8, qword [rsp + 0x10]
0x00001cf4      488b3dc59320.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00001cfb      4c89f1         mov rcx, r14
0x00001cfe      4c89ea         mov rdx, r13
0x00001d01      4c89e6         mov rsi, r12
0x00001d04      e8d71d0000     call sym.add_file_name.constprop.7
0x00001d09      8b44242c       mov eax, dword [rsp + 0x2c]
0x00001d0d      e9cefdffff     jmp 0x1ae0
0x00001d12      660f1f440000   nop word [rax + rax]
0x00001d18      488b3d719420.  mov rdi, qword [obj.empty_filler]       ; [0x20b190:8]=0
0x00001d1f      4c8b259a9320.  mov r12, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00001d26      4885ff         test rdi, rdi
0x00001d29      7410           je 0x1d3b
0x00001d2b      4c89e6         mov rsi, r12
0x00001d2e      e8ddfaffff     call sym.imp.strcmp
0x00001d33      85c0           test eax, eax
0x00001d35      0f85f4090000   jne 0x272f
0x00001d3b      4c89254e9420.  mov qword [obj.empty_filler], r12       ; [0x20b190:8]=0
0x00001d42      31c0           xor eax, eax
0x00001d44      e997fdffff     jmp 0x1ae0
0x00001d49      0f1f80000000.  nop dword [rax]
0x00001d50      83f87a         cmp eax, 0x7a
0x00001d53      0f85e8fdffff   jne 0x1b41
0x00001d59      c605b0922000.  mov byte [obj.eolchar], 0               ; [0x20b010:1]=10 ; "\n"
0x00001d60      31c0           xor eax, eax
0x00001d62      e979fdffff     jmp 0x1ae0
0x00001d67      660f1f840000.  nop word [rax + rax]
0x00001d70      c705d6932000.  mov dword [obj.check_input_order], 1    ; [0x20b150:4]=0
0x00001d7a      31c0           xor eax, eax
0x00001d7c      e95ffdffff     jmp 0x1ae0
0x00001d81      0f1f80000000.  nop dword [rax]
0x00001d88      4c8b25319320.  mov r12, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00001d8f      410fb60424     movzx eax, byte [r12]
0x00001d94      84c0           test al, al
0x00001d96      0f8581000000   jne 0x1e1d
0x00001d9c      b80a000000     mov eax, 0xa
0x00001da1      8b156d922000   mov edx, dword [obj.tab]                ; [0x20b014:4]=-1
0x00001da7      85d2           test edx, edx
0x00001da9      7808           js 0x1db3
0x00001dab      39c2           cmp edx, eax
0x00001dad      0f851d0b0000   jne 0x28d0
0x00001db3      89055b922000   mov dword [obj.tab], eax                ; [0x20b014:4]=-1
0x00001db9      31c0           xor eax, eax
0x00001dbb      e920fdffff     jmp 0x1ae0
0x00001dc0      488b3df99220.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00001dc7      e8c40c0000     call sym.string_to_join_field
0x00001dcc      488d3d4d9220.  lea rdi, obj.join_field_1               ; 0x20b020
0x00001dd3      4889c6         mov rsi, rax
0x00001dd6      e8650c0000     call sym.set_join_field
0x00001ddb      8b44242c       mov eax, dword [rsp + 0x2c]
0x00001ddf      e9fcfcffff     jmp 0x1ae0
0x00001de4      0f1f4000       nop dword [rax]
0x00001de8      c60512932000.  mov byte [obj.ignore_case], 1           ; [0x20b101:1]=0
0x00001def      31c0           xor eax, eax
0x00001df1      e9eafcffff     jmp 0x1ae0
0x00001df6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001e00      c70546932000.  mov dword [obj.check_input_order], 2    ; [0x20b150:4]=0
0x00001e0a      31c0           xor eax, eax
0x00001e0c      e9cffcffff     jmp 0x1ae0
0x00001e11      c60585932000.  mov byte [obj.print_unpairables_1], 1   ; [0x20b19d:1]=0
0x00001e18      e9cafdffff     jmp 0x1be7
0x00001e1d      41807c240100   cmp byte [r12 + 1], 0
0x00001e23      0f8478ffffff   je 0x1da1
0x00001e29      488d35426000.  lea rsi, [0x00007e72]                   ; "\0"
0x00001e30      4c89e7         mov rdi, r12
0x00001e33      e8d8f9ffff     call sym.imp.strcmp
0x00001e38      85c0           test eax, eax
0x00001e3a      0f85ce090000   jne 0x280e
0x00001e40      31c0           xor eax, eax
0x00001e42      e95affffff     jmp 0x1da1
0x00001e47      4889d7         mov rdi, rdx
0x00001e4a      e8e10c0000     call sym.add_field_list
0x00001e4f      c744242c0300.  mov dword [rsp + 0x2c], 3
0x00001e57      b803000000     mov eax, 3
0x00001e5c      e97ffcffff     jmp 0x1ae0
0x00001e61      486305509220.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b0b8:4]=0
0x00001e68      c74424300000.  mov dword [rsp + 0x30], 0
0x00001e70      39c5           cmp ebp, eax
0x00001e72      7e52           jle 0x1ec6
0x00001e74      488d4c2430     lea rcx, [rsp + 0x30]
0x00001e79      4c8d7c242c     lea r15, [rsp + 0x2c]
0x00001e7e      4c8d742434     lea r14, [rsp + 0x34]
0x00001e83      4c8dac248000.  lea r13, [rsp + 0x80]
0x00001e8b      4c8d642478     lea r12, [rsp + 0x78]
0x00001e90      48894c2408     mov qword [rsp + 8], rcx
0x00001e95      0f1f00         nop dword [rax]
0x00001e98      8d5001         lea edx, [rax + 1]
0x00001e9b      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00001e9f      4c8b442408     mov r8, qword [rsp + 8]
0x00001ea4      4d89f9         mov r9, r15
0x00001ea7      4c89f1         mov rcx, r14
0x00001eaa      4c89e6         mov rsi, r12
0x00001ead      891505922000   mov dword [obj.optind], edx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b0b8:4]=0
0x00001eb3      4c89ea         mov rdx, r13
0x00001eb6      e8251c0000     call sym.add_file_name.constprop.7
0x00001ebb      486305f69120.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b0b8:4]=0
0x00001ec2      39e8           cmp eax, ebp
0x00001ec4      7cd2           jl 0x1e98
0x00001ec6      8b442434       mov eax, dword [rsp + 0x34]
0x00001eca      83f802         cmp eax, 2
0x00001ecd      0f85d3090000   jne 0x28a6
0x00001ed3      83bc24800000.  cmp dword [rsp + 0x80], 0
0x00001edb      0f8565040000   jne 0x2346
0x00001ee1      83bc24840000.  cmp dword [rsp + 0x84], 0
0x00001ee9      0f8530040000   jne 0x231f
0x00001eef      48833d299120.  cmp qword [obj.join_field_1], 0xffffffffffffffff ; [0x20b020:8]=-1
0x00001ef7      0f8412040000   je 0x230f
0x00001efd      48833d139120.  cmp qword [obj.join_field_2], 0xffffffffffffffff ; [0x20b018:8]=-1
0x00001f05      0f84f4030000   je 0x22ff
0x00001f0b      488b1d9e9220.  mov rbx, qword [obj.g_names]            ; [0x20b1b0:8]=0
0x00001f12      488d35916000.  lea rsi, [0x00007faa]                   ; "-"
0x00001f19      4889df         mov rdi, rbx
0x00001f1c      e8eff8ffff     call sym.imp.strcmp
0x00001f21      85c0           test eax, eax
0x00001f23      0f853e040000   jne 0x2367
0x00001f29      4c8b25809120.  mov r12, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20b0b0:8]=0
0x00001f30      4d85e4         test r12, r12
0x00001f33      0f843a090000   je 0x2873
0x00001f39      488b1d789220.  mov rbx, qword [0x0020b1b8]             ; [0x20b1b8:8]=0
0x00001f40      488d35636000.  lea rsi, [0x00007faa]                   ; "-"
0x00001f47      4889df         mov rdi, rbx
0x00001f4a      e8c1f8ffff     call sym.imp.strcmp
0x00001f4f      85c0           test eax, eax
0x00001f51      0f856f060000   jne 0x25c6
0x00001f57      488b1d529120.  mov rbx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20b0b0:8]=0
0x00001f5e      4885db         test rbx, rbx
0x00001f61      0f84d9080000   je 0x2840
0x00001f67      4939dc         cmp r12, rbx
0x00001f6a      0f843a080000   je 0x27aa
0x00001f70      be02000000     mov esi, 2
0x00001f75      4c89e7         mov rdi, r12
0x00001f78      4c8d742440     lea r14, [rsp + 0x40]
0x00001f7d      e8fe1d0000     call sym.fadvise
0x00001f82      4c8d6c2460     lea r13, [rsp + 0x60]
0x00001f87      be02000000     mov esi, 2
0x00001f8c      4889df         mov rdi, rbx
0x00001f8f      e8ec1d0000     call sym.fadvise
0x00001f94      ba01000000     mov edx, 1
0x00001f99      4c89f6         mov rsi, r14
0x00001f9c      4c89e7         mov rdi, r12
0x00001f9f      48c744244000.  mov qword [rsp + 0x40], 0
0x00001fa8      48c744244800.  mov qword [rsp + 0x48], 0
0x00001fb1      48c744245000.  mov qword [rsp + 0x50], 0
0x00001fba      e821160000     call sym.getseq
0x00001fbf      ba02000000     mov edx, 2
0x00001fc4      4c89ee         mov rsi, r13
0x00001fc7      4889df         mov rdi, rbx
0x00001fca      48c744246000.  mov qword [rsp + 0x60], 0
0x00001fd3      48c744246800.  mov qword [rsp + 0x68], 0
0x00001fdc      48c744247000.  mov qword [rsp + 0x70], 0
0x00001fe5      e8f6150000     call sym.getseq
0x00001fea      803d97912000.  cmp byte [obj.autoformat], 0            ; [0x20b188:1]=0
0x00001ff1      743a           je 0x202d
0x00001ff3      488b442440     mov rax, qword [rsp + 0x40]
0x00001ff8      4885c0         test rax, rax
0x00001ffb      740c           je 0x2009
0x00001ffd      488b442450     mov rax, qword [rsp + 0x50]
0x00002002      488b00         mov rax, qword [rax]
0x00002005      488b4018       mov rax, qword [rax + 0x18]
0x00002009      488905709120.  mov qword [obj.autocount_1], rax        ; [0x20b180:8]=0
0x00002010      488b442460     mov rax, qword [rsp + 0x60]
0x00002015      4885c0         test rax, rax
0x00002018      740c           je 0x2026
0x0000201a      488b442470     mov rax, qword [rsp + 0x70]
0x0000201f      488b00         mov rax, qword [rax]
0x00002022      488b4018       mov rax, qword [rax + 0x18]
0x00002026      4889054b9120.  mov qword [obj.autocount_2], rax        ; [0x20b178:8]=0
0x0000202d      803dcc902000.  cmp byte [obj.join_header_lines], 0     ; [0x20b100:1]=0
0x00002034      0f842a020000   je 0x2264
0x0000203a      48837c244000   cmp qword [rsp + 0x40], 0
0x00002040      488b442460     mov rax, qword [rsp + 0x60]
0x00002045      0f8592050000   jne 0x25dd
0x0000204b      4885c0         test rax, rax
0x0000204e      0f8503060000   jne 0x2657
0x00002054      31c0           xor eax, eax
0x00002056      833df3902000.  cmp dword [obj.check_input_order], 2    ; [0x20b150:4]=0
0x0000205d      48c744243800.  mov qword [rsp + 0x38], 0
0x00002066      741a           je 0x2082
0x00002068      803d29912000.  cmp byte [obj.issued_disorder_warning], 0 ; [0x20b198:1]=0
0x0000206f      0f8427030000   je 0x239c
0x00002075      803d1d912000.  cmp byte [0x0020b199], 0                ; [0x20b199:1]=0
0x0000207c      0f841a030000   je 0x239c
0x00002082      803d14912000.  cmp byte [obj.print_unpairables_1], 0   ; [0x20b19d:1]=0
0x00002089      0f854e060000   jne 0x26dd
0x0000208f      0fb605069120.  movzx eax, byte [obj.print_unpairables_2] ; [0x20b19c:1]=0
0x00002096      84c0           test al, al
0x00002098      0f85a9040000   jne 0x2547
0x0000209e      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000020a3      e8a8f5ffff     call sym.imp.free
0x000020a8      498d7610       lea rsi, [r14 + 0x10]
0x000020ac      498d7e08       lea rdi, [r14 + 8]
0x000020b0      e83b0c0000     call sym.delseq.isra.3
0x000020b5      498d7510       lea rsi, [r13 + 0x10]
0x000020b9      498d7d08       lea rdi, [r13 + 8]
0x000020bd      e82e0c0000     call sym.delseq.isra.3
0x000020c2      4c89e7         mov rdi, r12
0x000020c5      e8e64a0000     call sym.rpl_fclose
0x000020ca      85c0           test eax, eax
0x000020cc      0f8504070000   jne 0x27d6
0x000020d2      4889df         mov rdi, rbx
0x000020d5      e8d64a0000     call sym.rpl_fclose
0x000020da      85c0           test eax, eax
0x000020dc      0f8595060000   jne 0x2777
0x000020e2      803daf902000.  cmp byte [obj.issued_disorder_warning], 0 ; [0x20b198:1]=0
0x000020e9      0f8564060000   jne 0x2753
0x000020ef      803da3902000.  cmp byte [0x0020b199], 0                ; [0x20b199:1]=0
0x000020f6      0f8557060000   jne 0x2753
0x000020fc      31c0           xor eax, eax
0x000020fe      488b9c248800.  mov rbx, qword [rsp + 0x88]
0x00002106      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000210f      0f85f4060000   jne 0x2809
0x00002115      4881c4980000.  add rsp, 0x98
0x0000211c      5b             pop rbx
0x0000211d      5d             pop rbp
0x0000211e      415c           pop r12
0x00002120      415d           pop r13
0x00002122      415e           pop r14
0x00002124      415f           pop r15
0x00002126      c3             ret
0x00002127      660f1f840000.  nop word [rax + rax]
0x00002130      488b442470     mov rax, qword [rsp + 0x70]
0x00002135      488b4c2440     mov rcx, qword [rsp + 0x40]
0x0000213a      4c8b0dd78e20.  mov r9, qword [obj.join_field_2]        ; [0x20b018:8]=-1
0x00002141      4c8b05d88e20.  mov r8, qword [obj.join_field_1]        ; [0x20b020:8]=-1
0x00002148      488b10         mov rdx, qword [rax]
0x0000214b      488b442450     mov rax, qword [rsp + 0x50]
0x00002150      488b44c8f8     mov rax, qword [rax + rcx*8 - 8]
0x00002155      488d4a28       lea rcx, [rdx + 0x28]
0x00002159      488b5218       mov rdx, qword [rdx + 0x18]
0x0000215d      488b7818       mov rdi, qword [rax + 0x18]
0x00002161      488d7028       lea rsi, [rax + 0x28]
0x00002165      e8d60b0000     call sym.keycmp.isra.4
0x0000216a      85c0           test eax, eax
0x0000216c      0f852d030000   jne 0x249f
0x00002172      ba01000000     mov edx, 1
0x00002177      4c89f6         mov rsi, r14
0x0000217a      4c89e7         mov rdi, r12
0x0000217d      e85e140000     call sym.getseq
0x00002182      84c0           test al, al
0x00002184      75aa           jne 0x2130
0x00002186      488344244001   add qword [rsp + 0x40], 1
0x0000218c      c644241001     mov byte [rsp + 0x10], 1
0x00002191      eb47           jmp 0x21da
0x00002193      0f1f440000     nop dword [rax + rax]
0x00002198      488b442470     mov rax, qword [rsp + 0x70]
0x0000219d      488b542460     mov rdx, qword [rsp + 0x60]
0x000021a2      4c8b0d6f8e20.  mov r9, qword [obj.join_field_2]        ; [0x20b018:8]=-1
0x000021a9      4c8b05708e20.  mov r8, qword [obj.join_field_1]        ; [0x20b020:8]=-1
0x000021b0      488b54d0f8     mov rdx, qword [rax + rdx*8 - 8]
0x000021b5      488b442450     mov rax, qword [rsp + 0x50]
0x000021ba      488b00         mov rax, qword [rax]
0x000021bd      488d4a28       lea rcx, [rdx + 0x28]
0x000021c1      488b5218       mov rdx, qword [rdx + 0x18]
0x000021c5      488b7818       mov rdi, qword [rax + 0x18]
0x000021c9      488d7028       lea rsi, [rax + 0x28]
0x000021cd      e86e0b0000     call sym.keycmp.isra.4
0x000021d2      85c0           test eax, eax
0x000021d4      0f85bb020000   jne 0x2495
0x000021da      ba02000000     mov edx, 2
0x000021df      4c89ee         mov rsi, r13
0x000021e2      4889df         mov rdi, rbx
0x000021e5      e8f6130000     call sym.getseq
0x000021ea      84c0           test al, al
0x000021ec      75aa           jne 0x2198
0x000021ee      488344246001   add qword [rsp + 0x60], 1
0x000021f4      c644241f01     mov byte [rsp + 0x1f], 1
0x000021f9      803d9b8f2000.  cmp byte [obj.print_pairables], 0       ; [0x20b19b:1]=0
0x00002200      0f85a3020000   jne 0x24a9
0x00002206      807c241000     cmp byte [rsp + 0x10], 0
0x0000220b      0f8568020000   jne 0x2479
0x00002211      488b442450     mov rax, qword [rsp + 0x50]
0x00002216      488b542440     mov rdx, qword [rsp + 0x40]
0x0000221b      488d54d0f8     lea rdx, [rax + rdx*8 - 8]
0x00002220      488b08         mov rcx, qword [rax]
0x00002223      488b32         mov rsi, qword [rdx]
0x00002226      488930         mov qword [rax], rsi
0x00002229      48890a         mov qword [rdx], rcx
0x0000222c      48c744244001.  mov qword [rsp + 0x40], 1
0x00002235      807c241f00     cmp byte [rsp + 0x1f], 0
0x0000223a      0f8547020000   jne 0x2487
0x00002240      488b442470     mov rax, qword [rsp + 0x70]
0x00002245      488b542460     mov rdx, qword [rsp + 0x60]
0x0000224a      488d54d0f8     lea rdx, [rax + rdx*8 - 8]
0x0000224f      488b08         mov rcx, qword [rax]
0x00002252      488b32         mov rsi, qword [rdx]
0x00002255      488930         mov qword [rax], rsi
0x00002258      48890a         mov qword [rdx], rcx
0x0000225b      48c744246001.  mov qword [rsp + 0x60], 1
0x00002264      488b442440     mov rax, qword [rsp + 0x40]
0x00002269      4885c0         test rax, rax
0x0000226c      0f84e2fdffff   je 0x2054
0x00002272      48837c246000   cmp qword [rsp + 0x60], 0
0x00002278      0f84d8fdffff   je 0x2056
0x0000227e      488b442470     mov rax, qword [rsp + 0x70]
0x00002283      4c8b0d8e8d20.  mov r9, qword [obj.join_field_2]        ; [0x20b018:8]=-1
0x0000228a      4c8b058f8d20.  mov r8, qword [obj.join_field_1]        ; [0x20b020:8]=-1
0x00002291      488b10         mov rdx, qword [rax]
0x00002294      488b442450     mov rax, qword [rsp + 0x50]
0x00002299      488b00         mov rax, qword [rax]
0x0000229c      488d4a28       lea rcx, [rdx + 0x28]
0x000022a0      488b5218       mov rdx, qword [rdx + 0x18]
0x000022a4      488b7818       mov rdi, qword [rax + 0x18]
0x000022a8      488d7028       lea rsi, [rax + 0x28]
0x000022ac      e88f0a0000     call sym.keycmp.isra.4
0x000022b1      85c0           test eax, eax
0x000022b3      0f8875010000   js 0x242e
0x000022b9      0f84b3feffff   je 0x2172
0x000022bf      803dd68e2000.  cmp byte [obj.print_unpairables_2], 0   ; [0x20b19c:1]=0
0x000022c6      0f8594010000   jne 0x2460
0x000022cc      ba02000000     mov edx, 2
0x000022d1      4c89ee         mov rsi, r13
0x000022d4      4889df         mov rdi, rbx
0x000022d7      48c744246000.  mov qword [rsp + 0x60], 0
0x000022e0      e8fb120000     call sym.getseq
0x000022e5      488b442440     mov rax, qword [rsp + 0x40]
0x000022ea      c605a98e2000.  mov byte [obj.seen_unpairable], 1       ; [0x20b19a:1]=0
0x000022f1      4885c0         test rax, rax
0x000022f4      0f8578ffffff   jne 0x2272
0x000022fa      e955fdffff     jmp 0x2054
0x000022ff      48c7050e8d20.  mov qword [obj.join_field_2], 0         ; [0x20b018:8]=-1
0x0000230a      e9fcfbffff     jmp 0x1f0b
0x0000230f      48c705068d20.  mov qword [obj.join_field_1], 0         ; [0x20b020:8]=-1
0x0000231a      e9defbffff     jmp 0x1efd
0x0000231f      488d3dfa8c20.  lea rdi, obj.join_field_1               ; 0x20b020
0x00002326      be01000000     mov esi, 1
0x0000232b      e810070000     call sym.set_join_field
0x00002330      488d3de18c20.  lea rdi, obj.join_field_2               ; 0x20b018
0x00002337      be01000000     mov esi, 1
0x0000233c      e8ff060000     call sym.set_join_field
0x00002341      e9a9fbffff     jmp 0x1eef
0x00002346      488d3dd38c20.  lea rdi, obj.join_field_1               ; 0x20b020
0x0000234d      31f6           xor esi, esi
0x0000234f      e8ec060000     call sym.set_join_field
0x00002354      488d3dbd8c20.  lea rdi, obj.join_field_2               ; 0x20b018
0x0000235b      31f6           xor esi, esi
0x0000235d      e8de060000     call sym.set_join_field
0x00002362      e97afbffff     jmp 0x1ee1
0x00002367      488d35c65b00.  lea rsi, [0x00007f34]                   ; "r"
0x0000236e      4889df         mov rdi, rbx
0x00002371      e83a1a0000     call sym.fopen_safer
0x00002376      4989c4         mov r12, rax
0x00002379      e9b2fbffff     jmp 0x1f30
0x0000237e      31d2           xor edx, edx
0x00002380      3c32           cmp al, 0x32
0x00002382      0f94c2         sete dl
0x00002385      4889d0         mov rax, rdx
0x00002388      838494800000.  add dword [rsp + rdx*4 + 0x80], 1
0x00002390      83c001         add eax, 1
0x00002393      8944242c       mov dword [rsp + 0x2c], eax
0x00002397      e944f7ffff     jmp 0x1ae0
0x0000239c      4885c0         test rax, rax
0x0000239f      0f849b010000   je 0x2540
0x000023a5      440fb63df08d.  movzx r15d, byte [obj.print_unpairables_1] ; [0x20b19d:1]=0
0x000023ad      4584ff         test r15b, r15b
0x000023b0      0f85d7020000   jne 0x268d
0x000023b6      41bf01000000   mov r15d, 1
0x000023bc      48837c246000   cmp qword [rsp + 0x60], 0
0x000023c2      7407           je 0x23cb
0x000023c4      c605cf8d2000.  mov byte [obj.seen_unpairable], 1       ; [0x20b19a:1]=0
0x000023cb      488d6c2438     lea rbp, [rsp + 0x38]
0x000023d0      ba01000000     mov edx, 1
0x000023d5      4889ee         mov rsi, rbp
0x000023d8      4c89e7         mov rdi, r12
0x000023db      e8100e0000     call sym.get_line
0x000023e0      84c0           test al, al
0x000023e2      7416           je 0x23fa
0x000023e4      803db28d2000.  cmp byte [obj.print_unpairables_1], 0   ; [0x20b19d:1]=0
0x000023eb      0f85b5020000   jne 0x26a6
0x000023f1      803da08d2000.  cmp byte [obj.issued_disorder_warning], 0 ; [0x20b198:1]=0
0x000023f8      74d6           je 0x23d0
0x000023fa      0fb6059b8d20.  movzx eax, byte [obj.print_unpairables_2] ; [0x20b19c:1]=0
0x00002401      84c0           test al, al
0x00002403      7505           jne 0x240a
0x00002405      4584ff         test r15b, r15b
0x00002408      740c           je 0x2416
0x0000240a      48837c246000   cmp qword [rsp + 0x60], 0
0x00002410      0f853d010000   jne 0x2553
0x00002416      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000241b      4885ff         test rdi, rdi
0x0000241e      0f847ffcffff   je 0x20a3
0x00002424      e847080000     call sym.freeline.part.2
0x00002429      e970fcffff     jmp 0x209e
0x0000242e      803d688d2000.  cmp byte [obj.print_unpairables_1], 0   ; [0x20b19d:1]=0
0x00002435      0f85ec000000   jne 0x2527
0x0000243b      ba01000000     mov edx, 1
0x00002440      4c89f6         mov rsi, r14
0x00002443      4c89e7         mov rdi, r12
0x00002446      48c744244000.  mov qword [rsp + 0x40], 0
0x0000244f      e88c110000     call sym.getseq
0x00002454      c6053f8d2000.  mov byte [obj.seen_unpairable], 1       ; [0x20b19a:1]=0
0x0000245b      e904feffff     jmp 0x2264
0x00002460      488b442470     mov rax, qword [rsp + 0x70]
0x00002465      488d3db48c20.  lea rdi, obj.uni_blank                  ; 0x20b120
0x0000246c      488b30         mov rsi, qword [rax]
0x0000246f      e85c0b0000     call sym.prjoin
0x00002474      e953feffff     jmp 0x22cc
0x00002479      48c744244000.  mov qword [rsp + 0x40], 0
0x00002482      e9aefdffff     jmp 0x2235
0x00002487      48c744246000.  mov qword [rsp + 0x60], 0
0x00002490      e9cffdffff     jmp 0x2264
0x00002495      c644241f00     mov byte [rsp + 0x1f], 0
0x0000249a      e95afdffff     jmp 0x21f9
0x0000249f      c644241000     mov byte [rsp + 0x10], 0
0x000024a4      e931fdffff     jmp 0x21da
0x000024a9      48837c244001   cmp qword [rsp + 0x40], 1
0x000024af      48c744240800.  mov qword [rsp + 8], 0
0x000024b8      0f8448fdffff   je 0x2206
0x000024be      6690           nop
0x000024c0      4531ff         xor r15d, r15d
0x000024c3      48837c246001   cmp qword [rsp + 0x60], 1
0x000024c9      488b442408     mov rax, qword [rsp + 8]
0x000024ce      488d2cc50000.  lea rbp, [rax*8]
0x000024d6      7431           je 0x2509
0x000024d8      0f1f84000000.  nop dword [rax + rax]
0x000024e0      488b542470     mov rdx, qword [rsp + 0x70]
0x000024e5      4a8b34fa       mov rsi, qword [rdx + r15*8]
0x000024e9      488b542450     mov rdx, qword [rsp + 0x50]
0x000024ee      4983c701       add r15, 1
0x000024f2      488b3c2a       mov rdi, qword [rdx + rbp]
0x000024f6      e8d50a0000     call sym.prjoin
0x000024fb      488b442460     mov rax, qword [rsp + 0x60]
0x00002500      488d50ff       lea rdx, [rax - 1]
0x00002504      4939d7         cmp r15, rdx
0x00002507      72d7           jb 0x24e0
0x00002509      488344240801   add qword [rsp + 8], 1
0x0000250f      488b442440     mov rax, qword [rsp + 0x40]
0x00002514      488b4c2408     mov rcx, qword [rsp + 8]
0x00002519      4883e801       sub rax, 1
0x0000251d      4839c1         cmp rcx, rax
0x00002520      729e           jb 0x24c0
0x00002522      e9dffcffff     jmp 0x2206
0x00002527      488b442450     mov rax, qword [rsp + 0x50]
0x0000252c      488d35ed8b20.  lea rsi, obj.uni_blank                  ; 0x20b120
0x00002533      488b38         mov rdi, qword [rax]
0x00002536      e8950a0000     call sym.prjoin
0x0000253b      e9fbfeffff     jmp 0x243b
0x00002540      0fb605558c20.  movzx eax, byte [obj.print_unpairables_2] ; [0x20b19c:1]=0
0x00002547      48837c246000   cmp qword [rsp + 0x60], 0
0x0000254d      0f844bfbffff   je 0x209e
0x00002553      84c0           test al, al
0x00002555      0f8519010000   jne 0x2674
0x0000255b      48837c244000   cmp qword [rsp + 0x40], 0
0x00002561      0f8501010000   jne 0x2668
0x00002567      488d6c2438     lea rbp, [rsp + 0x38]
0x0000256c      4c8d3dad8b20.  lea r15, obj.uni_blank                  ; 0x20b120
0x00002573      ba02000000     mov edx, 2
0x00002578      4889ee         mov rsi, rbp
0x0000257b      4889df         mov rdi, rbx
0x0000257e      e86d0c0000     call sym.get_line
0x00002583      84c0           test al, al
0x00002585      0f848bfeffff   je 0x2416
0x0000258b      803d0a8c2000.  cmp byte [obj.print_unpairables_2], 0   ; [0x20b19c:1]=0
0x00002592      750e           jne 0x25a2
0x00002594      803dfe8b2000.  cmp byte [0x0020b199], 0                ; [0x20b199:1]=0
0x0000259b      74d6           je 0x2573
0x0000259d      e974feffff     jmp 0x2416
0x000025a2      488b742438     mov rsi, qword [rsp + 0x38]
0x000025a7      4c89ff         mov rdi, r15
0x000025aa      e8210a0000     call sym.prjoin
0x000025af      803de38b2000.  cmp byte [0x0020b199], 0                ; [0x20b199:1]=0
0x000025b6      74bb           je 0x2573
0x000025b8      803ddd8b2000.  cmp byte [obj.print_unpairables_2], 0   ; [0x20b19c:1]=0
0x000025bf      75b2           jne 0x2573
0x000025c1      e950feffff     jmp 0x2416
0x000025c6      488d35675900.  lea rsi, [0x00007f34]                   ; "r"
0x000025cd      4889df         mov rdi, rbx
0x000025d0      e8db170000     call sym.fopen_safer
0x000025d5      4889c3         mov rbx, rax
0x000025d8      e981f9ffff     jmp 0x1f5e
0x000025dd      488b542450     mov rdx, qword [rsp + 0x50]
0x000025e2      4885c0         test rax, rax
0x000025e5      488d35348b20.  lea rsi, obj.uni_blank                  ; 0x20b120
0x000025ec      488b3a         mov rdi, qword [rdx]
0x000025ef      756d           jne 0x265e
0x000025f1      e8da090000     call sym.prjoin
0x000025f6      48837c244000   cmp qword [rsp + 0x40], 0
0x000025fc      48c705c98b20.  mov qword [obj.prevline], 0             ; [0x20b1d0:8]=0
0x00002607      48c705c68b20.  mov qword [0x0020b1d8], 0               ; [0x20b1d8:8]=0
0x00002612      7419           je 0x262d
0x00002614      ba01000000     mov edx, 1
0x00002619      4c89f6         mov rsi, r14
0x0000261c      4c89e7         mov rdi, r12
0x0000261f      48c744244000.  mov qword [rsp + 0x40], 0
0x00002628      e8b30f0000     call sym.getseq
0x0000262d      48837c246000   cmp qword [rsp + 0x60], 0
0x00002633      0f842bfcffff   je 0x2264
0x00002639      ba02000000     mov edx, 2
0x0000263e      4c89ee         mov rsi, r13
0x00002641      4889df         mov rdi, rbx
0x00002644      48c744246000.  mov qword [rsp + 0x60], 0
0x0000264d      e88e0f0000     call sym.getseq
0x00002652      e90dfcffff     jmp 0x2264
0x00002657      488d3dc28a20.  lea rdi, obj.uni_blank                  ; 0x20b120
0x0000265e      488b442470     mov rax, qword [rsp + 0x70]
0x00002663      488b30         mov rsi, qword [rax]
0x00002666      eb89           jmp 0x25f1
0x00002668      c6052b8b2000.  mov byte [obj.seen_unpairable], 1       ; [0x20b19a:1]=0
0x0000266f      e9f3feffff     jmp 0x2567
0x00002674      488b442470     mov rax, qword [rsp + 0x70]
0x00002679      488d3da08a20.  lea rdi, obj.uni_blank                  ; 0x20b120
0x00002680      488b30         mov rsi, qword [rax]
0x00002683      e848090000     call sym.prjoin
0x00002688      e9cefeffff     jmp 0x255b
0x0000268d      488b442450     mov rax, qword [rsp + 0x50]
0x00002692      488d35878a20.  lea rsi, obj.uni_blank                  ; 0x20b120
0x00002699      488b38         mov rdi, qword [rax]
0x0000269c      e82f090000     call sym.prjoin
0x000026a1      e916fdffff     jmp 0x23bc
0x000026a6      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000026ab      488d356e8a20.  lea rsi, obj.uni_blank                  ; 0x20b120
0x000026b2      e819090000     call sym.prjoin
0x000026b7      803dda8a2000.  cmp byte [obj.issued_disorder_warning], 0 ; [0x20b198:1]=0
0x000026be      0f840cfdffff   je 0x23d0
0x000026c4      803dd28a2000.  cmp byte [obj.print_unpairables_1], 0   ; [0x20b19d:1]=0
0x000026cb      0f85fffcffff   jne 0x23d0
0x000026d1      e924fdffff     jmp 0x23fa
0x000026d6      31ff           xor edi, edi
0x000026d8      e8e30f0000     call sym.usage
0x000026dd      4531ff         xor r15d, r15d
0x000026e0      4885c0         test rax, rax
0x000026e3      75a8           jne 0x268d
0x000026e5      0fb605b08a20.  movzx eax, byte [obj.print_unpairables_2] ; [0x20b19c:1]=0
0x000026ec      84c0           test al, al
0x000026ee      0f84aaf9ffff   je 0x209e
0x000026f4      e911fdffff     jmp 0x240a
0x000026f9      488b3dc08920.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00002700      e84b360000     call sym.quote
0x00002705      488d35305600.  lea rsi, str.invalid_field_number:__s   ; 0x7d3c ; "invalid field number: %s"
0x0000270c      4889c3         mov rbx, rax
0x0000270f      ba05000000     mov edx, 5
0x00002714      31ff           xor edi, edi
0x00002716      e8d5efffff     call sym.imp.dcgettext
0x0000271b      4889d9         mov rcx, rbx
0x0000271e      4889c2         mov rdx, rax
0x00002721      31f6           xor esi, esi
0x00002723      bf01000000     mov edi, 1
0x00002728      31c0           xor eax, eax
0x0000272a      e8c1f1ffff     call sym.imp.error
0x0000272f      488d35b25500.  lea rsi, str.conflicting_empty_field_replacement_strings ; 0x7ce8 ; "conflicting empty-field replacement strings"
0x00002736      ba05000000     mov edx, 5
0x0000273b      31ff           xor edi, edi
0x0000273d      e8aeefffff     call sym.imp.dcgettext
0x00002742      31f6           xor esi, esi
0x00002744      4889c2         mov rdx, rax
0x00002747      bf01000000     mov edi, 1
0x0000274c      31c0           xor eax, eax
0x0000274e      e89df1ffff     call sym.imp.error
0x00002753      488d358e5700.  lea rsi, str.input_is_not_in_sorted_order ; 0x7ee8 ; "input is not in sorted order"
0x0000275a      ba05000000     mov edx, 5
0x0000275f      31ff           xor edi, edi
0x00002761      e88aefffff     call sym.imp.dcgettext
0x00002766      31f6           xor esi, esi
0x00002768      4889c2         mov rdx, rax
0x0000276b      bf01000000     mov edi, 1
0x00002770      31c0           xor eax, eax
0x00002772      e879f1ffff     call sym.imp.error
0x00002777      488b153a8a20.  mov rdx, qword [0x0020b1b8]             ; [0x20b1b8:8]=0
0x0000277e      be03000000     mov esi, 3
0x00002783      31ff           xor edi, edi
0x00002785      e8f6330000     call sym.quotearg_n_style_colon
0x0000278a      4889c3         mov rbx, rax
0x0000278d      e8deeeffff     call sym.imp.__errno_location
0x00002792      8b30           mov esi, dword [rax]
0x00002794      488d15b75500.  lea rdx, [0x00007d52]                   ; "%s"
0x0000279b      4889d9         mov rcx, rbx
0x0000279e      bf01000000     mov edi, 1
0x000027a3      31c0           xor eax, eax
0x000027a5      e846f1ffff     call sym.imp.error
0x000027aa      488d35675500.  lea rsi, str.both_files_cannot_be_standard_input ; 0x7d18 ; "both files cannot be standard input"
0x000027b1      ba05000000     mov edx, 5
0x000027b6      31ff           xor edi, edi
0x000027b8      e833efffff     call sym.imp.dcgettext
0x000027bd      4889c3         mov rbx, rax
0x000027c0      e8abeeffff     call sym.imp.__errno_location
0x000027c5      8b30           mov esi, dword [rax]
0x000027c7      4889da         mov rdx, rbx
0x000027ca      bf01000000     mov edi, 1
0x000027cf      31c0           xor eax, eax
0x000027d1      e81af1ffff     call sym.imp.error
0x000027d6      488b15d38920.  mov rdx, qword [obj.g_names]            ; [0x20b1b0:8]=0
0x000027dd      be03000000     mov esi, 3
0x000027e2      31ff           xor edi, edi
0x000027e4      e897330000     call sym.quotearg_n_style_colon
0x000027e9      4889c3         mov rbx, rax
0x000027ec      e87feeffff     call sym.imp.__errno_location
0x000027f1      8b30           mov esi, dword [rax]
0x000027f3      488d15585500.  lea rdx, [0x00007d52]                   ; "%s"
0x000027fa      4889d9         mov rcx, rbx
0x000027fd      bf01000000     mov edi, 1
0x00002802      31c0           xor eax, eax
0x00002804      e8e7f0ffff     call sym.imp.error
0x00002809      e812efffff     call sym.imp.__stack_chk_fail
0x0000280e      4c89e7         mov rdi, r12
0x00002811      e83a350000     call sym.quote
0x00002816      488d35585600.  lea rsi, str.multi_character_tab__s     ; 0x7e75 ; "multi-character tab %s"
0x0000281d      4889c3         mov rbx, rax
0x00002820      ba05000000     mov edx, 5
0x00002825      31ff           xor edi, edi
0x00002827      e8c4eeffff     call sym.imp.dcgettext
0x0000282c      4889d9         mov rcx, rbx
0x0000282f      4889c2         mov rdx, rax
0x00002832      31f6           xor esi, esi
0x00002834      bf01000000     mov edi, 1
0x00002839      31c0           xor eax, eax
0x0000283b      e8b0f0ffff     call sym.imp.error
0x00002840      488b15718920.  mov rdx, qword [0x0020b1b8]             ; [0x20b1b8:8]=0
0x00002847      be03000000     mov esi, 3
0x0000284c      31ff           xor edi, edi
0x0000284e      e82d330000     call sym.quotearg_n_style_colon
0x00002853      4889c3         mov rbx, rax
0x00002856      e815eeffff     call sym.imp.__errno_location
0x0000285b      8b30           mov esi, dword [rax]
0x0000285d      488d15ee5400.  lea rdx, [0x00007d52]                   ; "%s"
0x00002864      4889d9         mov rcx, rbx
0x00002867      bf01000000     mov edi, 1
0x0000286c      31c0           xor eax, eax
0x0000286e      e87df0ffff     call sym.imp.error
0x00002873      488b15368920.  mov rdx, qword [obj.g_names]            ; [0x20b1b0:8]=0
0x0000287a      be03000000     mov esi, 3
0x0000287f      31ff           xor edi, edi
0x00002881      e8fa320000     call sym.quotearg_n_style_colon
0x00002886      4889c3         mov rbx, rax
0x00002889      e8e2edffff     call sym.imp.__errno_location
0x0000288e      8b30           mov esi, dword [rax]
0x00002890      488d15bb5400.  lea rdx, [0x00007d52]                   ; "%s"
0x00002897      4889d9         mov rcx, rbx
0x0000289a      bf01000000     mov edi, 1
0x0000289f      31c0           xor eax, eax
0x000028a1      e84af0ffff     call sym.imp.error
0x000028a6      85c0           test eax, eax
0x000028a8      754a           jne 0x28f4
0x000028aa      488d350e5600.  lea rsi, str.missing_operand            ; 0x7ebf ; "missing operand"
0x000028b1      31ff           xor edi, edi
0x000028b3      ba05000000     mov edx, 5
0x000028b8      e833eeffff     call sym.imp.dcgettext
0x000028bd      31f6           xor esi, esi
0x000028bf      4889c2         mov rdx, rax
0x000028c2      31ff           xor edi, edi
0x000028c4      31c0           xor eax, eax
0x000028c6      e825f0ffff     call sym.imp.error
0x000028cb      e971f2ffff     jmp 0x1b41
0x000028d0      488d35b55500.  lea rsi, str.incompatible_tabs          ; 0x7e8c ; "incompatible tabs"
0x000028d7      ba05000000     mov edx, 5
0x000028dc      31ff           xor edi, edi
0x000028de      e80deeffff     call sym.imp.dcgettext
0x000028e3      31f6           xor esi, esi
0x000028e5      4889c2         mov rdx, rax
0x000028e8      bf01000000     mov edi, 1
0x000028ed      31c0           xor eax, eax
0x000028ef      e8fcefffff     call sym.imp.error
0x000028f4      488b7cebf8     mov rdi, qword [rbx + rbp*8 - 8]
0x000028f9      e852340000     call sym.quote
0x000028fe      488d35ca5500.  lea rsi, str.missing_operand_after__s   ; 0x7ecf ; "missing operand after %s"
0x00002905      4889c3         mov rbx, rax
0x00002908      31ff           xor edi, edi
0x0000290a      ba05000000     mov edx, 5
0x0000290f      e8dcedffff     call sym.imp.dcgettext
0x00002914      4889d9         mov rcx, rbx
0x00002917      4889c2         mov rdx, rax
0x0000291a      31f6           xor esi, esi
0x0000291c      31ff           xor edi, edi
0x0000291e      31c0           xor eax, eax
0x00002920      e8cbefffff     call sym.imp.error
0x00002925      e917f2ffff     jmp 0x1b41
0x0000292a      660f1f440000   nop word [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002930      31ed           xor ebp, ebp
0x00002932      4989d1         mov r9, rdx
0x00002935      5e             pop rsi
0x00002936      4889e2         mov rdx, rsp
0x00002939      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000293d      50             push rax
0x0000293e      54             push rsp
0x0000293f      4c8d059a4900.  lea r8, sym.__libc_csu_fini             ; 0x72e0
0x00002946      488d0d234900.  lea rcx, sym.__libc_csu_init            ; 0x7270 ; "AWAVI\x89\xd7AUATL\x8d%.8 "
0x0000294d      488d3d5cf0ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x19b0 ; "AWAVAUATUSHc\xefH\x89\xf3H\x81\xec\x98"
0x00002954      ff1586862000   call qword [reloc.__libc_start_main]    ; [0x20afe0:8]=0
0x0000295a      f4             hlt
0x0000295b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002960      488d3d398720.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x00002967      55             push rbp
0x00002968      488d05318720.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x0000296f      4839f8         cmp rax, rdi
0x00002972      4889e5         mov rbp, rsp
0x00002975      7419           je 0x2990
0x00002977      488b055a8620.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20afd8:8]=0
0x0000297e      4885c0         test rax, rax
0x00002981      740d           je 0x2990
0x00002983      5d             pop rbp
0x00002984      ffe0           jmp rax
0x00002986      662e0f1f8400.  nop word cs:[rax + rax]
0x00002990      5d             pop rbp
0x00002991      c3             ret
0x00002992      0f1f4000       nop dword [rax]
0x00002996      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000029a0      488d3df98620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x000029a7      488d35f28620.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x000029ae      55             push rbp
0x000029af      4829fe         sub rsi, rdi
0x000029b2      4889e5         mov rbp, rsp
0x000029b5      48c1fe03       sar rsi, 3
0x000029b9      4889f0         mov rax, rsi
0x000029bc      48c1e83f       shr rax, 0x3f
0x000029c0      4801c6         add rsi, rax
0x000029c3      48d1fe         sar rsi, 1
0x000029c6      7418           je 0x29e0
0x000029c8      488b05218620.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20aff0:8]=0
0x000029cf      4885c0         test rax, rax
0x000029d2      740c           je 0x29e0
0x000029d4      5d             pop rbp
0x000029d5      ffe0           jmp rax
0x000029d7      660f1f840000.  nop word [rax + rax]
0x000029e0      5d             pop rbp
0x000029e1      c3             ret
0x000029e2      0f1f4000       nop dword [rax]
0x000029e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000029f0      803df1862000.  cmp byte [obj.completed.7697], 0        ; [0x20b0e8:1]=0
0x000029f7      752f           jne 0x2a28
0x000029f9      48833df78520.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20aff8:8]=0
0x00002a01      55             push rbp
0x00002a02      4889e5         mov rbp, rsp
0x00002a05      740c           je 0x2a13
0x00002a07      488b3dfa8520.  mov rdi, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x00002a0e      e88defffff     call sym..plt.got
0x00002a13      e848ffffff     call sym.deregister_tm_clones
0x00002a18      c605c9862000.  mov byte [obj.completed.7697], 1        ; [0x20b0e8:1]=0
0x00002a1f      5d             pop rbp
0x00002a20      c3             ret
0x00002a21      0f1f80000000.  nop dword [rax]
0x00002a28      f3c3           ret
0x00002a2a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002a30      55             push rbp
0x00002a31      4889e5         mov rbp, rsp
0x00002a34      5d             pop rbp
0x00002a35      e966ffffff     jmp sym.register_tm_clones
0x00002a3a      660f1f440000   nop word [rax + rax]
;-- set_join_field:
0x00002a40      55             push rbp                                ; /src:924
0x00002a41      53             push rbx
0x00002a42      4883ec08       sub rsp, 8
0x00002a46      488b1f         mov rbx, qword [rdi]                    ; /src:925
0x00002a49      4883fbff       cmp rbx, 0xffffffffffffffff
0x00002a4d      7405           je 0x2a54
0x00002a4f      4839f3         cmp rbx, rsi
0x00002a52      750a           jne 0x2a5e
0x00002a54      488937         mov qword [rdi], rsi                    ; /src:932
0x00002a57      4883c408       add rsp, 8                              ; /src:933
0x00002a5b      5b             pop rbx
0x00002a5c      5d             pop rbp
0x00002a5d      c3             ret
0x00002a5e      4889f5         mov rbp, rsi
0x00002a61      488d35c04800.  lea rsi, str.incompatible_join_fields__lu___lu ; /src:929 ; 0x7328 ; "incompatible join fields %lu, %lu"
0x00002a68      ba05000000     mov edx, 5
0x00002a6d      31ff           xor edi, edi
0x00002a6f      e87cecffff     call sym.imp.dcgettext
0x00002a74      488d4b01       lea rcx, [rbx + 1]                      ; /src:927
0x00002a78      4c8d4501       lea r8, [rbp + 1]                       ; /src:929
0x00002a7c      4889c2         mov rdx, rax
0x00002a7f      31f6           xor esi, esi
0x00002a81      bf01000000     mov edi, 1
0x00002a86      31c0           xor eax, eax
0x00002a88      e863eeffff     call sym.imp.error
0x00002a8d      0f1f00         nop dword [rax]
;-- string_to_join_field:
0x00002a90      53             push rbx                                ; /src:840
0x00002a91      4c8d05c05200.  lea r8, [0x00007d58]                    ; /src:845
0x00002a98      31f6           xor esi, esi
0x00002a9a      ba0a000000     mov edx, 0xa
0x00002a9f      4889fb         mov rbx, rdi                            ; /src:840
0x00002aa2      4883ec10       sub rsp, 0x10
0x00002aa6      4889e1         mov rcx, rsp                            ; /src:845
0x00002aa9      64488b042528.  mov rax, qword fs:[0x28]                ; /src:840
0x00002ab2      4889442408     mov qword [rsp + 8], rax
0x00002ab7      31c0           xor eax, eax
0x00002ab9      e8d23c0000     call sym.xstrtoul                       ; /src:845
0x00002abe      83f801         cmp eax, 1                              ; /src:846
0x00002ac1      742d           je 0x2af0
0x00002ac3      85c0           test eax, eax                           ; /src:848
0x00002ac5      7532           jne 0x2af9
0x00002ac7      488b0424       mov rax, qword [rsp]
0x00002acb      4885c0         test rax, rax
0x00002ace      7429           je 0x2af9
0x00002ad0      4883e801       sub rax, 1
0x00002ad4      488b542408     mov rdx, qword [rsp + 8]                ; /src:854
0x00002ad9      644833142528.  xor rdx, qword fs:[0x28]
0x00002ae2      7547           jne 0x2b2b
0x00002ae4      4883c410       add rsp, 0x10
0x00002ae8      5b             pop rbx
0x00002ae9      c3             ret
0x00002aea      660f1f440000   nop word [rax + rax]
0x00002af0      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00002af7      ebdb           jmp 0x2ad4                              ; /src:853
0x00002af9      4889df         mov rdi, rbx                            ; /src:849
0x00002afc      e84f320000     call sym.quote
0x00002b01      488d35345200.  lea rsi, str.invalid_field_number:__s   ; 0x7d3c ; "invalid field number: %s"
0x00002b08      4889c3         mov rbx, rax
0x00002b0b      ba05000000     mov edx, 5
0x00002b10      31ff           xor edi, edi
0x00002b12      e8d9ebffff     call sym.imp.dcgettext
0x00002b17      4889d9         mov rcx, rbx
0x00002b1a      4889c2         mov rdx, rax
0x00002b1d      31f6           xor esi, esi
0x00002b1f      bf01000000     mov edi, 1
0x00002b24      31c0           xor eax, eax
0x00002b26      e8c5edffff     call sym.imp.error
0x00002b2b      e8f0ebffff     call sym.imp.__stack_chk_fail           ; /src:854
;-- add_field_list:
0x00002b30      4154           push r12                                ; /src:901
0x00002b32      55             push rbp
0x00002b33      4889fd         mov rbp, rdi
0x00002b36      53             push rbx
0x00002b37      eb60           jmp 0x2b99
0x00002b39      0f1f80000000.  nop dword [rax]
0x00002b40      0f8c8f000000   jl 0x2bd5                               ; /src:864
0x00002b46      3c32           cmp al, 0x32
0x00002b48      0f8f87000000   jg 0x2bd5
0x00002b4e      807d012e       cmp byte [rbp + 1], 0x2e                ; /src:878
0x00002b52      0f85e1000000   jne 0x2c39
0x00002b58      488d7d02       lea rdi, [rbp + 2]                      ; /src:881
0x00002b5c      8d58d0         lea ebx, [rax - 0x30]                   ; /src:880
0x00002b5f      e82cffffff     call sym.string_to_join_field           ; /src:881
0x00002b64      4889c5         mov rbp, rax
0x00002b67      bf18000000     mov edi, 0x18                           ; /src:822
0x00002b6c      e82f380000     call sym.xmalloc
0x00002b71      488b15b08420.  mov rdx, qword [obj.outlist_end]        ; /src:828 ; [0x20b028:8]=0x20b160 obj.outlist_head ; "`\xb1 "
0x00002b78      4d85e4         test r12, r12
0x00002b7b      8918           mov dword [rax], ebx
0x00002b7d      48896808       mov qword [rax + 8], rbp
0x00002b81      48c740100000.  mov qword [rax + 0x10], 0
0x00002b89      488905988420.  mov qword [obj.outlist_end], rax        ; [0x20b028:8]=0x20b160 obj.outlist_head ; "`\xb1 "
0x00002b90      48894210       mov qword [rdx + 0x10], rax
0x00002b94      743a           je 0x2bd0                               ; /src:736
0x00002b96      4c89e5         mov rbp, r12
0x00002b99      488d35b55100.  lea rsi, [0x00007d55]                   ; ", \t"
0x00002ba0      4889ef         mov rdi, rbp
0x00002ba3      4531e4         xor r12d, r12d
0x00002ba6      e8d5ecffff     call sym.imp.strpbrk
0x00002bab      4885c0         test rax, rax
0x00002bae      7407           je 0x2bb7
0x00002bb0      4c8d6001       lea r12, [rax + 1]
0x00002bb4      c60000         mov byte [rax], 0
0x00002bb7      0fbe4500       movsx eax, byte [rbp]
0x00002bbb      3c30           cmp al, 0x30
0x00002bbd      7581           jne 0x2b40
0x00002bbf      807d0100       cmp byte [rbp + 1], 0
0x00002bc3      7542           jne 0x2c07
0x00002bc5      31ed           xor ebp, ebp
0x00002bc7      31db           xor ebx, ebx
0x00002bc9      eb9c           jmp 0x2b67
0x00002bcb      0f1f440000     nop dword [rax + rax]
0x00002bd0      5b             pop rbx
0x00002bd1      5d             pop rbp
0x00002bd2      415c           pop r12
0x00002bd4      c3             ret
0x00002bd5      4889ef         mov rdi, rbp
0x00002bd8      e873310000     call sym.quote
0x00002bdd      488d356c4700.  lea rsi, str.invalid_file_number_in_field_spec:__s ; 0x7350 ; "invalid file number in field spec: %s"
0x00002be4      4889c3         mov rbx, rax                            ; /src:742
0x00002be7      ba05000000     mov edx, 5
0x00002bec      31ff           xor edi, edi
0x00002bee      e8fdeaffff     call sym.imp.dcgettext
0x00002bf3      4889d9         mov rcx, rbx
0x00002bf6      4889c2         mov rdx, rax
0x00002bf9      31f6           xor esi, esi
0x00002bfb      bf01000000     mov edi, 1
0x00002c00      31c0           xor eax, eax
0x00002c02      e8e9ecffff     call sym.imp.error
0x00002c07      4889ef         mov rdi, rbp
0x00002c0a      e841310000     call sym.quote
0x00002c0f      488d35435100.  lea rsi, str.invalid_field_specifier:__s ; 0x7d59 ; "invalid field specifier: %s"
0x00002c16      4889c3         mov rbx, rax                            ; /src:751
0x00002c19      ba05000000     mov edx, 5
0x00002c1e      31ff           xor edi, edi
0x00002c20      e8cbeaffff     call sym.imp.dcgettext
0x00002c25      4889d9         mov rcx, rbx
0x00002c28      4889c2         mov rdx, rax
0x00002c2b      31f6           xor esi, esi
0x00002c2d      bf01000000     mov edi, 1
0x00002c32      31c0           xor eax, eax
0x00002c34      e8b7ecffff     call sym.imp.error
0x00002c39      4889ef         mov rdi, rbp
0x00002c3c      e80f310000     call sym.quote
0x00002c41      488d35115100.  lea rsi, str.invalid_field_specifier:__s ; 0x7d59 ; "invalid field specifier: %s"
0x00002c48      4889c3         mov rbx, rax
0x00002c4b      ba05000000     mov edx, 5
0x00002c50      31ff           xor edi, edi
0x00002c52      e899eaffff     call sym.imp.dcgettext
0x00002c57      4889d9         mov rcx, rbx
0x00002c5a      4889c2         mov rdx, rax                            ; /src:188
0x00002c5d      31f6           xor esi, esi
0x00002c5f      bf01000000     mov edi, 1
0x00002c64      31c0           xor eax, eax
0x00002c66      e885ecffff     call sym.imp.error
0x00002c6b      0f1f440000     nop dword [rax + rax]                   ; /src:189
;-- freeline.part.2:
0x00002c70      53             push rbx
0x00002c71      4889fb         mov rbx, rdi
0x00002c74      488b7f28       mov rdi, qword [rdi + 0x28]
0x00002c78      e8d3e9ffff     call sym.imp.free
0x00002c7d      488b7b10       mov rdi, qword [rbx + 0x10]             ; /src:354
0x00002c81      48c743280000.  mov qword [rbx + 0x28], 0
0x00002c89      e8c2e9ffff     call sym.imp.free
0x00002c8e      48c743100000.  mov qword [rbx + 0x10], 0
0x00002c96      5b             pop rbx
0x00002c97      c3             ret
0x00002c98      0f1f84000000.  nop dword [rax + rax]
;-- free_spareline:
0x00002ca0      53             push rbx
0x00002ca1      488b1df88420.  mov rbx, qword [obj.spareline]          ; [0x20b1a0:8]=0
0x00002ca8      4885db         test rbx, rbx
0x00002cab      7410           je 0x2cbd
0x00002cad      4889df         mov rdi, rbx
0x00002cb0      e8bbffffff     call sym.freeline.part.2
0x00002cb5      4889df         mov rdi, rbx
0x00002cb8      e893e9ffff     call sym.imp.free
0x00002cbd      488b1de48420.  mov rbx, qword [0x0020b1a8]             ; /src:363 ; [0x20b1a8:8]=0
0x00002cc4      4885db         test rbx, rbx
0x00002cc7      7417           je 0x2ce0
0x00002cc9      4889df         mov rdi, rbx
0x00002ccc      e89fffffff     call sym.freeline.part.2
0x00002cd1      4889df         mov rdi, rbx
0x00002cd4      5b             pop rbx                                 ; /src:407
0x00002cd5      e976e9ffff     jmp sym.imp.free
0x00002cda      660f1f440000   nop word [rax + rax]
0x00002ce0      5b             pop rbx
0x00002ce1      c3             ret
0x00002ce2      0f1f4000       nop dword [rax]
0x00002ce6      662e0f1f8400.  nop word cs:[rax + rax]
;-- delseq.isra.3:
0x00002cf0      4154           push r12
0x00002cf2      55             push rbp
0x00002cf3      4889f5         mov rbp, rsi
0x00002cf6      53             push rbx
0x00002cf7      48833f00       cmp qword [rdi], 0
0x00002cfb      7434           je 0x2d31
0x00002cfd      4989fc         mov r12, rdi
0x00002d00      31db           xor ebx, ebx
0x00002d02      660f1f440000   nop word [rax + rax]
0x00002d08      488b4500       mov rax, qword [rbp]
0x00002d0c      488b3cd8       mov rdi, qword [rax + rbx*8]
0x00002d10      4885ff         test rdi, rdi
0x00002d13      740d           je 0x2d22                               ; /src:413
0x00002d15      e856ffffff     call sym.freeline.part.2
0x00002d1a      488b4500       mov rax, qword [rbp]
0x00002d1e      488b3cd8       mov rdi, qword [rax + rbx*8]
0x00002d22      e829e9ffff     call sym.imp.free
0x00002d27      4883c301       add rbx, 1
0x00002d2b      493b1c24       cmp rbx, qword [r12]
0x00002d2f      72d7           jb 0x2d08                               ; /src:220
0x00002d31      5b             pop rbx
0x00002d32      488b7d00       mov rdi, qword [rbp]                    ; /src:212
0x00002d36      5d             pop rbp                                 ; /src:220
0x00002d37      415c           pop r12
0x00002d39      e912e9ffff     jmp sym.imp.free
0x00002d3e      6690           nop
;-- keycmp.isra.4:
0x00002d40      55             push rbp
0x00002d41      53             push rbx
0x00002d42      4883ec08       sub rsp, 8
0x00002d46      4939f8         cmp r8, rdi                             ; /src:222
0x00002d49      737d           jae 0x2dc8                              ; /src:223
0x00002d4b      49c1e004       shl r8, 4
0x00002d4f      4c0306         add r8, qword [rsi]                     ; /src:233
0x00002d52      4939d1         cmp r9, rdx
0x00002d55      498b6808       mov rbp, qword [r8 + 8]
0x00002d59      0f83a1000000   jae 0x2e00
0x00002d5f      49c1e104       shl r9, 4                               ; /src:211
0x00002d63      4c0309         add r9, qword [rcx]
0x00002d66      4885ed         test rbp, rbp
0x00002d69      498b31         mov rsi, qword [r9]
0x00002d6c      498b5908       mov rbx, qword [r9 + 8]
0x00002d70      7466           je 0x2dd8
0x00002d72      4885db         test rbx, rbx
0x00002d75      0f84c8000000   je 0x2e43                               ; /src:246
0x00002d7b      803d7f832000.  cmp byte [obj.ignore_case], 0           ; [0x20b101:1]=0
0x00002d82      498b38         mov rdi, qword [r8]
0x00002d85      0f8585000000   jne 0x2e10
0x00002d8b      803d0c842000.  cmp byte [obj.hard_LC_COLLATE], 0       ; [0x20b19e:1]=0
0x00002d92      0f8590000000   jne 0x2e28
0x00002d98      4839dd         cmp rbp, rbx                            ; /src:251
0x00002d9b      4889da         mov rdx, rbx                            ; /src:252
0x00002d9e      480f46d5       cmovbe rdx, rbp
0x00002da2      e839eaffff     call sym.imp.memcmp
0x00002da7      85c0           test eax, eax
0x00002da9      7547           jne 0x2df2
0x00002dab      4839dd         cmp rbp, rbx
0x00002dae      0f8288000000   jb 0x2e3c
0x00002db4      0f95c0         setne al
0x00002db7      4883c408       add rsp, 8
0x00002dbb      0fb6c0         movzx eax, al
0x00002dbe      5b             pop rbx
0x00002dbf      5d             pop rbp
0x00002dc0      c3             ret
0x00002dc1      0f1f80000000.  nop dword [rax]                         ; /src:232
0x00002dc8      4939d1         cmp r9, rdx
0x00002dcb      7323           jae 0x2df0
0x00002dcd      49c1e104       shl r9, 4
0x00002dd1      4c0309         add r9, qword [rcx]
0x00002dd4      498b5908       mov rbx, qword [r9 + 8]
0x00002dd8      31c0           xor eax, eax
0x00002dda      4885db         test rbx, rbx
0x00002ddd      0f95c0         setne al                                ; /src:231
0x00002de0      4883c408       add rsp, 8
0x00002de4      f7d8           neg eax
0x00002de6      5b             pop rbx
0x00002de7      5d             pop rbp
0x00002de8      c3             ret
0x00002de9      0f1f80000000.  nop dword [rax]
0x00002df0      31c0           xor eax, eax
0x00002df2      4883c408       add rsp, 8
0x00002df6      5b             pop rbx
0x00002df7      5d             pop rbp
0x00002df8      c3             ret
0x00002df9      0f1f80000000.  nop dword [rax]
0x00002e00      31c0           xor eax, eax
0x00002e02      4885ed         test rbp, rbp
0x00002e05      0f95c0         setne al                                ; /src:252
0x00002e08      4883c408       add rsp, 8
0x00002e0c      5b             pop rbx
0x00002e0d      5d             pop rbp
0x00002e0e      c3             ret
0x00002e0f      90             nop
0x00002e10      4839dd         cmp rbp, rbx                            ; /src:245
0x00002e13      4889da         mov rdx, rbx                            ; /src:252
0x00002e16      480f46d5       cmovbe rdx, rbp
0x00002e1a      e8d1110000     call sym.memcasecmp
0x00002e1f      eb86           jmp 0x2da7
0x00002e21      0f1f80000000.  nop dword [rax]
0x00002e28      4883c408       add rsp, 8
0x00002e2c      4889d9         mov rcx, rbx
0x00002e2f      4889f2         mov rdx, rsi
0x00002e32      5b             pop rbx                                 ; /src:426
0x00002e33      4889ee         mov rsi, rbp
0x00002e36      5d             pop rbp
0x00002e37      e9b4380000     jmp sym.xmemcoll
0x00002e3c      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00002e41      ebaf           jmp 0x2df2
0x00002e43      b801000000     mov eax, 1
0x00002e48      eba8           jmp 0x2df2
0x00002e4a      660f1f440000   nop word [rax + rax]
;-- prfield.isra.5:
0x00002e50      4839f7         cmp rdi, rsi
0x00002e53      732b           jae 0x2e80
0x00002e55      48c1e704       shl rdi, 4
0x00002e59      48033a         add rdi, qword [rdx]
0x00002e5c      488b5708       mov rdx, qword [rdi + 8]
0x00002e60      4885d2         test rdx, rdx
0x00002e63      741b           je 0x2e80
0x00002e65      488b0d3c8220.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002e6c      488b3f         mov rdi, qword [rdi]
0x00002e6f      be01000000     mov esi, 1
0x00002e74      e927eaffff     jmp sym.imp.fwrite_unlocked
0x00002e79      0f1f80000000.  nop dword [rax]
0x00002e80      488b3d098320.  mov rdi, qword [obj.empty_filler]       ; [0x20b190:8]=0
0x00002e87      4885ff         test rdi, rdi
0x00002e8a      7414           je 0x2ea0
0x00002e8c      488b35158220.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002e93      e958e9ffff     jmp sym.imp.fputs_unlocked
0x00002e98      0f1f84000000.  nop dword [rax + rax]
0x00002ea0      f3c3           ret
0x00002ea2      0f1f4000       nop dword [rax]
0x00002ea6      662e0f1f8400.  nop word cs:[rax + rax]
;-- prfields:
0x00002eb0      4157           push r15
0x00002eb2      4156           push r14
0x00002eb4      4989ff         mov r15, rdi
0x00002eb7      4155           push r13
0x00002eb9      4154           push r12
0x00002ebb      4989d4         mov r12, rdx
0x00002ebe      55             push rbp
0x00002ebf      53             push rbx
0x00002ec0      4883ec18       sub rsp, 0x18
0x00002ec4      803dbd822000.  cmp byte [obj.autoformat], 0            ; [0x20b188:1]=0
0x00002ecb      4889742408     mov qword [rsp + 8], rsi
0x00002ed0      7504           jne 0x2ed6
0x00002ed2      4c8b6718       mov r12, qword [rdi + 0x18]
0x00002ed6      448b35378120.  mov r14d, dword [obj.tab]               ; [0x20b014:4]=-1
0x00002edd      b820000000     mov eax, 0x20                           ; "@"
0x00002ee2      4585f6         test r14d, r14d
0x00002ee5      440f48f0       cmovs r14d, eax
0x00002ee9      488b442408     mov rax, qword [rsp + 8]
0x00002eee      4489f5         mov ebp, r14d
0x00002ef1      4939c4         cmp r12, rax
0x00002ef4      4989c5         mov r13, rax
0x00002ef7      4d0f46ec       cmovbe r13, r12
0x00002efb      4d85ed         test r13, r13
0x00002efe      7449           je 0x2f49
0x00002f00      498d4728       lea rax, [r15 + 0x28]
0x00002f04      31db           xor ebx, ebx
0x00002f06      450fb6f6       movzx r14d, r14b
0x00002f0a      48890424       mov qword [rsp], rax
0x00002f0e      6690           nop
0x00002f10      488b3d918120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002f17      488b4728       mov rax, qword [rdi + 0x28]
0x00002f1b      483b4730       cmp rax, qword [rdi + 0x30]
0x00002f1f      0f8383000000   jae 0x2fa8
0x00002f25      488d5001       lea rdx, [rax + 1]
0x00002f29      48895728       mov qword [rdi + 0x28], rdx
0x00002f2d      408828         mov byte [rax], bpl
0x00002f30      498b7718       mov rsi, qword [r15 + 0x18]
0x00002f34      488b1424       mov rdx, qword [rsp]
0x00002f38      4889df         mov rdi, rbx                            ; .//ib:-21
0x00002f3b      4883c301       add rbx, 1
0x00002f3f      e80cffffff     call sym.prfield.isra.5
0x00002f44      4c39eb         cmp rbx, r13
0x00002f47      75c7           jne 0x2f10
0x00002f49      488b5c2408     mov rbx, qword [rsp + 8]
0x00002f4e      4883c301       add rbx, 1
0x00002f52      4939dc         cmp r12, rbx
0x00002f55      763d           jbe 0x2f94
0x00002f57      4d8d6f28       lea r13, [r15 + 0x28]
0x00002f5b      440fb6f5       movzx r14d, bpl
0x00002f5f      90             nop
0x00002f60      488b3d418120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002f67      488b4728       mov rax, qword [rdi + 0x28]             ; /src:453
0x00002f6b      483b4730       cmp rax, qword [rdi + 0x30]
0x00002f6f      7347           jae 0x2fb8
0x00002f71      488d5001       lea rdx, [rax + 1]                      ; /src:455
0x00002f75      48895728       mov qword [rdi + 0x28], rdx
0x00002f79      408828         mov byte [rax], bpl
0x00002f7c      498b7718       mov rsi, qword [r15 + 0x18]
0x00002f80      4889df         mov rdi, rbx
0x00002f83      4c89ea         mov rdx, r13
0x00002f86      4883c301       add rbx, 1
0x00002f8a      e8c1feffff     call sym.prfield.isra.5
0x00002f8f      4939dc         cmp r12, rbx
0x00002f92      75cc           jne 0x2f60
0x00002f94      4883c418       add rsp, 0x18
0x00002f98      5b             pop rbx
0x00002f99      5d             pop rbp
0x00002f9a      415c           pop r12
0x00002f9c      415d           pop r13
0x00002f9e      415e           pop r14
0x00002fa0      415f           pop r15
0x00002fa2      c3             ret
0x00002fa3      0f1f440000     nop dword [rax + rax]
0x00002fa8      4489f6         mov esi, r14d
0x00002fab      e8b0e7ffff     call sym.imp.__overflow
0x00002fb0      e97bffffff     jmp 0x2f30
0x00002fb5      0f1f00         nop dword [rax]
0x00002fb8      4489f6         mov esi, r14d                           ; /src:463
0x00002fbb      e8a0e7ffff     call sym.imp.__overflow
0x00002fc0      ebba           jmp 0x2f7c
0x00002fc2      0f1f4000       nop dword [rax]
0x00002fc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- prjoin:
0x00002fd0      4156           push r14
0x00002fd2      4155           push r13
0x00002fd4      b820000000     mov eax, 0x20                           ; "@"
0x00002fd9      4154           push r12
0x00002fdb      448b25328020.  mov r12d, dword [obj.tab]               ; [0x20b014:4]=-1
0x00002fe2      4989f5         mov r13, rsi
0x00002fe5      55             push rbp
0x00002fe6      53             push rbx
0x00002fe7      4889fd         mov rbp, rdi                            ; /src:477
0x00002fea      488b1d7f8120.  mov rbx, qword [0x0020b170]             ; [0x20b170:8]=0
0x00002ff1      4c8d35288120.  lea r14, obj.uni_blank                  ; 0x20b120
0x00002ff8      4585e4         test r12d, r12d
0x00002ffb      440f48e0       cmovs r12d, eax
0x00002fff      4885db         test rbx, rbx
0x00003002      746c           je 0x3070
0x00003004      8b03           mov eax, dword [rbx]
0x00003006      85c0           test eax, eax
0x00003008      7553           jne 0x305d
0x0000300a      4c39f5         cmp rbp, r14
0x0000300d      0f84dd000000   je 0x30f0
0x00003013      488b3d068020.  mov rdi, qword [obj.join_field_1]       ; [0x20b020:8]=-1
0x0000301a      4889e8         mov rax, rbp
0x0000301d      488b7018       mov rsi, qword [rax + 0x18]
0x00003021      488d5028       lea rdx, [rax + 0x28]
0x00003025      e826feffff     call sym.prfield.isra.5
0x0000302a      488b5b10       mov rbx, qword [rbx + 0x10]
0x0000302e      4885db         test rbx, rbx
0x00003031      0f848c000000   je 0x30c3
0x00003037      488b3d6a8020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000303e      488b4728       mov rax, qword [rdi + 0x28]
0x00003042      483b4730       cmp rax, qword [rdi + 0x30]
0x00003046      0f83b4000000   jae 0x3100
0x0000304c      488d5001       lea rdx, [rax + 1]
0x00003050      48895728       mov qword [rdi + 0x28], rdx
0x00003054      448820         mov byte [rax], r12b
0x00003057      8b03           mov eax, dword [rbx]
0x00003059      85c0           test eax, eax
0x0000305b      74ad           je 0x300a
0x0000305d      83f801         cmp eax, 1                              ; /src:511
0x00003060      4889e8         mov rax, rbp
0x00003063      488b7b08       mov rdi, qword [rbx + 8]
0x00003067      490f45c5       cmovne rax, r13                         ; /src:515
0x0000306b      ebb0           jmp 0x301d
0x0000306d      0f1f00         nop dword [rax]
0x00003070      488d05a98020.  lea rax, obj.uni_blank                  ; 0x20b120
0x00003077      4839c7         cmp rdi, rax
0x0000307a      0f84a0000000   je 0x3120
0x00003080      488b3d997f20.  mov rdi, qword [obj.join_field_1]       ; [0x20b020:8]=-1
0x00003087      4889e8         mov rax, rbp
0x0000308a      488b7018       mov rsi, qword [rax + 0x18]             ; /src:519
0x0000308e      488d5028       lea rdx, [rax + 0x28]
0x00003092      e8b9fdffff     call sym.prfield.isra.5
0x00003097      488b15e28020.  mov rdx, qword [obj.autocount_1]        ; [0x20b180:8]=0
0x0000309e      488b357b7f20.  mov rsi, qword [obj.join_field_1]       ; [0x20b020:8]=-1
0x000030a5      4889ef         mov rdi, rbp
0x000030a8      e803feffff     call sym.prfields
0x000030ad      488b15c48020.  mov rdx, qword [obj.autocount_2]        ; [0x20b178:8]=0
0x000030b4      488b355d7f20.  mov rsi, qword [obj.join_field_2]       ; [0x20b018:8]=-1
0x000030bb      4c89ef         mov rdi, r13
0x000030be      e8edfdffff     call sym.prfields
0x000030c3      488b3dde7f20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000030ca      0fb6153f7f20.  movzx edx, byte [obj.eolchar]           ; [0x20b010:1]=10 ; "\n"
0x000030d1      488b4728       mov rax, qword [rdi + 0x28]
0x000030d5      483b4730       cmp rax, qword [rdi + 0x30]
0x000030d9      7335           jae 0x3110
0x000030db      488d4801       lea rcx, [rax + 1]
0x000030df      48894f28       mov qword [rdi + 0x28], rcx
0x000030e3      8810           mov byte [rax], dl
0x000030e5      5b             pop rbx
0x000030e6      5d             pop rbp
0x000030e7      415c           pop r12
0x000030e9      415d           pop r13
0x000030eb      415e           pop r14
0x000030ed      c3             ret                                     ; /src:523
0x000030ee      6690           nop
0x000030f0      488b3d217f20.  mov rdi, qword [obj.join_field_2]       ; [0x20b018:8]=-1
0x000030f7      4c89e8         mov rax, r13
0x000030fa      e91effffff     jmp 0x301d
0x000030ff      90             nop
0x00003100      410fb6f4       movzx esi, r12b
0x00003104      e857e6ffff     call sym.imp.__overflow                 ; /src:505
0x00003109      e9f6feffff     jmp 0x3004
0x0000310e      6690           nop
0x00003110      5b             pop rbx
0x00003111      5d             pop rbp
0x00003112      415c           pop r12
0x00003114      415d           pop r13                                 ; /src:131
0x00003116      415e           pop r14
0x00003118      0fb6f2         movzx esi, dl                           ; /src:130
0x0000311b      e940e6ffff     jmp sym.imp.__overflow                  ; /src:131
0x00003120      488b3df17e20.  mov rdi, qword [obj.join_field_2]       ; [0x20b018:8]=-1
0x00003127      4889f0         mov rax, rsi
0x0000312a      e95bffffff     jmp 0x308a
0x0000312f      90             nop
;-- extract_field:
0x00003130      4154           push r12
0x00003132      4989f4         mov r12, rsi                            ; /src:135
0x00003135      55             push rbp
0x00003136      53             push rbx
0x00003137      488b4718       mov rax, qword [rdi + 0x18]
0x0000313b      4889fb         mov rbx, rdi
0x0000313e      488b7720       mov rsi, qword [rdi + 0x20]
0x00003142      4889d5         mov rbp, rdx
0x00003145      488b7f28       mov rdi, qword [rdi + 0x28]
0x00003149      4839f0         cmp rax, rsi
0x0000314c      7322           jae 0x3170
0x0000314e      4889c2         mov rdx, rax
0x00003151      4883c001       add rax, 1
0x00003155      48c1e204       shl rdx, 4
0x00003159      4801d7         add rdi, rdx
0x0000315c      4c8927         mov qword [rdi], r12
0x0000315f      48896f08       mov qword [rdi + 8], rbp
0x00003163      48894318       mov qword [rbx + 0x18], rax
0x00003167      5b             pop rbx
0x00003168      5d             pop rbp
0x00003169      415c           pop r12
0x0000316b      c3             ret
0x0000316c      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/src/in.c:78
0x00003170      4885ff         test rdi, rdi                           ; ../coreutils-8.31/src/in.c:79
0x00003173      743b           je 0x31b0
0x00003175      48b854555555.  movabs rax, 0x555555555555554
0x0000317f      4839c6         cmp rsi, rax
0x00003182      7751           ja 0x31d5
0x00003184      4889f0         mov rax, rsi
0x00003187      48d1e8         shr rax, 1
0x0000318a      488d740601     lea rsi, [rsi + rax + 1]
0x0000318f      48897320       mov qword [rbx + 0x20], rsi
0x00003193      48c1e604       shl rsi, 4
0x00003197      e864320000     call sym.xrealloc
0x0000319c      4889c7         mov rdi, rax
0x0000319f      48894328       mov qword [rbx + 0x28], rax
0x000031a3      488b4318       mov rax, qword [rbx + 0x18]
0x000031a7      eba5           jmp 0x314e
0x000031a9      0f1f80000000.  nop dword [rax]
0x000031b0      4885f6         test rsi, rsi
0x000031b3      b808000000     mov eax, 8
0x000031b8      ba10000000     mov edx, 0x10
0x000031bd      480f44f0       cmove rsi, rax
0x000031c1      4889d0         mov rax, rdx
0x000031c4      31c9           xor ecx, ecx
0x000031c6      48f7e6         mul rsi
0x000031c9      700f           jo 0x31da
0x000031cb      4885c0         test rax, rax
0x000031ce      7805           js 0x31d5
0x000031d0      4885c9         test rcx, rcx
0x000031d3      74ba           je 0x318f
0x000031d5      e816340000     call sym.xalloc_die
0x000031da      b901000000     mov ecx, 1
0x000031df      ebea           jmp 0x31cb                              ; /src:320
0x000031e1      0f1f440000     nop dword [rax + rax]                   ; /src:323
0x000031e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_line:
0x000031f0      4157           push r15
0x000031f2      4156           push r14
0x000031f4      4989fe         mov r14, rdi
0x000031f7      4155           push r13
0x000031f9      4154           push r12
0x000031fb      4c8d25ce7f20.  lea r12, obj.prevline                   ; 0x20b1d0
0x00003202      55             push rbp
0x00003203      53             push rbx
0x00003204      8d5aff         lea ebx, [rdx - 1]
0x00003207      4889f5         mov rbp, rsi
0x0000320a      4863db         movsxd rbx, ebx
0x0000320d      4883ec18       sub rsp, 0x18
0x00003211      4c8b2e         mov r13, qword [rsi]
0x00003214      4d392cdc       cmp qword [r12 + rbx*8], r13
0x00003218      8954240c       mov dword [rsp + 0xc], edx
0x0000321c      0f84de020000   je 0x3500
0x00003222      4d85ed         test r13, r13
0x00003225      0f84f3020000   je 0x351e
0x0000322b      49c745180000.  mov qword [r13 + 0x18], 0               ; /src:341
0x00003233      0fbe15d67d20.  movsx edx, byte [obj.eolchar]           ; [0x20b010:1]=10 ; "\n"
0x0000323a      4c89f6         mov rsi, r14
0x0000323d      4c89ef         mov rdi, r13
0x00003240      e87b0c0000     call sym.readlinebuffer_delim
0x00003245      4885c0         test rax, rax
0x00003248      0f8482020000   je 0x34d0
0x0000324e      488d056b7f20.  lea rax, obj.line_no                    ; 0x20b1c0
0x00003255      4d8b7510       mov r14, qword [r13 + 0x10]
0x00003259      488304d801     add qword [rax + rbx*8], 1
0x0000325e      498b4508       mov rax, qword [r13 + 8]
0x00003262      4c8d78ff       lea r15, [rax - 1]
0x00003266      4b8d2c3e       lea rbp, [r14 + r15]
0x0000326a      4939ee         cmp r14, rbp
0x0000326d      0f84de000000   je 0x3351
0x00003273      8b359b7d2000   mov esi, dword [obj.tab]                ; stdio.h:-94 ; [0x20b014:4]=-1
0x00003279      85f6           test esi, esi
0x0000327b      7809           js 0x3286
0x0000327d      83fe0a         cmp esi, 0xa
0x00003280      0f851d020000   jne 0x34a3
0x00003286      85f6           test esi, esi
0x00003288      0f89b5000000   jns 0x3343
0x0000328e      e8fde6ffff     call sym.imp.__ctype_b_loc
0x00003293      488b10         mov rdx, qword [rax]
0x00003296      4989c7         mov r15, rax
0x00003299      0f1f80000000.  nop dword [rax]                         ; /src:39
0x000032a0      410fb63e       movzx edi, byte [r14]
0x000032a4      498d4601       lea rax, [r14 + 1]
0x000032a8      f6047a01       test byte [rdx + rdi*2], 1
0x000032ac      0f85ae020000   jne 0x3560
0x000032b2      4080ff0a       cmp dil, 0xa
0x000032b6      0f84a4020000   je 0x3560
0x000032bc      4839c5         cmp rbp, rax
0x000032bf      0f84b3020000   je 0x3578
0x000032c5      410fb67e01     movzx edi, byte [r14 + 1]
0x000032ca      f6047a01       test byte [rdx + rdi*2], 1
0x000032ce      4889fe         mov rsi, rdi
0x000032d1      7525           jne 0x32f8
0x000032d3      4080fe0a       cmp sil, 0xa
0x000032d7      741f           je 0x32f8
0x000032d9      4883c001       add rax, 1
0x000032dd      4839c5         cmp rbp, rax
0x000032e0      0f8492020000   je 0x3578
0x000032e6      0fb638         movzx edi, byte [rax]
0x000032e9      f6047a01       test byte [rdx + rdi*2], 1              ; stdio.h:-94
0x000032ed      4889fe         mov rsi, rdi
0x000032f0      74e1           je 0x32d3                               ; /src:44
0x000032f2      660f1f440000   nop word [rax + rax]
0x000032f8      4889c2         mov rdx, rax
0x000032fb      4c89f6         mov rsi, r14
0x000032fe      4c89ef         mov rdi, r13
0x00003301      4c29f2         sub rdx, r14
0x00003304      48890424       mov qword [rsp], rax
0x00003308      e823feffff     call sym.extract_field
0x0000330d      488b0424       mov rax, qword [rsp]
0x00003311      4c8d7001       lea r14, [rax + 1]
0x00003315      4c39f5         cmp rbp, r14
0x00003318      7426           je 0x3340
0x0000331a      0fb67001       movzx esi, byte [rax + 1]
0x0000331e      498b17         mov rdx, qword [r15]
0x00003321      f6047201       test byte [rdx + rsi*2], 1
0x00003325      4889f0         mov rax, rsi
0x00003328      0f8512020000   jne 0x3540
0x0000332e      3c0a           cmp al, 0xa
0x00003330      0f840a020000   je 0x3540
0x00003336      498d4601       lea rax, [r14 + 1]
0x0000333a      eb80           jmp 0x32bc
0x0000333c      0f1f4000       nop dword [rax]
0x00003340      4531ff         xor r15d, r15d
0x00003343      4c89fa         mov rdx, r15
0x00003346      4c89f6         mov rsi, r14
0x00003349      4c89ef         mov rdi, r13
0x0000334c      e8dffdffff     call sym.extract_field
0x00003351      498b04dc       mov rax, qword [r12 + rbx*8]
0x00003355      4885c0         test rax, rax
0x00003358      0f8402010000   je 0x3460
0x0000335e      8b15ec7d2000   mov edx, dword [obj.check_input_order]  ; [0x20b150:4]=0
0x00003364      83fa02         cmp edx, 2
0x00003367      0f84f3000000   je 0x3460
0x0000336d      83fa01         cmp edx, 1
0x00003370      740d           je 0x337f
0x00003372      803d217e2000.  cmp byte [obj.seen_unpairable], 0       ; [0x20b19a:1]=0
0x00003379      0f84e1000000   je 0x3460
0x0000337f      488d2d127e20.  lea rbp, obj.issued_disorder_warning    ; 0x20b198
0x00003386      807c1d0000     cmp byte [rbp + rbx], 0
0x0000338b      0f85cf000000   jne 0x3460
0x00003391      837c240c01     cmp dword [rsp + 0xc], 1
0x00003396      4c8b05837c20.  mov r8, qword [obj.join_field_1]        ; [0x20b020:8]=-1
0x0000339d      498d4d28       lea rcx, [r13 + 0x28]
0x000033a1      4c0f45056f7c.  cmovne r8, qword [obj.join_field_2]
0x000033a9      498b5518       mov rdx, qword [r13 + 0x18]
0x000033ad      488d7028       lea rsi, [rax + 0x28]
0x000033b1      488b7818       mov rdi, qword [rax + 0x18]
0x000033b5      4d89c1         mov r9, r8
0x000033b8      e883f9ffff     call sym.keycmp.isra.4
0x000033bd      85c0           test eax, eax
0x000033bf      0f8e9b000000   jle 0x3460
0x000033c5      498b4508       mov rax, qword [r13 + 8]
0x000033c9      4531c9         xor r9d, r9d                            ; /src:161
0x000033cc      4d8b7510       mov r14, qword [r13 + 0x10]
0x000033d0      4885c0         test rax, rax
0x000033d3      7422           je 0x33f7
0x000033d5      41807c06ff0a   cmp byte [r14 + rax - 1], 0xa
0x000033db      488d50ff       lea rdx, [rax - 1]
0x000033df      0f84a9010000   je 0x358e
0x000033e5      483dffffff7f   cmp rax, 0x7fffffff
0x000033eb      baffffff7f     mov edx, 0x7fffffff
0x000033f0      480f46d0       cmovbe rdx, rax
0x000033f4      4989d1         mov r9, rdx                             ; /src:159
0x000033f7      488d05c27d20.  lea rax, obj.line_no                    ; 0x20b1c0
0x000033fe      488d357b4900.  lea rsi, str.s:_lu:_is_not_sorted:__._s ; 0x7d80 ; "%s:%lu: is not sorted: %.*s"
0x00003405      31ff           xor edi, edi
0x00003407      ba05000000     mov edx, 5
0x0000340c      44894c240c     mov dword [rsp + 0xc], r9d
0x00003411      4c8b3cd8       mov r15, qword [rax + rbx*8]
0x00003415      488d05947d20.  lea rax, obj.g_names                    ; 0x20b1b0
0x0000341c      488b0cd8       mov rcx, qword [rax + rbx*8]
0x00003420      48890c24       mov qword [rsp], rcx                    ; /src:167
0x00003424      e8c7e2ffff     call sym.imp.dcgettext
0x00003429      31ff           xor edi, edi
0x0000342b      833d1e7d2000.  cmp dword [obj.check_input_order], 1    ; /src:220 ; [0x20b150:4]=0
0x00003432      4889c2         mov rdx, rax
0x00003435      4d89f8         mov r8, r15
0x00003438      400f94c7       sete dil
0x0000343c      4883ec08       sub rsp, 8
0x00003440      31c0           xor eax, eax
0x00003442      4156           push r14
0x00003444      448b4c241c     mov r9d, dword [rsp + 0x1c]
0x00003449      31f6           xor esi, esi
0x0000344b      488b4c2410     mov rcx, qword [rsp + 0x10]             ; /src:27
0x00003450      e89be4ffff     call sym.imp.error
0x00003455      c6441d0001     mov byte [rbp + rbx], 1
0x0000345a      58             pop rax
0x0000345b      5a             pop rdx
0x0000345c      0f1f4000       nop dword [rax]
0x00003460      4d892cdc       mov qword [r12 + rbx*8], r13            ; /src:26
0x00003464      b801000000     mov eax, 1
0x00003469      4883c418       add rsp, 0x18
0x0000346d      5b             pop rbx
0x0000346e      5d             pop rbp
0x0000346f      415c           pop r12
0x00003471      415d           pop r13
0x00003473      415e           pop r14
0x00003475      415f           pop r15
0x00003477      c3             ret
0x00003478      0f1f84000000.  nop dword [rax + rax]
0x00003480      4889c2         mov rdx, rax
0x00003483      4c89f6         mov rsi, r14
0x00003486      4c89ef         mov rdi, r13
0x00003489      4c29f2         sub rdx, r14
0x0000348c      48890424       mov qword [rsp], rax
0x00003490      e89bfcffff     call sym.extract_field
0x00003495      488b0424       mov rax, qword [rsp]
0x00003499      8b35757b2000   mov esi, dword [obj.tab]                ; [0x20b014:4]=-1
0x0000349f      4c8d7001       lea r14, [rax + 1]
0x000034a3      4989ef         mov r15, rbp
0x000034a6      4c89f7         mov rdi, r14
0x000034a9      4d29f7         sub r15, r14
0x000034ac      4c89fa         mov rdx, r15
0x000034af      e81ce3ffff     call sym.imp.memchr
0x000034b4      4885c0         test rax, rax
0x000034b7      75c7           jne 0x3480
0x000034b9      4c89fa         mov rdx, r15
0x000034bc      4c89f6         mov rsi, r14
0x000034bf      4c89ef         mov rdi, r13
0x000034c2      e869fcffff     call sym.extract_field
0x000034c7      e985feffff     jmp 0x3351
0x000034cc      0f1f4000       nop dword [rax]
0x000034d0      41f60620       test byte [r14], 0x20
0x000034d4      0f85cc000000   jne 0x35a6
0x000034da      31c0           xor eax, eax
0x000034dc      4d85ed         test r13, r13
0x000034df      7488           je 0x3469
0x000034e1      4c89ef         mov rdi, r13
0x000034e4      880424         mov byte [rsp], al
0x000034e7      e884f7ffff     call sym.freeline.part.2
0x000034ec      0fb60424       movzx eax, byte [rsp]
0x000034f0      4883c418       add rsp, 0x18
0x000034f4      5b             pop rbx
0x000034f5      5d             pop rbp
0x000034f6      415c           pop r12
0x000034f8      415d           pop r13
0x000034fa      415e           pop r14
0x000034fc      415f           pop r15
0x000034fe      c3             ret
0x000034ff      90             nop
0x00003500      488d15997c20.  lea rdx, obj.spareline                  ; 0x20b1a0
0x00003507      488b04da       mov rax, qword [rdx + rbx*8]
0x0000350b      4c892cda       mov qword [rdx + rbx*8], r13            ; /src:44
0x0000350f      4989c5         mov r13, rax
0x00003512      488906         mov qword [rsi], rax
0x00003515      4d85ed         test r13, r13
0x00003518      0f850dfdffff   jne 0x322b
0x0000351e      be30000000     mov esi, 0x30                           ; '0'
0x00003523      bf01000000     mov edi, 1                              ; stdio.h:-94
0x00003528      e843300000     call sym.xcalloc
0x0000352d      4989c5         mov r13, rax
0x00003530      48894500       mov qword [rbp], rax
0x00003534      e9fafcffff     jmp 0x3233
0x00003539      0f1f80000000.  nop dword [rax]
0x00003540      4983c601       add r14, 1
0x00003544      4c39f5         cmp rbp, r14
0x00003547      0f84f3fdffff   je 0x3340
0x0000354d      410fb636       movzx esi, byte [r14]
0x00003551      f6047201       test byte [rdx + rsi*2], 1              ; /src:73
0x00003555      4889f0         mov rax, rsi
0x00003558      0f84d0fdffff   je 0x332e
0x0000355e      ebe0           jmp 0x3540
0x00003560      4839c5         cmp rbp, rax
0x00003563      4989c6         mov r14, rax
0x00003566      0f8534fdffff   jne 0x32a0
0x0000356c      e9e0fdffff     jmp 0x3351
0x00003571      0f1f80000000.  nop dword [rax]
0x00003578      4c29f0         sub rax, r14
0x0000357b      4c89f6         mov rsi, r14
0x0000357e      4c89ef         mov rdi, r13
0x00003581      4889c2         mov rdx, rax
0x00003584      e8a7fbffff     call sym.extract_field
0x00003589      e9c3fdffff     jmp 0x3351
0x0000358e      4881faffffff.  cmp rdx, 0x7fffffff
0x00003595      b8ffffff7f     mov eax, 0x7fffffff                     ; /src:114
0x0000359a      480f46c2       cmovbe rax, rdx
0x0000359e      4989c1         mov r9, rax
0x000035a1      e951feffff     jmp 0x33f7
0x000035a6      488d35c84700.  lea rsi, str.read_error                 ; 0x7d75 ; "read error"
0x000035ad      ba05000000     mov edx, 5
0x000035b2      31ff           xor edi, edi
0x000035b4      e837e1ffff     call sym.imp.dcgettext
0x000035b9      4889c3         mov rbx, rax
0x000035bc      e8afe0ffff     call sym.imp.__errno_location           ; /src:127
0x000035c1      8b30           mov esi, dword [rax]
0x000035c3      4889da         mov rdx, rbx
0x000035c6      bf01000000     mov edi, 1
0x000035cb      31c0           xor eax, eax                            ; ../coreutils-8.31/src/in.c:-214
0x000035cd      e81ee3ffff     call sym.imp.error
0x000035d2      0f1f4000       nop dword [rax]
0x000035d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- getseq:
0x000035e0      4154           push r12
0x000035e2      55             push rbp
0x000035e3      4189d4         mov r12d, edx
0x000035e6      53             push rbx
0x000035e7      4889f3         mov rbx, rsi
0x000035ea      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/src/in.c:-186
0x000035ed      483b7308       cmp rsi, qword [rbx + 8]
0x000035f1      4889fd         mov rbp, rdi
0x000035f4      488b7b10       mov rdi, qword [rbx + 0x10]
0x000035f8      7426           je 0x3620
0x000035fa      488d34f7       lea rsi, [rdi + rsi*8]
0x000035fe      4489e2         mov edx, r12d                           ; ../coreutils-8.31/src/in.c:-185
0x00003601      4889ef         mov rdi, rbp                            ; /src:116
0x00003604      e8e7fbffff     call sym.get_line
0x00003609      84c0           test al, al
0x0000360b      7404           je 0x3611
0x0000360d      48830301       add qword [rbx], 1
0x00003611      5b             pop rbx
0x00003612      5d             pop rbp
0x00003613      415c           pop r12
0x00003615      c3             ret
0x00003616      662e0f1f8400.  nop word cs:[rax + rax]
0x00003620      4885ff         test rdi, rdi
0x00003623      7463           je 0x3688
0x00003625      48b8a9aaaaaa.  movabs rax, 0xaaaaaaaaaaaaaa9
0x0000362f      4839c6         cmp rsi, rax
0x00003632      7779           ja 0x36ad
0x00003634      4889f0         mov rax, rsi
0x00003637      48d1e8         shr rax, 1
0x0000363a      488d740601     lea rsi, [rsi + rax + 1]
0x0000363f      48897308       mov qword [rbx + 8], rsi
0x00003643      48c1e603       shl rsi, 3
0x00003647      e8b42d0000     call sym.xrealloc
0x0000364c      488b33         mov rsi, qword [rbx]
0x0000364f      488b5308       mov rdx, qword [rbx + 8]
0x00003653      4889c7         mov rdi, rax
0x00003656      48894310       mov qword [rbx + 0x10], rax
0x0000365a      4839d6         cmp rsi, rdx
0x0000365d      739b           jae 0x35fa                              ; ../coreutils-8.31/src/in.c:-201
0x0000365f      488d04f0       lea rax, [rax + rsi*8]
0x00003663      488d14d7       lea rdx, [rdi + rdx*8]
0x00003667      660f1f840000.  nop word [rax + rax]
0x00003670      48c700000000.  mov qword [rax], 0
0x00003677      4883c008       add rax, 8
0x0000367b      4839d0         cmp rax, rdx
0x0000367e      75f0           jne 0x3670
0x00003680      e975ffffff     jmp 0x35fa
0x00003685      0f1f00         nop dword [rax]
0x00003688      4885f6         test rsi, rsi
0x0000368b      b810000000     mov eax, 0x10
0x00003690      ba08000000     mov edx, 8
0x00003695      480f44f0       cmove rsi, rax
0x00003699      4889d0         mov rax, rdx
0x0000369c      31c9           xor ecx, ecx
0x0000369e      48f7e6         mul rsi
0x000036a1      700f           jo 0x36b2
0x000036a3      4885c0         test rax, rax
0x000036a6      7805           js 0x36ad
0x000036a8      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/xalloc.h:-295
0x000036ab      7492           je 0x363f
0x000036ad      e83e2f0000     call sym.xalloc_die
0x000036b2      b901000000     mov ecx, 1
0x000036b7      ebea           jmp 0x36a3
0x000036b9      0f1f80000000.  nop dword [rax]
;-- usage:
0x000036c0      4155           push r13
0x000036c2      4154           push r12
0x000036c4      ba05000000     mov edx, 5
0x000036c9      55             push rbp
0x000036ca      53             push rbx
0x000036cb      89fd           mov ebp, edi
0x000036cd      4881ec880000.  sub rsp, 0x88
0x000036d4      488b1d157b20.  mov rbx, qword [obj.program_name]       ; [0x20b1f0:8]=0
0x000036db      64488b042528.  mov rax, qword fs:[0x28]
0x000036e4      4889442478     mov qword [rsp + 0x78], rax
0x000036e9      31c0           xor eax, eax
0x000036eb      85ff           test edi, edi
0x000036ed      742e           je 0x371d
0x000036ef      488d35823c00.  lea rsi, str.Try___s___help__for_more_information. ; 0x7378 ; "Try '%s --help' for more information.\n"
0x000036f6      31ff           xor edi, edi
0x000036f8      e8f3dfffff     call sym.imp.dcgettext
0x000036fd      488b3ddc7920.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0e0:8]=0
0x00003704      4889c2         mov rdx, rax
0x00003707      4889d9         mov rcx, rbx
0x0000370a      be01000000     mov esi, 1
0x0000370f      31c0           xor eax, eax
0x00003711      e84ae2ffff     call sym.imp.__fprintf_chk
0x00003716      89ef           mov edi, ebp
0x00003718      e823e2ffff     call sym.imp.exit
0x0000371d      488d357c3c00.  lea rsi, str.Usage:__s__OPTION_..._FILE1_FILE2 ; 0x73a0 ; "Usage: %s [OPTION]... FILE1 FILE2\n"
0x00003724      31ff           xor edi, edi
0x00003726      e8c5dfffff     call sym.imp.dcgettext
0x0000372b      4889da         mov rdx, rbx
0x0000372e      4889c6         mov rsi, rax
0x00003731      bf01000000     mov edi, 1
0x00003736      31c0           xor eax, eax
0x00003738      e8a3e1ffff     call sym.imp.__printf_chk
0x0000373d      488b1d647920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003744      488d357d3c00.  lea rsi, str.For_each_pair_of_input_lines_with_identical_join_fields__write_a_line_to__standard_output.__The_default_join_field_is_the_first__delimited_by_blanks. ; 0x73c8 ; "For each pair of input lines with identical join fields, write a line to\nstandard output.  The default join field is the first, delimited by blanks.\n"
0x0000374b      ba05000000     mov edx, 5
0x00003750      31ff           xor edi, edi
0x00003752      e899dfffff     call sym.imp.dcgettext
0x00003757      4889de         mov rsi, rbx
0x0000375a      4889c7         mov rdi, rax
0x0000375d      e88ee0ffff     call sym.imp.fputs_unlocked
0x00003762      488b1d3f7920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003769      488d35f03c00.  lea rsi, str.When_FILE1_or_FILE2__not_both__is____read_standard_input. ; 0x7460 ; "\nWhen FILE1 or FILE2 (not both) is -, read standard input.\n"
0x00003770      ba05000000     mov edx, 5
0x00003775      31ff           xor edi, edi
0x00003777      e874dfffff     call sym.imp.dcgettext
0x0000377c      4889de         mov rsi, rbx
0x0000377f      4889c7         mov rdi, rax
0x00003782      e869e0ffff     call sym.imp.fputs_unlocked
0x00003787      488b1d1a7920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000378e      488d350b3d00.  lea rsi, str.a_FILENUM________also_print_unpairable_lines_from_file_FILENUM__where________________________FILENUM_is_1_or_2__corresponding_to_FILE1_or_FILE2_____e_EMPTY__________replace_missing_input_fields_with_EMPTY ; 0x74a0 ; "\n  -a FILENUM        also print unpairable lines from file FILENUM, where\n                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2\n  -e EMPTY          replace missing input fields with EMPTY\n"
0x00003795      ba05000000     mov edx, 5
0x0000379a      31ff           xor edi, edi
0x0000379c      e84fdfffff     call sym.imp.dcgettext
0x000037a1      4889de         mov rsi, rbx
0x000037a4      4889c7         mov rdi, rax
0x000037a7      e844e0ffff     call sym.imp.fputs_unlocked
0x000037ac      488b1df57820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000037b3      488d35b63d00.  lea rsi, str.i____ignore_case__ignore_differences_in_case_when_comparing_fields_____j_FIELD__________equivalent_to___1_FIELD__2_FIELD______o_FORMAT_________obey_FORMAT_while_constructing_output_line_____t_CHAR___________use_CHAR_as_input_and_output_field_separator ; 0x7570 ; "  -i, --ignore-case  ignore differences in case when comparing fields\n  -j FIELD          equivalent to '-1 FIELD -2 FIELD'\n  -o FORMAT         obey FORMAT while constructing output line\n  -t CHAR           use CHAR as input and output field separator\n"
0x000037ba      ba05000000     mov edx, 5
0x000037bf      31ff           xor edi, edi
0x000037c1      e82adfffff     call sym.imp.dcgettext
0x000037c6      4889de         mov rsi, rbx
0x000037c9      4889c7         mov rdi, rax
0x000037cc      e81fe0ffff     call sym.imp.fputs_unlocked
0x000037d1      488b1dd07820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000037d8      488d35913e00.  lea rsi, str.v_FILENUM________like__a_FILENUM__but_suppress_joined_output_lines_____1_FIELD__________join_on_this_FIELD_of_file_1_____2_FIELD__________join_on_this_FIELD_of_file_2______check_order_____check_that_the_input_is_correctly_sorted__even________________________if_all_input_lines_are_pairable______nocheck_order___do_not_check_that_the_input_is_correctly_sorted______header__________treat_the_first_line_in_each_file_as_field_headers_________________________print_them_without_trying_to_pair_them ; 0x7670 ; "  -v FILENUM        like -a FILENUM, but suppress joined output lines\n  -1 FIELD          join on this FIELD of file 1\n  -2 FIELD          join on this FIELD of file 2\n  --check-order     check that the input is correctly sorted, even\n                      if all input lines are pairable\n  --nocheck-order   do not check that the input is correctly sorted\n  --header          treat the first line in each file as field headers,\n                      print them without trying to pair them\n"
0x000037df      ba05000000     mov edx, 5
0x000037e4      31ff           xor edi, edi
0x000037e6      e805dfffff     call sym.imp.dcgettext
0x000037eb      4889de         mov rsi, rbx
0x000037ee      4889c7         mov rdi, rax
0x000037f1      e8fadfffff     call sym.imp.fputs_unlocked
0x000037f6      488b1dab7820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000037fd      488d355c4000.  lea rsi, str.z____zero_terminated_____line_delimiter_is_NUL__not_newline ; 0x7860 ; "  -z, --zero-terminated     line delimiter is NUL, not newline\n"
0x00003804      ba05000000     mov edx, 5
0x00003809      31ff           xor edi, edi
0x0000380b      e8e0deffff     call sym.imp.dcgettext
0x00003810      4889de         mov rsi, rbx
0x00003813      4889c7         mov rdi, rax
0x00003816      e8d5dfffff     call sym.imp.fputs_unlocked
0x0000381b      488b1d867820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003822      488d35774000.  lea rsi, str.help_____display_this_help_and_exit ; 0x78a0 ; "      --help     display this help and exit\n"
0x00003829      ba05000000     mov edx, 5
0x0000382e      31ff           xor edi, edi
0x00003830      e8bbdeffff     call sym.imp.dcgettext
0x00003835      4889de         mov rsi, rbx
0x00003838      4889c7         mov rdi, rax
0x0000383b      e8b0dfffff     call sym.imp.fputs_unlocked
0x00003840      488b1d617820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003847      488d35824000.  lea rsi, str.version__output_version_information_and_exit ; 0x78d0 ; "      --version  output version information and exit\n"
0x0000384e      ba05000000     mov edx, 5
0x00003853      31ff           xor edi, edi
0x00003855      e896deffff     call sym.imp.dcgettext
0x0000385a      4889de         mov rsi, rbx
0x0000385d      4889c7         mov rdi, rax
0x00003860      e88bdfffff     call sym.imp.fputs_unlocked
0x00003865      488b1d3c7820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000386c      488d35954000.  lea rsi, str.Unless__t_CHAR_is_given__leading_blanks_separate_fields_and_are_ignored___else_fields_are_separated_by_CHAR.__Any_FIELD_is_a_field_number_counted__from_1.__FORMAT_is_one_or_more_comma_or_blank_separated_specifications___each_being__FILENUM.FIELD__or__0_.__Default_FORMAT_outputs_the_join_field___the_remaining_fields_from_FILE1__the_remaining_fields_from_FILE2__all__separated_by_CHAR.__If_FORMAT_is_the_keyword__auto___then_the_first__line_of_each_file_determines_the_number_of_fields_output_for_each_line.____Important:_FILE1_and_FILE2_must_be_sorted_on_the_join_fields.__E.g.__use__sort__k_1b_1__if__join__has_no_options___or_use__join__t_____if__sort__has_no_options.__Note__comparisons_honor_the_rules_specified_by__LC_COLLATE_.__If_the_input_is_not_sorted_and_some_lines_cannot_be_joined__a__warning_message_will_be_given. ; 0x7908 ; "\nUnless -t CHAR is given, leading blanks separate fields and are ignored,\nelse fields are separated by CHAR.  Any FIELD is a field number counted\nfrom 1.  FORMAT is one or more comma or blank separated specifications,\neach being 'FILENUM.FIELD' or '0'.  Default FORMAT outputs the join field,\nthe remaining fields from FILE1, the remaining fields from FILE2, all\nseparated by CHAR.  If FORMAT is the keyword 'auto', then the first\nline of each file determines the number of fields output for each line.\n\nImportant: FILE1 and FILE2 must be sorted on the join fields.\nE.g., use \"sort -k 1b,1\" if 'join' has no options,\nor use \"join -t ''\" if 'sort' has no options.\nNote, comparisons honor the rules specified by 'LC_COLLATE'.\nIf the input is not sorted and some lines cannot be joined, a\nwarning message will be given.\n"
0x00003873      ba05000000     mov edx, 5
0x00003878      31ff           xor edi, edi
0x0000387a      e871deffff     call sym.imp.dcgettext
0x0000387f      4889de         mov rsi, rbx
0x00003882      4889c7         mov rdi, rax
0x00003885      488d1d104500.  lea rbx, str.join                       ; 0x7d9c ; "join"
0x0000388c      e85fdfffff     call sym.imp.fputs_unlocked
0x00003891      488d05094500.  lea rax, [0x00007da1]                   ; "["
0x00003898      488d0d434500.  lea rcx, str.sha256sum                  ; 0x7de2 ; "sha256sum"
0x0000389f      48c744246000.  mov qword [rsp + 0x60], 0
0x000038a8      48c744246800.  mov qword [rsp + 0x68], 0
0x000038b1      4889e2         mov rdx, rsp
0x000038b4      48890424       mov qword [rsp], rax
0x000038b8      488d05e44400.  lea rax, str.test_invocation            ; 0x7da3 ; "test invocation"
0x000038bf      48894c2430     mov qword [rsp + 0x30], rcx
0x000038c4      488d0d214500.  lea rcx, str.sha384sum                  ; 0x7dec ; "sha384sum"
0x000038cb      4889442408     mov qword [rsp + 8], rax
0x000038d0      488d05444500.  lea rax, [0x00007e1b]                   ; "coreutils"
0x000038d7      48894c2440     mov qword [rsp + 0x40], rcx
0x000038dc      488d0d134500.  lea rcx, str.sha512sum                  ; stdio.h:132 __NTH (ferror_unlocked (FILE *__stream)) ; 0x7df6 ; "sha512sum"
0x000038e3      4889442410     mov qword [rsp + 0x10], rax
0x000038e8      488d05c44400.  lea rax, str.Multi_call_invocation      ; 0x7db3 ; "Multi-call invocation"
0x000038ef      48894c2450     mov qword [rsp + 0x50], rcx
0x000038f4      4889442418     mov qword [rsp + 0x18], rax
0x000038f9      488d05c94400.  lea rax, str.sha224sum                  ; 0x7dc9 ; "sha224sum"
0x00003900      4889442420     mov qword [rsp + 0x20], rax
0x00003905      488d05c74400.  lea rax, str.sha2_utilities             ; 0x7dd3 ; "sha2 utilities"
0x0000390c      4889442428     mov qword [rsp + 0x28], rax
0x00003911      4889442438     mov qword [rsp + 0x38], rax
0x00003916      4889442448     mov qword [rsp + 0x48], rax
0x0000391b      4889442458     mov qword [rsp + 0x58], rax
0x00003920      4883c210       add rdx, 0x10
0x00003924      488b3a         mov rdi, qword [rdx]
0x00003927      4885ff         test rdi, rdi
0x0000392a      7413           je 0x393f
0x0000392c      b905000000     mov ecx, 5
0x00003931      4889de         mov rsi, rbx
0x00003934      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003936      0f97c0         seta al
0x00003939      1c00           sbb al, 0
0x0000393b      84c0           test al, al
0x0000393d      75e1           jne 0x3920
0x0000393f      4c8b6208       mov r12, qword [rdx + 8]
0x00003943      31ff           xor edi, edi
0x00003945      ba05000000     mov edx, 5
0x0000394a      488d35af4400.  lea rsi, str.s_online_help:___s         ; 0x7e00 ; "\n%s online help: <%s>\n"
0x00003951      4d85e4         test r12, r12
0x00003954      0f84c1000000   je 0x3a1b
0x0000395a      e891ddffff     call sym.imp.dcgettext
0x0000395f      488d0dda4200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7c40 ; "https://www.gnu.org/software/coreutils/"
0x00003966      488d15aa4400.  lea rdx, str.GNU_coreutils              ; 0x7e17 ; "GNU coreutils"
0x0000396d      4889c6         mov rsi, rax
0x00003970      bf01000000     mov edi, 1
0x00003975      31c0           xor eax, eax
0x00003977      e864dfffff     call sym.imp.__printf_chk
0x0000397c      31f6           xor esi, esi
0x0000397e      bf05000000     mov edi, 5
0x00003983      e848dfffff     call sym.imp.setlocale
0x00003988      4885c0         test rax, rax
0x0000398b      741c           je 0x39a9
0x0000398d      488d35914400.  lea rsi, [0x00007e25]                   ; "en_"
0x00003994      ba03000000     mov edx, 3
0x00003999      4889c7         mov rdi, rax
0x0000399c      e8dfdcffff     call sym.imp.strncmp
0x000039a1      85c0           test eax, eax
0x000039a3      0f8507010000   jne 0x3ab0
0x000039a9      488d35794400.  lea rsi, str.Full_documentation___s_s   ; 0x7e29 ; "Full documentation <%s%s>\n"
0x000039b0      31ff           xor edi, edi
0x000039b2      ba05000000     mov edx, 5
0x000039b7      e834ddffff     call sym.imp.dcgettext
0x000039bc      488d0dd94300.  lea rcx, str.join                       ; 0x7d9c ; "join"
0x000039c3      488d15764200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7c40 ; "https://www.gnu.org/software/coreutils/"
0x000039ca      4889c6         mov rsi, rax
0x000039cd      bf01000000     mov edi, 1
0x000039d2      31c0           xor eax, eax
0x000039d4      e807dfffff     call sym.imp.__printf_chk
0x000039d9      4939dc         cmp r12, rbx
0x000039dc      488d0dda4300.  lea rcx, [0x00007dbd]                   ; " invocation"
0x000039e3      488d1d6e4300.  lea rbx, [0x00007d58]
0x000039ea      480f44d9       cmove rbx, rcx
0x000039ee      488d35bb4200.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x7cb0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000039f5      31ff           xor edi, edi
0x000039f7      ba05000000     mov edx, 5
0x000039fc      e8efdcffff     call sym.imp.dcgettext
0x00003a01      4889d9         mov rcx, rbx
0x00003a04      4889c6         mov rsi, rax
0x00003a07      4c89e2         mov rdx, r12
0x00003a0a      bf01000000     mov edi, 1
0x00003a0f      31c0           xor eax, eax
0x00003a11      e8cadeffff     call sym.imp.__printf_chk
0x00003a16      e9fbfcffff     jmp 0x3716
0x00003a1b      e8d0dcffff     call sym.imp.dcgettext                  ; stdio.h:146      && (size_t) (size) * (size_t) (n) <= 8        \
0x00003a20      488d0d194200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; ../coreutils-8.31/lib/xalloc.h:-416 ; 0x7c40 ; "https://www.gnu.org/software/coreutils/"
0x00003a27      488d15e94300.  lea rdx, str.GNU_coreutils              ; 0x7e17 ; "GNU coreutils"
0x00003a2e      4889c6         mov rsi, rax
0x00003a31      bf01000000     mov edi, 1
0x00003a36      31c0           xor eax, eax
0x00003a38      e8a3deffff     call sym.imp.__printf_chk
0x00003a3d      31f6           xor esi, esi
0x00003a3f      bf05000000     mov edi, 5
0x00003a44      e887deffff     call sym.imp.setlocale
0x00003a49      4885c0         test rax, rax                           ; stdio.h:143 /* Perform some simple optimizations.  */
0x00003a4c      7418           je 0x3a66
0x00003a4e      488d35d04300.  lea rsi, [0x00007e25]                   ; "en_"
0x00003a55      ba03000000     mov edx, 3
0x00003a5a      4889c7         mov rdi, rax
0x00003a5d      e81edcffff     call sym.imp.strncmp
0x00003a62      85c0           test eax, eax
0x00003a64      7543           jne 0x3aa9
0x00003a66      488d35bc4300.  lea rsi, str.Full_documentation___s_s   ; 0x7e29 ; "Full documentation <%s%s>\n"
0x00003a6d      ba05000000     mov edx, 5
0x00003a72      31ff           xor edi, edi
0x00003a74      4c8d25214300.  lea r12, str.join                       ; 0x7d9c ; "join"
0x00003a7b      488d1d3b4300.  lea rbx, [0x00007dbd]                   ; " invocation"
0x00003a82      e869dcffff     call sym.imp.dcgettext
0x00003a87      488d0d0e4300.  lea rcx, str.join                       ; 0x7d9c ; "join"
0x00003a8e      488d15ab4100.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7c40 ; "https://www.gnu.org/software/coreutils/"
0x00003a95      4889c6         mov rsi, rax
0x00003a98      bf01000000     mov edi, 1
0x00003a9d      31c0           xor eax, eax
0x00003a9f      e83cdeffff     call sym.imp.__printf_chk
0x00003aa4      e945ffffff     jmp 0x39ee
0x00003aa9      4c8d25ec4200.  lea r12, str.join                       ; 0x7d9c ; "join"
0x00003ab0      4c8b2df17520.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003ab7      488d35aa4100.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x7c68 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00003abe      31ff           xor edi, edi                            ; /src:479
0x00003ac0      ba05000000     mov edx, 5
0x00003ac5      e826dcffff     call sym.imp.dcgettext                  ; /src:480
0x00003aca      4c89ee         mov rsi, r13
0x00003acd      4889c7         mov rdi, rax
0x00003ad0      e81bddffff     call sym.imp.fputs_unlocked
0x00003ad5      e9cffeffff     jmp 0x39a9
0x00003ada      660f1f440000   nop word [rax + rax]
;-- add_file_name.constprop.7:
0x00003ae0      4156           push r14
0x00003ae2      4155           push r13
0x00003ae4      4989fd         mov r13, rdi
0x00003ae7      4154           push r12
0x00003ae9      55             push rbp
0x00003aea      4889f5         mov rbp, rsi
0x00003aed      53             push rbx
0x00003aee      4883ec20       sub rsp, 0x20
0x00003af2      8b19           mov ebx, dword [rcx]
0x00003af4      83fb02         cmp ebx, 2
0x00003af7      7447           je 0x3b40
0x00003af9      4863c3         movsxd rax, ebx
0x00003afc      4c8d25ad7620.  lea r12, obj.g_names                    ; 0x20b1b0
0x00003b03      83c301         add ebx, 1
0x00003b06      488d14850000.  lea rdx, [rax*4]
0x00003b0e      48c1e003       shl rax, 3
0x00003b12      418b30         mov esi, dword [r8]
0x00003b15      89741500       mov dword [rbp + rdx], esi
0x00003b19      4d892c04       mov qword [r12 + rax], r13
0x00003b1d      8919           mov dword [rcx], ebx
0x00003b1f      41833803       cmp dword [r8], 3
0x00003b23      7507           jne 0x3b2c
0x00003b25      41c701030000.  mov dword [r9], 3
0x00003b2c      4883c420       add rsp, 0x20
0x00003b30      5b             pop rbx
0x00003b31      5d             pop rbp
0x00003b32      415c           pop r12
0x00003b34      415d           pop r13
0x00003b36      415e           pop r14                                 ; /src:470
0x00003b38      c3             ret
0x00003b39      0f1f80000000.  nop dword [rax]
0x00003b40      448b36         mov r14d, dword [rsi]
0x00003b43      31c0           xor eax, eax
0x00003b45      4c8d25647620.  lea r12, obj.g_names                    ; 0x20b1b0
0x00003b4c      4585f6         test r14d, r14d
0x00003b4f      0f94c0         sete al
0x00003b52      498b3cc4       mov rdi, qword [r12 + rax*8]
0x00003b56      8b0486         mov eax, dword [rsi + rax*4]
0x00003b59      83f801         cmp eax, 1                              ; /src:459
0x00003b5c      0f84ae000000   je 0x3c10
0x00003b62      0f8ee8000000   jle 0x3c50
0x00003b68      83f802         cmp eax, 2
0x00003b6b      7453           je 0x3bc0
0x00003b6d      83f803         cmp eax, 3
0x00003b70      7523           jne 0x3b95
0x00003b72      4c894c2418     mov qword [rsp + 0x18], r9
0x00003b77      4c89442410     mov qword [rsp + 0x10], r8
0x00003b7c      48894c2408     mov qword [rsp + 8], rcx
0x00003b81      e8aaefffff     call sym.add_field_list
0x00003b86      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00003b8b      4c8b442410     mov r8, qword [rsp + 0x10]
0x00003b90      488b4c2408     mov rcx, qword [rsp + 8]
0x00003b95      4585f6         test r14d, r14d
0x00003b98      7466           je 0x3c00
0x00003b9a      8b4504         mov eax, dword [rbp + 4]
0x00003b9d      ba04000000     mov edx, 4
0x00003ba2      894500         mov dword [rbp], eax
0x00003ba5      488b050c7620.  mov rax, qword [0x0020b1b8]             ; [0x20b1b8:8]=0
0x00003bac      488905fd7520.  mov qword [obj.g_names], rax            ; [0x20b1b0:8]=0
0x00003bb3      b808000000     mov eax, 8
0x00003bb8      e955ffffff     jmp 0x3b12
0x00003bbd      0f1f00         nop dword [rax]
0x00003bc0      836a0401       sub dword [rdx + 4], 1
0x00003bc4      4c894c2418     mov qword [rsp + 0x18], r9
0x00003bc9      4c89442410     mov qword [rsp + 0x10], r8
0x00003bce      48894c2408     mov qword [rsp + 8], rcx
0x00003bd3      e8b8eeffff     call sym.string_to_join_field
0x00003bd8      488d3d397420.  lea rdi, obj.join_field_2               ; 0x20b018
0x00003bdf      4889c6         mov rsi, rax
0x00003be2      e859eeffff     call sym.set_join_field
0x00003be7      488b4c2408     mov rcx, qword [rsp + 8]
0x00003bec      4c8b442410     mov r8, qword [rsp + 0x10]
0x00003bf1      4c8b4c2418     mov r9, qword [rsp + 0x18]              ; /src:450
0x00003bf6      eb9d           jmp 0x3b95
0x00003bf8      0f1f84000000.  nop dword [rax + rax]
0x00003c00      b808000000     mov eax, 8
0x00003c05      ba04000000     mov edx, 4
0x00003c0a      e903ffffff     jmp 0x3b12
0x00003c0f      90             nop
0x00003c10      832a01         sub dword [rdx], 1
0x00003c13      4c894c2418     mov qword [rsp + 0x18], r9
0x00003c18      4c89442410     mov qword [rsp + 0x10], r8
0x00003c1d      48894c2408     mov qword [rsp + 8], rcx
0x00003c22      e869eeffff     call sym.string_to_join_field
0x00003c27      488d3df27320.  lea rdi, obj.join_field_1               ; 0x20b020
0x00003c2e      4889c6         mov rsi, rax
0x00003c31      e80aeeffff     call sym.set_join_field
0x00003c36      488b4c2408     mov rcx, qword [rsp + 8]
0x00003c3b      4c8b442410     mov r8, qword [rsp + 0x10]
0x00003c40      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00003c45      e94bffffff     jmp 0x3b95
0x00003c4a      660f1f440000   nop word [rax + rax]
0x00003c50      85c0           test eax, eax
0x00003c52      0f853dffffff   jne 0x3b95
0x00003c58      4c89ee         mov rsi, r13
0x00003c5b      bf04000000     mov edi, 4
0x00003c60      e81b1e0000     call sym.quotearg_style
0x00003c65      488d35d84100.  lea rsi, str.extra_operand__s           ; 0x7e44 ; "extra operand %s"
0x00003c6c      4889c3         mov rbx, rax
0x00003c6f      ba05000000     mov edx, 5
0x00003c74      31ff           xor edi, edi
0x00003c76      e875daffff     call sym.imp.dcgettext
0x00003c7b      31ff           xor edi, edi
0x00003c7d      4889c2         mov rdx, rax
0x00003c80      4889d9         mov rcx, rbx
0x00003c83      31f6           xor esi, esi
0x00003c85      31c0           xor eax, eax
0x00003c87      e864dcffff     call sym.imp.error
0x00003c8c      bf01000000     mov edi, 1
0x00003c91      e82afaffff     call sym.usage
0x00003c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_stdout_set_file_name:
0x00003ca0      48893d417520.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20b1e8:8]=0
0x00003ca7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003ca8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003cb0      40883d297520.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20b1e0:1]=0
0x00003cb7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003cb8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003cc0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003cc1      53             push rbx
0x00003cc2      4883ec08       sub rsp, 8
0x00003cc6      488b3ddb7320.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003ccd      e80e330000     call sym.close_stream
0x00003cd2      85c0           test eax, eax
0x00003cd4      7416           je 0x3cec
0x00003cd6      e895d9ffff     call sym.imp.__errno_location
0x00003cdb      803dfe742000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20b1e0:1]=0
0x00003ce2      4889c3         mov rbx, rax
0x00003ce5      741c           je 0x3d03
0x00003ce7      833820         cmp dword [rax], 0x20
0x00003cea      7517           jne 0x3d03
0x00003cec      488b3ded7320.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0e0:8]=0
0x00003cf3      e8e8320000     call sym.close_stream
0x00003cf8      85c0           test eax, eax
0x00003cfa      7546           jne 0x3d42
0x00003cfc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003d00      5b             pop rbx
0x00003d01      5d             pop rbp
0x00003d02      c3             ret
0x00003d03      488d353e4200.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x7f48 ; "write error"
0x00003d0a      31ff           xor edi, edi
0x00003d0c      ba05000000     mov edx, 5
0x00003d11      e8dad9ffff     call sym.imp.dcgettext
0x00003d16      488b3dcb7420.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20b1e8:8]=0
0x00003d1d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003d20      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003d23      7428           je 0x3d4d
0x00003d25      e8261e0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00003d2a      8b33           mov esi, dword [rbx]
0x00003d2c      488d15214200.  lea rdx, str.s:__s                      ; 0x7f54 ; "%s: %s"
0x00003d33      4889c1         mov rcx, rax
0x00003d36      4989e8         mov r8, rbp
0x00003d39      31ff           xor edi, edi
0x00003d3b      31c0           xor eax, eax
0x00003d3d      e8aedbffff     call sym.imp.error
0x00003d42      8b3df0722000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20b038:4]=1
0x00003d48      e843d9ffff     call sym.imp._exit
0x00003d4d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00003d4f      488d15fc3f00.  lea rdx, [0x00007d52]                   ; "%s"
0x00003d56      4889c1         mov rcx, rax
0x00003d59      31ff           xor edi, edi
0x00003d5b      31c0           xor eax, eax
0x00003d5d      e88edbffff     call sym.imp.error
0x00003d62      ebde           jmp 0x3d42
0x00003d64      662e0f1f8400.  nop word cs:[rax + rax]
0x00003d6e      6690           nop
;-- fdadvise:
0x00003d70      e94bdaffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00003d75      90             nop
0x00003d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00003d80      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00003d83      741b           je 0x3da0
0x00003d85      53             push rbx
0x00003d86      89f3           mov ebx, esi
0x00003d88      e8a3daffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x00003d8d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00003d8f      31d2           xor edx, edx
0x00003d91      31f6           xor esi, esi
0x00003d93      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00003d94      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00003d96      e925daffff     jmp sym.imp.posix_fadvise
0x00003d9b      0f1f440000     nop dword [rax + rax]
0x00003da0      f3c3           ret
0x00003da2      662e0f1f8400.  nop word cs:[rax + rax]
0x00003dac      0f1f4000       nop dword [rax]
;-- fopen_safer:
0x00003db0      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00003db2      55             push rbp
0x00003db3      4889f5         mov rbp, rsi
0x00003db6      53             push rbx
0x00003db7      e854dbffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00003dbc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00003dbf      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00003dc2      740d           je 0x3dd1                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00003dc4      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00003dc7      e864daffff     call sym.imp.fileno
0x00003dcc      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x00003dcf      760f           jbe 0x3de0
0x00003dd1      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00003dd4      5b             pop rbx
0x00003dd5      5d             pop rbp
0x00003dd6      415c           pop r12
0x00003dd8      c3             ret
0x00003dd9      0f1f80000000.  nop dword [rax]
0x00003de0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00003de2      e8891f0000     call sym.dup_safer
0x00003de7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00003de9      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00003dec      783a           js 0x3e28                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00003dee      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00003df1      e8ba2d0000     call sym.rpl_fclose
0x00003df6      85c0           test eax, eax
0x00003df8      7513           jne 0x3e0d
0x00003dfa      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x00003dfd      4489e7         mov edi, r12d
0x00003e00      e8bbdaffff     call sym.imp.fdopen
0x00003e05      4885c0         test rax, rax
0x00003e08      4889c3         mov rbx, rax
0x00003e0b      75c4           jne 0x3dd1
0x00003e0d      e85ed8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00003e12      8b28           mov ebp, dword [rax]
0x00003e14      4889c3         mov rbx, rax
0x00003e17      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x00003e1a      e891d9ffff     call sym.imp.close
0x00003e1f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00003e21      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00003e23      ebac           jmp 0x3dd1
0x00003e25      0f1f00         nop dword [rax]
0x00003e28      e843d8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x00003e2d      448b20         mov r12d, dword [rax]
0x00003e30      4889c5         mov rbp, rax
0x00003e33      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00003e36      e8752d0000     call sym.rpl_fclose
0x00003e3b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00003e3d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00003e41      eb8e           jmp 0x3dd1                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00003e43      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e4d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00003e50      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00003e54      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00003e56      e875daffff     call sym.imp.setlocale
0x00003e5b      4889c2         mov rdx, rax
0x00003e5e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00003e63      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00003e66      741d           je 0x3e85
0x00003e68      488d3dec4000.  lea rdi, [0x00007f5b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00003e6f      b902000000     mov ecx, 2
0x00003e74      4889d6         mov rsi, rdx
0x00003e77      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003e79      0f97c1         seta cl
0x00003e7c      80d900         sbb cl, 0
0x00003e7f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00003e81      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00003e83      750b           jne 0x3e90
0x00003e85      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00003e89      c3             ret
0x00003e8a      660f1f440000   nop word [rax + rax]
0x00003e90      488d3dc64000.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x7f5d ; "POSIX"
0x00003e97      b906000000     mov ecx, 6
0x00003e9c      4889d6         mov rsi, rdx
0x00003e9f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003ea1      0f97c0         seta al
0x00003ea4      1c00           sbb al, 0
0x00003ea6      84c0           test al, al
0x00003ea8      0f95c0         setne al
0x00003eab      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00003eaf      c3             ret
;-- initbuffer:
0x00003eb0      660fefc0       pxor xmm0, xmm0
0x00003eb4      48c747100000.  mov qword [rdi + 0x10], 0
0x00003ebc      0f1107         movups xmmword [rdi], xmm0
0x00003ebf      c3             ret                                     ; ../coreutils-8.31/lib/linebuffer.c:40
;-- readlinebuffer_delim:
0x00003ec0      4157           push r15                                ; ../coreutils-8.31/lib/linebuffer.c:61
0x00003ec2      4156           push r14
0x00003ec4      4155           push r13
0x00003ec6      4154           push r12
0x00003ec8      55             push rbp
0x00003ec9      53             push rbx
0x00003eca      4883ec18       sub rsp, 0x18
0x00003ece      4c8b6f10       mov r13, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:63
0x00003ed2      4c8b07         mov r8, qword [rdi]                     ; ../coreutils-8.31/lib/linebuffer.c:65
0x00003ed5      4d01e8         add r8, r13
0x00003ed8      f60610         test byte [rsi], 0x10                   ; ../coreutils-8.31/lib/linebuffer.c:67
0x00003edb      0f85cf000000   jne 0x3fb0
0x00003ee1      4989fe         mov r14, rdi
0x00003ee4      4889f5         mov rbp, rsi
0x00003ee7      4c89eb         mov rbx, r13
0x00003eea      440fbefa       movsx r15d, dl
0x00003eee      eb0b           jmp 0x3efb
0x00003ef0      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x00003ef3      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00003ef7      880e           mov byte [rsi], cl
0x00003ef9      745b           je 0x3f56                               ; ../coreutils-8.31/lib/linebuffer.c:91
0x00003efb      488b4d08       mov rcx, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00003eff      483b4d10       cmp rcx, qword [rbp + 0x10]
0x00003f03      736b           jae 0x3f70
0x00003f05      488d4101       lea rax, [rcx + 1]
0x00003f09      48894508       mov qword [rbp + 8], rax
0x00003f0d      440fb621       movzx r12d, byte [rcx]
0x00003f11      4489e1         mov ecx, r12d
0x00003f14      4c39c3         cmp rbx, r8                             ; ../coreutils-8.31/lib/linebuffer.c:81
0x00003f17      4889de         mov rsi, rbx
0x00003f1a      75d4           jne 0x3ef0
0x00003f1c      498b1e         mov rbx, qword [r14]                    ; ../coreutils-8.31/lib/linebuffer.c:83
0x00003f1f      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x00003f22      4c89ef         mov rdi, r13
0x00003f25      8854240f       mov byte [rsp + 0xf], dl
0x00003f29      880c24         mov byte [rsp], cl
0x00003f2c      e8cf250000     call sym.x2realloc
0x00003f31      4d8b06         mov r8, qword [r14]                     ; ../coreutils-8.31/lib/linebuffer.c:87
0x00003f34      0fb60c24       movzx ecx, byte [rsp]
0x00003f38      488d3418       lea rsi, [rax + rbx]                    ; ../coreutils-8.31/lib/linebuffer.c:85
0x00003f3c      49894610       mov qword [r14 + 0x10], rax             ; ../coreutils-8.31/lib/linebuffer.c:86
0x00003f40      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x00003f43      0fb654240f     movzx edx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/linebuffer.c:87
0x00003f48      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00003f4c      4901c0         add r8, rax                             ; ../coreutils-8.31/lib/linebuffer.c:87
0x00003f4f      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x00003f52      880e           mov byte [rsi], cl                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00003f54      75a5           jne 0x3efb                              ; ../coreutils-8.31/lib/linebuffer.c:91
0x00003f56      4c29eb         sub rbx, r13                            ; ../coreutils-8.31/lib/linebuffer.c:93
0x00003f59      4c89f0         mov rax, r14                            ; ../coreutils-8.31/lib/linebuffer.c:94
0x00003f5c      49895e08       mov qword [r14 + 8], rbx                ; ../coreutils-8.31/lib/linebuffer.c:93
0x00003f60      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x00003f64      5b             pop rbx
0x00003f65      5d             pop rbp
0x00003f66      415c           pop r12
0x00003f68      415d           pop r13
0x00003f6a      415e           pop r14
0x00003f6c      415f           pop r15
0x00003f6e      c3             ret
0x00003f6f      90             nop
0x00003f70      4889ef         mov rdi, rbp                            ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00003f73      8854240f       mov byte [rsp + 0xf], dl
0x00003f77      4c890424       mov qword [rsp], r8
0x00003f7b      e8c0d6ffff     call sym.imp.__uflow
0x00003f80      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x00003f83      4189c4         mov r12d, eax                           ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00003f86      4c8b0424       mov r8, qword [rsp]                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x00003f8a      0fb654240f     movzx edx, byte [rsp + 0xf]
0x00003f8f      7530           jne 0x3fc1
0x00003f91      4939dd         cmp r13, rbx                            ; ../coreutils-8.31/lib/linebuffer.c:75
0x00003f94      741a           je 0x3fb0
0x00003f96      f6450020       test byte [rbp], 0x20
0x00003f9a      7514           jne 0x3fb0
0x00003f9c      3853ff         cmp byte [rbx - 1], dl                  ; ../coreutils-8.31/lib/linebuffer.c:77
0x00003f9f      74b5           je 0x3f56
0x00003fa1      4589fc         mov r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:79
0x00003fa4      89d1           mov ecx, edx
0x00003fa6      e969ffffff     jmp 0x3f14
0x00003fab      0f1f440000     nop dword [rax + rax]
0x00003fb0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x00003fb4      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/linebuffer.c:68
0x00003fb6      5b             pop rbx                                 ; ../coreutils-8.31/lib/linebuffer.c:95
0x00003fb7      5d             pop rbp
0x00003fb8      415c           pop r12
0x00003fba      415d           pop r13
0x00003fbc      415e           pop r14
0x00003fbe      415f           pop r15
0x00003fc0      c3             ret
0x00003fc1      89c1           mov ecx, eax
0x00003fc3      e94cffffff     jmp 0x3f14
0x00003fc8      0f1f84000000.  nop dword [rax + rax]
;-- readlinebuffer:
0x00003fd0      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/linebuffer.c:44
0x00003fd5      e9e6feffff     jmp sym.readlinebuffer_delim
0x00003fda      660f1f440000   nop word [rax + rax]
;-- freebuffer:
0x00003fe0      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:101
0x00003fe4      e967d6ffff     jmp sym.imp.free
0x00003fe9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/linebuffer.c:102
;-- memcasecmp:
0x00003ff0      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/memcasecmp.c:33
0x00003ff3      7443           je 0x4038
0x00003ff5      4154           push r12
0x00003ff7      55             push rbp
0x00003ff8      4989f4         mov r12, rsi
0x00003ffb      53             push rbx
0x00003ffc      4889fd         mov rbp, rdi
0x00003fff      4889d3         mov rbx, rdx
0x00004002      e829d6ffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/memcasecmp.c:41
0x00004007      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/memcasecmp.c:37
0x00004009      4c8b00         mov r8, qword [rax]                     ; ../coreutils-8.31/lib/memcasecmp.c:41
0x0000400c      eb0b           jmp 0x4019
0x0000400e      6690           nop
0x00004010      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/memcasecmp.c:37
0x00004014      4839d9         cmp rcx, rbx
0x00004017      7414           je 0x402d
0x00004019      0fb6440d00     movzx eax, byte [rbp + rcx]             ; ../coreutils-8.31/lib/memcasecmp.c:41
0x0000401e      450fb60c0c     movzx r9d, byte [r12 + rcx]             ; ../coreutils-8.31/lib/memcasecmp.c:42
0x00004023      418b0480       mov eax, dword [r8 + rax*4]             ; ../coreutils-8.31/lib/memcasecmp.c:43
0x00004027      432b0488       sub eax, dword [r8 + r9*4]              ; ../coreutils-8.31/lib/memcasecmp.c:45
0x0000402b      74e3           je 0x4010
0x0000402d      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcasecmp.c:49
0x0000402e      5d             pop rbp
0x0000402f      415c           pop r12
0x00004031      c3             ret
0x00004032      660f1f440000   nop word [rax + rax]
0x00004038      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/memcasecmp.c:48
0x0000403a      c3             ret                                     ; ../coreutils-8.31/lib/memcasecmp.c:49
0x0000403b      0f1f440000     nop dword [rax + rax]
;-- set_program_name:
0x00004040      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00004043      53             push rbx
0x00004044      7477           je 0x40bd                               ; ../coreutils-8.31/lib/progname.c:51
0x00004046      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000404b      4889fb         mov rbx, rdi
0x0000404e      e81dd7ffff     call sym.imp.strrchr
0x00004053      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00004056      7455           je 0x40ad
0x00004058      4c8d4001       lea r8, [rax + 1]
0x0000405c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000405f      4829da         sub rdx, rbx
0x00004062      4883fa06       cmp rdx, 6
0x00004066      7e45           jle 0x40ad
0x00004068      488d70fa       lea rsi, [rax - 6]
0x0000406c      488d3d2d3f00.  lea rdi, str..libs                      ; 0x7fa0 ; "/.libs/"
0x00004073      b907000000     mov ecx, 7
0x00004078      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000407a      0f97c2         seta dl
0x0000407d      80da00         sbb dl, 0
0x00004080      84d2           test dl, dl
0x00004082      7529           jne 0x40ad
0x00004084      488d3d1d3f00.  lea rdi, [0x00007fa8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000408b      b903000000     mov ecx, 3
0x00004090      4c89c6         mov rsi, r8
0x00004093      4c89c3         mov rbx, r8
0x00004096      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004098      0f97c2         seta dl
0x0000409b      80da00         sbb dl, 0
0x0000409e      84d2           test dl, dl
0x000040a0      750b           jne 0x40ad
0x000040a2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000040a6      48891df36f20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x000040ad      48891d3c7120.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20b1f0:8]=0
0x000040b4      48891d0d7020.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20b0c8:8]=0
0x000040bb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000040bc      c3             ret
0x000040bd      488b0d1c7020.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0e0:8]=0
0x000040c4      488d3d9d3e00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x7f68 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000040cb      ba37000000     mov edx, 0x37                           ; '7'
0x000040d0      be01000000     mov esi, 1
0x000040d5      e876d8ffff     call sym.imp.fwrite
0x000040da      e881d5ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000040df      90             nop
;-- gettext_quote.part.1:
0x000040e0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000040e1      53             push rbx
0x000040e2      4889fd         mov rbp, rdi
0x000040e5      89f3           mov ebx, esi
0x000040e7      4883ec08       sub rsp, 8
0x000040eb      e8702f0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000040f0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000040f3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000040f6      80fa55         cmp dl, 0x55
0x000040f9      7475           je 0x4170
0x000040fb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000040fe      7420           je 0x4120
0x00004100      488d05b43e00.  lea rax, str.l______l                   ; 0x7fbb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004107      488d15af3e00.  lea rdx, [0x00007fbd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000410e      83fb09         cmp ebx, 9
0x00004111      480f45c2       cmovne rax, rdx
0x00004115      4883c408       add rsp, 8
0x00004119      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000411a      5d             pop rbp
0x0000411b      c3             ret
0x0000411c      0f1f4000       nop dword [rax]
0x00004120      0fb65001       movzx edx, byte [rax + 1]
0x00004124      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004127      80fa42         cmp dl, 0x42
0x0000412a      75d4           jne 0x4100
0x0000412c      80780231       cmp byte [rax + 2], 0x31
0x00004130      75ce           jne 0x4100
0x00004132      80780338       cmp byte [rax + 3], 0x38
0x00004136      75c8           jne 0x4100
0x00004138      80780430       cmp byte [rax + 4], 0x30
0x0000413c      75c2           jne 0x4100
0x0000413e      80780533       cmp byte [rax + 5], 0x33
0x00004142      75bc           jne 0x4100
0x00004144      80780630       cmp byte [rax + 6], 0x30
0x00004148      75b6           jne 0x4100
0x0000414a      80780700       cmp byte [rax + 7], 0
0x0000414e      75b0           jne 0x4100
0x00004150      807d0060       cmp byte [rbp], 0x60
0x00004154      488d05593e00.  lea rax, [0x00007fb4]
0x0000415b      488d15563e00.  lea rdx, [0x00007fb8]
0x00004162      480f45c2       cmovne rax, rdx
0x00004166      4883c408       add rsp, 8
0x0000416a      5b             pop rbx
0x0000416b      5d             pop rbp
0x0000416c      c3             ret
0x0000416d      0f1f00         nop dword [rax]
0x00004170      0fb65001       movzx edx, byte [rax + 1]
0x00004174      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004177      80fa54         cmp dl, 0x54
0x0000417a      7584           jne 0x4100
0x0000417c      0fb65002       movzx edx, byte [rax + 2]
0x00004180      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004183      80fa46         cmp dl, 0x46
0x00004186      0f8574ffffff   jne 0x4100
0x0000418c      8078032d       cmp byte [rax + 3], 0x2d
0x00004190      0f856affffff   jne 0x4100
0x00004196      80780438       cmp byte [rax + 4], 0x38
0x0000419a      0f8560ffffff   jne 0x4100
0x000041a0      80780500       cmp byte [rax + 5], 0
0x000041a4      0f8556ffffff   jne 0x4100
0x000041aa      807d0060       cmp byte [rbp], 0x60
0x000041ae      488d05f73d00.  lea rax, [0x00007fac]                   ; "\u2018"
0x000041b5      488d15f43d00.  lea rdx, [0x00007fb0]                   ; "\u2019"
0x000041bc      480f45c2       cmovne rax, rdx
0x000041c0      4883c408       add rsp, 8
0x000041c4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000041c5      5d             pop rbp
0x000041c6      c3             ret
0x000041c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000041d0      4157           push r15
0x000041d2      4156           push r14
0x000041d4      4589c7         mov r15d, r8d
0x000041d7      4155           push r13
0x000041d9      4154           push r12
0x000041db      4989fe         mov r14, rdi
0x000041de      55             push rbp
0x000041df      53             push rbx
0x000041e0      4489cb         mov ebx, r9d
0x000041e3      4989f5         mov r13, rsi
0x000041e6      4889cd         mov rbp, rcx
0x000041e9      83e302         and ebx, 2
0x000041ec      4881ecb80000.  sub rsp, 0xb8
0x000041f3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000041fb      4889542410     mov qword [rsp + 0x10], rdx
0x00004200      4489442408     mov dword [rsp + 8], r8d
0x00004205      44894c2478     mov dword [rsp + 0x78], r9d
0x0000420a      4889442420     mov qword [rsp + 0x20], rax
0x0000420f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004217      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000421c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004224      4889442460     mov qword [rsp + 0x60], rax
0x00004229      64488b042528.  mov rax, qword fs:[0x28]
0x00004232      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000423a      31c0           xor eax, eax
0x0000423c      e8bfd4ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004241      4183ff0a       cmp r15d, 0xa
0x00004245      4889442458     mov qword [rsp + 0x58], rax
0x0000424a      0f87af110000   ja 0x53ff
0x00004250      488d0dc93d00.  lea rcx, [0x00008020]
0x00004257      4489fa         mov edx, r15d
0x0000425a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000425e      4801c8         add rax, rcx
0x00004261      ffe0           jmp rax
0x00004263      c644240e01     mov byte [rsp + 0xe], 1
0x00004268      c644247c00     mov byte [rsp + 0x7c], 0
0x0000426d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00004270      48c744245000.  mov qword [rsp + 0x50], 0
0x00004279      c644240f01     mov byte [rsp + 0xf], 1
0x0000427e      c644240d00     mov byte [rsp + 0xd], 0
0x00004283      488d05333d00.  lea rax, [0x00007fbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000428a      48c744241801.  mov qword [rsp + 0x18], 1
0x00004293      4531ff         xor r15d, r15d
0x00004296      c74424080200.  mov dword [rsp + 8], 2
0x0000429e      4889442448     mov qword [rsp + 0x48], rax
0x000042a3      4531db         xor r11d, r11d
0x000042a6      4889e8         mov rax, rbp
0x000042a9      4589e0         mov r8d, r12d
0x000042ac      4c89dd         mov rbp, r11
0x000042af      4989c3         mov r11, rax
0x000042b2      660f1f440000   nop word [rax + rax]
0x000042b8      4939eb         cmp r11, rbp
0x000042bb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000042bf      4983fbff       cmp r11, 0xffffffffffffffff
0x000042c3      750d           jne 0x42d2
0x000042c5      488b442410     mov rax, qword [rsp + 0x10]
0x000042ca      803c2800       cmp byte [rax + rbp], 0
0x000042ce      410f95c4       setne r12b
0x000042d2      4584e4         test r12b, r12b
0x000042d5      0f8455060000   je 0x4930
0x000042db      837c240802     cmp dword [rsp + 8], 2
0x000042e0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000042e5      4c8d0c2f       lea r9, [rdi + rbp]
0x000042e9      0f95c0         setne al
0x000042ec      2244240d       and al, byte [rsp + 0xd]
0x000042f0      4189c2         mov r10d, eax
0x000042f3      0f84a7000000   je 0x43a0
0x000042f9      488b442418     mov rax, qword [rsp + 0x18]
0x000042fe      4885c0         test rax, rax
0x00004301      0f8429040000   je 0x4730
0x00004307      4983fbff       cmp r11, 0xffffffffffffffff
0x0000430b      488d5c0500     lea rbx, [rbp + rax]
0x00004310      752e           jne 0x4340
0x00004312      4883f801       cmp rax, 1
0x00004316      7628           jbe 0x4340
0x00004318      4488442438     mov byte [rsp + 0x38], r8b
0x0000431d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00004322      4c894c2428     mov qword [rsp + 0x28], r9
0x00004327      e8e4d3ffff     call sym.imp.strlen
0x0000432c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004332      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004338      4989c3         mov r11, rax
0x0000433b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004340      4c39db         cmp rbx, r11
0x00004343      4488542428     mov byte [rsp + 0x28], r10b
0x00004348      0f87b2050000   ja 0x4900
0x0000434e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004353      488b742448     mov rsi, qword [rsp + 0x48]
0x00004358      4c89cf         mov rdi, r9
0x0000435b      4c895c2440     mov qword [rsp + 0x40], r11
0x00004360      4488442438     mov byte [rsp + 0x38], r8b
0x00004365      4c894c2430     mov qword [rsp + 0x30], r9
0x0000436a      e871d4ffff     call sym.imp.memcmp
0x0000436f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00004371      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004376      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000437c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00004381      0f8579050000   jne 0x4900
0x00004387      807c240f00     cmp byte [rsp + 0xf], 0
0x0000438c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004392      0f857d0f0000   jne 0x5315
0x00004398      0f1f84000000.  nop dword [rax + rax]
0x000043a0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000043a4      80fb7e         cmp bl, 0x7e
0x000043a7      0f871b030000   ja 0x46c8
0x000043ad      488d0d983c00.  lea rcx, [0x0000804c]
0x000043b4      0fb6d3         movzx edx, bl
0x000043b7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000043bb      4801c8         add rax, rcx
0x000043be      ffe0           jmp rax
0x000043c0      4531d2         xor r10d, r10d
0x000043c3      4983fb01       cmp r11, 1
0x000043c7      0f95c0         setne al
0x000043ca      4983fbff       cmp r11, 0xffffffffffffffff
0x000043ce      750c           jne 0x43dc
0x000043d0      488b442410     mov rax, qword [rsp + 0x10]
0x000043d5      80780100       cmp byte [rax + 1], 0
0x000043d9      0f95c0         setne al
0x000043dc      837c240802     cmp dword [rsp + 8], 2
0x000043e1      0f94c2         sete dl
0x000043e4      84c0           test al, al
0x000043e6      0f844c020000   je 0x4638
0x000043ec      4531e4         xor r12d, r12d
0x000043ef      31c0           xor eax, eax
0x000043f1      0f1f80000000.  nop dword [rax]
0x000043f8      807c240d01     cmp byte [rsp + 0xd], 1
0x000043fd      0f850f010000   jne 0x4512
0x00004403      84d2           test dl, dl
0x00004405      0f8507010000   jne 0x4512
0x0000440b      488b742420     mov rsi, qword [rsp + 0x20]
0x00004410      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00004413      7414           je 0x4429
0x00004415      89da           mov edx, ebx
0x00004417      c0ea05         shr dl, 5
0x0000441a      0fb6d2         movzx edx, dl
0x0000441d      8b1496         mov edx, dword [rsi + rdx*4]
0x00004420      0fa3da         bt edx, ebx
0x00004423      0f824a010000   jb 0x4573
0x00004429      4584d2         test r10b, r10b
0x0000442c      0f8541010000   jne 0x4573
0x00004432      83f001         xor eax, 1
0x00004435      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004439      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000443c      84c0           test al, al
0x0000443e      7420           je 0x4460                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004440      4d39fd         cmp r13, r15
0x00004443      7605           jbe 0x444a
0x00004445      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000444a      498d4701       lea rax, [r15 + 1]
0x0000444e      4939c5         cmp r13, rax
0x00004451      7606           jbe 0x4459
0x00004453      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004459      4983c702       add r15, 2
0x0000445d      4531c0         xor r8d, r8d
0x00004460      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00004463      7304           jae 0x4469                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00004465      43881c3e       mov byte [r14 + r15], bl
0x00004469      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000446e      4983c701       add r15, 1
0x00004472      b800000000     mov eax, 0
0x00004477      4584e4         test r12b, r12b
0x0000447a      0f44f8         cmove edi, eax
0x0000447d      40887c240e     mov byte [rsp + 0xe], dil
0x00004482      e931feffff     jmp 0x42b8
0x00004487      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00004490      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00004493      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00004497      83f802         cmp eax, 2
0x0000449a      0f84b8050000   je 0x4a58
0x000044a0      83f805         cmp eax, 5
0x000044a3      0f846f050000   je 0x4a18
0x000044a9      83f802         cmp eax, 2
0x000044ac      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000044b1      0f94c2         sete dl
0x000044b4      4531e4         xor r12d, r12d
0x000044b7      31c0           xor eax, eax
0x000044b9      e93affffff     jmp 0x43f8
0x000044be      6690           nop
0x000044c0      4531d2         xor r10d, r10d
0x000044c3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000044c8      0f8402050000   je 0x49d0
0x000044ce      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000044d3      31d2           xor edx, edx
0x000044d5      31c0           xor eax, eax
0x000044d7      bb27000000     mov ebx, 0x27                           ; '''
0x000044dc      e917ffffff     jmp 0x43f8
0x000044e1      0f1f80000000.  nop dword [rax]
0x000044e8      ba09000000     mov edx, 9
0x000044ed      bb74000000     mov ebx, 0x74                           ; 't'
0x000044f2      837c240802     cmp dword [rsp + 8], 2
0x000044f7      0f94c0         sete al
0x000044fa      2244240f       and al, byte [rsp + 0xf]
0x000044fe      0f854a010000   jne 0x464e
0x00004504      807c240d00     cmp byte [rsp + 0xd], 0
0x00004509      7565           jne 0x4570
0x0000450b      89d3           mov ebx, edx
0x0000450d      4531e4         xor r12d, r12d
0x00004510      31c0           xor eax, eax
0x00004512      807c240f00     cmp byte [rsp + 0xf], 0
0x00004517      0f85eefeffff   jne 0x440b
0x0000451d      e907ffffff     jmp 0x4429                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00004522      660f1f440000   nop word [rax + rax]
0x00004528      ba08000000     mov edx, 8
0x0000452d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004532      ebd0           jmp 0x4504
0x00004534      0f1f4000       nop dword [rax]
0x00004538      837c240802     cmp dword [rsp + 8], 2
0x0000453d      0f84cd030000   je 0x4910
0x00004543      807c240d00     cmp byte [rsp + 0xd], 0
0x00004548      0f8412020000   je 0x4760
0x0000454e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004553      0f8407020000   je 0x4760
0x00004559      48837c241800   cmp qword [rsp + 0x18], 0
0x0000455f      0f85b6030000   jne 0x491b
0x00004565      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000456a      660f1f440000   nop word [rax + rax]
0x00004570      4531e4         xor r12d, r12d
0x00004573      837c240802     cmp dword [rsp + 8], 2
0x00004578      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000457b      807c240f00     cmp byte [rsp + 0xf], 0
0x00004580      89d0           mov eax, edx
0x00004582      0f8550080000   jne 0x4dd8
0x00004588      4489c0         mov eax, r8d
0x0000458b      83f001         xor eax, 1
0x0000458e      20d0           and al, dl
0x00004590      742f           je 0x45c1
0x00004592      4d39fd         cmp r13, r15
0x00004595      7605           jbe 0x459c
0x00004597      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000459c      498d5701       lea rdx, [r15 + 1]
0x000045a0      4939d5         cmp r13, rdx
0x000045a3      7606           jbe 0x45ab
0x000045a5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000045ab      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000045af      4939d5         cmp r13, rdx
0x000045b2      7606           jbe 0x45ba
0x000045b4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000045ba      4983c703       add r15, 3
0x000045be      4189c0         mov r8d, eax
0x000045c1      4d39fd         cmp r13, r15
0x000045c4      7605           jbe 0x45cb
0x000045c6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000045cb      4983c701       add r15, 1
0x000045cf      4883c501       add rbp, 1
0x000045d3      e988feffff     jmp 0x4460
0x000045d8      0f1f84000000.  nop dword [rax + rax]
0x000045e0      807c240d00     cmp byte [rsp + 0xd], 0
0x000045e5      0f85c8010000   jne 0x47b3
0x000045eb      31d2           xor edx, edx
0x000045ed      f644247801     test byte [rsp + 0x78], 1
0x000045f2      0f8413ffffff   je 0x450b
0x000045f8      4883c501       add rbp, 1
0x000045fc      e9b7fcffff     jmp 0x42b8
0x00004601      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00004608      837c240802     cmp dword [rsp + 8], 2
0x0000460d      0f94c2         sete dl
0x00004610      31c0           xor eax, eax
0x00004612      e9e1fdffff     jmp 0x43f8
0x00004617      660f1f840000.  nop word [rax + rax]
0x00004620      ba07000000     mov edx, 7
0x00004625      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000462a      e9d5feffff     jmp 0x4504
0x0000462f      90             nop
0x00004630      837c240802     cmp dword [rsp + 8], 2
0x00004635      0f94c2         sete dl
0x00004638      4885ed         test rbp, rbp
0x0000463b      0f85abfdffff   jne 0x43ec
0x00004641      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004646      20d0           and al, dl
0x00004648      0f84aafdffff   je 0x43f8
0x0000464e      4c89dd         mov rbp, r11
0x00004651      c74424080200.  mov dword [rsp + 8], 2
0x00004659      e9fb060000     jmp 0x4d59
0x0000465e      6690           nop
0x00004660      837c240802     cmp dword [rsp + 8], 2
0x00004665      0f94c2         sete dl
0x00004668      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000466b      ebd4           jmp 0x4641
0x0000466d      0f1f00         nop dword [rax]
0x00004670      837c240802     cmp dword [rsp + 8], 2
0x00004675      bb20000000     mov ebx, 0x20                           ; "@"
0x0000467a      0f94c2         sete dl
0x0000467d      ebc2           jmp 0x4641
0x0000467f      90             nop
0x00004680      ba0d000000     mov edx, 0xd
0x00004685      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000468a      e963feffff     jmp 0x44f2
0x0000468f      90             nop
0x00004690      ba0c000000     mov edx, 0xc
0x00004695      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000469a      e965feffff     jmp 0x4504
0x0000469f      90             nop
0x000046a0      ba0b000000     mov edx, 0xb
0x000046a5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000046aa      e955feffff     jmp 0x4504
0x000046af      90             nop
0x000046b0      ba0a000000     mov edx, 0xa
0x000046b5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000046ba      e933feffff     jmp 0x44f2
0x000046bf      90             nop
0x000046c0      4531d2         xor r10d, r10d
0x000046c3      0f1f440000     nop dword [rax + rax]
0x000046c8      48837c245801   cmp qword [rsp + 0x58], 1
0x000046ce      0f85a4030000   jne 0x4a78
0x000046d4      4c895c2438     mov qword [rsp + 0x38], r11
0x000046d9      4488442430     mov byte [rsp + 0x30], r8b
0x000046de      4488542428     mov byte [rsp + 0x28], r10b
0x000046e3      e8a8d2ffff     call sym.imp.__ctype_b_loc
0x000046e8      488b08         mov rcx, qword [rax]
0x000046eb      0fb6d3         movzx edx, bl
0x000046ee      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000046f4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000046fa      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000046ff      bf01000000     mov edi, 1
0x00004704      0fb70451       movzx eax, word [rcx + rdx*2]
0x00004708      66250040       and ax, 0x4000
0x0000470c      410f95c4       setne r12b
0x00004710      0f94c0         sete al
0x00004713      2244240d       and al, byte [rsp + 0xd]
0x00004717      84c0           test al, al
0x00004719      0f8592090000   jne 0x50b1
0x0000471f      837c240802     cmp dword [rsp + 8], 2
0x00004724      0f94c2         sete dl
0x00004727      e9ccfcffff     jmp 0x43f8
0x0000472c      0f1f4000       nop dword [rax]
0x00004730      410fb619       movzx ebx, byte [r9]
0x00004734      80fb7e         cmp bl, 0x7e
0x00004737      7787           ja 0x46c0
0x00004739      488d0d083b00.  lea rcx, [0x00008248]
0x00004740      0fb6d3         movzx edx, bl
0x00004743      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004747      4801c8         add rax, rcx
0x0000474a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000474c      0f1f4000       nop dword [rax]
0x00004750      4531d2         xor r10d, r10d
0x00004753      807c240d00     cmp byte [rsp + 0xd], 0
0x00004758      0f85f0fdffff   jne 0x454e
0x0000475e      6690           nop
0x00004760      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004765      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000476a      e995fdffff     jmp 0x4504
0x0000476f      90             nop
0x00004770      ba0c000000     mov edx, 0xc
0x00004775      4531d2         xor r10d, r10d
0x00004778      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000477d      e982fdffff     jmp 0x4504
0x00004782      660f1f440000   nop word [rax + rax]
0x00004788      ba0a000000     mov edx, 0xa
0x0000478d      4531d2         xor r10d, r10d
0x00004790      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004795      e958fdffff     jmp 0x44f2
0x0000479a      660f1f440000   nop word [rax + rax]
0x000047a0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000047a5      e9c6fdffff     jmp 0x4570
0x000047aa      660f1f440000   nop word [rax + rax]
0x000047b0      4531d2         xor r10d, r10d
0x000047b3      837c240802     cmp dword [rsp + 8], 2
0x000047b8      0f94c2         sete dl
0x000047bb      807c240f00     cmp byte [rsp + 0xf], 0
0x000047c0      0f85940b0000   jne 0x535a
0x000047c6      4489c0         mov eax, r8d
0x000047c9      4c89f9         mov rcx, r15
0x000047cc      83f001         xor eax, 1
0x000047cf      20d0           and al, dl
0x000047d1      742d           je 0x4800
0x000047d3      4d39fd         cmp r13, r15
0x000047d6      7605           jbe 0x47dd
0x000047d8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000047dd      498d4f01       lea rcx, [r15 + 1]
0x000047e1      4939cd         cmp r13, rcx
0x000047e4      7606           jbe 0x47ec
0x000047e6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000047ec      498d4f02       lea rcx, [r15 + 2]
0x000047f0      4939cd         cmp r13, rcx
0x000047f3      0f8730060000   ja 0x4e29
0x000047f9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000047fd      4189c0         mov r8d, eax
0x00004800      4939cd         cmp r13, rcx
0x00004803      7605           jbe 0x480a
0x00004805      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000480a      837c240802     cmp dword [rsp + 8], 2
0x0000480f      4c8d7901       lea r15, [rcx + 1]
0x00004813      0f8400060000   je 0x4e19
0x00004819      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000481d      4c39d8         cmp rax, r11
0x00004820      7319           jae 0x483b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004822      488b442410     mov rax, qword [rsp + 0x10]
0x00004827      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000482c      88442428       mov byte [rsp + 0x28], al
0x00004830      83e830         sub eax, 0x30
0x00004833      3c09           cmp al, 9
0x00004835      0f862e080000   jbe 0x5069
0x0000483b      4489e0         mov eax, r12d
0x0000483e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004843      4531e4         xor r12d, r12d
0x00004846      e9adfbffff     jmp 0x43f8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000484b      0f1f440000     nop dword [rax + rax]
0x00004850      837c240802     cmp dword [rsp + 8], 2
0x00004855      4589d4         mov r12d, r10d
0x00004858      0f94c2         sete dl
0x0000485b      4531d2         xor r10d, r10d
0x0000485e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004860      e993fbffff     jmp 0x43f8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004865      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004868      837c240802     cmp dword [rsp + 8], 2
0x0000486d      0f94c2         sete dl
0x00004870      4531d2         xor r10d, r10d
0x00004873      e9c0fdffff     jmp 0x4638
0x00004878      0f1f84000000.  nop dword [rax + rax]
0x00004880      837c240802     cmp dword [rsp + 8], 2
0x00004885      0f94c2         sete dl
0x00004888      4531d2         xor r10d, r10d
0x0000488b      4531e4         xor r12d, r12d
0x0000488e      e9aefdffff     jmp 0x4641
0x00004893      0f1f440000     nop dword [rax + rax]
0x00004898      837c240802     cmp dword [rsp + 8], 2
0x0000489d      4589d4         mov r12d, r10d
0x000048a0      bb20000000     mov ebx, 0x20                           ; "@"
0x000048a5      0f94c2         sete dl
0x000048a8      4531d2         xor r10d, r10d
0x000048ab      e991fdffff     jmp 0x4641
0x000048b0      ba0d000000     mov edx, 0xd
0x000048b5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000048b8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000048bd      e930fcffff     jmp 0x44f2
0x000048c2      660f1f440000   nop word [rax + rax]
0x000048c8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000048cd      e99efcffff     jmp 0x4570
0x000048d2      660f1f440000   nop word [rax + rax]
0x000048d8      ba09000000     mov edx, 9
0x000048dd      4531d2         xor r10d, r10d
0x000048e0      bb74000000     mov ebx, 0x74                           ; 't'
0x000048e5      e908fcffff     jmp 0x44f2
0x000048ea      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000048f0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000048f5      e976fcffff     jmp 0x4570
0x000048fa      660f1f440000   nop word [rax + rax]
0x00004900      4531d2         xor r10d, r10d
0x00004903      e998faffff     jmp 0x43a0
0x00004908      0f1f84000000.  nop dword [rax + rax]
0x00004910      807c240f00     cmp byte [rsp + 0xf], 0
0x00004915      0f8565090000   jne 0x5280
0x0000491b      4883c501       add rbp, 1
0x0000491f      4489c0         mov eax, r8d
0x00004922      4531e4         xor r12d, r12d
0x00004925      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000492a      e90dfbffff     jmp 0x443c
0x0000492f      90             nop
0x00004930      837c240802     cmp dword [rsp + 8], 2
0x00004935      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000493a      4589c4         mov r12d, r8d
0x0000493d      4c89dd         mov rbp, r11
0x00004940      0f94c2         sete dl
0x00004943      89d8           mov eax, ebx
0x00004945      4d85ff         test r15, r15
0x00004948      0f94c1         sete cl
0x0000494b      21d0           and eax, edx
0x0000494d      20c8           and al, cl
0x0000494f      0f85610a0000   jne 0x53b6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004955      89d8           mov eax, ebx
0x00004957      83f001         xor eax, 1
0x0000495a      20c2           and dl, al
0x0000495c      0f846a090000   je 0x52cc
0x00004962      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004967      0f845d090000   je 0x52ca
0x0000496d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004972      0f85f5090000   jne 0x536d
0x00004978      4d85ed         test r13, r13
0x0000497b      0f94c0         sete al
0x0000497e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004984      0f95c2         setne dl
0x00004987      20d0           and al, dl
0x00004989      0f841d0a0000   je 0x53ac
0x0000498f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004994      488d1d223600.  lea rbx, [0x00007fbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000499b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000499f      c74424080200.  mov dword [rsp + 8], 2
0x000049a7      41bf01000000   mov r15d, 1
0x000049ad      48c744241801.  mov qword [rsp + 0x18], 1
0x000049b6      c644240f00     mov byte [rsp + 0xf], 0
0x000049bb      48895c2448     mov qword [rsp + 0x48], rbx
0x000049c0      8844247c       mov byte [rsp + 0x7c], al
0x000049c4      e9daf8ffff     jmp 0x42a3
0x000049c9      0f1f80000000.  nop dword [rax]
0x000049d0      807c240f00     cmp byte [rsp + 0xf], 0
0x000049d5      0f85a5080000   jne 0x5280
0x000049db      4d85ed         test r13, r13
0x000049de      0f84fc030000   je 0x4de0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000049e4      31d2           xor edx, edx
0x000049e6      48837c245000   cmp qword [rsp + 0x50], 0
0x000049ec      0f85ee030000   jne 0x4de0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000049f2      4c896c2450     mov qword [rsp + 0x50], r13
0x000049f7      4983c703       add r15, 3
0x000049fb      31c0           xor eax, eax
0x000049fd      448864247c     mov byte [rsp + 0x7c], r12b
0x00004a02      4531c0         xor r8d, r8d
0x00004a05      4989d5         mov r13, rdx
0x00004a08      bb27000000     mov ebx, 0x27                           ; '''
0x00004a0d      e917faffff     jmp 0x4429
0x00004a12      660f1f440000   nop word [rax + rax]
0x00004a18      f644247804     test byte [rsp + 0x78], 4
0x00004a1d      7421           je 0x4a40
0x00004a1f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004a23      4c39d9         cmp rcx, r11
0x00004a26      7318           jae 0x4a40
0x00004a28      488b442410     mov rax, qword [rsp + 0x10]
0x00004a2d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004a32      0f848a070000   je 0x51c2
0x00004a38      0f1f84000000.  nop dword [rax + rax]
0x00004a40      31d2           xor edx, edx
0x00004a42      4531e4         xor r12d, r12d
0x00004a45      31c0           xor eax, eax
0x00004a47      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004a4c      e9a7f9ffff     jmp 0x43f8
0x00004a51      0f1f80000000.  nop dword [rax]
0x00004a58      807c240f00     cmp byte [rsp + 0xf], 0
0x00004a5d      0f851d080000   jne 0x5280
0x00004a63      4531e4         xor r12d, r12d
0x00004a66      31c0           xor eax, eax
0x00004a68      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004a6d      e9b7f9ffff     jmp 0x4429                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004a72      660f1f440000   nop word [rax + rax]
0x00004a78      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004a80      4983fbff       cmp r11, 0xffffffffffffffff
0x00004a84      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004a90      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004a95      752d           jne 0x4ac4
0x00004a97      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004a9c      4488442440     mov byte [rsp + 0x40], r8b
0x00004aa1      4488542438     mov byte [rsp + 0x38], r10b
0x00004aa6      4c894c2430     mov qword [rsp + 0x30], r9
0x00004aab      e860ccffff     call sym.imp.strlen
0x00004ab0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004ab6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00004abc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00004abf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004ac4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00004acc      31c9           xor ecx, ecx
0x00004ace      885c247e       mov byte [rsp + 0x7e], bl
0x00004ad2      448844247d     mov byte [rsp + 0x7d], r8b
0x00004ad7      4889cb         mov rbx, rcx
0x00004ada      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004ae2      4889442438     mov qword [rsp + 0x38], rax
0x00004ae7      448854247f     mov byte [rsp + 0x7f], r10b
0x00004aec      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004af4      4c89742440     mov qword [rsp + 0x40], r14
0x00004af9      4c896c2470     mov qword [rsp + 0x70], r13
0x00004afe      4c895c2430     mov qword [rsp + 0x30], r11
0x00004b03      488b442410     mov rax, qword [rsp + 0x10]
0x00004b08      4c8d741d00     lea r14, [rbp + rbx]
0x00004b0d      488b542430     mov rdx, qword [rsp + 0x30]
0x00004b12      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004b17      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004b1c      4e8d2c30       lea r13, [rax + r14]
0x00004b20      4c29f2         sub rdx, r14
0x00004b23      4c89ee         mov rsi, r13
0x00004b26      e825240000     call sym.rpl_mbrtowc
0x00004b2b      4885c0         test rax, rax
0x00004b2e      4989c7         mov r15, rax
0x00004b31      744e           je 0x4b81
0x00004b33      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004b37      0f8418060000   je 0x5155
0x00004b3d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004b41      0f849a050000   je 0x50e1
0x00004b47      837c240802     cmp dword [rsp + 8], 2
0x00004b4c      0f94c0         sete al
0x00004b4f      2244240f       and al, byte [rsp + 0xf]
0x00004b53      0f8597010000   jne 0x4cf0
0x00004b59      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004b60      e81bceffff     call sym.imp.iswprint
0x00004b65      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004b6a      85c0           test eax, eax
0x00004b6c      b800000000     mov eax, 0
0x00004b71      440f44e0       cmove r12d, eax
0x00004b75      4c01fb         add rbx, r15
0x00004b78      e8f3cdffff     call sym.imp.mbsinit
0x00004b7d      85c0           test eax, eax
0x00004b7f      7482           je 0x4b03
0x00004b81      4489e2         mov edx, r12d
0x00004b84      4889df         mov rdi, rbx
0x00004b87      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004b8d      83f201         xor edx, 1
0x00004b90      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004b95      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004b9b      2254240d       and dl, byte [rsp + 0xd]
0x00004b9f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004ba7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004bac      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004bb1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004bb6      4883ff01       cmp rdi, 1
0x00004bba      0f86fb050000   jbe 0x51bb
0x00004bc0      4889f9         mov rcx, rdi
0x00004bc3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004bc5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00004bcb      4801e9         add rcx, rbp
0x00004bce      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004bd3      e9b6000000     jmp 0x4c8e
0x00004bd8      0f1f84000000.  nop dword [rax + rax]
0x00004be0      837c240802     cmp dword [rsp + 8], 2
0x00004be5      0f94c0         sete al
0x00004be8      4584c9         test r9b, r9b
0x00004beb      0f85af040000   jne 0x50a0
0x00004bf1      4489c6         mov esi, r8d
0x00004bf4      83f601         xor esi, 1
0x00004bf7      4020f0         and al, sil
0x00004bfa      742f           je 0x4c2b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00004bfc      4d39fd         cmp r13, r15
0x00004bff      7605           jbe 0x4c06
0x00004c01      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004c06      498d7701       lea rsi, [r15 + 1]
0x00004c0a      4939f5         cmp r13, rsi
0x00004c0d      7606           jbe 0x4c15                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00004c0f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004c15      498d7702       lea rsi, [r15 + 2]
0x00004c19      4939f5         cmp r13, rsi
0x00004c1c      7606           jbe 0x4c24
0x00004c1e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004c24      4983c703       add r15, 3
0x00004c28      4189c0         mov r8d, eax
0x00004c2b      4d39fd         cmp r13, r15
0x00004c2e      7605           jbe 0x4c35
0x00004c30      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004c35      498d4701       lea rax, [r15 + 1]
0x00004c39      4939c5         cmp r13, rax
0x00004c3c      760d           jbe 0x4c4b
0x00004c3e      89d8           mov eax, ebx
0x00004c40      c0e806         shr al, 6
0x00004c43      83c030         add eax, 0x30
0x00004c46      4388443e01     mov byte [r14 + r15 + 1], al
0x00004c4b      498d4702       lea rax, [r15 + 2]
0x00004c4f      4939c5         cmp r13, rax
0x00004c52      7610           jbe 0x4c64
0x00004c54      89d8           mov eax, ebx
0x00004c56      c0e803         shr al, 3
0x00004c59      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00004c5c      83c030         add eax, 0x30
0x00004c5f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004c64      83e307         and ebx, 7
0x00004c67      4883c501       add rbp, 1
0x00004c6b      4983c703       add r15, 3
0x00004c6f      83c330         add ebx, 0x30
0x00004c72      4839cd         cmp rbp, rcx
0x00004c75      0f83e5f7ffff   jae 0x4460
0x00004c7b      89d6           mov esi, edx
0x00004c7d      4d39fd         cmp r13, r15
0x00004c80      7604           jbe 0x4c86
0x00004c82      43881c3e       mov byte [r14 + r15], bl
0x00004c86      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004c8a      4983c701       add r15, 1
0x00004c8e      84d2           test dl, dl
0x00004c90      0f854affffff   jne 0x4be0
0x00004c96      89f0           mov eax, esi
0x00004c98      83f001         xor eax, 1
0x00004c9b      4421c0         and eax, r8d
0x00004c9e      4584d2         test r10b, r10b
0x00004ca1      740e           je 0x4cb1
0x00004ca3      4d39fd         cmp r13, r15
0x00004ca6      7605           jbe 0x4cad
0x00004ca8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004cad      4983c701       add r15, 1
0x00004cb1      4883c501       add rbp, 1
0x00004cb5      4839cd         cmp rbp, rcx
0x00004cb8      0f837ef7ffff   jae 0x443c
0x00004cbe      84c0           test al, al
0x00004cc0      0f84f8030000   je 0x50be
0x00004cc6      4d39fd         cmp r13, r15
0x00004cc9      7605           jbe 0x4cd0
0x00004ccb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004cd0      498d4701       lea rax, [r15 + 1]
0x00004cd4      4939c5         cmp r13, rax
0x00004cd7      7606           jbe 0x4cdf
0x00004cd9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004cdf      4983c702       add r15, 2
0x00004ce3      4531d2         xor r10d, r10d
0x00004ce6      4531c0         xor r8d, r8d
0x00004ce9      eb92           jmp 0x4c7d
0x00004ceb      0f1f440000     nop dword [rax + rax]
0x00004cf0      4983ff01       cmp r15, 1
0x00004cf4      0f845ffeffff   je 0x4b59
0x00004cfa      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004cff      4a8d0c3f       lea rcx, [rdi + r15]
0x00004d03      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004d08      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004d0c      eb0f           jmp 0x4d1d
0x00004d0e      6690           nop
0x00004d10      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004d14      4939d0         cmp r8, rdx
0x00004d17      0f843cfeffff   je 0x4b59
0x00004d1d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004d20      83e95b         sub ecx, 0x5b
0x00004d23      80f921         cmp cl, 0x21
0x00004d26      77e8           ja 0x4d10                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004d28      be01000000     mov esi, 1
0x00004d2d      48d3e6         shl rsi, cl
0x00004d30      4889f1         mov rcx, rsi
0x00004d33      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00004d3d      4885f1         test rcx, rsi
0x00004d40      74ce           je 0x4d10
0x00004d42      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004d47      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004d4c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004d51      c74424080200.  mov dword [rsp + 8], 2
0x00004d59      807c240d00     cmp byte [rsp + 0xd], 0
0x00004d5e      7410           je 0x4d70
0x00004d60      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004d62      b804000000     mov eax, 4
0x00004d67      0f44442408     cmove eax, dword [rsp + 8]
0x00004d6c      89442408       mov dword [rsp + 8], eax
0x00004d70      4883ec08       sub rsp, 8
0x00004d74      4889e9         mov rcx, rbp
0x00004d77      4c89ee         mov rsi, r13
0x00004d7a      ff742468       push qword [rsp + 0x68]
0x00004d7e      ff742478       push qword [rsp + 0x78]
0x00004d82      4c89f7         mov rdi, r14
0x00004d85      6a00           push 0
0x00004d87      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004d8f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004d94      488b542430     mov rdx, qword [rsp + 0x30]
0x00004d99      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00004d9d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004da2      4883c420       add rsp, 0x20
0x00004da6      4989c7         mov r15, rax
0x00004da9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004db1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00004dba      4c89f8         mov rax, r15
0x00004dbd      0f8500060000   jne 0x53c3
0x00004dc3      4881c4b80000.  add rsp, 0xb8
0x00004dca      5b             pop rbx
0x00004dcb      5d             pop rbp
0x00004dcc      415c           pop r12
0x00004dce      415d           pop r13
0x00004dd0      415e           pop r14
0x00004dd2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004dd4      c3             ret
0x00004dd5      0f1f00         nop dword [rax]
0x00004dd8      4c89dd         mov rbp, r11
0x00004ddb      e979ffffff     jmp 0x4d59
0x00004de0      4d39fd         cmp r13, r15
0x00004de3      7605           jbe 0x4dea
0x00004de5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004dea      498d4701       lea rax, [r15 + 1]
0x00004dee      4939c5         cmp r13, rax
0x00004df1      7606           jbe 0x4df9
0x00004df3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004df9      498d4702       lea rax, [r15 + 2]
0x00004dfd      4939c5         cmp r13, rax
0x00004e00      0f86ec050000   jbe 0x53f2
0x00004e06      4c89ea         mov rdx, r13
0x00004e09      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004e0f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004e14      e9d9fbffff     jmp 0x49f2
0x00004e19      4489e0         mov eax, r12d
0x00004e1c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004e21      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004e24      e900f6ffff     jmp 0x4429                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004e29      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004e2f      e9c5f9ffff     jmp 0x47f9
0x00004e34      85db           test ebx, ebx
0x00004e36      0f8527f4ffff   jne 0x4263
0x00004e3c      c644240d01     mov byte [rsp + 0xd], 1
0x00004e41      4d85ed         test r13, r13
0x00004e44      0f8590050000   jne 0x53da
0x00004e4a      488d056c3100.  lea rax, [0x00007fbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004e51      48c744245000.  mov qword [rsp + 0x50], 0
0x00004e5a      c644240e01     mov byte [rsp + 0xe], 1
0x00004e5f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004e64      4531e4         xor r12d, r12d
0x00004e67      c644240f00     mov byte [rsp + 0xf], 0
0x00004e6c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004e75      4889442448     mov qword [rsp + 0x48], rax
0x00004e7a      41bf01000000   mov r15d, 1
0x00004e80      c74424080200.  mov dword [rsp + 8], 2
0x00004e88      e916f4ffff     jmp 0x42a3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00004e8d      0f1f00         nop dword [rax]
0x00004e90      85db           test ebx, ebx
0x00004e92      0f85f5030000   jne 0x528d
0x00004e98      4d85ed         test r13, r13
0x00004e9b      0f8425020000   je 0x50c6
0x00004ea1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004ea5      c644240e01     mov byte [rsp + 0xe], 1
0x00004eaa      4531e4         xor r12d, r12d
0x00004ead      c644247c00     mov byte [rsp + 0x7c], 0
0x00004eb2      48c744245000.  mov qword [rsp + 0x50], 0
0x00004ebb      488d05f93000.  lea rax, str.l______l                   ; 0x7fbb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004ec2      c644240f00     mov byte [rsp + 0xf], 0
0x00004ec7      c644240d01     mov byte [rsp + 0xd], 1
0x00004ecc      48c744241801.  mov qword [rsp + 0x18], 1
0x00004ed5      41bf01000000   mov r15d, 1
0x00004edb      4889442448     mov qword [rsp + 0x48], rax
0x00004ee0      e9bef3ffff     jmp 0x42a3
0x00004ee5      488d05cf3000.  lea rax, str.l______l                   ; 0x7fbb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004eec      c644240e01     mov byte [rsp + 0xe], 1
0x00004ef1      c644247c00     mov byte [rsp + 0x7c], 0
0x00004ef6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004ef9      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f02      c644240f01     mov byte [rsp + 0xf], 1
0x00004f07      c644240d01     mov byte [rsp + 0xd], 1
0x00004f0c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004f15      4531ff         xor r15d, r15d
0x00004f18      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00004f1d      c74424080500.  mov dword [rsp + 8], 5
0x00004f25      e979f3ffff     jmp 0x42a3
0x00004f2a      c644240e01     mov byte [rsp + 0xe], 1
0x00004f2f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f34      4531e4         xor r12d, r12d
0x00004f37      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f40      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004f45      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004f48      c644240d01     mov byte [rsp + 0xd], 1
0x00004f4d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004f56      48c744244800.  mov qword [rsp + 0x48], 0
0x00004f5f      e93ff3ffff     jmp 0x42a3
0x00004f64      837c24080a     cmp dword [rsp + 8], 0xa
0x00004f69      7456           je 0x4fc1
0x00004f6b      488d354d3000.  lea rsi, [0x00007fbf]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004f72      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004f74      ba05000000     mov edx, 5
0x00004f79      e872c7ffff     call sym.imp.dcgettext
0x00004f7e      4889c1         mov rcx, rax
0x00004f81      4889442468     mov qword [rsp + 0x68], rax
0x00004f86      488d05323000.  lea rax, [0x00007fbf]                   ; "`"
0x00004f8d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004f90      0f8498030000   je 0x532e
0x00004f96      488d35203000.  lea rsi, [0x00007fbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004f9d      31ff           xor edi, edi
0x00004f9f      ba05000000     mov edx, 5
0x00004fa4      e847c7ffff     call sym.imp.dcgettext
0x00004fa9      4889c1         mov rcx, rax
0x00004fac      4889442460     mov qword [rsp + 0x60], rax
0x00004fb1      488d05053000.  lea rax, [0x00007fbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004fb8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00004fbb      0f8483030000   je 0x5344
0x00004fc1      4531ff         xor r15d, r15d
0x00004fc4      85db           test ebx, ebx
0x00004fc6      0f84c1010000   je 0x518d
0x00004fcc      85db           test ebx, ebx
0x00004fce      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004fd3      0f9544240f     setne byte [rsp + 0xf]
0x00004fd8      4531e4         xor r12d, r12d
0x00004fdb      4889df         mov rdi, rbx
0x00004fde      e82dc7ffff     call sym.imp.strlen
0x00004fe3      48895c2448     mov qword [rsp + 0x48], rbx
0x00004fe8      4889442418     mov qword [rsp + 0x18], rax
0x00004fed      c644240e01     mov byte [rsp + 0xe], 1
0x00004ff2      c644247c00     mov byte [rsp + 0x7c], 0
0x00004ff7      48c744245000.  mov qword [rsp + 0x50], 0
0x00005000      c644240d01     mov byte [rsp + 0xd], 1
0x00005005      e999f2ffff     jmp 0x42a3
0x0000500a      c644240e01     mov byte [rsp + 0xe], 1
0x0000500f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005014      4531e4         xor r12d, r12d
0x00005017      48c744245000.  mov qword [rsp + 0x50], 0
0x00005020      c644240f00     mov byte [rsp + 0xf], 0
0x00005025      4531ff         xor r15d, r15d
0x00005028      c644240d00     mov byte [rsp + 0xd], 0
0x0000502d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005036      48c744244800.  mov qword [rsp + 0x48], 0
0x0000503f      e95ff2ffff     jmp 0x42a3
0x00005044      c644240e01     mov byte [rsp + 0xe], 1
0x00005049      c644247c00     mov byte [rsp + 0x7c], 0
0x0000504e      4531e4         xor r12d, r12d
0x00005051      48c744245000.  mov qword [rsp + 0x50], 0
0x0000505a      c644240f01     mov byte [rsp + 0xf], 1
0x0000505f      c644240d01     mov byte [rsp + 0xd], 1
0x00005064      e91af2ffff     jmp 0x4283
0x00005069      4d39fd         cmp r13, r15
0x0000506c      7605           jbe 0x5073
0x0000506e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00005073      488d4102       lea rax, [rcx + 2]
0x00005077      4939c5         cmp r13, rax
0x0000507a      7606           jbe 0x5082
0x0000507c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00005082      4489e0         mov eax, r12d
0x00005085      4c8d7903       lea r15, [rcx + 3]
0x00005089      4531e4         xor r12d, r12d
0x0000508c      bb30000000     mov ebx, 0x30                           ; '0'
0x00005091      e962f3ffff     jmp 0x43f8
0x00005096      662e0f1f8400.  nop word cs:[rax + rax]
0x000050a0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000050a5      4c89dd         mov rbp, r11
0x000050a8      885c240d       mov byte [rsp + 0xd], bl
0x000050ac      e9a8fcffff     jmp 0x4d59
0x000050b1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000050b6      4531e4         xor r12d, r12d
0x000050b9      e902fbffff     jmp 0x4bc0
0x000050be      4531d2         xor r10d, r10d
0x000050c1      e9b7fbffff     jmp 0x4c7d
0x000050c6      48c744245000.  mov qword [rsp + 0x50], 0
0x000050cf      c644240e01     mov byte [rsp + 0xe], 1
0x000050d4      4531e4         xor r12d, r12d
0x000050d7      c644247c00     mov byte [rsp + 0x7c], 0
0x000050dc      e9dafdffff     jmp 0x4ebb
0x000050e1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000050e6      4c89f6         mov rsi, r14
0x000050e9      4c89e9         mov rcx, r13
0x000050ec      4889d8         mov rax, rbx
0x000050ef      4889df         mov rdi, rbx
0x000050f2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000050f8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000050fd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00005105      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00005108      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000510e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005116      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000511b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005120      7326           jae 0x5148
0x00005122      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005125      7510           jne 0x5137
0x00005127      eb1f           jmp 0x5148
0x00005129      0f1f80000000.  nop dword [rax]
0x00005130      41803c0100     cmp byte [r9 + rax], 0
0x00005135      740e           je 0x5145
0x00005137      4883c001       add rax, 1
0x0000513b      488d540500     lea rdx, [rbp + rax]
0x00005140      4939d3         cmp r11, rdx
0x00005143      77eb           ja 0x5130
0x00005145      4889c7         mov rdi, rax
0x00005148      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000514d      4531e4         xor r12d, r12d
0x00005150      e961faffff     jmp 0x4bb6
0x00005155      4889df         mov rdi, rbx
0x00005158      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000515e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005163      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005169      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005171      4531e4         xor r12d, r12d
0x00005174      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005179      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000517e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005183      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005188      e929faffff     jmp 0x4bb6
0x0000518d      488b542468     mov rdx, qword [rsp + 0x68]
0x00005192      0fb602         movzx eax, byte [rdx]
0x00005195      84c0           test al, al
0x00005197      0f842ffeffff   je 0x4fcc
0x0000519d      0f1f00         nop dword [rax]
0x000051a0      4d39fd         cmp r13, r15
0x000051a3      7604           jbe 0x51a9
0x000051a5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000051a9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000051ad      420fb6043a     movzx eax, byte [rdx + r15]
0x000051b2      84c0           test al, al
0x000051b4      75ea           jne 0x51a0
0x000051b6      e911feffff     jmp 0x4fcc
0x000051bb      89d0           mov eax, edx
0x000051bd      e955f5ffff     jmp 0x4717
0x000051c2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000051c6      80fb3e         cmp bl, 0x3e
0x000051c9      0f8771f8ffff   ja 0x4a40
0x000051cf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000051d9      480fa3d8       bt rax, rbx
0x000051dd      0f835df8ffff   jae 0x4a40
0x000051e3      807c240f00     cmp byte [rsp + 0xf], 0
0x000051e8      0f85e4010000   jne 0x53d2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000051ee      4d39fd         cmp r13, r15
0x000051f1      7605           jbe 0x51f8
0x000051f3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000051f8      498d4701       lea rax, [r15 + 1]
0x000051fc      4939c5         cmp r13, rax
0x000051ff      7606           jbe 0x5207
0x00005201      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005207      498d4702       lea rax, [r15 + 2]
0x0000520b      4939c5         cmp r13, rax
0x0000520e      7606           jbe 0x5216
0x00005210      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005216      498d4703       lea rax, [r15 + 3]
0x0000521a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000521d      7606           jbe 0x5225
0x0000521f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005225      4983c704       add r15, 4
0x00005229      31d2           xor edx, edx
0x0000522b      4531e4         xor r12d, r12d
0x0000522e      31c0           xor eax, eax
0x00005230      4889cd         mov rbp, rcx
0x00005233      e9c0f1ffff     jmp 0x43f8
0x00005238      85db           test ebx, ebx
0x0000523a      0f8488010000   je 0x53c8
0x00005240      488d05762d00.  lea rax, [0x00007fbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005247      c644240e01     mov byte [rsp + 0xe], 1
0x0000524c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005251      4531e4         xor r12d, r12d
0x00005254      48c744245000.  mov qword [rsp + 0x50], 0
0x0000525d      c644240f01     mov byte [rsp + 0xf], 1
0x00005262      c644240d00     mov byte [rsp + 0xd], 0
0x00005267      48c744241801.  mov qword [rsp + 0x18], 1
0x00005270      4531ff         xor r15d, r15d
0x00005273      4889442448     mov qword [rsp + 0x48], rax
0x00005278      e926f0ffff     jmp 0x42a3
0x0000527d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00005280      4c89dd         mov rbp, r11
0x00005283      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005288      e9ccfaffff     jmp 0x4d59
0x0000528d      488d05272d00.  lea rax, str.l______l                   ; 0x7fbb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005294      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00005299      c644247c00     mov byte [rsp + 0x7c], 0
0x0000529e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000052a1      48c744245000.  mov qword [rsp + 0x50], 0
0x000052aa      c644240f01     mov byte [rsp + 0xf], 1
0x000052af      c644240d01     mov byte [rsp + 0xd], 1
0x000052b4      48c744241801.  mov qword [rsp + 0x18], 1
0x000052bd      4531ff         xor r15d, r15d
0x000052c0      4889442448     mov qword [rsp + 0x48], rax
0x000052c5      e9d9efffff     jmp 0x42a3
0x000052ca      89d0           mov eax, edx
0x000052cc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000052d1      4885db         test rbx, rbx
0x000052d4      742c           je 0x5302
0x000052d6      84c0           test al, al
0x000052d8      7428           je 0x5302
0x000052da      0fb60b         movzx ecx, byte [rbx]
0x000052dd      4889d8         mov rax, rbx
0x000052e0      84c9           test cl, cl
0x000052e2      741e           je 0x5302
0x000052e4      4c89fa         mov rdx, r15
0x000052e7      4c29f8         sub rax, r15
0x000052ea      4939d5         cmp r13, rdx
0x000052ed      7604           jbe 0x52f3
0x000052ef      41880c16       mov byte [r14 + rdx], cl
0x000052f3      4883c201       add rdx, 1
0x000052f7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000052fb      84c9           test cl, cl
0x000052fd      75eb           jne 0x52ea
0x000052ff      4989d7         mov r15, rdx
0x00005302      4d39fd         cmp r13, r15
0x00005305      0f869efaffff   jbe 0x4da9
0x0000530b      43c6043e00     mov byte [r14 + r15], 0
0x00005310      e994faffff     jmp 0x4da9
0x00005315      837c240802     cmp dword [rsp + 8], 2
0x0000531a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000531f      4c89dd         mov rbp, r11
0x00005322      0f94c0         sete al
0x00005325      885c240d       mov byte [rsp + 0xd], bl
0x00005329      e92bfaffff     jmp 0x4d59
0x0000532e      8b742408       mov esi, dword [rsp + 8]
0x00005332      4889cf         mov rdi, rcx
0x00005335      e8a6edffff     call sym.gettext_quote.part.1
0x0000533a      4889442468     mov qword [rsp + 0x68], rax
0x0000533f      e952fcffff     jmp 0x4f96
0x00005344      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005348      4889cf         mov rdi, rcx
0x0000534b      e890edffff     call sym.gettext_quote.part.1
0x00005350      4889442460     mov qword [rsp + 0x60], rax
0x00005355      e967fcffff     jmp 0x4fc1
0x0000535a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000535f      4c89dd         mov rbp, r11
0x00005362      89d0           mov eax, edx
0x00005364      885c240d       mov byte [rsp + 0xd], bl
0x00005368      e9ecf9ffff     jmp 0x4d59
0x0000536d      4883ec08       sub rsp, 8
0x00005371      41b805000000   mov r8d, 5
0x00005377      4c89d9         mov rcx, r11
0x0000537a      ff742468       push qword [rsp + 0x68]
0x0000537e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00005382      4c89f7         mov rdi, r14
0x00005385      ff742438       push qword [rsp + 0x38]
0x00005389      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00005391      488b542430     mov rdx, qword [rsp + 0x30]
0x00005396      488b742470     mov rsi, qword [rsp + 0x70]
0x0000539b      e830eeffff     call sym.quotearg_buffer_restyled
0x000053a0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000053a4      4989c7         mov r15, rax
0x000053a7      e9fdf9ffff     jmp 0x4da9
0x000053ac      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000053b1      e916ffffff     jmp 0x52cc
0x000053b6      c74424080200.  mov dword [rsp + 8], 2
0x000053be      e996f9ffff     jmp 0x4d59
0x000053c3      e858c3ffff     call sym.imp.__stack_chk_fail
0x000053c8      c644240d00     mov byte [rsp + 0xd], 0
0x000053cd      e96ffaffff     jmp 0x4e41
0x000053d2      4c89dd         mov rbp, r11
0x000053d5      e996f9ffff     jmp 0x4d70
0x000053da      c644240e01     mov byte [rsp + 0xe], 1
0x000053df      31c0           xor eax, eax
0x000053e1      4531e4         xor r12d, r12d
0x000053e4      48c744245000.  mov qword [rsp + 0x50], 0
0x000053ed      e9a2f5ffff     jmp 0x4994
0x000053f2      4c89ea         mov rdx, r13
0x000053f5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000053fa      e9f3f5ffff     jmp 0x49f2
0x000053ff      e85cc2ffff     call sym.imp.abort
0x00005404      6690           nop
0x00005406      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00005410      4157           push r15
0x00005412      4156           push r14
0x00005414      4c63ff         movsxd r15, edi
0x00005417      4155           push r13
0x00005419      4154           push r12
0x0000541b      4989d6         mov r14, rdx
0x0000541e      55             push rbp
0x0000541f      53             push rbx
0x00005420      4889cd         mov rbp, rcx
0x00005423      4883ec28       sub rsp, 0x28
0x00005427      4889742408     mov qword [rsp + 8], rsi
0x0000542c      e83fc2ffff     call sym.imp.__errno_location
0x00005431      4989c5         mov r13, rax
0x00005434      8b00           mov eax, dword [rax]
0x00005436      4585ff         test r15d, r15d
0x00005439      488b1d405c20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20b080:8]=0x20b090 obj.slotvec0
0x00005440      89442418       mov dword [rsp + 0x18], eax
0x00005444      0f8867010000   js 0x55b1
0x0000544a      44393d275c20.  cmp dword [obj.nslots], r15d            ; [0x20b078:4]=1
0x00005451      7f62           jg 0x54b5
0x00005453      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000545a      0f8456010000   je 0x55b6
0x00005460      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005464      488d05255c20.  lea rax, obj.slotvec0                   ; 0x20b090
0x0000546b      4963f4         movsxd rsi, r12d
0x0000546e      48c1e604       shl rsi, 4
0x00005472      4839c3         cmp rbx, rax
0x00005475      0f8415010000   je 0x5590
0x0000547b      4889df         mov rdi, rbx
0x0000547e      e87d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00005483      4889c3         mov rbx, rax
0x00005486      488905f35b20.  mov qword [obj.slotvec], rax            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x0000548d      48633de45b20.  movsxd rdi, dword [obj.nslots]          ; [0x20b078:4]=1
0x00005494      4489e2         mov edx, r12d
0x00005497      31f6           xor esi, esi
0x00005499      29fa           sub edx, edi
0x0000549b      48c1e704       shl rdi, 4
0x0000549f      4863d2         movsxd rdx, edx
0x000054a2      4801df         add rdi, rbx
0x000054a5      48c1e204       shl rdx, 4
0x000054a9      e8f2c2ffff     call sym.imp.memset
0x000054ae      448925c35b20.  mov dword [obj.nslots], r12d            ; [0x20b078:4]=1
0x000054b5      8b4504         mov eax, dword [rbp + 4]
0x000054b8      49c1e704       shl r15, 4
0x000054bc      4883ec08       sub rsp, 8
0x000054c0      4c01fb         add rbx, r15
0x000054c3      4c8d7d08       lea r15, [rbp + 8]
0x000054c7      448b4500       mov r8d, dword [rbp]
0x000054cb      4c8b1b         mov r11, qword [rbx]
0x000054ce      4c8b6308       mov r12, qword [rbx + 8]
0x000054d2      4c89f1         mov rcx, r14
0x000054d5      83c801         or eax, 1
0x000054d8      89442424       mov dword [rsp + 0x24], eax
0x000054dc      ff7530         push qword [rbp + 0x30]
0x000054df      4189c1         mov r9d, eax
0x000054e2      ff7528         push qword [rbp + 0x28]
0x000054e5      4157           push r15
0x000054e7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000054ea      488b542428     mov rdx, qword [rsp + 0x28]
0x000054ef      4c89e7         mov rdi, r12
0x000054f2      4c895c2430     mov qword [rsp + 0x30], r11
0x000054f7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000054fc      4883c420       add rsp, 0x20
0x00005500      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00005505      4939c3         cmp r11, rax
0x00005508      7767           ja 0x5571
0x0000550a      488d7001       lea rsi, [rax + 1]
0x0000550e      488d05eb5c20.  lea rax, obj.slot0                      ; 0x20b200
0x00005515      4939c4         cmp r12, rax
0x00005518      488933         mov qword [rbx], rsi
0x0000551b      7412           je 0x552f
0x0000551d      4c89e7         mov rdi, r12
0x00005520      4889742410     mov qword [rsp + 0x10], rsi
0x00005525      e826c1ffff     call sym.imp.free
0x0000552a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000552f      4889f7         mov rdi, rsi
0x00005532      4889742410     mov qword [rsp + 0x10], rsi
0x00005537      e8640e0000     call sym.xmalloc
0x0000553c      4883ec08       sub rsp, 8
0x00005540      48894308       mov qword [rbx + 8], rax
0x00005544      448b4500       mov r8d, dword [rbp]
0x00005548      ff7530         push qword [rbp + 0x30]
0x0000554b      ff7528         push qword [rbp + 0x28]
0x0000554e      4c89f1         mov rcx, r14
0x00005551      4157           push r15
0x00005553      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005558      4889c7         mov rdi, rax
0x0000555b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005560      488b742430     mov rsi, qword [rsp + 0x30]
0x00005565      4989c4         mov r12, rax
0x00005568      e863ecffff     call sym.quotearg_buffer_restyled
0x0000556d      4883c420       add rsp, 0x20
0x00005571      8b442418       mov eax, dword [rsp + 0x18]
0x00005575      41894500       mov dword [r13], eax
0x00005579      4883c428       add rsp, 0x28
0x0000557d      4c89e0         mov rax, r12
0x00005580      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00005581      5d             pop rbp
0x00005582      415c           pop r12
0x00005584      415d           pop r13
0x00005586      415e           pop r14
0x00005588      415f           pop r15
0x0000558a      c3             ret
0x0000558b      0f1f440000     nop dword [rax + rax]
0x00005590      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00005592      e8690e0000     call sym.xrealloc
0x00005597      660f6f05f15a.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000559f      4889c3         mov rbx, rax
0x000055a2      488905d75a20.  mov qword [obj.slotvec], rax            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x000055a9      0f1100         movups xmmword [rax], xmm0
0x000055ac      e9dcfeffff     jmp 0x548d
0x000055b1      e8aac0ffff     call sym.imp.abort
0x000055b6      e835100000     call sym.xalloc_die
0x000055bb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000055c0      4154           push r12
0x000055c2      55             push rbp
0x000055c3      53             push rbx
0x000055c4      4889fb         mov rbx, rdi
0x000055c7      e8a4c0ffff     call sym.imp.__errno_location
0x000055cc      448b20         mov r12d, dword [rax]
0x000055cf      4889c5         mov rbp, rax
0x000055d2      488d05275d20.  lea rax, obj.default_quoting_options    ; 0x20b300
0x000055d9      4885db         test rbx, rbx
0x000055dc      be38000000     mov esi, 0x38                           ; '8'
0x000055e1      480f44d8       cmove rbx, rax
0x000055e5      4889df         mov rdi, rbx
0x000055e8      e8b30f0000     call sym.xmemdup
0x000055ed      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000055f1      5b             pop rbx
0x000055f2      5d             pop rbp
0x000055f3      415c           pop r12
0x000055f5      c3             ret
0x000055f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00005600      488d05f95c20.  lea rax, obj.default_quoting_options    ; 0x20b300
0x00005607      4885ff         test rdi, rdi
0x0000560a      480f44f8       cmove rdi, rax
0x0000560e      8b07           mov eax, dword [rdi]
0x00005610      c3             ret
0x00005611      0f1f440000     nop dword [rax + rax]
0x00005616      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00005620      488d05d95c20.  lea rax, obj.default_quoting_options    ; 0x20b300
0x00005627      4885ff         test rdi, rdi
0x0000562a      480f44f8       cmove rdi, rax
0x0000562e      8937           mov dword [rdi], esi
0x00005630      c3             ret
0x00005631      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005636      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005640      488d05b95c20.  lea rax, obj.default_quoting_options    ; 0x20b300
0x00005647      4885ff         test rdi, rdi
0x0000564a      89f1           mov ecx, esi
0x0000564c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005650      89f0           mov eax, esi
0x00005652      83e11f         and ecx, 0x1f
0x00005655      c0e805         shr al, 5
0x00005658      0fb6c0         movzx eax, al
0x0000565b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00005660      8b37           mov esi, dword [rdi]
0x00005662      89f0           mov eax, esi
0x00005664      d3e8           shr eax, cl
0x00005666      31c2           xor edx, eax
0x00005668      83e001         and eax, 1
0x0000566b      83e201         and edx, 1
0x0000566e      d3e2           shl edx, cl
0x00005670      31f2           xor edx, esi
0x00005672      8917           mov dword [rdi], edx
0x00005674      c3             ret
0x00005675      90             nop
0x00005676      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00005680      488d05795c20.  lea rax, obj.default_quoting_options    ; 0x20b300
0x00005687      4885ff         test rdi, rdi
0x0000568a      480f44f8       cmove rdi, rax
0x0000568e      8b4704         mov eax, dword [rdi + 4]
0x00005691      897704         mov dword [rdi + 4], esi
0x00005694      c3             ret
0x00005695      90             nop
0x00005696      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000056a0      488d05595c20.  lea rax, obj.default_quoting_options    ; 0x20b300
0x000056a7      4885ff         test rdi, rdi
0x000056aa      480f44f8       cmove rdi, rax
0x000056ae      4885f6         test rsi, rsi
0x000056b1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000056b7      740e           je 0x56c7
0x000056b9      4885d2         test rdx, rdx
0x000056bc      7409           je 0x56c7
0x000056be      48897728       mov qword [rdi + 0x28], rsi
0x000056c2      48895730       mov qword [rdi + 0x30], rdx
0x000056c6      c3             ret
0x000056c7      4883ec08       sub rsp, 8
0x000056cb      e890bfffff     call sym.imp.abort
;-- quotearg_buffer:
0x000056d0      4157           push r15
0x000056d2      4156           push r14
0x000056d4      488d05255c20.  lea rax, obj.default_quoting_options    ; 0x20b300
0x000056db      4155           push r13
0x000056dd      4154           push r12
0x000056df      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000056e2      55             push rbp
0x000056e3      53             push rbx
0x000056e4      4c89c3         mov rbx, r8
0x000056e7      4989f6         mov r14, rsi
0x000056ea      4989d7         mov r15, rdx
0x000056ed      4883ec18       sub rsp, 0x18
0x000056f1      4d85c0         test r8, r8
0x000056f4      480f44d8       cmove rbx, rax
0x000056f8      48894c2408     mov qword [rsp + 8], rcx
0x000056fd      e86ebfffff     call sym.imp.__errno_location
0x00005702      448b20         mov r12d, dword [rax]
0x00005705      4889c5         mov rbp, rax
0x00005708      488d4308       lea rax, [rbx + 8]
0x0000570c      4883ec08       sub rsp, 8
0x00005710      448b4b04       mov r9d, dword [rbx + 4]
0x00005714      ff7330         push qword [rbx + 0x30]
0x00005717      448b03         mov r8d, dword [rbx]
0x0000571a      ff7328         push qword [rbx + 0x28]
0x0000571d      4c89fa         mov rdx, r15
0x00005720      50             push rax
0x00005721      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005726      4c89f6         mov rsi, r14
0x00005729      4c89ef         mov rdi, r13
0x0000572c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005731      44896500       mov dword [rbp], r12d
0x00005735      4883c438       add rsp, 0x38
0x00005739      5b             pop rbx
0x0000573a      5d             pop rbp
0x0000573b      415c           pop r12
0x0000573d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000573f      415e           pop r14
0x00005741      415f           pop r15
0x00005743      c3             ret
0x00005744      6690           nop
0x00005746      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005750      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005752      4156           push r14
0x00005754      488d05a55b20.  lea rax, obj.default_quoting_options    ; 0x20b300
0x0000575b      4155           push r13
0x0000575d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000575f      4989d4         mov r12, rdx
0x00005762      55             push rbp
0x00005763      53             push rbx
0x00005764      4889cb         mov rbx, rcx
0x00005767      4989fe         mov r14, rdi
0x0000576a      4989f7         mov r15, rsi
0x0000576d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005771      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005774      480f44d8       cmove rbx, rax
0x00005778      31ed           xor ebp, ebp
0x0000577a      e8f1beffff     call sym.imp.__errno_location
0x0000577f      4d85e4         test r12, r12
0x00005782      4989c5         mov r13, rax
0x00005785      8b00           mov eax, dword [rax]
0x00005787      400f94c5       sete bpl
0x0000578b      0b6b04         or ebp, dword [rbx + 4]
0x0000578e      4c8d5308       lea r10, [rbx + 8]
0x00005792      4883ec08       sub rsp, 8
0x00005796      448b03         mov r8d, dword [rbx]
0x00005799      4c89f9         mov rcx, r15
0x0000579c      89442414       mov dword [rsp + 0x14], eax
0x000057a0      ff7330         push qword [rbx + 0x30]
0x000057a3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000057a6      ff7328         push qword [rbx + 0x28]
0x000057a9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000057ab      31f6           xor esi, esi
0x000057ad      4189e9         mov r9d, ebp
0x000057b0      31ff           xor edi, edi
0x000057b2      4c89542440     mov qword [rsp + 0x40], r10
0x000057b7      e814eaffff     call sym.quotearg_buffer_restyled
0x000057bc      488d7001       lea rsi, [rax + 1]
0x000057c0      4889442448     mov qword [rsp + 0x48], rax
0x000057c5      4883c420       add rsp, 0x20
0x000057c9      4889f7         mov rdi, rsi
0x000057cc      4889742418     mov qword [rsp + 0x18], rsi
0x000057d1      e8ca0b0000     call sym.xmalloc
0x000057d6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000057db      4883ec08       sub rsp, 8
0x000057df      ff7330         push qword [rbx + 0x30]
0x000057e2      ff7328         push qword [rbx + 0x28]
0x000057e5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000057ea      4189e9         mov r9d, ebp
0x000057ed      448b03         mov r8d, dword [rbx]
0x000057f0      4c89f9         mov rcx, r15
0x000057f3      4c89f2         mov rdx, r14
0x000057f6      4889c7         mov rdi, rax
0x000057f9      4152           push r10
0x000057fb      488b742438     mov rsi, qword [rsp + 0x38]
0x00005800      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00005805      8b44242c       mov eax, dword [rsp + 0x2c]
0x00005809      4883c420       add rsp, 0x20
0x0000580d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005810      41894500       mov dword [r13], eax
0x00005814      7409           je 0x581f
0x00005816      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000581b      4d891c24       mov qword [r12], r11
0x0000581f      488b442410     mov rax, qword [rsp + 0x10]
0x00005824      4883c438       add rsp, 0x38
0x00005828      5b             pop rbx
0x00005829      5d             pop rbp
0x0000582a      415c           pop r12
0x0000582c      415d           pop r13
0x0000582e      415e           pop r14
0x00005830      415f           pop r15
0x00005832      c3             ret
0x00005833      0f1f00         nop dword [rax]
0x00005836      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005840      4889d1         mov rcx, rdx
0x00005843      31d2           xor edx, edx
0x00005845      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000584a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005850      8b0522582000   mov eax, dword [obj.nslots]             ; [0x20b078:4]=1
0x00005856      4154           push r12
0x00005858      4c8b25215820.  mov r12, qword [obj.slotvec]            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x0000585f      55             push rbp
0x00005860      53             push rbx
0x00005861      83f801         cmp eax, 1
0x00005864      7e2b           jle 0x5891                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005866      83e802         sub eax, 2
0x00005869      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000586e      48c1e004       shl rax, 4
0x00005872      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005877      660f1f840000.  nop word [rax + rax]
0x00005880      488b3b         mov rdi, qword [rbx]
0x00005883      4883c310       add rbx, 0x10
0x00005887      e8c4bdffff     call sym.imp.free
0x0000588c      4839eb         cmp rbx, rbp
0x0000588f      75ef           jne 0x5880
0x00005891      498b7c2408     mov rdi, qword [r12 + 8]
0x00005896      488d1d635920.  lea rbx, obj.slot0                      ; 0x20b200
0x0000589d      4839df         cmp rdi, rbx
0x000058a0      7417           je 0x58b9
0x000058a2      e8a9bdffff     call sym.imp.free
0x000058a7      48c705de5720.  mov qword [obj.slotvec0], 0x100         ; [0x20b090:8]=256
0x000058b2      48891ddf5720.  mov qword [0x0020b098], rbx             ; [0x20b098:8]=0x20b200 obj.slot0
0x000058b9      488d1dd05720.  lea rbx, obj.slotvec0                   ; 0x20b090
0x000058c0      4939dc         cmp r12, rbx
0x000058c3      740f           je 0x58d4
0x000058c5      4c89e7         mov rdi, r12
0x000058c8      e883bdffff     call sym.imp.free
0x000058cd      48891dac5720.  mov qword [obj.slotvec], rbx            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x000058d4      5b             pop rbx
0x000058d5      c70599572000.  mov dword [obj.nslots], 1               ; [0x20b078:4]=1
0x000058df      5d             pop rbp
0x000058e0      415c           pop r12
0x000058e2      c3             ret
0x000058e3      0f1f00         nop dword [rax]
0x000058e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000058f0      488d0d095a20.  lea rcx, obj.default_quoting_options    ; 0x20b300
0x000058f7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000058fe      e90dfbffff     jmp sym.quotearg_n_options
0x00005903      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00005906      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005910      488d0de95920.  lea rcx, obj.default_quoting_options    ; 0x20b300
0x00005917      e9f4faffff     jmp sym.quotearg_n_options
0x0000591c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005920      488d0dd95920.  lea rcx, obj.default_quoting_options    ; 0x20b300
0x00005927      4889fe         mov rsi, rdi
0x0000592a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005931      31ff           xor edi, edi
0x00005933      e9d8faffff     jmp sym.quotearg_n_options
0x00005938      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005940      488d0db95920.  lea rcx, obj.default_quoting_options    ; 0x20b300
0x00005947      4889f2         mov rdx, rsi
0x0000594a      4889fe         mov rsi, rdi
0x0000594d      31ff           xor edi, edi
0x0000594f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005954      6690           nop
0x00005956      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005960      4883ec48       sub rsp, 0x48
0x00005964      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005967      64488b142528.  mov rdx, qword fs:[0x28]
0x00005970      4889542438     mov qword [rsp + 0x38], rdx
0x00005975      31d2           xor edx, edx
0x00005977      83fe0a         cmp esi, 0xa
0x0000597a      7468           je 0x59e4
0x0000597c      893424         mov dword [rsp], esi
0x0000597f      4889e1         mov rcx, rsp
0x00005982      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005989      4889c6         mov rsi, rax
0x0000598c      48c744240400.  mov qword [rsp + 4], 0
0x00005995      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000599e      48c744241400.  mov qword [rsp + 0x14], 0
0x000059a7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000059b0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000059b9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000059c2      c74424340000.  mov dword [rsp + 0x34], 0
0x000059ca      e841faffff     call sym.quotearg_n_options
0x000059cf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000059d4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000059dd      750a           jne 0x59e9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000059df      4883c448       add rsp, 0x48
0x000059e3      c3             ret
0x000059e4      e877bcffff     call sym.imp.abort
0x000059e9      e832bdffff     call sym.imp.__stack_chk_fail
0x000059ee      6690           nop
;-- quotearg_n_style_mem:
0x000059f0      4883ec48       sub rsp, 0x48
0x000059f4      4889d0         mov rax, rdx
0x000059f7      4889ca         mov rdx, rcx
0x000059fa      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005a03      48894c2438     mov qword [rsp + 0x38], rcx
0x00005a08      31c9           xor ecx, ecx
0x00005a0a      83fe0a         cmp esi, 0xa
0x00005a0d      7461           je 0x5a70
0x00005a0f      893424         mov dword [rsp], esi
0x00005a12      4889e1         mov rcx, rsp
0x00005a15      4889c6         mov rsi, rax
0x00005a18      48c744240400.  mov qword [rsp + 4], 0
0x00005a21      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005a2a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005a33      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005a3c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005a45      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005a4e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005a56      e8b5f9ffff     call sym.quotearg_n_options
0x00005a5b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005a60      644833142528.  xor rdx, qword fs:[0x28]
0x00005a69      750a           jne 0x5a75
0x00005a6b      4883c448       add rsp, 0x48
0x00005a6f      c3             ret
0x00005a70      e8ebbbffff     call sym.imp.abort
0x00005a75      e8a6bcffff     call sym.imp.__stack_chk_fail
0x00005a7a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005a80      4889f2         mov rdx, rsi
0x00005a83      89fe           mov esi, edi
0x00005a85      31ff           xor edi, edi
0x00005a87      e9d4feffff     jmp sym.quotearg_n_style
0x00005a8c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005a90      4889d1         mov rcx, rdx
0x00005a93      4889f2         mov rdx, rsi
0x00005a96      89fe           mov esi, edi
0x00005a98      31ff           xor edi, edi
0x00005a9a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00005a9f      90             nop
;-- quotearg_char_mem:
0x00005aa0      4883ec48       sub rsp, 0x48
0x00005aa4      89d1           mov ecx, edx
0x00005aa6      64488b042528.  mov rax, qword fs:[0x28]
0x00005aaf      4889442438     mov qword [rsp + 0x38], rax
0x00005ab4      31c0           xor eax, eax
0x00005ab6      488b05735820.  mov rax, qword [0x0020b330]             ; [0x20b330:8]=0
0x00005abd      4989e0         mov r8, rsp
0x00005ac0      83e11f         and ecx, 0x1f
0x00005ac3      660f6f053558.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005acb      4889442430     mov qword [rsp + 0x30], rax
0x00005ad0      89d0           mov eax, edx
0x00005ad2      0f290424       movaps xmmword [rsp], xmm0
0x00005ad6      c0e805         shr al, 5
0x00005ad9      0fb6c0         movzx eax, al
0x00005adc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005ae1      660f6f052758.  movdqa xmm0, xmmword [0x0020b310]
0x00005ae9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005aee      660f6f052a58.  movdqa xmm0, xmmword [0x0020b320]
0x00005af6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005afb      418b11         mov edx, dword [r9]
0x00005afe      89d0           mov eax, edx
0x00005b00      d3e8           shr eax, cl
0x00005b02      f7d0           not eax
0x00005b04      83e001         and eax, 1
0x00005b07      d3e0           shl eax, cl
0x00005b09      4c89c1         mov rcx, r8
0x00005b0c      31d0           xor eax, edx
0x00005b0e      4889f2         mov rdx, rsi
0x00005b11      4889fe         mov rsi, rdi
0x00005b14      418901         mov dword [r9], eax
0x00005b17      31ff           xor edi, edi
0x00005b19      e8f2f8ffff     call sym.quotearg_n_options
0x00005b1e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005b23      644833342528.  xor rsi, qword fs:[0x28]
0x00005b2c      7505           jne 0x5b33
0x00005b2e      4883c448       add rsp, 0x48
0x00005b32      c3             ret
0x00005b33      e8e8bbffff     call sym.imp.__stack_chk_fail
0x00005b38      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005b40      400fbed6       movsx edx, sil
0x00005b44      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005b4b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005b50      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005b55      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005b5c      e93fffffff     jmp sym.quotearg_char_mem
0x00005b61      0f1f440000     nop dword [rax + rax]
0x00005b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005b70      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005b75      e926ffffff     jmp sym.quotearg_char_mem
0x00005b7a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005b80      4883ec48       sub rsp, 0x48
0x00005b84      4889d0         mov rax, rdx
0x00005b87      64488b142528.  mov rdx, qword fs:[0x28]
0x00005b90      4889542438     mov qword [rsp + 0x38], rdx
0x00005b95      31d2           xor edx, edx
0x00005b97      83fe0a         cmp esi, 0xa
0x00005b9a      7468           je 0x5c04
0x00005b9c      893424         mov dword [rsp], esi
0x00005b9f      4889e1         mov rcx, rsp
0x00005ba2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005ba9      4889c6         mov rsi, rax
0x00005bac      48c744240400.  mov qword [rsp + 4], 0
0x00005bb5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00005bbe      48c744241400.  mov qword [rsp + 0x14], 0
0x00005bc7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005bd0      48c744242400.  mov qword [rsp + 0x24], 0
0x00005bd9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005be2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005bea      e821f8ffff     call sym.quotearg_n_options
0x00005bef      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005bf4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005bfd      750a           jne 0x5c09
0x00005bff      4883c448       add rsp, 0x48
0x00005c03      c3             ret
0x00005c04      e857baffff     call sym.imp.abort
0x00005c09      e812bbffff     call sym.imp.__stack_chk_fail
0x00005c0e      6690           nop
;-- quotearg_n_custom_mem:
0x00005c10      4883ec48       sub rsp, 0x48
0x00005c14      4989c9         mov r9, rcx
0x00005c17      488b0d125720.  mov rcx, qword [0x0020b330]             ; [0x20b330:8]=0
0x00005c1e      660f6f05da56.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005c26      64488b042528.  mov rax, qword fs:[0x28]
0x00005c2f      4889442438     mov qword [rsp + 0x38], rax
0x00005c34      31c0           xor eax, eax
0x00005c36      0f290424       movaps xmmword [rsp], xmm0
0x00005c3a      4885f6         test rsi, rsi
0x00005c3d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005c42      c704240a0000.  mov dword [rsp], 0xa
0x00005c49      660f6f05bf56.  movdqa xmm0, xmmword [0x0020b310]
0x00005c51      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005c56      660f6f05c256.  movdqa xmm0, xmmword [0x0020b320]
0x00005c5e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005c63      7432           je 0x5c97
0x00005c65      4885d2         test rdx, rdx
0x00005c68      742d           je 0x5c97
0x00005c6a      4889742428     mov qword [rsp + 0x28], rsi
0x00005c6f      4889542430     mov qword [rsp + 0x30], rdx
0x00005c74      4889e1         mov rcx, rsp
0x00005c77      4c89c2         mov rdx, r8
0x00005c7a      4c89ce         mov rsi, r9
0x00005c7d      e88ef7ffff     call sym.quotearg_n_options
0x00005c82      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005c87      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005c90      750a           jne 0x5c9c
0x00005c92      4883c448       add rsp, 0x48
0x00005c96      c3             ret
0x00005c97      e8c4b9ffff     call sym.imp.abort
0x00005c9c      e87fbaffff     call sym.imp.__stack_chk_fail
0x00005ca1      0f1f440000     nop dword [rax + rax]
0x00005ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005cb0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005cb7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00005cbc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005cc0      4889d1         mov rcx, rdx
0x00005cc3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005cca      4889f2         mov rdx, rsi
0x00005ccd      4889fe         mov rsi, rdi
0x00005cd0      31ff           xor edi, edi
0x00005cd2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005cd7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005ce0      4989c8         mov r8, rcx
0x00005ce3      4889d1         mov rcx, rdx
0x00005ce6      4889f2         mov rdx, rsi
0x00005ce9      4889fe         mov rsi, rdi
0x00005cec      31ff           xor edi, edi
0x00005cee      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005cf3      0f1f00         nop dword [rax]
0x00005cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005d00      488d0d395320.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00005d07      e904f7ffff     jmp sym.quotearg_n_options
0x00005d0c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005d10      488d0d295320.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00005d17      4889f2         mov rdx, rsi
0x00005d1a      4889fe         mov rsi, rdi
0x00005d1d      31ff           xor edi, edi
0x00005d1f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005d24      6690           nop
0x00005d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005d30      488d0d095320.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00005d37      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005d3e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005d43      0f1f00         nop dword [rax]
0x00005d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005d50      488d0de95220.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00005d57      4889fe         mov rsi, rdi
0x00005d5a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005d61      31ff           xor edi, edi
0x00005d63      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005d68      0f1f84000000.  nop dword [rax + rax]
;-- dup_safer:
0x00005d70      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x00005d75      31f6           xor esi, esi
0x00005d77      31c0           xor eax, eax
0x00005d79      e9b20e0000     jmp sym.rpl_fcntl
0x00005d7e      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x00005d80      4157           push r15
0x00005d82      4156           push r14
0x00005d84      4155           push r13
0x00005d86      4154           push r12
0x00005d88      4d89cc         mov r12, r9
0x00005d8b      55             push rbp
0x00005d8c      53             push rbx
0x00005d8d      4889fd         mov rbp, rdi
0x00005d90      4c89c3         mov rbx, r8
0x00005d93      4883ec28       sub rsp, 0x28
0x00005d97      4885f6         test rsi, rsi
0x00005d9a      0f8418010000   je 0x5eb8
0x00005da0      4989d0         mov r8, rdx
0x00005da3      488d15de2600.  lea rdx, [0x00008488]                   ; "%s (%s) %s\n"
0x00005daa      4989c9         mov r9, rcx
0x00005dad      31c0           xor eax, eax
0x00005daf      4889f1         mov rcx, rsi
0x00005db2      be01000000     mov esi, 1
0x00005db7      e8a4bbffff     call sym.imp.__fprintf_chk
0x00005dbc      488d35d82600.  lea rsi, [0x0000849b]                   ; "(C)"
0x00005dc3      31ff           xor edi, edi
0x00005dc5      ba05000000     mov edx, 5
0x00005dca      e821b9ffff     call sym.imp.dcgettext
0x00005dcf      488d15ea2900.  lea rdx, obj.version_etc_copyright      ; 0x87c0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005dd6      4889c1         mov rcx, rax
0x00005dd9      41b8e3070000   mov r8d, 0x7e3
0x00005ddf      be01000000     mov esi, 1
0x00005de4      4889ef         mov rdi, rbp
0x00005de7      31c0           xor eax, eax
0x00005de9      e872bbffff     call sym.imp.__fprintf_chk
0x00005dee      488d35332700.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x8528 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005df5      31ff           xor edi, edi
0x00005df7      ba05000000     mov edx, 5
0x00005dfc      e8efb8ffff     call sym.imp.dcgettext
0x00005e01      4889ee         mov rsi, rbp
0x00005e04      4889c7         mov rdi, rax
0x00005e07      e8e4b9ffff     call sym.imp.fputs_unlocked
0x00005e0c      4983fc09       cmp r12, 9
0x00005e10      0f873a030000   ja 0x6150
0x00005e16      488d15672900.  lea rdx, [0x00008784]
0x00005e1d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005e21      4801d0         add rax, rdx
0x00005e24      ffe0           jmp rax
0x00005e26      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e30      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005e34      488b4310       mov rax, qword [rbx + 0x10]
0x00005e38      488d35592800.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x8698 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00005e3f      4c8b4308       mov r8, qword [rbx + 8]
0x00005e43      ba05000000     mov edx, 5
0x00005e48      31ff           xor edi, edi
0x00005e4a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005e4e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005e52      4c894c2410     mov qword [rsp + 0x10], r9
0x00005e57      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005e5b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005e5f      48890424       mov qword [rsp], rax
0x00005e63      4c89442408     mov qword [rsp + 8], r8
0x00005e68      488b1b         mov rbx, qword [rbx]
0x00005e6b      e880b8ffff     call sym.imp.dcgettext
0x00005e70      4883ec08       sub rsp, 8
0x00005e74      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005e79      4889c2         mov rdx, rax
0x00005e7c      4889d9         mov rcx, rbx
0x00005e7f      be01000000     mov esi, 1
0x00005e84      4889ef         mov rdi, rbp
0x00005e87      31c0           xor eax, eax
0x00005e89      4151           push r9
0x00005e8b      4155           push r13
0x00005e8d      4154           push r12
0x00005e8f      4157           push r15
0x00005e91      4156           push r14
0x00005e93      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005e98      4c8b442438     mov r8, qword [rsp + 0x38]
0x00005e9d      e8bebaffff     call sym.imp.__fprintf_chk
0x00005ea2      4883c430       add rsp, 0x30
0x00005ea6      4883c428       add rsp, 0x28
0x00005eaa      5b             pop rbx
0x00005eab      5d             pop rbp
0x00005eac      415c           pop r12
0x00005eae      415d           pop r13
0x00005eb0      415e           pop r14
0x00005eb2      415f           pop r15
0x00005eb4      c3             ret
0x00005eb5      0f1f00         nop dword [rax]
0x00005eb8      4989c8         mov r8, rcx
0x00005ebb      4889d1         mov rcx, rdx
0x00005ebe      488d15cf2500.  lea rdx, str.s__s                       ; 0x8494 ; "%s %s\n"
0x00005ec5      be01000000     mov esi, 1
0x00005eca      31c0           xor eax, eax
0x00005ecc      e88fbaffff     call sym.imp.__fprintf_chk
0x00005ed1      e9e6feffff     jmp 0x5dbc
0x00005ed6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ee0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005ee4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005ee8      488d35d92700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x86c8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00005eef      488b4310       mov rax, qword [rbx + 0x10]
0x00005ef3      4c8b4308       mov r8, qword [rbx + 8]
0x00005ef7      ba05000000     mov edx, 5
0x00005efc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005f00      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005f04      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005f08      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005f0c      488b1b         mov rbx, qword [rbx]
0x00005f0f      4c89542418     mov qword [rsp + 0x18], r10
0x00005f14      4c894c2410     mov qword [rsp + 0x10], r9
0x00005f19      48890424       mov qword [rsp], rax
0x00005f1d      4c89442408     mov qword [rsp + 8], r8
0x00005f22      31ff           xor edi, edi
0x00005f24      e8c7b7ffff     call sym.imp.dcgettext
0x00005f29      4c8b542418     mov r10, qword [rsp + 0x18]
0x00005f2e      4152           push r10
0x00005f30      e93fffffff     jmp 0x5e74
0x00005f35      0f1f00         nop dword [rax]
0x00005f38      488b1b         mov rbx, qword [rbx]
0x00005f3b      488d355d2500.  lea rsi, str.Written_by__s.             ; 0x849f ; "Written by %s.\n"
0x00005f42      ba05000000     mov edx, 5
0x00005f47      31ff           xor edi, edi
0x00005f49      e8a2b7ffff     call sym.imp.dcgettext
0x00005f4e      4883c428       add rsp, 0x28
0x00005f52      4889d9         mov rcx, rbx
0x00005f55      4889ef         mov rdi, rbp
0x00005f58      5b             pop rbx
0x00005f59      5d             pop rbp
0x00005f5a      415c           pop r12
0x00005f5c      415d           pop r13
0x00005f5e      415e           pop r14
0x00005f60      415f           pop r15
0x00005f62      4889c2         mov rdx, rax
0x00005f65      be01000000     mov esi, 1
0x00005f6a      31c0           xor eax, eax
0x00005f6c      e9efb9ffff     jmp sym.imp.__fprintf_chk
0x00005f71      0f1f80000000.  nop dword [rax]
0x00005f78      4c8b6308       mov r12, qword [rbx + 8]
0x00005f7c      488d352c2500.  lea rsi, str.Written_by__s_and__s.      ; 0x84af ; "Written by %s and %s.\n"
0x00005f83      488b1b         mov rbx, qword [rbx]
0x00005f86      ba05000000     mov edx, 5
0x00005f8b      31ff           xor edi, edi
0x00005f8d      e85eb7ffff     call sym.imp.dcgettext
0x00005f92      4883c428       add rsp, 0x28
0x00005f96      4d89e0         mov r8, r12
0x00005f99      4889d9         mov rcx, rbx
0x00005f9c      4889ef         mov rdi, rbp
0x00005f9f      4889c2         mov rdx, rax
0x00005fa2      be01000000     mov esi, 1
0x00005fa7      5b             pop rbx
0x00005fa8      5d             pop rbp
0x00005fa9      415c           pop r12
0x00005fab      415d           pop r13
0x00005fad      415e           pop r14
0x00005faf      415f           pop r15
0x00005fb1      31c0           xor eax, eax
0x00005fb3      e9a8b9ffff     jmp sym.imp.__fprintf_chk
0x00005fb8      0f1f84000000.  nop dword [rax + rax]
0x00005fc0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005fc4      4c8b6308       mov r12, qword [rbx + 8]
0x00005fc8      488d35f72400.  lea rsi, str.Written_by__s___s__and__s. ; 0x84c6 ; "Written by %s, %s, and %s.\n"
0x00005fcf      488b1b         mov rbx, qword [rbx]
0x00005fd2      ba05000000     mov edx, 5
0x00005fd7      31ff           xor edi, edi
0x00005fd9      e812b7ffff     call sym.imp.dcgettext
0x00005fde      4883c428       add rsp, 0x28
0x00005fe2      4d89e9         mov r9, r13
0x00005fe5      4d89e0         mov r8, r12
0x00005fe8      4889d9         mov rcx, rbx
0x00005feb      4889ef         mov rdi, rbp
0x00005fee      4889c2         mov rdx, rax
0x00005ff1      5b             pop rbx
0x00005ff2      5d             pop rbp
0x00005ff3      415c           pop r12
0x00005ff5      415d           pop r13
0x00005ff7      415e           pop r14
0x00005ff9      415f           pop r15
0x00005ffb      be01000000     mov esi, 1
0x00006000      31c0           xor eax, eax
0x00006002      e959b9ffff     jmp sym.imp.__fprintf_chk
0x00006007      660f1f840000.  nop word [rax + rax]
0x00006010      488d35e12500.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x85f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00006017      ba05000000     mov edx, 5
0x0000601c      31ff           xor edi, edi
0x0000601e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006022      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006026      4c8b6308       mov r12, qword [rbx + 8]
0x0000602a      488b1b         mov rbx, qword [rbx]
0x0000602d      e8beb6ffff     call sym.imp.dcgettext
0x00006032      4883ec08       sub rsp, 8
0x00006036      4156           push r14
0x00006038      4889c2         mov rdx, rax
0x0000603b      4d89e9         mov r9, r13
0x0000603e      4d89e0         mov r8, r12
0x00006041      4889d9         mov rcx, rbx
0x00006044      4889ef         mov rdi, rbp
0x00006047      be01000000     mov esi, 1
0x0000604c      31c0           xor eax, eax
0x0000604e      e80db9ffff     call sym.imp.__fprintf_chk
0x00006053      58             pop rax
0x00006054      5a             pop rdx
0x00006055      4883c428       add rsp, 0x28
0x00006059      5b             pop rbx
0x0000605a      5d             pop rbp
0x0000605b      415c           pop r12
0x0000605d      415d           pop r13
0x0000605f      415e           pop r14
0x00006061      415f           pop r15
0x00006063      c3             ret
0x00006064      0f1f4000       nop dword [rax]
0x00006068      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000606c      488d35a52500.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x8618 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00006073      ba05000000     mov edx, 5
0x00006078      31ff           xor edi, edi
0x0000607a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000607e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006082      4c8b6308       mov r12, qword [rbx + 8]
0x00006086      488b1b         mov rbx, qword [rbx]
0x00006089      e862b6ffff     call sym.imp.dcgettext
0x0000608e      4157           push r15
0x00006090      eba4           jmp 0x6036
0x00006092      660f1f440000   nop word [rax + rax]
0x00006098      4c8b4308       mov r8, qword [rbx + 8]
0x0000609c      4c8b6328       mov r12, qword [rbx + 0x28]
0x000060a0      488d35992500.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x8640 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000060a7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000060ab      4c8b7318       mov r14, qword [rbx + 0x18]
0x000060af      ba05000000     mov edx, 5
0x000060b4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000060b8      31ff           xor edi, edi
0x000060ba      488b1b         mov rbx, qword [rbx]
0x000060bd      4c890424       mov qword [rsp], r8
0x000060c1      e82ab6ffff     call sym.imp.dcgettext
0x000060c6      4883ec08       sub rsp, 8
0x000060ca      4d89e9         mov r9, r13
0x000060cd      4154           push r12
0x000060cf      4157           push r15
0x000060d1      4156           push r14
0x000060d3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000060d8      4889d9         mov rcx, rbx
0x000060db      4889c2         mov rdx, rax
0x000060de      4889ef         mov rdi, rbp
0x000060e1      be01000000     mov esi, 1
0x000060e6      31c0           xor eax, eax
0x000060e8      e873b8ffff     call sym.imp.__fprintf_chk
0x000060ed      4883c420       add rsp, 0x20
0x000060f1      4883c428       add rsp, 0x28
0x000060f5      5b             pop rbx
0x000060f6      5d             pop rbp
0x000060f7      415c           pop r12
0x000060f9      415d           pop r13
0x000060fb      415e           pop r14
0x000060fd      415f           pop r15
0x000060ff      c3             ret
0x00006100      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006104      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006108      488d35592500.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x8668 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000610f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006113      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006117      ba05000000     mov edx, 5
0x0000611c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006120      4c8b4308       mov r8, qword [rbx + 8]
0x00006124      31ff           xor edi, edi
0x00006126      4c894c2408     mov qword [rsp + 8], r9
0x0000612b      488b1b         mov rbx, qword [rbx]
0x0000612e      4c890424       mov qword [rsp], r8
0x00006132      e8b9b5ffff     call sym.imp.dcgettext
0x00006137      4155           push r13
0x00006139      4154           push r12
0x0000613b      4157           push r15
0x0000613d      4156           push r14
0x0000613f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006144      eb8d           jmp 0x60d3
0x00006146      662e0f1f8400.  nop word cs:[rax + rax]
0x00006150      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006154      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006158      ba05000000     mov edx, 5
0x0000615d      488b4310       mov rax, qword [rbx + 0x10]
0x00006161      4c8b4308       mov r8, qword [rbx + 8]
0x00006165      488d35942500.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x8700 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000616c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006170      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006174      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006178      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000617c      4c89542418     mov qword [rsp + 0x18], r10
0x00006181      4c894c2410     mov qword [rsp + 0x10], r9
0x00006186      48890424       mov qword [rsp], rax
0x0000618a      4c89442408     mov qword [rsp + 8], r8
0x0000618f      488b1b         mov rbx, qword [rbx]
0x00006192      e98bfdffff     jmp 0x5f22
0x00006197      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000061a0      4531c9         xor r9d, r9d
0x000061a3      49833800       cmp qword [r8], 0
0x000061a7      7412           je 0x61bb
0x000061a9      0f1f80000000.  nop dword [rax]
0x000061b0      4983c101       add r9, 1
0x000061b4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000061b9      75f5           jne 0x61b0
0x000061bb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000061c0      4883ec68       sub rsp, 0x68
0x000061c4      4d89c2         mov r10, r8
0x000061c7      4531c9         xor r9d, r9d
0x000061ca      64488b042528.  mov rax, qword fs:[0x28]
0x000061d3      4889442458     mov qword [rsp + 0x58], rax
0x000061d8      31c0           xor eax, eax
0x000061da      4989e0         mov r8, rsp
0x000061dd      0f1f00         nop dword [rax]
0x000061e0      418b02         mov eax, dword [r10]
0x000061e3      83f82f         cmp eax, 0x2f
0x000061e6      7742           ja 0x622a
0x000061e8      4189c3         mov r11d, eax
0x000061eb      4d035a10       add r11, qword [r10 + 0x10]
0x000061ef      83c008         add eax, 8
0x000061f2      418902         mov dword [r10], eax
0x000061f5      498b03         mov rax, qword [r11]
0x000061f8      4885c0         test rax, rax
0x000061fb      4b8904c8       mov qword [r8 + r9*8], rax
0x000061ff      740a           je 0x620b
0x00006201      4983c101       add r9, 1
0x00006205      4983f90a       cmp r9, 0xa
0x00006209      75d5           jne 0x61e0
0x0000620b      e870fbffff     call sym.version_etc_arn
0x00006210      488b442458     mov rax, qword [rsp + 0x58]
0x00006215      644833042528.  xor rax, qword fs:[0x28]
0x0000621e      7505           jne 0x6225
0x00006220      4883c468       add rsp, 0x68
0x00006224      c3             ret
0x00006225      e8f6b4ffff     call sym.imp.__stack_chk_fail
0x0000622a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000622e      498d4308       lea rax, [r11 + 8]
0x00006232      49894208       mov qword [r10 + 8], rax
0x00006236      ebbd           jmp 0x61f5
0x00006238      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00006240      55             push rbp
0x00006241      53             push rbx
0x00006242      41ba20000000   mov r10d, 0x20                          ; "@"
0x00006248      4531db         xor r11d, r11d
0x0000624b      4881ecb80000.  sub rsp, 0xb8
0x00006252      64488b042528.  mov rax, qword fs:[0x28]
0x0000625b      4889442478     mov qword [rsp + 0x78], rax
0x00006260      31c0           xor eax, eax
0x00006262      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000626a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00006272      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000627a      4c8d442420     lea r8, [rsp + 0x20]
0x0000627f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00006287      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000628f      4889442410     mov qword [rsp + 0x10], rax
0x00006294      488d84248000.  lea rax, [rsp + 0x80]
0x0000629c      4531c9         xor r9d, r9d
0x0000629f      4889442418     mov qword [rsp + 0x18], rax
0x000062a4      4889c5         mov rbp, rax
0x000062a7      660f1f840000.  nop word [rax + rax]
0x000062b0      4183fa2f       cmp r10d, 0x2f
0x000062b4      7756           ja 0x630c
0x000062b6      4489d0         mov eax, r10d
0x000062b9      41bb01000000   mov r11d, 1
0x000062bf      4183c208       add r10d, 8
0x000062c3      4801e8         add rax, rbp
0x000062c6      488b00         mov rax, qword [rax]
0x000062c9      4885c0         test rax, rax
0x000062cc      4b8904c8       mov qword [r8 + r9*8], rax
0x000062d0      740a           je 0x62dc
0x000062d2      4983c101       add r9, 1
0x000062d6      4983f90a       cmp r9, 0xa
0x000062da      75d4           jne 0x62b0
0x000062dc      4584db         test r11b, r11b
0x000062df      7524           jne 0x6305
0x000062e1      e89afaffff     call sym.version_etc_arn
0x000062e6      488b442478     mov rax, qword [rsp + 0x78]
0x000062eb      644833042528.  xor rax, qword fs:[0x28]
0x000062f4      750a           jne 0x6300
0x000062f6      4881c4b80000.  add rsp, 0xb8
0x000062fd      5b             pop rbx
0x000062fe      5d             pop rbp
0x000062ff      c3             ret
0x00006300      e81bb4ffff     call sym.imp.__stack_chk_fail
0x00006305      4489542408     mov dword [rsp + 8], r10d
0x0000630a      ebd5           jmp 0x62e1
0x0000630c      4889d8         mov rax, rbx
0x0000630f      4883c308       add rbx, 8
0x00006313      ebb1           jmp 0x62c6
0x00006315      90             nop
0x00006316      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006320      53             push rbx
0x00006321      488d35ba2100.  lea rsi, str.Report_bugs_to:__s         ; 0x84e2 ; "\nReport bugs to: %s\n"
0x00006328      ba05000000     mov edx, 5
0x0000632d      31ff           xor edi, edi
0x0000632f      e8bcb3ffff     call sym.imp.dcgettext
0x00006334      488d15bc2100.  lea rdx, str.bug_coreutils_gnu.org      ; 0x84f7 ; "bug-coreutils@gnu.org"
0x0000633b      4889c6         mov rsi, rax
0x0000633e      bf01000000     mov edi, 1
0x00006343      31c0           xor eax, eax
0x00006345      e896b5ffff     call sym.imp.__printf_chk
0x0000634a      488d35bc2100.  lea rsi, str.s_home_page:___s           ; 0x850d ; "%s home page: <%s>\n"
0x00006351      ba05000000     mov edx, 5
0x00006356      31ff           xor edi, edi
0x00006358      e893b3ffff     call sym.imp.dcgettext
0x0000635d      488d0ddc1800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7c40 ; "https://www.gnu.org/software/coreutils/"
0x00006364      488d15ac1a00.  lea rdx, str.GNU_coreutils              ; 0x7e17 ; "GNU coreutils"
0x0000636b      4889c6         mov rsi, rax
0x0000636e      bf01000000     mov edi, 1
0x00006373      31c0           xor eax, eax
0x00006375      e866b5ffff     call sym.imp.__printf_chk
0x0000637a      488b1d274d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00006381      488d35b82300.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x8740 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00006388      31ff           xor edi, edi
0x0000638a      ba05000000     mov edx, 5
0x0000638f      e85cb3ffff     call sym.imp.dcgettext
0x00006394      4889de         mov rsi, rbx
0x00006397      4889c7         mov rdi, rax
0x0000639a      5b             pop rbx
0x0000639b      e950b4ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000063a0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000063a1      4889fb         mov rbx, rdi
0x000063a4      e897b4ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000063a9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000063ac      7505           jne 0x63b3
0x000063ae      4885db         test rbx, rbx
0x000063b1      7502           jne 0x63b5
0x000063b3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000063b4      c3             ret
0x000063b5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000063ba      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000063c0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000063c3      48f7e6         mul rsi
0x000063c6      4889c7         mov rdi, rax
0x000063c9      0f90c0         seto al
0x000063cc      4885ff         test rdi, rdi
0x000063cf      780a           js 0x63db
0x000063d1      0fb6c0         movzx eax, al
0x000063d4      4885c0         test rax, rax
0x000063d7      7502           jne 0x63db
0x000063d9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000063db      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000063df      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000063e4      6690           nop
0x000063e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000063f0      ebae           jmp sym.xmalloc
0x000063f2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000063f6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006400      4885f6         test rsi, rsi
0x00006403      53             push rbx
0x00006404      4889f3         mov rbx, rsi
0x00006407      7505           jne 0x640e
0x00006409      4885ff         test rdi, rdi
0x0000640c      751a           jne 0x6428
0x0000640e      4889de         mov rsi, rbx
0x00006411      e89ab4ffff     call sym.imp.realloc
0x00006416      4885c0         test rax, rax
0x00006419      7505           jne 0x6420
0x0000641b      4885db         test rbx, rbx
0x0000641e      7511           jne 0x6431                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00006420      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00006421      c3             ret
0x00006422      660f1f440000   nop word [rax + rax]
0x00006428      e823b2ffff     call sym.imp.free
0x0000642d      31c0           xor eax, eax
0x0000642f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00006430      c3             ret
0x00006431      e8ba010000     call sym.xalloc_die
0x00006436      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00006440      4889f0         mov rax, rsi
0x00006443      48f7e2         mul rdx
0x00006446      4889c6         mov rsi, rax
0x00006449      0f90c0         seto al
0x0000644c      4885f6         test rsi, rsi
0x0000644f      780a           js 0x645b
0x00006451      0fb6c0         movzx eax, al
0x00006454      4885c0         test rax, rax
0x00006457      7502           jne 0x645b
0x00006459      eba5           jmp sym.xrealloc
0x0000645b      4883ec08       sub rsp, 8
0x0000645f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00006464      6690           nop
0x00006466      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00006470      4885ff         test rdi, rdi
0x00006473      4989d1         mov r9, rdx
0x00006476      488b0e         mov rcx, qword [rsi]
0x00006479      7435           je 0x64b0
0x0000647b      31d2           xor edx, edx
0x0000647d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00006487      49f7f1         div r9
0x0000648a      4839c8         cmp rax, rcx
0x0000648d      763c           jbe 0x64cb
0x0000648f      4889c8         mov rax, rcx
0x00006492      48d1e8         shr rax, 1
0x00006495      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000649a      48890e         mov qword [rsi], rcx
0x0000649d      490fafc9       imul rcx, r9
0x000064a1      4889ce         mov rsi, rcx
0x000064a4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000064a9      0f1f80000000.  nop dword [rax]
0x000064b0      4885c9         test rcx, rcx
0x000064b3      7423           je 0x64d8
0x000064b5      4889c8         mov rax, rcx
0x000064b8      49f7e1         mul r9
0x000064bb      0f90c2         seto dl
0x000064be      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000064c1      0fb6d2         movzx edx, dl
0x000064c4      7805           js 0x64cb
0x000064c6      4885d2         test rdx, rdx
0x000064c9      74cf           je 0x649a
0x000064cb      4883ec08       sub rsp, 8
0x000064cf      e81c010000     call sym.xalloc_die
0x000064d4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000064d8      31d2           xor edx, edx
0x000064da      b880000000     mov eax, 0x80
0x000064df      4531c0         xor r8d, r8d
0x000064e2      49f7f1         div r9
0x000064e5      4885c0         test rax, rax
0x000064e8      410f94c0       sete r8b
0x000064ec      498d0c00       lea rcx, [r8 + rax]
0x000064f0      ebc3           jmp 0x64b5
0x000064f2      0f1f4000       nop dword [rax]
0x000064f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006500      4885ff         test rdi, rdi
0x00006503      488b06         mov rax, qword [rsi]
0x00006506      7428           je 0x6530
0x00006508      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00006512      4839d0         cmp rax, rdx
0x00006515      772a           ja 0x6541
0x00006517      4889c2         mov rdx, rax
0x0000651a      48d1ea         shr rdx, 1
0x0000651d      488d440201     lea rax, [rdx + rax + 1]
0x00006522      488906         mov qword [rsi], rax
0x00006525      4889c6         mov rsi, rax
0x00006528      e9d3feffff     jmp sym.xrealloc
0x0000652d      0f1f00         nop dword [rax]
0x00006530      4885c0         test rax, rax
0x00006533      ba80000000     mov edx, 0x80
0x00006538      480f44c2       cmove rax, rdx
0x0000653c      4885c0         test rax, rax
0x0000653f      79e1           jns 0x6522
0x00006541      4883ec08       sub rsp, 8
0x00006545      e8a6000000     call sym.xalloc_die
0x0000654a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006550      53             push rbx
0x00006551      4889fb         mov rbx, rdi
0x00006554      e847feffff     call sym.xmalloc
0x00006559      4889da         mov rdx, rbx
0x0000655c      31f6           xor esi, esi
0x0000655e      4889c7         mov rdi, rax
0x00006561      5b             pop rbx
0x00006562      e939b2ffff     jmp sym.imp.memset
0x00006567      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006570      4889f8         mov rax, rdi
0x00006573      4883ec08       sub rsp, 8
0x00006577      48f7e6         mul rsi
0x0000657a      0f90c2         seto dl
0x0000657d      4885c0         test rax, rax
0x00006580      7817           js 0x6599
0x00006582      0fb6d2         movzx edx, dl
0x00006585      4885d2         test rdx, rdx
0x00006588      750f           jne 0x6599
0x0000658a      e871b2ffff     call sym.imp.calloc
0x0000658f      4885c0         test rax, rax
0x00006592      7405           je 0x6599
0x00006594      4883c408       add rsp, 8
0x00006598      c3             ret
0x00006599      e852000000     call sym.xalloc_die
0x0000659e      6690           nop
;-- xmemdup:
0x000065a0      55             push rbp
0x000065a1      53             push rbx
0x000065a2      4889fd         mov rbp, rdi
0x000065a5      4889f7         mov rdi, rsi
0x000065a8      4889f3         mov rbx, rsi
0x000065ab      4883ec08       sub rsp, 8
0x000065af      e8ecfdffff     call sym.xmalloc
0x000065b4      4883c408       add rsp, 8
0x000065b8      4889da         mov rdx, rbx
0x000065bb      4889ee         mov rsi, rbp
0x000065be      5b             pop rbx
0x000065bf      5d             pop rbp
0x000065c0      4889c7         mov rdi, rax
0x000065c3      e958b2ffff     jmp sym.imp.memcpy
0x000065c8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000065d0      53             push rbx
0x000065d1      4889fb         mov rbx, rdi
0x000065d4      e837b1ffff     call sym.imp.strlen
0x000065d9      4889df         mov rdi, rbx
0x000065dc      488d7001       lea rsi, [rax + 1]
0x000065e0      5b             pop rbx
0x000065e1      ebbd           jmp sym.xmemdup
0x000065e3      662e0f1f8400.  nop word cs:[rax + rax]
0x000065ed      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000065f0      488d35f82100.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x87ef ; "memory exhausted"
0x000065f7      4883ec08       sub rsp, 8
0x000065fb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00006600      31ff           xor edi, edi
0x00006602      e8e9b0ffff     call sym.imp.dcgettext
0x00006607      8b3d2b4a2000   mov edi, dword [obj.exit_failure]       ; [0x20b038:4]=1
0x0000660d      488d153e1700.  lea rdx, [0x00007d52]                   ; "%s"
0x00006614      4889c1         mov rcx, rax
0x00006617      31f6           xor esi, esi
0x00006619      31c0           xor eax, eax
0x0000661b      e8d0b2ffff     call sym.imp.error
0x00006620      e83bb0ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00006625      662e0f1f8400.  nop word cs:[rax + rax]
0x0000662f      90             nop
;-- collate_error:
0x00006630      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:38
0x00006632      4155           push r13
0x00006634      4189fe         mov r14d, edi
0x00006637      4154           push r12
0x00006639      55             push rbp
0x0000663a      4989d4         mov r12, rdx
0x0000663d      53             push rbx
0x0000663e      4889f3         mov rbx, rsi
0x00006641      488d35b82100.  lea rsi, str.string_comparison_failed   ; ../coreutils-8.31/lib/xmemcoll.c:39 ; 0x8800 ; "string comparison failed"
0x00006648      ba05000000     mov edx, 5
0x0000664d      31ff           xor edi, edi
0x0000664f      4d89c5         mov r13, r8                             ; ../coreutils-8.31/lib/xmemcoll.c:38
0x00006652      4889cd         mov rbp, rcx
0x00006655      e896b0ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/lib/xmemcoll.c:39
0x0000665a      4489f6         mov esi, r14d
0x0000665d      4889c2         mov rdx, rax
0x00006660      31ff           xor edi, edi
0x00006662      31c0           xor eax, eax
0x00006664      e887b2ffff     call sym.imp.error
0x00006669      488d35b02100.  lea rsi, str.Set_LC_ALL__C__to_work_around_the_problem. ; ../coreutils-8.31/lib/xmemcoll.c:40 ; 0x8820 ; "Set LC_ALL='C' to work around the problem."
0x00006670      ba05000000     mov edx, 5
0x00006675      31ff           xor edi, edi
0x00006677      e874b0ffff     call sym.imp.dcgettext
0x0000667c      31f6           xor esi, esi
0x0000667e      4889c2         mov rdx, rax
0x00006681      31ff           xor edi, edi
0x00006683      31c0           xor eax, eax
0x00006685      e866b2ffff     call sym.imp.error
0x0000668a      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x0000668d      4889ea         mov rdx, rbp
0x00006690      be08000000     mov esi, 8
0x00006695      bf01000000     mov edi, 1
0x0000669a      e851f3ffff     call sym.quotearg_n_style_mem
0x0000669f      4c89e1         mov rcx, r12
0x000066a2      4889da         mov rdx, rbx
0x000066a5      be08000000     mov esi, 8
0x000066aa      31ff           xor edi, edi
0x000066ac      4889c5         mov rbp, rax
0x000066af      e83cf3ffff     call sym.quotearg_n_style_mem
0x000066b4      488d35952100.  lea rsi, str.The_strings_compared_were__s_and__s. ; ../coreutils-8.31/lib/xmemcoll.c:42 ; 0x8850 ; "The strings compared were %s and %s."
0x000066bb      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x000066be      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xmemcoll.c:42
0x000066c3      31ff           xor edi, edi
0x000066c5      e826b0ffff     call sym.imp.dcgettext
0x000066ca      4989e8         mov r8, rbp                             ; ../coreutils-8.31/lib/xmemcoll.c:41
0x000066cd      4889d9         mov rcx, rbx
0x000066d0      8b3d62492000   mov edi, dword [obj.exit_failure]       ; [0x20b038:4]=1
0x000066d6      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:45
0x000066d7      5d             pop rbp
0x000066d8      415c           pop r12
0x000066da      415d           pop r13
0x000066dc      415e           pop r14
0x000066de      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x000066e1      31f6           xor esi, esi
0x000066e3      31c0           xor eax, eax
0x000066e5      e906b2ffff     jmp sym.imp.error
0x000066ea      660f1f440000   nop word [rax + rax]
;-- xmemcoll:
0x000066f0      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:55
0x000066f2      4155           push r13
0x000066f4      4989cd         mov r13, rcx
0x000066f7      4154           push r12
0x000066f9      55             push rbp
0x000066fa      4989d4         mov r12, rdx
0x000066fd      53             push rbx
0x000066fe      4889f5         mov rbp, rsi
0x00006701      4889fb         mov rbx, rdi
0x00006704      e8570a0000     call sym.memcoll                        ; ../coreutils-8.31/lib/xmemcoll.c:56
0x00006709      4189c6         mov r14d, eax
0x0000670c      e85fafffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xmemcoll.c:57
0x00006711      8b38           mov edi, dword [rax]
0x00006713      85ff           test edi, edi                           ; ../coreutils-8.31/lib/xmemcoll.c:58
0x00006715      7411           je 0x6728
0x00006717      4d89e8         mov r8, r13                             ; ../coreutils-8.31/lib/xmemcoll.c:59
0x0000671a      4c89e1         mov rcx, r12
0x0000671d      4889ea         mov rdx, rbp
0x00006720      4889de         mov rsi, rbx
0x00006723      e808ffffff     call sym.collate_error
0x00006728      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:61
0x00006729      4489f0         mov eax, r14d
0x0000672c      5d             pop rbp
0x0000672d      415c           pop r12
0x0000672f      415d           pop r13
0x00006731      415e           pop r14
0x00006733      c3             ret
0x00006734      6690           nop
0x00006736      662e0f1f8400.  nop word cs:[rax + rax]
;-- xmemcoll0:
0x00006740      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:70
0x00006742      4155           push r13
0x00006744      4989ce         mov r14, rcx
0x00006747      4154           push r12
0x00006749      55             push rbp
0x0000674a      4989d4         mov r12, rdx
0x0000674d      53             push rbx
0x0000674e      4889fd         mov rbp, rdi
0x00006751      4889f3         mov rbx, rsi
0x00006754      e8b70a0000     call sym.memcoll0                       ; ../coreutils-8.31/lib/xmemcoll.c:71
0x00006759      4189c5         mov r13d, eax
0x0000675c      e80fafffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xmemcoll.c:72
0x00006761      8b38           mov edi, dword [rax]
0x00006763      85ff           test edi, edi                           ; ../coreutils-8.31/lib/xmemcoll.c:73
0x00006765      7413           je 0x677a
0x00006767      488d53ff       lea rdx, [rbx - 1]                      ; ../coreutils-8.31/lib/xmemcoll.c:74
0x0000676b      4d8d46ff       lea r8, [r14 - 1]
0x0000676f      4c89e1         mov rcx, r12
0x00006772      4889ee         mov rsi, rbp
0x00006775      e8b6feffff     call sym.collate_error
0x0000677a      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:76
0x0000677b      4489e8         mov eax, r13d
0x0000677e      5d             pop rbp
0x0000677f      415c           pop r12
0x00006781      415d           pop r13
0x00006783      415e           pop r14
0x00006785      c3             ret
0x00006786      662e0f1f8400.  nop word cs:[rax + rax]
;-- xstrtoul:
0x00006790      4157           push r15
0x00006792      4156           push r14
0x00006794      4155           push r13
0x00006796      4154           push r12
0x00006798      55             push rbp
0x00006799      53             push rbx
0x0000679a      4883ec28       sub rsp, 0x28
0x0000679e      64488b042528.  mov rax, qword fs:[0x28]
0x000067a7      4889442418     mov qword [rsp + 0x18], rax
0x000067ac      31c0           xor eax, eax
0x000067ae      83fa24         cmp edx, 0x24
0x000067b1      0f875e030000   ja 0x6b15
0x000067b7      488d442410     lea rax, [rsp + 0x10]
0x000067bc      4989f7         mov r15, rsi
0x000067bf      4885f6         test rsi, rsi
0x000067c2      4889fd         mov rbp, rdi
0x000067c5      89542408       mov dword [rsp + 8], edx
0x000067c9      4989ce         mov r14, rcx
0x000067cc      4d89c5         mov r13, r8
0x000067cf      4c0f44f8       cmove r15, rax
0x000067d3      e898aeffff     call sym.imp.__errno_location
0x000067d8      c70000000000   mov dword [rax], 0
0x000067de      4989c4         mov r12, rax
0x000067e1      0fb65d00       movzx ebx, byte [rbp]
0x000067e5      e8a6b1ffff     call sym.imp.__ctype_b_loc
0x000067ea      8b542408       mov edx, dword [rsp + 8]
0x000067ee      488b30         mov rsi, qword [rax]
0x000067f1      4889e8         mov rax, rbp
0x000067f4      eb11           jmp 0x6807
0x000067f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006800      4883c001       add rax, 1
0x00006804      0fb618         movzx ebx, byte [rax]
0x00006807      0fb6cb         movzx ecx, bl
0x0000680a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000680f      75ef           jne 0x6800
0x00006811      80fb2d         cmp bl, 0x2d
0x00006814      7452           je 0x6868
0x00006816      4c89fe         mov rsi, r15
0x00006819      4889ef         mov rdi, rbp
0x0000681c      e8ffb0ffff     call sym.imp.strtoul
0x00006821      498b0f         mov rcx, qword [r15]
0x00006824      4889c3         mov rbx, rax
0x00006827      4839e9         cmp rcx, rbp
0x0000682a      742c           je 0x6858
0x0000682c      418b0424       mov eax, dword [r12]
0x00006830      85c0           test eax, eax
0x00006832      7464           je 0x6898
0x00006834      83f822         cmp eax, 0x22
0x00006837      bd01000000     mov ebp, 1
0x0000683c      752a           jne 0x6868
0x0000683e      4d85ed         test r13, r13
0x00006841      7409           je 0x684c
0x00006843      440fb621       movzx r12d, byte [rcx]
0x00006847      4584e4         test r12b, r12b
0x0000684a      757b           jne 0x68c7
0x0000684c      49891e         mov qword [r14], rbx
0x0000684f      eb1c           jmp 0x686d
0x00006851      0f1f80000000.  nop dword [rax]
0x00006858      4d85ed         test r13, r13
0x0000685b      48894c2408     mov qword [rsp + 8], rcx
0x00006860      753e           jne 0x68a0
0x00006862      660f1f440000   nop word [rax + rax]
0x00006868      bd04000000     mov ebp, 4
0x0000686d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00006872      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000687b      89e8           mov eax, ebp
0x0000687d      0f858d020000   jne 0x6b10
0x00006883      4883c428       add rsp, 0x28
0x00006887      5b             pop rbx
0x00006888      5d             pop rbp
0x00006889      415c           pop r12
0x0000688b      415d           pop r13
0x0000688d      415e           pop r14
0x0000688f      415f           pop r15
0x00006891      c3             ret
0x00006892      660f1f440000   nop word [rax + rax]
0x00006898      31ed           xor ebp, ebp
0x0000689a      eba2           jmp 0x683e
0x0000689c      0f1f4000       nop dword [rax]
0x000068a0      440fb66500     movzx r12d, byte [rbp]
0x000068a5      4584e4         test r12b, r12b
0x000068a8      74be           je 0x6868
0x000068aa      410fbef4       movsx esi, r12b
0x000068ae      4c89ef         mov rdi, r13
0x000068b1      31ed           xor ebp, ebp
0x000068b3      e898aeffff     call sym.imp.strchr
0x000068b8      4885c0         test rax, rax
0x000068bb      bb01000000     mov ebx, 1
0x000068c0      488b4c2408     mov rcx, qword [rsp + 8]
0x000068c5      74a1           je 0x6868
0x000068c7      410fbef4       movsx esi, r12b
0x000068cb      4c89ef         mov rdi, r13
0x000068ce      48894c2408     mov qword [rsp + 8], rcx
0x000068d3      e878aeffff     call sym.imp.strchr
0x000068d8      4885c0         test rax, rax
0x000068db      488b4c2408     mov rcx, qword [rsp + 8]
0x000068e0      0f84c6000000   je 0x69ac
0x000068e6      418d4424bb     lea eax, [r12 - 0x45]
0x000068eb      3c2f           cmp al, 0x2f
0x000068ed      7751           ja 0x6940
0x000068ef      48ba45893000.  movabs rdx, 0x814400308945
0x000068f9      480fa3c2       bt rdx, rax
0x000068fd      7341           jae 0x6940
0x000068ff      be30000000     mov esi, 0x30                           ; '0'
0x00006904      4c89ef         mov rdi, r13
0x00006907      48894c2408     mov qword [rsp + 8], rcx
0x0000690c      e83faeffff     call sym.imp.strchr
0x00006911      4885c0         test rax, rax
0x00006914      488b4c2408     mov rcx, qword [rsp + 8]
0x00006919      7425           je 0x6940
0x0000691b      0fb64101       movzx eax, byte [rcx + 1]
0x0000691f      3c44           cmp al, 0x44
0x00006921      740c           je 0x692f
0x00006923      3c69           cmp al, 0x69
0x00006925      0f84cd010000   je 0x6af8
0x0000692b      3c42           cmp al, 0x42
0x0000692d      7511           jne 0x6940
0x0000692f      bf02000000     mov edi, 2
0x00006934      bee8030000     mov esi, 0x3e8
0x00006939      eb0f           jmp 0x694a
0x0000693b      0f1f440000     nop dword [rax + rax]
0x00006940      bf01000000     mov edi, 1
0x00006945      be00040000     mov esi, 0x400
0x0000694a      4183ec42       sub r12d, 0x42
0x0000694e      4180fc35       cmp r12b, 0x35
0x00006952      7758           ja 0x69ac
0x00006954      488d15651f00.  lea rdx, [0x000088c0]
0x0000695b      450fb6e4       movzx r12d, r12b
0x0000695f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006963      4801d0         add rax, rdx
0x00006966      ffe0           jmp rax
0x00006968      4889d8         mov rax, rbx
0x0000696b      48f7e6         mul rsi
0x0000696e      0f80ed010000   jo 0x6b61
0x00006974      4531c0         xor r8d, r8d
0x00006977      48f7e6         mul rsi
0x0000697a      0f80d2010000   jo 0x6b52
0x00006980      4889c3         mov rbx, rax
0x00006983      4409c5         or ebp, r8d
0x00006986      662e0f1f8400.  nop word cs:[rax + rax]
0x00006990      4863ff         movsxd rdi, edi
0x00006993      89e8           mov eax, ebp
0x00006995      4801f9         add rcx, rdi
0x00006998      83c802         or eax, 2
0x0000699b      49890f         mov qword [r15], rcx
0x0000699e      803900         cmp byte [rcx], 0
0x000069a1      49891e         mov qword [r14], rbx
0x000069a4      0f45e8         cmovne ebp, eax
0x000069a7      e9c1feffff     jmp 0x686d
0x000069ac      49891e         mov qword [r14], rbx
0x000069af      83cd02         or ebp, 2
0x000069b2      e9b6feffff     jmp 0x686d
0x000069b7      ba02000000     mov edx, 2
0x000069bc      4889d0         mov rax, rdx
0x000069bf      48f7e3         mul rbx
0x000069c2      0f8096000000   jo 0x6a5e
0x000069c8      4801db         add rbx, rbx
0x000069cb      ebc3           jmp 0x6990
0x000069cd      ba00020000     mov edx, 0x200
0x000069d2      4889d0         mov rax, rdx
0x000069d5      48f7e3         mul rbx
0x000069d8      0f8080000000   jo 0x6a5e
0x000069de      48c1e309       shl rbx, 9
0x000069e2      ebac           jmp 0x6990
0x000069e4      41b807000000   mov r8d, 7
0x000069ea      4531c9         xor r9d, r9d
0x000069ed      0f1f00         nop dword [rax]
0x000069f0      4889d8         mov rax, rbx
0x000069f3      48f7e6         mul rsi
0x000069f6      4889c3         mov rbx, rax
0x000069f9      0f808f010000   jo 0x6b8e
0x000069ff      4183e801       sub r8d, 1
0x00006a03      75eb           jne 0x69f0
0x00006a05      4409cd         or ebp, r9d
0x00006a08      eb86           jmp 0x6990
0x00006a0a      41b808000000   mov r8d, 8
0x00006a10      4531c9         xor r9d, r9d
0x00006a13      0f1f440000     nop dword [rax + rax]
0x00006a18      4889d8         mov rax, rbx
0x00006a1b      48f7e6         mul rsi
0x00006a1e      4889c3         mov rbx, rax
0x00006a21      0f8049010000   jo 0x6b70
0x00006a27      4183e801       sub r8d, 1
0x00006a2b      75eb           jne 0x6a18
0x00006a2d      ebd6           jmp 0x6a05
0x00006a2f      41b804000000   mov r8d, 4
0x00006a35      4531c9         xor r9d, r9d
0x00006a38      4889d8         mov rax, rbx
0x00006a3b      48f7e6         mul rsi
0x00006a3e      4889c3         mov rbx, rax
0x00006a41      0f80fc000000   jo 0x6b43
0x00006a47      4183e801       sub r8d, 1
0x00006a4b      75eb           jne 0x6a38
0x00006a4d      ebb6           jmp 0x6a05
0x00006a4f      4889d8         mov rax, rbx
0x00006a52      48f7e6         mul rsi
0x00006a55      4889c3         mov rbx, rax
0x00006a58      0f8132ffffff   jno 0x6990
0x00006a5e      bd01000000     mov ebp, 1
0x00006a63      4883cbff       or rbx, 0xffffffffffffffff
0x00006a67      e924ffffff     jmp 0x6990
0x00006a6c      0f1f4000       nop dword [rax]
0x00006a70      41b805000000   mov r8d, 5
0x00006a76      4531c9         xor r9d, r9d
0x00006a79      4889d8         mov rax, rbx
0x00006a7c      48f7e6         mul rsi
0x00006a7f      4889c3         mov rbx, rax
0x00006a82      0f80f7000000   jo 0x6b7f
0x00006a88      4183e801       sub r8d, 1
0x00006a8c      75eb           jne 0x6a79
0x00006a8e      e972ffffff     jmp 0x6a05
0x00006a93      41b806000000   mov r8d, 6
0x00006a99      4531c9         xor r9d, r9d
0x00006a9c      4889d8         mov rax, rbx
0x00006a9f      48f7e6         mul rsi
0x00006aa2      4889c3         mov rbx, rax
0x00006aa5      0f8089000000   jo 0x6b34
0x00006aab      4183e801       sub r8d, 1
0x00006aaf      75eb           jne 0x6a9c
0x00006ab1      e94fffffff     jmp 0x6a05
0x00006ab6      ba00040000     mov edx, 0x400
0x00006abb      4889d0         mov rax, rdx
0x00006abe      48f7e3         mul rbx
0x00006ac1      709b           jo 0x6a5e
0x00006ac3      48c1e30a       shl rbx, 0xa
0x00006ac7      e9c4feffff     jmp 0x6990
0x00006acc      4889d8         mov rax, rbx
0x00006acf      48f7e6         mul rsi
0x00006ad2      0f80c5000000   jo 0x6b9d
0x00006ad8      4531c0         xor r8d, r8d
0x00006adb      48f7e6         mul rsi
0x00006ade      0f8193feffff   jno 0x6977
0x00006ae4      41b801000000   mov r8d, 1
0x00006aea      4883c8ff       or rax, 0xffffffffffffffff
0x00006aee      e984feffff     jmp 0x6977
0x00006af3      0f1f440000     nop dword [rax + rax]
0x00006af8      31ff           xor edi, edi
0x00006afa      80790242       cmp byte [rcx + 2], 0x42
0x00006afe      be00040000     mov esi, 0x400
0x00006b03      400f94c7       sete dil
0x00006b07      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00006b0b      e93afeffff     jmp 0x694a
0x00006b10      e80bacffff     call sym.imp.__stack_chk_fail
0x00006b15      488d0d7c1e00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x8998 ; "xstrtoul"
0x00006b1c      488d35551d00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x8878 ; "../coreutils-8.31/lib/xstrtol.c"
0x00006b23      488d3d6e1d00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x8898 ; "0 <= strtol_base && strtol_base <= 36"
0x00006b2a      ba54000000     mov edx, 0x54                           ; 'T'
0x00006b2f      e85cacffff     call sym.imp.__assert_fail
0x00006b34      41b901000000   mov r9d, 1
0x00006b3a      4883cbff       or rbx, 0xffffffffffffffff
0x00006b3e      e968ffffff     jmp 0x6aab
0x00006b43      41b901000000   mov r9d, 1
0x00006b49      4883cbff       or rbx, 0xffffffffffffffff
0x00006b4d      e9f5feffff     jmp 0x6a47
0x00006b52      41b801000000   mov r8d, 1
0x00006b58      4883cbff       or rbx, 0xffffffffffffffff
0x00006b5c      e922feffff     jmp 0x6983
0x00006b61      4883c8ff       or rax, 0xffffffffffffffff
0x00006b65      41b801000000   mov r8d, 1
0x00006b6b      e907feffff     jmp 0x6977
0x00006b70      41b901000000   mov r9d, 1
0x00006b76      4883cbff       or rbx, 0xffffffffffffffff
0x00006b7a      e9a8feffff     jmp 0x6a27
0x00006b7f      41b901000000   mov r9d, 1
0x00006b85      4883cbff       or rbx, 0xffffffffffffffff
0x00006b89      e9fafeffff     jmp 0x6a88
0x00006b8e      41b901000000   mov r9d, 1
0x00006b94      4883cbff       or rbx, 0xffffffffffffffff
0x00006b98      e962feffff     jmp 0x69ff
0x00006b9d      41b801000000   mov r8d, 1
0x00006ba3      4883c8ff       or rax, 0xffffffffffffffff
0x00006ba7      e92fffffff     jmp 0x6adb
0x00006bac      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006bb0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006bb2      55             push rbp
0x00006bb3      53             push rbx
0x00006bb4      4889fb         mov rbx, rdi
0x00006bb7      e874acffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00006bbc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00006bbe      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006bc1      7854           js 0x6c17                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006bc3      e8c8acffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006bc8      85c0           test eax, eax
0x00006bca      752c           jne 0x6bf8
0x00006bcc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00006bcf      e8dc020000     call sym.rpl_fflush
0x00006bd4      85c0           test eax, eax
0x00006bd6      743c           je 0x6c14
0x00006bd8      e893aaffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00006bdd      448b20         mov r12d, dword [rax]
0x00006be0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006be3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006be6      e8e5aaffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00006beb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00006bee      7530           jne 0x6c20
0x00006bf0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006bf1      5d             pop rbp
0x00006bf2      415c           pop r12
0x00006bf4      c3             ret
0x00006bf5      0f1f00         nop dword [rax]
0x00006bf8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00006bfb      e830acffff     call sym.imp.fileno
0x00006c00      31f6           xor esi, esi
0x00006c02      ba01000000     mov edx, 1
0x00006c07      89c7           mov edi, eax
0x00006c09      e872abffff     call sym.imp.lseek
0x00006c0e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006c12      75b8           jne 0x6bcc
0x00006c14      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006c17      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006c18      5d             pop rbp
0x00006c19      415c           pop r12
0x00006c1b      e9b0aaffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00006c20      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00006c24      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00006c29      ebc5           jmp 0x6bf0
0x00006c2b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00006c30      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00006c32      55             push rbp
0x00006c33      89fd           mov ebp, edi
0x00006c35      53             push rbx
0x00006c36      4883ec50       sub rsp, 0x50
0x00006c3a      64488b042528.  mov rax, qword fs:[0x28]
0x00006c43      4889442418     mov qword [rsp + 0x18], rax
0x00006c48      31c0           xor eax, eax
0x00006c4a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00006c4f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00006c51      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00006c56      48894c2438     mov qword [rsp + 0x38], rcx
0x00006c5b      4c89442440     mov qword [rsp + 0x40], r8
0x00006c60      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00006c65      488d442420     lea rax, [rsp + 0x20]
0x00006c6a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00006c6f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00006c76      4889442410     mov qword [rsp + 0x10], rax
0x00006c7b      0f8401020000   je 0x6e82                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00006c81      81fe06040000   cmp esi, 0x406
0x00006c87      7547           jne 0x6cd0
0x00006c89      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00006c8e      833da3462000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20b338:4]=0
0x00006c95      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2930 rip
0x00006c9c      448b6010       mov r12d, dword [rax + 0x10]
0x00006ca0      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00006ca3      0f882a010000   js 0x6dd3                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00006ca9      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00006cab      be06040000     mov esi, 0x406
0x00006cb0      e8fba9ffff     call sym.imp.fcntl
0x00006cb5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00006cb7      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00006cb9      0f8889010000   js 0x6e48                               ; ../coreutils-8.31/lib/fcntl.c:510
0x00006cbf      c7056f462000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20b338:4]=0
0x00006cc9      eb45           jmp 0x6d10
0x00006ccb      0f1f440000     nop dword [rax + rax]
0x00006cd0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00006cd3      742b           je 0x6d00
0x00006cd5      7f59           jg 0x6d30
0x00006cd7      83fe04         cmp esi, 4
0x00006cda      0f84d0000000   je 0x6db0
0x00006ce0      0f8fba000000   jg 0x6da0
0x00006ce6      83fe02         cmp esi, 2
0x00006ce9      0f84c1000000   je 0x6db0
0x00006cef      7f0f           jg 0x6d00
0x00006cf1      83fe01         cmp esi, 1
0x00006cf4      7562           jne 0x6d58
0x00006cf6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006d00      89ef           mov edi, ebp
0x00006d02      31c0           xor eax, eax
0x00006d04      e8a7a9ffff     call sym.imp.fcntl
0x00006d09      89c3           mov ebx, eax
0x00006d0b      0f1f440000     nop dword [rax + rax]
0x00006d10      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00006d15      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006d1e      89d8           mov eax, ebx
0x00006d20      0f8557010000   jne 0x6e7d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00006d26      4883c450       add rsp, 0x50
0x00006d2a      5b             pop rbx
0x00006d2b      5d             pop rbp
0x00006d2c      415c           pop r12
0x00006d2e      c3             ret
0x00006d2f      90             nop
0x00006d30      81fe07040000   cmp esi, 0x407
0x00006d36      7f48           jg 0x6d80
0x00006d38      81fe06040000   cmp esi, 0x406
0x00006d3e      7d70           jge 0x6db0
0x00006d40      81fe01040000   cmp esi, 0x401
0x00006d46      74b8           je 0x6d00
0x00006d48      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00006d4e      7460           je 0x6db0
0x00006d50      81fe00040000   cmp esi, 0x400
0x00006d56      7458           je 0x6db0
0x00006d58      8b0424         mov eax, dword [rsp]
0x00006d5b      83f82f         cmp eax, 0x2f
0x00006d5e      0f8736010000   ja 0x6e9a
0x00006d64      4803442410     add rax, qword [rsp + 0x10]
0x00006d69      488b10         mov rdx, qword [rax]
0x00006d6c      89ef           mov edi, ebp
0x00006d6e      31c0           xor eax, eax
0x00006d70      e83ba9ffff     call sym.imp.fcntl
0x00006d75      89c3           mov ebx, eax
0x00006d77      eb97           jmp 0x6d10
0x00006d79      0f1f80000000.  nop dword [rax]
0x00006d80      81fe09040000   cmp esi, 0x409
0x00006d86      7428           je 0x6db0
0x00006d88      0f8c72ffffff   jl 0x6d00
0x00006d8e      81fe0a040000   cmp esi, 0x40a
0x00006d94      75c2           jne 0x6d58
0x00006d96      e965ffffff     jmp 0x6d00                              ; ../coreutils-8.31/lib/fcntl.c:350
0x00006d9b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00006da0      83fe09         cmp esi, 9
0x00006da3      0f8457ffffff   je 0x6d00
0x00006da9      7f05           jg 0x6db0
0x00006dab      83fe08         cmp esi, 8
0x00006dae      75a8           jne 0x6d58
0x00006db0      8b0424         mov eax, dword [rsp]
0x00006db3      83f82f         cmp eax, 0x2f
0x00006db6      0f87e8000000   ja 0x6ea4
0x00006dbc      4803442410     add rax, qword [rsp + 0x10]
0x00006dc1      8b10           mov edx, dword [rax]
0x00006dc3      89ef           mov edi, ebp
0x00006dc5      31c0           xor eax, eax
0x00006dc7      e8e4a8ffff     call sym.imp.fcntl
0x00006dcc      89c3           mov ebx, eax
0x00006dce      e93dffffff     jmp 0x6d10
0x00006dd3      31f6           xor esi, esi
0x00006dd5      31c0           xor eax, eax
0x00006dd7      e8d4a8ffff     call sym.imp.fcntl
0x00006ddc      85c0           test eax, eax
0x00006dde      89c3           mov ebx, eax
0x00006de0      0f882affffff   js 0x6d10
0x00006de6      833d4b452000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20b338:4]=0
0x00006ded      0f851dffffff   jne 0x6d10
0x00006df3      31c0           xor eax, eax
0x00006df5      be01000000     mov esi, 1
0x00006dfa      89df           mov edi, ebx
0x00006dfc      e8afa8ffff     call sym.imp.fcntl
0x00006e01      85c0           test eax, eax
0x00006e03      781c           js 0x6e21
0x00006e05      83c801         or eax, 1
0x00006e08      be02000000     mov esi, 2
0x00006e0d      89df           mov edi, ebx
0x00006e0f      89c2           mov edx, eax
0x00006e11      31c0           xor eax, eax
0x00006e13      e898a8ffff     call sym.imp.fcntl
0x00006e18      83f8ff         cmp eax, 0xffffffff
0x00006e1b      0f85effeffff   jne 0x6d10
0x00006e21      e84aa8ffff     call sym.imp.__errno_location
0x00006e26      448b20         mov r12d, dword [rax]
0x00006e29      4889c5         mov rbp, rax
0x00006e2c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00006e2e      e87da9ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00006e33      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00006e38      44896500       mov dword [rbp], r12d
0x00006e3c      e9cffeffff     jmp 0x6d10
0x00006e41      0f1f80000000.  nop dword [rax]
0x00006e48      e823a8ffff     call sym.imp.__errno_location
0x00006e4d      833816         cmp dword [rax], 0x16
0x00006e50      0f8569feffff   jne 0x6cbf
0x00006e56      31f6           xor esi, esi
0x00006e58      31c0           xor eax, eax
0x00006e5a      4489e2         mov edx, r12d
0x00006e5d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00006e5f      e84ca8ffff     call sym.imp.fcntl
0x00006e64      85c0           test eax, eax
0x00006e66      89c3           mov ebx, eax
0x00006e68      0f88a2feffff   js 0x6d10
0x00006e6e      c705c0442000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20b338:4]=0
0x00006e78      e976ffffff     jmp 0x6df3
0x00006e7d      e89ea8ffff     call sym.imp.__stack_chk_fail
0x00006e82      488b442410     mov rax, qword [rsp + 0x10]
0x00006e87      31f6           xor esi, esi
0x00006e89      8b5010         mov edx, dword [rax + 0x10]
0x00006e8c      31c0           xor eax, eax
0x00006e8e      e81da8ffff     call sym.imp.fcntl
0x00006e93      89c3           mov ebx, eax
0x00006e95      e976feffff     jmp 0x6d10
0x00006e9a      488b442408     mov rax, qword [rsp + 8]
0x00006e9f      e9c5feffff     jmp 0x6d69
0x00006ea4      488b442408     mov rax, qword [rsp + 8]
0x00006ea9      e913ffffff     jmp 0x6dc1
0x00006eae      6690           nop
;-- rpl_fflush:
0x00006eb0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00006eb3      53             push rbx
0x00006eb4      4889fb         mov rbx, rdi
0x00006eb7      7411           je 0x6eca                               ; ../coreutils-8.31/lib/fflush.c:150
0x00006eb9      e8d2a9ffff     call sym.imp.__freading
0x00006ebe      85c0           test eax, eax
0x00006ec0      7408           je 0x6eca
0x00006ec2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00006ec8      750e           jne 0x6ed8
0x00006eca      4889df         mov rdi, rbx
0x00006ecd      5b             pop rbx
0x00006ece      e97da9ffff     jmp sym.imp.fflush
0x00006ed3      0f1f440000     nop dword [rax + rax]
0x00006ed8      4889df         mov rdi, rbx
0x00006edb      ba01000000     mov edx, 1
0x00006ee0      31f6           xor esi, esi
0x00006ee2      e809000000     call sym.rpl_fseeko
0x00006ee7      4889df         mov rdi, rbx
0x00006eea      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00006eeb      e960a9ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006ef0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006ef4      48394710       cmp qword [rdi + 0x10], rax
0x00006ef8      7406           je 0x6f00                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00006efa      e901aaffff     jmp sym.imp.fseeko
0x00006eff      90             nop
0x00006f00      488b4720       mov rax, qword [rdi + 0x20]
0x00006f04      48394728       cmp qword [rdi + 0x28], rax
0x00006f08      75f0           jne 0x6efa                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00006f0a      48837f4800     cmp qword [rdi + 0x48], 0
0x00006f0f      75e9           jne 0x6efa                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006f11      4154           push r12
0x00006f13      55             push rbp
0x00006f14      4189d4         mov r12d, edx
0x00006f17      53             push rbx
0x00006f18      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00006f1b      4889fb         mov rbx, rdi
0x00006f1e      e80da9ffff     call sym.imp.fileno
0x00006f23      4489e2         mov edx, r12d
0x00006f26      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006f29      89c7           mov edi, eax
0x00006f2b      e850a8ffff     call sym.imp.lseek
0x00006f30      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006f34      740c           je 0x6f42
0x00006f36      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006f39      488983900000.  mov qword [rbx + 0x90], rax
0x00006f40      31c0           xor eax, eax
0x00006f42      5b             pop rbx
0x00006f43      5d             pop rbp
0x00006f44      415c           pop r12
0x00006f46      c3             ret
0x00006f47      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00006f50      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00006f52      4154           push r12
0x00006f54      4989f5         mov r13, rsi
0x00006f57      55             push rbp
0x00006f58      53             push rbx
0x00006f59      4889fb         mov rbx, rdi
0x00006f5c      4989d4         mov r12, rdx
0x00006f5f      4883ec18       sub rsp, 0x18
0x00006f63      64488b042528.  mov rax, qword fs:[0x28]
0x00006f6c      4889442408     mov qword [rsp + 8], rax
0x00006f71      31c0           xor eax, eax
0x00006f73      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00006f78      4885ff         test rdi, rdi
0x00006f7b      480f44d8       cmove rbx, rax
0x00006f7f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006f82      e8b9a7ffff     call sym.imp.mbrtowc
0x00006f87      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00006f8b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006f8e      7620           jbe 0x6fb0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00006f90      4d85e4         test r12, r12
0x00006f93      741b           je 0x6fb0
0x00006f95      31ff           xor edi, edi
0x00006f97      e8b4ceffff     call sym.hard_locale
0x00006f9c      84c0           test al, al
0x00006f9e      7510           jne 0x6fb0
0x00006fa0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00006fa5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00006faa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00006fac      0f1f4000       nop dword [rax]
0x00006fb0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00006fb5      644833142528.  xor rdx, qword fs:[0x28]
0x00006fbe      4889e8         mov rax, rbp
0x00006fc1      750b           jne 0x6fce
0x00006fc3      4883c418       add rsp, 0x18
0x00006fc7      5b             pop rbx
0x00006fc8      5d             pop rbp
0x00006fc9      415c           pop r12
0x00006fcb      415d           pop r13
0x00006fcd      c3             ret
0x00006fce      e84da7ffff     call sym.imp.__stack_chk_fail
0x00006fd3      662e0f1f8400.  nop word cs:[rax + rax]
0x00006fdd      0f1f00         nop dword [rax]
;-- close_stream:
0x00006fe0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006fe2      55             push rbp
0x00006fe3      4889fd         mov rbp, rdi
0x00006fe6      53             push rbx
0x00006fe7      e8b4a6ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00006fec      8b5d00         mov ebx, dword [rbp]
0x00006fef      4889ef         mov rdi, rbp
0x00006ff2      4989c4         mov r12, rax
0x00006ff5      e8b6fbffff     call sym.rpl_fclose
0x00006ffa      83e320         and ebx, 0x20                           ; "@"
0x00006ffd      85db           test ebx, ebx
0x00006fff      7517           jne 0x7018
0x00007001      85c0           test eax, eax
0x00007003      740a           je 0x700f                               ; stdio.h:-186
0x00007005      4d85e4         test r12, r12                           ; stdio.h:-178
0x00007008      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000700d      7439           je 0x7048
0x0000700f      5b             pop rbx
0x00007010      5d             pop rbp
0x00007011      415c           pop r12
0x00007013      c3             ret
0x00007014      0f1f4000       nop dword [rax]
0x00007018      85c0           test eax, eax
0x0000701a      751c           jne 0x7038
0x0000701c      e84fa6ffff     call sym.imp.__errno_location
0x00007021      c70000000000   mov dword [rax], 0
0x00007027      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000702c      5b             pop rbx
0x0000702d      5d             pop rbp
0x0000702e      415c           pop r12
0x00007030      c3             ret
0x00007031      0f1f80000000.  nop dword [rax]
0x00007038      5b             pop rbx
0x00007039      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000703e      5d             pop rbp                                 ; stdio.h:-186
0x0000703f      415c           pop r12
0x00007041      c3             ret
0x00007042      660f1f440000   nop word [rax + rax]
0x00007048      e823a6ffff     call sym.imp.__errno_location
0x0000704d      833809         cmp dword [rax], 9
0x00007050      5b             pop rbx
0x00007051      5d             pop rbp
0x00007052      415c           pop r12                                 ; stdio.h:-178
0x00007054      0f95c0         setne al
0x00007057      0fb6c0         movzx eax, al
0x0000705a      f7d8           neg eax
0x0000705c      c3             ret
0x0000705d      0f1f00         nop dword [rax]
;-- locale_charset:
0x00007060      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00007064      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00007069      e8f2a7ffff     call sym.imp.nl_langinfo
0x0000706e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00007071      741d           je 0x7090
0x00007073      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00007076      488d15241900.  lea rdx, str.ASCII                      ; 0x89a1 ; "ASCII"
0x0000707d      480f44c2       cmove rax, rdx
0x00007081      4883c408       add rsp, 8
0x00007085      c3             ret
0x00007086      662e0f1f8400.  nop word cs:[rax + rax]
0x00007090      488d050a1900.  lea rax, str.ASCII                      ; 0x89a1 ; "ASCII"
0x00007097      4883c408       add rsp, 8
0x0000709b      c3             ret
0x0000709c      0f1f4000       nop dword [rax]
;-- strcoll_loop:
0x000070a0      4157           push r15                                ; ../coreutils-8.31/lib/memcoll.c:36
0x000070a2      4156           push r14
0x000070a4      4989ce         mov r14, rcx
0x000070a7      4155           push r13
0x000070a9      4154           push r12
0x000070ab      4989f5         mov r13, rsi
0x000070ae      55             push rbp
0x000070af      53             push rbx
0x000070b0      4989fc         mov r12, rdi
0x000070b3      4889d5         mov rbp, rdx
0x000070b6      4883ec08       sub rsp, 8
0x000070ba      e8b1a5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:39
0x000070bf      4989c7         mov r15, rax
0x000070c2      eb2f           jmp 0x70f3
0x000070c4      0f1f4000       nop dword [rax]
0x000070c8      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/memcoll.c:44
0x000070cb      e840a6ffff     call sym.imp.strlen
0x000070d0      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/memcoll.c:45
0x000070d3      488d5801       lea rbx, [rax + 1]                      ; ../coreutils-8.31/lib/memcoll.c:44
0x000070d7      e834a6ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/memcoll.c:45
0x000070dc      4883c001       add rax, 1
0x000070e0      4901dc         add r12, rbx                            ; ../coreutils-8.31/lib/memcoll.c:46
0x000070e3      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/memcoll.c:47
0x000070e6      4929c6         sub r14, rax                            ; ../coreutils-8.31/lib/memcoll.c:49
0x000070e9      4929dd         sub r13, rbx                            ; ../coreutils-8.31/lib/memcoll.c:51
0x000070ec      7432           je 0x7120
0x000070ee      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/memcoll.c:53
0x000070f1      744d           je 0x7140
0x000070f3      41c707000000.  mov dword [r15], 0                      ; ../coreutils-8.31/lib/memcoll.c:39
0x000070fa      4889ee         mov rsi, rbp
0x000070fd      4c89e7         mov rdi, r12
0x00007100      e86ba7ffff     call sym.imp.strcoll
0x00007105      85c0           test eax, eax
0x00007107      74bf           je 0x70c8
0x00007109      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/memcoll.c:58
0x0000710d      5b             pop rbx
0x0000710e      5d             pop rbp
0x0000710f      415c           pop r12
0x00007111      415d           pop r13
0x00007113      415e           pop r14
0x00007115      415f           pop r15
0x00007117      c3             ret
0x00007118      0f1f84000000.  nop dword [rax + rax]
0x00007120      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/memcoll.c:52
0x00007122      4d85f6         test r14, r14
0x00007125      0f95c0         setne al
0x00007128      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/memcoll.c:58
0x0000712c      5b             pop rbx
0x0000712d      f7d8           neg eax                                 ; ../coreutils-8.31/lib/memcoll.c:52
0x0000712f      5d             pop rbp                                 ; ../coreutils-8.31/lib/memcoll.c:58
0x00007130      415c           pop r12
0x00007132      415d           pop r13
0x00007134      415e           pop r14
0x00007136      415f           pop r15
0x00007138      c3             ret
0x00007139      0f1f80000000.  nop dword [rax]
0x00007140      4883c408       add rsp, 8
0x00007144      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/memcoll.c:54
0x00007149      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcoll.c:58
0x0000714a      5d             pop rbp
0x0000714b      415c           pop r12
0x0000714d      415d           pop r13
0x0000714f      415e           pop r14
0x00007151      415f           pop r15
0x00007153      c3             ret
0x00007154      6690           nop
0x00007156      662e0f1f8400.  nop word cs:[rax + rax]
;-- memcoll:
0x00007160      4157           push r15                                ; ../coreutils-8.31/lib/memcoll.c:67
0x00007162      4156           push r14
0x00007164      4989d7         mov r15, rdx
0x00007167      4155           push r13
0x00007169      4154           push r12
0x0000716b      4989fe         mov r14, rdi
0x0000716e      55             push rbp
0x0000716f      53             push rbx
0x00007170      4889cd         mov rbp, rcx
0x00007173      4889f3         mov rbx, rsi
0x00007176      4883ec18       sub rsp, 0x18
0x0000717a      4839ce         cmp rsi, rcx                            ; ../coreutils-8.31/lib/memcoll.c:74
0x0000717d      7513           jne 0x7192
0x0000717f      4889f2         mov rdx, rsi
0x00007182      4c89fe         mov rsi, r15
0x00007185      e856a6ffff     call sym.imp.memcmp
0x0000718a      85c0           test eax, eax
0x0000718c      89442408       mov dword [rsp + 8], eax
0x00007190      7466           je 0x71f8
0x00007192      4d8d2c1e       lea r13, [r14 + rbx]                    ; ../coreutils-8.31/lib/memcoll.c:81
0x00007196      4d8d242f       lea r12, [r15 + rbp]                    ; ../coreutils-8.31/lib/memcoll.c:82
0x0000719a      488d4d01       lea rcx, [rbp + 1]                      ; ../coreutils-8.31/lib/memcoll.c:87
0x0000719e      488d7301       lea rsi, [rbx + 1]
0x000071a2      4c89fa         mov rdx, r15
0x000071a5      4c89f7         mov rdi, r14
0x000071a8      450fb64d00     movzx r9d, byte [r13]                   ; ../coreutils-8.31/lib/memcoll.c:81
0x000071ad      450fb60424     movzx r8d, byte [r12]                   ; ../coreutils-8.31/lib/memcoll.c:82
0x000071b2      41c6450000     mov byte [r13], 0                       ; ../coreutils-8.31/lib/memcoll.c:84
0x000071b7      41c6042400     mov byte [r12], 0                       ; ../coreutils-8.31/lib/memcoll.c:85
0x000071bc      44884c240f     mov byte [rsp + 0xf], r9b               ; ../coreutils-8.31/lib/memcoll.c:81
0x000071c1      4488442408     mov byte [rsp + 8], r8b                 ; ../coreutils-8.31/lib/memcoll.c:82
0x000071c6      e8d5feffff     call sym.strcoll_loop                   ; ../coreutils-8.31/lib/memcoll.c:87
0x000071cb      440fb64c240f   movzx r9d, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/memcoll.c:89
0x000071d1      440fb6442408   movzx r8d, byte [rsp + 8]               ; ../coreutils-8.31/lib/memcoll.c:90
0x000071d7      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/memcoll.c:87
0x000071d9      45884d00       mov byte [r13], r9b                     ; ../coreutils-8.31/lib/memcoll.c:89
0x000071dd      45880424       mov byte [r12], r8b                     ; ../coreutils-8.31/lib/memcoll.c:90
0x000071e1      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/memcoll.c:94
0x000071e5      89d0           mov eax, edx
0x000071e7      5b             pop rbx
0x000071e8      5d             pop rbp
0x000071e9      415c           pop r12
0x000071eb      415d           pop r13
0x000071ed      415e           pop r14
0x000071ef      415f           pop r15
0x000071f1      c3             ret
0x000071f2      660f1f440000   nop word [rax + rax]
0x000071f8      e873a4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:76
0x000071fd      8b542408       mov edx, dword [rsp + 8]                ; ../coreutils-8.31/lib/memcoll.c:77
0x00007201      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/memcoll.c:76
0x00007207      ebd8           jmp 0x71e1                              ; ../coreutils-8.31/lib/memcoll.c:77
0x00007209      0f1f80000000.  nop dword [rax]
;-- memcoll0:
0x00007210      4154           push r12                                ; ../coreutils-8.31/lib/memcoll.c:103
0x00007212      55             push rbp
0x00007213      4989d4         mov r12, rdx
0x00007216      53             push rbx
0x00007217      4889fd         mov rbp, rdi
0x0000721a      4889f3         mov rbx, rsi
0x0000721d      4883ec10       sub rsp, 0x10
0x00007221      4839ce         cmp rsi, rcx                            ; ../coreutils-8.31/lib/memcoll.c:104
0x00007224      7519           jne 0x723f
0x00007226      4889f2         mov rdx, rsi
0x00007229      4c89e6         mov rsi, r12
0x0000722c      48894c2408     mov qword [rsp + 8], rcx
0x00007231      e8aaa5ffff     call sym.imp.memcmp
0x00007236      85c0           test eax, eax
0x00007238      488b4c2408     mov rcx, qword [rsp + 8]
0x0000723d      7419           je 0x7258
0x0000723f      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/memcoll.c:111
0x00007243      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/memcoll.c:110
0x00007246      4889de         mov rsi, rbx
0x00007249      4889ef         mov rdi, rbp
0x0000724c      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcoll.c:111
0x0000724d      5d             pop rbp
0x0000724e      415c           pop r12
0x00007250      e94bfeffff     jmp sym.strcoll_loop                    ; ../coreutils-8.31/lib/memcoll.c:110
0x00007255      0f1f00         nop dword [rax]
0x00007258      e813a4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:106
0x0000725d      c70000000000   mov dword [rax], 0
0x00007263      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/memcoll.c:111
0x00007267      31c0           xor eax, eax
0x00007269      5b             pop rbx
0x0000726a      5d             pop rbp
0x0000726b      415c           pop r12
0x0000726d      c3             ret
0x0000726e      6690           nop
;-- __libc_csu_init:
0x00007270      4157           push r15
0x00007272      4156           push r14
0x00007274      4989d7         mov r15, rdx
0x00007277      4155           push r13
0x00007279      4154           push r12
0x0000727b      4c8d252e3820.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20aab0 ; "0*"
0x00007282      55             push rbp
0x00007283      488d2d2e3820.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20aab8
0x0000728a      53             push rbx
0x0000728b      4189fd         mov r13d, edi
0x0000728e      4989f6         mov r14, rsi
0x00007291      4c29e5         sub rbp, r12
0x00007294      4883ec08       sub rsp, 8
0x00007298      48c1fd03       sar rbp, 3
0x0000729c      e85fa3ffff     call sym._init
0x000072a1      4885ed         test rbp, rbp
0x000072a4      7420           je 0x72c6
0x000072a6      31db           xor ebx, ebx
0x000072a8      0f1f84000000.  nop dword [rax + rax]
0x000072b0      4c89fa         mov rdx, r15
0x000072b3      4c89f6         mov rsi, r14
0x000072b6      4489ef         mov edi, r13d
0x000072b9      41ff14dc       call qword [r12 + rbx*8]
0x000072bd      4883c301       add rbx, 1
0x000072c1      4839dd         cmp rbp, rbx
0x000072c4      75ea           jne 0x72b0
0x000072c6      4883c408       add rsp, 8
0x000072ca      5b             pop rbx
0x000072cb      5d             pop rbp
0x000072cc      415c           pop r12
0x000072ce      415d           pop r13
0x000072d0      415e           pop r14
0x000072d2      415f           pop r15
0x000072d4      c3             ret
0x000072d5      90             nop
0x000072d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000072e0      f3c3           ret
0x000072e2      662e0f1f8400.  nop word cs:[rax + rax]
0x000072ec      0f1f4000       nop dword [rax]
;-- atexit:
0x000072f0      488b15113d20.  mov rdx, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x000072f7      31f6           xor esi, esi
0x000072f9      e932a6ffff     jmp sym.imp.__cxa_atexit
0x000072fe      0000           add byte [rax], al
