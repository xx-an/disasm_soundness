;-- section..plt:
;-- .plt:
0x000016c0      ff350a772000   push qword [0x00208dd0]                 ; [12] -r-x section size 976 named .plt
0x000016c6      ff250c772000   jmp qword [0x00208dd8]                  ; [0x208dd8:8]=0
0x000016cc      0f1f4000       nop dword [rax]
;-- imp.endgrent:
0x000016d0      ff250a772000   jmp qword [reloc.endgrent]              ; [0x208de0:8]=0x16d6
0x000016d6      6800000000     push 0
0x000016db      e9e0ffffff     jmp sym..plt
;-- imp.getenv:
0x000016e0      ff2502772000   jmp qword [reloc.getenv]                ; [0x208de8:8]=0x16e6
0x000016e6      6801000000     push 1
0x000016eb      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x000016f0      ff25fa762000   jmp qword [reloc.free]                  ; [0x208df0:8]=0x16f6
0x000016f6      6802000000     push 2
0x000016fb      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x00001700      ff25f2762000   jmp qword [reloc.abort]                 ; [0x208df8:8]=0x1706
0x00001706      6803000000     push 3
0x0000170b      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001710      ff25ea762000   jmp qword [reloc.__errno_location]      ; [0x208e00:8]=0x1716
0x00001716      6804000000     push 4
0x0000171b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001720      ff25e2762000   jmp qword [reloc.strncmp]               ; [0x208e08:8]=0x1726 ; "&\x17"
0x00001726      6805000000     push 5
0x0000172b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001730      ff25da762000   jmp qword [reloc._exit]                 ; [0x208e10:8]=0x1736 ; "6\x17"
0x00001736      6806000000     push 6
0x0000173b      e980ffffff     jmp sym..plt
;-- imp.chroot:
0x00001740      ff25d2762000   jmp qword [reloc.chroot]                ; [0x208e18:8]=0x1746 ; "F\x17"
0x00001746      6807000000     push 7
0x0000174b      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001750      ff25ca762000   jmp qword [reloc.__fpending]            ; [0x208e20:8]=0x1756 ; "V\x17"
0x00001756      6808000000     push 8
0x0000175b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001760      ff25c2762000   jmp qword [reloc.textdomain]            ; [0x208e28:8]=0x1766 ; "f\x17"
0x00001766      6809000000     push 9
0x0000176b      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x00001770      ff25ba762000   jmp qword [reloc.fclose]                ; [0x208e30:8]=0x1776 ; "v\x17"
0x00001776      680a000000     push 0xa
0x0000177b      e940ffffff     jmp sym..plt
;-- imp.getpwuid:
0x00001780      ff25b2762000   jmp qword [reloc.getpwuid]              ; [0x208e38:8]=0x1786
0x00001786      680b000000     push 0xb
0x0000178b      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001790      ff25aa762000   jmp qword [reloc.bindtextdomain]        ; [0x208e40:8]=0x1796
0x00001796      680c000000     push 0xc
0x0000179b      e920ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000017a0      ff25a2762000   jmp qword [reloc.dcgettext]             ; [0x208e48:8]=0x17a6
0x000017a6      680d000000     push 0xd
0x000017ab      e910ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000017b0      ff259a762000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x208e50:8]=0x17b6
0x000017b6      680e000000     push 0xe
0x000017bb      e900ffffff     jmp sym..plt
;-- imp.strlen:
0x000017c0      ff2592762000   jmp qword [reloc.strlen]                ; [0x208e58:8]=0x17c6
0x000017c6      680f000000     push 0xf
0x000017cb      e9f0feffff     jmp sym..plt
;-- imp.chdir:
0x000017d0      ff258a762000   jmp qword [reloc.chdir]                 ; [0x208e60:8]=0x17d6
0x000017d6      6810000000     push 0x10
0x000017db      e9e0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000017e0      ff2582762000   jmp qword [reloc.__stack_chk_fail]      ; [0x208e68:8]=0x17e6
0x000017e6      6811000000     push 0x11
0x000017eb      e9d0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000017f0      ff257a762000   jmp qword [reloc.getopt_long]           ; [0x208e70:8]=0x17f6
0x000017f6      6812000000     push 0x12
0x000017fb      e9c0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001800      ff2572762000   jmp qword [reloc.mbrtowc]               ; [0x208e78:8]=0x1806
0x00001806      6813000000     push 0x13
0x0000180b      e9b0feffff     jmp sym..plt
;-- imp.strchr:
0x00001810      ff256a762000   jmp qword [reloc.strchr]                ; [0x208e80:8]=0x1816
0x00001816      6814000000     push 0x14
0x0000181b      e9a0feffff     jmp sym..plt
;-- imp.getgrgid:
0x00001820      ff2562762000   jmp qword [reloc.getgrgid]              ; [0x208e88:8]=0x1826 ; "&\x18"
0x00001826      6815000000     push 0x15
0x0000182b      e990feffff     jmp sym..plt
;-- imp.strrchr:
0x00001830      ff255a762000   jmp qword [reloc.strrchr]               ; [0x208e90:8]=0x1836 ; "6\x18"
0x00001836      6816000000     push 0x16
0x0000183b      e980feffff     jmp sym..plt
;-- imp.lseek:
0x00001840      ff2552762000   jmp qword [reloc.lseek]                 ; [0x208e98:8]=0x1846 ; "F\x18"
0x00001846      6817000000     push 0x17
0x0000184b      e970feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001850      ff254a762000   jmp qword [reloc.__assert_fail]         ; [0x208ea0:8]=0x1856 ; "V\x18"
0x00001856      6818000000     push 0x18
0x0000185b      e960feffff     jmp sym..plt
;-- imp.memset:
0x00001860      ff2542762000   jmp qword [reloc.memset]                ; [0x208ea8:8]=0x1866 ; "f\x18"
0x00001866      6819000000     push 0x19
0x0000186b      e950feffff     jmp sym..plt
;-- imp.canonicalize_file_name:
0x00001870      ff253a762000   jmp qword [reloc.canonicalize_file_name] ; [0x208eb0:8]=0x1876 ; "v\x18"
0x00001876      681a000000     push 0x1a
0x0000187b      e940feffff     jmp sym..plt
;-- imp.setgroups:
0x00001880      ff2532762000   jmp qword [reloc.setgroups]             ; [0x208eb8:8]=0x1886
0x00001886      681b000000     push 0x1b
0x0000188b      e930feffff     jmp sym..plt
;-- imp.memcmp:
0x00001890      ff252a762000   jmp qword [reloc.memcmp]                ; [0x208ec0:8]=0x1896
0x00001896      681c000000     push 0x1c
0x0000189b      e920feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000018a0      ff2522762000   jmp qword [reloc.fputs_unlocked]        ; [0x208ec8:8]=0x18a6
0x000018a6      681d000000     push 0x1d
0x000018ab      e910feffff     jmp sym..plt
;-- imp.calloc:
0x000018b0      ff251a762000   jmp qword [reloc.calloc]                ; [0x208ed0:8]=0x18b6
0x000018b6      681e000000     push 0x1e
0x000018bb      e900feffff     jmp sym..plt
;-- imp.strcmp:
0x000018c0      ff2512762000   jmp qword [reloc.strcmp]                ; [0x208ed8:8]=0x18c6
0x000018c6      681f000000     push 0x1f
0x000018cb      e9f0fdffff     jmp sym..plt
;-- imp.getpwnam:
0x000018d0      ff250a762000   jmp qword [reloc.getpwnam]              ; [0x208ee0:8]=0x18d6
0x000018d6      6820000000     push 0x20                               ; "@"
0x000018db      e9e0fdffff     jmp sym..plt
;-- imp.memcpy:
0x000018e0      ff2502762000   jmp qword [reloc.memcpy]                ; [0x208ee8:8]=0x18e6
0x000018e6      6821000000     push 0x21                               ; '!'
0x000018eb      e9d0fdffff     jmp sym..plt
;-- imp.getgrnam:
0x000018f0      ff25fa752000   jmp qword [reloc.getgrnam]              ; [0x208ef0:8]=0x18f6
0x000018f6      6822000000     push 0x22                               ; '"'
0x000018fb      e9c0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001900      ff25f2752000   jmp qword [reloc.fileno]                ; [0x208ef8:8]=0x1906
0x00001906      6823000000     push 0x23                               ; '#'
0x0000190b      e9b0fdffff     jmp sym..plt
;-- imp.getgroups:
0x00001910      ff25ea752000   jmp qword [reloc.getgroups]             ; [0x208f00:8]=0x1916
0x00001916      6824000000     push 0x24                               ; '$'
0x0000191b      e9a0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001920      ff25e2752000   jmp qword [reloc.malloc]                ; [0x208f08:8]=0x1926 ; "&\x19"
0x00001926      6825000000     push 0x25                               ; '%'
0x0000192b      e990fdffff     jmp sym..plt
;-- imp.fflush:
0x00001930      ff25da752000   jmp qword [reloc.fflush]                ; [0x208f10:8]=0x1936 ; "6\x19"
0x00001936      6826000000     push 0x26                               ; '&'
0x0000193b      e980fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001940      ff25d2752000   jmp qword [reloc.nl_langinfo]           ; [0x208f18:8]=0x1946 ; "F\x19"
0x00001946      6827000000     push 0x27                               ; '''
0x0000194b      e970fdffff     jmp sym..plt
;-- imp.endpwent:
0x00001950      ff25ca752000   jmp qword [reloc.endpwent]              ; [0x208f20:8]=0x1956 ; "V\x19"
0x00001956      6828000000     push 0x28                               ; '('
0x0000195b      e960fdffff     jmp sym..plt
;-- imp.__freading:
0x00001960      ff25c2752000   jmp qword [reloc.__freading]            ; [0x208f28:8]=0x1966 ; "f\x19"
0x00001966      6829000000     push 0x29                               ; ')'
0x0000196b      e950fdffff     jmp sym..plt
;-- imp.realloc:
0x00001970      ff25ba752000   jmp qword [reloc.realloc]               ; [0x208f30:8]=0x1976 ; "v\x19"
0x00001976      682a000000     push 0x2a                               ; '*'
0x0000197b      e940fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001980      ff25b2752000   jmp qword [reloc.setlocale]             ; [0x208f38:8]=0x1986
0x00001986      682b000000     push 0x2b                               ; '+'
0x0000198b      e930fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001990      ff25aa752000   jmp qword [reloc.__printf_chk]          ; [0x208f40:8]=0x1996
0x00001996      682c000000     push 0x2c                               ; ','
0x0000199b      e920fdffff     jmp sym..plt
;-- imp.error:
0x000019a0      ff25a2752000   jmp qword [reloc.error]                 ; [0x208f48:8]=0x19a6
0x000019a6      682d000000     push 0x2d                               ; '-'
0x000019ab      e910fdffff     jmp sym..plt
;-- imp.setgid:
0x000019b0      ff259a752000   jmp qword [reloc.setgid]                ; [0x208f50:8]=0x19b6
0x000019b6      682e000000     push 0x2e                               ; '.'
0x000019bb      e900fdffff     jmp sym..plt
;-- imp.getgrouplist:
0x000019c0      ff2592752000   jmp qword [reloc.getgrouplist]          ; [0x208f58:8]=0x19c6
0x000019c6      682f000000     push 0x2f                               ; '/'
0x000019cb      e9f0fcffff     jmp sym..plt
;-- imp.fseeko:
0x000019d0      ff258a752000   jmp qword [reloc.fseeko]                ; [0x208f60:8]=0x19d6
0x000019d6      6830000000     push 0x30                               ; '0'
0x000019db      e9e0fcffff     jmp sym..plt
;-- imp.strtok:
0x000019e0      ff2582752000   jmp qword [reloc.strtok]                ; [0x208f68:8]=0x19e6
0x000019e6      6831000000     push 0x31                               ; '1'
0x000019eb      e9d0fcffff     jmp sym..plt
;-- imp.strtoul:
0x000019f0      ff257a752000   jmp qword [reloc.strtoul]               ; [0x208f70:8]=0x19f6
0x000019f6      6832000000     push 0x32                               ; '2'
0x000019fb      e9c0fcffff     jmp sym..plt
;-- imp.execvp:
0x00001a00      ff2572752000   jmp qword [reloc.execvp]                ; [0x208f78:8]=0x1a06
0x00001a06      6833000000     push 0x33                               ; '3'
0x00001a0b      e9b0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001a10      ff256a752000   jmp qword [reloc.__cxa_atexit]          ; [0x208f80:8]=0x1a16
0x00001a16      6834000000     push 0x34                               ; '4'
0x00001a1b      e9a0fcffff     jmp sym..plt
;-- imp.exit:
0x00001a20      ff2562752000   jmp qword [reloc.exit]                  ; [0x208f88:8]=0x1a26 ; "&\x1a"
0x00001a26      6835000000     push 0x35                               ; '5'
0x00001a2b      e990fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001a30      ff255a752000   jmp qword [reloc.fwrite]                ; [0x208f90:8]=0x1a36 ; "6\x1a"
0x00001a36      6836000000     push 0x36                               ; '6'
0x00001a3b      e980fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001a40      ff2552752000   jmp qword [reloc.__fprintf_chk]         ; [0x208f98:8]=0x1a46 ; "F\x1a"
0x00001a46      6837000000     push 0x37                               ; '7'
0x00001a4b      e970fcffff     jmp sym..plt
;-- imp.setuid:
0x00001a50      ff254a752000   jmp qword [reloc.setuid]                ; [0x208fa0:8]=0x1a56 ; "V\x1a"
0x00001a56      6838000000     push 0x38                               ; '8'
0x00001a5b      e960fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001a60      ff2542752000   jmp qword [reloc.mbsinit]               ; [0x208fa8:8]=0x1a66 ; "f\x1a"
0x00001a66      6839000000     push 0x39                               ; '9'
0x00001a6b      e950fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001a70      ff253a752000   jmp qword [reloc.iswprint]              ; [0x208fb0:8]=0x1a76 ; "v\x1a"
0x00001a76      683a000000     push 0x3a                               ; ':'
0x00001a7b      e940fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001a80      ff2532752000   jmp qword [reloc.__ctype_b_loc]         ; [0x208fb8:8]=0x1a86
0x00001a86      683b000000     push 0x3b                               ; ';'
0x00001a8b      e930fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001a90      .qword 0x90660020754a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001a98      0000           add byte [rax], al
0x00001a9a      0000           add byte [rax], al
0x00001a9c      0000           add byte [rax], al
0x00001a9e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001aa0      4157           push r15                                ; [14] -r-x section size 17614 named .text
0x00001aa2      4156           push r14
0x00001aa4      4531f6         xor r14d, r14d
0x00001aa7      4155           push r13
0x00001aa9      4154           push r12
0x00001aab      4531ed         xor r13d, r13d
0x00001aae      55             push rbp
0x00001aaf      53             push rbx
0x00001ab0      89fd           mov ebp, edi
0x00001ab2      4889f3         mov rbx, rsi
0x00001ab5      4531e4         xor r12d, r12d
0x00001ab8      4883ec48       sub rsp, 0x48
0x00001abc      488b3e         mov rdi, qword [rsi]
0x00001abf      64488b042528.  mov rax, qword fs:[0x28]
0x00001ac8      4889442438     mov qword [rsp + 0x38], rax
0x00001acd      31c0           xor eax, eax
0x00001acf      c7442418ffff.  mov dword [rsp + 0x18], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00001ad7      c744241cffff.  mov dword [rsp + 0x1c], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00001adf      48c744242000.  mov qword [rsp + 0x20], 0
0x00001ae8      48c744242800.  mov qword [rsp + 0x28], 0
0x00001af1      e86a0f0000     call sym.set_program_name
0x00001af6      488d358c4f00.  lea rsi, [0x00006a89]
0x00001afd      bf06000000     mov edi, 6
0x00001b02      e879feffff     call sym.imp.setlocale
0x00001b07      488d35514500.  lea rsi, str.usr_local_share_locale     ; 0x605f ; "/usr/local/share/locale"
0x00001b0e      488d3d194500.  lea rdi, [0x0000602e]                   ; "coreutils"
0x00001b15      e876fcffff     call sym.imp.bindtextdomain
0x00001b1a      488d3d0d4500.  lea rdi, [0x0000602e]                   ; "coreutils"
0x00001b21      e83afcffff     call sym.imp.textdomain
0x00001b26      488d3d830e00.  lea rdi, sym.close_stdout               ; 0x29b0 ; "USH\x83\xec\bH\x8b=\xcbf "
0x00001b2d      c705e1742000.  mov dword [obj.exit_failure], 0x7d      ; '}'
                                                                       ; [0x209018:4]=1
0x00001b37      e824440000     call sym.atexit
0x00001b3c      488d0d7d6f20.  lea rcx, obj.long_opts                  ; 0x208ac0
0x00001b43      488d153c4500.  lea rdx, [0x00006086]                   ; "+"
0x00001b4a      4531c0         xor r8d, r8d
0x00001b4d      4889de         mov rsi, rbx
0x00001b50      89ef           mov edi, ebp
0x00001b52      e899fcffff     call sym.imp.getopt_long
0x00001b57      83f8ff         cmp eax, 0xffffffff
0x00001b5a      0f84ae000000   je 0x1c0e
0x00001b60      3d00010000     cmp eax, 0x100
0x00001b65      7469           je 0x1bd0
0x00001b67      7e1f           jle 0x1b88
0x00001b69      3d01010000     cmp eax, 0x101
0x00001b6e      7470           je 0x1be0
0x00001b70      3d02010000     cmp eax, 0x102
0x00001b75      0f85d6050000   jne 0x2151
0x00001b7b      41be01000000   mov r14d, 1
0x00001b81      ebb9           jmp 0x1b3c
0x00001b83      0f1f440000     nop dword [rax + rax]
0x00001b88      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001b8d      0f858f050000   jne 0x2122
0x00001b93      488b3dee7420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00001b9a      488b0d6f7420.  mov rcx, qword [obj.Version]            ; [0x209010:8]=0x64ca str.8.31
0x00001ba1      4c8d05cf4400.  lea r8, str.Roland_McGrath              ; 0x6077 ; "Roland McGrath"
0x00001ba8      488d157b4400.  lea rdx, str.GNU_coreutils              ; 0x602a ; "GNU coreutils"
0x00001baf      488d35f74300.  lea rsi, str.chroot                     ; 0x5fad ; "chroot"
0x00001bb6      4531c9         xor r9d, r9d
0x00001bb9      31c0           xor eax, eax
0x00001bbb      e830350000     call sym.version_etc
0x00001bc0      31ff           xor edi, edi
0x00001bc2      e859feffff     call sym.imp.exit
0x00001bc7      660f1f840000.  nop word [rax + rax]
0x00001bd0      4c8b2dc17420.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x209098:8]=0
0x00001bd7      e960ffffff     jmp 0x1b3c
0x00001bdc      0f1f4000       nop dword [rax]
0x00001be0      4c8b25b17420.  mov r12, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x209098:8]=0
0x00001be7      4c89e7         mov rdi, r12
0x00001bea      e8d1fbffff     call sym.imp.strlen
0x00001bef      4885c0         test rax, rax
0x00001bf2      0f8444ffffff   je 0x1b3c
0x00001bf8      498d4404ff     lea rax, [r12 + rax - 1]
0x00001bfd      80383a         cmp byte [rax], 0x3a
0x00001c00      0f8536ffffff   jne 0x1b3c
0x00001c06      c60000         mov byte [rax], 0
0x00001c09      e92effffff     jmp 0x1b3c
0x00001c0e      4863057b7420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209090:4]=0
0x00001c15      39e8           cmp eax, ebp
0x00001c17      0f8d13050000   jge 0x2130
0x00001c1d      4c8b3cc3       mov r15, qword [rbx + rax*8]
0x00001c21      4c89ff         mov rdi, r15
0x00001c24      e847fcffff     call sym.imp.canonicalize_file_name
0x00001c29      4885c0         test rax, rax
0x00001c2c      4889c2         mov rdx, rax
0x00001c2f      7421           je 0x1c52
0x00001c31      488d3dee4800.  lea rdi, [0x00006526]                   ; "/"
0x00001c38      4889c6         mov rsi, rax
0x00001c3b      4889442408     mov qword [rsp + 8], rax
0x00001c40      e87bfcffff     call sym.imp.strcmp
0x00001c45      85c0           test eax, eax
0x00001c47      488b542408     mov rdx, qword [rsp + 8]
0x00001c4c      0f84ae000000   je 0x1d00
0x00001c52      4889d7         mov rdi, rdx
0x00001c55      e896faffff     call sym.imp.free
0x00001c5a      4584f6         test r14b, r14b
0x00001c5d      0f856f050000   jne 0x21d2
0x00001c63      4d85e4         test r12, r12
0x00001c66      7417           je 0x1c7f
0x00001c68      488d54241c     lea rdx, [rsp + 0x1c]
0x00001c6d      488d742418     lea rsi, [rsp + 0x18]
0x00001c72      4531c0         xor r8d, r8d
0x00001c75      31c9           xor ecx, ecx
0x00001c77      4c89e7         mov rdi, r12
0x00001c7a      e8e12e0000     call sym.parse_user_spec
0x00001c7f      8b7c2418       mov edi, dword [rsp + 0x18]
0x00001c83      83ffff         cmp edi, 0xffffffff
0x00001c86      0f8473020000   je 0x1eff
0x00001c8c      4d85ed         test r13, r13
0x00001c8f      0f8444040000   je 0x20d9
0x00001c95      837c241cff     cmp dword [rsp + 0x1c], 0xffffffff
0x00001c9a      0f84c7030000   je 0x2067
0x00001ca0      48c744240800.  mov qword [rsp + 8], 0
0x00001ca9      41807d0000     cmp byte [r13], 0
0x00001cae      0f859a030000   jne 0x204e
0x00001cb4      4c89ff         mov rdi, r15
0x00001cb7      e884faffff     call sym.imp.chroot
0x00001cbc      85c0           test eax, eax
0x00001cbe      0f854b030000   jne 0x200f
0x00001cc4      488d3d5b4800.  lea rdi, [0x00006526]                   ; "/"
0x00001ccb      e800fbffff     call sym.imp.chdir
0x00001cd0      85c0           test eax, eax
0x00001cd2      7452           je 0x1d26
0x00001cd4      488d355d4700.  lea rsi, str.cannot_chdir_to_root_directory ; 0x6438 ; "cannot chdir to root directory"
0x00001cdb      ba05000000     mov edx, 5
0x00001ce0      31ff           xor edi, edi
0x00001ce2      e8b9faffff     call sym.imp.dcgettext
0x00001ce7      4889c3         mov rbx, rax
0x00001cea      e821faffff     call sym.imp.__errno_location
0x00001cef      8b30           mov esi, dword [rax]
0x00001cf1      4889da         mov rdx, rbx
0x00001cf4      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001cf9      31c0           xor eax, eax
0x00001cfb      e8a0fcffff     call sym.imp.error
0x00001d00      4889d7         mov rdi, rdx
0x00001d03      e8e8f9ffff     call sym.imp.free
0x00001d08      4c89ff         mov rdi, r15
0x00001d0b      e830faffff     call sym.imp.chroot
0x00001d10      85c0           test eax, eax
0x00001d12      0f85f7020000   jne 0x200f
0x00001d18      4584f6         test r14b, r14b
0x00001d1b      48c744240800.  mov qword [rsp + 8], 0
0x00001d24      749e           je 0x1cc4
0x00001d26      486305637320.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209090:4]=0
0x00001d2d      8d5001         lea edx, [rax + 1]
0x00001d30      39ea           cmp edx, ebp
0x00001d32      0f8471020000   je 0x1fa9
0x00001d38      488d5cc308     lea rbx, [rbx + rax*8 + 8]
0x00001d3d      4d85e4         test r12, r12
0x00001d40      0f8435010000   je 0x1e7b
0x00001d46      488d54241c     lea rdx, [rsp + 0x1c]
0x00001d4b      488d742418     lea rsi, [rsp + 0x18]
0x00001d50      4531c0         xor r8d, r8d
0x00001d53      31c9           xor ecx, ecx
0x00001d55      4c89e7         mov rdi, r12
0x00001d58      e8032e0000     call sym.parse_user_spec
0x00001d5d      4885c0         test rax, rax
0x00001d60      4889c5         mov rbp, rax
0x00001d63      0f8412010000   je 0x1e7b
0x00001d69      8b7c2418       mov edi, dword [rsp + 0x18]
0x00001d6d      83ffff         cmp edi, 0xffffffff
0x00001d70      0f84d4010000   je 0x1f4a
0x00001d76      4d85ed         test r13, r13
0x00001d79      0f845a010000   je 0x1ed9
0x00001d7f      837c241cff     cmp dword [rsp + 0x1c], 0xffffffff
0x00001d84      0f844f010000   je 0x1ed9
0x00001d8a      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00001d8f      48c744243000.  mov qword [rsp + 0x30], 0
0x00001d98      41807d0000     cmp byte [r13], 0
0x00001d9d      0f85cf010000   jne 0x1f72
0x00001da3      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00001da8      4889ee         mov rsi, rbp
0x00001dab      e8d0faffff     call sym.imp.setgroups
0x00001db0      89c5           mov ebp, eax
0x00001db2      e859f9ffff     call sym.imp.__errno_location
0x00001db7      85ed           test ebp, ebp
0x00001db9      4989c4         mov r12, rax
0x00001dbc      0f85ea030000   jne 0x21ac
0x00001dc2      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00001dc7      e824f9ffff     call sym.imp.free
0x00001dcc      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00001dd1      e81af9ffff     call sym.imp.free
0x00001dd6      8b6c241c       mov ebp, dword [rsp + 0x1c]
0x00001dda      e831f9ffff     call sym.imp.__errno_location
0x00001ddf      4989c4         mov r12, rax
0x00001de2      83fdff         cmp ebp, 0xffffffff
0x00001de5      740f           je 0x1df6
0x00001de7      89ef           mov edi, ebp
0x00001de9      e8c2fbffff     call sym.imp.setgid
0x00001dee      85c0           test eax, eax
0x00001df0      0f8590030000   jne 0x2186
0x00001df6      8b7c2418       mov edi, dword [rsp + 0x18]
0x00001dfa      83ffff         cmp edi, 0xffffffff
0x00001dfd      740d           je 0x1e0c
0x00001dff      e84cfcffff     call sym.imp.setuid
0x00001e04      85c0           test eax, eax
0x00001e06      0f8554030000   jne 0x2160
0x00001e0c      488b3b         mov rdi, qword [rbx]
0x00001e0f      4889de         mov rsi, rbx
0x00001e12      31ed           xor ebp, ebp
0x00001e14      e8e7fbffff     call sym.imp.execvp
0x00001e19      41833c2402     cmp dword [r12], 2
0x00001e1e      488b3b         mov rdi, qword [rbx]
0x00001e21      400f94c5       sete bpl
0x00001e25      e846290000     call sym.quote
0x00001e2a      488d359d4200.  lea rsi, str.failed_to_run_command__s   ; 0x60ce ; "failed to run command %s"
0x00001e31      ba05000000     mov edx, 5
0x00001e36      31ff           xor edi, edi
0x00001e38      4889c3         mov rbx, rax
0x00001e3b      83c57e         add ebp, 0x7e
0x00001e3e      e85df9ffff     call sym.imp.dcgettext
0x00001e43      418b3424       mov esi, dword [r12]
0x00001e47      4889c2         mov rdx, rax
0x00001e4a      4889d9         mov rcx, rbx
0x00001e4d      31ff           xor edi, edi
0x00001e4f      31c0           xor eax, eax
0x00001e51      e84afbffff     call sym.imp.error
0x00001e56      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00001e5b      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001e64      89e8           mov eax, ebp
0x00001e66      0f85ef020000   jne 0x215b
0x00001e6c      4883c448       add rsp, 0x48
0x00001e70      5b             pop rbx
0x00001e71      5d             pop rbp
0x00001e72      415c           pop r12
0x00001e74      415d           pop r13
0x00001e76      415e           pop r14
0x00001e78      415f           pop r15
0x00001e7a      c3             ret
0x00001e7b      8b7c2418       mov edi, dword [rsp + 0x18]
0x00001e7f      83ffff         cmp edi, 0xffffffff
0x00001e82      0f85eefeffff   jne 0x1d76
0x00001e88      4d85ed         test r13, r13
0x00001e8b      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00001e90      48c744243000.  mov qword [rsp + 0x30], 0
0x00001e99      0f85f9feffff   jne 0x1d98
0x00001e9f      48837c240800   cmp qword [rsp + 8], 0
0x00001ea5      448b6c241c     mov r13d, dword [rsp + 0x1c]
0x00001eaa      410f95c4       setne r12b
0x00001eae      4183fdff       cmp r13d, 0xffffffff
0x00001eb2      0f95c0         setne al
0x00001eb5      4121c4         and r12d, eax
0x00001eb8      e853f8ffff     call sym.imp.__errno_location
0x00001ebd      4584e4         test r12b, r12b
0x00001ec0      4989c6         mov r14, rax
0x00001ec3      0f8510010000   jne 0x1fd9
0x00001ec9      837c2418ff     cmp dword [rsp + 0x18], 0xffffffff
0x00001ece      0f84eefeffff   je 0x1dc2
0x00001ed4      e9cafeffff     jmp 0x1da3
0x00001ed9      e8a2f8ffff     call sym.imp.getpwuid
0x00001ede      4885c0         test rax, rax
0x00001ee1      0f84a9010000   je 0x2090
0x00001ee7      837c241cff     cmp dword [rsp + 0x1c], 0xffffffff
0x00001eec      7507           jne 0x1ef5
0x00001eee      8b5014         mov edx, dword [rax + 0x14]
0x00001ef1      8954241c       mov dword [rsp + 0x1c], edx
0x00001ef5      488b00         mov rax, qword [rax]
0x00001ef8      4889442408     mov qword [rsp + 8], rax
0x00001efd      eb89           jmp 0x1e88
0x00001eff      48c744240800.  mov qword [rsp + 8], 0
0x00001f08      4d85ed         test r13, r13
0x00001f0b      0f8598fdffff   jne 0x1ca9
0x00001f11      8b74241c       mov esi, dword [rsp + 0x1c]
0x00001f15      83feff         cmp esi, 0xffffffff
0x00001f18      0f8496fdffff   je 0x1cb4
0x00001f1e      488b7c2408     mov rdi, qword [rsp + 8]
0x00001f23      4885ff         test rdi, rdi
0x00001f26      0f8488fdffff   je 0x1cb4
0x00001f2c      488d542420     lea rdx, [rsp + 0x20]
0x00001f31      e8aa350000     call sym.xgetgroups
0x00001f36      85c0           test eax, eax
0x00001f38      0f8e76fdffff   jle 0x1cb4
0x00001f3e      4898           cdqe
0x00001f40      4889442428     mov qword [rsp + 0x28], rax
0x00001f45      e96afdffff     jmp 0x1cb4
0x00001f4a      837c241cff     cmp dword [rsp + 0x1c], 0xffffffff
0x00001f4f      0f8533ffffff   jne 0x1e88
0x00001f55      e8b6f7ffff     call sym.imp.__errno_location
0x00001f5a      8b30           mov esi, dword [rax]
0x00001f5c      488d157c4500.  lea rdx, [0x000064df]                   ; "%s"
0x00001f63      4889e9         mov rcx, rbp
0x00001f66      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001f6b      31c0           xor eax, eax
0x00001f6d      e82efaffff     call sym.imp.error
0x00001f72      31c9           xor ecx, ecx
0x00001f74      48837c242800   cmp qword [rsp + 0x28], 0
0x00001f7a      488d542428     lea rdx, [rsp + 0x28]
0x00001f7f      488d742430     lea rsi, [rsp + 0x30]
0x00001f84      4c89ef         mov rdi, r13
0x00001f87      0f94c1         sete cl
0x00001f8a      e8a1030000     call sym.parse_additional_groups
0x00001f8f      85c0           test eax, eax
0x00001f91      7472           je 0x2005
0x00001f93      48837c242800   cmp qword [rsp + 0x28], 0
0x00001f99      0f8504feffff   jne 0x1da3
0x00001f9f      bd7d000000     mov ebp, 0x7d                           ; '}'
0x00001fa4      e9adfeffff     jmp 0x1e56
0x00001fa9      488d3de84000.  lea rdi, str.SHELL                      ; 0x6098 ; "SHELL"
0x00001fb0      e82bf7ffff     call sym.imp.getenv
0x00001fb5      4885c0         test rax, rax
0x00001fb8      0f840f010000   je 0x20cd
0x00001fbe      488903         mov qword [rbx], rax
0x00001fc1      488d05d64000.  lea rax, [0x0000609e]                   ; "-i"
0x00001fc8      48c743100000.  mov qword [rbx + 0x10], 0
0x00001fd0      48894308       mov qword [rbx + 8], rax
0x00001fd4      e964fdffff     jmp 0x1d3d
0x00001fd9      488b7c2408     mov rdi, qword [rsp + 8]
0x00001fde      488d542430     lea rdx, [rsp + 0x30]
0x00001fe3      4489ee         mov esi, r13d
0x00001fe6      e8f5340000     call sym.xgetgroups
0x00001feb      85c0           test eax, eax
0x00001fed      0f8efe000000   jle 0x20f1
0x00001ff3      837c2418ff     cmp dword [rsp + 0x18], 0xffffffff
0x00001ff8      4898           cdqe
0x00001ffa      4889442428     mov qword [rsp + 0x28], rax
0x00001fff      0f84bdfdffff   je 0x1dc2
0x00002005      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000200a      e994fdffff     jmp 0x1da3
0x0000200f      4c89fe         mov rsi, r15
0x00002012      bf04000000     mov edi, 4
0x00002017      e884240000     call sym.quotearg_style
0x0000201c      488d35ed4300.  lea rsi, str.cannot_change_root_directory_to__s ; 0x6410 ; "cannot change root directory to %s"
0x00002023      ba05000000     mov edx, 5
0x00002028      31ff           xor edi, edi
0x0000202a      4889c5         mov rbp, rax
0x0000202d      e86ef7ffff     call sym.imp.dcgettext
0x00002032      4889c3         mov rbx, rax
0x00002035      e8d6f6ffff     call sym.imp.__errno_location
0x0000203a      8b30           mov esi, dword [rax]
0x0000203c      4889e9         mov rcx, rbp
0x0000203f      4889da         mov rdx, rbx
0x00002042      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002047      31c0           xor eax, eax
0x00002049      e852f9ffff     call sym.imp.error
0x0000204e      488d542428     lea rdx, [rsp + 0x28]
0x00002053      488d742420     lea rsi, [rsp + 0x20]
0x00002058      31c9           xor ecx, ecx
0x0000205a      4c89ef         mov rdi, r13
0x0000205d      e8ce020000     call sym.parse_additional_groups
0x00002062      e94dfcffff     jmp 0x1cb4
0x00002067      e814f7ffff     call sym.imp.getpwuid
0x0000206c      4885c0         test rax, rax
0x0000206f      0f842bfcffff   je 0x1ca0
0x00002075      837c241cff     cmp dword [rsp + 0x1c], 0xffffffff
0x0000207a      7507           jne 0x2083
0x0000207c      8b5014         mov edx, dword [rax + 0x14]
0x0000207f      8954241c       mov dword [rsp + 0x1c], edx
0x00002083      488b00         mov rax, qword [rax]
0x00002086      4889442408     mov qword [rsp + 8], rax
0x0000208b      e978feffff     jmp 0x1f08
0x00002090      837c241cff     cmp dword [rsp + 0x1c], 0xffffffff
0x00002095      0f85edfdffff   jne 0x1e88
0x0000209b      488d35b64300.  lea rsi, str.no_group_specified_for_unknown_uid:__d ; 0x6458 ; "no group specified for unknown uid: %d"
0x000020a2      ba05000000     mov edx, 5
0x000020a7      31ff           xor edi, edi
0x000020a9      8b6c2418       mov ebp, dword [rsp + 0x18]
0x000020ad      e8eef6ffff     call sym.imp.dcgettext
0x000020b2      4889c3         mov rbx, rax
0x000020b5      e856f6ffff     call sym.imp.__errno_location
0x000020ba      8b30           mov esi, dword [rax]
0x000020bc      89e9           mov ecx, ebp
0x000020be      4889da         mov rdx, rbx
0x000020c1      bf7d000000     mov edi, 0x7d                           ; '}'
0x000020c6      31c0           xor eax, eax
0x000020c8      e8d3f8ffff     call sym.imp.error
0x000020cd      488d05833f00.  lea rax, str.bin_sh                     ; 0x6057 ; "/bin/sh"
0x000020d4      e9e5feffff     jmp 0x1fbe
0x000020d9      e8a2f6ffff     call sym.imp.getpwuid
0x000020de      4885c0         test rax, rax
0x000020e1      7592           jne 0x2075
0x000020e3      48c744240800.  mov qword [rsp + 8], 0
0x000020ec      e9c3fbffff     jmp 0x1cb4
0x000020f1      48837c242800   cmp qword [rsp + 0x28], 0
0x000020f7      0f85ccfdffff   jne 0x1ec9
0x000020fd      488d357c4300.  lea rsi, str.failed_to_get_supplemental_groups ; 0x6480 ; "failed to get supplemental groups"
0x00002104      ba05000000     mov edx, 5
0x00002109      31ff           xor edi, edi
0x0000210b      e890f6ffff     call sym.imp.dcgettext
0x00002110      418b36         mov esi, dword [r14]
0x00002113      4889c2         mov rdx, rax
0x00002116      bf7d000000     mov edi, 0x7d                           ; '}'
0x0000211b      31c0           xor eax, eax
0x0000211d      e87ef8ffff     call sym.imp.error
0x00002122      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00002127      7528           jne 0x2151
0x00002129      31ff           xor edi, edi
0x0000212b      e870040000     call sym.usage
0x00002130      488d35513f00.  lea rsi, str.missing_operand            ; 0x6088 ; "missing operand"
0x00002137      ba05000000     mov edx, 5
0x0000213c      31ff           xor edi, edi
0x0000213e      e85df6ffff     call sym.imp.dcgettext
0x00002143      31f6           xor esi, esi
0x00002145      4889c2         mov rdx, rax
0x00002148      31ff           xor edi, edi
0x0000214a      31c0           xor eax, eax
0x0000214c      e84ff8ffff     call sym.imp.error
0x00002151      bf7d000000     mov edi, 0x7d                           ; '}'
0x00002156      e845040000     call sym.usage
0x0000215b      e880f6ffff     call sym.imp.__stack_chk_fail
0x00002160      488d35513f00.  lea rsi, str.failed_to_set_user_ID      ; 0x60b8 ; "failed to set user-ID"
0x00002167      ba05000000     mov edx, 5
0x0000216c      31ff           xor edi, edi
0x0000216e      e82df6ffff     call sym.imp.dcgettext
0x00002173      418b3424       mov esi, dword [r12]
0x00002177      4889c2         mov rdx, rax
0x0000217a      bf7d000000     mov edi, 0x7d                           ; '}'
0x0000217f      31c0           xor eax, eax
0x00002181      e81af8ffff     call sym.imp.error
0x00002186      488d35143f00.  lea rsi, str.failed_to_set_group_ID     ; 0x60a1 ; "failed to set group-ID"
0x0000218d      ba05000000     mov edx, 5
0x00002192      31ff           xor edi, edi
0x00002194      e807f6ffff     call sym.imp.dcgettext
0x00002199      418b3424       mov esi, dword [r12]
0x0000219d      4889c2         mov rdx, rax
0x000021a0      bf7d000000     mov edi, 0x7d                           ; '}'
0x000021a5      31c0           xor eax, eax
0x000021a7      e8f4f7ffff     call sym.imp.error
0x000021ac      488d35f54200.  lea rsi, str.failed_to_set_supplemental_groups ; 0x64a8 ; "failed to set supplemental groups"
0x000021b3      ba05000000     mov edx, 5
0x000021b8      31ff           xor edi, edi
0x000021ba      e8e1f5ffff     call sym.imp.dcgettext
0x000021bf      418b3424       mov esi, dword [r12]
0x000021c3      4889c2         mov rdx, rax
0x000021c6      bf7d000000     mov edi, 0x7d                           ; '}'
0x000021cb      31c0           xor eax, eax
0x000021cd      e8cef7ffff     call sym.imp.error
0x000021d2      488d354d4300.  lea rsi, [0x00006526]                   ; "/"
0x000021d9      bf04000000     mov edi, 4
0x000021de      e8bd220000     call sym.quotearg_style
0x000021e3      488d35ee4100.  lea rsi, str.option___skip_chdir_only_permitted_if_NEWROOT_is_old__s ; 0x63d8 ; "option --skip-chdir only permitted if NEWROOT is old %s"
0x000021ea      4889c3         mov rbx, rax
0x000021ed      ba05000000     mov edx, 5
0x000021f2      31ff           xor edi, edi
0x000021f4      e8a7f5ffff     call sym.imp.dcgettext
0x000021f9      31ff           xor edi, edi
0x000021fb      4889c2         mov rdx, rax
0x000021fe      4889d9         mov rcx, rbx
0x00002201      31f6           xor esi, esi
0x00002203      31c0           xor eax, eax
0x00002205      e896f7ffff     call sym.imp.error
0x0000220a      bf7d000000     mov edi, 0x7d                           ; '}'
0x0000220f      e88c030000     call sym.usage
0x00002214      662e0f1f8400.  nop word cs:[rax + rax]
0x0000221e      6690           nop
;-- entry0:
;-- _start:
;-- rip:
0x00002220      31ed           xor ebp, ebp
0x00002222      4989d1         mov r9, rdx
0x00002225      5e             pop rsi
0x00002226      4889e2         mov rdx, rsp
0x00002229      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000222d      50             push rax
0x0000222e      54             push rsp
0x0000222f      4c8d051a3d00.  lea r8, sym.__libc_csu_fini             ; 0x5f50
0x00002236      488d0da33c00.  lea rcx, sym.__libc_csu_init            ; 0x5ee0 ; "AWAVI\x89\xd7AUATL\x8d%\xbe+ "
0x0000223d      488d3d5cf8ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1aa0 ; "AWAVE1\xf6AUATE1\xedUS\x89\xfdH\x89\xf3E1\xe4H\x83\xecHH\x8b>dH\x8b\x04%("
0x00002244      ff157e6d2000   call qword [reloc.__libc_start_main]    ; [0x208fc8:8]=0
0x0000224a      f4             hlt
0x0000224b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002250      488d3d296e20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00002257      55             push rbp
0x00002258      488d05216e20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x0000225f      4839f8         cmp rax, rdi
0x00002262      4889e5         mov rbp, rsp
0x00002265      7419           je 0x2280
0x00002267      488b05526d20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x208fc0:8]=0
0x0000226e      4885c0         test rax, rax
0x00002271      740d           je 0x2280
0x00002273      5d             pop rbp
0x00002274      ffe0           jmp rax
0x00002276      662e0f1f8400.  nop word cs:[rax + rax]
0x00002280      5d             pop rbp
0x00002281      c3             ret
0x00002282      0f1f4000       nop dword [rax]
0x00002286      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002290      488d3de96d20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00002297      488d35e26d20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x0000229e      55             push rbp
0x0000229f      4829fe         sub rsi, rdi
0x000022a2      4889e5         mov rbp, rsp
0x000022a5      48c1fe03       sar rsi, 3
0x000022a9      4889f0         mov rax, rsi
0x000022ac      48c1e83f       shr rax, 0x3f
0x000022b0      4801c6         add rsi, rax
0x000022b3      48d1fe         sar rsi, 1
0x000022b6      7418           je 0x22d0
0x000022b8      488b05196d20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x208fd8:8]=0
0x000022bf      4885c0         test rax, rax
0x000022c2      740c           je 0x22d0
0x000022c4      5d             pop rbp
0x000022c5      ffe0           jmp rax
0x000022c7      660f1f840000.  nop word [rax + rax]
0x000022d0      5d             pop rbp
0x000022d1      c3             ret
0x000022d2      0f1f4000       nop dword [rax]
0x000022d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000022e0      803de16d2000.  cmp byte [obj.completed.7697], 0        ; [0x2090c8:1]=0
0x000022e7      752f           jne 0x2318
0x000022e9      48833def6c20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x208fe0:8]=0
0x000022f1      55             push rbp
0x000022f2      4889e5         mov rbp, rsp
0x000022f5      740c           je 0x2303
0x000022f7      488b3d0a6d20.  mov rdi, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x000022fe      e88df7ffff     call sym..plt.got
0x00002303      e848ffffff     call sym.deregister_tm_clones
0x00002308      c605b96d2000.  mov byte [obj.completed.7697], 1        ; [0x2090c8:1]=0
0x0000230f      5d             pop rbp
0x00002310      c3             ret
0x00002311      0f1f80000000.  nop dword [rax]
0x00002318      f3c3           ret
0x0000231a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002320      55             push rbp
0x00002321      4889e5         mov rbp, rsp
0x00002324      5d             pop rbp
0x00002325      e966ffffff     jmp sym.register_tm_clones
0x0000232a      660f1f440000   nop word [rax + rax]
;-- parse_additional_groups:
0x00002330      4157           push r15
0x00002332      4156           push r14
0x00002334      4155           push r13
0x00002336      4154           push r12
0x00002338      55             push rbp
0x00002339      53             push rbx
0x0000233a      4883ec68       sub rsp, 0x68
0x0000233e      48897c2430     mov qword [rsp + 0x30], rdi
0x00002343      4889742410     mov qword [rsp + 0x10], rsi
0x00002348      4889542420     mov qword [rsp + 0x20], rdx
0x0000234d      894c243c       mov dword [rsp + 0x3c], ecx
0x00002351      884c243b       mov byte [rsp + 0x3b], cl
0x00002355      48c744244800.  mov qword [rsp + 0x48], 0
0x0000235e      64488b042528.  mov rax, qword fs:[0x28]
0x00002367      4889442458     mov qword [rsp + 0x58], rax
0x0000236c      31c0           xor eax, eax
0x0000236e      e80d310000     call sym.xstrdup
0x00002373      488d350a3c00.  lea rsi, [0x00005f84]                   ; ","
0x0000237a      4889c7         mov rdi, rax
0x0000237d      4889442418     mov qword [rsp + 0x18], rax
0x00002382      e859f6ffff     call sym.imp.strtok
0x00002387      4885c0         test rax, rax
0x0000238a      0f84bb010000   je 0x254b
0x00002390      4989c7         mov r15, rax
0x00002393      488d442448     lea rax, [rsp + 0x48]
0x00002398      4c8d6c2450     lea r13, [rsp + 0x50]
0x0000239d      4c8d25e54600.  lea r12, [0x00006a89]
0x000023a4      c74424080000.  mov dword [rsp + 8], 0
0x000023ac      31db           xor ebx, ebx
0x000023ae      31ed           xor ebp, ebp
0x000023b0      4889442428     mov qword [rsp + 0x28], rax
0x000023b5      41beffffffff   mov r14d, 0xffffffff                    ; -1
0x000023bb      31f6           xor esi, esi
0x000023bd      4d89e0         mov r8, r12
0x000023c0      4c89e9         mov rcx, r13
0x000023c3      ba0a000000     mov edx, 0xa
0x000023c8      4c89ff         mov rdi, r15
0x000023cb      e840310000     call sym.xstrtoul
0x000023d0      85c0           test eax, eax
0x000023d2      750b           jne 0x23df
0x000023d4      4c39742450     cmp qword [rsp + 0x50], r14
0x000023d9      0f86c1000000   jbe 0x24a0
0x000023df      4c89ff         mov rdi, r15
0x000023e2      e809f5ffff     call sym.imp.getgrnam
0x000023e7      4885c0         test rax, rax
0x000023ea      7464           je 0x2450
0x000023ec      8b4010         mov eax, dword [rax + 0x10]
0x000023ef      4889442450     mov qword [rsp + 0x50], rax
0x000023f4      48395c2448     cmp qword [rsp + 0x48], rbx
0x000023f9      0f84df000000   je 0x24de
0x000023ff      488b442450     mov rax, qword [rsp + 0x50]
0x00002404      89449d00       mov dword [rbp + rbx*4], eax
0x00002408      4883c301       add rbx, 1
0x0000240c      488d35713b00.  lea rsi, [0x00005f84]                   ; ","
0x00002413      31ff           xor edi, edi
0x00002415      e8c6f5ffff     call sym.imp.strtok
0x0000241a      4885c0         test rax, rax
0x0000241d      4989c7         mov r15, rax
0x00002420      7599           jne 0x23bb
0x00002422      837c240800     cmp dword [rsp + 8], 0
0x00002427      0f84cb000000   je 0x24f8
0x0000242d      837c240800     cmp dword [rsp + 8], 0
0x00002432      488b442410     mov rax, qword [rsp + 0x10]
0x00002437      488928         mov qword [rax], rbp
0x0000243a      0f854e010000   jne 0x258e
0x00002440      488b442420     mov rax, qword [rsp + 0x20]
0x00002445      488918         mov qword [rax], rbx
0x00002448      eb21           jmp 0x246b
0x0000244a      660f1f440000   nop word [rax + rax]
0x00002450      807c243b00     cmp byte [rsp + 0x3b], 0
0x00002455      0f85a8000000   jne 0x2503
0x0000245b      488b442410     mov rax, qword [rsp + 0x10]
0x00002460      c7442408ffff.  mov dword [rsp + 8], 0xffffffff         ; [0xffffffff:4]=-1 ; -1
0x00002468      488928         mov qword [rax], rbp
0x0000246b      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00002470      e87bf2ffff     call sym.imp.free
0x00002475      488b742458     mov rsi, qword [rsp + 0x58]
0x0000247a      644833342528.  xor rsi, qword fs:[0x28]
0x00002483      8b442408       mov eax, dword [rsp + 8]
0x00002487      0f850e010000   jne 0x259b
0x0000248d      4883c468       add rsp, 0x68
0x00002491      5b             pop rbx
0x00002492      5d             pop rbp
0x00002493      415c           pop r12
0x00002495      415d           pop r13
0x00002497      415e           pop r14
0x00002499      415f           pop r15
0x0000249b      c3             ret
0x0000249c      0f1f4000       nop dword [rax]
0x000024a0      e8dbf5ffff     call sym.imp.__ctype_b_loc
0x000024a5      488b08         mov rcx, qword [rax]
0x000024a8      eb0a           jmp 0x24b4
0x000024aa      660f1f440000   nop word [rax + rax]
0x000024b0      4983c701       add r15, 1
0x000024b4      410fb617       movzx edx, byte [r15]
0x000024b8      f644510120     test byte [rcx + rdx*2 + 1], 0x20
0x000024bd      75f1           jne 0x24b0
0x000024bf      80fa2b         cmp dl, 0x2b
0x000024c2      0f842cffffff   je 0x23f4
0x000024c8      4c89ff         mov rdi, r15
0x000024cb      e820f4ffff     call sym.imp.getgrnam
0x000024d0      4885c0         test rax, rax
0x000024d3      0f8513ffffff   jne 0x23ec
0x000024d9      e916ffffff     jmp 0x23f4
0x000024de      488b742428     mov rsi, qword [rsp + 0x28]
0x000024e3      4889ef         mov rdi, rbp
0x000024e6      ba04000000     mov edx, 4
0x000024eb      e8302e0000     call sym.x2nrealloc
0x000024f0      4889c5         mov rbp, rax
0x000024f3      e907ffffff     jmp 0x23ff
0x000024f8      4885db         test rbx, rbx
0x000024fb      0f852cffffff   jne 0x242d
0x00002501      eb4a           jmp 0x254d
0x00002503      4c89ff         mov rdi, r15
0x00002506      e865220000     call sym.quote
0x0000250b      488d35743a00.  lea rsi, str.invalid_group__s           ; 0x5f86 ; "invalid group %s"
0x00002512      ba05000000     mov edx, 5
0x00002517      31ff           xor edi, edi
0x00002519      4889442408     mov qword [rsp + 8], rax
0x0000251e      e87df2ffff     call sym.imp.dcgettext
0x00002523      4989c7         mov r15, rax
0x00002526      e8e5f1ffff     call sym.imp.__errno_location
0x0000252b      488b4c2408     mov rcx, qword [rsp + 8]
0x00002530      8b30           mov esi, dword [rax]
0x00002532      4c89fa         mov rdx, r15
0x00002535      31ff           xor edi, edi
0x00002537      31c0           xor eax, eax
0x00002539      e862f4ffff     call sym.imp.error
0x0000253e      c7442408ffff.  mov dword [rsp + 8], 0xffffffff         ; [0xffffffff:4]=-1 ; -1
0x00002546      e9c1feffff     jmp 0x240c
0x0000254b      31ed           xor ebp, ebp
0x0000254d      807c243c00     cmp byte [rsp + 0x3c], 0
0x00002552      0f8403ffffff   je 0x245b
0x00002558      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000255d      e80e220000     call sym.quote
0x00002562      488d352e3a00.  lea rsi, str.invalid_group_list__s      ; 0x5f97 ; "invalid group list %s"
0x00002569      4889c3         mov rbx, rax
0x0000256c      31ff           xor edi, edi
0x0000256e      ba05000000     mov edx, 5
0x00002573      e828f2ffff     call sym.imp.dcgettext
0x00002578      4889d9         mov rcx, rbx
0x0000257b      4889c2         mov rdx, rax
0x0000257e      31f6           xor esi, esi
0x00002580      31ff           xor edi, edi
0x00002582      31c0           xor eax, eax
0x00002584      e817f4ffff     call sym.imp.error
0x00002589      e9cdfeffff     jmp 0x245b
0x0000258e      c7442408ffff.  mov dword [rsp + 8], 0xffffffff         ; [0xffffffff:4]=-1 ; -1
0x00002596      e9d0feffff     jmp 0x246b
0x0000259b      e840f2ffff     call sym.imp.__stack_chk_fail
;-- usage:
0x000025a0      4155           push r13
0x000025a2      4154           push r12
0x000025a4      ba05000000     mov edx, 5
0x000025a9      55             push rbp
0x000025aa      53             push rbx
0x000025ab      89fd           mov ebp, edi
0x000025ad      4881ec880000.  sub rsp, 0x88
0x000025b4      488b1d256b20.  mov rbx, qword [obj.program_name]       ; [0x2090e0:8]=0
0x000025bb      64488b042528.  mov rax, qword fs:[0x28]
0x000025c4      4889442478     mov qword [rsp + 0x78], rax
0x000025c9      31c0           xor eax, eax
0x000025cb      85ff           test edi, edi
0x000025cd      742e           je 0x25fd
0x000025cf      488d353a3b00.  lea rsi, str.Try___s___help__for_more_information. ; 0x6110 ; "Try '%s --help' for more information.\n"
0x000025d6      31ff           xor edi, edi
0x000025d8      e8c3f1ffff     call sym.imp.dcgettext
0x000025dd      488b3ddc6a20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x000025e4      4889c2         mov rdx, rax
0x000025e7      4889d9         mov rcx, rbx
0x000025ea      be01000000     mov esi, 1
0x000025ef      31c0           xor eax, eax
0x000025f1      e84af4ffff     call sym.imp.__fprintf_chk
0x000025f6      89ef           mov edi, ebp
0x000025f8      e823f4ffff     call sym.imp.exit
0x000025fd      488d35343b00.  lea rsi, str.Usage:__s__OPTION__NEWROOT__COMMAND__ARG_..._____or:___s_OPTION ; 0x6138 ; "Usage: %s [OPTION] NEWROOT [COMMAND [ARG]...]\n  or:  %s OPTION\n"
0x00002604      31ff           xor edi, edi
0x00002606      e895f1ffff     call sym.imp.dcgettext
0x0000260b      4889d9         mov rcx, rbx
0x0000260e      4889da         mov rdx, rbx
0x00002611      4889c6         mov rsi, rax
0x00002614      bf01000000     mov edi, 1
0x00002619      31c0           xor eax, eax
0x0000261b      e870f3ffff     call sym.imp.__printf_chk
0x00002620      488b1d616a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002627      488d354a3b00.  lea rsi, str.Run_COMMAND_with_root_directory_set_to_NEWROOT. ; 0x6178 ; "Run COMMAND with root directory set to NEWROOT.\n\n"
0x0000262e      ba05000000     mov edx, 5
0x00002633      31ff           xor edi, edi
0x00002635      e866f1ffff     call sym.imp.dcgettext
0x0000263a      4889de         mov rsi, rbx
0x0000263d      4889c7         mov rdi, rax
0x00002640      e85bf2ffff     call sym.imp.fputs_unlocked
0x00002645      488b1d3c6a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x0000264c      488d355d3b00.  lea rsi, str.groups_G_LIST________specify_supplementary_groups_as_g1_g2_.._gN ; 0x61b0 ; "  --groups=G_LIST        specify supplementary groups as g1,g2,..,gN\n"
0x00002653      ba05000000     mov edx, 5
0x00002658      31ff           xor edi, edi
0x0000265a      e841f1ffff     call sym.imp.dcgettext
0x0000265f      4889de         mov rsi, rbx
0x00002662      4889c7         mov rdi, rax
0x00002665      e836f2ffff     call sym.imp.fputs_unlocked
0x0000266a      488b1d176a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002671      488d35803b00.  lea rsi, str.userspec_USER:GROUP__specify_user_and_group__ID_or_name__to_use ; 0x61f8 ; "  --userspec=USER:GROUP  specify user and group (ID or name) to use\n"
0x00002678      ba05000000     mov edx, 5
0x0000267d      31ff           xor edi, edi
0x0000267f      e81cf1ffff     call sym.imp.dcgettext
0x00002684      4889de         mov rsi, rbx
0x00002687      4889c7         mov rdi, rax
0x0000268a      e811f2ffff     call sym.imp.fputs_unlocked
0x0000268f      488d35903e00.  lea rsi, [0x00006526]                   ; "/"
0x00002696      bf04000000     mov edi, 4
0x0000269b      e8001e0000     call sym.quotearg_style
0x000026a0      488d35993b00.  lea rsi, str.skip_chdir___________do_not_change_working_directory_to__s ; 0x6240 ; "  --skip-chdir           do not change working directory to %s\n"
0x000026a7      4889c3         mov rbx, rax
0x000026aa      ba05000000     mov edx, 5
0x000026af      31ff           xor edi, edi
0x000026b1      e8eaf0ffff     call sym.imp.dcgettext
0x000026b6      4889da         mov rdx, rbx
0x000026b9      4889c6         mov rsi, rax
0x000026bc      bf01000000     mov edi, 1
0x000026c1      31c0           xor eax, eax
0x000026c3      e8c8f2ffff     call sym.imp.__printf_chk
0x000026c8      488b1db96920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000026cf      488d35aa3b00.  lea rsi, str.help_____display_this_help_and_exit ; 0x6280 ; "      --help     display this help and exit\n"
0x000026d6      ba05000000     mov edx, 5
0x000026db      31ff           xor edi, edi
0x000026dd      e8bef0ffff     call sym.imp.dcgettext
0x000026e2      4889de         mov rsi, rbx
0x000026e5      4889c7         mov rdi, rax
0x000026e8      e8b3f1ffff     call sym.imp.fputs_unlocked
0x000026ed      488b1d946920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000026f4      488d35b53b00.  lea rsi, str.version__output_version_information_and_exit ; 0x62b0 ; "      --version  output version information and exit\n"
0x000026fb      ba05000000     mov edx, 5
0x00002700      31ff           xor edi, edi
0x00002702      e899f0ffff     call sym.imp.dcgettext
0x00002707      4889de         mov rsi, rbx
0x0000270a      4889c7         mov rdi, rax
0x0000270d      e88ef1ffff     call sym.imp.fputs_unlocked
0x00002712      488b1d6f6920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002719      488d35c83b00.  lea rsi, str.If_no_command_is_given__run____SHELL___i___default:___bin_sh__i__. ; 0x62e8 ; "\nIf no command is given, run '\"$SHELL\" -i' (default: '/bin/sh -i').\n"
0x00002720      ba05000000     mov edx, 5
0x00002725      31ff           xor edi, edi
0x00002727      e874f0ffff     call sym.imp.dcgettext
0x0000272c      4889de         mov rsi, rbx
0x0000272f      4889c7         mov rdi, rax
0x00002732      488d1d743800.  lea rbx, str.chroot                     ; 0x5fad ; "chroot"
0x00002739      e862f1ffff     call sym.imp.fputs_unlocked
0x0000273e      488d056f3800.  lea rax, [0x00005fb4]                   ; "["
0x00002745      488d0da93800.  lea rcx, str.sha256sum                  ; 0x5ff5 ; "sha256sum"
0x0000274c      48c744246000.  mov qword [rsp + 0x60], 0
0x00002755      48c744246800.  mov qword [rsp + 0x68], 0
0x0000275e      4889e2         mov rdx, rsp
0x00002761      48890424       mov qword [rsp], rax
0x00002765      488d054a3800.  lea rax, str.test_invocation            ; 0x5fb6 ; "test invocation"
0x0000276c      48894c2430     mov qword [rsp + 0x30], rcx
0x00002771      488d0d873800.  lea rcx, str.sha384sum                  ; 0x5fff ; "sha384sum"
0x00002778      4889442408     mov qword [rsp + 8], rax
0x0000277d      488d05aa3800.  lea rax, [0x0000602e]                   ; "coreutils"
0x00002784      48894c2440     mov qword [rsp + 0x40], rcx
0x00002789      488d0d793800.  lea rcx, str.sha512sum                  ; 0x6009 ; "sha512sum"
0x00002790      4889442410     mov qword [rsp + 0x10], rax
0x00002795      488d052a3800.  lea rax, str.Multi_call_invocation      ; 0x5fc6 ; "Multi-call invocation"
0x0000279c      48894c2450     mov qword [rsp + 0x50], rcx
0x000027a1      4889442418     mov qword [rsp + 0x18], rax
0x000027a6      488d052f3800.  lea rax, str.sha224sum                  ; 0x5fdc ; "sha224sum"
0x000027ad      4889442420     mov qword [rsp + 0x20], rax
0x000027b2      488d052d3800.  lea rax, str.sha2_utilities             ; 0x5fe6 ; "sha2 utilities"
0x000027b9      4889442428     mov qword [rsp + 0x28], rax
0x000027be      4889442438     mov qword [rsp + 0x38], rax
0x000027c3      4889442448     mov qword [rsp + 0x48], rax
0x000027c8      4889442458     mov qword [rsp + 0x58], rax
0x000027cd      0f1f00         nop dword [rax]
0x000027d0      4883c210       add rdx, 0x10
0x000027d4      488b3a         mov rdi, qword [rdx]
0x000027d7      4885ff         test rdi, rdi
0x000027da      7413           je 0x27ef
0x000027dc      b907000000     mov ecx, 7
0x000027e1      4889de         mov rsi, rbx
0x000027e4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000027e6      0f97c0         seta al
0x000027e9      1c00           sbb al, 0
0x000027eb      84c0           test al, al
0x000027ed      75e1           jne 0x27d0
0x000027ef      4c8b6208       mov r12, qword [rdx + 8]
0x000027f3      31ff           xor edi, edi
0x000027f5      ba05000000     mov edx, 5
0x000027fa      488d35123800.  lea rsi, str.s_online_help:___s         ; 0x6013 ; "\n%s online help: <%s>\n"
0x00002801      4d85e4         test r12, r12
0x00002804      0f84c1000000   je 0x28cb
0x0000280a      e891efffff     call sym.imp.dcgettext
0x0000280f      488d0d1a3b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6330 ; "https://www.gnu.org/software/coreutils/"
0x00002816      488d150d3800.  lea rdx, str.GNU_coreutils              ; 0x602a ; "GNU coreutils"
0x0000281d      4889c6         mov rsi, rax
0x00002820      bf01000000     mov edi, 1
0x00002825      31c0           xor eax, eax
0x00002827      e864f1ffff     call sym.imp.__printf_chk
0x0000282c      31f6           xor esi, esi
0x0000282e      bf05000000     mov edi, 5
0x00002833      e848f1ffff     call sym.imp.setlocale
0x00002838      4885c0         test rax, rax
0x0000283b      741c           je 0x2859
0x0000283d      488d35f43700.  lea rsi, [0x00006038]                   ; "en_"
0x00002844      ba03000000     mov edx, 3
0x00002849      4889c7         mov rdi, rax
0x0000284c      e8cfeeffff     call sym.imp.strncmp
0x00002851      85c0           test eax, eax
0x00002853      0f8507010000   jne 0x2960
0x00002859      488d35dc3700.  lea rsi, str.Full_documentation___s_s   ; 0x603c ; "Full documentation <%s%s>\n"
0x00002860      31ff           xor edi, edi
0x00002862      ba05000000     mov edx, 5
0x00002867      e834efffff     call sym.imp.dcgettext
0x0000286c      488d0d3a3700.  lea rcx, str.chroot                     ; 0x5fad ; "chroot"
0x00002873      488d15b63a00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6330 ; "https://www.gnu.org/software/coreutils/"
0x0000287a      4889c6         mov rsi, rax
0x0000287d      bf01000000     mov edi, 1
0x00002882      31c0           xor eax, eax
0x00002884      e807f1ffff     call sym.imp.__printf_chk
0x00002889      4939dc         cmp r12, rbx
0x0000288c      488d0d3d3700.  lea rcx, [0x00005fd0]                   ; " invocation"
0x00002893      488d1def4100.  lea rbx, [0x00006a89]
0x0000289a      480f44d9       cmove rbx, rcx
0x0000289e      488d35fb3a00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x63a0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000028a5      31ff           xor edi, edi
0x000028a7      ba05000000     mov edx, 5
0x000028ac      e8efeeffff     call sym.imp.dcgettext
0x000028b1      4889d9         mov rcx, rbx
0x000028b4      4889c6         mov rsi, rax
0x000028b7      4c89e2         mov rdx, r12
0x000028ba      bf01000000     mov edi, 1
0x000028bf      31c0           xor eax, eax
0x000028c1      e8caf0ffff     call sym.imp.__printf_chk
0x000028c6      e92bfdffff     jmp 0x25f6
0x000028cb      e8d0eeffff     call sym.imp.dcgettext
0x000028d0      488d0d593a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6330 ; "https://www.gnu.org/software/coreutils/"
0x000028d7      488d154c3700.  lea rdx, str.GNU_coreutils              ; 0x602a ; "GNU coreutils"
0x000028de      4889c6         mov rsi, rax
0x000028e1      bf01000000     mov edi, 1
0x000028e6      31c0           xor eax, eax
0x000028e8      e8a3f0ffff     call sym.imp.__printf_chk
0x000028ed      31f6           xor esi, esi
0x000028ef      bf05000000     mov edi, 5
0x000028f4      e887f0ffff     call sym.imp.setlocale
0x000028f9      4885c0         test rax, rax
0x000028fc      7418           je 0x2916
0x000028fe      488d35333700.  lea rsi, [0x00006038]                   ; "en_"
0x00002905      ba03000000     mov edx, 3
0x0000290a      4889c7         mov rdi, rax
0x0000290d      e80eeeffff     call sym.imp.strncmp
0x00002912      85c0           test eax, eax
0x00002914      7543           jne 0x2959
0x00002916      488d351f3700.  lea rsi, str.Full_documentation___s_s   ; 0x603c ; "Full documentation <%s%s>\n"
0x0000291d      ba05000000     mov edx, 5
0x00002922      31ff           xor edi, edi
0x00002924      4c8d25823600.  lea r12, str.chroot                     ; 0x5fad ; "chroot"
0x0000292b      488d1d9e3600.  lea rbx, [0x00005fd0]                   ; " invocation"
0x00002932      e869eeffff     call sym.imp.dcgettext
0x00002937      488d0d6f3600.  lea rcx, str.chroot                     ; 0x5fad ; "chroot"
0x0000293e      488d15eb3900.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6330 ; "https://www.gnu.org/software/coreutils/"
0x00002945      4889c6         mov rsi, rax
0x00002948      bf01000000     mov edi, 1
0x0000294d      31c0           xor eax, eax
0x0000294f      e83cf0ffff     call sym.imp.__printf_chk
0x00002954      e945ffffff     jmp 0x289e
0x00002959      4c8d254d3600.  lea r12, str.chroot                     ; 0x5fad ; "chroot"
0x00002960      4c8b2d216720.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002967      488d35ea3900.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6358 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000296e      31ff           xor edi, edi
0x00002970      ba05000000     mov edx, 5
0x00002975      e826eeffff     call sym.imp.dcgettext
0x0000297a      4c89ee         mov rsi, r13
0x0000297d      4889c7         mov rdi, rax
0x00002980      e81befffff     call sym.imp.fputs_unlocked
0x00002985      e9cffeffff     jmp 0x2859
0x0000298a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00002990      48893d416720.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2090d8:8]=0
0x00002997      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002998      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000029a0      40883d296720.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2090d0:1]=0
0x000029a7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000029a8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000029b0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000029b1      53             push rbx
0x000029b2      4883ec08       sub rsp, 8
0x000029b6      488b3dcb6620.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000029bd      e8fe2f0000     call sym.close_stream
0x000029c2      85c0           test eax, eax
0x000029c4      7416           je 0x29dc
0x000029c6      e845edffff     call sym.imp.__errno_location
0x000029cb      803dfe662000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2090d0:1]=0
0x000029d2      4889c3         mov rbx, rax
0x000029d5      741c           je 0x29f3
0x000029d7      833820         cmp dword [rax], 0x20
0x000029da      7517           jne 0x29f3
0x000029dc      488b3ddd6620.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x000029e3      e8d82f0000     call sym.close_stream
0x000029e8      85c0           test eax, eax
0x000029ea      7546           jne 0x2a32
0x000029ec      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000029f0      5b             pop rbx
0x000029f1      5d             pop rbp
0x000029f2      c3             ret
0x000029f3      488d35d53a00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x64cf ; "write error"
0x000029fa      31ff           xor edi, edi
0x000029fc      ba05000000     mov edx, 5
0x00002a01      e89aedffff     call sym.imp.dcgettext
0x00002a06      488b3dcb6620.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2090d8:8]=0
0x00002a0d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002a10      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002a13      7428           je 0x2a3d
0x00002a15      e8561b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002a1a      8b33           mov esi, dword [rbx]
0x00002a1c      488d15b83a00.  lea rdx, str.s:__s                      ; 0x64db ; "%s: %s"
0x00002a23      4889c1         mov rcx, rax
0x00002a26      4989e8         mov r8, rbp
0x00002a29      31ff           xor edi, edi
0x00002a2b      31c0           xor eax, eax
0x00002a2d      e86eefffff     call sym.imp.error
0x00002a32      8b3de0652000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x209018:4]=1
0x00002a38      e8f3ecffff     call sym.imp._exit
0x00002a3d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002a3f      488d15993a00.  lea rdx, [0x000064df]                   ; "%s"
0x00002a46      4889c1         mov rcx, rax
0x00002a49      31ff           xor edi, edi
0x00002a4b      31c0           xor eax, eax
0x00002a4d      e84eefffff     call sym.imp.error
0x00002a52      ebde           jmp 0x2a32
0x00002a54      662e0f1f8400.  nop word cs:[rax + rax]
0x00002a5e      6690           nop
;-- set_program_name:
0x00002a60      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002a63      53             push rbx
0x00002a64      7477           je 0x2add                               ; ../coreutils-8.31/lib/progname.c:51
0x00002a66      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002a6b      4889fb         mov rbx, rdi
0x00002a6e      e8bdedffff     call sym.imp.strrchr
0x00002a73      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002a76      7455           je 0x2acd
0x00002a78      4c8d4001       lea r8, [rax + 1]
0x00002a7c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002a7f      4829da         sub rdx, rbx
0x00002a82      4883fa06       cmp rdx, 6
0x00002a86      7e45           jle 0x2acd
0x00002a88      488d70fa       lea rsi, [rax - 6]
0x00002a8c      488d3d8d3a00.  lea rdi, str..libs                      ; 0x6520 ; "/.libs/"
0x00002a93      b907000000     mov ecx, 7
0x00002a98      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002a9a      0f97c2         seta dl
0x00002a9d      80da00         sbb dl, 0
0x00002aa0      84d2           test dl, dl
0x00002aa2      7529           jne 0x2acd
0x00002aa4      488d3d7d3a00.  lea rdi, [0x00006528]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002aab      b903000000     mov ecx, 3
0x00002ab0      4c89c6         mov rsi, r8
0x00002ab3      4c89c3         mov rbx, r8
0x00002ab6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002ab8      0f97c2         seta dl
0x00002abb      80da00         sbb dl, 0
0x00002abe      84d2           test dl, dl
0x00002ac0      750b           jne 0x2acd
0x00002ac2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002ac6      48891db36520.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x209080:8]=0
0x00002acd      48891d0c6620.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2090e0:8]=0
0x00002ad4      48891dc56520.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x00002adb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002adc      c3             ret
0x00002add      488b0ddc6520.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002ae4      488d3dfd3900.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x64e8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002aeb      ba37000000     mov edx, 0x37                           ; '7'
0x00002af0      be01000000     mov esi, 1
0x00002af5      e836efffff     call sym.imp.fwrite
0x00002afa      e801ecffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002aff      90             nop
;-- gettext_quote.part.1:
0x00002b00      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002b01      53             push rbx
0x00002b02      4889fd         mov rbp, rdi
0x00002b05      89f3           mov ebx, esi
0x00002b07      4883ec08       sub rsp, 8
0x00002b0b      e8e02f0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002b10      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002b13      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002b16      80fa55         cmp dl, 0x55
0x00002b19      7475           je 0x2b90
0x00002b1b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002b1e      7420           je 0x2b40
0x00002b20      488d05143a00.  lea rax, str.l______l                   ; 0x653b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002b27      488d150f3a00.  lea rdx, [0x0000653d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002b2e      83fb09         cmp ebx, 9
0x00002b31      480f45c2       cmovne rax, rdx
0x00002b35      4883c408       add rsp, 8
0x00002b39      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002b3a      5d             pop rbp
0x00002b3b      c3             ret
0x00002b3c      0f1f4000       nop dword [rax]
0x00002b40      0fb65001       movzx edx, byte [rax + 1]
0x00002b44      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002b47      80fa42         cmp dl, 0x42
0x00002b4a      75d4           jne 0x2b20
0x00002b4c      80780231       cmp byte [rax + 2], 0x31
0x00002b50      75ce           jne 0x2b20
0x00002b52      80780338       cmp byte [rax + 3], 0x38
0x00002b56      75c8           jne 0x2b20
0x00002b58      80780430       cmp byte [rax + 4], 0x30
0x00002b5c      75c2           jne 0x2b20
0x00002b5e      80780533       cmp byte [rax + 5], 0x33
0x00002b62      75bc           jne 0x2b20
0x00002b64      80780630       cmp byte [rax + 6], 0x30
0x00002b68      75b6           jne 0x2b20
0x00002b6a      80780700       cmp byte [rax + 7], 0
0x00002b6e      75b0           jne 0x2b20
0x00002b70      807d0060       cmp byte [rbp], 0x60
0x00002b74      488d05b93900.  lea rax, [0x00006534]
0x00002b7b      488d15b63900.  lea rdx, [0x00006538]
0x00002b82      480f45c2       cmovne rax, rdx
0x00002b86      4883c408       add rsp, 8
0x00002b8a      5b             pop rbx
0x00002b8b      5d             pop rbp
0x00002b8c      c3             ret
0x00002b8d      0f1f00         nop dword [rax]
0x00002b90      0fb65001       movzx edx, byte [rax + 1]
0x00002b94      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002b97      80fa54         cmp dl, 0x54
0x00002b9a      7584           jne 0x2b20
0x00002b9c      0fb65002       movzx edx, byte [rax + 2]
0x00002ba0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002ba3      80fa46         cmp dl, 0x46
0x00002ba6      0f8574ffffff   jne 0x2b20
0x00002bac      8078032d       cmp byte [rax + 3], 0x2d
0x00002bb0      0f856affffff   jne 0x2b20
0x00002bb6      80780438       cmp byte [rax + 4], 0x38
0x00002bba      0f8560ffffff   jne 0x2b20
0x00002bc0      80780500       cmp byte [rax + 5], 0
0x00002bc4      0f8556ffffff   jne 0x2b20
0x00002bca      807d0060       cmp byte [rbp], 0x60
0x00002bce      488d05573900.  lea rax, [0x0000652c]                   ; "\u2018"
0x00002bd5      488d15543900.  lea rdx, [0x00006530]                   ; "\u2019"
0x00002bdc      480f45c2       cmovne rax, rdx
0x00002be0      4883c408       add rsp, 8
0x00002be4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002be5      5d             pop rbp
0x00002be6      c3             ret
0x00002be7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002bf0      4157           push r15
0x00002bf2      4156           push r14
0x00002bf4      4589c7         mov r15d, r8d
0x00002bf7      4155           push r13
0x00002bf9      4154           push r12
0x00002bfb      4989fe         mov r14, rdi
0x00002bfe      55             push rbp
0x00002bff      53             push rbx
0x00002c00      4489cb         mov ebx, r9d
0x00002c03      4989f5         mov r13, rsi
0x00002c06      4889cd         mov rbp, rcx
0x00002c09      83e302         and ebx, 2
0x00002c0c      4881ecb80000.  sub rsp, 0xb8
0x00002c13      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002c1b      4889542410     mov qword [rsp + 0x10], rdx
0x00002c20      4489442408     mov dword [rsp + 8], r8d
0x00002c25      44894c2478     mov dword [rsp + 0x78], r9d
0x00002c2a      4889442420     mov qword [rsp + 0x20], rax
0x00002c2f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002c37      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002c3c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002c44      4889442460     mov qword [rsp + 0x60], rax
0x00002c49      64488b042528.  mov rax, qword fs:[0x28]
0x00002c52      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002c5a      31c0           xor eax, eax
0x00002c5c      e84febffff     call sym.imp.__ctype_get_mb_cur_max
0x00002c61      4183ff0a       cmp r15d, 0xa
0x00002c65      4889442458     mov qword [rsp + 0x58], rax
0x00002c6a      0f87af110000   ja 0x3e1f
0x00002c70      488d0d293900.  lea rcx, [0x000065a0]
0x00002c77      4489fa         mov edx, r15d
0x00002c7a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002c7e      4801c8         add rax, rcx
0x00002c81      ffe0           jmp rax
0x00002c83      c644240e01     mov byte [rsp + 0xe], 1
0x00002c88      c644247c00     mov byte [rsp + 0x7c], 0
0x00002c8d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002c90      48c744245000.  mov qword [rsp + 0x50], 0
0x00002c99      c644240f01     mov byte [rsp + 0xf], 1
0x00002c9e      c644240d00     mov byte [rsp + 0xd], 0
0x00002ca3      488d05933800.  lea rax, [0x0000653d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002caa      48c744241801.  mov qword [rsp + 0x18], 1
0x00002cb3      4531ff         xor r15d, r15d
0x00002cb6      c74424080200.  mov dword [rsp + 8], 2
0x00002cbe      4889442448     mov qword [rsp + 0x48], rax
0x00002cc3      4531db         xor r11d, r11d
0x00002cc6      4889e8         mov rax, rbp
0x00002cc9      4589e0         mov r8d, r12d
0x00002ccc      4c89dd         mov rbp, r11
0x00002ccf      4989c3         mov r11, rax
0x00002cd2      660f1f440000   nop word [rax + rax]
0x00002cd8      4939eb         cmp r11, rbp
0x00002cdb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002cdf      4983fbff       cmp r11, 0xffffffffffffffff
0x00002ce3      750d           jne 0x2cf2
0x00002ce5      488b442410     mov rax, qword [rsp + 0x10]
0x00002cea      803c2800       cmp byte [rax + rbp], 0
0x00002cee      410f95c4       setne r12b
0x00002cf2      4584e4         test r12b, r12b
0x00002cf5      0f8455060000   je 0x3350
0x00002cfb      837c240802     cmp dword [rsp + 8], 2
0x00002d00      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002d05      4c8d0c2f       lea r9, [rdi + rbp]
0x00002d09      0f95c0         setne al
0x00002d0c      2244240d       and al, byte [rsp + 0xd]
0x00002d10      4189c2         mov r10d, eax
0x00002d13      0f84a7000000   je 0x2dc0
0x00002d19      488b442418     mov rax, qword [rsp + 0x18]
0x00002d1e      4885c0         test rax, rax
0x00002d21      0f8429040000   je 0x3150
0x00002d27      4983fbff       cmp r11, 0xffffffffffffffff
0x00002d2b      488d5c0500     lea rbx, [rbp + rax]
0x00002d30      752e           jne 0x2d60
0x00002d32      4883f801       cmp rax, 1
0x00002d36      7628           jbe 0x2d60
0x00002d38      4488442438     mov byte [rsp + 0x38], r8b
0x00002d3d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002d42      4c894c2428     mov qword [rsp + 0x28], r9
0x00002d47      e874eaffff     call sym.imp.strlen
0x00002d4c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002d52      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002d58      4989c3         mov r11, rax
0x00002d5b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002d60      4c39db         cmp rbx, r11
0x00002d63      4488542428     mov byte [rsp + 0x28], r10b
0x00002d68      0f87b2050000   ja 0x3320
0x00002d6e      488b542418     mov rdx, qword [rsp + 0x18]
0x00002d73      488b742448     mov rsi, qword [rsp + 0x48]
0x00002d78      4c89cf         mov rdi, r9
0x00002d7b      4c895c2440     mov qword [rsp + 0x40], r11
0x00002d80      4488442438     mov byte [rsp + 0x38], r8b
0x00002d85      4c894c2430     mov qword [rsp + 0x30], r9
0x00002d8a      e801ebffff     call sym.imp.memcmp
0x00002d8f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002d91      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002d96      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002d9c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002da1      0f8579050000   jne 0x3320
0x00002da7      807c240f00     cmp byte [rsp + 0xf], 0
0x00002dac      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002db2      0f857d0f0000   jne 0x3d35
0x00002db8      0f1f84000000.  nop dword [rax + rax]
0x00002dc0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002dc4      80fb7e         cmp bl, 0x7e
0x00002dc7      0f871b030000   ja 0x30e8
0x00002dcd      488d0df83700.  lea rcx, [0x000065cc]
0x00002dd4      0fb6d3         movzx edx, bl
0x00002dd7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002ddb      4801c8         add rax, rcx
0x00002dde      ffe0           jmp rax
0x00002de0      4531d2         xor r10d, r10d
0x00002de3      4983fb01       cmp r11, 1
0x00002de7      0f95c0         setne al
0x00002dea      4983fbff       cmp r11, 0xffffffffffffffff
0x00002dee      750c           jne 0x2dfc
0x00002df0      488b442410     mov rax, qword [rsp + 0x10]
0x00002df5      80780100       cmp byte [rax + 1], 0
0x00002df9      0f95c0         setne al
0x00002dfc      837c240802     cmp dword [rsp + 8], 2
0x00002e01      0f94c2         sete dl
0x00002e04      84c0           test al, al
0x00002e06      0f844c020000   je 0x3058
0x00002e0c      4531e4         xor r12d, r12d
0x00002e0f      31c0           xor eax, eax
0x00002e11      0f1f80000000.  nop dword [rax]
0x00002e18      807c240d01     cmp byte [rsp + 0xd], 1
0x00002e1d      0f850f010000   jne 0x2f32
0x00002e23      84d2           test dl, dl
0x00002e25      0f8507010000   jne 0x2f32
0x00002e2b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002e30      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002e33      7414           je 0x2e49
0x00002e35      89da           mov edx, ebx
0x00002e37      c0ea05         shr dl, 5
0x00002e3a      0fb6d2         movzx edx, dl
0x00002e3d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002e40      0fa3da         bt edx, ebx
0x00002e43      0f824a010000   jb 0x2f93
0x00002e49      4584d2         test r10b, r10b
0x00002e4c      0f8541010000   jne 0x2f93
0x00002e52      83f001         xor eax, 1
0x00002e55      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002e59      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002e5c      84c0           test al, al
0x00002e5e      7420           je 0x2e80                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002e60      4d39fd         cmp r13, r15
0x00002e63      7605           jbe 0x2e6a
0x00002e65      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002e6a      498d4701       lea rax, [r15 + 1]
0x00002e6e      4939c5         cmp r13, rax
0x00002e71      7606           jbe 0x2e79
0x00002e73      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002e79      4983c702       add r15, 2
0x00002e7d      4531c0         xor r8d, r8d
0x00002e80      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002e83      7304           jae 0x2e89                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002e85      43881c3e       mov byte [r14 + r15], bl
0x00002e89      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002e8e      4983c701       add r15, 1
0x00002e92      b800000000     mov eax, 0
0x00002e97      4584e4         test r12b, r12b
0x00002e9a      0f44f8         cmove edi, eax
0x00002e9d      40887c240e     mov byte [rsp + 0xe], dil
0x00002ea2      e931feffff     jmp 0x2cd8
0x00002ea7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002eb0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002eb3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002eb7      83f802         cmp eax, 2
0x00002eba      0f84b8050000   je 0x3478
0x00002ec0      83f805         cmp eax, 5
0x00002ec3      0f846f050000   je 0x3438
0x00002ec9      83f802         cmp eax, 2
0x00002ecc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002ed1      0f94c2         sete dl
0x00002ed4      4531e4         xor r12d, r12d
0x00002ed7      31c0           xor eax, eax
0x00002ed9      e93affffff     jmp 0x2e18
0x00002ede      6690           nop
0x00002ee0      4531d2         xor r10d, r10d
0x00002ee3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002ee8      0f8402050000   je 0x33f0
0x00002eee      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002ef3      31d2           xor edx, edx
0x00002ef5      31c0           xor eax, eax
0x00002ef7      bb27000000     mov ebx, 0x27                           ; '''
0x00002efc      e917ffffff     jmp 0x2e18
0x00002f01      0f1f80000000.  nop dword [rax]
0x00002f08      ba09000000     mov edx, 9
0x00002f0d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002f12      837c240802     cmp dword [rsp + 8], 2
0x00002f17      0f94c0         sete al
0x00002f1a      2244240f       and al, byte [rsp + 0xf]
0x00002f1e      0f854a010000   jne 0x306e
0x00002f24      807c240d00     cmp byte [rsp + 0xd], 0
0x00002f29      7565           jne 0x2f90
0x00002f2b      89d3           mov ebx, edx
0x00002f2d      4531e4         xor r12d, r12d
0x00002f30      31c0           xor eax, eax
0x00002f32      807c240f00     cmp byte [rsp + 0xf], 0
0x00002f37      0f85eefeffff   jne 0x2e2b
0x00002f3d      e907ffffff     jmp 0x2e49                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002f42      660f1f440000   nop word [rax + rax]
0x00002f48      ba08000000     mov edx, 8
0x00002f4d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002f52      ebd0           jmp 0x2f24
0x00002f54      0f1f4000       nop dword [rax]
0x00002f58      837c240802     cmp dword [rsp + 8], 2
0x00002f5d      0f84cd030000   je 0x3330
0x00002f63      807c240d00     cmp byte [rsp + 0xd], 0
0x00002f68      0f8412020000   je 0x3180
0x00002f6e      807c240f00     cmp byte [rsp + 0xf], 0
0x00002f73      0f8407020000   je 0x3180
0x00002f79      48837c241800   cmp qword [rsp + 0x18], 0
0x00002f7f      0f85b6030000   jne 0x333b
0x00002f85      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002f8a      660f1f440000   nop word [rax + rax]
0x00002f90      4531e4         xor r12d, r12d
0x00002f93      837c240802     cmp dword [rsp + 8], 2
0x00002f98      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002f9b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002fa0      89d0           mov eax, edx
0x00002fa2      0f8550080000   jne 0x37f8
0x00002fa8      4489c0         mov eax, r8d
0x00002fab      83f001         xor eax, 1
0x00002fae      20d0           and al, dl
0x00002fb0      742f           je 0x2fe1
0x00002fb2      4d39fd         cmp r13, r15
0x00002fb5      7605           jbe 0x2fbc
0x00002fb7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002fbc      498d5701       lea rdx, [r15 + 1]
0x00002fc0      4939d5         cmp r13, rdx
0x00002fc3      7606           jbe 0x2fcb
0x00002fc5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002fcb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00002fcf      4939d5         cmp r13, rdx
0x00002fd2      7606           jbe 0x2fda
0x00002fd4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002fda      4983c703       add r15, 3
0x00002fde      4189c0         mov r8d, eax
0x00002fe1      4d39fd         cmp r13, r15
0x00002fe4      7605           jbe 0x2feb
0x00002fe6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002feb      4983c701       add r15, 1
0x00002fef      4883c501       add rbp, 1
0x00002ff3      e988feffff     jmp 0x2e80
0x00002ff8      0f1f84000000.  nop dword [rax + rax]
0x00003000      807c240d00     cmp byte [rsp + 0xd], 0
0x00003005      0f85c8010000   jne 0x31d3
0x0000300b      31d2           xor edx, edx
0x0000300d      f644247801     test byte [rsp + 0x78], 1
0x00003012      0f8413ffffff   je 0x2f2b
0x00003018      4883c501       add rbp, 1
0x0000301c      e9b7fcffff     jmp 0x2cd8
0x00003021      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003028      837c240802     cmp dword [rsp + 8], 2
0x0000302d      0f94c2         sete dl
0x00003030      31c0           xor eax, eax
0x00003032      e9e1fdffff     jmp 0x2e18
0x00003037      660f1f840000.  nop word [rax + rax]
0x00003040      ba07000000     mov edx, 7
0x00003045      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000304a      e9d5feffff     jmp 0x2f24
0x0000304f      90             nop
0x00003050      837c240802     cmp dword [rsp + 8], 2
0x00003055      0f94c2         sete dl
0x00003058      4885ed         test rbp, rbp
0x0000305b      0f85abfdffff   jne 0x2e0c
0x00003061      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003066      20d0           and al, dl
0x00003068      0f84aafdffff   je 0x2e18
0x0000306e      4c89dd         mov rbp, r11
0x00003071      c74424080200.  mov dword [rsp + 8], 2
0x00003079      e9fb060000     jmp 0x3779
0x0000307e      6690           nop
0x00003080      837c240802     cmp dword [rsp + 8], 2
0x00003085      0f94c2         sete dl
0x00003088      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000308b      ebd4           jmp 0x3061
0x0000308d      0f1f00         nop dword [rax]
0x00003090      837c240802     cmp dword [rsp + 8], 2
0x00003095      bb20000000     mov ebx, 0x20                           ; "@"
0x0000309a      0f94c2         sete dl
0x0000309d      ebc2           jmp 0x3061
0x0000309f      90             nop
0x000030a0      ba0d000000     mov edx, 0xd
0x000030a5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000030aa      e963feffff     jmp 0x2f12
0x000030af      90             nop
0x000030b0      ba0c000000     mov edx, 0xc
0x000030b5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000030ba      e965feffff     jmp 0x2f24
0x000030bf      90             nop
0x000030c0      ba0b000000     mov edx, 0xb
0x000030c5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000030ca      e955feffff     jmp 0x2f24
0x000030cf      90             nop
0x000030d0      ba0a000000     mov edx, 0xa
0x000030d5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000030da      e933feffff     jmp 0x2f12
0x000030df      90             nop
0x000030e0      4531d2         xor r10d, r10d
0x000030e3      0f1f440000     nop dword [rax + rax]
0x000030e8      48837c245801   cmp qword [rsp + 0x58], 1
0x000030ee      0f85a4030000   jne 0x3498
0x000030f4      4c895c2438     mov qword [rsp + 0x38], r11
0x000030f9      4488442430     mov byte [rsp + 0x30], r8b
0x000030fe      4488542428     mov byte [rsp + 0x28], r10b
0x00003103      e878e9ffff     call sym.imp.__ctype_b_loc
0x00003108      488b08         mov rcx, qword [rax]
0x0000310b      0fb6d3         movzx edx, bl
0x0000310e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003114      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000311a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000311f      bf01000000     mov edi, 1
0x00003124      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003128      66250040       and ax, 0x4000
0x0000312c      410f95c4       setne r12b
0x00003130      0f94c0         sete al
0x00003133      2244240d       and al, byte [rsp + 0xd]
0x00003137      84c0           test al, al
0x00003139      0f8592090000   jne 0x3ad1
0x0000313f      837c240802     cmp dword [rsp + 8], 2
0x00003144      0f94c2         sete dl
0x00003147      e9ccfcffff     jmp 0x2e18
0x0000314c      0f1f4000       nop dword [rax]
0x00003150      410fb619       movzx ebx, byte [r9]
0x00003154      80fb7e         cmp bl, 0x7e
0x00003157      7787           ja 0x30e0
0x00003159      488d0d683600.  lea rcx, [0x000067c8]
0x00003160      0fb6d3         movzx edx, bl
0x00003163      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003167      4801c8         add rax, rcx
0x0000316a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000316c      0f1f4000       nop dword [rax]
0x00003170      4531d2         xor r10d, r10d
0x00003173      807c240d00     cmp byte [rsp + 0xd], 0
0x00003178      0f85f0fdffff   jne 0x2f6e
0x0000317e      6690           nop
0x00003180      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003185      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000318a      e995fdffff     jmp 0x2f24
0x0000318f      90             nop
0x00003190      ba0c000000     mov edx, 0xc
0x00003195      4531d2         xor r10d, r10d
0x00003198      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000319d      e982fdffff     jmp 0x2f24
0x000031a2      660f1f440000   nop word [rax + rax]
0x000031a8      ba0a000000     mov edx, 0xa
0x000031ad      4531d2         xor r10d, r10d
0x000031b0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000031b5      e958fdffff     jmp 0x2f12
0x000031ba      660f1f440000   nop word [rax + rax]
0x000031c0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000031c5      e9c6fdffff     jmp 0x2f90
0x000031ca      660f1f440000   nop word [rax + rax]
0x000031d0      4531d2         xor r10d, r10d
0x000031d3      837c240802     cmp dword [rsp + 8], 2
0x000031d8      0f94c2         sete dl
0x000031db      807c240f00     cmp byte [rsp + 0xf], 0
0x000031e0      0f85940b0000   jne 0x3d7a
0x000031e6      4489c0         mov eax, r8d
0x000031e9      4c89f9         mov rcx, r15
0x000031ec      83f001         xor eax, 1
0x000031ef      20d0           and al, dl
0x000031f1      742d           je 0x3220
0x000031f3      4d39fd         cmp r13, r15
0x000031f6      7605           jbe 0x31fd
0x000031f8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000031fd      498d4f01       lea rcx, [r15 + 1]
0x00003201      4939cd         cmp r13, rcx
0x00003204      7606           jbe 0x320c
0x00003206      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000320c      498d4f02       lea rcx, [r15 + 2]
0x00003210      4939cd         cmp r13, rcx
0x00003213      0f8730060000   ja 0x3849
0x00003219      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000321d      4189c0         mov r8d, eax
0x00003220      4939cd         cmp r13, rcx
0x00003223      7605           jbe 0x322a
0x00003225      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000322a      837c240802     cmp dword [rsp + 8], 2
0x0000322f      4c8d7901       lea r15, [rcx + 1]
0x00003233      0f8400060000   je 0x3839
0x00003239      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000323d      4c39d8         cmp rax, r11
0x00003240      7319           jae 0x325b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003242      488b442410     mov rax, qword [rsp + 0x10]
0x00003247      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000324c      88442428       mov byte [rsp + 0x28], al
0x00003250      83e830         sub eax, 0x30
0x00003253      3c09           cmp al, 9
0x00003255      0f862e080000   jbe 0x3a89
0x0000325b      4489e0         mov eax, r12d
0x0000325e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003263      4531e4         xor r12d, r12d
0x00003266      e9adfbffff     jmp 0x2e18                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000326b      0f1f440000     nop dword [rax + rax]
0x00003270      837c240802     cmp dword [rsp + 8], 2
0x00003275      4589d4         mov r12d, r10d
0x00003278      0f94c2         sete dl
0x0000327b      4531d2         xor r10d, r10d
0x0000327e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003280      e993fbffff     jmp 0x2e18                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003285      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003288      837c240802     cmp dword [rsp + 8], 2
0x0000328d      0f94c2         sete dl
0x00003290      4531d2         xor r10d, r10d
0x00003293      e9c0fdffff     jmp 0x3058
0x00003298      0f1f84000000.  nop dword [rax + rax]
0x000032a0      837c240802     cmp dword [rsp + 8], 2
0x000032a5      0f94c2         sete dl
0x000032a8      4531d2         xor r10d, r10d
0x000032ab      4531e4         xor r12d, r12d
0x000032ae      e9aefdffff     jmp 0x3061
0x000032b3      0f1f440000     nop dword [rax + rax]
0x000032b8      837c240802     cmp dword [rsp + 8], 2
0x000032bd      4589d4         mov r12d, r10d
0x000032c0      bb20000000     mov ebx, 0x20                           ; "@"
0x000032c5      0f94c2         sete dl
0x000032c8      4531d2         xor r10d, r10d
0x000032cb      e991fdffff     jmp 0x3061
0x000032d0      ba0d000000     mov edx, 0xd
0x000032d5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000032d8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000032dd      e930fcffff     jmp 0x2f12
0x000032e2      660f1f440000   nop word [rax + rax]
0x000032e8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000032ed      e99efcffff     jmp 0x2f90
0x000032f2      660f1f440000   nop word [rax + rax]
0x000032f8      ba09000000     mov edx, 9
0x000032fd      4531d2         xor r10d, r10d
0x00003300      bb74000000     mov ebx, 0x74                           ; 't'
0x00003305      e908fcffff     jmp 0x2f12
0x0000330a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003310      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003315      e976fcffff     jmp 0x2f90
0x0000331a      660f1f440000   nop word [rax + rax]
0x00003320      4531d2         xor r10d, r10d
0x00003323      e998faffff     jmp 0x2dc0
0x00003328      0f1f84000000.  nop dword [rax + rax]
0x00003330      807c240f00     cmp byte [rsp + 0xf], 0
0x00003335      0f8565090000   jne 0x3ca0
0x0000333b      4883c501       add rbp, 1
0x0000333f      4489c0         mov eax, r8d
0x00003342      4531e4         xor r12d, r12d
0x00003345      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000334a      e90dfbffff     jmp 0x2e5c
0x0000334f      90             nop
0x00003350      837c240802     cmp dword [rsp + 8], 2
0x00003355      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000335a      4589c4         mov r12d, r8d
0x0000335d      4c89dd         mov rbp, r11
0x00003360      0f94c2         sete dl
0x00003363      89d8           mov eax, ebx
0x00003365      4d85ff         test r15, r15
0x00003368      0f94c1         sete cl
0x0000336b      21d0           and eax, edx
0x0000336d      20c8           and al, cl
0x0000336f      0f85610a0000   jne 0x3dd6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003375      89d8           mov eax, ebx
0x00003377      83f001         xor eax, 1
0x0000337a      20c2           and dl, al
0x0000337c      0f846a090000   je 0x3cec
0x00003382      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003387      0f845d090000   je 0x3cea
0x0000338d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003392      0f85f5090000   jne 0x3d8d
0x00003398      4d85ed         test r13, r13
0x0000339b      0f94c0         sete al
0x0000339e      48837c245000   cmp qword [rsp + 0x50], 0
0x000033a4      0f95c2         setne dl
0x000033a7      20d0           and al, dl
0x000033a9      0f841d0a0000   je 0x3dcc
0x000033af      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000033b4      488d1d823100.  lea rbx, [0x0000653d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000033bb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000033bf      c74424080200.  mov dword [rsp + 8], 2
0x000033c7      41bf01000000   mov r15d, 1
0x000033cd      48c744241801.  mov qword [rsp + 0x18], 1
0x000033d6      c644240f00     mov byte [rsp + 0xf], 0
0x000033db      48895c2448     mov qword [rsp + 0x48], rbx
0x000033e0      8844247c       mov byte [rsp + 0x7c], al
0x000033e4      e9daf8ffff     jmp 0x2cc3
0x000033e9      0f1f80000000.  nop dword [rax]
0x000033f0      807c240f00     cmp byte [rsp + 0xf], 0
0x000033f5      0f85a5080000   jne 0x3ca0
0x000033fb      4d85ed         test r13, r13
0x000033fe      0f84fc030000   je 0x3800                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003404      31d2           xor edx, edx
0x00003406      48837c245000   cmp qword [rsp + 0x50], 0
0x0000340c      0f85ee030000   jne 0x3800                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003412      4c896c2450     mov qword [rsp + 0x50], r13
0x00003417      4983c703       add r15, 3
0x0000341b      31c0           xor eax, eax
0x0000341d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003422      4531c0         xor r8d, r8d
0x00003425      4989d5         mov r13, rdx
0x00003428      bb27000000     mov ebx, 0x27                           ; '''
0x0000342d      e917faffff     jmp 0x2e49
0x00003432      660f1f440000   nop word [rax + rax]
0x00003438      f644247804     test byte [rsp + 0x78], 4
0x0000343d      7421           je 0x3460
0x0000343f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003443      4c39d9         cmp rcx, r11
0x00003446      7318           jae 0x3460
0x00003448      488b442410     mov rax, qword [rsp + 0x10]
0x0000344d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003452      0f848a070000   je 0x3be2
0x00003458      0f1f84000000.  nop dword [rax + rax]
0x00003460      31d2           xor edx, edx
0x00003462      4531e4         xor r12d, r12d
0x00003465      31c0           xor eax, eax
0x00003467      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000346c      e9a7f9ffff     jmp 0x2e18
0x00003471      0f1f80000000.  nop dword [rax]
0x00003478      807c240f00     cmp byte [rsp + 0xf], 0
0x0000347d      0f851d080000   jne 0x3ca0
0x00003483      4531e4         xor r12d, r12d
0x00003486      31c0           xor eax, eax
0x00003488      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000348d      e9b7f9ffff     jmp 0x2e49                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003492      660f1f440000   nop word [rax + rax]
0x00003498      488d8424a000.  lea rax, [rsp + 0xa0]
0x000034a0      4983fbff       cmp r11, 0xffffffffffffffff
0x000034a4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000034b0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000034b5      752d           jne 0x34e4
0x000034b7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000034bc      4488442440     mov byte [rsp + 0x40], r8b
0x000034c1      4488542438     mov byte [rsp + 0x38], r10b
0x000034c6      4c894c2430     mov qword [rsp + 0x30], r9
0x000034cb      e8f0e2ffff     call sym.imp.strlen
0x000034d0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000034d6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000034dc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000034df      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000034e4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000034ec      31c9           xor ecx, ecx
0x000034ee      885c247e       mov byte [rsp + 0x7e], bl
0x000034f2      448844247d     mov byte [rsp + 0x7d], r8b
0x000034f7      4889cb         mov rbx, rcx
0x000034fa      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003502      4889442438     mov qword [rsp + 0x38], rax
0x00003507      448854247f     mov byte [rsp + 0x7f], r10b
0x0000350c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003514      4c89742440     mov qword [rsp + 0x40], r14
0x00003519      4c896c2470     mov qword [rsp + 0x70], r13
0x0000351e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003523      488b442410     mov rax, qword [rsp + 0x10]
0x00003528      4c8d741d00     lea r14, [rbp + rbx]
0x0000352d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003532      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003537      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000353c      4e8d2c30       lea r13, [rax + r14]
0x00003540      4c29f2         sub rdx, r14
0x00003543      4c89ee         mov rsi, r13
0x00003546      e8e5230000     call sym.rpl_mbrtowc
0x0000354b      4885c0         test rax, rax
0x0000354e      4989c7         mov r15, rax
0x00003551      744e           je 0x35a1
0x00003553      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003557      0f8418060000   je 0x3b75
0x0000355d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003561      0f849a050000   je 0x3b01
0x00003567      837c240802     cmp dword [rsp + 8], 2
0x0000356c      0f94c0         sete al
0x0000356f      2244240f       and al, byte [rsp + 0xf]
0x00003573      0f8597010000   jne 0x3710
0x00003579      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003580      e8ebe4ffff     call sym.imp.iswprint
0x00003585      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000358a      85c0           test eax, eax
0x0000358c      b800000000     mov eax, 0
0x00003591      440f44e0       cmove r12d, eax
0x00003595      4c01fb         add rbx, r15
0x00003598      e8c3e4ffff     call sym.imp.mbsinit
0x0000359d      85c0           test eax, eax
0x0000359f      7482           je 0x3523
0x000035a1      4489e2         mov edx, r12d
0x000035a4      4889df         mov rdi, rbx
0x000035a7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000035ad      83f201         xor edx, 1
0x000035b0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000035b5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000035bb      2254240d       and dl, byte [rsp + 0xd]
0x000035bf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000035c7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000035cc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000035d1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000035d6      4883ff01       cmp rdi, 1
0x000035da      0f86fb050000   jbe 0x3bdb
0x000035e0      4889f9         mov rcx, rdi
0x000035e3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000035e5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000035eb      4801e9         add rcx, rbp
0x000035ee      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000035f3      e9b6000000     jmp 0x36ae
0x000035f8      0f1f84000000.  nop dword [rax + rax]
0x00003600      837c240802     cmp dword [rsp + 8], 2
0x00003605      0f94c0         sete al
0x00003608      4584c9         test r9b, r9b
0x0000360b      0f85af040000   jne 0x3ac0
0x00003611      4489c6         mov esi, r8d
0x00003614      83f601         xor esi, 1
0x00003617      4020f0         and al, sil
0x0000361a      742f           je 0x364b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000361c      4d39fd         cmp r13, r15
0x0000361f      7605           jbe 0x3626
0x00003621      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003626      498d7701       lea rsi, [r15 + 1]
0x0000362a      4939f5         cmp r13, rsi
0x0000362d      7606           jbe 0x3635                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000362f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003635      498d7702       lea rsi, [r15 + 2]
0x00003639      4939f5         cmp r13, rsi
0x0000363c      7606           jbe 0x3644
0x0000363e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003644      4983c703       add r15, 3
0x00003648      4189c0         mov r8d, eax
0x0000364b      4d39fd         cmp r13, r15
0x0000364e      7605           jbe 0x3655
0x00003650      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003655      498d4701       lea rax, [r15 + 1]
0x00003659      4939c5         cmp r13, rax
0x0000365c      760d           jbe 0x366b
0x0000365e      89d8           mov eax, ebx
0x00003660      c0e806         shr al, 6
0x00003663      83c030         add eax, 0x30
0x00003666      4388443e01     mov byte [r14 + r15 + 1], al
0x0000366b      498d4702       lea rax, [r15 + 2]
0x0000366f      4939c5         cmp r13, rax
0x00003672      7610           jbe 0x3684
0x00003674      89d8           mov eax, ebx
0x00003676      c0e803         shr al, 3
0x00003679      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000367c      83c030         add eax, 0x30
0x0000367f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003684      83e307         and ebx, 7
0x00003687      4883c501       add rbp, 1
0x0000368b      4983c703       add r15, 3
0x0000368f      83c330         add ebx, 0x30
0x00003692      4839cd         cmp rbp, rcx
0x00003695      0f83e5f7ffff   jae 0x2e80
0x0000369b      89d6           mov esi, edx
0x0000369d      4d39fd         cmp r13, r15
0x000036a0      7604           jbe 0x36a6
0x000036a2      43881c3e       mov byte [r14 + r15], bl
0x000036a6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000036aa      4983c701       add r15, 1
0x000036ae      84d2           test dl, dl
0x000036b0      0f854affffff   jne 0x3600
0x000036b6      89f0           mov eax, esi
0x000036b8      83f001         xor eax, 1
0x000036bb      4421c0         and eax, r8d
0x000036be      4584d2         test r10b, r10b
0x000036c1      740e           je 0x36d1
0x000036c3      4d39fd         cmp r13, r15
0x000036c6      7605           jbe 0x36cd
0x000036c8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000036cd      4983c701       add r15, 1
0x000036d1      4883c501       add rbp, 1
0x000036d5      4839cd         cmp rbp, rcx
0x000036d8      0f837ef7ffff   jae 0x2e5c
0x000036de      84c0           test al, al
0x000036e0      0f84f8030000   je 0x3ade
0x000036e6      4d39fd         cmp r13, r15
0x000036e9      7605           jbe 0x36f0
0x000036eb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000036f0      498d4701       lea rax, [r15 + 1]
0x000036f4      4939c5         cmp r13, rax
0x000036f7      7606           jbe 0x36ff
0x000036f9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000036ff      4983c702       add r15, 2
0x00003703      4531d2         xor r10d, r10d
0x00003706      4531c0         xor r8d, r8d
0x00003709      eb92           jmp 0x369d
0x0000370b      0f1f440000     nop dword [rax + rax]
0x00003710      4983ff01       cmp r15, 1
0x00003714      0f845ffeffff   je 0x3579
0x0000371a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000371f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003723      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003728      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000372c      eb0f           jmp 0x373d
0x0000372e      6690           nop
0x00003730      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003734      4939d0         cmp r8, rdx
0x00003737      0f843cfeffff   je 0x3579
0x0000373d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003740      83e95b         sub ecx, 0x5b
0x00003743      80f921         cmp cl, 0x21
0x00003746      77e8           ja 0x3730                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003748      be01000000     mov esi, 1
0x0000374d      48d3e6         shl rsi, cl
0x00003750      4889f1         mov rcx, rsi
0x00003753      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000375d      4885f1         test rcx, rsi
0x00003760      74ce           je 0x3730
0x00003762      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003767      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000376c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003771      c74424080200.  mov dword [rsp + 8], 2
0x00003779      807c240d00     cmp byte [rsp + 0xd], 0
0x0000377e      7410           je 0x3790
0x00003780      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003782      b804000000     mov eax, 4
0x00003787      0f44442408     cmove eax, dword [rsp + 8]
0x0000378c      89442408       mov dword [rsp + 8], eax
0x00003790      4883ec08       sub rsp, 8
0x00003794      4889e9         mov rcx, rbp
0x00003797      4c89ee         mov rsi, r13
0x0000379a      ff742468       push qword [rsp + 0x68]
0x0000379e      ff742478       push qword [rsp + 0x78]
0x000037a2      4c89f7         mov rdi, r14
0x000037a5      6a00           push 0
0x000037a7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000037af      448b442428     mov r8d, dword [rsp + 0x28]
0x000037b4      488b542430     mov rdx, qword [rsp + 0x30]
0x000037b9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000037bd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000037c2      4883c420       add rsp, 0x20
0x000037c6      4989c7         mov r15, rax
0x000037c9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000037d1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000037da      4c89f8         mov rax, r15
0x000037dd      0f8500060000   jne 0x3de3
0x000037e3      4881c4b80000.  add rsp, 0xb8
0x000037ea      5b             pop rbx
0x000037eb      5d             pop rbp
0x000037ec      415c           pop r12
0x000037ee      415d           pop r13
0x000037f0      415e           pop r14
0x000037f2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000037f4      c3             ret
0x000037f5      0f1f00         nop dword [rax]
0x000037f8      4c89dd         mov rbp, r11
0x000037fb      e979ffffff     jmp 0x3779
0x00003800      4d39fd         cmp r13, r15
0x00003803      7605           jbe 0x380a
0x00003805      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000380a      498d4701       lea rax, [r15 + 1]
0x0000380e      4939c5         cmp r13, rax
0x00003811      7606           jbe 0x3819
0x00003813      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003819      498d4702       lea rax, [r15 + 2]
0x0000381d      4939c5         cmp r13, rax
0x00003820      0f86ec050000   jbe 0x3e12
0x00003826      4c89ea         mov rdx, r13
0x00003829      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000382f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003834      e9d9fbffff     jmp 0x3412
0x00003839      4489e0         mov eax, r12d
0x0000383c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003841      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003844      e900f6ffff     jmp 0x2e49                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003849      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000384f      e9c5f9ffff     jmp 0x3219
0x00003854      85db           test ebx, ebx
0x00003856      0f8527f4ffff   jne 0x2c83
0x0000385c      c644240d01     mov byte [rsp + 0xd], 1
0x00003861      4d85ed         test r13, r13
0x00003864      0f8590050000   jne 0x3dfa
0x0000386a      488d05cc2c00.  lea rax, [0x0000653d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003871      48c744245000.  mov qword [rsp + 0x50], 0
0x0000387a      c644240e01     mov byte [rsp + 0xe], 1
0x0000387f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003884      4531e4         xor r12d, r12d
0x00003887      c644240f00     mov byte [rsp + 0xf], 0
0x0000388c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003895      4889442448     mov qword [rsp + 0x48], rax
0x0000389a      41bf01000000   mov r15d, 1
0x000038a0      c74424080200.  mov dword [rsp + 8], 2
0x000038a8      e916f4ffff     jmp 0x2cc3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000038ad      0f1f00         nop dword [rax]
0x000038b0      85db           test ebx, ebx
0x000038b2      0f85f5030000   jne 0x3cad
0x000038b8      4d85ed         test r13, r13
0x000038bb      0f8425020000   je 0x3ae6
0x000038c1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000038c5      c644240e01     mov byte [rsp + 0xe], 1
0x000038ca      4531e4         xor r12d, r12d
0x000038cd      c644247c00     mov byte [rsp + 0x7c], 0
0x000038d2      48c744245000.  mov qword [rsp + 0x50], 0
0x000038db      488d05592c00.  lea rax, str.l______l                   ; 0x653b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000038e2      c644240f00     mov byte [rsp + 0xf], 0
0x000038e7      c644240d01     mov byte [rsp + 0xd], 1
0x000038ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000038f5      41bf01000000   mov r15d, 1
0x000038fb      4889442448     mov qword [rsp + 0x48], rax
0x00003900      e9bef3ffff     jmp 0x2cc3
0x00003905      488d052f2c00.  lea rax, str.l______l                   ; 0x653b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000390c      c644240e01     mov byte [rsp + 0xe], 1
0x00003911      c644247c00     mov byte [rsp + 0x7c], 0
0x00003916      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003919      48c744245000.  mov qword [rsp + 0x50], 0
0x00003922      c644240f01     mov byte [rsp + 0xf], 1
0x00003927      c644240d01     mov byte [rsp + 0xd], 1
0x0000392c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003935      4531ff         xor r15d, r15d
0x00003938      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000393d      c74424080500.  mov dword [rsp + 8], 5
0x00003945      e979f3ffff     jmp 0x2cc3
0x0000394a      c644240e01     mov byte [rsp + 0xe], 1
0x0000394f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003954      4531e4         xor r12d, r12d
0x00003957      48c744245000.  mov qword [rsp + 0x50], 0
0x00003960      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003965      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003968      c644240d01     mov byte [rsp + 0xd], 1
0x0000396d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003976      48c744244800.  mov qword [rsp + 0x48], 0
0x0000397f      e93ff3ffff     jmp 0x2cc3
0x00003984      837c24080a     cmp dword [rsp + 8], 0xa
0x00003989      7456           je 0x39e1
0x0000398b      488d35ad2b00.  lea rsi, [0x0000653f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003992      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003994      ba05000000     mov edx, 5
0x00003999      e802deffff     call sym.imp.dcgettext
0x0000399e      4889c1         mov rcx, rax
0x000039a1      4889442468     mov qword [rsp + 0x68], rax
0x000039a6      488d05922b00.  lea rax, [0x0000653f]                   ; "`"
0x000039ad      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000039b0      0f8498030000   je 0x3d4e
0x000039b6      488d35802b00.  lea rsi, [0x0000653d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000039bd      31ff           xor edi, edi
0x000039bf      ba05000000     mov edx, 5
0x000039c4      e8d7ddffff     call sym.imp.dcgettext
0x000039c9      4889c1         mov rcx, rax
0x000039cc      4889442460     mov qword [rsp + 0x60], rax
0x000039d1      488d05652b00.  lea rax, [0x0000653d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000039d8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000039db      0f8483030000   je 0x3d64
0x000039e1      4531ff         xor r15d, r15d
0x000039e4      85db           test ebx, ebx
0x000039e6      0f84c1010000   je 0x3bad
0x000039ec      85db           test ebx, ebx
0x000039ee      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000039f3      0f9544240f     setne byte [rsp + 0xf]
0x000039f8      4531e4         xor r12d, r12d
0x000039fb      4889df         mov rdi, rbx
0x000039fe      e8bdddffff     call sym.imp.strlen
0x00003a03      48895c2448     mov qword [rsp + 0x48], rbx
0x00003a08      4889442418     mov qword [rsp + 0x18], rax
0x00003a0d      c644240e01     mov byte [rsp + 0xe], 1
0x00003a12      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a17      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a20      c644240d01     mov byte [rsp + 0xd], 1
0x00003a25      e999f2ffff     jmp 0x2cc3
0x00003a2a      c644240e01     mov byte [rsp + 0xe], 1
0x00003a2f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a34      4531e4         xor r12d, r12d
0x00003a37      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a40      c644240f00     mov byte [rsp + 0xf], 0
0x00003a45      4531ff         xor r15d, r15d
0x00003a48      c644240d00     mov byte [rsp + 0xd], 0
0x00003a4d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003a56      48c744244800.  mov qword [rsp + 0x48], 0
0x00003a5f      e95ff2ffff     jmp 0x2cc3
0x00003a64      c644240e01     mov byte [rsp + 0xe], 1
0x00003a69      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a6e      4531e4         xor r12d, r12d
0x00003a71      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a7a      c644240f01     mov byte [rsp + 0xf], 1
0x00003a7f      c644240d01     mov byte [rsp + 0xd], 1
0x00003a84      e91af2ffff     jmp 0x2ca3
0x00003a89      4d39fd         cmp r13, r15
0x00003a8c      7605           jbe 0x3a93
0x00003a8e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003a93      488d4102       lea rax, [rcx + 2]
0x00003a97      4939c5         cmp r13, rax
0x00003a9a      7606           jbe 0x3aa2
0x00003a9c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003aa2      4489e0         mov eax, r12d
0x00003aa5      4c8d7903       lea r15, [rcx + 3]
0x00003aa9      4531e4         xor r12d, r12d
0x00003aac      bb30000000     mov ebx, 0x30                           ; '0'
0x00003ab1      e962f3ffff     jmp 0x2e18
0x00003ab6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003ac0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003ac5      4c89dd         mov rbp, r11
0x00003ac8      885c240d       mov byte [rsp + 0xd], bl
0x00003acc      e9a8fcffff     jmp 0x3779
0x00003ad1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003ad6      4531e4         xor r12d, r12d
0x00003ad9      e902fbffff     jmp 0x35e0
0x00003ade      4531d2         xor r10d, r10d
0x00003ae1      e9b7fbffff     jmp 0x369d
0x00003ae6      48c744245000.  mov qword [rsp + 0x50], 0
0x00003aef      c644240e01     mov byte [rsp + 0xe], 1
0x00003af4      4531e4         xor r12d, r12d
0x00003af7      c644247c00     mov byte [rsp + 0x7c], 0
0x00003afc      e9dafdffff     jmp 0x38db
0x00003b01      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003b06      4c89f6         mov rsi, r14
0x00003b09      4c89e9         mov rcx, r13
0x00003b0c      4889d8         mov rax, rbx
0x00003b0f      4889df         mov rdi, rbx
0x00003b12      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003b18      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003b1d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003b25      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003b28      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003b2e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003b36      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003b3b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003b40      7326           jae 0x3b68
0x00003b42      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003b45      7510           jne 0x3b57
0x00003b47      eb1f           jmp 0x3b68
0x00003b49      0f1f80000000.  nop dword [rax]
0x00003b50      41803c0100     cmp byte [r9 + rax], 0
0x00003b55      740e           je 0x3b65
0x00003b57      4883c001       add rax, 1
0x00003b5b      488d540500     lea rdx, [rbp + rax]
0x00003b60      4939d3         cmp r11, rdx
0x00003b63      77eb           ja 0x3b50
0x00003b65      4889c7         mov rdi, rax
0x00003b68      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003b6d      4531e4         xor r12d, r12d
0x00003b70      e961faffff     jmp 0x35d6
0x00003b75      4889df         mov rdi, rbx
0x00003b78      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003b7e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003b83      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003b89      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003b91      4531e4         xor r12d, r12d
0x00003b94      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003b99      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003b9e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003ba3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003ba8      e929faffff     jmp 0x35d6
0x00003bad      488b542468     mov rdx, qword [rsp + 0x68]
0x00003bb2      0fb602         movzx eax, byte [rdx]
0x00003bb5      84c0           test al, al
0x00003bb7      0f842ffeffff   je 0x39ec
0x00003bbd      0f1f00         nop dword [rax]
0x00003bc0      4d39fd         cmp r13, r15
0x00003bc3      7604           jbe 0x3bc9
0x00003bc5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003bc9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003bcd      420fb6043a     movzx eax, byte [rdx + r15]
0x00003bd2      84c0           test al, al
0x00003bd4      75ea           jne 0x3bc0
0x00003bd6      e911feffff     jmp 0x39ec
0x00003bdb      89d0           mov eax, edx
0x00003bdd      e955f5ffff     jmp 0x3137
0x00003be2      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003be6      80fb3e         cmp bl, 0x3e
0x00003be9      0f8771f8ffff   ja 0x3460
0x00003bef      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003bf9      480fa3d8       bt rax, rbx
0x00003bfd      0f835df8ffff   jae 0x3460
0x00003c03      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c08      0f85e4010000   jne 0x3df2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003c0e      4d39fd         cmp r13, r15
0x00003c11      7605           jbe 0x3c18
0x00003c13      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003c18      498d4701       lea rax, [r15 + 1]
0x00003c1c      4939c5         cmp r13, rax
0x00003c1f      7606           jbe 0x3c27
0x00003c21      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003c27      498d4702       lea rax, [r15 + 2]
0x00003c2b      4939c5         cmp r13, rax
0x00003c2e      7606           jbe 0x3c36
0x00003c30      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003c36      498d4703       lea rax, [r15 + 3]
0x00003c3a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003c3d      7606           jbe 0x3c45
0x00003c3f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003c45      4983c704       add r15, 4
0x00003c49      31d2           xor edx, edx
0x00003c4b      4531e4         xor r12d, r12d
0x00003c4e      31c0           xor eax, eax
0x00003c50      4889cd         mov rbp, rcx
0x00003c53      e9c0f1ffff     jmp 0x2e18
0x00003c58      85db           test ebx, ebx
0x00003c5a      0f8488010000   je 0x3de8
0x00003c60      488d05d62800.  lea rax, [0x0000653d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c67      c644240e01     mov byte [rsp + 0xe], 1
0x00003c6c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c71      4531e4         xor r12d, r12d
0x00003c74      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c7d      c644240f01     mov byte [rsp + 0xf], 1
0x00003c82      c644240d00     mov byte [rsp + 0xd], 0
0x00003c87      48c744241801.  mov qword [rsp + 0x18], 1
0x00003c90      4531ff         xor r15d, r15d
0x00003c93      4889442448     mov qword [rsp + 0x48], rax
0x00003c98      e926f0ffff     jmp 0x2cc3
0x00003c9d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003ca0      4c89dd         mov rbp, r11
0x00003ca3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003ca8      e9ccfaffff     jmp 0x3779
0x00003cad      488d05872800.  lea rax, str.l______l                   ; 0x653b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003cb4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003cb9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003cbe      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003cc1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003cca      c644240f01     mov byte [rsp + 0xf], 1
0x00003ccf      c644240d01     mov byte [rsp + 0xd], 1
0x00003cd4      48c744241801.  mov qword [rsp + 0x18], 1
0x00003cdd      4531ff         xor r15d, r15d
0x00003ce0      4889442448     mov qword [rsp + 0x48], rax
0x00003ce5      e9d9efffff     jmp 0x2cc3
0x00003cea      89d0           mov eax, edx
0x00003cec      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003cf1      4885db         test rbx, rbx
0x00003cf4      742c           je 0x3d22
0x00003cf6      84c0           test al, al
0x00003cf8      7428           je 0x3d22
0x00003cfa      0fb60b         movzx ecx, byte [rbx]
0x00003cfd      4889d8         mov rax, rbx
0x00003d00      84c9           test cl, cl
0x00003d02      741e           je 0x3d22
0x00003d04      4c89fa         mov rdx, r15
0x00003d07      4c29f8         sub rax, r15
0x00003d0a      4939d5         cmp r13, rdx
0x00003d0d      7604           jbe 0x3d13
0x00003d0f      41880c16       mov byte [r14 + rdx], cl
0x00003d13      4883c201       add rdx, 1
0x00003d17      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003d1b      84c9           test cl, cl
0x00003d1d      75eb           jne 0x3d0a
0x00003d1f      4989d7         mov r15, rdx
0x00003d22      4d39fd         cmp r13, r15
0x00003d25      0f869efaffff   jbe 0x37c9
0x00003d2b      43c6043e00     mov byte [r14 + r15], 0
0x00003d30      e994faffff     jmp 0x37c9
0x00003d35      837c240802     cmp dword [rsp + 8], 2
0x00003d3a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003d3f      4c89dd         mov rbp, r11
0x00003d42      0f94c0         sete al
0x00003d45      885c240d       mov byte [rsp + 0xd], bl
0x00003d49      e92bfaffff     jmp 0x3779
0x00003d4e      8b742408       mov esi, dword [rsp + 8]
0x00003d52      4889cf         mov rdi, rcx
0x00003d55      e8a6edffff     call sym.gettext_quote.part.1
0x00003d5a      4889442468     mov qword [rsp + 0x68], rax
0x00003d5f      e952fcffff     jmp 0x39b6
0x00003d64      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003d68      4889cf         mov rdi, rcx
0x00003d6b      e890edffff     call sym.gettext_quote.part.1
0x00003d70      4889442460     mov qword [rsp + 0x60], rax
0x00003d75      e967fcffff     jmp 0x39e1
0x00003d7a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003d7f      4c89dd         mov rbp, r11
0x00003d82      89d0           mov eax, edx
0x00003d84      885c240d       mov byte [rsp + 0xd], bl
0x00003d88      e9ecf9ffff     jmp 0x3779
0x00003d8d      4883ec08       sub rsp, 8
0x00003d91      41b805000000   mov r8d, 5
0x00003d97      4c89d9         mov rcx, r11
0x00003d9a      ff742468       push qword [rsp + 0x68]
0x00003d9e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003da2      4c89f7         mov rdi, r14
0x00003da5      ff742438       push qword [rsp + 0x38]
0x00003da9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003db1      488b542430     mov rdx, qword [rsp + 0x30]
0x00003db6      488b742470     mov rsi, qword [rsp + 0x70]
0x00003dbb      e830eeffff     call sym.quotearg_buffer_restyled
0x00003dc0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003dc4      4989c7         mov r15, rax
0x00003dc7      e9fdf9ffff     jmp 0x37c9
0x00003dcc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003dd1      e916ffffff     jmp 0x3cec
0x00003dd6      c74424080200.  mov dword [rsp + 8], 2
0x00003dde      e996f9ffff     jmp 0x3779
0x00003de3      e8f8d9ffff     call sym.imp.__stack_chk_fail
0x00003de8      c644240d00     mov byte [rsp + 0xd], 0
0x00003ded      e96ffaffff     jmp 0x3861
0x00003df2      4c89dd         mov rbp, r11
0x00003df5      e996f9ffff     jmp 0x3790
0x00003dfa      c644240e01     mov byte [rsp + 0xe], 1
0x00003dff      31c0           xor eax, eax
0x00003e01      4531e4         xor r12d, r12d
0x00003e04      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e0d      e9a2f5ffff     jmp 0x33b4
0x00003e12      4c89ea         mov rdx, r13
0x00003e15      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003e1a      e9f3f5ffff     jmp 0x3412
0x00003e1f      e8dcd8ffff     call sym.imp.abort
0x00003e24      6690           nop
0x00003e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003e30      4157           push r15
0x00003e32      4156           push r14
0x00003e34      4c63ff         movsxd r15, edi
0x00003e37      4155           push r13
0x00003e39      4154           push r12
0x00003e3b      4989d6         mov r14, rdx
0x00003e3e      55             push rbp
0x00003e3f      53             push rbx
0x00003e40      4889cd         mov rbp, rcx
0x00003e43      4883ec28       sub rsp, 0x28
0x00003e47      4889742408     mov qword [rsp + 8], rsi
0x00003e4c      e8bfd8ffff     call sym.imp.__errno_location
0x00003e51      4989c5         mov r13, rax
0x00003e54      8b00           mov eax, dword [rax]
0x00003e56      4585ff         test r15d, r15d
0x00003e59      488b1d005220.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00003e60      89442418       mov dword [rsp + 0x18], eax
0x00003e64      0f8867010000   js 0x3fd1
0x00003e6a      44393de75120.  cmp dword [obj.nslots], r15d            ; [0x209058:4]=1
0x00003e71      7f62           jg 0x3ed5
0x00003e73      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003e7a      0f8456010000   je 0x3fd6
0x00003e80      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003e84      488d05e55120.  lea rax, obj.slotvec0                   ; 0x209070
0x00003e8b      4963f4         movsxd rsi, r12d
0x00003e8e      48c1e604       shl rsi, 4
0x00003e92      4839c3         cmp rbx, rax
0x00003e95      0f8415010000   je 0x3fb0
0x00003e9b      4889df         mov rdi, rbx
0x00003e9e      e80d140000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003ea3      4889c3         mov rbx, rax
0x00003ea6      488905b35120.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00003ead      48633da45120.  movsxd rdi, dword [obj.nslots]          ; [0x209058:4]=1
0x00003eb4      4489e2         mov edx, r12d
0x00003eb7      31f6           xor esi, esi
0x00003eb9      29fa           sub edx, edi
0x00003ebb      48c1e704       shl rdi, 4
0x00003ebf      4863d2         movsxd rdx, edx
0x00003ec2      4801df         add rdi, rbx
0x00003ec5      48c1e204       shl rdx, 4
0x00003ec9      e892d9ffff     call sym.imp.memset
0x00003ece      448925835120.  mov dword [obj.nslots], r12d            ; [0x209058:4]=1
0x00003ed5      8b4504         mov eax, dword [rbp + 4]
0x00003ed8      49c1e704       shl r15, 4
0x00003edc      4883ec08       sub rsp, 8
0x00003ee0      4c01fb         add rbx, r15
0x00003ee3      4c8d7d08       lea r15, [rbp + 8]
0x00003ee7      448b4500       mov r8d, dword [rbp]
0x00003eeb      4c8b1b         mov r11, qword [rbx]
0x00003eee      4c8b6308       mov r12, qword [rbx + 8]
0x00003ef2      4c89f1         mov rcx, r14
0x00003ef5      83c801         or eax, 1
0x00003ef8      89442424       mov dword [rsp + 0x24], eax
0x00003efc      ff7530         push qword [rbp + 0x30]
0x00003eff      4189c1         mov r9d, eax
0x00003f02      ff7528         push qword [rbp + 0x28]
0x00003f05      4157           push r15
0x00003f07      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003f0a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003f0f      4c89e7         mov rdi, r12
0x00003f12      4c895c2430     mov qword [rsp + 0x30], r11
0x00003f17      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003f1c      4883c420       add rsp, 0x20
0x00003f20      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003f25      4939c3         cmp r11, rax
0x00003f28      7767           ja 0x3f91
0x00003f2a      488d7001       lea rsi, [rax + 1]
0x00003f2e      488d05cb5120.  lea rax, obj.slot0                      ; 0x209100
0x00003f35      4939c4         cmp r12, rax
0x00003f38      488933         mov qword [rbx], rsi
0x00003f3b      7412           je 0x3f4f
0x00003f3d      4c89e7         mov rdi, r12
0x00003f40      4889742410     mov qword [rsp + 0x10], rsi
0x00003f45      e8a6d7ffff     call sym.imp.free
0x00003f4a      488b742410     mov rsi, qword [rsp + 0x10]
0x00003f4f      4889f7         mov rdi, rsi
0x00003f52      4889742410     mov qword [rsp + 0x10], rsi
0x00003f57      e8f4120000     call sym.xmalloc
0x00003f5c      4883ec08       sub rsp, 8
0x00003f60      48894308       mov qword [rbx + 8], rax
0x00003f64      448b4500       mov r8d, dword [rbp]
0x00003f68      ff7530         push qword [rbp + 0x30]
0x00003f6b      ff7528         push qword [rbp + 0x28]
0x00003f6e      4c89f1         mov rcx, r14
0x00003f71      4157           push r15
0x00003f73      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003f78      4889c7         mov rdi, rax
0x00003f7b      488b542428     mov rdx, qword [rsp + 0x28]
0x00003f80      488b742430     mov rsi, qword [rsp + 0x30]
0x00003f85      4989c4         mov r12, rax
0x00003f88      e863ecffff     call sym.quotearg_buffer_restyled
0x00003f8d      4883c420       add rsp, 0x20
0x00003f91      8b442418       mov eax, dword [rsp + 0x18]
0x00003f95      41894500       mov dword [r13], eax
0x00003f99      4883c428       add rsp, 0x28
0x00003f9d      4c89e0         mov rax, r12
0x00003fa0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003fa1      5d             pop rbp
0x00003fa2      415c           pop r12
0x00003fa4      415d           pop r13
0x00003fa6      415e           pop r14
0x00003fa8      415f           pop r15
0x00003faa      c3             ret
0x00003fab      0f1f440000     nop dword [rax + rax]
0x00003fb0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003fb2      e8f9120000     call sym.xrealloc
0x00003fb7      660f6f05b150.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00003fbf      4889c3         mov rbx, rax
0x00003fc2      488905975020.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00003fc9      0f1100         movups xmmword [rax], xmm0
0x00003fcc      e9dcfeffff     jmp 0x3ead
0x00003fd1      e82ad7ffff     call sym.imp.abort
0x00003fd6      e8c5140000     call sym.xalloc_die
0x00003fdb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003fe0      4154           push r12
0x00003fe2      55             push rbp
0x00003fe3      53             push rbx
0x00003fe4      4889fb         mov rbx, rdi
0x00003fe7      e824d7ffff     call sym.imp.__errno_location
0x00003fec      448b20         mov r12d, dword [rax]
0x00003fef      4889c5         mov rbp, rax
0x00003ff2      488d05075220.  lea rax, obj.default_quoting_options    ; 0x209200
0x00003ff9      4885db         test rbx, rbx
0x00003ffc      be38000000     mov esi, 0x38                           ; '8'
0x00004001      480f44d8       cmove rbx, rax
0x00004005      4889df         mov rdi, rbx
0x00004008      e843140000     call sym.xmemdup
0x0000400d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004011      5b             pop rbx
0x00004012      5d             pop rbp
0x00004013      415c           pop r12
0x00004015      c3             ret
0x00004016      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004020      488d05d95120.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004027      4885ff         test rdi, rdi
0x0000402a      480f44f8       cmove rdi, rax
0x0000402e      8b07           mov eax, dword [rdi]
0x00004030      c3             ret
0x00004031      0f1f440000     nop dword [rax + rax]
0x00004036      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004040      488d05b95120.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004047      4885ff         test rdi, rdi
0x0000404a      480f44f8       cmove rdi, rax
0x0000404e      8937           mov dword [rdi], esi
0x00004050      c3             ret
0x00004051      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004056      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004060      488d05995120.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004067      4885ff         test rdi, rdi
0x0000406a      89f1           mov ecx, esi
0x0000406c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004070      89f0           mov eax, esi
0x00004072      83e11f         and ecx, 0x1f
0x00004075      c0e805         shr al, 5
0x00004078      0fb6c0         movzx eax, al
0x0000407b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004080      8b37           mov esi, dword [rdi]
0x00004082      89f0           mov eax, esi
0x00004084      d3e8           shr eax, cl
0x00004086      31c2           xor edx, eax
0x00004088      83e001         and eax, 1
0x0000408b      83e201         and edx, 1
0x0000408e      d3e2           shl edx, cl
0x00004090      31f2           xor edx, esi
0x00004092      8917           mov dword [rdi], edx
0x00004094      c3             ret
0x00004095      90             nop
0x00004096      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000040a0      488d05595120.  lea rax, obj.default_quoting_options    ; 0x209200
0x000040a7      4885ff         test rdi, rdi
0x000040aa      480f44f8       cmove rdi, rax
0x000040ae      8b4704         mov eax, dword [rdi + 4]
0x000040b1      897704         mov dword [rdi + 4], esi
0x000040b4      c3             ret
0x000040b5      90             nop
0x000040b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000040c0      488d05395120.  lea rax, obj.default_quoting_options    ; 0x209200
0x000040c7      4885ff         test rdi, rdi
0x000040ca      480f44f8       cmove rdi, rax
0x000040ce      4885f6         test rsi, rsi
0x000040d1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000040d7      740e           je 0x40e7
0x000040d9      4885d2         test rdx, rdx
0x000040dc      7409           je 0x40e7
0x000040de      48897728       mov qword [rdi + 0x28], rsi
0x000040e2      48895730       mov qword [rdi + 0x30], rdx
0x000040e6      c3             ret
0x000040e7      4883ec08       sub rsp, 8
0x000040eb      e810d6ffff     call sym.imp.abort
;-- quotearg_buffer:
0x000040f0      4157           push r15
0x000040f2      4156           push r14
0x000040f4      488d05055120.  lea rax, obj.default_quoting_options    ; 0x209200
0x000040fb      4155           push r13
0x000040fd      4154           push r12
0x000040ff      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004102      55             push rbp
0x00004103      53             push rbx
0x00004104      4c89c3         mov rbx, r8
0x00004107      4989f6         mov r14, rsi
0x0000410a      4989d7         mov r15, rdx
0x0000410d      4883ec18       sub rsp, 0x18
0x00004111      4d85c0         test r8, r8
0x00004114      480f44d8       cmove rbx, rax
0x00004118      48894c2408     mov qword [rsp + 8], rcx
0x0000411d      e8eed5ffff     call sym.imp.__errno_location
0x00004122      448b20         mov r12d, dword [rax]
0x00004125      4889c5         mov rbp, rax
0x00004128      488d4308       lea rax, [rbx + 8]
0x0000412c      4883ec08       sub rsp, 8
0x00004130      448b4b04       mov r9d, dword [rbx + 4]
0x00004134      ff7330         push qword [rbx + 0x30]
0x00004137      448b03         mov r8d, dword [rbx]
0x0000413a      ff7328         push qword [rbx + 0x28]
0x0000413d      4c89fa         mov rdx, r15
0x00004140      50             push rax
0x00004141      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004146      4c89f6         mov rsi, r14
0x00004149      4c89ef         mov rdi, r13
0x0000414c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004151      44896500       mov dword [rbp], r12d
0x00004155      4883c438       add rsp, 0x38
0x00004159      5b             pop rbx
0x0000415a      5d             pop rbp
0x0000415b      415c           pop r12
0x0000415d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000415f      415e           pop r14
0x00004161      415f           pop r15
0x00004163      c3             ret
0x00004164      6690           nop
0x00004166      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004170      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004172      4156           push r14
0x00004174      488d05855020.  lea rax, obj.default_quoting_options    ; 0x209200
0x0000417b      4155           push r13
0x0000417d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000417f      4989d4         mov r12, rdx
0x00004182      55             push rbp
0x00004183      53             push rbx
0x00004184      4889cb         mov rbx, rcx
0x00004187      4989fe         mov r14, rdi
0x0000418a      4989f7         mov r15, rsi
0x0000418d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004191      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004194      480f44d8       cmove rbx, rax
0x00004198      31ed           xor ebp, ebp
0x0000419a      e871d5ffff     call sym.imp.__errno_location
0x0000419f      4d85e4         test r12, r12
0x000041a2      4989c5         mov r13, rax
0x000041a5      8b00           mov eax, dword [rax]
0x000041a7      400f94c5       sete bpl
0x000041ab      0b6b04         or ebp, dword [rbx + 4]
0x000041ae      4c8d5308       lea r10, [rbx + 8]
0x000041b2      4883ec08       sub rsp, 8
0x000041b6      448b03         mov r8d, dword [rbx]
0x000041b9      4c89f9         mov rcx, r15
0x000041bc      89442414       mov dword [rsp + 0x14], eax
0x000041c0      ff7330         push qword [rbx + 0x30]
0x000041c3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000041c6      ff7328         push qword [rbx + 0x28]
0x000041c9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000041cb      31f6           xor esi, esi
0x000041cd      4189e9         mov r9d, ebp
0x000041d0      31ff           xor edi, edi
0x000041d2      4c89542440     mov qword [rsp + 0x40], r10
0x000041d7      e814eaffff     call sym.quotearg_buffer_restyled
0x000041dc      488d7001       lea rsi, [rax + 1]
0x000041e0      4889442448     mov qword [rsp + 0x48], rax
0x000041e5      4883c420       add rsp, 0x20
0x000041e9      4889f7         mov rdi, rsi
0x000041ec      4889742418     mov qword [rsp + 0x18], rsi
0x000041f1      e85a100000     call sym.xmalloc
0x000041f6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000041fb      4883ec08       sub rsp, 8
0x000041ff      ff7330         push qword [rbx + 0x30]
0x00004202      ff7328         push qword [rbx + 0x28]
0x00004205      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000420a      4189e9         mov r9d, ebp
0x0000420d      448b03         mov r8d, dword [rbx]
0x00004210      4c89f9         mov rcx, r15
0x00004213      4c89f2         mov rdx, r14
0x00004216      4889c7         mov rdi, rax
0x00004219      4152           push r10
0x0000421b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004220      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004225      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004229      4883c420       add rsp, 0x20
0x0000422d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004230      41894500       mov dword [r13], eax
0x00004234      7409           je 0x423f
0x00004236      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000423b      4d891c24       mov qword [r12], r11
0x0000423f      488b442410     mov rax, qword [rsp + 0x10]
0x00004244      4883c438       add rsp, 0x38
0x00004248      5b             pop rbx
0x00004249      5d             pop rbp
0x0000424a      415c           pop r12
0x0000424c      415d           pop r13
0x0000424e      415e           pop r14
0x00004250      415f           pop r15
0x00004252      c3             ret
0x00004253      0f1f00         nop dword [rax]
0x00004256      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004260      4889d1         mov rcx, rdx
0x00004263      31d2           xor edx, edx
0x00004265      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000426a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004270      8b05e24d2000   mov eax, dword [obj.nslots]             ; [0x209058:4]=1
0x00004276      4154           push r12
0x00004278      4c8b25e14d20.  mov r12, qword [obj.slotvec]            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x0000427f      55             push rbp
0x00004280      53             push rbx
0x00004281      83f801         cmp eax, 1
0x00004284      7e2b           jle 0x42b1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004286      83e802         sub eax, 2
0x00004289      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000428e      48c1e004       shl rax, 4
0x00004292      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004297      660f1f840000.  nop word [rax + rax]
0x000042a0      488b3b         mov rdi, qword [rbx]
0x000042a3      4883c310       add rbx, 0x10
0x000042a7      e844d4ffff     call sym.imp.free
0x000042ac      4839eb         cmp rbx, rbp
0x000042af      75ef           jne 0x42a0
0x000042b1      498b7c2408     mov rdi, qword [r12 + 8]
0x000042b6      488d1d434e20.  lea rbx, obj.slot0                      ; 0x209100
0x000042bd      4839df         cmp rdi, rbx
0x000042c0      7417           je 0x42d9
0x000042c2      e829d4ffff     call sym.imp.free
0x000042c7      48c7059e4d20.  mov qword [obj.slotvec0], 0x100         ; [0x209070:8]=256
0x000042d2      48891d9f4d20.  mov qword [0x00209078], rbx             ; [0x209078:8]=0x209100 obj.slot0
0x000042d9      488d1d904d20.  lea rbx, obj.slotvec0                   ; 0x209070
0x000042e0      4939dc         cmp r12, rbx
0x000042e3      740f           je 0x42f4
0x000042e5      4c89e7         mov rdi, r12
0x000042e8      e803d4ffff     call sym.imp.free
0x000042ed      48891d6c4d20.  mov qword [obj.slotvec], rbx            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x000042f4      5b             pop rbx
0x000042f5      c705594d2000.  mov dword [obj.nslots], 1               ; [0x209058:4]=1
0x000042ff      5d             pop rbp
0x00004300      415c           pop r12
0x00004302      c3             ret
0x00004303      0f1f00         nop dword [rax]
0x00004306      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004310      488d0de94e20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x00004317      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000431e      e90dfbffff     jmp sym.quotearg_n_options
0x00004323      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004326      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004330      488d0dc94e20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x00004337      e9f4faffff     jmp sym.quotearg_n_options
0x0000433c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004340      488d0db94e20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x00004347      4889fe         mov rsi, rdi
0x0000434a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004351      31ff           xor edi, edi
0x00004353      e9d8faffff     jmp sym.quotearg_n_options
0x00004358      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004360      488d0d994e20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x00004367      4889f2         mov rdx, rsi
0x0000436a      4889fe         mov rsi, rdi
0x0000436d      31ff           xor edi, edi
0x0000436f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004374      6690           nop
0x00004376      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004380      4883ec48       sub rsp, 0x48
0x00004384      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004387      64488b142528.  mov rdx, qword fs:[0x28]
0x00004390      4889542438     mov qword [rsp + 0x38], rdx
0x00004395      31d2           xor edx, edx
0x00004397      83fe0a         cmp esi, 0xa
0x0000439a      7468           je 0x4404
0x0000439c      893424         mov dword [rsp], esi
0x0000439f      4889e1         mov rcx, rsp
0x000043a2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043a9      4889c6         mov rsi, rax
0x000043ac      48c744240400.  mov qword [rsp + 4], 0
0x000043b5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000043be      48c744241400.  mov qword [rsp + 0x14], 0
0x000043c7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000043d0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000043d9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000043e2      c74424340000.  mov dword [rsp + 0x34], 0
0x000043ea      e841faffff     call sym.quotearg_n_options
0x000043ef      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000043f4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000043fd      750a           jne 0x4409                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000043ff      4883c448       add rsp, 0x48
0x00004403      c3             ret
0x00004404      e8f7d2ffff     call sym.imp.abort
0x00004409      e8d2d3ffff     call sym.imp.__stack_chk_fail
0x0000440e      6690           nop
;-- quotearg_n_style_mem:
0x00004410      4883ec48       sub rsp, 0x48
0x00004414      4889d0         mov rax, rdx
0x00004417      4889ca         mov rdx, rcx
0x0000441a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004423      48894c2438     mov qword [rsp + 0x38], rcx
0x00004428      31c9           xor ecx, ecx
0x0000442a      83fe0a         cmp esi, 0xa
0x0000442d      7461           je 0x4490
0x0000442f      893424         mov dword [rsp], esi
0x00004432      4889e1         mov rcx, rsp
0x00004435      4889c6         mov rsi, rax
0x00004438      48c744240400.  mov qword [rsp + 4], 0
0x00004441      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000444a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004453      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000445c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004465      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000446e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004476      e8b5f9ffff     call sym.quotearg_n_options
0x0000447b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004480      644833142528.  xor rdx, qword fs:[0x28]
0x00004489      750a           jne 0x4495
0x0000448b      4883c448       add rsp, 0x48
0x0000448f      c3             ret
0x00004490      e86bd2ffff     call sym.imp.abort
0x00004495      e846d3ffff     call sym.imp.__stack_chk_fail
0x0000449a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000044a0      4889f2         mov rdx, rsi
0x000044a3      89fe           mov esi, edi
0x000044a5      31ff           xor edi, edi
0x000044a7      e9d4feffff     jmp sym.quotearg_n_style
0x000044ac      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000044b0      4889d1         mov rcx, rdx
0x000044b3      4889f2         mov rdx, rsi
0x000044b6      89fe           mov esi, edi
0x000044b8      31ff           xor edi, edi
0x000044ba      e951ffffff     jmp sym.quotearg_n_style_mem
0x000044bf      90             nop
;-- quotearg_char_mem:
0x000044c0      4883ec48       sub rsp, 0x48
0x000044c4      89d1           mov ecx, edx
0x000044c6      64488b042528.  mov rax, qword fs:[0x28]
0x000044cf      4889442438     mov qword [rsp + 0x38], rax
0x000044d4      31c0           xor eax, eax
0x000044d6      488b05534d20.  mov rax, qword [0x00209230]             ; [0x209230:8]=0
0x000044dd      4989e0         mov r8, rsp
0x000044e0      83e11f         and ecx, 0x1f
0x000044e3      660f6f05154d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000044eb      4889442430     mov qword [rsp + 0x30], rax
0x000044f0      89d0           mov eax, edx
0x000044f2      0f290424       movaps xmmword [rsp], xmm0
0x000044f6      c0e805         shr al, 5
0x000044f9      0fb6c0         movzx eax, al
0x000044fc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004501      660f6f05074d.  movdqa xmm0, xmmword [0x00209210]
0x00004509      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000450e      660f6f050a4d.  movdqa xmm0, xmmword [0x00209220]
0x00004516      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000451b      418b11         mov edx, dword [r9]
0x0000451e      89d0           mov eax, edx
0x00004520      d3e8           shr eax, cl
0x00004522      f7d0           not eax
0x00004524      83e001         and eax, 1
0x00004527      d3e0           shl eax, cl
0x00004529      4c89c1         mov rcx, r8
0x0000452c      31d0           xor eax, edx
0x0000452e      4889f2         mov rdx, rsi
0x00004531      4889fe         mov rsi, rdi
0x00004534      418901         mov dword [r9], eax
0x00004537      31ff           xor edi, edi
0x00004539      e8f2f8ffff     call sym.quotearg_n_options
0x0000453e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004543      644833342528.  xor rsi, qword fs:[0x28]
0x0000454c      7505           jne 0x4553
0x0000454e      4883c448       add rsp, 0x48
0x00004552      c3             ret
0x00004553      e888d2ffff     call sym.imp.__stack_chk_fail
0x00004558      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004560      400fbed6       movsx edx, sil
0x00004564      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000456b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004570      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004575      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000457c      e93fffffff     jmp sym.quotearg_char_mem
0x00004581      0f1f440000     nop dword [rax + rax]
0x00004586      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004590      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004595      e926ffffff     jmp sym.quotearg_char_mem
0x0000459a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000045a0      4883ec48       sub rsp, 0x48
0x000045a4      4889d0         mov rax, rdx
0x000045a7      64488b142528.  mov rdx, qword fs:[0x28]
0x000045b0      4889542438     mov qword [rsp + 0x38], rdx
0x000045b5      31d2           xor edx, edx
0x000045b7      83fe0a         cmp esi, 0xa
0x000045ba      7468           je 0x4624
0x000045bc      893424         mov dword [rsp], esi
0x000045bf      4889e1         mov rcx, rsp
0x000045c2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000045c9      4889c6         mov rsi, rax
0x000045cc      48c744240400.  mov qword [rsp + 4], 0
0x000045d5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000045de      48c744241400.  mov qword [rsp + 0x14], 0
0x000045e7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000045f0      48c744242400.  mov qword [rsp + 0x24], 0
0x000045f9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004602      c74424340000.  mov dword [rsp + 0x34], 0
0x0000460a      e821f8ffff     call sym.quotearg_n_options
0x0000460f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004614      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000461d      750a           jne 0x4629
0x0000461f      4883c448       add rsp, 0x48
0x00004623      c3             ret
0x00004624      e8d7d0ffff     call sym.imp.abort
0x00004629      e8b2d1ffff     call sym.imp.__stack_chk_fail
0x0000462e      6690           nop
;-- quotearg_n_custom_mem:
0x00004630      4883ec48       sub rsp, 0x48
0x00004634      4989c9         mov r9, rcx
0x00004637      488b0df24b20.  mov rcx, qword [0x00209230]             ; [0x209230:8]=0
0x0000463e      660f6f05ba4b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004646      64488b042528.  mov rax, qword fs:[0x28]
0x0000464f      4889442438     mov qword [rsp + 0x38], rax
0x00004654      31c0           xor eax, eax
0x00004656      0f290424       movaps xmmword [rsp], xmm0
0x0000465a      4885f6         test rsi, rsi
0x0000465d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004662      c704240a0000.  mov dword [rsp], 0xa
0x00004669      660f6f059f4b.  movdqa xmm0, xmmword [0x00209210]
0x00004671      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004676      660f6f05a24b.  movdqa xmm0, xmmword [0x00209220]
0x0000467e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004683      7432           je 0x46b7
0x00004685      4885d2         test rdx, rdx
0x00004688      742d           je 0x46b7
0x0000468a      4889742428     mov qword [rsp + 0x28], rsi
0x0000468f      4889542430     mov qword [rsp + 0x30], rdx
0x00004694      4889e1         mov rcx, rsp
0x00004697      4c89c2         mov rdx, r8
0x0000469a      4c89ce         mov rsi, r9
0x0000469d      e88ef7ffff     call sym.quotearg_n_options
0x000046a2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000046a7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000046b0      750a           jne 0x46bc
0x000046b2      4883c448       add rsp, 0x48
0x000046b6      c3             ret
0x000046b7      e844d0ffff     call sym.imp.abort
0x000046bc      e81fd1ffff     call sym.imp.__stack_chk_fail
0x000046c1      0f1f440000     nop dword [rax + rax]
0x000046c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000046d0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000046d7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000046dc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000046e0      4889d1         mov rcx, rdx
0x000046e3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000046ea      4889f2         mov rdx, rsi
0x000046ed      4889fe         mov rsi, rdi
0x000046f0      31ff           xor edi, edi
0x000046f2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000046f7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004700      4989c8         mov r8, rcx
0x00004703      4889d1         mov rcx, rdx
0x00004706      4889f2         mov rdx, rsi
0x00004709      4889fe         mov rsi, rdi
0x0000470c      31ff           xor edi, edi
0x0000470e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004713      0f1f00         nop dword [rax]
0x00004716      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004720      488d0df94820.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004727      e904f7ffff     jmp sym.quotearg_n_options
0x0000472c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004730      488d0de94820.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004737      4889f2         mov rdx, rsi
0x0000473a      4889fe         mov rsi, rdi
0x0000473d      31ff           xor edi, edi
0x0000473f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004744      6690           nop
0x00004746      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004750      488d0dc94820.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004757      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000475e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004763      0f1f00         nop dword [rax]
0x00004766      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004770      488d0da94820.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004777      4889fe         mov rsi, rdi
0x0000477a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004781      31ff           xor edi, edi
0x00004783      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004788      0f1f84000000.  nop dword [rax + rax]
;-- parse_with_separator:
0x00004790      4157           push r15
0x00004792      4156           push r14
0x00004794      4989f2         mov r10, rsi
0x00004797      4155           push r13
0x00004799      4154           push r12
0x0000479b      4989cc         mov r12, rcx
0x0000479e      55             push rbp
0x0000479f      53             push rbx
0x000047a0      4d89c5         mov r13, r8
0x000047a3      4d89ce         mov r14, r9
0x000047a6      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x000047ac      4883ec58       sub rsp, 0x58
0x000047b0      8b02           mov eax, dword [rdx]
0x000047b2      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000047bb      48894c2448     mov qword [rsp + 0x48], rcx
0x000047c0      31c9           xor ecx, ecx
0x000047c2      4d85e4         test r12, r12
0x000047c5      4889542410     mov qword [rsp + 0x10], rdx
0x000047ca      89442418       mov dword [rsp + 0x18], eax
0x000047ce      7404           je 0x47d4
0x000047d0      458b3c24       mov r15d, dword [r12]
0x000047d4      4d85ed         test r13, r13
0x000047d7      7408           je 0x47e1
0x000047d9      49c745000000.  mov qword [r13], 0
0x000047e1      4d85f6         test r14, r14
0x000047e4      7407           je 0x47ed
0x000047e6      49c706000000.  mov qword [r14], 0
0x000047ed      4d85d2         test r10, r10
0x000047f0      0f8492010000   je 0x4988
0x000047f6      4c89d3         mov rbx, r10
0x000047f9      4829fb         sub rbx, rdi
0x000047fc      0f85ce000000   jne 0x48d0
0x00004802      41807a0100     cmp byte [r10 + 1], 0
0x00004807      0f840b020000   je 0x4a18
0x0000480d      4983c201       add r10, 1
0x00004811      48c704240000.  mov qword [rsp], 0
0x00004819      0f9544241e     setne byte [rsp + 0x1e]
0x0000481e      4c89542408     mov qword [rsp + 8], r10
0x00004823      31ed           xor ebp, ebp
0x00004825      31db           xor ebx, ebx
0x00004827      807c241e00     cmp byte [rsp + 0x1e], 0
0x0000482c      0f84ee020000   je 0x4b20
0x00004832      488b442408     mov rax, qword [rsp + 8]
0x00004837      80382b         cmp byte [rax], 0x2b
0x0000483a      0f8470010000   je 0x49b0
0x00004840      488b7c2408     mov rdi, qword [rsp + 8]
0x00004845      e8a6d0ffff     call sym.imp.getgrnam
0x0000484a      4885c0         test rax, rax
0x0000484d      0f845d010000   je 0x49b0
0x00004853      448b7810       mov r15d, dword [rax + 0x10]
0x00004857      e874ceffff     call sym.imp.endgrent
0x0000485c      488b7c2408     mov rdi, qword [rsp + 8]
0x00004861      e81a0c0000     call sym.xstrdup
0x00004866      4889c3         mov rbx, rax
0x00004869      4989ea         mov r10, rbp
0x0000486c      488b442410     mov rax, qword [rsp + 0x10]
0x00004871      8b742418       mov esi, dword [rsp + 0x18]
0x00004875      4d85e4         test r12, r12
0x00004878      8930           mov dword [rax], esi
0x0000487a      7404           je 0x4880
0x0000487c      45893c24       mov dword [r12], r15d
0x00004880      4d85ed         test r13, r13
0x00004883      7407           je 0x488c
0x00004885      4d895500       mov qword [r13], r10
0x00004889      4531d2         xor r10d, r10d
0x0000488c      4d85f6         test r14, r14
0x0000488f      7405           je 0x4896
0x00004891      49891e         mov qword [r14], rbx
0x00004894      31db           xor ebx, ebx
0x00004896      4c89d7         mov rdi, r10
0x00004899      e852ceffff     call sym.imp.free
0x0000489e      4889df         mov rdi, rbx
0x000048a1      e84aceffff     call sym.imp.free
0x000048a6      31c0           xor eax, eax
0x000048a8      488b542448     mov rdx, qword [rsp + 0x48]
0x000048ad      644833142528.  xor rdx, qword fs:[0x28]
0x000048b6      0f8589020000   jne 0x4b45
0x000048bc      4883c458       add rsp, 0x58
0x000048c0      5b             pop rbx
0x000048c1      5d             pop rbp
0x000048c2      415c           pop r12
0x000048c4      415d           pop r13
0x000048c6      415e           pop r14
0x000048c8      415f           pop r15
0x000048ca      c3             ret
0x000048cb      0f1f440000     nop dword [rax + rax]
0x000048d0      488d7301       lea rsi, [rbx + 1]
0x000048d4      4c891424       mov qword [rsp], r10
0x000048d8      e8730b0000     call sym.xmemdup
0x000048dd      4c8b1424       mov r10, qword [rsp]
0x000048e1      c6041800       mov byte [rax + rbx], 0
0x000048e5      4889c5         mov rbp, rax
0x000048e8      41807a0100     cmp byte [r10 + 1], 0
0x000048ed      0f854d010000   jne 0x4a40
0x000048f3      4885ed         test rbp, rbp
0x000048f6      0f841c010000   je 0x4a18
0x000048fc      c644241e00     mov byte [rsp + 0x1e], 0
0x00004901      b801000000     mov eax, 1
0x00004906      48c744240800.  mov qword [rsp + 8], 0
0x0000490f      4d85d2         test r10, r10
0x00004912      410f95c1       setne r9b
0x00004916      4121c1         and r9d, eax
0x00004919      807d002b       cmp byte [rbp], 0x2b
0x0000491d      7441           je 0x4960
0x0000491f      4889ef         mov rdi, rbp
0x00004922      44880c24       mov byte [rsp], r9b
0x00004926      e8a5cfffff     call sym.imp.getpwnam
0x0000492b      4885c0         test rax, rax
0x0000492e      440fb60c24     movzx r9d, byte [rsp]
0x00004933      742b           je 0x4960
0x00004935      8b4810         mov ecx, dword [rax + 0x10]
0x00004938      31db           xor ebx, ebx
0x0000493a      4584c9         test r9b, r9b
0x0000493d      48c704240000.  mov qword [rsp], 0
0x00004945      894c2418       mov dword [rsp + 0x18], ecx
0x00004949      0f8519010000   jne 0x4a68
0x0000494f      e8fccfffff     call sym.imp.endpwent
0x00004954      e9cefeffff     jmp 0x4827
0x00004959      0f1f80000000.  nop dword [rax]
0x00004960      4584c9         test r9b, r9b
0x00004963      0f8437010000   je 0x4aa0
0x00004969      488d05a52000.  lea rax, str.invalid_spec               ; 0x6a15 ; "invalid spec"
0x00004970      c644241e00     mov byte [rsp + 0x1e], 0
0x00004975      31db           xor ebx, ebx
0x00004977      48890424       mov qword [rsp], rax
0x0000497b      e8d0cfffff     call sym.imp.endpwent
0x00004980      e9a2feffff     jmp 0x4827
0x00004985      0f1f00         nop dword [rax]
0x00004988      31db           xor ebx, ebx
0x0000498a      803f00         cmp byte [rdi], 0
0x0000498d      0f84d9feffff   je 0x486c
0x00004993      4c891424       mov qword [rsp], r10
0x00004997      e8e40a0000     call sym.xstrdup
0x0000499c      4c8b1424       mov r10, qword [rsp]
0x000049a0      4889c5         mov rbp, rax
0x000049a3      e94bffffff     jmp 0x48f3
0x000049a8      0f1f84000000.  nop dword [rax + rax]
0x000049b0      488b7c2408     mov rdi, qword [rsp + 8]
0x000049b5      488d4c2428     lea rcx, [rsp + 0x28]
0x000049ba      4c8d05c82000.  lea r8, [0x00006a89]
0x000049c1      31f6           xor esi, esi
0x000049c3      ba0a000000     mov edx, 0xa
0x000049c8      e8430b0000     call sym.xstrtoul
0x000049cd      85c0           test eax, eax
0x000049cf      7457           je 0x4a28
0x000049d1      e8faccffff     call sym.imp.endgrent
0x000049d6      488b7c2408     mov rdi, qword [rsp + 8]
0x000049db      e8a00a0000     call sym.xstrdup
0x000049e0      4889c3         mov rbx, rax
0x000049e3      488d05382000.  lea rax, str.invalid_group              ; 0x6a22 ; "invalid group"
0x000049ea      48890424       mov qword [rsp], rax
0x000049ee      4889ef         mov rdi, rbp
0x000049f1      e8faccffff     call sym.imp.free
0x000049f6      4889df         mov rdi, rbx
0x000049f9      e8f2ccffff     call sym.imp.free
0x000049fe      488b3424       mov rsi, qword [rsp]
0x00004a02      ba05000000     mov edx, 5
0x00004a07      31ff           xor edi, edi
0x00004a09      e892cdffff     call sym.imp.dcgettext
0x00004a0e      e995feffff     jmp 0x48a8
0x00004a13      0f1f440000     nop dword [rax + rax]
0x00004a18      4531d2         xor r10d, r10d
0x00004a1b      31db           xor ebx, ebx
0x00004a1d      e94afeffff     jmp 0x486c
0x00004a22      660f1f440000   nop word [rax + rax]
0x00004a28      488b442428     mov rax, qword [rsp + 0x28]
0x00004a2d      bafeffffff     mov edx, 0xfffffffe                     ; 4294967294
0x00004a32      4839d0         cmp rax, rdx
0x00004a35      4189c7         mov r15d, eax
0x00004a38      0f8619feffff   jbe 0x4857
0x00004a3e      eb91           jmp 0x49d1
0x00004a40      4c89d0         mov rax, r10
0x00004a43      4883c001       add rax, 1
0x00004a47      0f9544241e     setne byte [rsp + 0x1e]
0x00004a4c      4885ed         test rbp, rbp
0x00004a4f      4889442408     mov qword [rsp + 8], rax
0x00004a54      0f84f0000000   je 0x4b4a
0x00004a5a      4885c0         test rax, rax
0x00004a5d      0f94c0         sete al
0x00004a60      e9aafeffff     jmp 0x490f
0x00004a65      0f1f00         nop dword [rax]
0x00004a68      448b7814       mov r15d, dword [rax + 0x14]
0x00004a6c      4489ff         mov edi, r15d
0x00004a6f      e8accdffff     call sym.imp.getgrgid
0x00004a74      4885c0         test rax, rax
0x00004a77      0f84b3000000   je 0x4b30
0x00004a7d      488b38         mov rdi, qword [rax]
0x00004a80      e8fb090000     call sym.xstrdup
0x00004a85      4889c3         mov rbx, rax
0x00004a88      e843ccffff     call sym.imp.endgrent
0x00004a8d      48c704240000.  mov qword [rsp], 0
0x00004a95      e9b5feffff     jmp 0x494f
0x00004a9a      660f1f440000   nop word [rax + rax]
0x00004aa0      488d4c2428     lea rcx, [rsp + 0x28]
0x00004aa5      4c8d05dd1f00.  lea r8, [0x00006a89]
0x00004aac      31f6           xor esi, esi
0x00004aae      ba0a000000     mov edx, 0xa
0x00004ab3      4889ef         mov rdi, rbp
0x00004ab6      44884c241f     mov byte [rsp + 0x1f], r9b
0x00004abb      e8500a0000     call sym.xstrtoul
0x00004ac0      488d35411f00.  lea rsi, [0x00006a08]                   ; "invalid user"
0x00004ac7      85c0           test eax, eax
0x00004ac9      440fb64c241f   movzx r9d, byte [rsp + 0x1f]
0x00004acf      48893424       mov qword [rsp], rsi
0x00004ad3      7531           jne 0x4b06
0x00004ad5      488b442428     mov rax, qword [rsp + 0x28]
0x00004ada      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x00004adf      bafeffffff     mov edx, 0xfffffffe                     ; 4294967294
0x00004ae4      4839d0         cmp rax, rdx
0x00004ae7      410f47c9       cmova ecx, r9d
0x00004aeb      4189c9         mov r9d, ecx
0x00004aee      8b4c2418       mov ecx, dword [rsp + 0x18]
0x00004af2      0f46c8         cmovbe ecx, eax
0x00004af5      b800000000     mov eax, 0
0x00004afa      480f47c6       cmova rax, rsi
0x00004afe      894c2418       mov dword [rsp + 0x18], ecx
0x00004b02      48890424       mov qword [rsp], rax
0x00004b06      44884c241e     mov byte [rsp + 0x1e], r9b
0x00004b0b      31db           xor ebx, ebx
0x00004b0d      e83eceffff     call sym.imp.endpwent
0x00004b12      e910fdffff     jmp 0x4827
0x00004b17      660f1f840000.  nop word [rax + rax]
0x00004b20      48833c2400     cmp qword [rsp], 0
0x00004b25      0f85c3feffff   jne 0x49ee
0x00004b2b      e939fdffff     jmp 0x4869
0x00004b30      488d742430     lea rsi, [rsp + 0x30]
0x00004b35      4489ff         mov edi, r15d
0x00004b38      e8630f0000     call sym.umaxtostr
0x00004b3d      4889c7         mov rdi, rax
0x00004b40      e93bffffff     jmp 0x4a80
0x00004b45      e896ccffff     call sym.imp.__stack_chk_fail
0x00004b4a      31db           xor ebx, ebx
0x00004b4c      48c704240000.  mov qword [rsp], 0
0x00004b54      e9cefcffff     jmp 0x4827
0x00004b59      0f1f80000000.  nop dword [rax]
;-- parse_user_spec:
0x00004b60      4885d2         test rdx, rdx
0x00004b63      0f84a7000000   je 0x4c10
0x00004b69      4157           push r15
0x00004b6b      4156           push r14
0x00004b6d      4989f6         mov r14, rsi
0x00004b70      4155           push r13
0x00004b72      4154           push r12
0x00004b74      4d89c5         mov r13, r8
0x00004b77      55             push rbp
0x00004b78      53             push rbx
0x00004b79      4989cc         mov r12, rcx
0x00004b7c      4889d5         mov rbp, rdx
0x00004b7f      4889fb         mov rbx, rdi
0x00004b82      be3a000000     mov esi, 0x3a                           ; ':'
0x00004b87      4883ec18       sub rsp, 0x18
0x00004b8b      e880ccffff     call sym.imp.strchr
0x00004b90      4d89e9         mov r9, r13
0x00004b93      4989c7         mov r15, rax
0x00004b96      4d89e0         mov r8, r12
0x00004b99      4889e9         mov rcx, rbp
0x00004b9c      4c89f2         mov rdx, r14
0x00004b9f      4889c6         mov rsi, rax
0x00004ba2      4889df         mov rdi, rbx
0x00004ba5      e8e6fbffff     call sym.parse_with_separator
0x00004baa      4d85ff         test r15, r15
0x00004bad      4989c2         mov r10, rax
0x00004bb0      7542           jne 0x4bf4
0x00004bb2      4885c0         test rax, rax
0x00004bb5      4889442408     mov qword [rsp + 8], rax
0x00004bba      746c           je 0x4c28
0x00004bbc      be2e000000     mov esi, 0x2e                           ; '.'
0x00004bc1      4889df         mov rdi, rbx
0x00004bc4      e847ccffff     call sym.imp.strchr
0x00004bc9      4885c0         test rax, rax
0x00004bcc      4c8b542408     mov r10, qword [rsp + 8]
0x00004bd1      7421           je 0x4bf4
0x00004bd3      4d89e9         mov r9, r13
0x00004bd6      4d89e0         mov r8, r12
0x00004bd9      4889e9         mov rcx, rbp
0x00004bdc      4c89f2         mov rdx, r14
0x00004bdf      4889c6         mov rsi, rax
0x00004be2      4889df         mov rdi, rbx
0x00004be5      e8a6fbffff     call sym.parse_with_separator
0x00004bea      4885c0         test rax, rax
0x00004bed      4c8b542408     mov r10, qword [rsp + 8]
0x00004bf2      7434           je 0x4c28
0x00004bf4      4883c418       add rsp, 0x18
0x00004bf8      4c89d0         mov rax, r10
0x00004bfb      5b             pop rbx
0x00004bfc      5d             pop rbp
0x00004bfd      415c           pop r12
0x00004bff      415d           pop r13
0x00004c01      415e           pop r14
0x00004c03      415f           pop r15
0x00004c05      c3             ret
0x00004c06      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c10      4d89c1         mov r9, r8
0x00004c13      4889f2         mov rdx, rsi
0x00004c16      4989c8         mov r8, rcx
0x00004c19      31f6           xor esi, esi
0x00004c1b      31c9           xor ecx, ecx
0x00004c1d      e96efbffff     jmp sym.parse_with_separator
0x00004c22      660f1f440000   nop word [rax + rax]
0x00004c28      4531d2         xor r10d, r10d
0x00004c2b      ebc7           jmp 0x4bf4
0x00004c2d      0f1f00         nop dword [rax]
;-- version_etc_arn:
0x00004c30      4157           push r15
0x00004c32      4156           push r14
0x00004c34      4155           push r13
0x00004c36      4154           push r12
0x00004c38      4d89cc         mov r12, r9
0x00004c3b      55             push rbp
0x00004c3c      53             push rbx
0x00004c3d      4889fd         mov rbp, rdi
0x00004c40      4c89c3         mov rbx, r8
0x00004c43      4883ec28       sub rsp, 0x28
0x00004c47      4885f6         test rsi, rsi
0x00004c4a      0f8418010000   je 0x4d68
0x00004c50      4989d0         mov r8, rdx
0x00004c53      488d15d61d00.  lea rdx, str.s___s___s                  ; 0x6a30 ; "%s (%s) %s\n"
0x00004c5a      4989c9         mov r9, rcx
0x00004c5d      31c0           xor eax, eax
0x00004c5f      4889f1         mov rcx, rsi
0x00004c62      be01000000     mov esi, 1
0x00004c67      e8d4cdffff     call sym.imp.__fprintf_chk
0x00004c6c      488d35d01d00.  lea rsi, [0x00006a43]                   ; "(C)"
0x00004c73      31ff           xor edi, edi
0x00004c75      ba05000000     mov edx, 5
0x00004c7a      e821cbffff     call sym.imp.dcgettext
0x00004c7f      488d15da2000.  lea rdx, obj.version_etc_copyright      ; 0x6d60 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004c86      4889c1         mov rcx, rax
0x00004c89      41b8e3070000   mov r8d, 0x7e3
0x00004c8f      be01000000     mov esi, 1
0x00004c94      4889ef         mov rdi, rbp
0x00004c97      31c0           xor eax, eax
0x00004c99      e8a2cdffff     call sym.imp.__fprintf_chk
0x00004c9e      488d352b1e00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6ad0 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004ca5      31ff           xor edi, edi
0x00004ca7      ba05000000     mov edx, 5
0x00004cac      e8efcaffff     call sym.imp.dcgettext
0x00004cb1      4889ee         mov rsi, rbp
0x00004cb4      4889c7         mov rdi, rax
0x00004cb7      e8e4cbffff     call sym.imp.fputs_unlocked
0x00004cbc      4983fc09       cmp r12, 9
0x00004cc0      0f873a030000   ja 0x5000
0x00004cc6      488d155f2000.  lea rdx, [0x00006d2c]                   ; "*\xe0\xff\xff\xbc\xe0\xff\xff\xfc\xe0\xff\xffD\xe1\xff\xff\x94\xe1\xff\xff\xec\xe1\xff\xff\x1c\xe2\xff\xff\x84\xe2\xff\xff\xb4\xdf\xff\xffd\xe0\xff\xff"
0x00004ccd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004cd1      4801d0         add rax, rdx
0x00004cd4      ffe0           jmp rax
0x00004cd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004ce0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004ce4      488b4310       mov rax, qword [rbx + 0x10]
0x00004ce8      488d35511f00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6c40 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004cef      4c8b4308       mov r8, qword [rbx + 8]
0x00004cf3      ba05000000     mov edx, 5
0x00004cf8      31ff           xor edi, edi
0x00004cfa      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004cfe      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004d02      4c894c2410     mov qword [rsp + 0x10], r9
0x00004d07      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004d0b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004d0f      48890424       mov qword [rsp], rax
0x00004d13      4c89442408     mov qword [rsp + 8], r8
0x00004d18      488b1b         mov rbx, qword [rbx]
0x00004d1b      e880caffff     call sym.imp.dcgettext
0x00004d20      4883ec08       sub rsp, 8
0x00004d24      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004d29      4889c2         mov rdx, rax
0x00004d2c      4889d9         mov rcx, rbx
0x00004d2f      be01000000     mov esi, 1
0x00004d34      4889ef         mov rdi, rbp
0x00004d37      31c0           xor eax, eax
0x00004d39      4151           push r9
0x00004d3b      4155           push r13
0x00004d3d      4154           push r12
0x00004d3f      4157           push r15
0x00004d41      4156           push r14
0x00004d43      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004d48      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004d4d      e8eeccffff     call sym.imp.__fprintf_chk
0x00004d52      4883c430       add rsp, 0x30
0x00004d56      4883c428       add rsp, 0x28
0x00004d5a      5b             pop rbx
0x00004d5b      5d             pop rbp
0x00004d5c      415c           pop r12
0x00004d5e      415d           pop r13
0x00004d60      415e           pop r14
0x00004d62      415f           pop r15
0x00004d64      c3             ret
0x00004d65      0f1f00         nop dword [rax]
0x00004d68      4989c8         mov r8, rcx
0x00004d6b      4889d1         mov rcx, rdx
0x00004d6e      488d15c71c00.  lea rdx, str.s__s                       ; 0x6a3c ; "%s %s\n"
0x00004d75      be01000000     mov esi, 1
0x00004d7a      31c0           xor eax, eax
0x00004d7c      e8bfccffff     call sym.imp.__fprintf_chk
0x00004d81      e9e6feffff     jmp 0x4c6c
0x00004d86      662e0f1f8400.  nop word cs:[rax + rax]
0x00004d90      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004d94      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004d98      488d35d11e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6c70 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004d9f      488b4310       mov rax, qword [rbx + 0x10]
0x00004da3      4c8b4308       mov r8, qword [rbx + 8]
0x00004da7      ba05000000     mov edx, 5
0x00004dac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004db0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004db4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004db8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004dbc      488b1b         mov rbx, qword [rbx]
0x00004dbf      4c89542418     mov qword [rsp + 0x18], r10
0x00004dc4      4c894c2410     mov qword [rsp + 0x10], r9
0x00004dc9      48890424       mov qword [rsp], rax
0x00004dcd      4c89442408     mov qword [rsp + 8], r8
0x00004dd2      31ff           xor edi, edi
0x00004dd4      e8c7c9ffff     call sym.imp.dcgettext
0x00004dd9      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004dde      4152           push r10
0x00004de0      e93fffffff     jmp 0x4d24
0x00004de5      0f1f00         nop dword [rax]
0x00004de8      488b1b         mov rbx, qword [rbx]
0x00004deb      488d35551c00.  lea rsi, str.Written_by__s.             ; 0x6a47 ; "Written by %s.\n"
0x00004df2      ba05000000     mov edx, 5
0x00004df7      31ff           xor edi, edi
0x00004df9      e8a2c9ffff     call sym.imp.dcgettext
0x00004dfe      4883c428       add rsp, 0x28
0x00004e02      4889d9         mov rcx, rbx
0x00004e05      4889ef         mov rdi, rbp
0x00004e08      5b             pop rbx
0x00004e09      5d             pop rbp
0x00004e0a      415c           pop r12
0x00004e0c      415d           pop r13
0x00004e0e      415e           pop r14
0x00004e10      415f           pop r15
0x00004e12      4889c2         mov rdx, rax
0x00004e15      be01000000     mov esi, 1
0x00004e1a      31c0           xor eax, eax
0x00004e1c      e91fccffff     jmp sym.imp.__fprintf_chk
0x00004e21      0f1f80000000.  nop dword [rax]
0x00004e28      4c8b6308       mov r12, qword [rbx + 8]
0x00004e2c      488d35241c00.  lea rsi, str.Written_by__s_and__s.      ; 0x6a57 ; "Written by %s and %s.\n"
0x00004e33      488b1b         mov rbx, qword [rbx]
0x00004e36      ba05000000     mov edx, 5
0x00004e3b      31ff           xor edi, edi
0x00004e3d      e85ec9ffff     call sym.imp.dcgettext
0x00004e42      4883c428       add rsp, 0x28
0x00004e46      4d89e0         mov r8, r12
0x00004e49      4889d9         mov rcx, rbx
0x00004e4c      4889ef         mov rdi, rbp
0x00004e4f      4889c2         mov rdx, rax
0x00004e52      be01000000     mov esi, 1
0x00004e57      5b             pop rbx
0x00004e58      5d             pop rbp
0x00004e59      415c           pop r12
0x00004e5b      415d           pop r13
0x00004e5d      415e           pop r14
0x00004e5f      415f           pop r15
0x00004e61      31c0           xor eax, eax
0x00004e63      e9d8cbffff     jmp sym.imp.__fprintf_chk
0x00004e68      0f1f84000000.  nop dword [rax + rax]
0x00004e70      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004e74      4c8b6308       mov r12, qword [rbx + 8]
0x00004e78      488d35ef1b00.  lea rsi, str.Written_by__s___s__and__s. ; 0x6a6e ; "Written by %s, %s, and %s.\n"
0x00004e7f      488b1b         mov rbx, qword [rbx]
0x00004e82      ba05000000     mov edx, 5
0x00004e87      31ff           xor edi, edi
0x00004e89      e812c9ffff     call sym.imp.dcgettext
0x00004e8e      4883c428       add rsp, 0x28
0x00004e92      4d89e9         mov r9, r13
0x00004e95      4d89e0         mov r8, r12
0x00004e98      4889d9         mov rcx, rbx
0x00004e9b      4889ef         mov rdi, rbp
0x00004e9e      4889c2         mov rdx, rax
0x00004ea1      5b             pop rbx
0x00004ea2      5d             pop rbp
0x00004ea3      415c           pop r12
0x00004ea5      415d           pop r13
0x00004ea7      415e           pop r14
0x00004ea9      415f           pop r15
0x00004eab      be01000000     mov esi, 1
0x00004eb0      31c0           xor eax, eax
0x00004eb2      e989cbffff     jmp sym.imp.__fprintf_chk
0x00004eb7      660f1f840000.  nop word [rax + rax]
0x00004ec0      488d35d91c00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6ba0 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004ec7      ba05000000     mov edx, 5
0x00004ecc      31ff           xor edi, edi
0x00004ece      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004ed2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004ed6      4c8b6308       mov r12, qword [rbx + 8]
0x00004eda      488b1b         mov rbx, qword [rbx]
0x00004edd      e8bec8ffff     call sym.imp.dcgettext
0x00004ee2      4883ec08       sub rsp, 8
0x00004ee6      4156           push r14
0x00004ee8      4889c2         mov rdx, rax
0x00004eeb      4d89e9         mov r9, r13
0x00004eee      4d89e0         mov r8, r12
0x00004ef1      4889d9         mov rcx, rbx
0x00004ef4      4889ef         mov rdi, rbp
0x00004ef7      be01000000     mov esi, 1
0x00004efc      31c0           xor eax, eax
0x00004efe      e83dcbffff     call sym.imp.__fprintf_chk
0x00004f03      58             pop rax
0x00004f04      5a             pop rdx
0x00004f05      4883c428       add rsp, 0x28
0x00004f09      5b             pop rbx
0x00004f0a      5d             pop rbp
0x00004f0b      415c           pop r12
0x00004f0d      415d           pop r13
0x00004f0f      415e           pop r14
0x00004f11      415f           pop r15
0x00004f13      c3             ret
0x00004f14      0f1f4000       nop dword [rax]
0x00004f18      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f1c      488d359d1c00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6bc0 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004f23      ba05000000     mov edx, 5
0x00004f28      31ff           xor edi, edi
0x00004f2a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f2e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004f32      4c8b6308       mov r12, qword [rbx + 8]
0x00004f36      488b1b         mov rbx, qword [rbx]
0x00004f39      e862c8ffff     call sym.imp.dcgettext
0x00004f3e      4157           push r15
0x00004f40      eba4           jmp 0x4ee6
0x00004f42      660f1f440000   nop word [rax + rax]
0x00004f48      4c8b4308       mov r8, qword [rbx + 8]
0x00004f4c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004f50      488d35911c00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6be8 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004f57      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f5b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f5f      ba05000000     mov edx, 5
0x00004f64      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004f68      31ff           xor edi, edi
0x00004f6a      488b1b         mov rbx, qword [rbx]
0x00004f6d      4c890424       mov qword [rsp], r8
0x00004f71      e82ac8ffff     call sym.imp.dcgettext
0x00004f76      4883ec08       sub rsp, 8
0x00004f7a      4d89e9         mov r9, r13
0x00004f7d      4154           push r12
0x00004f7f      4157           push r15
0x00004f81      4156           push r14
0x00004f83      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004f88      4889d9         mov rcx, rbx
0x00004f8b      4889c2         mov rdx, rax
0x00004f8e      4889ef         mov rdi, rbp
0x00004f91      be01000000     mov esi, 1
0x00004f96      31c0           xor eax, eax
0x00004f98      e8a3caffff     call sym.imp.__fprintf_chk
0x00004f9d      4883c420       add rsp, 0x20
0x00004fa1      4883c428       add rsp, 0x28
0x00004fa5      5b             pop rbx
0x00004fa6      5d             pop rbp
0x00004fa7      415c           pop r12
0x00004fa9      415d           pop r13
0x00004fab      415e           pop r14
0x00004fad      415f           pop r15
0x00004faf      c3             ret
0x00004fb0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004fb4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004fb8      488d35511c00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6c10 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004fbf      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004fc3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004fc7      ba05000000     mov edx, 5
0x00004fcc      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004fd0      4c8b4308       mov r8, qword [rbx + 8]
0x00004fd4      31ff           xor edi, edi
0x00004fd6      4c894c2408     mov qword [rsp + 8], r9
0x00004fdb      488b1b         mov rbx, qword [rbx]
0x00004fde      4c890424       mov qword [rsp], r8
0x00004fe2      e8b9c7ffff     call sym.imp.dcgettext
0x00004fe7      4155           push r13
0x00004fe9      4154           push r12
0x00004feb      4157           push r15
0x00004fed      4156           push r14
0x00004fef      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004ff4      eb8d           jmp 0x4f83
0x00004ff6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005000      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005004      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005008      ba05000000     mov edx, 5
0x0000500d      488b4310       mov rax, qword [rbx + 0x10]
0x00005011      4c8b4308       mov r8, qword [rbx + 8]
0x00005015      488d358c1c00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6ca8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000501c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005020      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005024      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005028      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000502c      4c89542418     mov qword [rsp + 0x18], r10
0x00005031      4c894c2410     mov qword [rsp + 0x10], r9
0x00005036      48890424       mov qword [rsp], rax
0x0000503a      4c89442408     mov qword [rsp + 8], r8
0x0000503f      488b1b         mov rbx, qword [rbx]
0x00005042      e98bfdffff     jmp 0x4dd2
0x00005047      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005050      4531c9         xor r9d, r9d
0x00005053      49833800       cmp qword [r8], 0
0x00005057      7412           je 0x506b
0x00005059      0f1f80000000.  nop dword [rax]
0x00005060      4983c101       add r9, 1
0x00005064      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005069      75f5           jne 0x5060
0x0000506b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005070      4883ec68       sub rsp, 0x68
0x00005074      4d89c2         mov r10, r8
0x00005077      4531c9         xor r9d, r9d
0x0000507a      64488b042528.  mov rax, qword fs:[0x28]
0x00005083      4889442458     mov qword [rsp + 0x58], rax
0x00005088      31c0           xor eax, eax
0x0000508a      4989e0         mov r8, rsp
0x0000508d      0f1f00         nop dword [rax]
0x00005090      418b02         mov eax, dword [r10]
0x00005093      83f82f         cmp eax, 0x2f
0x00005096      7742           ja 0x50da
0x00005098      4189c3         mov r11d, eax
0x0000509b      4d035a10       add r11, qword [r10 + 0x10]
0x0000509f      83c008         add eax, 8
0x000050a2      418902         mov dword [r10], eax
0x000050a5      498b03         mov rax, qword [r11]
0x000050a8      4885c0         test rax, rax
0x000050ab      4b8904c8       mov qword [r8 + r9*8], rax
0x000050af      740a           je 0x50bb
0x000050b1      4983c101       add r9, 1
0x000050b5      4983f90a       cmp r9, 0xa
0x000050b9      75d5           jne 0x5090
0x000050bb      e870fbffff     call sym.version_etc_arn
0x000050c0      488b442458     mov rax, qword [rsp + 0x58]
0x000050c5      644833042528.  xor rax, qword fs:[0x28]
0x000050ce      7505           jne 0x50d5
0x000050d0      4883c468       add rsp, 0x68
0x000050d4      c3             ret
0x000050d5      e806c7ffff     call sym.imp.__stack_chk_fail
0x000050da      4d8b5a08       mov r11, qword [r10 + 8]
0x000050de      498d4308       lea rax, [r11 + 8]
0x000050e2      49894208       mov qword [r10 + 8], rax
0x000050e6      ebbd           jmp 0x50a5
0x000050e8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000050f0      55             push rbp
0x000050f1      53             push rbx
0x000050f2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000050f8      4531db         xor r11d, r11d
0x000050fb      4881ecb80000.  sub rsp, 0xb8
0x00005102      64488b042528.  mov rax, qword fs:[0x28]
0x0000510b      4889442478     mov qword [rsp + 0x78], rax
0x00005110      31c0           xor eax, eax
0x00005112      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000511a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005122      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000512a      4c8d442420     lea r8, [rsp + 0x20]
0x0000512f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005137      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000513f      4889442410     mov qword [rsp + 0x10], rax
0x00005144      488d84248000.  lea rax, [rsp + 0x80]
0x0000514c      4531c9         xor r9d, r9d
0x0000514f      4889442418     mov qword [rsp + 0x18], rax
0x00005154      4889c5         mov rbp, rax
0x00005157      660f1f840000.  nop word [rax + rax]
0x00005160      4183fa2f       cmp r10d, 0x2f
0x00005164      7756           ja 0x51bc
0x00005166      4489d0         mov eax, r10d
0x00005169      41bb01000000   mov r11d, 1
0x0000516f      4183c208       add r10d, 8
0x00005173      4801e8         add rax, rbp
0x00005176      488b00         mov rax, qword [rax]
0x00005179      4885c0         test rax, rax
0x0000517c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005180      740a           je 0x518c
0x00005182      4983c101       add r9, 1
0x00005186      4983f90a       cmp r9, 0xa
0x0000518a      75d4           jne 0x5160
0x0000518c      4584db         test r11b, r11b
0x0000518f      7524           jne 0x51b5
0x00005191      e89afaffff     call sym.version_etc_arn
0x00005196      488b442478     mov rax, qword [rsp + 0x78]
0x0000519b      644833042528.  xor rax, qword fs:[0x28]
0x000051a4      750a           jne 0x51b0
0x000051a6      4881c4b80000.  add rsp, 0xb8
0x000051ad      5b             pop rbx
0x000051ae      5d             pop rbp
0x000051af      c3             ret
0x000051b0      e82bc6ffff     call sym.imp.__stack_chk_fail
0x000051b5      4489542408     mov dword [rsp + 8], r10d
0x000051ba      ebd5           jmp 0x5191
0x000051bc      4889d8         mov rax, rbx
0x000051bf      4883c308       add rbx, 8
0x000051c3      ebb1           jmp 0x5176
0x000051c5      90             nop
0x000051c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000051d0      53             push rbx
0x000051d1      488d35b21800.  lea rsi, str.Report_bugs_to:__s         ; 0x6a8a ; "\nReport bugs to: %s\n"
0x000051d8      ba05000000     mov edx, 5
0x000051dd      31ff           xor edi, edi
0x000051df      e8bcc5ffff     call sym.imp.dcgettext
0x000051e4      488d15b41800.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6a9f ; "bug-coreutils@gnu.org"
0x000051eb      4889c6         mov rsi, rax
0x000051ee      bf01000000     mov edi, 1
0x000051f3      31c0           xor eax, eax
0x000051f5      e896c7ffff     call sym.imp.__printf_chk
0x000051fa      488d35b41800.  lea rsi, str.s_home_page:___s           ; 0x6ab5 ; "%s home page: <%s>\n"
0x00005201      ba05000000     mov edx, 5
0x00005206      31ff           xor edi, edi
0x00005208      e893c5ffff     call sym.imp.dcgettext
0x0000520d      488d0d1c1100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6330 ; "https://www.gnu.org/software/coreutils/"
0x00005214      488d150f0e00.  lea rdx, str.GNU_coreutils              ; 0x602a ; "GNU coreutils"
0x0000521b      4889c6         mov rsi, rax
0x0000521e      bf01000000     mov edi, 1
0x00005223      31c0           xor eax, eax
0x00005225      e866c7ffff     call sym.imp.__printf_chk
0x0000522a      488b1d573e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00005231      488d35b01a00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x6ce8 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005238      31ff           xor edi, edi
0x0000523a      ba05000000     mov edx, 5
0x0000523f      e85cc5ffff     call sym.imp.dcgettext
0x00005244      4889de         mov rsi, rbx
0x00005247      4889c7         mov rdi, rax
0x0000524a      5b             pop rbx
0x0000524b      e950c6ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005250      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005251      4889fb         mov rbx, rdi
0x00005254      e8c7c6ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005259      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000525c      7505           jne 0x5263
0x0000525e      4885db         test rbx, rbx
0x00005261      7502           jne 0x5265
0x00005263      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005264      c3             ret
0x00005265      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000526a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005270      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005273      48f7e6         mul rsi
0x00005276      4889c7         mov rdi, rax
0x00005279      0f90c0         seto al
0x0000527c      4885ff         test rdi, rdi
0x0000527f      780a           js 0x528b
0x00005281      0fb6c0         movzx eax, al
0x00005284      4885c0         test rax, rax
0x00005287      7502           jne 0x528b
0x00005289      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000528b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000528f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005294      6690           nop
0x00005296      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000052a0      ebae           jmp sym.xmalloc
0x000052a2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000052a6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000052b0      4885f6         test rsi, rsi
0x000052b3      53             push rbx
0x000052b4      4889f3         mov rbx, rsi
0x000052b7      7505           jne 0x52be
0x000052b9      4885ff         test rdi, rdi
0x000052bc      751a           jne 0x52d8
0x000052be      4889de         mov rsi, rbx
0x000052c1      e8aac6ffff     call sym.imp.realloc
0x000052c6      4885c0         test rax, rax
0x000052c9      7505           jne 0x52d0
0x000052cb      4885db         test rbx, rbx
0x000052ce      7511           jne 0x52e1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000052d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000052d1      c3             ret
0x000052d2      660f1f440000   nop word [rax + rax]
0x000052d8      e813c4ffff     call sym.imp.free
0x000052dd      31c0           xor eax, eax
0x000052df      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000052e0      c3             ret
0x000052e1      e8ba010000     call sym.xalloc_die
0x000052e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000052f0      4889f0         mov rax, rsi
0x000052f3      48f7e2         mul rdx
0x000052f6      4889c6         mov rsi, rax
0x000052f9      0f90c0         seto al
0x000052fc      4885f6         test rsi, rsi
0x000052ff      780a           js 0x530b
0x00005301      0fb6c0         movzx eax, al
0x00005304      4885c0         test rax, rax
0x00005307      7502           jne 0x530b
0x00005309      eba5           jmp sym.xrealloc
0x0000530b      4883ec08       sub rsp, 8
0x0000530f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005314      6690           nop
0x00005316      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005320      4885ff         test rdi, rdi
0x00005323      4989d1         mov r9, rdx
0x00005326      488b0e         mov rcx, qword [rsi]
0x00005329      7435           je 0x5360
0x0000532b      31d2           xor edx, edx
0x0000532d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005337      49f7f1         div r9
0x0000533a      4839c8         cmp rax, rcx
0x0000533d      763c           jbe 0x537b
0x0000533f      4889c8         mov rax, rcx
0x00005342      48d1e8         shr rax, 1
0x00005345      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000534a      48890e         mov qword [rsi], rcx
0x0000534d      490fafc9       imul rcx, r9
0x00005351      4889ce         mov rsi, rcx
0x00005354      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005359      0f1f80000000.  nop dword [rax]
0x00005360      4885c9         test rcx, rcx
0x00005363      7423           je 0x5388
0x00005365      4889c8         mov rax, rcx
0x00005368      49f7e1         mul r9
0x0000536b      0f90c2         seto dl
0x0000536e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005371      0fb6d2         movzx edx, dl
0x00005374      7805           js 0x537b
0x00005376      4885d2         test rdx, rdx
0x00005379      74cf           je 0x534a
0x0000537b      4883ec08       sub rsp, 8
0x0000537f      e81c010000     call sym.xalloc_die
0x00005384      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005388      31d2           xor edx, edx
0x0000538a      b880000000     mov eax, 0x80
0x0000538f      4531c0         xor r8d, r8d
0x00005392      49f7f1         div r9
0x00005395      4885c0         test rax, rax
0x00005398      410f94c0       sete r8b
0x0000539c      498d0c00       lea rcx, [r8 + rax]
0x000053a0      ebc3           jmp 0x5365
0x000053a2      0f1f4000       nop dword [rax]
0x000053a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000053b0      4885ff         test rdi, rdi
0x000053b3      488b06         mov rax, qword [rsi]
0x000053b6      7428           je 0x53e0
0x000053b8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000053c2      4839d0         cmp rax, rdx
0x000053c5      772a           ja 0x53f1
0x000053c7      4889c2         mov rdx, rax
0x000053ca      48d1ea         shr rdx, 1
0x000053cd      488d440201     lea rax, [rdx + rax + 1]
0x000053d2      488906         mov qword [rsi], rax
0x000053d5      4889c6         mov rsi, rax
0x000053d8      e9d3feffff     jmp sym.xrealloc
0x000053dd      0f1f00         nop dword [rax]
0x000053e0      4885c0         test rax, rax
0x000053e3      ba80000000     mov edx, 0x80
0x000053e8      480f44c2       cmove rax, rdx
0x000053ec      4885c0         test rax, rax
0x000053ef      79e1           jns 0x53d2
0x000053f1      4883ec08       sub rsp, 8
0x000053f5      e8a6000000     call sym.xalloc_die
0x000053fa      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005400      53             push rbx
0x00005401      4889fb         mov rbx, rdi
0x00005404      e847feffff     call sym.xmalloc
0x00005409      4889da         mov rdx, rbx
0x0000540c      31f6           xor esi, esi
0x0000540e      4889c7         mov rdi, rax
0x00005411      5b             pop rbx
0x00005412      e949c4ffff     jmp sym.imp.memset
0x00005417      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005420      4889f8         mov rax, rdi
0x00005423      4883ec08       sub rsp, 8
0x00005427      48f7e6         mul rsi
0x0000542a      0f90c2         seto dl
0x0000542d      4885c0         test rax, rax
0x00005430      7817           js 0x5449
0x00005432      0fb6d2         movzx edx, dl
0x00005435      4885d2         test rdx, rdx
0x00005438      750f           jne 0x5449
0x0000543a      e871c4ffff     call sym.imp.calloc
0x0000543f      4885c0         test rax, rax
0x00005442      7405           je 0x5449
0x00005444      4883c408       add rsp, 8
0x00005448      c3             ret
0x00005449      e852000000     call sym.xalloc_die
0x0000544e      6690           nop
;-- xmemdup:
0x00005450      55             push rbp
0x00005451      53             push rbx
0x00005452      4889fd         mov rbp, rdi
0x00005455      4889f7         mov rdi, rsi
0x00005458      4889f3         mov rbx, rsi
0x0000545b      4883ec08       sub rsp, 8
0x0000545f      e8ecfdffff     call sym.xmalloc
0x00005464      4883c408       add rsp, 8
0x00005468      4889da         mov rdx, rbx
0x0000546b      4889ee         mov rsi, rbp
0x0000546e      5b             pop rbx
0x0000546f      5d             pop rbp
0x00005470      4889c7         mov rdi, rax
0x00005473      e968c4ffff     jmp sym.imp.memcpy
0x00005478      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005480      53             push rbx
0x00005481      4889fb         mov rbx, rdi
0x00005484      e837c3ffff     call sym.imp.strlen
0x00005489      4889df         mov rdi, rbx
0x0000548c      488d7001       lea rsi, [rax + 1]
0x00005490      5b             pop rbx
0x00005491      ebbd           jmp sym.xmemdup
0x00005493      662e0f1f8400.  nop word cs:[rax + rax]
0x0000549d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000054a0      488d35e81800.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x6d8f ; "memory exhausted"
0x000054a7      4883ec08       sub rsp, 8
0x000054ab      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000054b0      31ff           xor edi, edi
0x000054b2      e8e9c2ffff     call sym.imp.dcgettext
0x000054b7      8b3d5b3b2000   mov edi, dword [obj.exit_failure]       ; [0x209018:4]=1
0x000054bd      488d151b1000.  lea rdx, [0x000064df]                   ; "%s"
0x000054c4      4889c1         mov rcx, rax
0x000054c7      31f6           xor esi, esi
0x000054c9      31c0           xor eax, eax
0x000054cb      e8d0c4ffff     call sym.imp.error
0x000054d0      e82bc2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000054d5      662e0f1f8400.  nop word cs:[rax + rax]
0x000054df      90             nop
;-- xgetgroups:
0x000054e0      53             push rbx                                ; ../coreutils-8.31/lib/xgetgroups.c:32
0x000054e1      e89a060000     call sym.mgetgroups                     ; ../coreutils-8.31/lib/xgetgroups.c:33
0x000054e6      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/xgetgroups.c:34
0x000054e9      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/xgetgroups.c:33
0x000054eb      740b           je 0x54f8                               ; ../coreutils-8.31/lib/xgetgroups.c:34
0x000054ed      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/xgetgroups.c:37
0x000054ef      5b             pop rbx
0x000054f0      c3             ret
0x000054f1      0f1f80000000.  nop dword [rax]
0x000054f8      e813c2ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xgetgroups.c:34
0x000054fd      83380c         cmp dword [rax], 0xc
0x00005500      75eb           jne 0x54ed
0x00005502      e899ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xgetgroups.c:35
0x00005507      660f1f840000.  nop word [rax + rax]
;-- xstrtoul:
0x00005510      4157           push r15
0x00005512      4156           push r14
0x00005514      4155           push r13
0x00005516      4154           push r12
0x00005518      55             push rbp
0x00005519      53             push rbx
0x0000551a      4883ec28       sub rsp, 0x28
0x0000551e      64488b042528.  mov rax, qword fs:[0x28]
0x00005527      4889442418     mov qword [rsp + 0x18], rax
0x0000552c      31c0           xor eax, eax
0x0000552e      83fa24         cmp edx, 0x24
0x00005531      0f875e030000   ja 0x5895
0x00005537      488d442410     lea rax, [rsp + 0x10]
0x0000553c      4989f7         mov r15, rsi
0x0000553f      4885f6         test rsi, rsi
0x00005542      4889fd         mov rbp, rdi
0x00005545      89542408       mov dword [rsp + 8], edx
0x00005549      4989ce         mov r14, rcx
0x0000554c      4d89c5         mov r13, r8
0x0000554f      4c0f44f8       cmove r15, rax
0x00005553      e8b8c1ffff     call sym.imp.__errno_location
0x00005558      c70000000000   mov dword [rax], 0
0x0000555e      4989c4         mov r12, rax
0x00005561      0fb65d00       movzx ebx, byte [rbp]
0x00005565      e816c5ffff     call sym.imp.__ctype_b_loc
0x0000556a      8b542408       mov edx, dword [rsp + 8]
0x0000556e      488b30         mov rsi, qword [rax]
0x00005571      4889e8         mov rax, rbp
0x00005574      eb11           jmp 0x5587
0x00005576      662e0f1f8400.  nop word cs:[rax + rax]
0x00005580      4883c001       add rax, 1
0x00005584      0fb618         movzx ebx, byte [rax]
0x00005587      0fb6cb         movzx ecx, bl
0x0000558a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000558f      75ef           jne 0x5580
0x00005591      80fb2d         cmp bl, 0x2d
0x00005594      7452           je 0x55e8
0x00005596      4c89fe         mov rsi, r15
0x00005599      4889ef         mov rdi, rbp
0x0000559c      e84fc4ffff     call sym.imp.strtoul
0x000055a1      498b0f         mov rcx, qword [r15]
0x000055a4      4889c3         mov rbx, rax
0x000055a7      4839e9         cmp rcx, rbp
0x000055aa      742c           je 0x55d8
0x000055ac      418b0424       mov eax, dword [r12]
0x000055b0      85c0           test eax, eax
0x000055b2      7464           je 0x5618
0x000055b4      83f822         cmp eax, 0x22
0x000055b7      bd01000000     mov ebp, 1
0x000055bc      752a           jne 0x55e8
0x000055be      4d85ed         test r13, r13
0x000055c1      7409           je 0x55cc
0x000055c3      440fb621       movzx r12d, byte [rcx]
0x000055c7      4584e4         test r12b, r12b
0x000055ca      757b           jne 0x5647
0x000055cc      49891e         mov qword [r14], rbx
0x000055cf      eb1c           jmp 0x55ed
0x000055d1      0f1f80000000.  nop dword [rax]
0x000055d8      4d85ed         test r13, r13
0x000055db      48894c2408     mov qword [rsp + 8], rcx
0x000055e0      753e           jne 0x5620
0x000055e2      660f1f440000   nop word [rax + rax]
0x000055e8      bd04000000     mov ebp, 4
0x000055ed      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000055f2      6448333c2528.  xor rdi, qword fs:[0x28]
0x000055fb      89e8           mov eax, ebp
0x000055fd      0f858d020000   jne 0x5890
0x00005603      4883c428       add rsp, 0x28
0x00005607      5b             pop rbx
0x00005608      5d             pop rbp
0x00005609      415c           pop r12
0x0000560b      415d           pop r13
0x0000560d      415e           pop r14
0x0000560f      415f           pop r15
0x00005611      c3             ret
0x00005612      660f1f440000   nop word [rax + rax]
0x00005618      31ed           xor ebp, ebp
0x0000561a      eba2           jmp 0x55be
0x0000561c      0f1f4000       nop dword [rax]
0x00005620      440fb66500     movzx r12d, byte [rbp]
0x00005625      4584e4         test r12b, r12b
0x00005628      74be           je 0x55e8
0x0000562a      410fbef4       movsx esi, r12b
0x0000562e      4c89ef         mov rdi, r13
0x00005631      31ed           xor ebp, ebp
0x00005633      e8d8c1ffff     call sym.imp.strchr
0x00005638      4885c0         test rax, rax
0x0000563b      bb01000000     mov ebx, 1
0x00005640      488b4c2408     mov rcx, qword [rsp + 8]
0x00005645      74a1           je 0x55e8
0x00005647      410fbef4       movsx esi, r12b
0x0000564b      4c89ef         mov rdi, r13
0x0000564e      48894c2408     mov qword [rsp + 8], rcx
0x00005653      e8b8c1ffff     call sym.imp.strchr
0x00005658      4885c0         test rax, rax
0x0000565b      488b4c2408     mov rcx, qword [rsp + 8]
0x00005660      0f84c6000000   je 0x572c
0x00005666      418d4424bb     lea eax, [r12 - 0x45]
0x0000566b      3c2f           cmp al, 0x2f
0x0000566d      7751           ja 0x56c0
0x0000566f      48ba45893000.  movabs rdx, 0x814400308945
0x00005679      480fa3c2       bt rdx, rax
0x0000567d      7341           jae 0x56c0
0x0000567f      be30000000     mov esi, 0x30                           ; '0'
0x00005684      4c89ef         mov rdi, r13
0x00005687      48894c2408     mov qword [rsp + 8], rcx
0x0000568c      e87fc1ffff     call sym.imp.strchr
0x00005691      4885c0         test rax, rax
0x00005694      488b4c2408     mov rcx, qword [rsp + 8]
0x00005699      7425           je 0x56c0
0x0000569b      0fb64101       movzx eax, byte [rcx + 1]
0x0000569f      3c44           cmp al, 0x44
0x000056a1      740c           je 0x56af
0x000056a3      3c69           cmp al, 0x69
0x000056a5      0f84cd010000   je 0x5878
0x000056ab      3c42           cmp al, 0x42
0x000056ad      7511           jne 0x56c0
0x000056af      bf02000000     mov edi, 2
0x000056b4      bee8030000     mov esi, 0x3e8
0x000056b9      eb0f           jmp 0x56ca
0x000056bb      0f1f440000     nop dword [rax + rax]
0x000056c0      bf01000000     mov edi, 1
0x000056c5      be00040000     mov esi, 0x400
0x000056ca      4183ec42       sub r12d, 0x42
0x000056ce      4180fc35       cmp r12b, 0x35
0x000056d2      7758           ja 0x572c
0x000056d4      488d150d1700.  lea rdx, [0x00006de8]
0x000056db      450fb6e4       movzx r12d, r12b
0x000056df      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000056e3      4801d0         add rax, rdx
0x000056e6      ffe0           jmp rax
0x000056e8      4889d8         mov rax, rbx
0x000056eb      48f7e6         mul rsi
0x000056ee      0f80ed010000   jo 0x58e1
0x000056f4      4531c0         xor r8d, r8d
0x000056f7      48f7e6         mul rsi
0x000056fa      0f80d2010000   jo 0x58d2
0x00005700      4889c3         mov rbx, rax
0x00005703      4409c5         or ebp, r8d
0x00005706      662e0f1f8400.  nop word cs:[rax + rax]
0x00005710      4863ff         movsxd rdi, edi
0x00005713      89e8           mov eax, ebp
0x00005715      4801f9         add rcx, rdi
0x00005718      83c802         or eax, 2
0x0000571b      49890f         mov qword [r15], rcx
0x0000571e      803900         cmp byte [rcx], 0
0x00005721      49891e         mov qword [r14], rbx
0x00005724      0f45e8         cmovne ebp, eax
0x00005727      e9c1feffff     jmp 0x55ed
0x0000572c      49891e         mov qword [r14], rbx
0x0000572f      83cd02         or ebp, 2
0x00005732      e9b6feffff     jmp 0x55ed
0x00005737      ba02000000     mov edx, 2
0x0000573c      4889d0         mov rax, rdx
0x0000573f      48f7e3         mul rbx
0x00005742      0f8096000000   jo 0x57de
0x00005748      4801db         add rbx, rbx
0x0000574b      ebc3           jmp 0x5710
0x0000574d      ba00020000     mov edx, 0x200
0x00005752      4889d0         mov rax, rdx
0x00005755      48f7e3         mul rbx
0x00005758      0f8080000000   jo 0x57de
0x0000575e      48c1e309       shl rbx, 9
0x00005762      ebac           jmp 0x5710
0x00005764      41b807000000   mov r8d, 7
0x0000576a      4531c9         xor r9d, r9d
0x0000576d      0f1f00         nop dword [rax]
0x00005770      4889d8         mov rax, rbx
0x00005773      48f7e6         mul rsi
0x00005776      4889c3         mov rbx, rax
0x00005779      0f808f010000   jo 0x590e
0x0000577f      4183e801       sub r8d, 1
0x00005783      75eb           jne 0x5770
0x00005785      4409cd         or ebp, r9d
0x00005788      eb86           jmp 0x5710
0x0000578a      41b808000000   mov r8d, 8
0x00005790      4531c9         xor r9d, r9d
0x00005793      0f1f440000     nop dword [rax + rax]
0x00005798      4889d8         mov rax, rbx
0x0000579b      48f7e6         mul rsi
0x0000579e      4889c3         mov rbx, rax
0x000057a1      0f8049010000   jo 0x58f0
0x000057a7      4183e801       sub r8d, 1
0x000057ab      75eb           jne 0x5798
0x000057ad      ebd6           jmp 0x5785
0x000057af      41b804000000   mov r8d, 4
0x000057b5      4531c9         xor r9d, r9d
0x000057b8      4889d8         mov rax, rbx
0x000057bb      48f7e6         mul rsi
0x000057be      4889c3         mov rbx, rax
0x000057c1      0f80fc000000   jo 0x58c3
0x000057c7      4183e801       sub r8d, 1
0x000057cb      75eb           jne 0x57b8
0x000057cd      ebb6           jmp 0x5785
0x000057cf      4889d8         mov rax, rbx
0x000057d2      48f7e6         mul rsi
0x000057d5      4889c3         mov rbx, rax
0x000057d8      0f8132ffffff   jno 0x5710
0x000057de      bd01000000     mov ebp, 1
0x000057e3      4883cbff       or rbx, 0xffffffffffffffff
0x000057e7      e924ffffff     jmp 0x5710
0x000057ec      0f1f4000       nop dword [rax]
0x000057f0      41b805000000   mov r8d, 5
0x000057f6      4531c9         xor r9d, r9d
0x000057f9      4889d8         mov rax, rbx
0x000057fc      48f7e6         mul rsi
0x000057ff      4889c3         mov rbx, rax
0x00005802      0f80f7000000   jo 0x58ff
0x00005808      4183e801       sub r8d, 1
0x0000580c      75eb           jne 0x57f9
0x0000580e      e972ffffff     jmp 0x5785
0x00005813      41b806000000   mov r8d, 6
0x00005819      4531c9         xor r9d, r9d
0x0000581c      4889d8         mov rax, rbx
0x0000581f      48f7e6         mul rsi
0x00005822      4889c3         mov rbx, rax
0x00005825      0f8089000000   jo 0x58b4
0x0000582b      4183e801       sub r8d, 1
0x0000582f      75eb           jne 0x581c
0x00005831      e94fffffff     jmp 0x5785
0x00005836      ba00040000     mov edx, 0x400
0x0000583b      4889d0         mov rax, rdx
0x0000583e      48f7e3         mul rbx
0x00005841      709b           jo 0x57de
0x00005843      48c1e30a       shl rbx, 0xa
0x00005847      e9c4feffff     jmp 0x5710
0x0000584c      4889d8         mov rax, rbx
0x0000584f      48f7e6         mul rsi
0x00005852      0f80c5000000   jo 0x591d
0x00005858      4531c0         xor r8d, r8d
0x0000585b      48f7e6         mul rsi
0x0000585e      0f8193feffff   jno 0x56f7
0x00005864      41b801000000   mov r8d, 1
0x0000586a      4883c8ff       or rax, 0xffffffffffffffff
0x0000586e      e984feffff     jmp 0x56f7
0x00005873      0f1f440000     nop dword [rax + rax]
0x00005878      31ff           xor edi, edi
0x0000587a      80790242       cmp byte [rcx + 2], 0x42
0x0000587e      be00040000     mov esi, 0x400
0x00005883      400f94c7       sete dil
0x00005887      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000588b      e93afeffff     jmp 0x56ca
0x00005890      e84bbfffff     call sym.imp.__stack_chk_fail
0x00005895      488d0d241600.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x6ec0 ; "xstrtoul"
0x0000589c      488d35fd1400.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x6da0 ; "../coreutils-8.31/lib/xstrtol.c"
0x000058a3      488d3d161500.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x6dc0 ; "0 <= strtol_base && strtol_base <= 36"
0x000058aa      ba54000000     mov edx, 0x54                           ; 'T'
0x000058af      e89cbfffff     call sym.imp.__assert_fail
0x000058b4      41b901000000   mov r9d, 1
0x000058ba      4883cbff       or rbx, 0xffffffffffffffff
0x000058be      e968ffffff     jmp 0x582b
0x000058c3      41b901000000   mov r9d, 1
0x000058c9      4883cbff       or rbx, 0xffffffffffffffff
0x000058cd      e9f5feffff     jmp 0x57c7
0x000058d2      41b801000000   mov r8d, 1
0x000058d8      4883cbff       or rbx, 0xffffffffffffffff
0x000058dc      e922feffff     jmp 0x5703
0x000058e1      4883c8ff       or rax, 0xffffffffffffffff
0x000058e5      41b801000000   mov r8d, 1
0x000058eb      e907feffff     jmp 0x56f7
0x000058f0      41b901000000   mov r9d, 1
0x000058f6      4883cbff       or rbx, 0xffffffffffffffff
0x000058fa      e9a8feffff     jmp 0x57a7
0x000058ff      41b901000000   mov r9d, 1
0x00005905      4883cbff       or rbx, 0xffffffffffffffff
0x00005909      e9fafeffff     jmp 0x5808
0x0000590e      41b901000000   mov r9d, 1
0x00005914      4883cbff       or rbx, 0xffffffffffffffff
0x00005918      e962feffff     jmp 0x577f
0x0000591d      41b801000000   mov r8d, 1
0x00005923      4883c8ff       or rax, 0xffffffffffffffff
0x00005927      e92fffffff     jmp 0x585b
0x0000592c      0f1f4000       nop dword [rax]
;-- rpl_mbrtowc:
0x00005930      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005932      4154           push r12
0x00005934      4989f5         mov r13, rsi
0x00005937      55             push rbp
0x00005938      53             push rbx
0x00005939      4889fb         mov rbx, rdi
0x0000593c      4989d4         mov r12, rdx
0x0000593f      4883ec18       sub rsp, 0x18
0x00005943      64488b042528.  mov rax, qword fs:[0x28]
0x0000594c      4889442408     mov qword [rsp + 8], rax
0x00005951      31c0           xor eax, eax
0x00005953      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005958      4885ff         test rdi, rdi
0x0000595b      480f44d8       cmove rbx, rax
0x0000595f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005962      e899beffff     call sym.imp.mbrtowc
0x00005967      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000596b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000596e      7620           jbe 0x5990                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005970      4d85e4         test r12, r12
0x00005973      741b           je 0x5990
0x00005975      31ff           xor edi, edi
0x00005977      e8c4000000     call sym.hard_locale
0x0000597c      84c0           test al, al
0x0000597e      7510           jne 0x5990
0x00005980      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005985      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000598a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000598c      0f1f4000       nop dword [rax]
0x00005990      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005995      644833142528.  xor rdx, qword fs:[0x28]
0x0000599e      4889e8         mov rax, rbp
0x000059a1      750b           jne 0x59ae
0x000059a3      4883c418       add rsp, 0x18
0x000059a7      5b             pop rbx
0x000059a8      5d             pop rbp
0x000059a9      415c           pop r12
0x000059ab      415d           pop r13
0x000059ad      c3             ret
0x000059ae      e82dbeffff     call sym.imp.__stack_chk_fail
0x000059b3      662e0f1f8400.  nop word cs:[rax + rax]
0x000059bd      0f1f00         nop dword [rax]
;-- close_stream:
0x000059c0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000059c2      55             push rbp
0x000059c3      4889fd         mov rbp, rdi
0x000059c6      53             push rbx
0x000059c7      e884bdffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000059cc      8b5d00         mov ebx, dword [rbp]
0x000059cf      4889ef         mov rdi, rbp
0x000059d2      4989c4         mov r12, rax
0x000059d5      e8e6030000     call sym.rpl_fclose
0x000059da      83e320         and ebx, 0x20                           ; "@"
0x000059dd      85db           test ebx, ebx
0x000059df      7517           jne 0x59f8
0x000059e1      85c0           test eax, eax
0x000059e3      740a           je 0x59ef                               ; stdio.h:-186
0x000059e5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000059e8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000059ed      7439           je 0x5a28
0x000059ef      5b             pop rbx
0x000059f0      5d             pop rbp
0x000059f1      415c           pop r12
0x000059f3      c3             ret
0x000059f4      0f1f4000       nop dword [rax]
0x000059f8      85c0           test eax, eax
0x000059fa      751c           jne 0x5a18
0x000059fc      e80fbdffff     call sym.imp.__errno_location
0x00005a01      c70000000000   mov dword [rax], 0
0x00005a07      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005a0c      5b             pop rbx
0x00005a0d      5d             pop rbp
0x00005a0e      415c           pop r12
0x00005a10      c3             ret
0x00005a11      0f1f80000000.  nop dword [rax]
0x00005a18      5b             pop rbx
0x00005a19      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005a1e      5d             pop rbp                                 ; stdio.h:-186
0x00005a1f      415c           pop r12
0x00005a21      c3             ret
0x00005a22      660f1f440000   nop word [rax + rax]
0x00005a28      e8e3bcffff     call sym.imp.__errno_location
0x00005a2d      833809         cmp dword [rax], 9
0x00005a30      5b             pop rbx
0x00005a31      5d             pop rbp
0x00005a32      415c           pop r12                                 ; stdio.h:-178
0x00005a34      0f95c0         setne al
0x00005a37      0fb6c0         movzx eax, al
0x00005a3a      f7d8           neg eax
0x00005a3c      c3             ret
0x00005a3d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005a40      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005a44      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005a46      e835bfffff     call sym.imp.setlocale
0x00005a4b      4889c2         mov rdx, rax
0x00005a4e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005a53      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005a56      741d           je 0x5a75
0x00005a58      488d3d6a1400.  lea rdi, [0x00006ec9]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00005a5f      b902000000     mov ecx, 2
0x00005a64      4889d6         mov rsi, rdx
0x00005a67      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005a69      0f97c1         seta cl
0x00005a6c      80d900         sbb cl, 0
0x00005a6f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005a71      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005a73      750b           jne 0x5a80
0x00005a75      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005a79      c3             ret
0x00005a7a      660f1f440000   nop word [rax + rax]
0x00005a80      488d3d441400.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x6ecb ; "POSIX"
0x00005a87      b906000000     mov ecx, 6
0x00005a8c      4889d6         mov rsi, rdx
0x00005a8f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005a91      0f97c0         seta al
0x00005a94      1c00           sbb al, 0
0x00005a96      84c0           test al, al
0x00005a98      0f95c0         setne al
0x00005a9b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005a9f      c3             ret
;-- umaxtostr:
0x00005aa0      488d4e14       lea rcx, [rsi + 0x14]
0x00005aa4      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00005aa8      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00005ab2      660f1f440000   nop word [rax + rax]
0x00005ab8      4889f8         mov rax, rdi
0x00005abb      4883e901       sub rcx, 1
0x00005abf      48f7e6         mul rsi
0x00005ac2      48c1ea03       shr rdx, 3
0x00005ac6      488d0492       lea rax, [rdx + rdx*4]
0x00005aca      4801c0         add rax, rax
0x00005acd      4829c7         sub rdi, rax
0x00005ad0      83c730         add edi, 0x30
0x00005ad3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00005ad6      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00005ad9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00005adc      75da           jne 0x5ab8
0x00005ade      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00005ae1      c3             ret
0x00005ae2      662e0f1f8400.  nop word cs:[rax + rax]
0x00005aec      0f1f4000       nop dword [rax]
;-- locale_charset:
0x00005af0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00005af4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005af9      e842beffff     call sym.imp.nl_langinfo
0x00005afe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005b01      741d           je 0x5b20
0x00005b03      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005b06      488d15c41300.  lea rdx, str.ASCII                      ; 0x6ed1 ; "ASCII"
0x00005b0d      480f44c2       cmove rax, rdx
0x00005b11      4883c408       add rsp, 8
0x00005b15      c3             ret
0x00005b16      662e0f1f8400.  nop word cs:[rax + rax]
0x00005b20      488d05aa1300.  lea rax, str.ASCII                      ; 0x6ed1 ; "ASCII"
0x00005b27      4883c408       add rsp, 8
0x00005b2b      c3             ret
0x00005b2c      0f1f4000       nop dword [rax]
;-- realloc_groupbuf:
0x00005b30      ba04000000     mov edx, 4                              ; ../coreutils-8.31/lib/mgetgroups.c:44
0x00005b35      4889d0         mov rax, rdx
0x00005b38      48f7e6         mul rsi
0x00005b3b      7031           jo 0x5b6e
0x00005b3d      31c9           xor ecx, ecx
0x00005b3f      4885c0         test rax, rax
0x00005b42      7814           js 0x5b58
0x00005b44      4885c9         test rcx, rcx
0x00005b47      750f           jne 0x5b58
0x00005b49      48c1e602       shl rsi, 2                              ; ../coreutils-8.31/lib/mgetgroups.c:51
0x00005b4d      e91ebeffff     jmp sym.imp.realloc
0x00005b52      660f1f440000   nop word [rax + rax]
0x00005b58      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/mgetgroups.c:44
0x00005b5c      e8afbbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/mgetgroups.c:47
0x00005b61      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00005b67      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/mgetgroups.c:52
0x00005b69      4883c408       add rsp, 8
0x00005b6d      c3             ret
0x00005b6e      b901000000     mov ecx, 1                              ; ../coreutils-8.31/lib/mgetgroups.c:45
0x00005b73      ebca           jmp 0x5b3f
0x00005b75      90             nop
0x00005b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- mgetgroups:
0x00005b80      4157           push r15                                ; ../coreutils-8.31/lib/mgetgroups.c:67
0x00005b82      4156           push r14
0x00005b84      4989d7         mov r15, rdx
0x00005b87      4155           push r13
0x00005b89      4154           push r12
0x00005b8b      4189f5         mov r13d, esi
0x00005b8e      55             push rbp
0x00005b8f      53             push rbx
0x00005b90      4883ec18       sub rsp, 0x18
0x00005b94      64488b042528.  mov rax, qword fs:[0x28]
0x00005b9d      4889442408     mov qword [rsp + 8], rax
0x00005ba2      31c0           xor eax, eax
0x00005ba4      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/mgetgroups.c:81
0x00005ba7      0f84cb000000   je 0x5c78
0x00005bad      4889fd         mov rbp, rdi
0x00005bb0      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/mgetgroups.c:86
0x00005bb5      31ff           xor edi, edi
0x00005bb7      c74424040a00.  mov dword [rsp + 4], 0xa                ; ../coreutils-8.31/lib/mgetgroups.c:84
0x00005bbf      e86cffffff     call sym.realloc_groupbuf               ; ../coreutils-8.31/lib/mgetgroups.c:86
0x00005bc4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mgetgroups.c:87
0x00005bc7      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/mgetgroups.c:86
0x00005bca      0f84c8010000   je 0x5d98                               ; ../coreutils-8.31/lib/mgetgroups.c:87
0x00005bd0      4c8d742404     lea r14, [rsp + 4]
0x00005bd5      4489ee         mov esi, r13d                           ; ../coreutils-8.31/lib/mgetgroups.c:96
0x00005bd8      4c89f1         mov rcx, r14
0x00005bdb      4889da         mov rdx, rbx
0x00005bde      4889ef         mov rdi, rbp
0x00005be1      448b642404     mov r12d, dword [rsp + 4]               ; ../coreutils-8.31/lib/mgetgroups.c:93
0x00005be6      e8d5bdffff     call sym.imp.getgrouplist               ; ../coreutils-8.31/lib/mgetgroups.c:96
0x00005beb      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mgetgroups.c:100
0x00005bed      4863742404     movsxd rsi, dword [rsp + 4]
0x00005bf2      784c           js 0x5c40
0x00005bf4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mgetgroups.c:103
0x00005bf7      e834ffffff     call sym.realloc_groupbuf
0x00005bfc      4885c0         test rax, rax
0x00005bff      7567           jne 0x5c68
0x00005c01      e80abbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/mgetgroups.c:156
0x00005c06      448b20         mov r12d, dword [rax]
0x00005c09      4889c5         mov rbp, rax
0x00005c0c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mgetgroups.c:157
0x00005c0f      e8dcbaffff     call sym.imp.free
0x00005c14      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/mgetgroups.c:159 ; -1
0x00005c19      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/mgetgroups.c:158
0x00005c1d      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mgetgroups.c:201
0x00005c22      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005c2b      0f8586010000   jne 0x5db7
0x00005c31      4883c418       add rsp, 0x18
0x00005c35      5b             pop rbx
0x00005c36      5d             pop rbp
0x00005c37      415c           pop r12
0x00005c39      415d           pop r13
0x00005c3b      415e           pop r14
0x00005c3d      415f           pop r15
0x00005c3f      c3             ret
0x00005c40      4439e6         cmp esi, r12d                           ; ../coreutils-8.31/lib/mgetgroups.c:100
0x00005c43      7509           jne 0x5c4e
0x00005c45      01f6           add esi, esi                            ; ../coreutils-8.31/lib/mgetgroups.c:101
0x00005c47      89742404       mov dword [rsp + 4], esi
0x00005c4b      4863f6         movsxd rsi, esi                         ; ../coreutils-8.31/lib/mgetgroups.c:103
0x00005c4e      4889df         mov rdi, rbx
0x00005c51      e8dafeffff     call sym.realloc_groupbuf
0x00005c56      4885c0         test rax, rax
0x00005c59      74a6           je 0x5c01
0x00005c5b      4889c3         mov rbx, rax
0x00005c5e      e972ffffff     jmp 0x5bd5
0x00005c63      0f1f440000     nop dword [rax + rax]
0x00005c68      498907         mov qword [r15], rax                    ; ../coreutils-8.31/lib/mgetgroups.c:114
0x00005c6b      8b442404       mov eax, dword [rsp + 4]                ; ../coreutils-8.31/lib/mgetgroups.c:117
0x00005c6f      ebac           jmp 0x5c1d
0x00005c71      0f1f80000000.  nop dword [rax]
0x00005c78      31f6           xor esi, esi                            ; unistd.h:275   return __getgroups_alias (__size, __list);
0x00005c7a      31ff           xor edi, edi
0x00005c7c      e88fbcffff     call sym.imp.getgroups
0x00005c81      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mgetgroups.c:131
0x00005c83      89442404       mov dword [rsp + 4], eax                ; ../coreutils-8.31/lib/mgetgroups.c:124
0x00005c87      0f88ab000000   js 0x5d38                               ; ../coreutils-8.31/lib/mgetgroups.c:131
0x00005c8d      4183fdff       cmp r13d, 0xffffffff                    ; ../coreutils-8.31/lib/mgetgroups.c:142
0x00005c91      400f95c5       setne bpl
0x00005c95      85c0           test eax, eax
0x00005c97      7409           je 0x5ca2
0x00005c99      4084ed         test bpl, bpl
0x00005c9c      0f84c5000000   je 0x5d67
0x00005ca2      83c001         add eax, 1                              ; ../coreutils-8.31/lib/mgetgroups.c:143
0x00005ca5      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/mgetgroups.c:144
0x00005ca7      4863f0         movsxd rsi, eax
0x00005caa      89442404       mov dword [rsp + 4], eax                ; ../coreutils-8.31/lib/mgetgroups.c:143
0x00005cae      e87dfeffff     call sym.realloc_groupbuf               ; ../coreutils-8.31/lib/mgetgroups.c:144
0x00005cb3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mgetgroups.c:145
0x00005cb6      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/mgetgroups.c:144
0x00005cb9      0f84d9000000   je 0x5d98                               ; ../coreutils-8.31/lib/mgetgroups.c:145
0x00005cbf      8b7c2404       mov edi, dword [rsp + 4]
0x00005cc3      400fb6ed       movzx ebp, bpl
0x00005cc7      29ef           sub edi, ebp
0x00005cc9      4183fdff       cmp r13d, 0xffffffff                    ; ../coreutils-8.31/lib/mgetgroups.c:151
0x00005ccd      0f84cf000000   je 0x5da2
0x00005cd3      488d7004       lea rsi, [rax + 4]
0x00005cd7      e834bcffff     call sym.imp.getgroups
0x00005cdc      85c0           test eax, eax                           ; unistd.h:57        __off64_t __offset), pread64) __wur;
0x00005cde      0f881dffffff   js 0x5c01
0x00005ce4      44892b         mov dword [rbx], r13d
0x00005ce7      83c001         add eax, 1
0x00005cea      83f801         cmp eax, 1
0x00005ced      49891f         mov qword [r15], rbx                    ; unistd.h:61      __wur __warnattr ("pread called with bigger length than size of "
0x00005cf0      0f8e27ffffff   jle 0x5c1d
0x00005cf6      4863d0         movsxd rdx, eax
0x00005cf9      8b3b           mov edi, dword [rbx]
0x00005cfb      488d3493       lea rsi, [rbx + rdx*4]
0x00005cff      488d5304       lea rdx, [rbx + 4]
0x00005d03      4839d6         cmp rsi, rdx
0x00005d06      7720           ja 0x5d28                               ; unistd.h:68          "the destination buffer");
0x00005d08      e910ffffff     jmp 0x5c1d
0x00005d0d      0f1f00         nop dword [rax]                         ; unistd.h:63 extern ssize_t __REDIRECT (__pread64_chk_warn,
0x00005d10      3b0b           cmp ecx, dword [rbx]
0x00005d12      741a           je 0x5d2e
0x00005d14      894b04         mov dword [rbx + 4], ecx
0x00005d17      4883c304       add rbx, 4
0x00005d1b      4883c204       add rdx, 4
0x00005d1f      4839d6         cmp rsi, rdx
0x00005d22      0f86f5feffff   jbe 0x5c1d
0x00005d28      8b0a           mov ecx, dword [rdx]
0x00005d2a      39f9           cmp ecx, edi                            ; unistd.h:5    The GNU C Library is free software; you can redistribute it and/or
0x00005d2c      75e2           jne 0x5d10
0x00005d2e      83e801         sub eax, 1
0x00005d31      ebe8           jmp 0x5d1b
0x00005d33      0f1f440000     nop dword [rax + rax]
0x00005d38      e8d3b9ffff     call sym.imp.__errno_location
0x00005d3d      833826         cmp dword [rax], 0x26
0x00005d40      7556           jne 0x5d98
0x00005d42      31ff           xor edi, edi
0x00005d44      be04000000     mov esi, 4
0x00005d49      e822bcffff     call sym.imp.realloc
0x00005d4e      4885c0         test rax, rax
0x00005d51      7445           je 0x5d98
0x00005d53      498907         mov qword [r15], rax
0x00005d56      448928         mov dword [rax], r13d
0x00005d59      31c0           xor eax, eax
0x00005d5b      4183fdff       cmp r13d, 0xffffffff
0x00005d5f      0f95c0         setne al
0x00005d62      e9b6feffff     jmp 0x5c1d
0x00005d67      31ff           xor edi, edi
0x00005d69      4863f0         movsxd rsi, eax
0x00005d6c      e8bffdffff     call sym.realloc_groupbuf
0x00005d71      4885c0         test rax, rax
0x00005d74      4889c3         mov rbx, rax
0x00005d77      741f           je 0x5d98
0x00005d79      8b7c2404       mov edi, dword [rsp + 4]
0x00005d7d      4889de         mov rsi, rbx
0x00005d80      e88bbbffff     call sym.imp.getgroups                  ; unistd.h:16    License along with the GNU C Library; if not, see
0x00005d85      85c0           test eax, eax
0x00005d87      0f895dffffff   jns 0x5cea
0x00005d8d      e96ffeffff     jmp 0x5c01
0x00005d92      660f1f440000   nop word [rax + rax]
0x00005d98      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005d9d      e97bfeffff     jmp 0x5c1d
0x00005da2      4889c6         mov rsi, rax
0x00005da5      e866bbffff     call sym.imp.getgroups
0x00005daa      85c0           test eax, eax
0x00005dac      0f8938ffffff   jns 0x5cea
0x00005db2      e94afeffff     jmp 0x5c01
0x00005db7      e824baffff     call sym.imp.__stack_chk_fail
0x00005dbc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005dc0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005dc2      55             push rbp
0x00005dc3      53             push rbx
0x00005dc4      4889fb         mov rbx, rdi
0x00005dc7      e834bbffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00005dcc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00005dce      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005dd1      7854           js 0x5e27                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005dd3      e888bbffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005dd8      85c0           test eax, eax
0x00005dda      752c           jne 0x5e08
0x00005ddc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00005ddf      e85c000000     call sym.rpl_fflush
0x00005de4      85c0           test eax, eax
0x00005de6      743c           je 0x5e24
0x00005de8      e823b9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00005ded      448b20         mov r12d, dword [rax]
0x00005df0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005df3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005df6      e875b9ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00005dfb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00005dfe      7530           jne 0x5e30
0x00005e00      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005e01      5d             pop rbp
0x00005e02      415c           pop r12
0x00005e04      c3             ret
0x00005e05      0f1f00         nop dword [rax]
0x00005e08      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00005e0b      e8f0baffff     call sym.imp.fileno
0x00005e10      31f6           xor esi, esi
0x00005e12      ba01000000     mov edx, 1
0x00005e17      89c7           mov edi, eax
0x00005e19      e822baffff     call sym.imp.lseek
0x00005e1e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005e22      75b8           jne 0x5ddc
0x00005e24      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005e27      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005e28      5d             pop rbp
0x00005e29      415c           pop r12
0x00005e2b      e940b9ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005e30      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005e34      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005e39      ebc5           jmp 0x5e00
0x00005e3b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005e40      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005e43      53             push rbx
0x00005e44      4889fb         mov rbx, rdi
0x00005e47      7411           je 0x5e5a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005e49      e812bbffff     call sym.imp.__freading
0x00005e4e      85c0           test eax, eax
0x00005e50      7408           je 0x5e5a
0x00005e52      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005e58      750e           jne 0x5e68
0x00005e5a      4889df         mov rdi, rbx
0x00005e5d      5b             pop rbx
0x00005e5e      e9cdbaffff     jmp sym.imp.fflush
0x00005e63      0f1f440000     nop dword [rax + rax]
0x00005e68      4889df         mov rdi, rbx
0x00005e6b      ba01000000     mov edx, 1
0x00005e70      31f6           xor esi, esi
0x00005e72      e809000000     call sym.rpl_fseeko
0x00005e77      4889df         mov rdi, rbx
0x00005e7a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00005e7b      e9b0baffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005e80      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005e84      48394710       cmp qword [rdi + 0x10], rax
0x00005e88      7406           je 0x5e90                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00005e8a      e941bbffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00005e8f      90             nop
0x00005e90      488b4720       mov rax, qword [rdi + 0x20]
0x00005e94      48394728       cmp qword [rdi + 0x28], rax
0x00005e98      75f0           jne 0x5e8a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00005e9a      48837f4800     cmp qword [rdi + 0x48], 0
0x00005e9f      75e9           jne 0x5e8a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005ea1      4154           push r12
0x00005ea3      55             push rbp
0x00005ea4      4189d4         mov r12d, edx
0x00005ea7      53             push rbx
0x00005ea8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00005eab      4889fb         mov rbx, rdi
0x00005eae      e84dbaffff     call sym.imp.fileno
0x00005eb3      4489e2         mov edx, r12d
0x00005eb6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005eb9      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00005ebb      e880b9ffff     call sym.imp.lseek
0x00005ec0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005ec4      740c           je 0x5ed2
0x00005ec6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005ec9      488983900000.  mov qword [rbx + 0x90], rax
0x00005ed0      31c0           xor eax, eax
0x00005ed2      5b             pop rbx                                 ; /sys_errlist.h:19
0x00005ed3      5d             pop rbp
0x00005ed4      415c           pop r12
0x00005ed6      c3             ret
0x00005ed7      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00005ee0      4157           push r15
0x00005ee2      4156           push r14
0x00005ee4      4989d7         mov r15, rdx
0x00005ee7      4155           push r13
0x00005ee9      4154           push r12
0x00005eeb      4c8d25be2b20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x208ab0 ; " #"
0x00005ef2      55             push rbp
0x00005ef3      488d2dbe2b20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x208ab8
0x00005efa      53             push rbx
0x00005efb      4189fd         mov r13d, edi
0x00005efe      4989f6         mov r14, rsi
0x00005f01      4c29e5         sub rbp, r12
0x00005f04      4883ec08       sub rsp, 8
0x00005f08      48c1fd03       sar rbp, 3
0x00005f0c      e897b7ffff     call sym._init
0x00005f11      4885ed         test rbp, rbp
0x00005f14      7420           je 0x5f36
0x00005f16      31db           xor ebx, ebx
0x00005f18      0f1f84000000.  nop dword [rax + rax]
0x00005f20      4c89fa         mov rdx, r15
0x00005f23      4c89f6         mov rsi, r14
0x00005f26      4489ef         mov edi, r13d
0x00005f29      41ff14dc       call qword [r12 + rbx*8]
0x00005f2d      4883c301       add rbx, 1
0x00005f31      4839dd         cmp rbp, rbx
0x00005f34      75ea           jne 0x5f20
0x00005f36      4883c408       add rsp, 8
0x00005f3a      5b             pop rbx
0x00005f3b      5d             pop rbp
0x00005f3c      415c           pop r12
0x00005f3e      415d           pop r13
0x00005f40      415e           pop r14
0x00005f42      415f           pop r15
0x00005f44      c3             ret
0x00005f45      90             nop
0x00005f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005f50      f3c3           ret
0x00005f52      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f5c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005f60      488b15a13020.  mov rdx, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00005f67      31f6           xor esi, esi
0x00005f69      e9a2baffff     jmp sym.imp.__cxa_atexit
0x00005f6e      0000           add byte [rax], al
