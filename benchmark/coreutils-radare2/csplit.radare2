;-- section..plt:
;-- .plt:
0x00001ab0      ff35baa22100   push qword [0x0021bd70]                 ; [12] -r-x section size 1216 named .plt
0x00001ab6      ff25bca22100   jmp qword [0x0021bd78]                  ; [0x21bd78:8]=0
0x00001abc      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00001ac0      ff25baa22100   jmp qword [reloc.__ctype_toupper_loc]   ; [0x21bd80:8]=0x1ac6
0x00001ac6      6800000000     push 0
0x00001acb      e9e0ffffff     jmp sym..plt
;-- imp.sigprocmask:
0x00001ad0      ff25b2a22100   jmp qword [reloc.sigprocmask]           ; [0x21bd88:8]=0x1ad6
0x00001ad6      6801000000     push 1
0x00001adb      e9d0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00001ae0      ff25aaa22100   jmp qword [reloc.__snprintf_chk]        ; [0x21bd90:8]=0x1ae6
0x00001ae6      6802000000     push 2
0x00001aeb      e9c0ffffff     jmp sym..plt
;-- imp.raise:
0x00001af0      ff25a2a22100   jmp qword [reloc.raise]                 ; [0x21bd98:8]=0x1af6
0x00001af6      6803000000     push 3
0x00001afb      e9b0ffffff     jmp sym..plt
;-- imp.free:
0x00001b00      ff259aa22100   jmp qword [reloc.free]                  ; [0x21bda0:8]=0x1b06
0x00001b06      6804000000     push 4
0x00001b0b      e9a0ffffff     jmp sym..plt
;-- imp.abort:
0x00001b10      ff2592a22100   jmp qword [reloc.abort]                 ; [0x21bda8:8]=0x1b16
0x00001b16      6805000000     push 5
0x00001b1b      e990ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001b20      ff258aa22100   jmp qword [reloc.__errno_location]      ; [0x21bdb0:8]=0x1b26 ; "&\x1b"
0x00001b26      6806000000     push 6
0x00001b2b      e980ffffff     jmp sym..plt
;-- imp.unlink:
0x00001b30      ff2582a22100   jmp qword [reloc.unlink]                ; [0x21bdb8:8]=0x1b36 ; "6\x1b"
0x00001b36      6807000000     push 7
0x00001b3b      e970ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001b40      ff257aa22100   jmp qword [reloc.strncmp]               ; [0x21bdc0:8]=0x1b46 ; "F\x1b"
0x00001b46      6808000000     push 8
0x00001b4b      e960ffffff     jmp sym..plt
;-- imp._exit:
0x00001b50      ff2572a22100   jmp qword [reloc._exit]                 ; [0x21bdc8:8]=0x1b56 ; "V\x1b"
0x00001b56      6809000000     push 9
0x00001b5b      e950ffffff     jmp sym..plt
;-- imp.strcpy:
0x00001b60      ff256aa22100   jmp qword [reloc.strcpy]                ; [0x21bdd0:8]=0x1b66 ; "f\x1b"
0x00001b66      680a000000     push 0xa
0x00001b6b      e940ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001b70      ff2562a22100   jmp qword [reloc.__fpending]            ; [0x21bdd8:8]=0x1b76 ; "v\x1b"
0x00001b76      680b000000     push 0xb
0x00001b7b      e930ffffff     jmp sym..plt
;-- imp.sigaction:
0x00001b80      ff255aa22100   jmp qword [reloc.sigaction]             ; [0x21bde0:8]=0x1b86
0x00001b86      680c000000     push 0xc
0x00001b8b      e920ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001b90      ff2552a22100   jmp qword [reloc.fcntl]                 ; [0x21bde8:8]=0x1b96
0x00001b96      680d000000     push 0xd
0x00001b9b      e910ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001ba0      ff254aa22100   jmp qword [reloc.textdomain]            ; [0x21bdf0:8]=0x1ba6
0x00001ba6      680e000000     push 0xe
0x00001bab      e900ffffff     jmp sym..plt
;-- imp.__strtol_internal:
0x00001bb0      ff2542a22100   jmp qword [reloc.__strtol_internal]     ; [0x21bdf8:8]=0x1bb6
0x00001bb6      680f000000     push 0xf
0x00001bbb      e9f0feffff     jmp sym..plt
;-- imp.iswctype:
0x00001bc0      ff253aa22100   jmp qword [reloc.iswctype]              ; [0x21be00:8]=0x1bc6
0x00001bc6      6810000000     push 0x10
0x00001bcb      e9e0feffff     jmp sym..plt
;-- imp.fclose:
0x00001bd0      ff2532a22100   jmp qword [reloc.fclose]                ; [0x21be08:8]=0x1bd6
0x00001bd6      6811000000     push 0x11
0x00001bdb      e9d0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001be0      ff252aa22100   jmp qword [reloc.bindtextdomain]        ; [0x21be10:8]=0x1be6
0x00001be6      6812000000     push 0x12
0x00001beb      e9c0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001bf0      ff2522a22100   jmp qword [reloc.dcgettext]             ; [0x21be18:8]=0x1bf6
0x00001bf6      6813000000     push 0x13
0x00001bfb      e9b0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001c00      ff251aa22100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x21be20:8]=0x1c06
0x00001c06      6814000000     push 0x14
0x00001c0b      e9a0feffff     jmp sym..plt
;-- imp.strlen:
0x00001c10      ff2512a22100   jmp qword [reloc.strlen]                ; [0x21be28:8]=0x1c16
0x00001c16      6815000000     push 0x15
0x00001c1b      e990feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001c20      ff250aa22100   jmp qword [reloc.__stack_chk_fail]      ; [0x21be30:8]=0x1c26 ; "&\x1c"
0x00001c26      6816000000     push 0x16
0x00001c2b      e980feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001c30      ff2502a22100   jmp qword [reloc.getopt_long]           ; [0x21be38:8]=0x1c36 ; "6\x1c"
0x00001c36      6817000000     push 0x17
0x00001c3b      e970feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001c40      ff25faa12100   jmp qword [reloc.mbrtowc]               ; [0x21be40:8]=0x1c46 ; "F\x1c"
0x00001c46      6818000000     push 0x18
0x00001c4b      e960feffff     jmp sym..plt
;-- imp.dup2:
0x00001c50      ff25f2a12100   jmp qword [reloc.dup2]                  ; [0x21be48:8]=0x1c56 ; "V\x1c"
0x00001c56      6819000000     push 0x19
0x00001c5b      e950feffff     jmp sym..plt
;-- imp.strchr:
0x00001c60      ff25eaa12100   jmp qword [reloc.strchr]                ; [0x21be50:8]=0x1c66 ; "f\x1c"
0x00001c66      681a000000     push 0x1a
0x00001c6b      e940feffff     jmp sym..plt
;-- imp.strrchr:
0x00001c70      ff25e2a12100   jmp qword [reloc.strrchr]               ; [0x21be58:8]=0x1c76 ; "v\x1c"
0x00001c76      681b000000     push 0x1b
0x00001c7b      e930feffff     jmp sym..plt
;-- imp.lseek:
0x00001c80      ff25daa12100   jmp qword [reloc.lseek]                 ; [0x21be60:8]=0x1c86
0x00001c86      681c000000     push 0x1c
0x00001c8b      e920feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001c90      ff25d2a12100   jmp qword [reloc.__assert_fail]         ; [0x21be68:8]=0x1c96
0x00001c96      681d000000     push 0x1d
0x00001c9b      e910feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001ca0      ff25caa12100   jmp qword [reloc.__strtoul_internal]    ; [0x21be70:8]=0x1ca6
0x00001ca6      681e000000     push 0x1e
0x00001cab      e900feffff     jmp sym..plt
;-- imp.memset:
0x00001cb0      ff25c2a12100   jmp qword [reloc.memset]                ; [0x21be78:8]=0x1cb6
0x00001cb6      681f000000     push 0x1f
0x00001cbb      e9f0fdffff     jmp sym..plt
;-- imp.close:
0x00001cc0      ff25baa12100   jmp qword [reloc.close]                 ; [0x21be80:8]=0x1cc6
0x00001cc6      6820000000     push 0x20                               ; "@"
0x00001ccb      e9e0fdffff     jmp sym..plt
;-- imp.fputc:
0x00001cd0      ff25b2a12100   jmp qword [reloc.fputc]                 ; [0x21be88:8]=0x1cd6
0x00001cd6      6821000000     push 0x21                               ; '!'
0x00001cdb      e9d0fdffff     jmp sym..plt
;-- imp.memchr:
0x00001ce0      ff25aaa12100   jmp qword [reloc.memchr]                ; [0x21be90:8]=0x1ce6
0x00001ce6      6822000000     push 0x22                               ; '"'
0x00001ceb      e9c0fdffff     jmp sym..plt
;-- imp.read:
0x00001cf0      ff25a2a12100   jmp qword [reloc.read]                  ; [0x21be98:8]=0x1cf6
0x00001cf6      6823000000     push 0x23                               ; '#'
0x00001cfb      e9b0fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001d00      ff259aa12100   jmp qword [reloc.memcmp]                ; [0x21bea0:8]=0x1d06
0x00001d06      6824000000     push 0x24                               ; '$'
0x00001d0b      e9a0fdffff     jmp sym..plt
;-- imp.wctype:
0x00001d10      ff2592a12100   jmp qword [reloc.wctype]                ; [0x21bea8:8]=0x1d16
0x00001d16      6825000000     push 0x25                               ; '%'
0x00001d1b      e990fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001d20      ff258aa12100   jmp qword [reloc.fputs_unlocked]        ; [0x21beb0:8]=0x1d26 ; "&\x1d"
0x00001d26      6826000000     push 0x26                               ; '&'
0x00001d2b      e980fdffff     jmp sym..plt
;-- imp.calloc:
0x00001d30      ff2582a12100   jmp qword [reloc.calloc]                ; [0x21beb8:8]=0x1d36 ; "6\x1d"
0x00001d36      6827000000     push 0x27                               ; '''
0x00001d3b      e970fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001d40      ff257aa12100   jmp qword [reloc.strcmp]                ; [0x21bec0:8]=0x1d46 ; "F\x1d"
0x00001d46      6828000000     push 0x28                               ; '('
0x00001d4b      e960fdffff     jmp sym..plt
;-- imp.signal:
0x00001d50      ff2572a12100   jmp qword [reloc.signal]                ; [0x21bec8:8]=0x1d56 ; "V\x1d"
0x00001d56      6829000000     push 0x29                               ; ')'
0x00001d5b      e950fdffff     jmp sym..plt
;-- imp.sigemptyset:
0x00001d60      ff256aa12100   jmp qword [reloc.sigemptyset]           ; [0x21bed0:8]=0x1d66 ; "f\x1d"
0x00001d66      682a000000     push 0x2a                               ; '*'
0x00001d6b      e940fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001d70      ff2562a12100   jmp qword [reloc.memcpy]                ; [0x21bed8:8]=0x1d76 ; "v\x1d"
0x00001d76      682b000000     push 0x2b                               ; '+'
0x00001d7b      e930fdffff     jmp sym..plt
;-- imp.fileno:
0x00001d80      ff255aa12100   jmp qword [reloc.fileno]                ; [0x21bee0:8]=0x1d86
0x00001d86      682c000000     push 0x2c                               ; ','
0x00001d8b      e920fdffff     jmp sym..plt
;-- imp.iswalnum:
0x00001d90      ff2552a12100   jmp qword [reloc.iswalnum]              ; [0x21bee8:8]=0x1d96
0x00001d96      682d000000     push 0x2d                               ; '-'
0x00001d9b      e910fdffff     jmp sym..plt
;-- imp.malloc:
0x00001da0      ff254aa12100   jmp qword [reloc.malloc]                ; [0x21bef0:8]=0x1da6
0x00001da6      682e000000     push 0x2e                               ; '.'
0x00001dab      e900fdffff     jmp sym..plt
;-- imp.wcrtomb:
0x00001db0      ff2542a12100   jmp qword [reloc.wcrtomb]               ; [0x21bef8:8]=0x1db6
0x00001db6      682f000000     push 0x2f                               ; '/'
0x00001dbb      e9f0fcffff     jmp sym..plt
;-- imp.fflush:
0x00001dc0      ff253aa12100   jmp qword [reloc.fflush]                ; [0x21bf00:8]=0x1dc6
0x00001dc6      6830000000     push 0x30                               ; '0'
0x00001dcb      e9e0fcffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001dd0      ff2532a12100   jmp qword [reloc.nl_langinfo]           ; [0x21bf08:8]=0x1dd6
0x00001dd6      6831000000     push 0x31                               ; '1'
0x00001ddb      e9d0fcffff     jmp sym..plt
;-- imp.__freading:
0x00001de0      ff252aa12100   jmp qword [reloc.__freading]            ; [0x21bf10:8]=0x1de6
0x00001de6      6832000000     push 0x32                               ; '2'
0x00001deb      e9c0fcffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001df0      ff2522a12100   jmp qword [reloc.fwrite_unlocked]       ; [0x21bf18:8]=0x1df6
0x00001df6      6833000000     push 0x33                               ; '3'
0x00001dfb      e9b0fcffff     jmp sym..plt
;-- imp.realloc:
0x00001e00      ff251aa12100   jmp qword [reloc.realloc]               ; [0x21bf20:8]=0x1e06
0x00001e06      6834000000     push 0x34                               ; '4'
0x00001e0b      e9a0fcffff     jmp sym..plt
;-- imp.fdopen:
0x00001e10      ff2512a12100   jmp qword [reloc.fdopen]                ; [0x21bf28:8]=0x1e16
0x00001e16      6835000000     push 0x35                               ; '5'
0x00001e1b      e990fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001e20      ff250aa12100   jmp qword [reloc.setlocale]             ; [0x21bf30:8]=0x1e26 ; "&\x1e"
0x00001e26      6836000000     push 0x36                               ; '6'
0x00001e2b      e980fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001e30      ff2502a12100   jmp qword [reloc.__printf_chk]          ; [0x21bf38:8]=0x1e36 ; "6\x1e"
0x00001e36      6837000000     push 0x37                               ; '7'
0x00001e3b      e970fcffff     jmp sym..plt
;-- imp.btowc:
0x00001e40      ff25faa02100   jmp qword [reloc.btowc]                 ; [0x21bf40:8]=0x1e46 ; "F\x1e"
0x00001e46      6838000000     push 0x38                               ; '8'
0x00001e4b      e960fcffff     jmp sym..plt
;-- imp.memmove:
0x00001e50      ff25f2a02100   jmp qword [reloc.memmove]               ; [0x21bf48:8]=0x1e56 ; "V\x1e"
0x00001e56      6839000000     push 0x39                               ; '9'
0x00001e5b      e950fcffff     jmp sym..plt
;-- imp.error:
0x00001e60      ff25eaa02100   jmp qword [reloc.error]                 ; [0x21bf50:8]=0x1e66 ; "f\x1e"
0x00001e66      683a000000     push 0x3a                               ; ':'
0x00001e6b      e940fcffff     jmp sym..plt
;-- imp.open:
0x00001e70      ff25e2a02100   jmp qword [reloc.open]                  ; [0x21bf58:8]=0x1e76 ; "v\x1e"
0x00001e76      683b000000     push 0x3b                               ; ';'
0x00001e7b      e930fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001e80      ff25daa02100   jmp qword [reloc.fseeko]                ; [0x21bf60:8]=0x1e86
0x00001e86      683c000000     push 0x3c                               ; '<'
0x00001e8b      e920fcffff     jmp sym..plt
;-- imp.fopen:
0x00001e90      ff25d2a02100   jmp qword [reloc.fopen]                 ; [0x21bf68:8]=0x1e96
0x00001e96      683d000000     push 0x3d                               ; '='
0x00001e9b      e910fcffff     jmp sym..plt
;-- imp.towlower:
0x00001ea0      ff25caa02100   jmp qword [reloc.towlower]              ; [0x21bf70:8]=0x1ea6
0x00001ea6      683e000000     push 0x3e                               ; '>'
0x00001eab      e900fcffff     jmp sym..plt
;-- imp.towupper:
0x00001eb0      ff25c2a02100   jmp qword [reloc.towupper]              ; [0x21bf78:8]=0x1eb6
0x00001eb6      683f000000     push 0x3f                               ; '?'
0x00001ebb      e9f0fbffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001ec0      ff25baa02100   jmp qword [reloc.__cxa_atexit]          ; [0x21bf80:8]=0x1ec6
0x00001ec6      6840000000     push 0x40                               ; segment.PHDR
0x00001ecb      e9e0fbffff     jmp sym..plt
;-- imp.sigismember:
0x00001ed0      ff25b2a02100   jmp qword [reloc.sigismember]           ; [0x21bf88:8]=0x1ed6
0x00001ed6      6841000000     push 0x41                               ; 'A'
0x00001edb      e9d0fbffff     jmp sym..plt
;-- imp.exit:
0x00001ee0      ff25aaa02100   jmp qword [reloc.exit]                  ; [0x21bf90:8]=0x1ee6
0x00001ee6      6842000000     push 0x42                               ; 'B'
0x00001eeb      e9c0fbffff     jmp sym..plt
;-- imp.fwrite:
0x00001ef0      ff25a2a02100   jmp qword [reloc.fwrite]                ; [0x21bf98:8]=0x1ef6
0x00001ef6      6843000000     push 0x43                               ; 'C'
0x00001efb      e9b0fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001f00      ff259aa02100   jmp qword [reloc.__fprintf_chk]         ; [0x21bfa0:8]=0x1f06
0x00001f06      6844000000     push 0x44                               ; 'D'
0x00001f0b      e9a0fbffff     jmp sym..plt
;-- imp.mbsinit:
0x00001f10      ff2592a02100   jmp qword [reloc.mbsinit]               ; [0x21bfa8:8]=0x1f16
0x00001f16      6845000000     push 0x45                               ; 'E'
0x00001f1b      e990fbffff     jmp sym..plt
;-- imp.iswprint:
0x00001f20      ff258aa02100   jmp qword [reloc.iswprint]              ; [0x21bfb0:8]=0x1f26 ; "&\x1f"
0x00001f26      6846000000     push 0x46                               ; 'F'
0x00001f2b      e980fbffff     jmp sym..plt
;-- imp.sigaddset:
0x00001f30      ff2582a02100   jmp qword [reloc.sigaddset]             ; [0x21bfb8:8]=0x1f36 ; "6\x1f"
0x00001f36      6847000000     push 0x47                               ; 'G'
0x00001f3b      e970fbffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x00001f40      ff257aa02100   jmp qword [reloc.__ctype_tolower_loc]   ; [0x21bfc0:8]=0x1f46 ; "F\x1f"
0x00001f46      6848000000     push 0x48                               ; 'H'
0x00001f4b      e960fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001f50      ff2572a02100   jmp qword [reloc.__ctype_b_loc]         ; [0x21bfc8:8]=0x1f56 ; "V\x1f"
0x00001f56      6849000000     push 0x49                               ; 'I'
0x00001f5b      e950fbffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001f60      ff256aa02100   jmp qword [reloc.__sprintf_chk]         ; [0x21bfd0:8]=0x1f66 ; "f\x1f"
0x00001f66      684a000000     push 0x4a                               ; 'J'
0x00001f6b      e940fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001f70      .qword 0x90660021a08225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001f78      0000           add byte [rax], al
0x00001f7a      0000           add byte [rax], al
0x00001f7c      0000           add byte [rax], al
0x00001f7e      0000           add byte [rax], al
;-- section..text:
;-- .text:
;-- regexp_error:
0x00001f80      4155           push r13                                ; [14] -r-x section size 81918 named .text
0x00001f82      4154           push r12
0x00001f84      55             push rbp
0x00001f85      53             push rbx
0x00001f86      89d5           mov ebp, edx
0x00001f88      4889f3         mov rbx, rsi
0x00001f8b      4883ec28       sub rsp, 0x28
0x00001f8f      48635718       movsxd rdx, dword [rdi + 0x18]
0x00001f93      64488b042528.  mov rax, qword fs:[0x28]
0x00001f9c      4889442418     mov qword [rsp + 0x18], rax
0x00001fa1      31c0           xor eax, eax
0x00001fa3      488b050ea221.  mov rax, qword [obj.global_argv]        ; [0x21c1b8:8]=0
0x00001faa      488b3cd0       mov rdi, qword [rax + rdx*8]
0x00001fae      e8ad420000     call sym.quote
0x00001fb3      488d35334001.  lea rsi, str.s:__s:_match_not_found     ; 0x15fed ; "%s: %s: match not found"
0x00001fba      31ff           xor edi, edi
0x00001fbc      4c8b2575a221.  mov r12, qword [obj.program_name]       ; [0x21c238:8]=0
0x00001fc3      ba05000000     mov edx, 5
0x00001fc8      4989c5         mov r13, rax
0x00001fcb      e820fcffff     call sym.imp.dcgettext
0x00001fd0      488b3d09a121.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00001fd7      4889c2         mov rdx, rax
0x00001fda      4d89e8         mov r8, r13
0x00001fdd      31c0           xor eax, eax
0x00001fdf      4c89e1         mov rcx, r12
0x00001fe2      be01000000     mov esi, 1
0x00001fe7      e814ffffff     call sym.imp.__fprintf_chk
0x00001fec      4885db         test rbx, rbx
0x00001fef      743c           je 0x202d
0x00001ff1      4889e6         mov rsi, rsp
0x00001ff4      4889df         mov rdi, rbx
0x00001ff7      e804250000     call sym.umaxtostr
0x00001ffc      488d35bb3f01.  lea rsi, str.on_repetition__s           ; 0x15fbe ; " on repetition %s\n"
0x00002003      31ff           xor edi, edi
0x00002005      ba05000000     mov edx, 5
0x0000200a      4889c3         mov rbx, rax
0x0000200d      e8defbffff     call sym.imp.dcgettext
0x00002012      488b3dc7a021.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00002019      4889c2         mov rdx, rax
0x0000201c      4889d9         mov rcx, rbx
0x0000201f      be01000000     mov esi, 1
0x00002024      31c0           xor eax, eax
0x00002026      e8d5feffff     call sym.imp.__fprintf_chk
0x0000202b      eb11           jmp 0x203e
0x0000202d      488b35aca021.  mov rsi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00002034      bf0a000000     mov edi, 0xa
0x00002039      e892fcffff     call sym.imp.fputc
0x0000203e      4084ed         test bpl, bpl
0x00002041      750a           jne 0x204d
0x00002043      e8281d0000     call sym.dump_rest_of_file
0x00002048      e833120000     call sym.close_output_file
0x0000204d      e8ce110000     call sym.cleanup_fatal
0x00002052      662e0f1f8400.  nop word cs:[rax + rax]
0x0000205c      0f1f4000       nop dword [rax]
;-- main:
0x00002060      4157           push r15
0x00002062      4156           push r14
0x00002064      4155           push r13
0x00002066      4154           push r12
0x00002068      4989f4         mov r12, rsi
0x0000206b      55             push rbp
0x0000206c      53             push rbx
0x0000206d      488d1d4c9921.  lea rbx, obj.longopts                   ; 0x21b9c0
0x00002074      4881ec080100.  sub rsp, 0x108
0x0000207b      897c2408       mov dword [rsp + 8], edi
0x0000207f      488b3e         mov rdi, qword [rsi]
0x00002082      64488b042528.  mov rax, qword fs:[0x28]
0x0000208b      48898424f800.  mov qword [rsp + 0xf8], rax
0x00002093      31c0           xor eax, eax
0x00002095      e8b6240000     call sym.set_program_name
0x0000209a      488d35405001.  lea rsi, [0x000170e1]
0x000020a1      bf06000000     mov edi, 6
0x000020a6      e875fdffff     call sym.imp.setlocale
0x000020ab      488d35114001.  lea rsi, str.usr_local_share_locale     ; 0x160c3 ; "/usr/local/share/locale"
0x000020b2      488d3de13f01.  lea rdi, [0x0001609a]                   ; "coreutils"
0x000020b9      e822fbffff     call sym.imp.bindtextdomain
0x000020be      488d3dd53f01.  lea rdi, [0x0001609a]                   ; "coreutils"
0x000020c5      e8d6faffff     call sym.imp.textdomain
0x000020ca      488d3d7f2200.  lea rdi, sym.close_stdout               ; 0x4350 ; "USH\x83\xec\bH\x8b=K}!"
0x000020d1      e89a3e0100     call sym.atexit
0x000020d6      488d05fe3f01.  lea rax, [0x000160db]                   ; "xx"
0x000020dd      c605cea02100.  mov byte [obj.remove_files], 1          ; [0x21c1b2:1]=0
0x000020e4      4c8925cda021.  mov qword [obj.global_argv], r12        ; [0x21c1b8:8]=0
0x000020eb      48c705b2a021.  mov qword [obj.controls], 0             ; [0x21c1a8:8]=0
0x000020f6      48c7059fa021.  mov qword [obj.control_used], 0         ; [0x21c1a0:8]=0
0x00002101      c605aba02100.  mov byte [obj.suppress_count], 0        ; [0x21c1b3:1]=0
0x00002108      c605a1a02100.  mov byte [obj.suppress_matched], 0      ; [0x21c1b0:1]=0
0x0000210f      488905d2a021.  mov qword [obj.prefix], rax             ; [0x21c1e8:8]=0
0x00002116      662e0f1f8400.  nop word cs:[rax + rax]
0x00002120      8b7c2408       mov edi, dword [rsp + 8]
0x00002124      488d15de3f01.  lea rdx, str.f:b:kn:sqz                 ; 0x16109 ; "f:b:kn:sqz"
0x0000212b      4531c0         xor r8d, r8d
0x0000212e      4889d9         mov rcx, rbx
0x00002131      4c89e6         mov rsi, r12
0x00002134      e8f7faffff     call sym.imp.getopt_long
0x00002139      83f8ff         cmp eax, 0xffffffff
0x0000213c      0f844f010000   je 0x2291
0x00002142      83f86b         cmp eax, 0x6b
0x00002145      0f84c5000000   je 0x2210
0x0000214b      7e2b           jle 0x2178
0x0000214d      83f873         cmp eax, 0x73
0x00002150      0f84a6000000   je 0x21fc
0x00002156      7e58           jle 0x21b0
0x00002158      83f87a         cmp eax, 0x7a
0x0000215b      0f84bf000000   je 0x2220
0x00002161      83c080         add eax, 0xffffff80
0x00002164      0f85250c0000   jne 0x2d8f
0x0000216a      c6053fa02100.  mov byte [obj.suppress_matched], 1      ; [0x21c1b0:1]=0
0x00002171      ebad           jmp 0x2120
0x00002173      0f1f440000     nop dword [rax + rax]
0x00002178      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x0000217d      0f84160c0000   je 0x2d99
0x00002183      0f8ebf000000   jle 0x2248
0x00002189      83f862         cmp eax, 0x62
0x0000218c      0f849e000000   je 0x2230
0x00002192      83f866         cmp eax, 0x66
0x00002195      0f85f40b0000   jne 0x2d8f
0x0000219b      488b05169f21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21c0b8:8]=0
0x000021a2      4889053fa021.  mov qword [obj.prefix], rax             ; [0x21c1e8:8]=0
0x000021a9      e972ffffff     jmp 0x2120
0x000021ae      6690           nop
0x000021b0      83f86e         cmp eax, 0x6e
0x000021b3      753e           jne 0x21f3
0x000021b5      488d35223f01.  lea rsi, str.invalid_number             ; 0x160de ; "invalid number"
0x000021bc      ba05000000     mov edx, 5
0x000021c1      31ff           xor edi, edi
0x000021c3      e828faffff     call sym.imp.dcgettext
0x000021c8      488b3de99e21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21c0b8:8]=0
0x000021cf      488d0d0b4f01.  lea rcx, [0x000170e1]
0x000021d6      4989c0         mov r8, rax
0x000021d9      4531c9         xor r9d, r9d
0x000021dc      baffffff7f     mov edx, 0x7fffffff
0x000021e1      31f6           xor esi, esi
0x000021e3      e8984a0000     call sym.xdectoimax
0x000021e8      8905229e2100   mov dword [obj.digits], eax             ; [0x21c010:4]=2
0x000021ee      e92dffffff     jmp 0x2120
0x000021f3      83f871         cmp eax, 0x71
0x000021f6      0f85930b0000   jne 0x2d8f
0x000021fc      c605b09f2100.  mov byte [obj.suppress_count], 1        ; [0x21c1b3:1]=0
0x00002203      e918ffffff     jmp 0x2120
0x00002208      0f1f84000000.  nop dword [rax + rax]
0x00002210      c6059b9f2100.  mov byte [obj.remove_files], 0          ; [0x21c1b2:1]=0
0x00002217      e904ffffff     jmp 0x2120
0x0000221c      0f1f4000       nop dword [rax]
0x00002220      c6058a9f2100.  mov byte [obj.elide_empty_files], 1     ; [0x21c1b1:1]=0
0x00002227      e9f4feffff     jmp 0x2120
0x0000222c      0f1f4000       nop dword [rax]
0x00002230      488b05819e21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21c0b8:8]=0
0x00002237      488905a29f21.  mov qword [obj.suffix], rax             ; [0x21c1e0:8]=0
0x0000223e      e9ddfeffff     jmp 0x2120
0x00002243      0f1f440000     nop dword [rax + rax]
0x00002248      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x0000224d      0f853c0b0000   jne 0x2d8f
0x00002253      4883ec08       sub rsp, 8
0x00002257      488b3d4a9e21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x0000225e      488b0db39d21.  mov rcx, qword [obj.Version]            ; [0x21c018:8]=0x16b4c str.8.31 ; "Lk\x01"
0x00002265      6a00           push 0
0x00002267      4c8d0d7f3e01.  lea r9, str.David_MacKenzie             ; 0x160ed ; "David MacKenzie"
0x0000226e      4c8d05883e01.  lea r8, str.Stuart_Kemp                 ; 0x160fd ; "Stuart Kemp"
0x00002275      488d151a3e01.  lea rdx, str.GNU_coreutils              ; 0x16096 ; "GNU coreutils"
0x0000227c      488d35963d01.  lea rsi, str.csplit                     ; 0x16019 ; "csplit"
0x00002283      31c0           xor eax, eax
0x00002285      e826450000     call sym.version_etc
0x0000228a      31ff           xor edi, edi
0x0000228c      e84ffcffff     call sym.imp.exit
0x00002291      8b05199e2100   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21c0b0:4]=0
0x00002297      8b542408       mov edx, dword [rsp + 8]
0x0000229b      29c2           sub edx, eax
0x0000229d      83ea01         sub edx, 1
0x000022a0      0f8ebe0a0000   jle 0x2d64
0x000022a6      488b3d3b9f21.  mov rdi, qword [obj.prefix]             ; [0x21c1e8:8]=0
0x000022ad      31c0           xor eax, eax
0x000022af      4883c9ff       or rcx, 0xffffffffffffffff
0x000022b3      f2ae           repne scasb al, byte [rdi]
0x000022b5      4889c8         mov rax, rcx
0x000022b8      48f7d0         not rax
0x000022bb      488d58ff       lea rbx, [rax - 1]
0x000022bf      488b051a9f21.  mov rax, qword [obj.suffix]             ; [0x21c1e0:8]=0
0x000022c6      4885c0         test rax, rax
0x000022c9      744b           je 0x2316
0x000022cb      4c8b050e9f21.  mov r8, qword [obj.suffix]              ; [0x21c1e0:8]=0
0x000022d2      31ff           xor edi, edi
0x000022d4      410fb608       movzx ecx, byte [r8]
0x000022d8      4c89c2         mov rdx, r8
0x000022db      84c9           test cl, cl
0x000022dd      7516           jne 0x22f5
0x000022df      e957090000     jmp 0x2c3b
0x000022e4      0f1f4000       nop dword [rax]
0x000022e8      89f1           mov ecx, esi
0x000022ea      84c9           test cl, cl
0x000022ec      4889c2         mov rdx, rax
0x000022ef      0f84b6070000   je 0x2aab
0x000022f5      80f925         cmp cl, 0x25
0x000022f8      488d4201       lea rax, [rdx + 1]
0x000022fc      0fb67201       movzx esi, byte [rdx + 1]
0x00002300      75e6           jne 0x22e8
0x00002302      4080fe25       cmp sil, 0x25
0x00002306      0f8536060000   jne 0x2942
0x0000230c      0fb64a02       movzx ecx, byte [rdx + 2]
0x00002310      488d4202       lea rax, [rdx + 2]
0x00002314      ebd4           jmp 0x22ea
0x00002316      8b05f49c2100   mov eax, dword [obj.digits]             ; [0x21c010:4]=2
0x0000231c      83f809         cmp eax, 9
0x0000231f      0f8676080000   jbe 0x2b9b
0x00002325      486315e49c21.  movsxd rdx, dword [obj.digits]          ; [0x21c010:4]=2
0x0000232c      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00002333      4829d8         sub rax, rbx
0x00002336      4839d0         cmp rax, rdx
0x00002339      0f8298070000   jb 0x2ad7
0x0000233f      488d7c1301     lea rdi, [rbx + rdx + 1]
0x00002344      e8c7450000     call sym.xmalloc
0x00002349      8b1d619d2100   mov ebx, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21c0b0:4]=0
0x0000234f      4889059a9e21.  mov qword [obj.filename_space], rax     ; [0x21c1f0:8]=0
0x00002356      488d354d4801.  lea rsi, [0x00016baa]                   ; "-"
0x0000235d      4863c3         movsxd rax, ebx
0x00002360      498b2cc4       mov rbp, qword [r12 + rax*8]
0x00002364      8d5801         lea ebx, [rax + 1]
0x00002367      891d439d2100   mov dword [obj.optind], ebx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21c0b0:4]=0
0x0000236d      4889ef         mov rdi, rbp
0x00002370      e8cbf9ffff     call sym.imp.strcmp
0x00002375      85c0           test eax, eax
0x00002377      0f856c070000   jne 0x2ae9
0x0000237d      3b5c2408       cmp ebx, dword [rsp + 8]
0x00002381      0f8de1010000   jge 0x2568
0x00002387      4863c3         movsxd rax, ebx
0x0000238a      498b2cc4       mov rbp, qword [r12 + rax*8]
0x0000238e      4889442410     mov qword [rsp + 0x10], rax
0x00002393      488d442430     lea rax, [rsp + 0x30]
0x00002398      4889442420     mov qword [rsp + 0x20], rax
0x0000239d      488d442438     lea rax, [rsp + 0x38]
0x000023a2      4889442428     mov qword [rsp + 0x28], rax
0x000023a7      0fb64500       movzx eax, byte [rbp]
0x000023ab      3c25           cmp al, 0x25
0x000023ad      410f94c7       sete r15b
0x000023b1      3c2f           cmp al, 0x2f
0x000023b3      0f84bf000000   je 0x2478
0x000023b9      0f1f80000000.  nop dword [rax]
0x000023c0      4584ff         test r15b, r15b
0x000023c3      0f85af000000   jne 0x2478
0x000023c9      488b442410     mov rax, qword [rsp + 0x10]
0x000023ce      498d2cc4       lea rbp, [r12 + rax*8]
0x000023d2      e879140000     call sym.new_control_record
0x000023d7      488b4c2420     mov rcx, qword [rsp + 0x20]
0x000023dc      488b7d00       mov rdi, qword [rbp]
0x000023e0      4c8d05fa4c01.  lea r8, [0x000170e1]
0x000023e7      31f6           xor esi, esi
0x000023e9      895818         mov dword [rax + 0x18], ebx
0x000023ec      ba0a000000     mov edx, 0xa
0x000023f1      4989c6         mov r14, rax
0x000023f4      e8774f0000     call sym.xstrtoumax
0x000023f9      85c0           test eax, eax
0x000023fb      0f8589080000   jne 0x2c8a
0x00002401      488b442430     mov rax, qword [rsp + 0x30]
0x00002406      4885c0         test rax, rax
0x00002409      0f8450080000   je 0x2c5f
0x0000240f      488b3dfa9c21.  mov rdi, qword [obj.last_val.7392]      ; [0x21c110:8]=0
0x00002416      4839f8         cmp rax, rdi
0x00002419      0f82ff080000   jb 0x2d1e
0x0000241f      0f8475030000   je 0x279a
0x00002425      488905e49c21.  mov qword [obj.last_val.7392], rax      ; [0x21c110:8]=0
0x0000242c      49894608       mov qword [r14 + 8], rax
0x00002430      8d4301         lea eax, [rbx + 1]
0x00002433      39442408       cmp dword [rsp + 8], eax
0x00002437      0f8e2b010000   jle 0x2568
0x0000243d      4c8b6c2410     mov r13, qword [rsp + 0x10]
0x00002442      4983c501       add r13, 1
0x00002446      4b8b2cec       mov rbp, qword [r12 + r13*8]
0x0000244a      4e8d3ced0000.  lea r15, [r13*8]
0x00002452      807d007b       cmp byte [rbp], 0x7b
0x00002456      0f84c6020000   je 0x2722
0x0000245c      4898           cdqe
0x0000245e      4889c3         mov rbx, rax
0x00002461      4889442410     mov qword [rsp + 0x10], rax
0x00002466      0fb64500       movzx eax, byte [rbp]
0x0000246a      3c25           cmp al, 0x25
0x0000246c      410f94c7       sete r15b
0x00002470      3c2f           cmp al, 0x2f
0x00002472      0f8548ffffff   jne 0x23c0
0x00002478      0fbef0         movsx esi, al
0x0000247b      488d4501       lea rax, [rbp + 1]
0x0000247f      4189f6         mov r14d, esi
0x00002482      4889c7         mov rdi, rax
0x00002485      4889442418     mov qword [rsp + 0x18], rax
0x0000248a      e8e1f7ffff     call sym.imp.strrchr
0x0000248f      4885c0         test rax, rax
0x00002492      4989c5         mov r13, rax
0x00002495      0f8459080000   je 0x2cf4
0x0000249b      e8b0130000     call sym.new_control_record
0x000024a0      bf00010000     mov edi, 0x100
0x000024a5      4488781d       mov byte [rax + 0x1d], r15b
0x000024a9      895818         mov dword [rax + 0x18], ebx
0x000024ac      c6401e01       mov byte [rax + 0x1e], 1
0x000024b0      48c740200000.  mov qword [rax + 0x20], 0
0x000024b8      4989c6         mov r14, rax
0x000024bb      48c740280000.  mov qword [rax + 0x28], 0
0x000024c3      e848440000     call sym.xmalloc
0x000024c8      4c89ee         mov rsi, r13
0x000024cb      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000024d0      498d5620       lea rdx, [r14 + 0x20]
0x000024d4      4829ee         sub rsi, rbp
0x000024d7      49894640       mov qword [r14 + 0x40], rax
0x000024db      49c746480000.  mov qword [r14 + 0x48], 0
0x000024e3      4883ee01       sub rsi, 1
0x000024e7      48c7058e9e21.  mov qword [obj.rpl_re_syntax_options], 0x2c6 ; [0x21c380:8]=0
0x000024f2      e8892e0100     call sym.rpl_re_compile_pattern
0x000024f7      4885c0         test rax, rax
0x000024fa      4989c7         mov r15, rax
0x000024fd      0f85ba070000   jne 0x2cbd
0x00002503      41807d0100     cmp byte [r13 + 1], 0
0x00002508      0f8422ffffff   je 0x2430
0x0000250e      498d7d01       lea rdi, [r13 + 1]
0x00002512      4c8d05c84b01.  lea r8, [0x000170e1]
0x00002519      31f6           xor esi, esi
0x0000251b      4c89f1         mov rcx, r14
0x0000251e      ba0a000000     mov edx, 0xa
0x00002523      e888470000     call sym.xstrtoimax
0x00002528      85c0           test eax, eax
0x0000252a      0f8400ffffff   je 0x2430
0x00002530      4889ef         mov rdi, rbp
0x00002533      e8283d0000     call sym.quote
0x00002538      488d35594401.  lea rsi, str.s:_integer_expected_after_delimiter ; 0x16998 ; "%s: integer expected after delimiter"
0x0000253f      4889c3         mov rbx, rax
0x00002542      ba05000000     mov edx, 5
0x00002547      31ff           xor edi, edi
0x00002549      e8a2f6ffff     call sym.imp.dcgettext
0x0000254e      4889d9         mov rcx, rbx
0x00002551      4889c2         mov rdx, rax
0x00002554      31f6           xor esi, esi
0x00002556      bf01000000     mov edi, 1
0x0000255b      31c0           xor eax, eax
0x0000255d      e8fef8ffff     call sym.imp.error
0x00002562      660f1f440000   nop word [rax + rax]
0x00002568      488d1db14501.  lea rbx, obj.sig.7486                   ; 0x16b20
0x0000256f      488d3daa9b21.  lea rdi, obj.caught_signals             ; 0x21c120
0x00002576      4c8d6c2440     lea r13, [rsp + 0x40]
0x0000257b      4c8d3d9e9b21.  lea r15, obj.caught_signals             ; 0x21c120
0x00002582      4c8d732c       lea r14, [rbx + 0x2c]
0x00002586      4889dd         mov rbp, rbx
0x00002589      e8d2f7ffff     call sym.imp.sigemptyset
0x0000258e      448b6500       mov r12d, dword [rbp]
0x00002592      31f6           xor esi, esi
0x00002594      4c89ea         mov rdx, r13
0x00002597      4489e7         mov edi, r12d
0x0000259a      e8e1f5ffff     call sym.imp.sigaction
0x0000259f      48837c244001   cmp qword [rsp + 0x40], 1
0x000025a5      740b           je 0x25b2
0x000025a7      4489e6         mov esi, r12d
0x000025aa      4c89ff         mov rdi, r15
0x000025ad      e87ef9ffff     call sym.imp.sigaddset
0x000025b2      4883c504       add rbp, 4
0x000025b6      4939ee         cmp r14, rbp
0x000025b9      75d3           jne 0x258e
0x000025bb      488d051e1000.  lea rax, sym.interrupt_handler          ; 0x35e0
0x000025c2      488d7c2448     lea rdi, [rsp + 0x48]
0x000025c7      488d35529b21.  lea rsi, obj.caught_signals             ; 0x21c120
0x000025ce      b920000000     mov ecx, 0x20                           ; "@"
0x000025d3      c78424c80000.  mov dword [rsp + 0xc8], 0
0x000025de      4c8d353b9b21.  lea r14, obj.caught_signals             ; 0x21c120
0x000025e5      4889442440     mov qword [rsp + 0x40], rax
0x000025ea      f3a5           rep movsd dword [rdi], dword ptr [rsi]
0x000025ec      eb0b           jmp 0x25f9
0x000025ee      6690           nop
0x000025f0      4883c304       add rbx, 4
0x000025f4      4839dd         cmp rbp, rbx
0x000025f7      7428           je 0x2621
0x000025f9      448b23         mov r12d, dword [rbx]
0x000025fc      4c89f7         mov rdi, r14
0x000025ff      4489e6         mov esi, r12d
0x00002602      e8c9f8ffff     call sym.imp.sigismember
0x00002607      85c0           test eax, eax
0x00002609      74e5           je 0x25f0
0x0000260b      31d2           xor edx, edx
0x0000260d      4c89ee         mov rsi, r13
0x00002610      4489e7         mov edi, r12d
0x00002613      4883c304       add rbx, 4
0x00002617      e864f5ffff     call sym.imp.sigaction
0x0000261c      4839dd         cmp rbp, rbx
0x0000261f      75d8           jne 0x25f9
0x00002621      48c744240800.  mov qword [rsp + 8], 0
0x0000262a      488b442408     mov rax, qword [rsp + 8]
0x0000262f      483b056a9b21.  cmp rax, qword [obj.control_used]       ; [0x21c1a0:8]=0
0x00002636      0f8369050000   jae 0x2ba5
0x0000263c      4c6b7c240860   imul r15, qword [rsp + 8], 0x60
0x00002642      4c8b255f9b21.  mov r12, qword [obj.controls]           ; [0x21c1a8:8]=0
0x00002649      4531f6         xor r14d, r14d
0x0000264c      43807c3c1e00   cmp byte [r12 + r15 + 0x1e], 0
0x00002652      0f84cb010000   je 0x2823
0x00002658      4b8d1c3c       lea rbx, [r12 + r15]
0x0000265c      807b1c00       cmp byte [rbx + 0x1c], 0
0x00002660      750a           jne 0x266c
0x00002662      4c3b7310       cmp r14, qword [rbx + 0x10]
0x00002666      0f879d030000   ja 0x2a09
0x0000266c      440fb6631d     movzx r12d, byte [rbx + 0x1d]
0x00002671      4584e4         test r12b, r12b
0x00002674      0f8427040000   je 0x2aa1
0x0000267a      803d2f9b2100.  cmp byte [obj.suppress_matched], 0      ; [0x21c1b0:1]=0
0x00002681      740e           je 0x2691
0x00002683      48833d759b21.  cmp qword [obj.current_line], 0         ; [0x21c200:8]=0
0x0000268b      0f8574050000   jne 0x2c05
0x00002691      48833b00       cmp qword [rbx], 0
0x00002695      488d6b20       lea rbp, [rbx + 0x20]
0x00002699      794b           jns 0x26e6
0x0000269b      e958020000     jmp 0x28f8
0x000026a0      488b08         mov rcx, qword [rax]
0x000026a3      488b7008       mov rsi, qword [rax + 8]
0x000026a7      4889ef         mov rdi, rbp
0x000026aa      807c0eff0a     cmp byte [rsi + rcx - 1], 0xa
0x000026af      488d51ff       lea rdx, [rcx - 1]
0x000026b3      480f45d1       cmovne rdx, rcx
0x000026b7      4531c9         xor r9d, r9d
0x000026ba      31c9           xor ecx, ecx
0x000026bc      4989d0         mov r8, rdx
0x000026bf      e85c360100     call sym.rpl_re_search
0x000026c4      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000026c8      0f843c070000   je 0x2e0a
0x000026ce      4883f8ff       cmp rax, 0xffffffffffffffff
0x000026d2      0f853c030000   jne 0x2a14
0x000026d8      e8b3150000     call sym.remove_line
0x000026dd      4584e4         test r12b, r12b
0x000026e0      0f84f6030000   je 0x2adc
0x000026e6      488b05139b21.  mov rax, qword [obj.current_line]       ; [0x21c200:8]=0
0x000026ed      488d7801       lea rdi, [rax + 1]
0x000026f1      48893d089b21.  mov qword [obj.current_line], rdi       ; [0x21c200:8]=0
0x000026f8      e8a3160000     call sym.find_line
0x000026fd      4885c0         test rax, rax
0x00002700      759e           jne 0x26a0
0x00002702      807b1c00       cmp byte [rbx + 0x1c], 0
0x00002706      0f8490070000   je 0x2e9c
0x0000270c      4584e4         test r12b, r12b
0x0000270f      750a           jne 0x271b
0x00002711      e85a160000     call sym.dump_rest_of_file
0x00002716      e8650b0000     call sym.close_output_file
0x0000271b      31ff           xor edi, edi
0x0000271d      e8bef7ffff     call sym.imp.exit
0x00002722      31c0           xor eax, eax
0x00002724      4883c9ff       or rcx, 0xffffffffffffffff
0x00002728      4889ef         mov rdi, rbp
0x0000272b      f2ae           repne scasb al, byte [rdi]
0x0000272d      4889c8         mov rax, rcx
0x00002730      48f7d0         not rax
0x00002733      4c8d6c05fe     lea r13, [rbp + rax - 2]
0x00002738      41807d007d     cmp byte [r13], 0x7d
0x0000273d      0f8527070000   jne 0x2e6a
0x00002743      488d7d01       lea rdi, [rbp + 1]
0x00002747      498d45ff       lea rax, [r13 - 1]
0x0000274b      41c6450000     mov byte [r13], 0
0x00002750      4839c7         cmp rdi, rax
0x00002753      747f           je 0x27d4
0x00002755      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000275a      4c8d05804901.  lea r8, [0x000170e1]
0x00002761      31f6           xor esi, esi
0x00002763      ba0a000000     mov edx, 0xa
0x00002768      e8034c0000     call sym.xstrtoumax
0x0000276d      85c0           test eax, eax
0x0000276f      0f85bb060000   jne 0x2e30
0x00002775      488b442438     mov rax, qword [rsp + 0x38]
0x0000277a      49894610       mov qword [r14 + 0x10], rax
0x0000277e      8d4302         lea eax, [rbx + 2]
0x00002781      39442408       cmp dword [rsp + 8], eax
0x00002785      41c645007d     mov byte [r13], 0x7d                    ; '}'
                                                                       ; [0x7d:1]=0
0x0000278a      0f8ed8fdffff   jle 0x2568
0x00002790      4b8b6c3c08     mov rbp, qword [r12 + r15 + 8]
0x00002795      e9c2fcffff     jmp 0x245c
0x0000279a      488b7d00       mov rdi, qword [rbp]
0x0000279e      e8bd3a0000     call sym.quote
0x000027a3      488d35864201.  lea rsi, str.warning:_line_number__s_is_the_same_as_preceding_line_number ; 0x16a30 ; "warning: line number %s is the same as preceding line number"
0x000027aa      4889c5         mov rbp, rax
0x000027ad      ba05000000     mov edx, 5
0x000027b2      31ff           xor edi, edi
0x000027b4      e837f4ffff     call sym.imp.dcgettext
0x000027b9      4889e9         mov rcx, rbp
0x000027bc      4889c2         mov rdx, rax
0x000027bf      31f6           xor esi, esi
0x000027c1      31c0           xor eax, eax
0x000027c3      31ff           xor edi, edi
0x000027c5      e896f6ffff     call sym.imp.error
0x000027ca      488b442430     mov rax, qword [rsp + 0x30]
0x000027cf      e951fcffff     jmp 0x2425
0x000027d4      807d012a       cmp byte [rbp + 1], 0x2a
0x000027d8      0f8577ffffff   jne 0x2755
0x000027de      41c6461c01     mov byte [r14 + 0x1c], 1
0x000027e3      eb99           jmp 0x277e
0x000027e5      e8960a0000     call sym.close_output_file
0x000027ea      803dbf992100.  cmp byte [obj.suppress_matched], 0      ; [0x21c1b0:1]=0
0x000027f1      0f85ba000000   jne 0x28b1
0x000027f7      660f1f840000.  nop word [rax + rax]
0x00002800      488b05f99921.  mov rax, qword [obj.current_line]       ; [0x21c200:8]=0
0x00002807      488d7801       lea rdi, [rax + 1]
0x0000280b      e890150000     call sym.find_line
0x00002810      4885c0         test rax, rax
0x00002813      0f841a010000   je 0x2933
0x00002819      4c8b25889921.  mov r12, qword [obj.controls]           ; [0x21c1a8:8]=0
0x00002820      4d89ee         mov r14, r13
0x00002823      4d01fc         add r12, r15
0x00002826      41807c241c00   cmp byte [r12 + 0x1c], 0
0x0000282c      750b           jne 0x2839
0x0000282e      4d3b742410     cmp r14, qword [r12 + 0x10]
0x00002833      0f87d0010000   ja 0x2a09
0x00002839      498b6c2408     mov rbp, qword [r12 + 8]
0x0000283e      4d8d6e01       lea r13, [r14 + 1]
0x00002842      e8890c0000     call sym.create_output_file
0x00002847      488b05b29921.  mov rax, qword [obj.current_line]       ; [0x21c200:8]=0
0x0000284e      490fafed       imul rbp, r13
0x00002852      488d7801       lea rdi, [rax + 1]
0x00002856      e845150000     call sym.find_line
0x0000285b      4885c0         test rax, rax
0x0000285e      0f84b5000000   je 0x2919
0x00002864      e837160000     call sym.get_first_line_in_buffer
0x00002869      4839c5         cmp rbp, rax
0x0000286c      488d5801       lea rbx, [rax + 1]
0x00002870      0f866fffffff   jbe 0x27e5
0x00002876      4883c501       add rbp, 1
0x0000287a      660f1f440000   nop word [rax + rax]
0x00002880      e80b140000     call sym.remove_line
0x00002885      4885c0         test rax, rax
0x00002888      0f8498000000   je 0x2926
0x0000288e      4889c7         mov rdi, rax
0x00002891      4883c301       add rbx, 1
0x00002895      e8a60b0000     call sym.save_line_to_file
0x0000289a      4839eb         cmp rbx, rbp
0x0000289d      75e1           jne 0x2880
0x0000289f      e8dc090000     call sym.close_output_file
0x000028a4      803d05992100.  cmp byte [obj.suppress_matched], 0      ; [0x21c1b0:1]=0
0x000028ab      0f844fffffff   je 0x2800
0x000028b1      e8da130000     call sym.remove_line
0x000028b6      e945ffffff     jmp 0x2800
0x000028bb      0f1f440000     nop dword [rax + rax]
0x000028c0      488b08         mov rcx, qword [rax]
0x000028c3      488b7008       mov rsi, qword [rax + 8]
0x000028c7      4889ef         mov rdi, rbp
0x000028ca      807c0eff0a     cmp byte [rsi + rcx - 1], 0xa
0x000028cf      488d51ff       lea rdx, [rcx - 1]
0x000028d3      480f45d1       cmovne rdx, rcx
0x000028d7      4531c9         xor r9d, r9d
0x000028da      31c9           xor ecx, ecx
0x000028dc      4989d0         mov r8, rdx
0x000028df      e83c340100     call sym.rpl_re_search
0x000028e4      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000028e8      0f841c050000   je 0x2e0a
0x000028ee      4883f8ff       cmp rax, 0xffffffffffffffff
0x000028f2      0f851c010000   jne 0x2a14
0x000028f8      488b05019921.  mov rax, qword [obj.current_line]       ; [0x21c200:8]=0
0x000028ff      488d7801       lea rdi, [rax + 1]
0x00002903      48893df69821.  mov qword [obj.current_line], rdi       ; [0x21c200:8]=0
0x0000290a      e891140000     call sym.find_line
0x0000290f      4885c0         test rax, rax
0x00002912      75ac           jne 0x28c0
0x00002914      e9e9fdffff     jmp 0x2702
0x00002919      803d90982100.  cmp byte [obj.suppress_matched], 0      ; [0x21c1b0:1]=0
0x00002920      0f843effffff   je 0x2864
0x00002926      498b7c2408     mov rdi, qword [r12 + 8]
0x0000292b      4c89f6         mov rsi, r14
0x0000292e      e8dd0c0000     call sym.handle_line_error.isra.1
0x00002933      803d76982100.  cmp byte [obj.suppress_matched], 0      ; [0x21c1b0:1]=0
0x0000293a      0f85d9feffff   jne 0x2819
0x00002940      ebe4           jmp 0x2926
0x00002942      4084ff         test dil, dil
0x00002945      0f8560050000   jne 0x2eab
0x0000294b      31ff           xor edi, edi
0x0000294d      0fb610         movzx edx, byte [rax]
0x00002950      4889c6         mov rsi, rax
0x00002953      80fa27         cmp dl, 0x27
0x00002956      0f84a5000000   je 0x2a01
0x0000295c      7f0e           jg 0x296c
0x0000295e      80fa23         cmp dl, 0x23
0x00002961      7513           jne 0x2976
0x00002963      83cf02         or edi, 2
0x00002966      4883c001       add rax, 1
0x0000296a      ebe1           jmp 0x294d
0x0000296c      80fa2d         cmp dl, 0x2d
0x0000296f      74f5           je 0x2966
0x00002971      80fa30         cmp dl, 0x30
0x00002974      74f0           je 0x2966
0x00002976      0fbec2         movsx eax, dl
0x00002979      83e830         sub eax, 0x30
0x0000297c      83f809         cmp eax, 9
0x0000297f      7718           ja 0x2999
0x00002981      0f1f80000000.  nop dword [rax]
0x00002988      4883c601       add rsi, 1
0x0000298c      0fbe06         movsx eax, byte [rsi]
0x0000298f      89c2           mov edx, eax
0x00002991      83e830         sub eax, 0x30
0x00002994      83f809         cmp eax, 9
0x00002997      76ef           jbe 0x2988
0x00002999      80fa2e         cmp dl, 0x2e
0x0000299c      7452           je 0x29f0
0x0000299e      440fb62e       movzx r13d, byte [rsi]
0x000029a2      4180fd69       cmp r13b, 0x69
0x000029a6      4c89ed         mov rbp, r13
0x000029a9      0f8449020000   je 0x2bf8
0x000029af      0f8e8f010000   jle 0x2b44
0x000029b5      4180fd75       cmp r13b, 0x75
0x000029b9      0f842f020000   je 0x2bee
0x000029bf      4180fd78       cmp r13b, 0x78
0x000029c3      740a           je 0x29cf
0x000029c5      4180fd6f       cmp r13b, 0x6f
0x000029c9      0f8592010000   jne 0x2b61
0x000029cf      b802000000     mov eax, 2
0x000029d4      f7d0           not eax
0x000029d6      21c7           and edi, eax
0x000029d8      0f85f5030000   jne 0x2dd3
0x000029de      0fb64e01       movzx ecx, byte [rsi + 1]
0x000029e2      488d4601       lea rax, [rsi + 1]
0x000029e6      bf01000000     mov edi, 1
0x000029eb      e9faf8ffff     jmp 0x22ea
0x000029f0      4883c601       add rsi, 1
0x000029f4      0fbe06         movsx eax, byte [rsi]
0x000029f7      83e830         sub eax, 0x30
0x000029fa      83f809         cmp eax, 9
0x000029fd      779f           ja 0x299e
0x000029ff      ebef           jmp 0x29f0
0x00002a01      83cf01         or edi, 1
0x00002a04      e95dffffff     jmp 0x2966
0x00002a09      488344240801   add qword [rsp + 8], 1
0x00002a0f      e916fcffff     jmp 0x262a
0x00002a14      488b05e59721.  mov rax, qword [obj.current_line]       ; [0x21c200:8]=0
0x00002a1b      480303         add rax, qword [rbx]
0x00002a1e      4889c5         mov rbp, rax
0x00002a21      4889442410     mov qword [rsp + 0x10], rax
0x00002a26      8b4318         mov eax, dword [rbx + 0x18]
0x00002a29      89442418       mov dword [rsp + 0x18], eax
0x00002a2d      e86e140000     call sym.get_first_line_in_buffer
0x00002a32      4839c5         cmp rbp, rax
0x00002a35      0f82d5040000   jb 0x2f10
0x00002a3b      4c8b6c2410     mov r13, qword [rsp + 0x10]
0x00002a40      4929c5         sub r13, rax
0x00002a43      7431           je 0x2a76
0x00002a45      31ed           xor ebp, ebp
0x00002a47      eb10           jmp 0x2a59
0x00002a49      0f1f80000000.  nop dword [rax]
0x00002a50      4883c501       add rbp, 1
0x00002a54      4939ed         cmp r13, rbp
0x00002a57      741d           je 0x2a76
0x00002a59      e832120000     call sym.remove_line
0x00002a5e      4885c0         test rax, rax
0x00002a61      0f8468040000   je 0x2ecf
0x00002a67      4584e4         test r12b, r12b
0x00002a6a      75e4           jne 0x2a50
0x00002a6c      4889c7         mov rdi, rax
0x00002a6f      e8cc090000     call sym.save_line_to_file
0x00002a74      ebda           jmp 0x2a50
0x00002a76      4584e4         test r12b, r12b
0x00002a79      0f8490010000   je 0x2c0f
0x00002a7f      48833b00       cmp qword [rbx], 0
0x00002a83      7e0c           jle 0x2a91
0x00002a85      488b442410     mov rax, qword [rsp + 0x10]
0x00002a8a      4889056f9721.  mov qword [obj.current_line], rax       ; [0x21c200:8]=0
0x00002a91      4983c601       add r14, 1
0x00002a95      4c8b250c9721.  mov r12, qword [obj.controls]           ; [0x21c1a8:8]=0
0x00002a9c      e9b7fbffff     jmp 0x2658
0x00002aa1      e82a0a0000     call sym.create_output_file
0x00002aa6      e9cffbffff     jmp 0x267a
0x00002aab      4084ff         test dil, dil
0x00002aae      0f8487010000   je 0x2c3b
0x00002ab4      4183c9ff       or r9d, 0xffffffff                      ; -1
0x00002ab8      4883c9ff       or rcx, 0xffffffffffffffff
0x00002abc      ba01000000     mov edx, 1
0x00002ac1      31f6           xor esi, esi
0x00002ac3      31ff           xor edi, edi
0x00002ac5      31c0           xor eax, eax
0x00002ac7      e814f0ffff     call sym.imp.__snprintf_chk
0x00002acc      85c0           test eax, eax
0x00002ace      4863d0         movsxd rdx, eax
0x00002ad1      0f8968f8ffff   jns 0x233f
0x00002ad7      e8340d0000     call sym.xalloc_die
0x00002adc      4889c7         mov rdi, rax
0x00002adf      e85c090000     call sym.save_line_to_file
0x00002ae4      e9fdfbffff     jmp 0x26e6
0x00002ae9      31c9           xor ecx, ecx
0x00002aeb      31d2           xor edx, edx
0x00002aed      31ff           xor edi, edi
0x00002aef      4889ee         mov rsi, rbp
0x00002af2      e809190000     call sym.fd_reopen
0x00002af7      85c0           test eax, eax
0x00002af9      8b1db1952100   mov ebx, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21c0b0:4]=0
0x00002aff      0f8978f8ffff   jns 0x237d
0x00002b05      4889ee         mov rsi, rbp
0x00002b08      bf04000000     mov edi, 4
0x00002b0d      e87e340000     call sym.quotearg_style
0x00002b12      488d35243601.  lea rsi, str.cannot_open__s_for_reading ; 0x1613d ; "cannot open %s for reading"
0x00002b19      ba05000000     mov edx, 5
0x00002b1e      31ff           xor edi, edi
0x00002b20      4889c5         mov rbp, rax
0x00002b23      e8c8f0ffff     call sym.imp.dcgettext
0x00002b28      4889c3         mov rbx, rax
0x00002b2b      e8f0efffff     call sym.imp.__errno_location
0x00002b30      8b30           mov esi, dword [rax]
0x00002b32      4889e9         mov rcx, rbp
0x00002b35      4889da         mov rdx, rbx
0x00002b38      bf01000000     mov edi, 1
0x00002b3d      31c0           xor eax, eax
0x00002b3f      e81cf3ffff     call sym.imp.error
0x00002b44      4180fd58       cmp r13b, 0x58
0x00002b48      0f8481feffff   je 0x29cf
0x00002b4e      4180fd64       cmp r13b, 0x64
0x00002b52      0f84a0000000   je 0x2bf8
0x00002b58      4584ed         test r13b, r13b
0x00002b5b      0f84c1030000   je 0x2f22
0x00002b61      e8eaf3ffff     call sym.imp.__ctype_b_loc
0x00002b66      488b00         mov rax, qword [rax]
0x00002b69      ba05000000     mov edx, 5
0x00002b6e      f644680140     test byte [rax + rbp*2 + 1], 0x40
0x00002b73      0f84a0000000   je 0x2c19
0x00002b79      488d35303d01.  lea rsi, str.invalid_conversion_specifier_in_suffix:__c ; 0x168b0 ; "invalid conversion specifier in suffix: %c"
0x00002b80      31ff           xor edi, edi
0x00002b82      e869f0ffff     call sym.imp.dcgettext
0x00002b87      4489e9         mov ecx, r13d
0x00002b8a      4889c2         mov rdx, rax
0x00002b8d      31f6           xor esi, esi
0x00002b8f      bf01000000     mov edi, 1
0x00002b94      31c0           xor eax, eax
0x00002b96      e8c5f2ffff     call sym.imp.error
0x00002b9b      ba0a000000     mov edx, 0xa
0x00002ba0      e99af7ffff     jmp 0x233f
0x00002ba5      e826090000     call sym.create_output_file
0x00002baa      e8c1110000     call sym.dump_rest_of_file
0x00002baf      e8cc060000     call sym.close_output_file
0x00002bb4      31ff           xor edi, edi
0x00002bb6      e805f1ffff     call sym.imp.close
0x00002bbb      85c0           test eax, eax
0x00002bbd      0f85e2010000   jne 0x2da5
0x00002bc3      31c0           xor eax, eax
0x00002bc5      488b8c24f800.  mov rcx, qword [rsp + 0xf8]
0x00002bcd      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002bd6      0f85c4010000   jne 0x2da0
0x00002bdc      4881c4080100.  add rsp, 0x108
0x00002be3      5b             pop rbx
0x00002be4      5d             pop rbp
0x00002be5      415c           pop r12
0x00002be7      415d           pop r13
0x00002be9      415e           pop r14
0x00002beb      415f           pop r15
0x00002bed      c3             ret
0x00002bee      b801000000     mov eax, 1
0x00002bf3      e9dcfdffff     jmp 0x29d4
0x00002bf8      c60675         mov byte [rsi], 0x75                    ; 'u'
                                                                       ; [0x75:1]=0
0x00002bfb      b801000000     mov eax, 1
0x00002c00      e9cffdffff     jmp 0x29d4
0x00002c05      e886100000     call sym.remove_line
0x00002c0a      e982faffff     jmp 0x2691
0x00002c0f      e86c060000     call sym.close_output_file
0x00002c14      e966feffff     jmp 0x2a7f
0x00002c19      488d35c03c01.  lea rsi, str.invalid_conversion_specifier_in_suffix:____.3o ; 0x168e0 ; "invalid conversion specifier in suffix: \%.3o"
0x00002c20      31ff           xor edi, edi
0x00002c22      e8c9efffff     call sym.imp.dcgettext
0x00002c27      4489e9         mov ecx, r13d
0x00002c2a      4889c2         mov rdx, rax
0x00002c2d      31f6           xor esi, esi
0x00002c2f      bf01000000     mov edi, 1
0x00002c34      31c0           xor eax, eax
0x00002c36      e825f2ffff     call sym.imp.error
0x00002c3b      488d35e63b01.  lea rsi, str.missing____conversion_specification_in_suffix ; 0x16828 ; "missing %% conversion specification in suffix"
0x00002c42      ba05000000     mov edx, 5
0x00002c47      31ff           xor edi, edi
0x00002c49      e8a2efffff     call sym.imp.dcgettext
0x00002c4e      31f6           xor esi, esi
0x00002c50      4889c2         mov rdx, rax
0x00002c53      bf01000000     mov edi, 1
0x00002c58      31c0           xor eax, eax
0x00002c5a      e801f2ffff     call sym.imp.error
0x00002c5f      488b5d00       mov rbx, qword [rbp]
0x00002c63      488d35563d01.  lea rsi, str.s:_line_number_must_be_greater_than_zero ; 0x169c0 ; "%s: line number must be greater than zero"
0x00002c6a      ba05000000     mov edx, 5
0x00002c6f      31ff           xor edi, edi
0x00002c71      e87aefffff     call sym.imp.dcgettext
0x00002c76      4889d9         mov rcx, rbx
0x00002c79      4889c2         mov rdx, rax
0x00002c7c      31f6           xor esi, esi
0x00002c7e      bf01000000     mov edi, 1
0x00002c83      31c0           xor eax, eax
0x00002c85      e8d6f1ffff     call sym.imp.error
0x00002c8a      488b7d00       mov rdi, qword [rbp]
0x00002c8e      e8cd350000     call sym.quote
0x00002c93      488d35be3401.  lea rsi, str.s:_invalid_pattern         ; 0x16158 ; "%s: invalid pattern"
0x00002c9a      4889c3         mov rbx, rax
0x00002c9d      ba05000000     mov edx, 5
0x00002ca2      31ff           xor edi, edi
0x00002ca4      e847efffff     call sym.imp.dcgettext
0x00002ca9      4889d9         mov rcx, rbx
0x00002cac      4889c2         mov rdx, rax
0x00002caf      31f6           xor esi, esi
0x00002cb1      bf01000000     mov edi, 1
0x00002cb6      31c0           xor eax, eax
0x00002cb8      e8a3f1ffff     call sym.imp.error
0x00002cbd      4889ef         mov rdi, rbp
0x00002cc0      e89b350000     call sym.quote
0x00002cc5      488d35a43c01.  lea rsi, str.s:_invalid_regular_expression:__s ; 0x16970 ; "%s: invalid regular expression: %s"
0x00002ccc      4889c3         mov rbx, rax
0x00002ccf      ba05000000     mov edx, 5
0x00002cd4      31ff           xor edi, edi
0x00002cd6      e815efffff     call sym.imp.dcgettext
0x00002cdb      4d89f8         mov r8, r15
0x00002cde      4889c2         mov rdx, rax
0x00002ce1      4889d9         mov rcx, rbx
0x00002ce4      31f6           xor esi, esi
0x00002ce6      31ff           xor edi, edi
0x00002ce8      31c0           xor eax, eax
0x00002cea      e871f1ffff     call sym.imp.error
0x00002cef      e82c050000     call sym.cleanup_fatal
0x00002cf4      488d354d3c01.  lea rsi, str.s:_closing_delimiter___c__missing ; 0x16948 ; "%s: closing delimiter '%c' missing"
0x00002cfb      ba05000000     mov edx, 5
0x00002d00      31ff           xor edi, edi
0x00002d02      e8e9eeffff     call sym.imp.dcgettext
0x00002d07      4589f0         mov r8d, r14d
0x00002d0a      4889c2         mov rdx, rax
0x00002d0d      4889e9         mov rcx, rbp
0x00002d10      31f6           xor esi, esi
0x00002d12      bf01000000     mov edi, 1
0x00002d17      31c0           xor eax, eax
0x00002d19      e842f1ffff     call sym.imp.error
0x00002d1e      488db424e000.  lea rsi, [rsp + 0xe0]
0x00002d26      e8d5170000     call sym.umaxtostr
0x00002d2b      488b7d00       mov rdi, qword [rbp]
0x00002d2f      4989c4         mov r12, rax
0x00002d32      e829350000     call sym.quote
0x00002d37      488d35b23c01.  lea rsi, str.line_number__s_is_smaller_than_preceding_line_number___s ; 0x169f0 ; "line number %s is smaller than preceding line number, %s"
0x00002d3e      4889c3         mov rbx, rax
0x00002d41      ba05000000     mov edx, 5
0x00002d46      31ff           xor edi, edi
0x00002d48      e8a3eeffff     call sym.imp.dcgettext
0x00002d4d      4d89e0         mov r8, r12
0x00002d50      4889c2         mov rdx, rax
0x00002d53      4889d9         mov rcx, rbx
0x00002d56      31f6           xor esi, esi
0x00002d58      bf01000000     mov edi, 1
0x00002d5d      31c0           xor eax, eax
0x00002d5f      e8fcf0ffff     call sym.imp.error
0x00002d64      3b442408       cmp eax, dword [rsp + 8]
0x00002d68      0f8cd8010000   jl 0x2f46
0x00002d6e      488d359f3301.  lea rsi, str.missing_operand            ; 0x16114 ; "missing operand"
0x00002d75      ba05000000     mov edx, 5
0x00002d7a      31ff           xor edi, edi
0x00002d7c      e86feeffff     call sym.imp.dcgettext
0x00002d81      31f6           xor esi, esi
0x00002d83      4889c2         mov rdx, rax
0x00002d86      31ff           xor edi, edi
0x00002d88      31c0           xor eax, eax
0x00002d8a      e8d1f0ffff     call sym.imp.error
0x00002d8f      bf01000000     mov edi, 1
0x00002d94      e877110000     call sym.usage
0x00002d99      31ff           xor edi, edi
0x00002d9b      e870110000     call sym.usage
0x00002da0      e87beeffff     call sym.imp.__stack_chk_fail
0x00002da5      488d35363201.  lea rsi, str.read_error                 ; 0x15fe2 ; "read error"
0x00002dac      ba05000000     mov edx, 5
0x00002db1      31ff           xor edi, edi
0x00002db3      e838eeffff     call sym.imp.dcgettext
0x00002db8      4889c3         mov rbx, rax
0x00002dbb      e860edffff     call sym.imp.__errno_location
0x00002dc0      8b30           mov esi, dword [rax]
0x00002dc2      4889da         mov rdx, rbx
0x00002dc5      31ff           xor edi, edi
0x00002dc7      31c0           xor eax, eax
0x00002dc9      e892f0ffff     call sym.imp.error
0x00002dce      e84d040000     call sym.cleanup_fatal
0x00002dd3      83e702         and edi, 2
0x00002dd6      488d35333b01.  lea rsi, str.invalid_flags_in_conversion_specification:____c_c ; 0x16910 ; "invalid flags in conversion specification: %%%c%c"
0x00002ddd      ba05000000     mov edx, 5
0x00002de2      83ff01         cmp edi, 1
0x00002de5      19db           sbb ebx, ebx
0x00002de7      31ff           xor edi, edi
0x00002de9      83e304         and ebx, 4
0x00002dec      83c323         add ebx, 0x23
0x00002def      e8fcedffff     call sym.imp.dcgettext
0x00002df4      4589e8         mov r8d, r13d
0x00002df7      4889c2         mov rdx, rax
0x00002dfa      89d9           mov ecx, ebx
0x00002dfc      31f6           xor esi, esi
0x00002dfe      bf01000000     mov edi, 1
0x00002e03      31c0           xor eax, eax
0x00002e05      e856f0ffff     call sym.imp.error
0x00002e0a      488d35b73c01.  lea rsi, str.error_in_regular_expression_search ; 0x16ac8 ; "error in regular expression search"
0x00002e11      ba05000000     mov edx, 5
0x00002e16      31ff           xor edi, edi
0x00002e18      e8d3edffff     call sym.imp.dcgettext
0x00002e1d      31f6           xor esi, esi
0x00002e1f      4889c2         mov rdx, rax
0x00002e22      31ff           xor edi, edi
0x00002e24      31c0           xor eax, eax
0x00002e26      e835f0ffff     call sym.imp.error
0x00002e2b      e8f0030000     call sym.cleanup_fatal
0x00002e30      488b05819321.  mov rax, qword [obj.global_argv]        ; [0x21c1b8:8]=0
0x00002e37      4a8b3c38       mov rdi, qword [rax + r15]
0x00002e3b      e820340000     call sym.quote
0x00002e40      488d35513c01.  lea rsi, str.s_:_integer_required_between_____and ; 0x16a98 ; "%s}: integer required between '{' and '}'"
0x00002e47      4889c3         mov rbx, rax
0x00002e4a      ba05000000     mov edx, 5
0x00002e4f      31ff           xor edi, edi
0x00002e51      e89aedffff     call sym.imp.dcgettext
0x00002e56      4889d9         mov rcx, rbx
0x00002e59      4889c2         mov rdx, rax
0x00002e5c      31f6           xor esi, esi
0x00002e5e      bf01000000     mov edi, 1
0x00002e63      31c0           xor eax, eax
0x00002e65      e8f6efffff     call sym.imp.error
0x00002e6a      4889ef         mov rdi, rbp
0x00002e6d      e8ee330000     call sym.quote
0x00002e72      488d35f73b01.  lea rsi, str.s:_____is_required_in_repeat_count ; 0x16a70 ; "%s: '}' is required in repeat count"
0x00002e79      4889c3         mov rbx, rax
0x00002e7c      ba05000000     mov edx, 5
0x00002e81      31ff           xor edi, edi
0x00002e83      e868edffff     call sym.imp.dcgettext
0x00002e88      4889d9         mov rcx, rbx
0x00002e8b      4889c2         mov rdx, rax
0x00002e8e      31f6           xor esi, esi
0x00002e90      bf01000000     mov edi, 1
0x00002e95      31c0           xor eax, eax
0x00002e97      e8c4efffff     call sym.imp.error
0x00002e9c      410fb6d4       movzx edx, r12b
0x00002ea0      4c89f6         mov rsi, r14
0x00002ea3      4889df         mov rdi, rbx
0x00002ea6      e8d5f0ffff     call sym.regexp_error
0x00002eab      488d35a63901.  lea rsi, str.too_many____conversion_specifications_in_suffix ; 0x16858 ; "too many %% conversion specifications in suffix"
0x00002eb2      ba05000000     mov edx, 5
0x00002eb7      31ff           xor edi, edi
0x00002eb9      e832edffff     call sym.imp.dcgettext
0x00002ebe      31f6           xor esi, esi
0x00002ec0      4889c2         mov rdx, rax
0x00002ec3      bf01000000     mov edi, 1
0x00002ec8      31c0           xor eax, eax
0x00002eca      e891efffff     call sym.imp.error
0x00002ecf      4863442418     movsxd rax, dword [rsp + 0x18]
0x00002ed4      488b15dd9221.  mov rdx, qword [obj.global_argv]        ; [0x21c1b8:8]=0
0x00002edb      488b3cc2       mov rdi, qword [rdx + rax*8]
0x00002edf      e87c330000     call sym.quote
0x00002ee4      488d35813201.  lea rsi, str.s:_line_number_out_of_range ; 0x1616c ; "%s: line number out of range"
0x00002eeb      4889c3         mov rbx, rax
0x00002eee      ba05000000     mov edx, 5
0x00002ef3      31ff           xor edi, edi
0x00002ef5      e8f6ecffff     call sym.imp.dcgettext
0x00002efa      4889d9         mov rcx, rbx
0x00002efd      4889c2         mov rdx, rax
0x00002f00      31f6           xor esi, esi
0x00002f02      31ff           xor edi, edi
0x00002f04      31c0           xor eax, eax
0x00002f06      e855efffff     call sym.imp.error
0x00002f0b      e810030000     call sym.cleanup_fatal
0x00002f10      4863542418     movsxd rdx, dword [rsp + 0x18]
0x00002f15      488b059c9221.  mov rax, qword [obj.global_argv]        ; [0x21c1b8:8]=0
0x00002f1c      488b3cd0       mov rdi, qword [rax + rdx*8]
0x00002f20      ebbd           jmp 0x2edf
0x00002f22      488d355f3901.  lea rsi, str.missing_conversion_specifier_in_suffix ; 0x16888 ; "missing conversion specifier in suffix"
0x00002f29      ba05000000     mov edx, 5
0x00002f2e      31ff           xor edi, edi
0x00002f30      e8bbecffff     call sym.imp.dcgettext
0x00002f35      31f6           xor esi, esi
0x00002f37      4889c2         mov rdx, rax
0x00002f3a      bf01000000     mov edi, 1
0x00002f3f      31c0           xor eax, eax
0x00002f41      e81aefffff     call sym.imp.error
0x00002f46      4c63742408     movsxd r14, dword [rsp + 8]
0x00002f4b      4b8b7cf4f8     mov rdi, qword [r12 + r14*8 - 8]
0x00002f50      e80b330000     call sym.quote
0x00002f55      488d35c83101.  lea rsi, str.missing_operand_after__s   ; 0x16124 ; "missing operand after %s"
0x00002f5c      4889c3         mov rbx, rax
0x00002f5f      31ff           xor edi, edi
0x00002f61      ba05000000     mov edx, 5
0x00002f66      e885ecffff     call sym.imp.dcgettext
0x00002f6b      4889d9         mov rcx, rbx
0x00002f6e      4889c2         mov rdx, rax
0x00002f71      31f6           xor esi, esi
0x00002f73      31ff           xor edi, edi
0x00002f75      31c0           xor eax, eax
0x00002f77      e8e4eeffff     call sym.imp.error
0x00002f7c      e90efeffff     jmp 0x2d8f
0x00002f81      662e0f1f8400.  nop word cs:[rax + rax]
0x00002f8b      0f1f440000     nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002f90      31ed           xor ebp, ebp
0x00002f92      4989d1         mov r9, rdx
0x00002f95      5e             pop rsi
0x00002f96      4889e2         mov rdx, rsp
0x00002f99      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002f9d      50             push rax
0x00002f9e      54             push rsp
0x00002f9f      4c8d05ba2f01.  lea r8, sym.__libc_csu_fini             ; 0x15f60
0x00002fa6      488d0d432f01.  lea rcx, sym.__libc_csu_init            ; 0x15ef0 ; "AWAVI\x89\xd7AUATL\x8d%\xaeZ "
0x00002fad      488d3dacf0ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x2060 ; "AWAVAUATI\x89\xf4USH\x8d\x1dL\x99!"
0x00002fb4      ff1526902100   call qword [reloc.__libc_start_main]    ; [0x21bfe0:8]=0
0x00002fba      f4             hlt
0x00002fbb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002fc0      488d3dd99021.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21c0a0
0x00002fc7      55             push rbp
0x00002fc8      488d05d19021.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21c0a0
0x00002fcf      4839f8         cmp rax, rdi
0x00002fd2      4889e5         mov rbp, rsp
0x00002fd5      7419           je 0x2ff0
0x00002fd7      488b05fa8f21.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x21bfd8:8]=0
0x00002fde      4885c0         test rax, rax
0x00002fe1      740d           je 0x2ff0
0x00002fe3      5d             pop rbp
0x00002fe4      ffe0           jmp rax
0x00002fe6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002ff0      5d             pop rbp
0x00002ff1      c3             ret
0x00002ff2      0f1f4000       nop dword [rax]
0x00002ff6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00003000      488d3d999021.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21c0a0
0x00003007      488d35929021.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x21c0a0
0x0000300e      55             push rbp
0x0000300f      4829fe         sub rsi, rdi
0x00003012      4889e5         mov rbp, rsp
0x00003015      48c1fe03       sar rsi, 3
0x00003019      4889f0         mov rax, rsi
0x0000301c      48c1e83f       shr rax, 0x3f
0x00003020      4801c6         add rsi, rax
0x00003023      48d1fe         sar rsi, 1
0x00003026      7418           je 0x3040
0x00003028      488b05c18f21.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x21bff0:8]=0
0x0000302f      4885c0         test rax, rax
0x00003032      740c           je 0x3040
0x00003034      5d             pop rbp
0x00003035      ffe0           jmp rax
0x00003037      660f1f840000.  nop word [rax + rax]
0x00003040      5d             pop rbp
0x00003041      c3             ret
0x00003042      0f1f4000       nop dword [rax]
0x00003046      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00003050      803d91902100.  cmp byte [obj.completed.7697], 0        ; [0x21c0e8:1]=0
0x00003057      752f           jne 0x3088
0x00003059      48833d978f21.  cmp qword [reloc.__cxa_finalize], 0     ; [0x21bff8:8]=0
0x00003061      55             push rbp
0x00003062      4889e5         mov rbp, rsp
0x00003065      740c           je 0x3073
0x00003067      488b3d9a8f21.  mov rdi, qword [obj.__dso_handle]       ; [0x21c008:8]=0x21c008 obj.__dso_handle
0x0000306e      e8fdeeffff     call sym..plt.got
0x00003073      e848ffffff     call sym.deregister_tm_clones
0x00003078      c60569902100.  mov byte [obj.completed.7697], 1        ; [0x21c0e8:1]=0
0x0000307f      5d             pop rbp
0x00003080      c3             ret
0x00003081      0f1f80000000.  nop dword [rax]
0x00003088      f3c3           ret
0x0000308a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00003090      55             push rbp
0x00003091      4889e5         mov rbp, rsp
0x00003094      5d             pop rbp
0x00003095      e966ffffff     jmp sym.register_tm_clones
0x0000309a      660f1f440000   nop word [rax + rax]
;-- make_filename:
0x000030a0      4154           push r12                                ; /src:934
0x000030a2      488b353f9121.  mov rsi, qword [obj.prefix]             ; /src:935 ; [0x21c1e8:8]=0
0x000030a9      55             push rbp                                ; /src:934
0x000030aa      89fd           mov ebp, edi
0x000030ac      488b3d3d9121.  mov rdi, qword [obj.filename_space]     ; /src:935 ; [0x21c1f0:8]=0
0x000030b3      53             push rbx                                ; /src:934
0x000030b4      e8a7eaffff     call sym.imp.strcpy                     ; .//ib:90
0x000030b9      488b05209121.  mov rax, qword [obj.suffix]             ; /src:936 ; [0x21c1e0:8]=0
0x000030c0      4885c0         test rax, rax
0x000030c3      744b           je 0x3110
0x000030c5      4c8b25149121.  mov r12, qword [obj.suffix]             ; /src:937 ; [0x21c1e0:8]=0
0x000030cc      488b1d1d9121.  mov rbx, qword [obj.filename_space]     ; [0x21c1f0:8]=0
0x000030d3      488b3d0e9121.  mov rdi, qword [obj.prefix]             ; [0x21c1e8:8]=0
0x000030da      e831ebffff     call sym.imp.strlen
0x000030df      488d3c03       lea rdi, [rbx + rax]
0x000030e3      4189e8         mov r8d, ebp                            ; ../coreutils-8.31/src/plit.c:33
0x000030e6      4c89e1         mov rcx, r12
0x000030e9      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000030f0      be01000000     mov esi, 1
0x000030f5      31c0           xor eax, eax
0x000030f7      e864eeffff     call sym.imp.__sprintf_chk
0x000030fc      5b             pop rbx                                 ; /src:941
0x000030fd      488b05ec9021.  mov rax, qword [obj.filename_space]     ; /src:940 ; [0x21c1f0:8]=0
0x00003104      5d             pop rbp                                 ; /src:941
0x00003105      415c           pop r12
0x00003107      c3             ret
0x00003108      0f1f84000000.  nop dword [rax + rax]
0x00003110      448b25f98e21.  mov r12d, dword [obj.digits]            ; /src:939 ; [0x21c010:4]=2
0x00003117      488b1dd29021.  mov rbx, qword [obj.filename_space]     ; [0x21c1f0:8]=0
0x0000311e      488b3dc39021.  mov rdi, qword [obj.prefix]             ; [0x21c1e8:8]=0
0x00003125      e8e6eaffff     call sym.imp.strlen
0x0000312a      488d0d732e01.  lea rcx, str.0_u                        ; ../coreutils-8.31/src/plit.c:33 ; 0x15fa4 ; "%0*u"
0x00003131      488d3c03       lea rdi, [rbx + rax]                    ; /src:939
0x00003135      4189e9         mov r9d, ebp                            ; ../coreutils-8.31/src/plit.c:33
0x00003138      4589e0         mov r8d, r12d
0x0000313b      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003142      be01000000     mov esi, 1
0x00003147      31c0           xor eax, eax
0x00003149      e812eeffff     call sym.imp.__sprintf_chk
0x0000314e      5b             pop rbx                                 ; /src:941
0x0000314f      488b059a9021.  mov rax, qword [obj.filename_space]     ; /src:940 ; [0x21c1f0:8]=0
0x00003156      5d             pop rbp                                 ; /src:941
0x00003157      415c           pop r12
0x00003159      c3             ret
0x0000315a      660f1f440000   nop word [rax + rax]
;-- delete_all_files.part.0:
0x00003160      8b0572902100   mov eax, dword [obj.files_created]      ; /src:982 ; [0x21c1d8:4]=0
0x00003166      85c0           test eax, eax
0x00003168      0f849a000000   je 0x3208
0x0000316e      4155           push r13
0x00003170      4154           push r12
0x00003172      4c8d2de83901.  lea r13, [0x00016b61]                   ; /src:991 ; "%s"
0x00003179      55             push rbp                                ; /src:982
0x0000317a      53             push rbx
0x0000317b      4189fc         mov r12d, edi
0x0000317e      31db           xor ebx, ebx                            ; /src:987
0x00003180      4883ec08       sub rsp, 8                              ; /src:982
0x00003184      eb17           jmp 0x319d
0x00003186      662e0f1f8400.  nop word cs:[rax + rax]
0x00003190      8b0542902100   mov eax, dword [obj.files_created]      ; /src:987 ; [0x21c1d8:4]=0
0x00003196      83c301         add ebx, 1
0x00003199      39c3           cmp ebx, eax
0x0000319b      7350           jae 0x31ed
0x0000319d      89df           mov edi, ebx                            ; /src:989
0x0000319f      e8fcfeffff     call sym.make_filename
0x000031a4      4889c7         mov rdi, rax                            ; /src:990
0x000031a7      4889c5         mov rbp, rax                            ; /src:989
0x000031aa      e881e9ffff     call sym.imp.unlink                     ; /src:990
0x000031af      85c0           test eax, eax
0x000031b1      74dd           je 0x3190
0x000031b3      4584e4         test r12b, r12b
0x000031b6      75d8           jne 0x3190
0x000031b8      4889ea         mov rdx, rbp                            ; /src:991
0x000031bb      31ff           xor edi, edi
0x000031bd      be03000000     mov esi, 3
0x000031c2      e8c92e0000     call sym.quotearg_n_style_colon
0x000031c7      4889c5         mov rbp, rax
0x000031ca      83c301         add ebx, 1                              ; /src:987
0x000031cd      e84ee9ffff     call sym.imp.__errno_location           ; /src:991
0x000031d2      8b30           mov esi, dword [rax]
0x000031d4      31ff           xor edi, edi
0x000031d6      31c0           xor eax, eax
0x000031d8      4889e9         mov rcx, rbp
0x000031db      4c89ea         mov rdx, r13
0x000031de      e87decffff     call sym.imp.error
0x000031e3      8b05ef8f2100   mov eax, dword [obj.files_created]      ; /src:987 ; [0x21c1d8:4]=0
0x000031e9      39c3           cmp ebx, eax
0x000031eb      72b0           jb 0x319d
0x000031ed      c705e18f2100.  mov dword [obj.files_created], 0        ; /src:994 ; [0x21c1d8:4]=0
0x000031f7      4883c408       add rsp, 8                              ; /src:995
0x000031fb      5b             pop rbx
0x000031fc      5d             pop rbp
0x000031fd      415c           pop r12
0x000031ff      415d           pop r13
0x00003201      c3             ret
0x00003202      660f1f440000   nop word [rax + rax]
0x00003208      c705c68f2100.  mov dword [obj.files_created], 0        ; /src:994 ; [0x21c1d8:4]=0
0x00003212      c3             ret
0x00003213      0f1f00         nop dword [rax]
0x00003216      662e0f1f8400.  nop word cs:[rax + rax]
;-- cleanup_fatal:
0x00003220      53             push rbx                                ; /src:225
0x00003221      4881ec900000.  sub rsp, 0x90
0x00003228      64488b042528.  mov rax, qword fs:[0x28]
0x00003231      488984248800.  mov qword [rsp + 0x88], rax
0x00003239      31c0           xor eax, eax
0x0000323b      4889e3         mov rbx, rsp                            ; /src:217
0x0000323e      e83d000000     call sym.close_output_file              ; /src:215
0x00003243      488d35d68e21.  lea rsi, obj.caught_signals             ; /src:217 ; 0x21c120
0x0000324a      31ff           xor edi, edi
0x0000324c      4889da         mov rdx, rbx
0x0000324f      e87ce8ffff     call sym.imp.sigprocmask
0x00003254      0fb605578f21.  movzx eax, byte [obj.remove_files]      ; /src:984 ; [0x21c1b2:1]=0
0x0000325b      84c0           test al, al
0x0000325d      7407           je 0x3266
0x0000325f      31ff           xor edi, edi
0x00003261      e8fafeffff     call sym.delete_all_files.part.0
0x00003266      bf02000000     mov edi, 2                              ; /src:219
0x0000326b      31d2           xor edx, edx
0x0000326d      4889de         mov rsi, rbx
0x00003270      e85be8ffff     call sym.imp.sigprocmask
0x00003275      bf01000000     mov edi, 1                              ; /src:227
0x0000327a      e861ecffff     call sym.imp.exit
0x0000327f      90             nop
;-- close_output_file:
0x00003280      4155           push r13                                ; /src:1002
0x00003282      4154           push r12
0x00003284      55             push rbp
0x00003285      53             push rbx
0x00003286      4881eca80000.  sub rsp, 0xa8
0x0000328d      488b3d348f21.  mov rdi, qword [obj.output_stream]      ; /src:1003 ; [0x21c1c8:8]=0
0x00003294      64488b042528.  mov rax, qword fs:[0x28]                ; /src:1002
0x0000329d      488984249800.  mov qword [rsp + 0x98], rax
0x000032a5      31c0           xor eax, eax
0x000032a7      4885ff         test rdi, rdi                           ; /src:1003
0x000032aa      743f           je 0x32eb
0x000032ac      f60720         test byte [rdi], 0x20                   ; /src:1005
0x000032af      0f8551010000   jne 0x3406
0x000032b5      e8d6440000     call sym.rpl_fclose                     ; /src:1011
0x000032ba      85c0           test eax, eax
0x000032bc      0f8504010000   jne 0x33c6
0x000032c2      488b3d078f21.  mov rdi, qword [obj.bytes_written]      ; /src:1017 ; [0x21c1d0:8]=0
0x000032c9      4885ff         test rdi, rdi
0x000032cc      7509           jne 0x32d7
0x000032ce      803ddc8e2100.  cmp byte [obj.elide_empty_files], 0     ; [0x21c1b1:1]=0
0x000032d5      7569           jne 0x3340
0x000032d7      803dd58e2100.  cmp byte [obj.suppress_count], 0        ; /src:1035 ; [0x21c1b3:1]=0
0x000032de      7430           je 0x3310
0x000032e0      48c705dd8e21.  mov qword [obj.output_stream], 0        ; /src:1041 ; [0x21c1c8:8]=0
0x000032eb      488b84249800.  mov rax, qword [rsp + 0x98]             ; /src:1043
0x000032f3      644833042528.  xor rax, qword fs:[0x28]
0x000032fc      0f85bf000000   jne 0x33c1
0x00003302      4881c4a80000.  add rsp, 0xa8
0x00003309      5b             pop rbx
0x0000330a      5d             pop rbp
0x0000330b      415c           pop r12
0x0000330d      415d           pop r13
0x0000330f      c3             ret
0x00003310      488db4248000.  lea rsi, [rsp + 0x80]                   ; /src:1038
0x00003318      e8e3110000     call sym.umaxtostr
0x0000331d      488b3d848d21.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/src/plit.c:97 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x00003324      488d15653d01.  lea rdx, [0x00017090]                   ; "%s\n"
0x0000332b      4889c1         mov rcx, rax
0x0000332e      be01000000     mov esi, 1
0x00003333      31c0           xor eax, eax
0x00003335      e8c6ebffff     call sym.imp.__fprintf_chk
0x0000333a      eba4           jmp 0x32e0
0x0000333c      0f1f4000       nop dword [rax]
0x00003340      488d35d98d21.  lea rsi, obj.caught_signals             ; /src:1024 ; 0x21c120
0x00003347      4889e5         mov rbp, rsp
0x0000334a      4889ea         mov rdx, rbp
0x0000334d      e87ee7ffff     call sym.imp.sigprocmask
0x00003352      4c8b25678e21.  mov r12, qword [obj.output_filename]    ; /src:1025 ; [0x21c1c0:8]=0
0x00003359      4c89e7         mov rdi, r12
0x0000335c      e8cfe7ffff     call sym.imp.unlink
0x00003361      89c3           mov ebx, eax
0x00003363      e8b8e7ffff     call sym.imp.__errno_location           ; /src:1026
0x00003368      448b28         mov r13d, dword [rax]
0x0000336b      8b05678e2100   mov eax, dword [obj.files_created]      ; /src:1027 ; [0x21c1d8:4]=0
0x00003371      31d2           xor edx, edx                            ; /src:1025
0x00003373      85db           test ebx, ebx
0x00003375      4889ee         mov rsi, rbp                            ; /src:1028
0x00003378      bf02000000     mov edi, 2
0x0000337d      0f94c2         sete dl                                 ; /src:1025
0x00003380      29d0           sub eax, edx                            ; /src:1027
0x00003382      31d2           xor edx, edx                            ; /src:1028
0x00003384      89054e8e2100   mov dword [obj.files_created], eax      ; /src:1027 ; [0x21c1d8:4]=0
0x0000338a      e841e7ffff     call sym.imp.sigprocmask                ; /src:1028
0x0000338f      85db           test ebx, ebx                           ; /src:1030
0x00003391      0f8449ffffff   je 0x32e0
0x00003397      4c89e2         mov rdx, r12                            ; /src:1031
0x0000339a      31ff           xor edi, edi
0x0000339c      be03000000     mov esi, 3
0x000033a1      e8ea2c0000     call sym.quotearg_n_style_colon
0x000033a6      488d15b43701.  lea rdx, [0x00016b61]                   ; "%s"
0x000033ad      4889c1         mov rcx, rax
0x000033b0      4489ee         mov esi, r13d
0x000033b3      31ff           xor edi, edi
0x000033b5      31c0           xor eax, eax
0x000033b7      e8a4eaffff     call sym.imp.error
0x000033bc      e91fffffff     jmp 0x32e0                              ; /src:1018
0x000033c1      e85ae8ffff     call sym.imp.__stack_chk_fail           ; /src:1043
0x000033c6      488b15f38d21.  mov rdx, qword [obj.output_filename]    ; /src:1013 ; [0x21c1c0:8]=0
0x000033cd      be03000000     mov esi, 3
0x000033d2      31ff           xor edi, edi
0x000033d4      e8b72c0000     call sym.quotearg_n_style_colon
0x000033d9      4889c3         mov rbx, rax
0x000033dc      e83fe7ffff     call sym.imp.__errno_location
0x000033e1      8b30           mov esi, dword [rax]
0x000033e3      488d15773701.  lea rdx, [0x00016b61]                   ; "%s"
0x000033ea      4889d9         mov rcx, rbx
0x000033ed      31ff           xor edi, edi
0x000033ef      31c0           xor eax, eax
0x000033f1      e86aeaffff     call sym.imp.error
0x000033f6      48c705c78d21.  mov qword [obj.output_stream], 0        ; /src:1014 ; [0x21c1c8:8]=0
0x00003401      e81afeffff     call sym.cleanup_fatal                  ; /src:1015
0x00003406      488b35b38d21.  mov rsi, qword [obj.output_filename]    ; /src:1007 ; [0x21c1c0:8]=0
0x0000340d      bf04000000     mov edi, 4
0x00003412      e8792b0000     call sym.quotearg_style
0x00003417      488d358b2b01.  lea rsi, str.write_error_for__s         ; 0x15fa9 ; "write error for %s"
0x0000341e      4889c3         mov rbx, rax
0x00003421      ba05000000     mov edx, 5
0x00003426      31ff           xor edi, edi
0x00003428      e8c3e7ffff     call sym.imp.dcgettext
0x0000342d      4889d9         mov rcx, rbx
0x00003430      4889c2         mov rdx, rax
0x00003433      31f6           xor esi, esi
0x00003435      ebb6           jmp 0x33ed
0x00003437      660f1f840000.  nop word [rax + rax]
;-- save_line_to_file:
0x00003440      55             push rbp                                ; /src:1050
0x00003441      53             push rbx
0x00003442      4889fb         mov rbx, rdi
0x00003445      be01000000     mov esi, 1                              ; /src:1051
0x0000344a      4883ec08       sub rsp, 8                              ; /src:1050
0x0000344e      488b13         mov rdx, qword [rbx]                    ; /src:1051
0x00003451      488b7f08       mov rdi, qword [rdi + 8]
0x00003455      488b0d6c8d21.  mov rcx, qword [obj.output_stream]      ; [0x21c1c8:8]=0
0x0000345c      e88fe9ffff     call sym.imp.fwrite_unlocked
0x00003461      488b13         mov rdx, qword [rbx]                    ; /src:1052
0x00003464      4839c2         cmp rdx, rax
0x00003467      750e           jne 0x3477
0x00003469      480115608d21.  add qword [obj.bytes_written], rdx      ; /src:1058 ; [0x21c1d0:8]=0
0x00003470      4883c408       add rsp, 8                              ; /src:1059
0x00003474      5b             pop rbx
0x00003475      5d             pop rbp
0x00003476      c3             ret
0x00003477      488b35428d21.  mov rsi, qword [obj.output_filename]    ; /src:1054 ; [0x21c1c0:8]=0
0x0000347e      bf04000000     mov edi, 4
0x00003483      e8082b0000     call sym.quotearg_style
0x00003488      488d351a2b01.  lea rsi, str.write_error_for__s         ; 0x15fa9 ; "write error for %s"
0x0000348f      ba05000000     mov edx, 5
0x00003494      31ff           xor edi, edi
0x00003496      4889c5         mov rbp, rax
0x00003499      e852e7ffff     call sym.imp.dcgettext
0x0000349e      4889c3         mov rbx, rax
0x000034a1      e87ae6ffff     call sym.imp.__errno_location
0x000034a6      8b30           mov esi, dword [rax]
0x000034a8      4889e9         mov rcx, rbp
0x000034ab      4889da         mov rdx, rbx
0x000034ae      31ff           xor edi, edi
0x000034b0      31c0           xor eax, eax
0x000034b2      e8a9e9ffff     call sym.imp.error
0x000034b7      48c705068d21.  mov qword [obj.output_stream], 0        ; /src:1055 ; [0x21c1c8:8]=0
0x000034c2      e859fdffff     call sym.cleanup_fatal                  ; /src:1056
0x000034c7      660f1f840000.  nop word [rax + rax]
;-- create_output_file:
0x000034d0      4154           push r12                                ; /src:947
0x000034d2      55             push rbp
0x000034d3      bd4b000000     mov ebp, 0x4b                           ; 'K'
0x000034d8      53             push rbx
0x000034d9      4881ec900000.  sub rsp, 0x90
0x000034e0      64488b042528.  mov rax, qword fs:[0x28]
0x000034e9      488984248800.  mov qword [rsp + 0x88], rax
0x000034f1      31c0           xor eax, eax
0x000034f3      8b3ddf8c2100   mov edi, dword [obj.files_created]      ; /src:951 ; [0x21c1d8:4]=0
0x000034f9      e8a2fbffff     call sym.make_filename
0x000034fe      4889c3         mov rbx, rax
0x00003501      488905b88c21.  mov qword [obj.output_filename], rax    ; [0x21c1c0:8]=0
0x00003508      8b05ca8c2100   mov eax, dword [obj.files_created]      ; /src:953 ; [0x21c1d8:4]=0
0x0000350e      83f8ff         cmp eax, 0xffffffff
0x00003511      752d           jne 0x3540
0x00003513      4889da         mov rdx, rbx                            ; /src:972
0x00003516      be03000000     mov esi, 3
0x0000351b      31ff           xor edi, edi
0x0000351d      e86e2b0000     call sym.quotearg_n_style_colon
0x00003522      488d15383601.  lea rdx, [0x00016b61]                   ; "%s"
0x00003529      4889c1         mov rcx, rax
0x0000352c      89ee           mov esi, ebp
0x0000352e      31ff           xor edi, edi
0x00003530      31c0           xor eax, eax
0x00003532      e829e9ffff     call sym.imp.error
0x00003537      e8e4fcffff     call sym.cleanup_fatal                  ; /src:973
0x0000353c      0f1f4000       nop dword [rax]
0x00003540      4989e4         mov r12, rsp                            ; /src:962
0x00003543      488d35d68b21.  lea rsi, obj.caught_signals             ; 0x21c120
0x0000354a      31ff           xor edi, edi
0x0000354c      4c89e2         mov rdx, r12
0x0000354f      e87ce5ffff     call sym.imp.sigprocmask
0x00003554      488d35612a01.  lea rsi, [0x00015fbc]                   ; /src:963 ; "w"
0x0000355b      4889df         mov rdi, rbx
0x0000355e      e8fd0e0000     call sym.fopen_safer
0x00003563      4889c3         mov rbx, rax
0x00003566      4889055b8c21.  mov qword [obj.output_stream], rax      ; [0x21c1c8:8]=0
0x0000356d      e8aee5ffff     call sym.imp.__errno_location           ; /src:965
0x00003572      8b15608c2100   mov edx, dword [obj.files_created]      ; /src:966 ; [0x21c1d8:4]=0
0x00003578      8b28           mov ebp, dword [rax]                    ; /src:965
0x0000357a      31c0           xor eax, eax                            ; /src:964
0x0000357c      4885db         test rbx, rbx
0x0000357f      4c89e6         mov rsi, r12                            ; /src:967
0x00003582      bf02000000     mov edi, 2
0x00003587      0f95c0         setne al                                ; /src:964
0x0000358a      01d0           add eax, edx                            ; /src:966
0x0000358c      31d2           xor edx, edx                            ; /src:967
0x0000358e      8905448c2100   mov dword [obj.files_created], eax      ; /src:966 ; [0x21c1d8:4]=0
0x00003594      e837e5ffff     call sym.imp.sigprocmask                ; /src:967
0x00003599      4885db         test rbx, rbx                           ; /src:970
0x0000359c      742f           je 0x35cd
0x0000359e      488b84248800.  mov rax, qword [rsp + 0x88]             ; /src:976
0x000035a6      644833042528.  xor rax, qword fs:[0x28]
0x000035af      48c705168c21.  mov qword [obj.bytes_written], 0        ; /src:975 ; [0x21c1d0:8]=0
0x000035ba      750c           jne 0x35c8                              ; /src:976
0x000035bc      4881c4900000.  add rsp, 0x90
0x000035c3      5b             pop rbx
0x000035c4      5d             pop rbp
0x000035c5      415c           pop r12
0x000035c7      c3             ret
0x000035c8      e853e6ffff     call sym.imp.__stack_chk_fail
0x000035cd      488b1dec8b21.  mov rbx, qword [obj.output_filename]    ; [0x21c1c0:8]=0
0x000035d4      e93affffff     jmp 0x3513
0x000035d9      0f1f80000000.  nop dword [rax]
;-- interrupt_handler:
0x000035e0      0fb605cb8b21.  movzx eax, byte [obj.remove_files]      ; /src:239 ; [0x21c1b2:1]=0
0x000035e7      53             push rbx
0x000035e8      89fb           mov ebx, edi
0x000035ea      84c0           test al, al                             ; /src:984
0x000035ec      740a           je 0x35f8
0x000035ee      bf01000000     mov edi, 1
0x000035f3      e868fbffff     call sym.delete_all_files.part.0
0x000035f8      89df           mov edi, ebx                            ; /src:241
0x000035fa      31f6           xor esi, esi
0x000035fc      e84fe7ffff     call sym.imp.signal
0x00003601      89df           mov edi, ebx                            ; /src:245
0x00003603      5b             pop rbx                                 ; /src:246
0x00003604      e9e7e4ffff     jmp sym.imp.raise                       ; /src:245
0x00003609      0f1f80000000.  nop dword [rax]
;-- handle_line_error.isra.1:
0x00003610      4155           push r13                                ; /src:714
0x00003612      4154           push r12
0x00003614      55             push rbp
0x00003615      53             push rbx
0x00003616      4889f3         mov rbx, rsi
0x00003619      4883ec28       sub rsp, 0x28
0x0000361d      4889e5         mov rbp, rsp                            ; /src:719
0x00003620      4889ee         mov rsi, rbp
0x00003623      64488b042528.  mov rax, qword fs:[0x28]                ; /src:714
0x0000362c      4889442418     mov qword [rsp + 0x18], rax
0x00003631      31c0           xor eax, eax
0x00003633      e8c80e0000     call sym.umaxtostr                      ; /src:719
0x00003638      4889c7         mov rdi, rax                            ; /src:718
0x0000363b      e8202c0000     call sym.quote
0x00003640      488d35a92b01.  lea rsi, str.s:__s:_line_number_out_of_range ; 0x161f0 ; "%s: %s: line number out of range"
0x00003647      31ff           xor edi, edi
0x00003649      4c8b25e88b21.  mov r12, qword [obj.program_name]       ; [0x21c238:8]=0
0x00003650      ba05000000     mov edx, 5
0x00003655      4989c5         mov r13, rax
0x00003658      e893e5ffff     call sym.imp.dcgettext
0x0000365d      488b3d7c8a21.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/src/plit.c:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00003664      4889c2         mov rdx, rax
0x00003667      4d89e8         mov r8, r13
0x0000366a      31c0           xor eax, eax
0x0000366c      4c89e1         mov rcx, r12
0x0000366f      be01000000     mov esi, 1
0x00003674      e887e8ffff     call sym.imp.__fprintf_chk
0x00003679      4885db         test rbx, rbx                           ; /src:720
0x0000367c      743f           je 0x36bd
0x0000367e      4889df         mov rdi, rbx                            ; /src:721
0x00003681      4889ee         mov rsi, rbp
0x00003684      e8770e0000     call sym.umaxtostr
0x00003689      488d352e2901.  lea rsi, str.on_repetition__s           ; 0x15fbe ; " on repetition %s\n"
0x00003690      ba05000000     mov edx, 5
0x00003695      31ff           xor edi, edi
0x00003697      4889c3         mov rbx, rax
0x0000369a      e851e5ffff     call sym.imp.dcgettext
0x0000369f      488b3d3a8a21.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/src/plit.c:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x000036a6      4889c2         mov rdx, rax
0x000036a9      4889d9         mov rcx, rbx
0x000036ac      be01000000     mov esi, 1
0x000036b1      31c0           xor eax, eax
0x000036b3      e848e8ffff     call sym.imp.__fprintf_chk
0x000036b8      e863fbffff     call sym.cleanup_fatal                  ; /src:725
0x000036bd      488b351c8a21.  mov rsi, qword [obj.stderr]             ; ../coreutils-8.31/src/plit.c:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x000036c4      bf0a000000     mov edi, 0xa
0x000036c9      e802e6ffff     call sym.imp.fputc
0x000036ce      ebe8           jmp 0x36b8
;-- keep_new_line.isra.2:
0x000036d0      4155           push r13                                ; /src:311
0x000036d2      4154           push r12
0x000036d4      4989d5         mov r13, rdx
0x000036d7      55             push rbp
0x000036d8      53             push rbx
0x000036d9      4889f5         mov rbp, rsi
0x000036dc      4989cc         mov r12, rcx
0x000036df      4883ec08       sub rsp, 8
0x000036e3      48833f00       cmp qword [rdi], 0                      ; /src:316
0x000036e7      0f8493000000   je 0x3780
0x000036ed      488b5d00       mov rbx, qword [rbp]                    ; /src:320
0x000036f1      488b03         mov rax, qword [rbx]
0x000036f4      4883f850       cmp rax, 0x50
0x000036f8      7436           je 0x3730
0x000036fa      488b7308       mov rsi, qword [rbx + 8]                ; /src:329
0x000036fe      4883c001       add rax, 1                              ; /src:331
0x00003702      4889f7         mov rdi, rsi
0x00003705      4883c601       add rsi, 1                              ; /src:332
0x00003709      48c1e704       shl rdi, 4
0x0000370d      4801df         add rdi, rbx
0x00003710      4c896f20       mov qword [rdi + 0x20], r13             ; /src:329
0x00003714      4c896718       mov qword [rdi + 0x18], r12             ; /src:330
0x00003718      488903         mov qword [rbx], rax                    ; /src:331
0x0000371b      48897308       mov qword [rbx + 8], rsi                ; /src:332
0x0000371f      4883c408       add rsp, 8                              ; /src:333
0x00003723      5b             pop rbx
0x00003724      5d             pop rbp
0x00003725      415c           pop r12
0x00003727      415d           pop r13
0x00003729      c3             ret
0x0000372a      660f1f440000   nop word [rax + rax]
0x00003730      bf20050000     mov edi, 0x520                          ; /src:299
0x00003735      e8d6310000     call sym.xmalloc
0x0000373a      48c780180500.  mov qword [rax + 0x518], 0              ; /src:301
0x00003745      48c700000000.  mov qword [rax], 0                      ; /src:289
0x0000374c      48c740080000.  mov qword [rax + 8], 0                  ; /src:290
0x00003754      48c740100000.  mov qword [rax + 0x10], 0               ; /src:291
0x0000375c      488983180500.  mov qword [rbx + 0x518], rax            ; /src:322
0x00003763      488b4500       mov rax, qword [rbp]                    ; /src:323
0x00003767      488b98180500.  mov rbx, qword [rax + 0x518]
0x0000376e      48895d00       mov qword [rbp], rbx
0x00003772      488b03         mov rax, qword [rbx]
0x00003775      e980ffffff     jmp 0x36fa
0x0000377a      660f1f440000   nop word [rax + rax]
0x00003780      4889fb         mov rbx, rdi
0x00003783      bf20050000     mov edi, 0x520                          ; /src:299
0x00003788      e883310000     call sym.xmalloc
0x0000378d      48894500       mov qword [rbp], rax                    ; /src:317
0x00003791      48c780180500.  mov qword [rax + 0x518], 0              ; /src:301
0x0000379c      48c700000000.  mov qword [rax], 0                      ; /src:289
0x000037a3      48c740080000.  mov qword [rax + 8], 0                  ; /src:290
0x000037ab      48c740100000.  mov qword [rax + 0x10], 0               ; /src:291
0x000037b3      488903         mov qword [rbx], rax                    ; /src:317
0x000037b6      e932ffffff     jmp 0x36ed
0x000037bb      0f1f440000     nop dword [rax + rax]
;-- free_buffer.isra.4:
0x000037c0      4154           push r12
0x000037c2      55             push rbp                                ; /src:310
0x000037c3      4889fd         mov rbp, rdi
0x000037c6      488b3e         mov rdi, qword [rsi]
0x000037c9      53             push rbx                                ; /src:311
0x000037ca      4989f4         mov r12, rsi
0x000037cd      4885ff         test rdi, rdi
0x000037d0      741a           je 0x37ec
0x000037d2      660f1f440000   nop word [rax + rax]
0x000037d8      488b9f180500.  mov rbx, qword [rdi + 0x518]
0x000037df      e81ce3ffff     call sym.imp.free
0x000037e4      4885db         test rbx, rbx
0x000037e7      4889df         mov rdi, rbx                            ; /src:316
0x000037ea      75ec           jne 0x37d8
0x000037ec      488b7d00       mov rdi, qword [rbp]
0x000037f0      49c704240000.  mov qword [r12], 0
0x000037f8      e803e3ffff     call sym.imp.free
0x000037fd      48c745000000.  mov qword [rbp], 0
0x00003805      5b             pop rbx                                 ; /src:105
0x00003806      5d             pop rbp
0x00003807      415c           pop r12
0x00003809      c3             ret
0x0000380a      660f1f440000   nop word [rax + rax]
;-- xalloc_die:
0x00003810      488d35ba2701.  lea rsi, str.memory_exhausted           ; 0x15fd1 ; "memory exhausted"
0x00003817      4883ec08       sub rsp, 8
0x0000381b      ba05000000     mov edx, 5
0x00003820      31ff           xor edi, edi
0x00003822      e8c9e3ffff     call sym.imp.dcgettext
0x00003827      488d15333301.  lea rdx, [0x00016b61]                   ; "%s"
0x0000382e      4889c1         mov rcx, rax
0x00003831      31f6           xor esi, esi
0x00003833      31ff           xor edi, edi
0x00003835      31c0           xor eax, eax
0x00003837      e824e6ffff     call sym.imp.error
0x0000383c      e8dff9ffff     call sym.cleanup_fatal
0x00003841      0f1f440000     nop dword [rax + rax]
0x00003846      662e0f1f8400.  nop word cs:[rax + rax]
;-- new_control_record:
0x00003850      4883ec08       sub rsp, 8
0x00003854      488b0d458921.  mov rcx, qword [obj.control_used]       ; [0x21c1a0:8]=0
0x0000385b      483b0da68821.  cmp rcx, qword [obj.control_allocated.7351] ; [0x21c108:8]=0
0x00003862      488b3d3f8921.  mov rdi, qword [obj.controls]           ; [0x21c1a8:8]=0
0x00003869      743d           je 0x38a8
0x0000386b      488d4101       lea rax, [rcx + 1]                      ; /src:944
0x0000386f      4889052a8921.  mov qword [obj.control_used], rax       ; /src:945 ; [0x21c1a0:8]=0
0x00003876      488d0449       lea rax, [rcx + rcx*2]
0x0000387a      48c1e005       shl rax, 5
0x0000387e      4801f8         add rax, rdi
0x00003881      c6401e00       mov byte [rax + 0x1e], 0
0x00003885      48c740100000.  mov qword [rax + 0x10], 0
0x0000388d      c6401c00       mov byte [rax + 0x1c], 0
0x00003891      48c740080000.  mov qword [rax + 8], 0
0x00003899      48c700000000.  mov qword [rax], 0
0x000038a0      4883c408       add rsp, 8
0x000038a4      c3             ret
0x000038a5      0f1f00         nop dword [rax]
0x000038a8      4885ff         test rdi, rdi
0x000038ab      744b           je 0x38f8
0x000038ad      48b8e2388ee3.  movabs rax, 0xe38e38e38e38e2
0x000038b7      4839c1         cmp rcx, rax
0x000038ba      7761           ja 0x391d
0x000038bc      4889c8         mov rax, rcx                            ; string_fortified.h:79
0x000038bf      48d1e8         shr rax, 1
0x000038c2      488d4c0101     lea rcx, [rcx + rax + 1]
0x000038c7      488d3449       lea rsi, [rcx + rcx*2]
0x000038cb      48890d368821.  mov qword [obj.control_allocated.7351], rcx ; [0x21c108:8]=0
0x000038d2      48c1e605       shl rsi, 5
0x000038d6      e895300000     call sym.xrealloc
0x000038db      488b0dbe8821.  mov rcx, qword [obj.control_used]       ; [0x21c1a0:8]=0
0x000038e2      4889c7         mov rdi, rax                            ; string_fortified.h:61   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
0x000038e5      488905bc8821.  mov qword [obj.controls], rax           ; [0x21c1a8:8]=0
0x000038ec      e97affffff     jmp 0x386b
0x000038f1      0f1f80000000.  nop dword [rax]
0x000038f8      4885c9         test rcx, rcx
0x000038fb      b801000000     mov eax, 1
0x00003900      ba60000000     mov edx, 0x60                           ; '`'
0x00003905      480f44c8       cmove rcx, rax
0x00003909      4889d0         mov rax, rdx
0x0000390c      31f6           xor esi, esi                            ; string_fortified.h:63 #if !__GNUC_PREREQ (5,0)
0x0000390e      48f7e1         mul rcx
0x00003911      700f           jo 0x3922
0x00003913      4885c0         test rax, rax
0x00003916      7805           js 0x391d
0x00003918      4885f6         test rsi, rsi
0x0000391b      74aa           je 0x38c7
0x0000391d      e8eefeffff     call sym.xalloc_die
0x00003922      be01000000     mov esi, 1
0x00003927      ebea           jmp 0x3913
0x00003929      0f1f80000000.  nop dword [rax]
;-- load_buffer.part.5:
0x00003930      4157           push r15
0x00003932      4156           push r14
0x00003934      b9ff1f0000     mov ecx, 0x1fff
0x00003939      4155           push r13
0x0000393b      4154           push r12
0x0000393d      55             push rbp
0x0000393e      53             push rbx
0x0000393f      4883ec18       sub rsp, 0x18
0x00003943      48813dc28821.  cmp qword [obj.hold_count], 0x1fff      ; /src:288 ; [0x21c210:8]=0
0x0000394e      480f430dba88.  cmovae rcx, qword [obj.hold_count]
0x00003956      4889cd         mov rbp, rcx
0x00003959      4881fdff1f00.  cmp rbp, 0x1fff
0x00003960      0f86c6010000   jbe 0x3b2c
0x00003966      662e0f1f8400.  nop word cs:[rax + rax]
0x00003970      4881ed001800.  sub rbp, 0x1800
0x00003977      4881e500f8ff.  and rbp, 0xfffffffffffff800
0x0000397e      4c8dadff1f00.  lea r13, [rbp + 0x1fff]
0x00003985      4881c5002000.  add rbp, 0x2000                         ; "?\x01"
0x0000398c      bf48000000     mov edi, 0x48                           ; 'H'
0x00003991      e87a2f0000     call sym.xmalloc                        ; /src:170
0x00003996      4889ef         mov rdi, rbp
0x00003999      4889c3         mov rbx, rax                            ; /src:117
0x0000399c      e86f2f0000     call sym.xmalloc
0x000039a1      488b2d688821.  mov rbp, qword [obj.hold_count]         ; [0x21c210:8]=0
0x000039a8      4989c4         mov r12, rax
0x000039ab      48894328       mov qword [rbx + 0x28], rax
0x000039af      488b05528821.  mov rax, qword [obj.last_line_number]   ; [0x21c208:8]=0
0x000039b6      4c892b         mov qword [rbx], r13
0x000039b9      48c743380000.  mov qword [rbx + 0x38], 0
0x000039c1      48c743300000.  mov qword [rbx + 0x30], 0
0x000039c9      48c743200000.  mov qword [rbx + 0x20], 0
0x000039d1      48c743080000.  mov qword [rbx + 8], 0
0x000039d9      4883c001       add rax, 1
0x000039dd      4885ed         test rbp, rbp
0x000039e0      48c743400000.  mov qword [rbx + 0x40], 0
0x000039e8      48894318       mov qword [rbx + 0x18], rax
0x000039ec      48894310       mov qword [rbx + 0x10], rax             ; /src:212
0x000039f0      0f854a010000   jne 0x3b40
0x000039f6      31ff           xor edi, edi
0x000039f8      4c89ea         mov rdx, r13
0x000039fb      4c89e6         mov rsi, r12                            ; /src:214
0x000039fe      e87d280000     call sym.safe_read
0x00003a03      4885c0         test rax, rax                           ; /src:215
0x00003a06      0f856c010000   jne 0x3b78
0x00003a0c      c605e5872100.  mov byte [obj.have_read_eof], 1         ; [0x21c1f8:1]=0
0x00003a13      48034308       add rax, qword [rbx + 8]
0x00003a17      4885c0         test rax, rax
0x00003a1a      4889c5         mov rbp, rax
0x00003a1d      48894308       mov qword [rbx + 8], rax
0x00003a21      0f84ad000000   je 0x3ad4
0x00003a27      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003a2b      488d4338       lea rax, [rbx + 0x38]
0x00003a2f      4531f6         xor r14d, r14d                          ; /src:221
0x00003a32      4889442408     mov qword [rsp + 8], rax
0x00003a37      eb30           jmp 0x3a69
0x00003a39      0f1f80000000.  nop dword [rax]
0x00003a40      4989c5         mov r13, rax
0x00003a43      488b742408     mov rsi, qword [rsp + 8]
0x00003a48      4c89e2         mov rdx, r12
0x00003a4b      4d29e5         sub r13, r12
0x00003a4e      488d7b30       lea rdi, [rbx + 0x30]                   ; /src:223
0x00003a52      4d8d6701       lea r12, [r15 + 1]
0x00003a56      4983c501       add r13, 1
0x00003a5a      4983c601       add r14, 1                              ; /src:230
0x00003a5e      4c89e9         mov rcx, r13                            ; /src:231
0x00003a61      4c29ed         sub rbp, r13
0x00003a64      e867fcffff     call sym.keep_new_line.isra.2
0x00003a69      4889ea         mov rdx, rbp
0x00003a6c      be0a000000     mov esi, 0xa
0x00003a71      4c89e7         mov rdi, r12
0x00003a74      e867e2ffff     call sym.imp.memchr
0x00003a79      4885c0         test rax, rax
0x00003a7c      4989c7         mov r15, rax
0x00003a7f      75bf           jne 0x3a40
0x00003a81      4885ed         test rbp, rbp
0x00003a84      7424           je 0x3aaa
0x00003a86      803d6b872100.  cmp byte [obj.have_read_eof], 0         ; [0x21c1f8:1]=0
0x00003a8d      0f846d010000   je 0x3c00
0x00003a93      488d7338       lea rsi, [rbx + 0x38]
0x00003a97      488d7b30       lea rdi, [rbx + 0x30]
0x00003a9b      4889e9         mov rcx, rbp
0x00003a9e      4c89e2         mov rdx, r12
0x00003aa1      4983c601       add r14, 1
0x00003aa5      e826fcffff     call sym.keep_new_line.isra.2
0x00003aaa      488b05578721.  mov rax, qword [obj.last_line_number]   ; [0x21c208:8]=0
0x00003ab1      4c897320       mov qword [rbx + 0x20], r14
0x00003ab5      488d5001       lea rdx, [rax + 1]
0x00003ab9      4c01f0         add rax, r14
0x00003abc      4d85f6         test r14, r14
0x00003abf      488905428721.  mov qword [obj.last_line_number], rax   ; [0x21c208:8]=0
0x00003ac6      48895310       mov qword [rbx + 0x10], rdx
0x00003aca      48895318       mov qword [rbx + 0x18], rdx
0x00003ace      0f85dc000000   jne 0x3bb0
0x00003ad4      803d1d872100.  cmp byte [obj.have_read_eof], 0         ; [0x21c1f8:1]=0
0x00003adb      0f854f010000   jne 0x3c30
0x00003ae1      488b0b         mov rcx, qword [rbx]
0x00003ae4      b802000000     mov eax, 2
0x00003ae9      31f6           xor esi, esi                            ; .//ib:-119
0x00003aeb      48f7e1         mul rcx
0x00003aee      0f8087010000   jo 0x3c7b
0x00003af4      4885c0         test rax, rax
0x00003af7      0f8888010000   js 0x3c85
0x00003afd      4885f6         test rsi, rsi
0x00003b00      0f857f010000   jne 0x3c85
0x00003b06      488d7330       lea rsi, [rbx + 0x30]
0x00003b0a      488d7b28       lea rdi, [rbx + 0x28]
0x00003b0e      488d2c09       lea rbp, [rcx + rcx]
0x00003b12      e8a9fcffff     call sym.free_buffer.isra.4
0x00003b17      4889df         mov rdi, rbx
0x00003b1a      e8e1dfffff     call sym.imp.free
0x00003b1f      4881fdff1f00.  cmp rbp, 0x1fff
0x00003b26      0f8744feffff   ja 0x3970
0x00003b2c      bd00200000     mov ebp, 0x2000                         ; "?\x01"
0x00003b31      41bdff1f0000   mov r13d, 0x1fff
0x00003b37      e950feffff     jmp 0x398c
0x00003b3c      0f1f4000       nop dword [rax]
0x00003b40      488b35d18621.  mov rsi, qword [obj.hold_area]          ; [0x21c218:8]=0
0x00003b47      4889ea         mov rdx, rbp
0x00003b4a      4c89e7         mov rdi, r12
0x00003b4d      e81ee2ffff     call sym.imp.memcpy
0x00003b52      4929ed         sub r13, rbp
0x00003b55      48896b08       mov qword [rbx + 8], rbp
0x00003b59      48c705ac8621.  mov qword [obj.hold_count], 0           ; /src:303 ; [0x21c210:8]=0
0x00003b64      0f84c1feffff   je 0x3a2b
0x00003b6a      4901ec         add r12, rbp
0x00003b6d      e984feffff     jmp 0x39f6
0x00003b72      660f1f440000   nop word [rax + rax]
0x00003b78      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003b7c      0f8591feffff   jne 0x3a13
0x00003b82      488d35592401.  lea rsi, str.read_error                 ; 0x15fe2 ; "read error"
0x00003b89      ba05000000     mov edx, 5
0x00003b8e      31ff           xor edi, edi
0x00003b90      e85be0ffff     call sym.imp.dcgettext
0x00003b95      4889c3         mov rbx, rax
0x00003b98      e883dfffff     call sym.imp.__errno_location
0x00003b9d      8b30           mov esi, dword [rax]
0x00003b9f      4889da         mov rdx, rbx
0x00003ba2      31ff           xor edi, edi
0x00003ba4      31c0           xor eax, eax
0x00003ba6      e8b5e2ffff     call sym.imp.error
0x00003bab      e870f6ffff     call sym.cleanup_fatal                  ; /src:-107
0x00003bb0      488b4330       mov rax, qword [rbx + 0x30]
0x00003bb4      48c743400000.  mov qword [rbx + 0x40], 0
0x00003bbc      48894338       mov qword [rbx + 0x38], rax
0x00003bc0      488b05598621.  mov rax, qword [obj.head]               ; [0x21c220:8]=0
0x00003bc7      4885c0         test rax, rax
0x00003bca      750f           jne 0x3bdb
0x00003bcc      e98f000000     jmp 0x3c60
0x00003bd1      0f1f80000000.  nop dword [rax]
0x00003bd8      4889d0         mov rax, rdx
0x00003bdb      488b5040       mov rdx, qword [rax + 0x40]
0x00003bdf      4885d2         test rdx, rdx
0x00003be2      75f4           jne 0x3bd8
0x00003be4      48895840       mov qword [rax + 0x40], rbx
0x00003be8      4883c418       add rsp, 0x18
0x00003bec      b801000000     mov eax, 1
0x00003bf1      5b             pop rbx
0x00003bf2      5d             pop rbp
0x00003bf3      415c           pop r12
0x00003bf5      415d           pop r13
0x00003bf7      415e           pop r14
0x00003bf9      415f           pop r15
0x00003bfb      c3             ret
0x00003bfc      0f1f4000       nop dword [rax]
0x00003c00      4c89e7         mov rdi, r12
0x00003c03      4889ee         mov rsi, rbp
0x00003c06      e8052f0000     call sym.xmemdup
0x00003c0b      488b3d068621.  mov rdi, qword [obj.hold_area]          ; [0x21c218:8]=0
0x00003c12      4989c4         mov r12, rax
0x00003c15      e8e6deffff     call sym.imp.free
0x00003c1a      4c8925f78521.  mov qword [obj.hold_area], r12          ; [0x21c218:8]=0
0x00003c21      48892de88521.  mov qword [obj.hold_count], rbp         ; [0x21c210:8]=0
0x00003c28      e97dfeffff     jmp 0x3aaa
0x00003c2d      0f1f00         nop dword [rax]
0x00003c30      488d7330       lea rsi, [rbx + 0x30]
0x00003c34      488d7b28       lea rdi, [rbx + 0x28]
0x00003c38      e883fbffff     call sym.free_buffer.isra.4
0x00003c3d      4889df         mov rdi, rbx
0x00003c40      e8bbdeffff     call sym.imp.free
0x00003c45      4883c418       add rsp, 0x18
0x00003c49      31c0           xor eax, eax                            ; /src:-372
0x00003c4b      5b             pop rbx
0x00003c4c      5d             pop rbp
0x00003c4d      415c           pop r12                                 ; /src:-370
0x00003c4f      415d           pop r13
0x00003c51      415e           pop r14                                 ; /src:-389
0x00003c53      415f           pop r15
0x00003c55      c3             ret
0x00003c56      662e0f1f8400.  nop word cs:[rax + rax]
0x00003c60      48891db98521.  mov qword [obj.head], rbx               ; [0x21c220:8]=0
0x00003c67      4883c418       add rsp, 0x18
0x00003c6b      b801000000     mov eax, 1
0x00003c70      5b             pop rbx
0x00003c71      5d             pop rbp
0x00003c72      415c           pop r12
0x00003c74      415d           pop r13
0x00003c76      415e           pop r14
0x00003c78      415f           pop r15
0x00003c7a      c3             ret
0x00003c7b      be01000000     mov esi, 1
0x00003c80      e96ffeffff     jmp 0x3af4
0x00003c85      e886fbffff     call sym.xalloc_die
0x00003c8a      660f1f440000   nop word [rax + rax]
;-- remove_line:
0x00003c90      53             push rbx
0x00003c91      488b1d688421.  mov rbx, qword [obj.prev_buf.7217]      ; [0x21c100:8]=0
0x00003c98      4885db         test rbx, rbx
0x00003c9b      7420           je 0x3cbd
0x00003c9d      488d7330       lea rsi, [rbx + 0x30]
0x00003ca1      488d7b28       lea rdi, [rbx + 0x28]
0x00003ca5      e816fbffff     call sym.free_buffer.isra.4
0x00003caa      4889df         mov rdi, rbx
0x00003cad      e84edeffff     call sym.imp.free                       ; /src:-368
0x00003cb2      48c705438421.  mov qword [obj.prev_buf.7217], 0        ; [0x21c100:8]=0
0x00003cbd      488b155c8521.  mov rdx, qword [obj.head]               ; [0x21c220:8]=0
0x00003cc4      4885d2         test rdx, rdx
0x00003cc7      7477           je 0x3d40                               ; /src:-517
0x00003cc9      488b4218       mov rax, qword [rdx + 0x18]
0x00003ccd      483b052c8521.  cmp rax, qword [obj.current_line]       ; [0x21c200:8]=0
0x00003cd4      7607           jbe 0x3cdd
0x00003cd6      488905238521.  mov qword [obj.current_line], rax       ; [0x21c200:8]=0
0x00003cdd      488b7238       mov rsi, qword [rdx + 0x38]
0x00003ce1      4883c001       add rax, 1
0x00003ce5      48894218       mov qword [rdx + 0x18], rax
0x00003ce9      488b4610       mov rax, qword [rsi + 0x10]             ; /src:-528
0x00003ced      488d4801       lea rcx, [rax + 1]
0x00003cf1      4889c8         mov rax, rcx
0x00003cf4      48894e10       mov qword [rsi + 0x10], rcx
0x00003cf8      48c1e004       shl rax, 4
0x00003cfc      48390e         cmp qword [rsi], rcx
0x00003cff      488d440608     lea rax, [rsi + rax + 8]
0x00003d04      740a           je 0x3d10
0x00003d06      5b             pop rbx
0x00003d07      c3             ret
0x00003d08      0f1f84000000.  nop dword [rax + rax]
0x00003d10      488b8e180500.  mov rcx, qword [rsi + 0x518]            ; /src:-527
0x00003d17      4885c9         test rcx, rcx
0x00003d1a      48894a38       mov qword [rdx + 0x38], rcx
0x00003d1e      7406           je 0x3d26
0x00003d20      48833900       cmp qword [rcx], 0                      ; /src:-523
0x00003d24      75e0           jne 0x3d06
0x00003d26      488915d38321.  mov qword [obj.prev_buf.7217], rdx      ; [0x21c100:8]=0
0x00003d2d      488b5240       mov rdx, qword [rdx + 0x40]
0x00003d31      5b             pop rbx
0x00003d32      488915e78421.  mov qword [obj.head], rdx               ; [0x21c220:8]=0
0x00003d39      c3             ret
0x00003d3a      660f1f440000   nop word [rax + rax]
0x00003d40      803db1842100.  cmp byte [obj.have_read_eof], 0         ; [0x21c1f8:1]=0
0x00003d47      7517           jne 0x3d60
0x00003d49      e8e2fbffff     call sym.load_buffer.part.5
0x00003d4e      84c0           test al, al
0x00003d50      740e           je 0x3d60
0x00003d52      488b15c78421.  mov rdx, qword [obj.head]               ; [0x21c220:8]=0
0x00003d59      e96bffffff     jmp 0x3cc9                              ; /src:406
0x00003d5e      6690           nop
0x00003d60      31c0           xor eax, eax
0x00003d62      5b             pop rbx
0x00003d63      c3             ret
0x00003d64      6690           nop
0x00003d66      662e0f1f8400.  nop word cs:[rax + rax]
;-- dump_rest_of_file:
0x00003d70      4883ec08       sub rsp, 8
0x00003d74      eb12           jmp 0x3d88
0x00003d76      662e0f1f8400.  nop word cs:[rax + rax]
0x00003d80      4889c7         mov rdi, rax
0x00003d83      e8b8f6ffff     call sym.save_line_to_file
0x00003d88      e803ffffff     call sym.remove_line                    ; /src:408
0x00003d8d      4885c0         test rax, rax
0x00003d90      75ee           jne 0x3d80
0x00003d92      4883c408       add rsp, 8
0x00003d96      c3             ret                                     ; ../coreutils-8.31/src/plit.c:-974
0x00003d97      660f1f840000.  nop word [rax + rax]
;-- find_line:
0x00003da0      55             push rbp
0x00003da1      53             push rbx
0x00003da2      4889fd         mov rbp, rdi
0x00003da5      4883ec08       sub rsp, 8
0x00003da9      488b1d708421.  mov rbx, qword [obj.head]               ; [0x21c220:8]=0
0x00003db0      4885db         test rbx, rbx
0x00003db3      0f84bf000000   je 0x3e78
0x00003db9      488b5310       mov rdx, qword [rbx + 0x10]
0x00003dbd      4839ea         cmp rdx, rbp
0x00003dc0      7615           jbe 0x3dd7
0x00003dc2      e9a1000000     jmp 0x3e68
0x00003dc7      660f1f840000.  nop word [rax + rax]
0x00003dd0      488b5010       mov rdx, qword [rax + 0x10]
0x00003dd4      4889c3         mov rbx, rax
0x00003dd7      488b4320       mov rax, qword [rbx + 0x20]
0x00003ddb      4801d0         add rax, rdx
0x00003dde      4839e8         cmp rax, rbp
0x00003de1      774d           ja 0x3e30
0x00003de3      488b4340       mov rax, qword [rbx + 0x40]
0x00003de7      4885c0         test rax, rax
0x00003dea      75e4           jne 0x3dd0
0x00003dec      803d05842100.  cmp byte [obj.have_read_eof], 0         ; [0x21c1f8:1]=0
0x00003df3      7573           jne 0x3e68
0x00003df5      e836fbffff     call sym.load_buffer.part.5
0x00003dfa      84c0           test al, al
0x00003dfc      746a           je 0x3e68
0x00003dfe      488b4340       mov rax, qword [rbx + 0x40]
0x00003e02      4885c0         test rax, rax
0x00003e05      75c9           jne 0x3dd0
0x00003e07      488d0df22c01.  lea rcx, obj.__PRETTY_FUNCTION__.7224   ; 0x16b00 ; "find_line"
0x00003e0e      488d35032401.  lea rsi, str..._coreutils_8.31_src_csplit.c ; 0x16218 ; "../coreutils-8.31/src/csplit.c"
0x00003e15      488d3de92101.  lea rdi, [0x00016005]                   ; "b"
0x00003e1c      ba6a020000     mov edx, 0x26a
0x00003e21      e86adeffff     call sym.imp.__assert_fail
0x00003e26      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e30      4829d5         sub rbp, rdx
0x00003e33      488b4330       mov rax, qword [rbx + 0x30]
0x00003e37      4883fd4f       cmp rbp, 0x4f
0x00003e3b      7614           jbe 0x3e51
0x00003e3d      0f1f00         nop dword [rax]
0x00003e40      4883ed50       sub rbp, 0x50
0x00003e44      488b80180500.  mov rax, qword [rax + 0x518]
0x00003e4b      4883fd4f       cmp rbp, 0x4f
0x00003e4f      77ef           ja 0x3e40
0x00003e51      48c1e504       shl rbp, 4
0x00003e55      4883c408       add rsp, 8
0x00003e59      488d442818     lea rax, [rax + rbp + 0x18]
0x00003e5e      5b             pop rbx
0x00003e5f      5d             pop rbp
0x00003e60      c3             ret
0x00003e61      0f1f80000000.  nop dword [rax]
0x00003e68      4883c408       add rsp, 8
0x00003e6c      31c0           xor eax, eax
0x00003e6e      5b             pop rbx
0x00003e6f      5d             pop rbp
0x00003e70      c3             ret
0x00003e71      0f1f80000000.  nop dword [rax]
0x00003e78      803d79832100.  cmp byte [obj.have_read_eof], 0         ; [0x21c1f8:1]=0
0x00003e7f      75e7           jne 0x3e68
0x00003e81      e8aafaffff     call sym.load_buffer.part.5
0x00003e86      84c0           test al, al
0x00003e88      74de           je 0x3e68
0x00003e8a      488b1d8f8321.  mov rbx, qword [obj.head]               ; [0x21c220:8]=0
0x00003e91      e923ffffff     jmp 0x3db9
0x00003e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_first_line_in_buffer:
0x00003ea0      488b05798321.  mov rax, qword [obj.head]               ; [0x21c220:8]=0
0x00003ea7      4885c0         test rax, rax
0x00003eaa      740c           je 0x3eb8
0x00003eac      488b4018       mov rax, qword [rax + 0x18]
0x00003eb0      c3             ret
0x00003eb1      0f1f80000000.  nop dword [rax]
0x00003eb8      803d39832100.  cmp byte [obj.have_read_eof], 0         ; [0x21c1f8:1]=0
0x00003ebf      53             push rbx
0x00003ec0      7516           jne 0x3ed8
0x00003ec2      e869faffff     call sym.load_buffer.part.5
0x00003ec7      84c0           test al, al
0x00003ec9      740d           je 0x3ed8
0x00003ecb      488b054e8321.  mov rax, qword [obj.head]               ; [0x21c220:8]=0
0x00003ed2      5b             pop rbx
0x00003ed3      488b4018       mov rax, qword [rax + 0x18]
0x00003ed7      c3             ret
0x00003ed8      488d35282101.  lea rsi, str.input_disappeared          ; 0x16007 ; "input disappeared"
0x00003edf      ba05000000     mov edx, 5
0x00003ee4      31ff           xor edi, edi
0x00003ee6      e805ddffff     call sym.imp.dcgettext
0x00003eeb      4889c3         mov rbx, rax
0x00003eee      e82ddcffff     call sym.imp.__errno_location
0x00003ef3      8b30           mov esi, dword [rax]
0x00003ef5      4889da         mov rdx, rbx
0x00003ef8      bf01000000     mov edi, 1
0x00003efd      31c0           xor eax, eax
0x00003eff      e85cdfffff     call sym.imp.error
0x00003f04      6690           nop
0x00003f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00003f10      4155           push r13
0x00003f12      4154           push r12
0x00003f14      ba05000000     mov edx, 5
0x00003f19      55             push rbp
0x00003f1a      53             push rbx
0x00003f1b      89fd           mov ebp, edi
0x00003f1d      4881ec880000.  sub rsp, 0x88
0x00003f24      488b1d0d8321.  mov rbx, qword [obj.program_name]       ; [0x21c238:8]=0
0x00003f2b      64488b042528.  mov rax, qword fs:[0x28]
0x00003f34      4889442478     mov qword [rsp + 0x78], rax
0x00003f39      31c0           xor eax, eax
0x00003f3b      85ff           test edi, edi
0x00003f3d      742e           je 0x3f6d
0x00003f3f      488d35f22201.  lea rsi, str.Try___s___help__for_more_information. ; 0x16238 ; "Try '%s --help' for more information.\n"
0x00003f46      31ff           xor edi, edi
0x00003f48      e8a3dcffff     call sym.imp.dcgettext
0x00003f4d      488b3d8c8121.  mov rdi, qword [obj.stderr]             ; stdio2.h:-438 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00003f54      4889c2         mov rdx, rax
0x00003f57      4889d9         mov rcx, rbx
0x00003f5a      be01000000     mov esi, 1
0x00003f5f      31c0           xor eax, eax
0x00003f61      e89adfffff     call sym.imp.__fprintf_chk
0x00003f66      89ef           mov edi, ebp
0x00003f68      e873dfffff     call sym.imp.exit
0x00003f6d      488d35ec2201.  lea rsi, str.Usage:__s__OPTION_..._FILE_PATTERN... ; 0x16260 ; "Usage: %s [OPTION]... FILE PATTERN...\n"
0x00003f74      31ff           xor edi, edi
0x00003f76      e875dcffff     call sym.imp.dcgettext
0x00003f7b      4889da         mov rdx, rbx
0x00003f7e      4889c6         mov rsi, rax
0x00003f81      bf01000000     mov edi, 1
0x00003f86      31c0           xor eax, eax
0x00003f88      e8a3deffff     call sym.imp.__printf_chk
0x00003f8d      488b1d148121.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x00003f94      488d35ed2201.  lea rsi, str.Output_pieces_of_FILE_separated_by_PATTERN_s__to_files__xx00____xx01___...___and_output_byte_counts_of_each_piece_to_standard_output. ; 0x16288 ; "Output pieces of FILE separated by PATTERN(s) to files 'xx00', 'xx01', ...,\nand output byte counts of each piece to standard output.\n"
0x00003f9b      ba05000000     mov edx, 5
0x00003fa0      31ff           xor edi, edi
0x00003fa2      e849dcffff     call sym.imp.dcgettext
0x00003fa7      4889de         mov rsi, rbx
0x00003faa      4889c7         mov rdi, rax
0x00003fad      e86eddffff     call sym.imp.fputs_unlocked
0x00003fb2      488b1def8021.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x00003fb9      488d35502301.  lea rsi, str.Read_standard_input_if_FILE_is ; stdio2.h:-424 ; 0x16310 ; "\nRead standard input if FILE is -\n"
0x00003fc0      ba05000000     mov edx, 5
0x00003fc5      31ff           xor edi, edi
0x00003fc7      e824dcffff     call sym.imp.dcgettext
0x00003fcc      4889de         mov rsi, rbx
0x00003fcf      4889c7         mov rdi, rax
0x00003fd2      e849ddffff     call sym.imp.fputs_unlocked
0x00003fd7      488b1dca8021.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x00003fde      488d35532301.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x16338 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00003fe5      ba05000000     mov edx, 5
0x00003fea      31ff           xor edi, edi                            ; stdio2.h:-422
0x00003fec      e8ffdbffff     call sym.imp.dcgettext
0x00003ff1      4889de         mov rsi, rbx
0x00003ff4      4889c7         mov rdi, rax
0x00003ff7      e824ddffff     call sym.imp.fputs_unlocked
0x00003ffc      488b1da58021.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x00004003      488d357e2301.  lea rsi, str.b____suffix_format_FORMAT__use_sprintf_FORMAT_instead_of__02d_____f____prefix_PREFIX________use_PREFIX_instead_of__xx______k____keep_files___________do_not_remove_output_files_on_errors ; 0x16388 ; "  -b, --suffix-format=FORMAT  use sprintf FORMAT instead of %02d\n  -f, --prefix=PREFIX        use PREFIX instead of 'xx'\n  -k, --keep-files           do not remove output files on errors\n"
0x0000400a      ba05000000     mov edx, 5
0x0000400f      31ff           xor edi, edi
0x00004011      e8dadbffff     call sym.imp.dcgettext
0x00004016      4889de         mov rsi, rbx
0x00004019      4889c7         mov rdi, rax
0x0000401c      e8ffdcffff     call sym.imp.fputs_unlocked
0x00004021      488b1d808021.  mov rbx, qword [obj.stdout]             ; stdio2.h:-414 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x00004028      488d35192401.  lea rsi, str.suppress_matched_____suppress_the_lines_matching_PATTERN ; 0x16448 ; "      --suppress-matched     suppress the lines matching PATTERN\n"
0x0000402f      ba05000000     mov edx, 5
0x00004034      31ff           xor edi, edi
0x00004036      e8b5dbffff     call sym.imp.dcgettext
0x0000403b      4889de         mov rsi, rbx
0x0000403e      4889c7         mov rdi, rax
0x00004041      e8dadcffff     call sym.imp.fputs_unlocked
0x00004046      488b1d5b8021.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x0000404d      488d353c2401.  lea rsi, str.n____digits_DIGITS________use_specified_number_of_digits_instead_of_2_____s____quiet____silent______do_not_print_counts_of_output_file_sizes_____z____elide_empty_files____remove_empty_output_files ; 0x16490 ; "  -n, --digits=DIGITS        use specified number of digits instead of 2\n  -s, --quiet, --silent      do not print counts of output file sizes\n  -z, --elide-empty-files    remove empty output files\n"
0x00004054      ba05000000     mov edx, 5
0x00004059      31ff           xor edi, edi
0x0000405b      e890dbffff     call sym.imp.dcgettext
0x00004060      4889de         mov rsi, rbx
0x00004063      4889c7         mov rdi, rax
0x00004066      e8b5dcffff     call sym.imp.fputs_unlocked
0x0000406b      488b1d368021.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x00004072      488d35df2401.  lea rsi, str.help_____display_this_help_and_exit ; stdio2.h:-403 ; 0x16558 ; "      --help     display this help and exit\n"
0x00004079      ba05000000     mov edx, 5
0x0000407e      31ff           xor edi, edi
0x00004080      e86bdbffff     call sym.imp.dcgettext
0x00004085      4889de         mov rsi, rbx
0x00004088      4889c7         mov rdi, rax
0x0000408b      e890dcffff     call sym.imp.fputs_unlocked
0x00004090      488b1d118021.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x00004097      488d35ea2401.  lea rsi, str.version__output_version_information_and_exit ; 0x16588 ; "      --version  output version information and exit\n"
0x0000409e      ba05000000     mov edx, 5
0x000040a3      31ff           xor edi, edi
0x000040a5      e846dbffff     call sym.imp.dcgettext
0x000040aa      4889de         mov rsi, rbx
0x000040ad      4889c7         mov rdi, rax
0x000040b0      e86bdcffff     call sym.imp.fputs_unlocked
0x000040b5      488b1dec7f21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x000040bc      488d35fd2401.  lea rsi, str.Each_PATTERN_may_be:____INTEGER____________copy_up_to_but_not_including_specified_line_number_____REGEXP__OFFSET____copy_up_to_but_not_including_a_matching_line_____REGEXP__OFFSET____skip_to__but_not_including_a_matching_line_____INTEGER___________repeat_the_previous_pattern_specified_number_of_times_______________________repeat_the_previous_pattern_as_many_times_as_possible____A_line_OFFSET_is_a_required_____or_____followed_by_a_positive_integer. ; 0x165c0 ; "\nEach PATTERN may be:\n  INTEGER            copy up to but not including specified line number\n  /REGEXP/[OFFSET]   copy up to but not including a matching line\n  %REGEXP%[OFFSET]   skip to, but not including a matching line\n  {INTEGER}          repeat the previous pattern specified number of times\n  {*}                repeat the previous pattern as many times as possible\n\nA line OFFSET is a required '+' or '-' followed by a positive integer.\n"
0x000040c3      ba05000000     mov edx, 5
0x000040c8      31ff           xor edi, edi
0x000040ca      e821dbffff     call sym.imp.dcgettext
0x000040cf      4889de         mov rsi, rbx
0x000040d2      4889c7         mov rdi, rax
0x000040d5      488d1d3d1f01.  lea rbx, str.csplit                     ; 0x16019 ; "csplit"
0x000040dc      e83fdcffff     call sym.imp.fputs_unlocked
0x000040e1      488d05381f01.  lea rax, [0x00016020]                   ; "["
0x000040e8      488d0d721f01.  lea rcx, str.sha256sum                  ; 0x16061 ; "sha256sum"
0x000040ef      48c744246000.  mov qword [rsp + 0x60], 0
0x000040f8      48c744246800.  mov qword [rsp + 0x68], 0
0x00004101      4889e2         mov rdx, rsp
0x00004104      48890424       mov qword [rsp], rax
0x00004108      488d05131f01.  lea rax, str.test_invocation            ; 0x16022 ; "test invocation"
0x0000410f      48894c2430     mov qword [rsp + 0x30], rcx
0x00004114      488d0d501f01.  lea rcx, str.sha384sum                  ; 0x1606b ; "sha384sum"
0x0000411b      4889442408     mov qword [rsp + 8], rax                ; stdio2.h:-405
0x00004120      488d05731f01.  lea rax, [0x0001609a]                   ; ../coreutils-8.31/src/plit.c:-967 ; "coreutils"
0x00004127      48894c2440     mov qword [rsp + 0x40], rcx
0x0000412c      488d0d421f01.  lea rcx, str.sha512sum                  ; 0x16075 ; "sha512sum"
0x00004133      4889442410     mov qword [rsp + 0x10], rax
0x00004138      488d05f31e01.  lea rax, str.Multi_call_invocation      ; 0x16032 ; "Multi-call invocation"
0x0000413f      48894c2450     mov qword [rsp + 0x50], rcx
0x00004144      4889442418     mov qword [rsp + 0x18], rax
0x00004149      488d05f81e01.  lea rax, str.sha224sum                  ; stdio2.h:-408 ; 0x16048 ; "sha224sum"
0x00004150      4889442420     mov qword [rsp + 0x20], rax
0x00004155      488d05f61e01.  lea rax, str.sha2_utilities             ; 0x16052 ; "sha2 utilities"
0x0000415c      4889442428     mov qword [rsp + 0x28], rax
0x00004161      4889442438     mov qword [rsp + 0x38], rax
0x00004166      4889442448     mov qword [rsp + 0x48], rax
0x0000416b      4889442458     mov qword [rsp + 0x58], rax
0x00004170      4883c210       add rdx, 0x10
0x00004174      488b3a         mov rdi, qword [rdx]
0x00004177      4885ff         test rdi, rdi
0x0000417a      7413           je 0x418f
0x0000417c      b907000000     mov ecx, 7
0x00004181      4889de         mov rsi, rbx
0x00004184      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004186      0f97c0         seta al
0x00004189      1c00           sbb al, 0
0x0000418b      84c0           test al, al
0x0000418d      75e1           jne 0x4170
0x0000418f      4c8b6208       mov r12, qword [rdx + 8]
0x00004193      31ff           xor edi, edi
0x00004195      ba05000000     mov edx, 5
0x0000419a      488d35de1e01.  lea rsi, str.s_online_help:___s         ; 0x1607f ; "\n%s online help: <%s>\n"
0x000041a1      4d85e4         test r12, r12
0x000041a4      0f84c1000000   je 0x426b
0x000041aa      e841daffff     call sym.imp.dcgettext
0x000041af      488d0dca2501.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x16780 ; "https://www.gnu.org/software/coreutils/"
0x000041b6      488d15d91e01.  lea rdx, str.GNU_coreutils              ; 0x16096 ; "GNU coreutils"
0x000041bd      4889c6         mov rsi, rax
0x000041c0      bf01000000     mov edi, 1
0x000041c5      31c0           xor eax, eax
0x000041c7      e864dcffff     call sym.imp.__printf_chk
0x000041cc      31f6           xor esi, esi
0x000041ce      bf05000000     mov edi, 5
0x000041d3      e848dcffff     call sym.imp.setlocale
0x000041d8      4885c0         test rax, rax
0x000041db      741c           je 0x41f9
0x000041dd      488d35c01e01.  lea rsi, [0x000160a4]                   ; "en_"
0x000041e4      ba03000000     mov edx, 3
0x000041e9      4889c7         mov rdi, rax
0x000041ec      e84fd9ffff     call sym.imp.strncmp
0x000041f1      85c0           test eax, eax
0x000041f3      0f8507010000   jne 0x4300
0x000041f9      488d35a81e01.  lea rsi, str.Full_documentation___s_s   ; 0x160a8 ; "Full documentation <%s%s>\n"
0x00004200      31ff           xor edi, edi
0x00004202      ba05000000     mov edx, 5
0x00004207      e8e4d9ffff     call sym.imp.dcgettext
0x0000420c      488d0d061e01.  lea rcx, str.csplit                     ; 0x16019 ; "csplit"
0x00004213      488d15662501.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x16780 ; "https://www.gnu.org/software/coreutils/"
0x0000421a      4889c6         mov rsi, rax
0x0000421d      bf01000000     mov edi, 1
0x00004222      31c0           xor eax, eax
0x00004224      e807dcffff     call sym.imp.__printf_chk
0x00004229      4939dc         cmp r12, rbx
0x0000422c      488d0d091e01.  lea rcx, [0x0001603c]                   ; " invocation"
0x00004233      488d1da72e01.  lea rbx, [0x000170e1]
0x0000423a      480f44d9       cmove rbx, rcx
0x0000423e      488d35ab2501.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x167f0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00004245      31ff           xor edi, edi
0x00004247      ba05000000     mov edx, 5
0x0000424c      e89fd9ffff     call sym.imp.dcgettext
0x00004251      4889d9         mov rcx, rbx
0x00004254      4889c6         mov rsi, rax
0x00004257      4c89e2         mov rdx, r12
0x0000425a      bf01000000     mov edi, 1
0x0000425f      31c0           xor eax, eax
0x00004261      e8cadbffff     call sym.imp.__printf_chk
0x00004266      e9fbfcffff     jmp 0x3f66
0x0000426b      e880d9ffff     call sym.imp.dcgettext
0x00004270      488d0d092501.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x16780 ; "https://www.gnu.org/software/coreutils/"
0x00004277      488d15181e01.  lea rdx, str.GNU_coreutils              ; 0x16096 ; "GNU coreutils"
0x0000427e      4889c6         mov rsi, rax
0x00004281      bf01000000     mov edi, 1
0x00004286      31c0           xor eax, eax
0x00004288      e8a3dbffff     call sym.imp.__printf_chk
0x0000428d      31f6           xor esi, esi
0x0000428f      bf05000000     mov edi, 5
0x00004294      e887dbffff     call sym.imp.setlocale
0x00004299      4885c0         test rax, rax
0x0000429c      7418           je 0x42b6
0x0000429e      488d35ff1d01.  lea rsi, [0x000160a4]                   ; "en_"
0x000042a5      ba03000000     mov edx, 3
0x000042aa      4889c7         mov rdi, rax
0x000042ad      e88ed8ffff     call sym.imp.strncmp
0x000042b2      85c0           test eax, eax
0x000042b4      7543           jne 0x42f9
0x000042b6      488d35eb1d01.  lea rsi, str.Full_documentation___s_s   ; 0x160a8 ; "Full documentation <%s%s>\n"
0x000042bd      ba05000000     mov edx, 5
0x000042c2      31ff           xor edi, edi
0x000042c4      4c8d254e1d01.  lea r12, str.csplit                     ; 0x16019 ; "csplit"
0x000042cb      488d1d6a1d01.  lea rbx, [0x0001603c]                   ; " invocation"
0x000042d2      e819d9ffff     call sym.imp.dcgettext
0x000042d7      488d0d3b1d01.  lea rcx, str.csplit                     ; 0x16019 ; "csplit"
0x000042de      488d159b2401.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x16780 ; "https://www.gnu.org/software/coreutils/"
0x000042e5      4889c6         mov rsi, rax
0x000042e8      bf01000000     mov edi, 1
0x000042ed      31c0           xor eax, eax
0x000042ef      e83cdbffff     call sym.imp.__printf_chk
0x000042f4      e945ffffff     jmp 0x423e
0x000042f9      4c8d25191d01.  lea r12, str.csplit                     ; 0x16019 ; "csplit"
0x00004300      4c8b2da17d21.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x00004307      488d359a2401.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x167a8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000430e      31ff           xor edi, edi
0x00004310      ba05000000     mov edx, 5
0x00004315      e8d6d8ffff     call sym.imp.dcgettext
0x0000431a      4c89ee         mov rsi, r13
0x0000431d      4889c7         mov rdi, rax
0x00004320      e8fbd9ffff     call sym.imp.fputs_unlocked
0x00004325      e9cffeffff     jmp 0x41f9
0x0000432a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00004330      48893df97e21.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x21c230:8]=0
0x00004337      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00004338      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00004340      40883de17e21.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x21c228:1]=0
0x00004347      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00004348      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00004350      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00004351      53             push rbx
0x00004352      4883ec08       sub rsp, 8
0x00004356      488b3d4b7d21.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x0000435d      e86e1a0100     call sym.close_stream
0x00004362      85c0           test eax, eax
0x00004364      7416           je 0x437c
0x00004366      e8b5d7ffff     call sym.imp.__errno_location
0x0000436b      803db67e2100.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x21c228:1]=0
0x00004372      4889c3         mov rbx, rax
0x00004375      741c           je 0x4393
0x00004377      833820         cmp dword [rax], 0x20
0x0000437a      7517           jne 0x4393
0x0000437c      488b3d5d7d21.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x00004383      e8481a0100     call sym.close_stream
0x00004388      85c0           test eax, eax
0x0000438a      7546           jne 0x43d2
0x0000438c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00004390      5b             pop rbx
0x00004391      5d             pop rbp
0x00004392      c3             ret
0x00004393      488d35b72701.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x16b51 ; "write error"
0x0000439a      31ff           xor edi, edi
0x0000439c      ba05000000     mov edx, 5
0x000043a1      e84ad8ffff     call sym.imp.dcgettext
0x000043a6      488b3d837e21.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x21c230:8]=0
0x000043ad      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000043b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000043b3      7428           je 0x43dd
0x000043b5      e8a61c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000043ba      8b33           mov esi, dword [rbx]
0x000043bc      488d159a2701.  lea rdx, str.s:__s                      ; 0x16b5d ; "%s: %s"
0x000043c3      4889c1         mov rcx, rax
0x000043c6      4989e8         mov r8, rbp
0x000043c9      31ff           xor edi, edi
0x000043cb      31c0           xor eax, eax
0x000043cd      e88edaffff     call sym.imp.error
0x000043d2      8b3d487c2100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x21c020:4]=1
0x000043d8      e873d7ffff     call sym.imp._exit
0x000043dd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000043df      488d157b2701.  lea rdx, [0x00016b61]                   ; "%s"
0x000043e6      4889c1         mov rcx, rax
0x000043e9      31ff           xor edi, edi
0x000043eb      31c0           xor eax, eax
0x000043ed      e86edaffff     call sym.imp.error
0x000043f2      ebde           jmp 0x43d2
0x000043f4      662e0f1f8400.  nop word cs:[rax + rax]
0x000043fe      6690           nop
;-- fd_reopen:
0x00004400      4155           push r13                                ; ../coreutils-8.31/lib/fd-reopen.c:33
0x00004402      4154           push r12
0x00004404      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00004406      55             push rbp                                ; ../coreutils-8.31/lib/fd-reopen.c:33
0x00004407      53             push rbx
0x00004408      89fd           mov ebp, edi
0x0000440a      4889f7         mov rdi, rsi
0x0000440d      89d6           mov esi, edx
0x0000440f      89ca           mov edx, ecx
0x00004411      4883ec08       sub rsp, 8
0x00004415      e856daffff     call sym.imp.open                       ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000441a      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/fd-reopen.c:36
0x0000441c      89c3           mov ebx, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000441e      7429           je 0x4449                               ; ../coreutils-8.31/lib/fd-reopen.c:36
0x00004420      85c0           test eax, eax
0x00004422      7825           js 0x4449
0x00004424      89ee           mov esi, ebp                            ; ../coreutils-8.31/lib/fd-reopen.c:40
0x00004426      89c7           mov edi, eax
0x00004428      e823d8ffff     call sym.imp.dup2
0x0000442d      4189c4         mov r12d, eax
0x00004430      e8ebd6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-reopen.c:41
0x00004435      448b28         mov r13d, dword [rax]
0x00004438      4889c5         mov rbp, rax
0x0000443b      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-reopen.c:42
0x0000443d      e87ed8ffff     call sym.imp.close
0x00004442      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-reopen.c:44
0x00004445      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-reopen.c:43
0x00004449      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-reopen.c:46
0x0000444d      89d8           mov eax, ebx
0x0000444f      5b             pop rbx
0x00004450      5d             pop rbp
0x00004451      415c           pop r12
0x00004453      415d           pop r13
0x00004455      c3             ret
0x00004456      662e0f1f8400.  nop word cs:[rax + rax]
;-- fopen_safer:
0x00004460      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00004462      55             push rbp
0x00004463      4889f5         mov rbp, rsi
0x00004466      53             push rbx
0x00004467      e824daffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x0000446c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x0000446f      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00004472      740d           je 0x4481                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00004474      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00004477      e804d9ffff     call sym.imp.fileno
0x0000447c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x0000447f      760f           jbe 0x4490
0x00004481      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00004484      5b             pop rbx
0x00004485      5d             pop rbp
0x00004486      415c           pop r12
0x00004488      c3             ret
0x00004489      0f1f80000000.  nop dword [rax]
0x00004490      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00004492      e8491e0000     call sym.dup_safer
0x00004497      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00004499      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x0000449c      783a           js 0x44d8                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x0000449e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x000044a1      e8ea320000     call sym.rpl_fclose
0x000044a6      85c0           test eax, eax
0x000044a8      7513           jne 0x44bd
0x000044aa      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x000044ad      4489e7         mov edi, r12d
0x000044b0      e85bd9ffff     call sym.imp.fdopen
0x000044b5      4885c0         test rax, rax
0x000044b8      4889c3         mov rbx, rax
0x000044bb      75c4           jne 0x4481
0x000044bd      e85ed6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x000044c2      8b28           mov ebp, dword [rax]
0x000044c4      4889c3         mov rbx, rax
0x000044c7      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x000044ca      e8f1d7ffff     call sym.imp.close
0x000044cf      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x000044d1      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x000044d3      ebac           jmp 0x4481
0x000044d5      0f1f00         nop dword [rax]
0x000044d8      e843d6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x000044dd      448b20         mov r12d, dword [rax]
0x000044e0      4889c5         mov rbp, rax
0x000044e3      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x000044e6      e8a5320000     call sym.rpl_fclose
0x000044eb      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x000044ed      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x000044f1      eb8e           jmp 0x4481                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x000044f3      662e0f1f8400.  nop word cs:[rax + rax]
0x000044fd      0f1f00         nop dword [rax]
;-- umaxtostr:
0x00004500      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x00004504      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00004508      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00004512      660f1f440000   nop word [rax + rax]
0x00004518      4889f8         mov rax, rdi
0x0000451b      4883e901       sub rcx, 1
0x0000451f      48f7e6         mul rsi
0x00004522      48c1ea03       shr rdx, 3
0x00004526      488d0492       lea rax, [rdx + rdx*4]
0x0000452a      4801c0         add rax, rax
0x0000452d      4829c7         sub rdi, rax
0x00004530      83c730         add edi, 0x30
0x00004533      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00004536      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00004539      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000453c      75da           jne 0x4518
0x0000453e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00004541      c3             ret
0x00004542      662e0f1f8400.  nop word cs:[rax + rax]
0x0000454c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00004550      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00004553      53             push rbx
0x00004554      7477           je 0x45cd                               ; ../coreutils-8.31/lib/progname.c:51
0x00004556      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000455b      4889fb         mov rbx, rdi
0x0000455e      e80dd7ffff     call sym.imp.strrchr
0x00004563      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00004566      7455           je 0x45bd
0x00004568      4c8d4001       lea r8, [rax + 1]
0x0000456c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000456f      4829da         sub rdx, rbx
0x00004572      4883fa06       cmp rdx, 6
0x00004576      7e45           jle 0x45bd
0x00004578      488d70fa       lea rsi, [rax - 6]
0x0000457c      488d3d1d2601.  lea rdi, str..libs                      ; 0x16ba0 ; "/.libs/"
0x00004583      b907000000     mov ecx, 7
0x00004588      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000458a      0f97c2         seta dl
0x0000458d      80da00         sbb dl, 0
0x00004590      84d2           test dl, dl
0x00004592      7529           jne 0x45bd
0x00004594      488d3d0d2601.  lea rdi, [0x00016ba8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000459b      b903000000     mov ecx, 3
0x000045a0      4c89c6         mov rsi, r8
0x000045a3      4c89c3         mov rbx, r8
0x000045a6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000045a8      0f97c2         seta dl
0x000045ab      80da00         sbb dl, 0
0x000045ae      84d2           test dl, dl
0x000045b0      750b           jne 0x45bd
0x000045b2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000045b6      48891de37a21.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x21c0a0:8]=0
0x000045bd      48891d747c21.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x21c238:8]=0
0x000045c4      48891df57a21.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x21c0c0:8]=0
0x000045cb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000045cc      c3             ret
0x000045cd      488b0d0c7b21.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21c0e0:8]=0
0x000045d4      488d3d8d2501.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x16b68 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000045db      ba37000000     mov edx, 0x37                           ; '7'
0x000045e0      be01000000     mov esi, 1
0x000045e5      e806d9ffff     call sym.imp.fwrite
0x000045ea      e821d5ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000045ef      90             nop
;-- gettext_quote.part.1:
0x000045f0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000045f1      53             push rbx
0x000045f2      4889fd         mov rbp, rdi
0x000045f5      89f3           mov ebx, esi
0x000045f7      4883ec08       sub rsp, 8
0x000045fb      e8b0180100     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00004600      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00004603      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004606      80fa55         cmp dl, 0x55
0x00004609      7475           je 0x4680
0x0000460b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000460e      7420           je 0x4630
0x00004610      488d05a42501.  lea rax, str.l______l                   ; 0x16bbb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004617      488d159f2501.  lea rdx, [0x00016bbd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000461e      83fb09         cmp ebx, 9
0x00004621      480f45c2       cmovne rax, rdx
0x00004625      4883c408       add rsp, 8
0x00004629      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000462a      5d             pop rbp
0x0000462b      c3             ret
0x0000462c      0f1f4000       nop dword [rax]
0x00004630      0fb65001       movzx edx, byte [rax + 1]
0x00004634      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004637      80fa42         cmp dl, 0x42
0x0000463a      75d4           jne 0x4610
0x0000463c      80780231       cmp byte [rax + 2], 0x31
0x00004640      75ce           jne 0x4610
0x00004642      80780338       cmp byte [rax + 3], 0x38
0x00004646      75c8           jne 0x4610
0x00004648      80780430       cmp byte [rax + 4], 0x30
0x0000464c      75c2           jne 0x4610
0x0000464e      80780533       cmp byte [rax + 5], 0x33
0x00004652      75bc           jne 0x4610
0x00004654      80780630       cmp byte [rax + 6], 0x30
0x00004658      75b6           jne 0x4610
0x0000465a      80780700       cmp byte [rax + 7], 0
0x0000465e      75b0           jne 0x4610
0x00004660      807d0060       cmp byte [rbp], 0x60
0x00004664      488d05492501.  lea rax, [0x00016bb4]
0x0000466b      488d15462501.  lea rdx, [0x00016bb8]
0x00004672      480f45c2       cmovne rax, rdx
0x00004676      4883c408       add rsp, 8
0x0000467a      5b             pop rbx
0x0000467b      5d             pop rbp
0x0000467c      c3             ret
0x0000467d      0f1f00         nop dword [rax]
0x00004680      0fb65001       movzx edx, byte [rax + 1]
0x00004684      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004687      80fa54         cmp dl, 0x54
0x0000468a      7584           jne 0x4610
0x0000468c      0fb65002       movzx edx, byte [rax + 2]
0x00004690      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004693      80fa46         cmp dl, 0x46
0x00004696      0f8574ffffff   jne 0x4610
0x0000469c      8078032d       cmp byte [rax + 3], 0x2d
0x000046a0      0f856affffff   jne 0x4610
0x000046a6      80780438       cmp byte [rax + 4], 0x38
0x000046aa      0f8560ffffff   jne 0x4610
0x000046b0      80780500       cmp byte [rax + 5], 0
0x000046b4      0f8556ffffff   jne 0x4610
0x000046ba      807d0060       cmp byte [rbp], 0x60
0x000046be      488d05e72401.  lea rax, [0x00016bac]                   ; "\u2018"
0x000046c5      488d15e42401.  lea rdx, [0x00016bb0]                   ; "\u2019"
0x000046cc      480f45c2       cmovne rax, rdx
0x000046d0      4883c408       add rsp, 8
0x000046d4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000046d5      5d             pop rbp
0x000046d6      c3             ret
0x000046d7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000046e0      4157           push r15
0x000046e2      4156           push r14
0x000046e4      4589c7         mov r15d, r8d
0x000046e7      4155           push r13
0x000046e9      4154           push r12
0x000046eb      4989fe         mov r14, rdi
0x000046ee      55             push rbp
0x000046ef      53             push rbx
0x000046f0      4489cb         mov ebx, r9d
0x000046f3      4989f5         mov r13, rsi
0x000046f6      4889cd         mov rbp, rcx
0x000046f9      83e302         and ebx, 2
0x000046fc      4881ecb80000.  sub rsp, 0xb8
0x00004703      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000470b      4889542410     mov qword [rsp + 0x10], rdx
0x00004710      4489442408     mov dword [rsp + 8], r8d
0x00004715      44894c2478     mov dword [rsp + 0x78], r9d
0x0000471a      4889442420     mov qword [rsp + 0x20], rax
0x0000471f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004727      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000472c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004734      4889442460     mov qword [rsp + 0x60], rax
0x00004739      64488b042528.  mov rax, qword fs:[0x28]
0x00004742      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000474a      31c0           xor eax, eax
0x0000474c      e8afd4ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004751      4183ff0a       cmp r15d, 0xa
0x00004755      4889442458     mov qword [rsp + 0x58], rax
0x0000475a      0f87af110000   ja 0x590f
0x00004760      488d0db92401.  lea rcx, [0x00016c20]
0x00004767      4489fa         mov edx, r15d
0x0000476a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000476e      4801c8         add rax, rcx
0x00004771      ffe0           jmp rax
0x00004773      c644240e01     mov byte [rsp + 0xe], 1
0x00004778      c644247c00     mov byte [rsp + 0x7c], 0
0x0000477d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00004780      48c744245000.  mov qword [rsp + 0x50], 0
0x00004789      c644240f01     mov byte [rsp + 0xf], 1
0x0000478e      c644240d00     mov byte [rsp + 0xd], 0
0x00004793      488d05232401.  lea rax, [0x00016bbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000479a      48c744241801.  mov qword [rsp + 0x18], 1
0x000047a3      4531ff         xor r15d, r15d
0x000047a6      c74424080200.  mov dword [rsp + 8], 2
0x000047ae      4889442448     mov qword [rsp + 0x48], rax
0x000047b3      4531db         xor r11d, r11d
0x000047b6      4889e8         mov rax, rbp
0x000047b9      4589e0         mov r8d, r12d
0x000047bc      4c89dd         mov rbp, r11
0x000047bf      4989c3         mov r11, rax
0x000047c2      660f1f440000   nop word [rax + rax]
0x000047c8      4939eb         cmp r11, rbp
0x000047cb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000047cf      4983fbff       cmp r11, 0xffffffffffffffff
0x000047d3      750d           jne 0x47e2
0x000047d5      488b442410     mov rax, qword [rsp + 0x10]
0x000047da      803c2800       cmp byte [rax + rbp], 0
0x000047de      410f95c4       setne r12b
0x000047e2      4584e4         test r12b, r12b
0x000047e5      0f8455060000   je 0x4e40
0x000047eb      837c240802     cmp dword [rsp + 8], 2
0x000047f0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000047f5      4c8d0c2f       lea r9, [rdi + rbp]
0x000047f9      0f95c0         setne al
0x000047fc      2244240d       and al, byte [rsp + 0xd]
0x00004800      4189c2         mov r10d, eax
0x00004803      0f84a7000000   je 0x48b0
0x00004809      488b442418     mov rax, qword [rsp + 0x18]
0x0000480e      4885c0         test rax, rax
0x00004811      0f8429040000   je 0x4c40
0x00004817      4983fbff       cmp r11, 0xffffffffffffffff
0x0000481b      488d5c0500     lea rbx, [rbp + rax]
0x00004820      752e           jne 0x4850
0x00004822      4883f801       cmp rax, 1
0x00004826      7628           jbe 0x4850
0x00004828      4488442438     mov byte [rsp + 0x38], r8b
0x0000482d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00004832      4c894c2428     mov qword [rsp + 0x28], r9
0x00004837      e8d4d3ffff     call sym.imp.strlen
0x0000483c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004842      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004848      4989c3         mov r11, rax
0x0000484b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004850      4c39db         cmp rbx, r11
0x00004853      4488542428     mov byte [rsp + 0x28], r10b
0x00004858      0f87b2050000   ja 0x4e10
0x0000485e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004863      488b742448     mov rsi, qword [rsp + 0x48]
0x00004868      4c89cf         mov rdi, r9
0x0000486b      4c895c2440     mov qword [rsp + 0x40], r11
0x00004870      4488442438     mov byte [rsp + 0x38], r8b
0x00004875      4c894c2430     mov qword [rsp + 0x30], r9
0x0000487a      e881d4ffff     call sym.imp.memcmp
0x0000487f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00004881      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004886      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000488c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00004891      0f8579050000   jne 0x4e10
0x00004897      807c240f00     cmp byte [rsp + 0xf], 0
0x0000489c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000048a2      0f857d0f0000   jne 0x5825
0x000048a8      0f1f84000000.  nop dword [rax + rax]
0x000048b0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000048b4      80fb7e         cmp bl, 0x7e
0x000048b7      0f871b030000   ja 0x4bd8
0x000048bd      488d0d882301.  lea rcx, [0x00016c4c]
0x000048c4      0fb6d3         movzx edx, bl
0x000048c7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000048cb      4801c8         add rax, rcx
0x000048ce      ffe0           jmp rax
0x000048d0      4531d2         xor r10d, r10d
0x000048d3      4983fb01       cmp r11, 1
0x000048d7      0f95c0         setne al
0x000048da      4983fbff       cmp r11, 0xffffffffffffffff
0x000048de      750c           jne 0x48ec
0x000048e0      488b442410     mov rax, qword [rsp + 0x10]
0x000048e5      80780100       cmp byte [rax + 1], 0
0x000048e9      0f95c0         setne al
0x000048ec      837c240802     cmp dword [rsp + 8], 2
0x000048f1      0f94c2         sete dl
0x000048f4      84c0           test al, al
0x000048f6      0f844c020000   je 0x4b48
0x000048fc      4531e4         xor r12d, r12d
0x000048ff      31c0           xor eax, eax
0x00004901      0f1f80000000.  nop dword [rax]
0x00004908      807c240d01     cmp byte [rsp + 0xd], 1
0x0000490d      0f850f010000   jne 0x4a22
0x00004913      84d2           test dl, dl
0x00004915      0f8507010000   jne 0x4a22
0x0000491b      488b742420     mov rsi, qword [rsp + 0x20]
0x00004920      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00004923      7414           je 0x4939
0x00004925      89da           mov edx, ebx
0x00004927      c0ea05         shr dl, 5
0x0000492a      0fb6d2         movzx edx, dl
0x0000492d      8b1496         mov edx, dword [rsi + rdx*4]
0x00004930      0fa3da         bt edx, ebx
0x00004933      0f824a010000   jb 0x4a83
0x00004939      4584d2         test r10b, r10b
0x0000493c      0f8541010000   jne 0x4a83
0x00004942      83f001         xor eax, 1
0x00004945      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004949      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000494c      84c0           test al, al
0x0000494e      7420           je 0x4970                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004950      4d39fd         cmp r13, r15
0x00004953      7605           jbe 0x495a
0x00004955      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000495a      498d4701       lea rax, [r15 + 1]
0x0000495e      4939c5         cmp r13, rax
0x00004961      7606           jbe 0x4969
0x00004963      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004969      4983c702       add r15, 2
0x0000496d      4531c0         xor r8d, r8d
0x00004970      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00004973      7304           jae 0x4979                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00004975      43881c3e       mov byte [r14 + r15], bl
0x00004979      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000497e      4983c701       add r15, 1
0x00004982      b800000000     mov eax, 0
0x00004987      4584e4         test r12b, r12b
0x0000498a      0f44f8         cmove edi, eax
0x0000498d      40887c240e     mov byte [rsp + 0xe], dil
0x00004992      e931feffff     jmp 0x47c8
0x00004997      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000049a0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000049a3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000049a7      83f802         cmp eax, 2
0x000049aa      0f84b8050000   je 0x4f68
0x000049b0      83f805         cmp eax, 5
0x000049b3      0f846f050000   je 0x4f28
0x000049b9      83f802         cmp eax, 2
0x000049bc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000049c1      0f94c2         sete dl
0x000049c4      4531e4         xor r12d, r12d
0x000049c7      31c0           xor eax, eax
0x000049c9      e93affffff     jmp 0x4908
0x000049ce      6690           nop
0x000049d0      4531d2         xor r10d, r10d
0x000049d3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000049d8      0f8402050000   je 0x4ee0
0x000049de      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000049e3      31d2           xor edx, edx
0x000049e5      31c0           xor eax, eax
0x000049e7      bb27000000     mov ebx, 0x27                           ; '''
0x000049ec      e917ffffff     jmp 0x4908
0x000049f1      0f1f80000000.  nop dword [rax]
0x000049f8      ba09000000     mov edx, 9
0x000049fd      bb74000000     mov ebx, 0x74                           ; 't'
0x00004a02      837c240802     cmp dword [rsp + 8], 2
0x00004a07      0f94c0         sete al
0x00004a0a      2244240f       and al, byte [rsp + 0xf]
0x00004a0e      0f854a010000   jne 0x4b5e
0x00004a14      807c240d00     cmp byte [rsp + 0xd], 0
0x00004a19      7565           jne 0x4a80
0x00004a1b      89d3           mov ebx, edx
0x00004a1d      4531e4         xor r12d, r12d
0x00004a20      31c0           xor eax, eax
0x00004a22      807c240f00     cmp byte [rsp + 0xf], 0
0x00004a27      0f85eefeffff   jne 0x491b
0x00004a2d      e907ffffff     jmp 0x4939                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00004a32      660f1f440000   nop word [rax + rax]
0x00004a38      ba08000000     mov edx, 8
0x00004a3d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004a42      ebd0           jmp 0x4a14
0x00004a44      0f1f4000       nop dword [rax]
0x00004a48      837c240802     cmp dword [rsp + 8], 2
0x00004a4d      0f84cd030000   je 0x4e20
0x00004a53      807c240d00     cmp byte [rsp + 0xd], 0
0x00004a58      0f8412020000   je 0x4c70
0x00004a5e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004a63      0f8407020000   je 0x4c70
0x00004a69      48837c241800   cmp qword [rsp + 0x18], 0
0x00004a6f      0f85b6030000   jne 0x4e2b
0x00004a75      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004a7a      660f1f440000   nop word [rax + rax]
0x00004a80      4531e4         xor r12d, r12d
0x00004a83      837c240802     cmp dword [rsp + 8], 2
0x00004a88      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00004a8b      807c240f00     cmp byte [rsp + 0xf], 0
0x00004a90      89d0           mov eax, edx
0x00004a92      0f8550080000   jne 0x52e8
0x00004a98      4489c0         mov eax, r8d
0x00004a9b      83f001         xor eax, 1
0x00004a9e      20d0           and al, dl
0x00004aa0      742f           je 0x4ad1
0x00004aa2      4d39fd         cmp r13, r15
0x00004aa5      7605           jbe 0x4aac
0x00004aa7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004aac      498d5701       lea rdx, [r15 + 1]
0x00004ab0      4939d5         cmp r13, rdx
0x00004ab3      7606           jbe 0x4abb
0x00004ab5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004abb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00004abf      4939d5         cmp r13, rdx
0x00004ac2      7606           jbe 0x4aca
0x00004ac4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004aca      4983c703       add r15, 3
0x00004ace      4189c0         mov r8d, eax
0x00004ad1      4d39fd         cmp r13, r15
0x00004ad4      7605           jbe 0x4adb
0x00004ad6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004adb      4983c701       add r15, 1
0x00004adf      4883c501       add rbp, 1
0x00004ae3      e988feffff     jmp 0x4970
0x00004ae8      0f1f84000000.  nop dword [rax + rax]
0x00004af0      807c240d00     cmp byte [rsp + 0xd], 0
0x00004af5      0f85c8010000   jne 0x4cc3
0x00004afb      31d2           xor edx, edx
0x00004afd      f644247801     test byte [rsp + 0x78], 1
0x00004b02      0f8413ffffff   je 0x4a1b
0x00004b08      4883c501       add rbp, 1
0x00004b0c      e9b7fcffff     jmp 0x47c8
0x00004b11      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00004b18      837c240802     cmp dword [rsp + 8], 2
0x00004b1d      0f94c2         sete dl
0x00004b20      31c0           xor eax, eax
0x00004b22      e9e1fdffff     jmp 0x4908
0x00004b27      660f1f840000.  nop word [rax + rax]
0x00004b30      ba07000000     mov edx, 7
0x00004b35      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004b3a      e9d5feffff     jmp 0x4a14
0x00004b3f      90             nop
0x00004b40      837c240802     cmp dword [rsp + 8], 2
0x00004b45      0f94c2         sete dl
0x00004b48      4885ed         test rbp, rbp
0x00004b4b      0f85abfdffff   jne 0x48fc
0x00004b51      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004b56      20d0           and al, dl
0x00004b58      0f84aafdffff   je 0x4908
0x00004b5e      4c89dd         mov rbp, r11
0x00004b61      c74424080200.  mov dword [rsp + 8], 2
0x00004b69      e9fb060000     jmp 0x5269
0x00004b6e      6690           nop
0x00004b70      837c240802     cmp dword [rsp + 8], 2
0x00004b75      0f94c2         sete dl
0x00004b78      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00004b7b      ebd4           jmp 0x4b51
0x00004b7d      0f1f00         nop dword [rax]
0x00004b80      837c240802     cmp dword [rsp + 8], 2
0x00004b85      bb20000000     mov ebx, 0x20                           ; "@"
0x00004b8a      0f94c2         sete dl
0x00004b8d      ebc2           jmp 0x4b51
0x00004b8f      90             nop
0x00004b90      ba0d000000     mov edx, 0xd
0x00004b95      bb72000000     mov ebx, 0x72                           ; 'r'
0x00004b9a      e963feffff     jmp 0x4a02
0x00004b9f      90             nop
0x00004ba0      ba0c000000     mov edx, 0xc
0x00004ba5      bb66000000     mov ebx, 0x66                           ; 'f'
0x00004baa      e965feffff     jmp 0x4a14
0x00004baf      90             nop
0x00004bb0      ba0b000000     mov edx, 0xb
0x00004bb5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00004bba      e955feffff     jmp 0x4a14
0x00004bbf      90             nop
0x00004bc0      ba0a000000     mov edx, 0xa
0x00004bc5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00004bca      e933feffff     jmp 0x4a02
0x00004bcf      90             nop
0x00004bd0      4531d2         xor r10d, r10d
0x00004bd3      0f1f440000     nop dword [rax + rax]
0x00004bd8      48837c245801   cmp qword [rsp + 0x58], 1
0x00004bde      0f85a4030000   jne 0x4f88
0x00004be4      4c895c2438     mov qword [rsp + 0x38], r11
0x00004be9      4488442430     mov byte [rsp + 0x30], r8b
0x00004bee      4488542428     mov byte [rsp + 0x28], r10b
0x00004bf3      e858d3ffff     call sym.imp.__ctype_b_loc
0x00004bf8      488b08         mov rcx, qword [rax]
0x00004bfb      0fb6d3         movzx edx, bl
0x00004bfe      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004c04      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00004c0a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00004c0f      bf01000000     mov edi, 1
0x00004c14      0fb70451       movzx eax, word [rcx + rdx*2]
0x00004c18      66250040       and ax, 0x4000
0x00004c1c      410f95c4       setne r12b
0x00004c20      0f94c0         sete al
0x00004c23      2244240d       and al, byte [rsp + 0xd]
0x00004c27      84c0           test al, al
0x00004c29      0f8592090000   jne 0x55c1
0x00004c2f      837c240802     cmp dword [rsp + 8], 2
0x00004c34      0f94c2         sete dl
0x00004c37      e9ccfcffff     jmp 0x4908
0x00004c3c      0f1f4000       nop dword [rax]
0x00004c40      410fb619       movzx ebx, byte [r9]
0x00004c44      80fb7e         cmp bl, 0x7e
0x00004c47      7787           ja 0x4bd0
0x00004c49      488d0df82101.  lea rcx, [0x00016e48]
0x00004c50      0fb6d3         movzx edx, bl
0x00004c53      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004c57      4801c8         add rax, rcx
0x00004c5a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00004c5c      0f1f4000       nop dword [rax]
0x00004c60      4531d2         xor r10d, r10d
0x00004c63      807c240d00     cmp byte [rsp + 0xd], 0
0x00004c68      0f85f0fdffff   jne 0x4a5e
0x00004c6e      6690           nop
0x00004c70      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004c75      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004c7a      e995fdffff     jmp 0x4a14
0x00004c7f      90             nop
0x00004c80      ba0c000000     mov edx, 0xc
0x00004c85      4531d2         xor r10d, r10d
0x00004c88      bb66000000     mov ebx, 0x66                           ; 'f'
0x00004c8d      e982fdffff     jmp 0x4a14
0x00004c92      660f1f440000   nop word [rax + rax]
0x00004c98      ba0a000000     mov edx, 0xa
0x00004c9d      4531d2         xor r10d, r10d
0x00004ca0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004ca5      e958fdffff     jmp 0x4a02
0x00004caa      660f1f440000   nop word [rax + rax]
0x00004cb0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004cb5      e9c6fdffff     jmp 0x4a80
0x00004cba      660f1f440000   nop word [rax + rax]
0x00004cc0      4531d2         xor r10d, r10d
0x00004cc3      837c240802     cmp dword [rsp + 8], 2
0x00004cc8      0f94c2         sete dl
0x00004ccb      807c240f00     cmp byte [rsp + 0xf], 0
0x00004cd0      0f85940b0000   jne 0x586a
0x00004cd6      4489c0         mov eax, r8d
0x00004cd9      4c89f9         mov rcx, r15
0x00004cdc      83f001         xor eax, 1
0x00004cdf      20d0           and al, dl
0x00004ce1      742d           je 0x4d10
0x00004ce3      4d39fd         cmp r13, r15
0x00004ce6      7605           jbe 0x4ced
0x00004ce8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004ced      498d4f01       lea rcx, [r15 + 1]
0x00004cf1      4939cd         cmp r13, rcx
0x00004cf4      7606           jbe 0x4cfc
0x00004cf6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004cfc      498d4f02       lea rcx, [r15 + 2]
0x00004d00      4939cd         cmp r13, rcx
0x00004d03      0f8730060000   ja 0x5339
0x00004d09      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00004d0d      4189c0         mov r8d, eax
0x00004d10      4939cd         cmp r13, rcx
0x00004d13      7605           jbe 0x4d1a
0x00004d15      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004d1a      837c240802     cmp dword [rsp + 8], 2
0x00004d1f      4c8d7901       lea r15, [rcx + 1]
0x00004d23      0f8400060000   je 0x5329
0x00004d29      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004d2d      4c39d8         cmp rax, r11
0x00004d30      7319           jae 0x4d4b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004d32      488b442410     mov rax, qword [rsp + 0x10]
0x00004d37      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00004d3c      88442428       mov byte [rsp + 0x28], al
0x00004d40      83e830         sub eax, 0x30
0x00004d43      3c09           cmp al, 9
0x00004d45      0f862e080000   jbe 0x5579
0x00004d4b      4489e0         mov eax, r12d
0x00004d4e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004d53      4531e4         xor r12d, r12d
0x00004d56      e9adfbffff     jmp 0x4908                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00004d5b      0f1f440000     nop dword [rax + rax]
0x00004d60      837c240802     cmp dword [rsp + 8], 2
0x00004d65      4589d4         mov r12d, r10d
0x00004d68      0f94c2         sete dl
0x00004d6b      4531d2         xor r10d, r10d
0x00004d6e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004d70      e993fbffff     jmp 0x4908                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004d75      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004d78      837c240802     cmp dword [rsp + 8], 2
0x00004d7d      0f94c2         sete dl
0x00004d80      4531d2         xor r10d, r10d
0x00004d83      e9c0fdffff     jmp 0x4b48
0x00004d88      0f1f84000000.  nop dword [rax + rax]
0x00004d90      837c240802     cmp dword [rsp + 8], 2
0x00004d95      0f94c2         sete dl
0x00004d98      4531d2         xor r10d, r10d
0x00004d9b      4531e4         xor r12d, r12d
0x00004d9e      e9aefdffff     jmp 0x4b51
0x00004da3      0f1f440000     nop dword [rax + rax]
0x00004da8      837c240802     cmp dword [rsp + 8], 2
0x00004dad      4589d4         mov r12d, r10d
0x00004db0      bb20000000     mov ebx, 0x20                           ; "@"
0x00004db5      0f94c2         sete dl
0x00004db8      4531d2         xor r10d, r10d
0x00004dbb      e991fdffff     jmp 0x4b51
0x00004dc0      ba0d000000     mov edx, 0xd
0x00004dc5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00004dc8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00004dcd      e930fcffff     jmp 0x4a02
0x00004dd2      660f1f440000   nop word [rax + rax]
0x00004dd8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00004ddd      e99efcffff     jmp 0x4a80
0x00004de2      660f1f440000   nop word [rax + rax]
0x00004de8      ba09000000     mov edx, 9
0x00004ded      4531d2         xor r10d, r10d
0x00004df0      bb74000000     mov ebx, 0x74                           ; 't'
0x00004df5      e908fcffff     jmp 0x4a02
0x00004dfa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00004e00      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004e05      e976fcffff     jmp 0x4a80
0x00004e0a      660f1f440000   nop word [rax + rax]
0x00004e10      4531d2         xor r10d, r10d
0x00004e13      e998faffff     jmp 0x48b0
0x00004e18      0f1f84000000.  nop dword [rax + rax]
0x00004e20      807c240f00     cmp byte [rsp + 0xf], 0
0x00004e25      0f8565090000   jne 0x5790
0x00004e2b      4883c501       add rbp, 1
0x00004e2f      4489c0         mov eax, r8d
0x00004e32      4531e4         xor r12d, r12d
0x00004e35      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004e3a      e90dfbffff     jmp 0x494c
0x00004e3f      90             nop
0x00004e40      837c240802     cmp dword [rsp + 8], 2
0x00004e45      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004e4a      4589c4         mov r12d, r8d
0x00004e4d      4c89dd         mov rbp, r11
0x00004e50      0f94c2         sete dl
0x00004e53      89d8           mov eax, ebx
0x00004e55      4d85ff         test r15, r15
0x00004e58      0f94c1         sete cl
0x00004e5b      21d0           and eax, edx
0x00004e5d      20c8           and al, cl
0x00004e5f      0f85610a0000   jne 0x58c6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004e65      89d8           mov eax, ebx
0x00004e67      83f001         xor eax, 1
0x00004e6a      20c2           and dl, al
0x00004e6c      0f846a090000   je 0x57dc
0x00004e72      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004e77      0f845d090000   je 0x57da
0x00004e7d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004e82      0f85f5090000   jne 0x587d
0x00004e88      4d85ed         test r13, r13
0x00004e8b      0f94c0         sete al
0x00004e8e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004e94      0f95c2         setne dl
0x00004e97      20d0           and al, dl
0x00004e99      0f841d0a0000   je 0x58bc
0x00004e9f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004ea4      488d1d121d01.  lea rbx, [0x00016bbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004eab      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00004eaf      c74424080200.  mov dword [rsp + 8], 2
0x00004eb7      41bf01000000   mov r15d, 1
0x00004ebd      48c744241801.  mov qword [rsp + 0x18], 1
0x00004ec6      c644240f00     mov byte [rsp + 0xf], 0
0x00004ecb      48895c2448     mov qword [rsp + 0x48], rbx
0x00004ed0      8844247c       mov byte [rsp + 0x7c], al
0x00004ed4      e9daf8ffff     jmp 0x47b3
0x00004ed9      0f1f80000000.  nop dword [rax]
0x00004ee0      807c240f00     cmp byte [rsp + 0xf], 0
0x00004ee5      0f85a5080000   jne 0x5790
0x00004eeb      4d85ed         test r13, r13
0x00004eee      0f84fc030000   je 0x52f0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004ef4      31d2           xor edx, edx
0x00004ef6      48837c245000   cmp qword [rsp + 0x50], 0
0x00004efc      0f85ee030000   jne 0x52f0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004f02      4c896c2450     mov qword [rsp + 0x50], r13
0x00004f07      4983c703       add r15, 3
0x00004f0b      31c0           xor eax, eax
0x00004f0d      448864247c     mov byte [rsp + 0x7c], r12b
0x00004f12      4531c0         xor r8d, r8d
0x00004f15      4989d5         mov r13, rdx
0x00004f18      bb27000000     mov ebx, 0x27                           ; '''
0x00004f1d      e917faffff     jmp 0x4939
0x00004f22      660f1f440000   nop word [rax + rax]
0x00004f28      f644247804     test byte [rsp + 0x78], 4
0x00004f2d      7421           je 0x4f50
0x00004f2f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004f33      4c39d9         cmp rcx, r11
0x00004f36      7318           jae 0x4f50
0x00004f38      488b442410     mov rax, qword [rsp + 0x10]
0x00004f3d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004f42      0f848a070000   je 0x56d2
0x00004f48      0f1f84000000.  nop dword [rax + rax]
0x00004f50      31d2           xor edx, edx
0x00004f52      4531e4         xor r12d, r12d
0x00004f55      31c0           xor eax, eax
0x00004f57      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004f5c      e9a7f9ffff     jmp 0x4908
0x00004f61      0f1f80000000.  nop dword [rax]
0x00004f68      807c240f00     cmp byte [rsp + 0xf], 0
0x00004f6d      0f851d080000   jne 0x5790
0x00004f73      4531e4         xor r12d, r12d
0x00004f76      31c0           xor eax, eax
0x00004f78      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004f7d      e9b7f9ffff     jmp 0x4939                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004f82      660f1f440000   nop word [rax + rax]
0x00004f88      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004f90      4983fbff       cmp r11, 0xffffffffffffffff
0x00004f94      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004fa0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004fa5      752d           jne 0x4fd4
0x00004fa7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004fac      4488442440     mov byte [rsp + 0x40], r8b
0x00004fb1      4488542438     mov byte [rsp + 0x38], r10b
0x00004fb6      4c894c2430     mov qword [rsp + 0x30], r9
0x00004fbb      e850ccffff     call sym.imp.strlen
0x00004fc0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004fc6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00004fcc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00004fcf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004fd4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00004fdc      31c9           xor ecx, ecx
0x00004fde      885c247e       mov byte [rsp + 0x7e], bl
0x00004fe2      448844247d     mov byte [rsp + 0x7d], r8b
0x00004fe7      4889cb         mov rbx, rcx
0x00004fea      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004ff2      4889442438     mov qword [rsp + 0x38], rax
0x00004ff7      448854247f     mov byte [rsp + 0x7f], r10b
0x00004ffc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00005004      4c89742440     mov qword [rsp + 0x40], r14
0x00005009      4c896c2470     mov qword [rsp + 0x70], r13
0x0000500e      4c895c2430     mov qword [rsp + 0x30], r11
0x00005013      488b442410     mov rax, qword [rsp + 0x10]
0x00005018      4c8d741d00     lea r14, [rbp + rbx]
0x0000501d      488b542430     mov rdx, qword [rsp + 0x30]
0x00005022      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005027      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000502c      4e8d2c30       lea r13, [rax + r14]
0x00005030      4c29f2         sub rdx, r14
0x00005033      4c89ee         mov rsi, r13
0x00005036      e8f52a0000     call sym.rpl_mbrtowc
0x0000503b      4885c0         test rax, rax
0x0000503e      4989c7         mov r15, rax
0x00005041      744e           je 0x5091
0x00005043      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005047      0f8418060000   je 0x5665
0x0000504d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00005051      0f849a050000   je 0x55f1
0x00005057      837c240802     cmp dword [rsp + 8], 2
0x0000505c      0f94c0         sete al
0x0000505f      2244240f       and al, byte [rsp + 0xf]
0x00005063      0f8597010000   jne 0x5200
0x00005069      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00005070      e8abceffff     call sym.imp.iswprint
0x00005075      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000507a      85c0           test eax, eax
0x0000507c      b800000000     mov eax, 0
0x00005081      440f44e0       cmove r12d, eax
0x00005085      4c01fb         add rbx, r15
0x00005088      e883ceffff     call sym.imp.mbsinit
0x0000508d      85c0           test eax, eax
0x0000508f      7482           je 0x5013
0x00005091      4489e2         mov edx, r12d
0x00005094      4889df         mov rdi, rbx
0x00005097      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000509d      83f201         xor edx, 1
0x000050a0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000050a5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000050ab      2254240d       and dl, byte [rsp + 0xd]
0x000050af      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000050b7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000050bc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000050c1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000050c6      4883ff01       cmp rdi, 1
0x000050ca      0f86fb050000   jbe 0x56cb
0x000050d0      4889f9         mov rcx, rdi
0x000050d3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000050d5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000050db      4801e9         add rcx, rbp
0x000050de      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000050e3      e9b6000000     jmp 0x519e
0x000050e8      0f1f84000000.  nop dword [rax + rax]
0x000050f0      837c240802     cmp dword [rsp + 8], 2
0x000050f5      0f94c0         sete al
0x000050f8      4584c9         test r9b, r9b
0x000050fb      0f85af040000   jne 0x55b0
0x00005101      4489c6         mov esi, r8d
0x00005104      83f601         xor esi, 1
0x00005107      4020f0         and al, sil
0x0000510a      742f           je 0x513b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000510c      4d39fd         cmp r13, r15
0x0000510f      7605           jbe 0x5116
0x00005111      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005116      498d7701       lea rsi, [r15 + 1]
0x0000511a      4939f5         cmp r13, rsi
0x0000511d      7606           jbe 0x5125                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000511f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00005125      498d7702       lea rsi, [r15 + 2]
0x00005129      4939f5         cmp r13, rsi
0x0000512c      7606           jbe 0x5134
0x0000512e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005134      4983c703       add r15, 3
0x00005138      4189c0         mov r8d, eax
0x0000513b      4d39fd         cmp r13, r15
0x0000513e      7605           jbe 0x5145
0x00005140      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00005145      498d4701       lea rax, [r15 + 1]
0x00005149      4939c5         cmp r13, rax
0x0000514c      760d           jbe 0x515b
0x0000514e      89d8           mov eax, ebx
0x00005150      c0e806         shr al, 6
0x00005153      83c030         add eax, 0x30
0x00005156      4388443e01     mov byte [r14 + r15 + 1], al
0x0000515b      498d4702       lea rax, [r15 + 2]
0x0000515f      4939c5         cmp r13, rax
0x00005162      7610           jbe 0x5174
0x00005164      89d8           mov eax, ebx
0x00005166      c0e803         shr al, 3
0x00005169      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000516c      83c030         add eax, 0x30
0x0000516f      4388443e02     mov byte [r14 + r15 + 2], al
0x00005174      83e307         and ebx, 7
0x00005177      4883c501       add rbp, 1
0x0000517b      4983c703       add r15, 3
0x0000517f      83c330         add ebx, 0x30
0x00005182      4839cd         cmp rbp, rcx
0x00005185      0f83e5f7ffff   jae 0x4970
0x0000518b      89d6           mov esi, edx
0x0000518d      4d39fd         cmp r13, r15
0x00005190      7604           jbe 0x5196
0x00005192      43881c3e       mov byte [r14 + r15], bl
0x00005196      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000519a      4983c701       add r15, 1
0x0000519e      84d2           test dl, dl
0x000051a0      0f854affffff   jne 0x50f0
0x000051a6      89f0           mov eax, esi
0x000051a8      83f001         xor eax, 1
0x000051ab      4421c0         and eax, r8d
0x000051ae      4584d2         test r10b, r10b
0x000051b1      740e           je 0x51c1
0x000051b3      4d39fd         cmp r13, r15
0x000051b6      7605           jbe 0x51bd
0x000051b8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000051bd      4983c701       add r15, 1
0x000051c1      4883c501       add rbp, 1
0x000051c5      4839cd         cmp rbp, rcx
0x000051c8      0f837ef7ffff   jae 0x494c
0x000051ce      84c0           test al, al
0x000051d0      0f84f8030000   je 0x55ce
0x000051d6      4d39fd         cmp r13, r15
0x000051d9      7605           jbe 0x51e0
0x000051db      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000051e0      498d4701       lea rax, [r15 + 1]
0x000051e4      4939c5         cmp r13, rax
0x000051e7      7606           jbe 0x51ef
0x000051e9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000051ef      4983c702       add r15, 2
0x000051f3      4531d2         xor r10d, r10d
0x000051f6      4531c0         xor r8d, r8d
0x000051f9      eb92           jmp 0x518d
0x000051fb      0f1f440000     nop dword [rax + rax]
0x00005200      4983ff01       cmp r15, 1
0x00005204      0f845ffeffff   je 0x5069
0x0000520a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000520f      4a8d0c3f       lea rcx, [rdi + r15]
0x00005213      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00005218      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000521c      eb0f           jmp 0x522d
0x0000521e      6690           nop
0x00005220      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00005224      4939d0         cmp r8, rdx
0x00005227      0f843cfeffff   je 0x5069
0x0000522d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00005230      83e95b         sub ecx, 0x5b
0x00005233      80f921         cmp cl, 0x21
0x00005236      77e8           ja 0x5220                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00005238      be01000000     mov esi, 1
0x0000523d      48d3e6         shl rsi, cl
0x00005240      4889f1         mov rcx, rsi
0x00005243      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000524d      4885f1         test rcx, rsi
0x00005250      74ce           je 0x5220
0x00005252      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005257      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000525c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00005261      c74424080200.  mov dword [rsp + 8], 2
0x00005269      807c240d00     cmp byte [rsp + 0xd], 0
0x0000526e      7410           je 0x5280
0x00005270      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00005272      b804000000     mov eax, 4
0x00005277      0f44442408     cmove eax, dword [rsp + 8]
0x0000527c      89442408       mov dword [rsp + 8], eax
0x00005280      4883ec08       sub rsp, 8
0x00005284      4889e9         mov rcx, rbp
0x00005287      4c89ee         mov rsi, r13
0x0000528a      ff742468       push qword [rsp + 0x68]
0x0000528e      ff742478       push qword [rsp + 0x78]
0x00005292      4c89f7         mov rdi, r14
0x00005295      6a00           push 0
0x00005297      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000529f      448b442428     mov r8d, dword [rsp + 0x28]
0x000052a4      488b542430     mov rdx, qword [rsp + 0x30]
0x000052a9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000052ad      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000052b2      4883c420       add rsp, 0x20
0x000052b6      4989c7         mov r15, rax
0x000052b9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000052c1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000052ca      4c89f8         mov rax, r15
0x000052cd      0f8500060000   jne 0x58d3
0x000052d3      4881c4b80000.  add rsp, 0xb8
0x000052da      5b             pop rbx
0x000052db      5d             pop rbp
0x000052dc      415c           pop r12
0x000052de      415d           pop r13
0x000052e0      415e           pop r14
0x000052e2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000052e4      c3             ret
0x000052e5      0f1f00         nop dword [rax]
0x000052e8      4c89dd         mov rbp, r11
0x000052eb      e979ffffff     jmp 0x5269
0x000052f0      4d39fd         cmp r13, r15
0x000052f3      7605           jbe 0x52fa
0x000052f5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000052fa      498d4701       lea rax, [r15 + 1]
0x000052fe      4939c5         cmp r13, rax
0x00005301      7606           jbe 0x5309
0x00005303      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00005309      498d4702       lea rax, [r15 + 2]
0x0000530d      4939c5         cmp r13, rax
0x00005310      0f86ec050000   jbe 0x5902
0x00005316      4c89ea         mov rdx, r13
0x00005319      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000531f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00005324      e9d9fbffff     jmp 0x4f02
0x00005329      4489e0         mov eax, r12d
0x0000532c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00005331      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00005334      e900f6ffff     jmp 0x4939                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00005339      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000533f      e9c5f9ffff     jmp 0x4d09
0x00005344      85db           test ebx, ebx
0x00005346      0f8527f4ffff   jne 0x4773
0x0000534c      c644240d01     mov byte [rsp + 0xd], 1
0x00005351      4d85ed         test r13, r13
0x00005354      0f8590050000   jne 0x58ea
0x0000535a      488d055c1801.  lea rax, [0x00016bbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005361      48c744245000.  mov qword [rsp + 0x50], 0
0x0000536a      c644240e01     mov byte [rsp + 0xe], 1
0x0000536f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005374      4531e4         xor r12d, r12d
0x00005377      c644240f00     mov byte [rsp + 0xf], 0
0x0000537c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005385      4889442448     mov qword [rsp + 0x48], rax
0x0000538a      41bf01000000   mov r15d, 1
0x00005390      c74424080200.  mov dword [rsp + 8], 2
0x00005398      e916f4ffff     jmp 0x47b3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000539d      0f1f00         nop dword [rax]
0x000053a0      85db           test ebx, ebx
0x000053a2      0f85f5030000   jne 0x579d
0x000053a8      4d85ed         test r13, r13
0x000053ab      0f8425020000   je 0x55d6
0x000053b1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000053b5      c644240e01     mov byte [rsp + 0xe], 1
0x000053ba      4531e4         xor r12d, r12d
0x000053bd      c644247c00     mov byte [rsp + 0x7c], 0
0x000053c2      48c744245000.  mov qword [rsp + 0x50], 0
0x000053cb      488d05e91701.  lea rax, str.l______l                   ; 0x16bbb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000053d2      c644240f00     mov byte [rsp + 0xf], 0
0x000053d7      c644240d01     mov byte [rsp + 0xd], 1
0x000053dc      48c744241801.  mov qword [rsp + 0x18], 1
0x000053e5      41bf01000000   mov r15d, 1
0x000053eb      4889442448     mov qword [rsp + 0x48], rax
0x000053f0      e9bef3ffff     jmp 0x47b3
0x000053f5      488d05bf1701.  lea rax, str.l______l                   ; 0x16bbb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000053fc      c644240e01     mov byte [rsp + 0xe], 1
0x00005401      c644247c00     mov byte [rsp + 0x7c], 0
0x00005406      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00005409      48c744245000.  mov qword [rsp + 0x50], 0
0x00005412      c644240f01     mov byte [rsp + 0xf], 1
0x00005417      c644240d01     mov byte [rsp + 0xd], 1
0x0000541c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005425      4531ff         xor r15d, r15d
0x00005428      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000542d      c74424080500.  mov dword [rsp + 8], 5
0x00005435      e979f3ffff     jmp 0x47b3
0x0000543a      c644240e01     mov byte [rsp + 0xe], 1
0x0000543f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005444      4531e4         xor r12d, r12d
0x00005447      48c744245000.  mov qword [rsp + 0x50], 0
0x00005450      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00005455      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00005458      c644240d01     mov byte [rsp + 0xd], 1
0x0000545d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005466      48c744244800.  mov qword [rsp + 0x48], 0
0x0000546f      e93ff3ffff     jmp 0x47b3
0x00005474      837c24080a     cmp dword [rsp + 8], 0xa
0x00005479      7456           je 0x54d1
0x0000547b      488d353d1701.  lea rsi, [0x00016bbf]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00005482      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00005484      ba05000000     mov edx, 5
0x00005489      e862c7ffff     call sym.imp.dcgettext
0x0000548e      4889c1         mov rcx, rax
0x00005491      4889442468     mov qword [rsp + 0x68], rax
0x00005496      488d05221701.  lea rax, [0x00016bbf]                   ; "`"
0x0000549d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000054a0      0f8498030000   je 0x583e
0x000054a6      488d35101701.  lea rsi, [0x00016bbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000054ad      31ff           xor edi, edi
0x000054af      ba05000000     mov edx, 5
0x000054b4      e837c7ffff     call sym.imp.dcgettext
0x000054b9      4889c1         mov rcx, rax
0x000054bc      4889442460     mov qword [rsp + 0x60], rax
0x000054c1      488d05f51601.  lea rax, [0x00016bbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000054c8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000054cb      0f8483030000   je 0x5854
0x000054d1      4531ff         xor r15d, r15d
0x000054d4      85db           test ebx, ebx
0x000054d6      0f84c1010000   je 0x569d
0x000054dc      85db           test ebx, ebx
0x000054de      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000054e3      0f9544240f     setne byte [rsp + 0xf]
0x000054e8      4531e4         xor r12d, r12d
0x000054eb      4889df         mov rdi, rbx
0x000054ee      e81dc7ffff     call sym.imp.strlen
0x000054f3      48895c2448     mov qword [rsp + 0x48], rbx
0x000054f8      4889442418     mov qword [rsp + 0x18], rax
0x000054fd      c644240e01     mov byte [rsp + 0xe], 1
0x00005502      c644247c00     mov byte [rsp + 0x7c], 0
0x00005507      48c744245000.  mov qword [rsp + 0x50], 0
0x00005510      c644240d01     mov byte [rsp + 0xd], 1
0x00005515      e999f2ffff     jmp 0x47b3
0x0000551a      c644240e01     mov byte [rsp + 0xe], 1
0x0000551f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005524      4531e4         xor r12d, r12d
0x00005527      48c744245000.  mov qword [rsp + 0x50], 0
0x00005530      c644240f00     mov byte [rsp + 0xf], 0
0x00005535      4531ff         xor r15d, r15d
0x00005538      c644240d00     mov byte [rsp + 0xd], 0
0x0000553d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005546      48c744244800.  mov qword [rsp + 0x48], 0
0x0000554f      e95ff2ffff     jmp 0x47b3
0x00005554      c644240e01     mov byte [rsp + 0xe], 1
0x00005559      c644247c00     mov byte [rsp + 0x7c], 0
0x0000555e      4531e4         xor r12d, r12d
0x00005561      48c744245000.  mov qword [rsp + 0x50], 0
0x0000556a      c644240f01     mov byte [rsp + 0xf], 1
0x0000556f      c644240d01     mov byte [rsp + 0xd], 1
0x00005574      e91af2ffff     jmp 0x4793
0x00005579      4d39fd         cmp r13, r15
0x0000557c      7605           jbe 0x5583
0x0000557e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00005583      488d4102       lea rax, [rcx + 2]
0x00005587      4939c5         cmp r13, rax
0x0000558a      7606           jbe 0x5592
0x0000558c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00005592      4489e0         mov eax, r12d
0x00005595      4c8d7903       lea r15, [rcx + 3]
0x00005599      4531e4         xor r12d, r12d
0x0000559c      bb30000000     mov ebx, 0x30                           ; '0'
0x000055a1      e962f3ffff     jmp 0x4908
0x000055a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000055b0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000055b5      4c89dd         mov rbp, r11
0x000055b8      885c240d       mov byte [rsp + 0xd], bl
0x000055bc      e9a8fcffff     jmp 0x5269
0x000055c1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000055c6      4531e4         xor r12d, r12d
0x000055c9      e902fbffff     jmp 0x50d0
0x000055ce      4531d2         xor r10d, r10d
0x000055d1      e9b7fbffff     jmp 0x518d
0x000055d6      48c744245000.  mov qword [rsp + 0x50], 0
0x000055df      c644240e01     mov byte [rsp + 0xe], 1
0x000055e4      4531e4         xor r12d, r12d
0x000055e7      c644247c00     mov byte [rsp + 0x7c], 0
0x000055ec      e9dafdffff     jmp 0x53cb
0x000055f1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000055f6      4c89f6         mov rsi, r14
0x000055f9      4c89e9         mov rcx, r13
0x000055fc      4889d8         mov rax, rbx
0x000055ff      4889df         mov rdi, rbx
0x00005602      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00005608      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000560d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00005615      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00005618      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000561e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005626      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000562b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005630      7326           jae 0x5658
0x00005632      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005635      7510           jne 0x5647
0x00005637      eb1f           jmp 0x5658
0x00005639      0f1f80000000.  nop dword [rax]
0x00005640      41803c0100     cmp byte [r9 + rax], 0
0x00005645      740e           je 0x5655
0x00005647      4883c001       add rax, 1
0x0000564b      488d540500     lea rdx, [rbp + rax]
0x00005650      4939d3         cmp r11, rdx
0x00005653      77eb           ja 0x5640
0x00005655      4889c7         mov rdi, rax
0x00005658      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000565d      4531e4         xor r12d, r12d
0x00005660      e961faffff     jmp 0x50c6
0x00005665      4889df         mov rdi, rbx
0x00005668      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000566e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005673      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005679      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005681      4531e4         xor r12d, r12d
0x00005684      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005689      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000568e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005693      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005698      e929faffff     jmp 0x50c6
0x0000569d      488b542468     mov rdx, qword [rsp + 0x68]
0x000056a2      0fb602         movzx eax, byte [rdx]
0x000056a5      84c0           test al, al
0x000056a7      0f842ffeffff   je 0x54dc
0x000056ad      0f1f00         nop dword [rax]
0x000056b0      4d39fd         cmp r13, r15
0x000056b3      7604           jbe 0x56b9
0x000056b5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000056b9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000056bd      420fb6043a     movzx eax, byte [rdx + r15]
0x000056c2      84c0           test al, al
0x000056c4      75ea           jne 0x56b0
0x000056c6      e911feffff     jmp 0x54dc
0x000056cb      89d0           mov eax, edx
0x000056cd      e955f5ffff     jmp 0x4c27
0x000056d2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000056d6      80fb3e         cmp bl, 0x3e
0x000056d9      0f8771f8ffff   ja 0x4f50
0x000056df      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000056e9      480fa3d8       bt rax, rbx
0x000056ed      0f835df8ffff   jae 0x4f50
0x000056f3      807c240f00     cmp byte [rsp + 0xf], 0
0x000056f8      0f85e4010000   jne 0x58e2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000056fe      4d39fd         cmp r13, r15
0x00005701      7605           jbe 0x5708
0x00005703      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00005708      498d4701       lea rax, [r15 + 1]
0x0000570c      4939c5         cmp r13, rax
0x0000570f      7606           jbe 0x5717
0x00005711      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005717      498d4702       lea rax, [r15 + 2]
0x0000571b      4939c5         cmp r13, rax
0x0000571e      7606           jbe 0x5726
0x00005720      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005726      498d4703       lea rax, [r15 + 3]
0x0000572a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000572d      7606           jbe 0x5735
0x0000572f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005735      4983c704       add r15, 4
0x00005739      31d2           xor edx, edx
0x0000573b      4531e4         xor r12d, r12d
0x0000573e      31c0           xor eax, eax
0x00005740      4889cd         mov rbp, rcx
0x00005743      e9c0f1ffff     jmp 0x4908
0x00005748      85db           test ebx, ebx
0x0000574a      0f8488010000   je 0x58d8
0x00005750      488d05661401.  lea rax, [0x00016bbd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005757      c644240e01     mov byte [rsp + 0xe], 1
0x0000575c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005761      4531e4         xor r12d, r12d
0x00005764      48c744245000.  mov qword [rsp + 0x50], 0
0x0000576d      c644240f01     mov byte [rsp + 0xf], 1
0x00005772      c644240d00     mov byte [rsp + 0xd], 0
0x00005777      48c744241801.  mov qword [rsp + 0x18], 1
0x00005780      4531ff         xor r15d, r15d
0x00005783      4889442448     mov qword [rsp + 0x48], rax
0x00005788      e926f0ffff     jmp 0x47b3
0x0000578d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00005790      4c89dd         mov rbp, r11
0x00005793      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005798      e9ccfaffff     jmp 0x5269
0x0000579d      488d05171401.  lea rax, str.l______l                   ; 0x16bbb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000057a4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000057a9      c644247c00     mov byte [rsp + 0x7c], 0
0x000057ae      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000057b1      48c744245000.  mov qword [rsp + 0x50], 0
0x000057ba      c644240f01     mov byte [rsp + 0xf], 1
0x000057bf      c644240d01     mov byte [rsp + 0xd], 1
0x000057c4      48c744241801.  mov qword [rsp + 0x18], 1
0x000057cd      4531ff         xor r15d, r15d
0x000057d0      4889442448     mov qword [rsp + 0x48], rax
0x000057d5      e9d9efffff     jmp 0x47b3
0x000057da      89d0           mov eax, edx
0x000057dc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000057e1      4885db         test rbx, rbx
0x000057e4      742c           je 0x5812
0x000057e6      84c0           test al, al
0x000057e8      7428           je 0x5812
0x000057ea      0fb60b         movzx ecx, byte [rbx]
0x000057ed      4889d8         mov rax, rbx
0x000057f0      84c9           test cl, cl
0x000057f2      741e           je 0x5812
0x000057f4      4c89fa         mov rdx, r15
0x000057f7      4c29f8         sub rax, r15
0x000057fa      4939d5         cmp r13, rdx
0x000057fd      7604           jbe 0x5803
0x000057ff      41880c16       mov byte [r14 + rdx], cl
0x00005803      4883c201       add rdx, 1
0x00005807      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000580b      84c9           test cl, cl
0x0000580d      75eb           jne 0x57fa
0x0000580f      4989d7         mov r15, rdx
0x00005812      4d39fd         cmp r13, r15
0x00005815      0f869efaffff   jbe 0x52b9
0x0000581b      43c6043e00     mov byte [r14 + r15], 0
0x00005820      e994faffff     jmp 0x52b9
0x00005825      837c240802     cmp dword [rsp + 8], 2
0x0000582a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000582f      4c89dd         mov rbp, r11
0x00005832      0f94c0         sete al
0x00005835      885c240d       mov byte [rsp + 0xd], bl
0x00005839      e92bfaffff     jmp 0x5269
0x0000583e      8b742408       mov esi, dword [rsp + 8]
0x00005842      4889cf         mov rdi, rcx
0x00005845      e8a6edffff     call sym.gettext_quote.part.1
0x0000584a      4889442468     mov qword [rsp + 0x68], rax
0x0000584f      e952fcffff     jmp 0x54a6
0x00005854      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005858      4889cf         mov rdi, rcx
0x0000585b      e890edffff     call sym.gettext_quote.part.1
0x00005860      4889442460     mov qword [rsp + 0x60], rax
0x00005865      e967fcffff     jmp 0x54d1
0x0000586a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000586f      4c89dd         mov rbp, r11
0x00005872      89d0           mov eax, edx
0x00005874      885c240d       mov byte [rsp + 0xd], bl
0x00005878      e9ecf9ffff     jmp 0x5269
0x0000587d      4883ec08       sub rsp, 8
0x00005881      41b805000000   mov r8d, 5
0x00005887      4c89d9         mov rcx, r11
0x0000588a      ff742468       push qword [rsp + 0x68]
0x0000588e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00005892      4c89f7         mov rdi, r14
0x00005895      ff742438       push qword [rsp + 0x38]
0x00005899      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000058a1      488b542430     mov rdx, qword [rsp + 0x30]
0x000058a6      488b742470     mov rsi, qword [rsp + 0x70]
0x000058ab      e830eeffff     call sym.quotearg_buffer_restyled
0x000058b0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000058b4      4989c7         mov r15, rax
0x000058b7      e9fdf9ffff     jmp 0x52b9
0x000058bc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000058c1      e916ffffff     jmp 0x57dc
0x000058c6      c74424080200.  mov dword [rsp + 8], 2
0x000058ce      e996f9ffff     jmp 0x5269
0x000058d3      e848c3ffff     call sym.imp.__stack_chk_fail
0x000058d8      c644240d00     mov byte [rsp + 0xd], 0
0x000058dd      e96ffaffff     jmp 0x5351
0x000058e2      4c89dd         mov rbp, r11
0x000058e5      e996f9ffff     jmp 0x5280
0x000058ea      c644240e01     mov byte [rsp + 0xe], 1
0x000058ef      31c0           xor eax, eax
0x000058f1      4531e4         xor r12d, r12d
0x000058f4      48c744245000.  mov qword [rsp + 0x50], 0
0x000058fd      e9a2f5ffff     jmp 0x4ea4
0x00005902      4c89ea         mov rdx, r13
0x00005905      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000590a      e9f3f5ffff     jmp 0x4f02
0x0000590f      e8fcc1ffff     call sym.imp.abort
0x00005914      6690           nop
0x00005916      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00005920      4157           push r15
0x00005922      4156           push r14
0x00005924      4c63ff         movsxd r15, edi
0x00005927      4155           push r13
0x00005929      4154           push r12
0x0000592b      4989d6         mov r14, rdx
0x0000592e      55             push rbp
0x0000592f      53             push rbx
0x00005930      4889cd         mov rbp, rcx
0x00005933      4883ec28       sub rsp, 0x28
0x00005937      4889742408     mov qword [rsp + 8], rsi
0x0000593c      e8dfc1ffff     call sym.imp.__errno_location
0x00005941      4989c5         mov r13, rax
0x00005944      8b00           mov eax, dword [rax]
0x00005946      4585ff         test r15d, r15d
0x00005949      488b1d306721.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x21c080:8]=0x21c090 obj.slotvec0
0x00005950      89442418       mov dword [rsp + 0x18], eax
0x00005954      0f8867010000   js 0x5ac1
0x0000595a      44393d176721.  cmp dword [obj.nslots], r15d            ; [0x21c078:4]=1
0x00005961      7f62           jg 0x59c5
0x00005963      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000596a      0f8456010000   je 0x5ac6
0x00005970      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005974      488d05156721.  lea rax, obj.slotvec0                   ; 0x21c090
0x0000597b      4963f4         movsxd rsi, r12d
0x0000597e      48c1e604       shl rsi, 4
0x00005982      4839c3         cmp rbx, rax
0x00005985      0f8415010000   je 0x5aa0
0x0000598b      4889df         mov rdi, rbx
0x0000598e      e8dd0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00005993      4889c3         mov rbx, rax
0x00005996      488905e36621.  mov qword [obj.slotvec], rax            ; [0x21c080:8]=0x21c090 obj.slotvec0
0x0000599d      48633dd46621.  movsxd rdi, dword [obj.nslots]          ; [0x21c078:4]=1
0x000059a4      4489e2         mov edx, r12d
0x000059a7      31f6           xor esi, esi
0x000059a9      29fa           sub edx, edi
0x000059ab      48c1e704       shl rdi, 4
0x000059af      4863d2         movsxd rdx, edx
0x000059b2      4801df         add rdi, rbx
0x000059b5      48c1e204       shl rdx, 4
0x000059b9      e8f2c2ffff     call sym.imp.memset
0x000059be      448925b36621.  mov dword [obj.nslots], r12d            ; [0x21c078:4]=1
0x000059c5      8b4504         mov eax, dword [rbp + 4]
0x000059c8      49c1e704       shl r15, 4
0x000059cc      4883ec08       sub rsp, 8
0x000059d0      4c01fb         add rbx, r15
0x000059d3      4c8d7d08       lea r15, [rbp + 8]
0x000059d7      448b4500       mov r8d, dword [rbp]
0x000059db      4c8b1b         mov r11, qword [rbx]
0x000059de      4c8b6308       mov r12, qword [rbx + 8]
0x000059e2      4c89f1         mov rcx, r14
0x000059e5      83c801         or eax, 1
0x000059e8      89442424       mov dword [rsp + 0x24], eax
0x000059ec      ff7530         push qword [rbp + 0x30]
0x000059ef      4189c1         mov r9d, eax
0x000059f2      ff7528         push qword [rbp + 0x28]
0x000059f5      4157           push r15
0x000059f7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000059fa      488b542428     mov rdx, qword [rsp + 0x28]
0x000059ff      4c89e7         mov rdi, r12
0x00005a02      4c895c2430     mov qword [rsp + 0x30], r11
0x00005a07      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00005a0c      4883c420       add rsp, 0x20
0x00005a10      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00005a15      4939c3         cmp r11, rax
0x00005a18      7767           ja 0x5a81
0x00005a1a      488d7001       lea rsi, [rax + 1]
0x00005a1e      488d051b6821.  lea rax, obj.slot0                      ; 0x21c240
0x00005a25      4939c4         cmp r12, rax
0x00005a28      488933         mov qword [rbx], rsi
0x00005a2b      7412           je 0x5a3f
0x00005a2d      4c89e7         mov rdi, r12
0x00005a30      4889742410     mov qword [rsp + 0x10], rsi
0x00005a35      e8c6c0ffff     call sym.imp.free
0x00005a3a      488b742410     mov rsi, qword [rsp + 0x10]
0x00005a3f      4889f7         mov rdi, rsi
0x00005a42      4889742410     mov qword [rsp + 0x10], rsi
0x00005a47      e8c40e0000     call sym.xmalloc
0x00005a4c      4883ec08       sub rsp, 8
0x00005a50      48894308       mov qword [rbx + 8], rax
0x00005a54      448b4500       mov r8d, dword [rbp]
0x00005a58      ff7530         push qword [rbp + 0x30]
0x00005a5b      ff7528         push qword [rbp + 0x28]
0x00005a5e      4c89f1         mov rcx, r14
0x00005a61      4157           push r15
0x00005a63      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005a68      4889c7         mov rdi, rax
0x00005a6b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005a70      488b742430     mov rsi, qword [rsp + 0x30]
0x00005a75      4989c4         mov r12, rax
0x00005a78      e863ecffff     call sym.quotearg_buffer_restyled
0x00005a7d      4883c420       add rsp, 0x20
0x00005a81      8b442418       mov eax, dword [rsp + 0x18]
0x00005a85      41894500       mov dword [r13], eax
0x00005a89      4883c428       add rsp, 0x28
0x00005a8d      4c89e0         mov rax, r12
0x00005a90      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00005a91      5d             pop rbp
0x00005a92      415c           pop r12
0x00005a94      415d           pop r13
0x00005a96      415e           pop r14
0x00005a98      415f           pop r15
0x00005a9a      c3             ret
0x00005a9b      0f1f440000     nop dword [rax + rax]
0x00005aa0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00005aa2      e8c90e0000     call sym.xrealloc
0x00005aa7      660f6f05e165.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00005aaf      4889c3         mov rbx, rax
0x00005ab2      488905c76521.  mov qword [obj.slotvec], rax            ; [0x21c080:8]=0x21c090 obj.slotvec0
0x00005ab9      0f1100         movups xmmword [rax], xmm0
0x00005abc      e9dcfeffff     jmp 0x599d
0x00005ac1      e84ac0ffff     call sym.imp.abort
0x00005ac6      e845ddffff     call sym.xalloc_die
0x00005acb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00005ad0      4154           push r12
0x00005ad2      55             push rbp
0x00005ad3      53             push rbx
0x00005ad4      4889fb         mov rbx, rdi
0x00005ad7      e844c0ffff     call sym.imp.__errno_location
0x00005adc      448b20         mov r12d, dword [rax]
0x00005adf      4889c5         mov rbp, rax
0x00005ae2      488d05576821.  lea rax, obj.default_quoting_options    ; 0x21c340
0x00005ae9      4885db         test rbx, rbx
0x00005aec      be38000000     mov esi, 0x38                           ; '8'
0x00005af1      480f44d8       cmove rbx, rax
0x00005af5      4889df         mov rdi, rbx
0x00005af8      e813100000     call sym.xmemdup
0x00005afd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005b01      5b             pop rbx
0x00005b02      5d             pop rbp
0x00005b03      415c           pop r12
0x00005b05      c3             ret
0x00005b06      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00005b10      488d05296821.  lea rax, obj.default_quoting_options    ; 0x21c340
0x00005b17      4885ff         test rdi, rdi
0x00005b1a      480f44f8       cmove rdi, rax
0x00005b1e      8b07           mov eax, dword [rdi]
0x00005b20      c3             ret
0x00005b21      0f1f440000     nop dword [rax + rax]
0x00005b26      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00005b30      488d05096821.  lea rax, obj.default_quoting_options    ; 0x21c340
0x00005b37      4885ff         test rdi, rdi
0x00005b3a      480f44f8       cmove rdi, rax
0x00005b3e      8937           mov dword [rdi], esi
0x00005b40      c3             ret
0x00005b41      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005b50      488d05e96721.  lea rax, obj.default_quoting_options    ; 0x21c340
0x00005b57      4885ff         test rdi, rdi
0x00005b5a      89f1           mov ecx, esi
0x00005b5c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005b60      89f0           mov eax, esi
0x00005b62      83e11f         and ecx, 0x1f
0x00005b65      c0e805         shr al, 5
0x00005b68      0fb6c0         movzx eax, al
0x00005b6b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00005b70      8b37           mov esi, dword [rdi]
0x00005b72      89f0           mov eax, esi
0x00005b74      d3e8           shr eax, cl
0x00005b76      31c2           xor edx, eax
0x00005b78      83e001         and eax, 1
0x00005b7b      83e201         and edx, 1
0x00005b7e      d3e2           shl edx, cl
0x00005b80      31f2           xor edx, esi
0x00005b82      8917           mov dword [rdi], edx
0x00005b84      c3             ret
0x00005b85      90             nop
0x00005b86      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00005b90      488d05a96721.  lea rax, obj.default_quoting_options    ; 0x21c340
0x00005b97      4885ff         test rdi, rdi
0x00005b9a      480f44f8       cmove rdi, rax
0x00005b9e      8b4704         mov eax, dword [rdi + 4]
0x00005ba1      897704         mov dword [rdi + 4], esi
0x00005ba4      c3             ret
0x00005ba5      90             nop
0x00005ba6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00005bb0      488d05896721.  lea rax, obj.default_quoting_options    ; 0x21c340
0x00005bb7      4885ff         test rdi, rdi
0x00005bba      480f44f8       cmove rdi, rax
0x00005bbe      4885f6         test rsi, rsi
0x00005bc1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00005bc7      740e           je 0x5bd7
0x00005bc9      4885d2         test rdx, rdx
0x00005bcc      7409           je 0x5bd7
0x00005bce      48897728       mov qword [rdi + 0x28], rsi
0x00005bd2      48895730       mov qword [rdi + 0x30], rdx
0x00005bd6      c3             ret
0x00005bd7      4883ec08       sub rsp, 8
0x00005bdb      e830bfffff     call sym.imp.abort
;-- quotearg_buffer:
0x00005be0      4157           push r15
0x00005be2      4156           push r14
0x00005be4      488d05556721.  lea rax, obj.default_quoting_options    ; 0x21c340
0x00005beb      4155           push r13
0x00005bed      4154           push r12
0x00005bef      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00005bf2      55             push rbp
0x00005bf3      53             push rbx
0x00005bf4      4c89c3         mov rbx, r8
0x00005bf7      4989f6         mov r14, rsi
0x00005bfa      4989d7         mov r15, rdx
0x00005bfd      4883ec18       sub rsp, 0x18
0x00005c01      4d85c0         test r8, r8
0x00005c04      480f44d8       cmove rbx, rax
0x00005c08      48894c2408     mov qword [rsp + 8], rcx
0x00005c0d      e80ebfffff     call sym.imp.__errno_location
0x00005c12      448b20         mov r12d, dword [rax]
0x00005c15      4889c5         mov rbp, rax
0x00005c18      488d4308       lea rax, [rbx + 8]
0x00005c1c      4883ec08       sub rsp, 8
0x00005c20      448b4b04       mov r9d, dword [rbx + 4]
0x00005c24      ff7330         push qword [rbx + 0x30]
0x00005c27      448b03         mov r8d, dword [rbx]
0x00005c2a      ff7328         push qword [rbx + 0x28]
0x00005c2d      4c89fa         mov rdx, r15
0x00005c30      50             push rax
0x00005c31      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005c36      4c89f6         mov rsi, r14
0x00005c39      4c89ef         mov rdi, r13
0x00005c3c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005c41      44896500       mov dword [rbp], r12d
0x00005c45      4883c438       add rsp, 0x38
0x00005c49      5b             pop rbx
0x00005c4a      5d             pop rbp
0x00005c4b      415c           pop r12
0x00005c4d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00005c4f      415e           pop r14
0x00005c51      415f           pop r15
0x00005c53      c3             ret
0x00005c54      6690           nop
0x00005c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005c60      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005c62      4156           push r14
0x00005c64      488d05d56621.  lea rax, obj.default_quoting_options    ; 0x21c340
0x00005c6b      4155           push r13
0x00005c6d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00005c6f      4989d4         mov r12, rdx
0x00005c72      55             push rbp
0x00005c73      53             push rbx
0x00005c74      4889cb         mov rbx, rcx
0x00005c77      4989fe         mov r14, rdi
0x00005c7a      4989f7         mov r15, rsi
0x00005c7d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005c81      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005c84      480f44d8       cmove rbx, rax
0x00005c88      31ed           xor ebp, ebp
0x00005c8a      e891beffff     call sym.imp.__errno_location
0x00005c8f      4d85e4         test r12, r12
0x00005c92      4989c5         mov r13, rax
0x00005c95      8b00           mov eax, dword [rax]
0x00005c97      400f94c5       sete bpl
0x00005c9b      0b6b04         or ebp, dword [rbx + 4]
0x00005c9e      4c8d5308       lea r10, [rbx + 8]
0x00005ca2      4883ec08       sub rsp, 8
0x00005ca6      448b03         mov r8d, dword [rbx]
0x00005ca9      4c89f9         mov rcx, r15
0x00005cac      89442414       mov dword [rsp + 0x14], eax
0x00005cb0      ff7330         push qword [rbx + 0x30]
0x00005cb3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005cb6      ff7328         push qword [rbx + 0x28]
0x00005cb9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00005cbb      31f6           xor esi, esi
0x00005cbd      4189e9         mov r9d, ebp
0x00005cc0      31ff           xor edi, edi
0x00005cc2      4c89542440     mov qword [rsp + 0x40], r10
0x00005cc7      e814eaffff     call sym.quotearg_buffer_restyled
0x00005ccc      488d7001       lea rsi, [rax + 1]
0x00005cd0      4889442448     mov qword [rsp + 0x48], rax
0x00005cd5      4883c420       add rsp, 0x20
0x00005cd9      4889f7         mov rdi, rsi
0x00005cdc      4889742418     mov qword [rsp + 0x18], rsi
0x00005ce1      e82a0c0000     call sym.xmalloc
0x00005ce6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00005ceb      4883ec08       sub rsp, 8
0x00005cef      ff7330         push qword [rbx + 0x30]
0x00005cf2      ff7328         push qword [rbx + 0x28]
0x00005cf5      4c8b542438     mov r10, qword [rsp + 0x38]
0x00005cfa      4189e9         mov r9d, ebp
0x00005cfd      448b03         mov r8d, dword [rbx]
0x00005d00      4c89f9         mov rcx, r15
0x00005d03      4c89f2         mov rdx, r14
0x00005d06      4889c7         mov rdi, rax
0x00005d09      4152           push r10
0x00005d0b      488b742438     mov rsi, qword [rsp + 0x38]
0x00005d10      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00005d15      8b44242c       mov eax, dword [rsp + 0x2c]
0x00005d19      4883c420       add rsp, 0x20
0x00005d1d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005d20      41894500       mov dword [r13], eax
0x00005d24      7409           je 0x5d2f
0x00005d26      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00005d2b      4d891c24       mov qword [r12], r11
0x00005d2f      488b442410     mov rax, qword [rsp + 0x10]
0x00005d34      4883c438       add rsp, 0x38
0x00005d38      5b             pop rbx
0x00005d39      5d             pop rbp
0x00005d3a      415c           pop r12
0x00005d3c      415d           pop r13
0x00005d3e      415e           pop r14
0x00005d40      415f           pop r15
0x00005d42      c3             ret
0x00005d43      0f1f00         nop dword [rax]
0x00005d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005d50      4889d1         mov rcx, rdx
0x00005d53      31d2           xor edx, edx
0x00005d55      e906ffffff     jmp sym.quotearg_alloc_mem
0x00005d5a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005d60      8b0512632100   mov eax, dword [obj.nslots]             ; [0x21c078:4]=1
0x00005d66      4154           push r12
0x00005d68      4c8b25116321.  mov r12, qword [obj.slotvec]            ; [0x21c080:8]=0x21c090 obj.slotvec0
0x00005d6f      55             push rbp
0x00005d70      53             push rbx
0x00005d71      83f801         cmp eax, 1
0x00005d74      7e2b           jle 0x5da1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005d76      83e802         sub eax, 2
0x00005d79      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005d7e      48c1e004       shl rax, 4
0x00005d82      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005d87      660f1f840000.  nop word [rax + rax]
0x00005d90      488b3b         mov rdi, qword [rbx]
0x00005d93      4883c310       add rbx, 0x10
0x00005d97      e864bdffff     call sym.imp.free
0x00005d9c      4839eb         cmp rbx, rbp
0x00005d9f      75ef           jne 0x5d90
0x00005da1      498b7c2408     mov rdi, qword [r12 + 8]
0x00005da6      488d1d936421.  lea rbx, obj.slot0                      ; 0x21c240
0x00005dad      4839df         cmp rdi, rbx
0x00005db0      7417           je 0x5dc9
0x00005db2      e849bdffff     call sym.imp.free
0x00005db7      48c705ce6221.  mov qword [obj.slotvec0], 0x100         ; [0x21c090:8]=256
0x00005dc2      48891dcf6221.  mov qword [0x0021c098], rbx             ; [0x21c098:8]=0x21c240 obj.slot0
0x00005dc9      488d1dc06221.  lea rbx, obj.slotvec0                   ; 0x21c090
0x00005dd0      4939dc         cmp r12, rbx
0x00005dd3      740f           je 0x5de4
0x00005dd5      4c89e7         mov rdi, r12
0x00005dd8      e823bdffff     call sym.imp.free
0x00005ddd      48891d9c6221.  mov qword [obj.slotvec], rbx            ; [0x21c080:8]=0x21c090 obj.slotvec0
0x00005de4      5b             pop rbx
0x00005de5      c70589622100.  mov dword [obj.nslots], 1               ; [0x21c078:4]=1
0x00005def      5d             pop rbp
0x00005df0      415c           pop r12
0x00005df2      c3             ret
0x00005df3      0f1f00         nop dword [rax]
0x00005df6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00005e00      488d0d396521.  lea rcx, obj.default_quoting_options    ; 0x21c340
0x00005e07      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005e0e      e90dfbffff     jmp sym.quotearg_n_options
0x00005e13      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00005e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005e20      488d0d196521.  lea rcx, obj.default_quoting_options    ; 0x21c340
0x00005e27      e9f4faffff     jmp sym.quotearg_n_options
0x00005e2c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005e30      488d0d096521.  lea rcx, obj.default_quoting_options    ; 0x21c340
0x00005e37      4889fe         mov rsi, rdi
0x00005e3a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005e41      31ff           xor edi, edi
0x00005e43      e9d8faffff     jmp sym.quotearg_n_options
0x00005e48      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005e50      488d0de96421.  lea rcx, obj.default_quoting_options    ; 0x21c340
0x00005e57      4889f2         mov rdx, rsi
0x00005e5a      4889fe         mov rsi, rdi
0x00005e5d      31ff           xor edi, edi
0x00005e5f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005e64      6690           nop
0x00005e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005e70      4883ec48       sub rsp, 0x48
0x00005e74      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005e77      64488b142528.  mov rdx, qword fs:[0x28]
0x00005e80      4889542438     mov qword [rsp + 0x38], rdx
0x00005e85      31d2           xor edx, edx
0x00005e87      83fe0a         cmp esi, 0xa
0x00005e8a      7468           je 0x5ef4
0x00005e8c      893424         mov dword [rsp], esi
0x00005e8f      4889e1         mov rcx, rsp
0x00005e92      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005e99      4889c6         mov rsi, rax
0x00005e9c      48c744240400.  mov qword [rsp + 4], 0
0x00005ea5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005eae      48c744241400.  mov qword [rsp + 0x14], 0
0x00005eb7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005ec0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005ec9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005ed2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005eda      e841faffff     call sym.quotearg_n_options
0x00005edf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005ee4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005eed      750a           jne 0x5ef9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00005eef      4883c448       add rsp, 0x48
0x00005ef3      c3             ret
0x00005ef4      e817bcffff     call sym.imp.abort
0x00005ef9      e822bdffff     call sym.imp.__stack_chk_fail
0x00005efe      6690           nop
;-- quotearg_n_style_mem:
0x00005f00      4883ec48       sub rsp, 0x48
0x00005f04      4889d0         mov rax, rdx
0x00005f07      4889ca         mov rdx, rcx
0x00005f0a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005f13      48894c2438     mov qword [rsp + 0x38], rcx
0x00005f18      31c9           xor ecx, ecx
0x00005f1a      83fe0a         cmp esi, 0xa
0x00005f1d      7461           je 0x5f80
0x00005f1f      893424         mov dword [rsp], esi
0x00005f22      4889e1         mov rcx, rsp
0x00005f25      4889c6         mov rsi, rax
0x00005f28      48c744240400.  mov qword [rsp + 4], 0
0x00005f31      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005f3a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005f43      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005f4c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005f55      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005f5e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005f66      e8b5f9ffff     call sym.quotearg_n_options
0x00005f6b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005f70      644833142528.  xor rdx, qword fs:[0x28]
0x00005f79      750a           jne 0x5f85
0x00005f7b      4883c448       add rsp, 0x48
0x00005f7f      c3             ret
0x00005f80      e88bbbffff     call sym.imp.abort
0x00005f85      e896bcffff     call sym.imp.__stack_chk_fail
0x00005f8a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005f90      4889f2         mov rdx, rsi
0x00005f93      89fe           mov esi, edi
0x00005f95      31ff           xor edi, edi
0x00005f97      e9d4feffff     jmp sym.quotearg_n_style
0x00005f9c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005fa0      4889d1         mov rcx, rdx
0x00005fa3      4889f2         mov rdx, rsi
0x00005fa6      89fe           mov esi, edi
0x00005fa8      31ff           xor edi, edi
0x00005faa      e951ffffff     jmp sym.quotearg_n_style_mem
0x00005faf      90             nop
;-- quotearg_char_mem:
0x00005fb0      4883ec48       sub rsp, 0x48
0x00005fb4      89d1           mov ecx, edx
0x00005fb6      64488b042528.  mov rax, qword fs:[0x28]
0x00005fbf      4889442438     mov qword [rsp + 0x38], rax
0x00005fc4      31c0           xor eax, eax
0x00005fc6      488b05a36321.  mov rax, qword [0x0021c370]             ; [0x21c370:8]=0
0x00005fcd      4989e0         mov r8, rsp
0x00005fd0      83e11f         and ecx, 0x1f
0x00005fd3      660f6f056563.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005fdb      4889442430     mov qword [rsp + 0x30], rax
0x00005fe0      89d0           mov eax, edx
0x00005fe2      0f290424       movaps xmmword [rsp], xmm0
0x00005fe6      c0e805         shr al, 5
0x00005fe9      0fb6c0         movzx eax, al
0x00005fec      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005ff1      660f6f055763.  movdqa xmm0, xmmword [0x0021c350]
0x00005ff9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005ffe      660f6f055a63.  movdqa xmm0, xmmword [0x0021c360]
0x00006006      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000600b      418b11         mov edx, dword [r9]
0x0000600e      89d0           mov eax, edx
0x00006010      d3e8           shr eax, cl
0x00006012      f7d0           not eax
0x00006014      83e001         and eax, 1
0x00006017      d3e0           shl eax, cl
0x00006019      4c89c1         mov rcx, r8
0x0000601c      31d0           xor eax, edx
0x0000601e      4889f2         mov rdx, rsi
0x00006021      4889fe         mov rsi, rdi
0x00006024      418901         mov dword [r9], eax
0x00006027      31ff           xor edi, edi
0x00006029      e8f2f8ffff     call sym.quotearg_n_options
0x0000602e      488b742438     mov rsi, qword [rsp + 0x38]
0x00006033      644833342528.  xor rsi, qword fs:[0x28]
0x0000603c      7505           jne 0x6043
0x0000603e      4883c448       add rsp, 0x48
0x00006042      c3             ret
0x00006043      e8d8bbffff     call sym.imp.__stack_chk_fail
0x00006048      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00006050      400fbed6       movsx edx, sil
0x00006054      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000605b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00006060      ba3a000000     mov edx, 0x3a                           ; ':'
0x00006065      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000606c      e93fffffff     jmp sym.quotearg_char_mem
0x00006071      0f1f440000     nop dword [rax + rax]
0x00006076      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00006080      ba3a000000     mov edx, 0x3a                           ; ':'
0x00006085      e926ffffff     jmp sym.quotearg_char_mem
0x0000608a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00006090      4883ec48       sub rsp, 0x48
0x00006094      4889d0         mov rax, rdx
0x00006097      64488b142528.  mov rdx, qword fs:[0x28]
0x000060a0      4889542438     mov qword [rsp + 0x38], rdx
0x000060a5      31d2           xor edx, edx
0x000060a7      83fe0a         cmp esi, 0xa
0x000060aa      7468           je 0x6114
0x000060ac      893424         mov dword [rsp], esi
0x000060af      4889e1         mov rcx, rsp
0x000060b2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000060b9      4889c6         mov rsi, rax
0x000060bc      48c744240400.  mov qword [rsp + 4], 0
0x000060c5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000060ce      48c744241400.  mov qword [rsp + 0x14], 0
0x000060d7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000060e0      48c744242400.  mov qword [rsp + 0x24], 0
0x000060e9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000060f2      c74424340000.  mov dword [rsp + 0x34], 0
0x000060fa      e821f8ffff     call sym.quotearg_n_options
0x000060ff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00006104      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000610d      750a           jne 0x6119
0x0000610f      4883c448       add rsp, 0x48
0x00006113      c3             ret
0x00006114      e8f7b9ffff     call sym.imp.abort
0x00006119      e802bbffff     call sym.imp.__stack_chk_fail
0x0000611e      6690           nop
;-- quotearg_n_custom_mem:
0x00006120      4883ec48       sub rsp, 0x48
0x00006124      4989c9         mov r9, rcx
0x00006127      488b0d426221.  mov rcx, qword [0x0021c370]             ; [0x21c370:8]=0
0x0000612e      660f6f050a62.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00006136      64488b042528.  mov rax, qword fs:[0x28]
0x0000613f      4889442438     mov qword [rsp + 0x38], rax
0x00006144      31c0           xor eax, eax
0x00006146      0f290424       movaps xmmword [rsp], xmm0
0x0000614a      4885f6         test rsi, rsi
0x0000614d      48894c2430     mov qword [rsp + 0x30], rcx
0x00006152      c704240a0000.  mov dword [rsp], 0xa
0x00006159      660f6f05ef61.  movdqa xmm0, xmmword [0x0021c350]
0x00006161      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00006166      660f6f05f261.  movdqa xmm0, xmmword [0x0021c360]
0x0000616e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00006173      7432           je 0x61a7
0x00006175      4885d2         test rdx, rdx
0x00006178      742d           je 0x61a7
0x0000617a      4889742428     mov qword [rsp + 0x28], rsi
0x0000617f      4889542430     mov qword [rsp + 0x30], rdx
0x00006184      4889e1         mov rcx, rsp
0x00006187      4c89c2         mov rdx, r8
0x0000618a      4c89ce         mov rsi, r9
0x0000618d      e88ef7ffff     call sym.quotearg_n_options
0x00006192      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00006197      6448333c2528.  xor rdi, qword fs:[0x28]
0x000061a0      750a           jne 0x61ac
0x000061a2      4883c448       add rsp, 0x48
0x000061a6      c3             ret
0x000061a7      e864b9ffff     call sym.imp.abort
0x000061ac      e86fbaffff     call sym.imp.__stack_chk_fail
0x000061b1      0f1f440000     nop dword [rax + rax]
0x000061b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000061c0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000061c7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000061cc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000061d0      4889d1         mov rcx, rdx
0x000061d3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000061da      4889f2         mov rdx, rsi
0x000061dd      4889fe         mov rsi, rdi
0x000061e0      31ff           xor edi, edi
0x000061e2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000061e7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000061f0      4989c8         mov r8, rcx
0x000061f3      4889d1         mov rcx, rdx
0x000061f6      4889f2         mov rdx, rsi
0x000061f9      4889fe         mov rsi, rdi
0x000061fc      31ff           xor edi, edi
0x000061fe      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00006203      0f1f00         nop dword [rax]
0x00006206      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00006210      488d0d295e21.  lea rcx, obj.quote_quoting_options      ; 0x21c040
0x00006217      e904f7ffff     jmp sym.quotearg_n_options
0x0000621c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00006220      488d0d195e21.  lea rcx, obj.quote_quoting_options      ; 0x21c040
0x00006227      4889f2         mov rdx, rsi
0x0000622a      4889fe         mov rsi, rdi
0x0000622d      31ff           xor edi, edi
0x0000622f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00006234      6690           nop
0x00006236      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00006240      488d0df95d21.  lea rcx, obj.quote_quoting_options      ; 0x21c040
0x00006247      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000624e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00006253      0f1f00         nop dword [rax]
0x00006256      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00006260      488d0dd95d21.  lea rcx, obj.quote_quoting_options      ; 0x21c040
0x00006267      4889fe         mov rsi, rdi
0x0000626a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006271      31ff           xor edi, edi
0x00006273      e9a8f6ffff     jmp sym.quotearg_n_options
0x00006278      0f1f84000000.  nop dword [rax + rax]
;-- safe_read:
0x00006280      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00006282      4154           push r12
0x00006284      4189fd         mov r13d, edi
0x00006287      55             push rbp
0x00006288      53             push rbx
0x00006289      4989f4         mov r12, rsi
0x0000628c      4889d3         mov rbx, rdx
0x0000628f      4883ec08       sub rsp, 8
0x00006293      0f1f440000     nop dword [rax + rax]
0x00006298      4889da         mov rdx, rbx                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x0000629b      4c89e6         mov rsi, r12
0x0000629e      4489ef         mov edi, r13d
0x000062a1      e84abaffff     call sym.imp.read
0x000062a6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x000062a9      4889c5         mov rbp, rax                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x000062ac      7922           jns 0x62d0                              ; ../coreutils-8.31/lib/safe-read.c:62
0x000062ae      e86db8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x000062b3      8b00           mov eax, dword [rax]
0x000062b5      83f804         cmp eax, 4
0x000062b8      74de           je 0x6298
0x000062ba      4881fb0000f0.  cmp rbx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:66
0x000062c1      760d           jbe 0x62d0
0x000062c3      83f816         cmp eax, 0x16
0x000062c6      7508           jne 0x62d0
0x000062c8      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x000062cd      ebc9           jmp 0x6298
0x000062cf      90             nop
0x000062d0      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x000062d4      4889e8         mov rax, rbp
0x000062d7      5b             pop rbx
0x000062d8      5d             pop rbp
0x000062d9      415c           pop r12
0x000062db      415d           pop r13
0x000062dd      c3             ret
0x000062de      6690           nop
;-- dup_safer:
0x000062e0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x000062e5      31f6           xor esi, esi
0x000062e7      31c0           xor eax, eax
0x000062e9      e922150000     jmp sym.rpl_fcntl
0x000062ee      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x000062f0      4157           push r15
0x000062f2      4156           push r14
0x000062f4      4155           push r13
0x000062f6      4154           push r12
0x000062f8      4d89cc         mov r12, r9
0x000062fb      55             push rbp
0x000062fc      53             push rbx
0x000062fd      4889fd         mov rbp, rdi
0x00006300      4c89c3         mov rbx, r8
0x00006303      4883ec28       sub rsp, 0x28
0x00006307      4885f6         test rsi, rsi
0x0000630a      0f8418010000   je 0x6428
0x00006310      4989d0         mov r8, rdx
0x00006313      488d156e0d01.  lea rdx, [0x00017088]                   ; "%s (%s) %s\n"
0x0000631a      4989c9         mov r9, rcx
0x0000631d      31c0           xor eax, eax
0x0000631f      4889f1         mov rcx, rsi
0x00006322      be01000000     mov esi, 1
0x00006327      e8d4bbffff     call sym.imp.__fprintf_chk
0x0000632c      488d35680d01.  lea rsi, [0x0001709b]                   ; "(C)"
0x00006333      31ff           xor edi, edi
0x00006335      ba05000000     mov edx, 5
0x0000633a      e8b1b8ffff     call sym.imp.dcgettext
0x0000633f      488d157a1001.  lea rdx, obj.version_etc_copyright      ; 0x173c0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00006346      4889c1         mov rcx, rax
0x00006349      41b8e3070000   mov r8d, 0x7e3
0x0000634f      be01000000     mov esi, 1
0x00006354      4889ef         mov rdi, rbp
0x00006357      31c0           xor eax, eax
0x00006359      e8a2bbffff     call sym.imp.__fprintf_chk
0x0000635e      488d35c30d01.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x17128 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00006365      31ff           xor edi, edi
0x00006367      ba05000000     mov edx, 5
0x0000636c      e87fb8ffff     call sym.imp.dcgettext
0x00006371      4889ee         mov rsi, rbp
0x00006374      4889c7         mov rdi, rax
0x00006377      e8a4b9ffff     call sym.imp.fputs_unlocked
0x0000637c      4983fc09       cmp r12, 9
0x00006380      0f873a030000   ja 0x66c0
0x00006386      488d15f70f01.  lea rdx, [0x00017384]
0x0000638d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006391      4801d0         add rax, rdx
0x00006394      ffe0           jmp rax
0x00006396      662e0f1f8400.  nop word cs:[rax + rax]
0x000063a0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000063a4      488b4310       mov rax, qword [rbx + 0x10]
0x000063a8      488d35e90e01.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x17298 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000063af      4c8b4308       mov r8, qword [rbx + 8]
0x000063b3      ba05000000     mov edx, 5
0x000063b8      31ff           xor edi, edi
0x000063ba      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000063be      4c8b6328       mov r12, qword [rbx + 0x28]
0x000063c2      4c894c2410     mov qword [rsp + 0x10], r9
0x000063c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000063cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000063cf      48890424       mov qword [rsp], rax
0x000063d3      4c89442408     mov qword [rsp + 8], r8
0x000063d8      488b1b         mov rbx, qword [rbx]
0x000063db      e810b8ffff     call sym.imp.dcgettext
0x000063e0      4883ec08       sub rsp, 8
0x000063e4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000063e9      4889c2         mov rdx, rax
0x000063ec      4889d9         mov rcx, rbx
0x000063ef      be01000000     mov esi, 1
0x000063f4      4889ef         mov rdi, rbp
0x000063f7      31c0           xor eax, eax
0x000063f9      4151           push r9
0x000063fb      4155           push r13
0x000063fd      4154           push r12
0x000063ff      4157           push r15
0x00006401      4156           push r14
0x00006403      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006408      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000640d      e8eebaffff     call sym.imp.__fprintf_chk
0x00006412      4883c430       add rsp, 0x30
0x00006416      4883c428       add rsp, 0x28
0x0000641a      5b             pop rbx
0x0000641b      5d             pop rbp
0x0000641c      415c           pop r12
0x0000641e      415d           pop r13
0x00006420      415e           pop r14
0x00006422      415f           pop r15
0x00006424      c3             ret
0x00006425      0f1f00         nop dword [rax]
0x00006428      4989c8         mov r8, rcx
0x0000642b      4889d1         mov rcx, rdx
0x0000642e      488d155f0c01.  lea rdx, str.s__s                       ; 0x17094 ; "%s %s\n"
0x00006435      be01000000     mov esi, 1
0x0000643a      31c0           xor eax, eax
0x0000643c      e8bfbaffff     call sym.imp.__fprintf_chk
0x00006441      e9e6feffff     jmp 0x632c
0x00006446      662e0f1f8400.  nop word cs:[rax + rax]
0x00006450      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006454      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006458      488d35690e01.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x172c8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000645f      488b4310       mov rax, qword [rbx + 0x10]
0x00006463      4c8b4308       mov r8, qword [rbx + 8]
0x00006467      ba05000000     mov edx, 5
0x0000646c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006470      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006474      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006478      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000647c      488b1b         mov rbx, qword [rbx]
0x0000647f      4c89542418     mov qword [rsp + 0x18], r10
0x00006484      4c894c2410     mov qword [rsp + 0x10], r9
0x00006489      48890424       mov qword [rsp], rax
0x0000648d      4c89442408     mov qword [rsp + 8], r8
0x00006492      31ff           xor edi, edi
0x00006494      e857b7ffff     call sym.imp.dcgettext
0x00006499      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000649e      4152           push r10
0x000064a0      e93fffffff     jmp 0x63e4
0x000064a5      0f1f00         nop dword [rax]
0x000064a8      488b1b         mov rbx, qword [rbx]
0x000064ab      488d35ed0b01.  lea rsi, str.Written_by__s.             ; 0x1709f ; "Written by %s.\n"
0x000064b2      ba05000000     mov edx, 5
0x000064b7      31ff           xor edi, edi
0x000064b9      e832b7ffff     call sym.imp.dcgettext
0x000064be      4883c428       add rsp, 0x28
0x000064c2      4889d9         mov rcx, rbx
0x000064c5      4889ef         mov rdi, rbp
0x000064c8      5b             pop rbx
0x000064c9      5d             pop rbp
0x000064ca      415c           pop r12
0x000064cc      415d           pop r13
0x000064ce      415e           pop r14
0x000064d0      415f           pop r15
0x000064d2      4889c2         mov rdx, rax
0x000064d5      be01000000     mov esi, 1
0x000064da      31c0           xor eax, eax
0x000064dc      e91fbaffff     jmp sym.imp.__fprintf_chk
0x000064e1      0f1f80000000.  nop dword [rax]
0x000064e8      4c8b6308       mov r12, qword [rbx + 8]
0x000064ec      488d35bc0b01.  lea rsi, str.Written_by__s_and__s.      ; 0x170af ; "Written by %s and %s.\n"
0x000064f3      488b1b         mov rbx, qword [rbx]
0x000064f6      ba05000000     mov edx, 5
0x000064fb      31ff           xor edi, edi
0x000064fd      e8eeb6ffff     call sym.imp.dcgettext
0x00006502      4883c428       add rsp, 0x28
0x00006506      4d89e0         mov r8, r12
0x00006509      4889d9         mov rcx, rbx
0x0000650c      4889ef         mov rdi, rbp
0x0000650f      4889c2         mov rdx, rax
0x00006512      be01000000     mov esi, 1
0x00006517      5b             pop rbx
0x00006518      5d             pop rbp
0x00006519      415c           pop r12
0x0000651b      415d           pop r13
0x0000651d      415e           pop r14
0x0000651f      415f           pop r15
0x00006521      31c0           xor eax, eax
0x00006523      e9d8b9ffff     jmp sym.imp.__fprintf_chk
0x00006528      0f1f84000000.  nop dword [rax + rax]
0x00006530      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006534      4c8b6308       mov r12, qword [rbx + 8]
0x00006538      488d35870b01.  lea rsi, str.Written_by__s___s__and__s. ; 0x170c6 ; "Written by %s, %s, and %s.\n"
0x0000653f      488b1b         mov rbx, qword [rbx]
0x00006542      ba05000000     mov edx, 5
0x00006547      31ff           xor edi, edi
0x00006549      e8a2b6ffff     call sym.imp.dcgettext
0x0000654e      4883c428       add rsp, 0x28
0x00006552      4d89e9         mov r9, r13
0x00006555      4d89e0         mov r8, r12
0x00006558      4889d9         mov rcx, rbx
0x0000655b      4889ef         mov rdi, rbp
0x0000655e      4889c2         mov rdx, rax
0x00006561      5b             pop rbx
0x00006562      5d             pop rbp
0x00006563      415c           pop r12
0x00006565      415d           pop r13
0x00006567      415e           pop r14
0x00006569      415f           pop r15
0x0000656b      be01000000     mov esi, 1
0x00006570      31c0           xor eax, eax
0x00006572      e989b9ffff     jmp sym.imp.__fprintf_chk
0x00006577      660f1f840000.  nop word [rax + rax]
0x00006580      488d35710c01.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x171f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00006587      ba05000000     mov edx, 5
0x0000658c      31ff           xor edi, edi
0x0000658e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006592      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006596      4c8b6308       mov r12, qword [rbx + 8]
0x0000659a      488b1b         mov rbx, qword [rbx]
0x0000659d      e84eb6ffff     call sym.imp.dcgettext
0x000065a2      4883ec08       sub rsp, 8
0x000065a6      4156           push r14
0x000065a8      4889c2         mov rdx, rax
0x000065ab      4d89e9         mov r9, r13
0x000065ae      4d89e0         mov r8, r12
0x000065b1      4889d9         mov rcx, rbx
0x000065b4      4889ef         mov rdi, rbp
0x000065b7      be01000000     mov esi, 1
0x000065bc      31c0           xor eax, eax
0x000065be      e83db9ffff     call sym.imp.__fprintf_chk
0x000065c3      58             pop rax
0x000065c4      5a             pop rdx
0x000065c5      4883c428       add rsp, 0x28
0x000065c9      5b             pop rbx
0x000065ca      5d             pop rbp
0x000065cb      415c           pop r12
0x000065cd      415d           pop r13
0x000065cf      415e           pop r14
0x000065d1      415f           pop r15
0x000065d3      c3             ret
0x000065d4      0f1f4000       nop dword [rax]
0x000065d8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000065dc      488d35350c01.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x17218 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000065e3      ba05000000     mov edx, 5
0x000065e8      31ff           xor edi, edi
0x000065ea      4c8b7318       mov r14, qword [rbx + 0x18]
0x000065ee      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000065f2      4c8b6308       mov r12, qword [rbx + 8]
0x000065f6      488b1b         mov rbx, qword [rbx]
0x000065f9      e8f2b5ffff     call sym.imp.dcgettext
0x000065fe      4157           push r15
0x00006600      eba4           jmp 0x65a6
0x00006602      660f1f440000   nop word [rax + rax]
0x00006608      4c8b4308       mov r8, qword [rbx + 8]
0x0000660c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006610      488d35290c01.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x17240 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00006617      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000661b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000661f      ba05000000     mov edx, 5
0x00006624      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006628      31ff           xor edi, edi
0x0000662a      488b1b         mov rbx, qword [rbx]
0x0000662d      4c890424       mov qword [rsp], r8
0x00006631      e8bab5ffff     call sym.imp.dcgettext
0x00006636      4883ec08       sub rsp, 8
0x0000663a      4d89e9         mov r9, r13
0x0000663d      4154           push r12
0x0000663f      4157           push r15
0x00006641      4156           push r14
0x00006643      4c8b442420     mov r8, qword [rsp + 0x20]
0x00006648      4889d9         mov rcx, rbx
0x0000664b      4889c2         mov rdx, rax
0x0000664e      4889ef         mov rdi, rbp
0x00006651      be01000000     mov esi, 1
0x00006656      31c0           xor eax, eax
0x00006658      e8a3b8ffff     call sym.imp.__fprintf_chk
0x0000665d      4883c420       add rsp, 0x20
0x00006661      4883c428       add rsp, 0x28
0x00006665      5b             pop rbx
0x00006666      5d             pop rbp
0x00006667      415c           pop r12
0x00006669      415d           pop r13
0x0000666b      415e           pop r14
0x0000666d      415f           pop r15
0x0000666f      c3             ret
0x00006670      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006674      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006678      488d35e90b01.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x17268 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000667f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006683      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006687      ba05000000     mov edx, 5
0x0000668c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006690      4c8b4308       mov r8, qword [rbx + 8]
0x00006694      31ff           xor edi, edi
0x00006696      4c894c2408     mov qword [rsp + 8], r9
0x0000669b      488b1b         mov rbx, qword [rbx]
0x0000669e      4c890424       mov qword [rsp], r8
0x000066a2      e849b5ffff     call sym.imp.dcgettext
0x000066a7      4155           push r13
0x000066a9      4154           push r12
0x000066ab      4157           push r15
0x000066ad      4156           push r14
0x000066af      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000066b4      eb8d           jmp 0x6643
0x000066b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000066c0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000066c4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000066c8      ba05000000     mov edx, 5
0x000066cd      488b4310       mov rax, qword [rbx + 0x10]
0x000066d1      4c8b4308       mov r8, qword [rbx + 8]
0x000066d5      488d35240c01.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x17300 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000066dc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000066e0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000066e4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000066e8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000066ec      4c89542418     mov qword [rsp + 0x18], r10
0x000066f1      4c894c2410     mov qword [rsp + 0x10], r9
0x000066f6      48890424       mov qword [rsp], rax
0x000066fa      4c89442408     mov qword [rsp + 8], r8
0x000066ff      488b1b         mov rbx, qword [rbx]
0x00006702      e98bfdffff     jmp 0x6492
0x00006707      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00006710      4531c9         xor r9d, r9d
0x00006713      49833800       cmp qword [r8], 0
0x00006717      7412           je 0x672b
0x00006719      0f1f80000000.  nop dword [rax]
0x00006720      4983c101       add r9, 1
0x00006724      4b833cc800     cmp qword [r8 + r9*8], 0
0x00006729      75f5           jne 0x6720
0x0000672b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00006730      4883ec68       sub rsp, 0x68
0x00006734      4d89c2         mov r10, r8
0x00006737      4531c9         xor r9d, r9d
0x0000673a      64488b042528.  mov rax, qword fs:[0x28]
0x00006743      4889442458     mov qword [rsp + 0x58], rax
0x00006748      31c0           xor eax, eax
0x0000674a      4989e0         mov r8, rsp
0x0000674d      0f1f00         nop dword [rax]
0x00006750      418b02         mov eax, dword [r10]
0x00006753      83f82f         cmp eax, 0x2f
0x00006756      7742           ja 0x679a
0x00006758      4189c3         mov r11d, eax
0x0000675b      4d035a10       add r11, qword [r10 + 0x10]
0x0000675f      83c008         add eax, 8
0x00006762      418902         mov dword [r10], eax
0x00006765      498b03         mov rax, qword [r11]
0x00006768      4885c0         test rax, rax
0x0000676b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000676f      740a           je 0x677b
0x00006771      4983c101       add r9, 1
0x00006775      4983f90a       cmp r9, 0xa
0x00006779      75d5           jne 0x6750
0x0000677b      e870fbffff     call sym.version_etc_arn
0x00006780      488b442458     mov rax, qword [rsp + 0x58]
0x00006785      644833042528.  xor rax, qword fs:[0x28]
0x0000678e      7505           jne 0x6795
0x00006790      4883c468       add rsp, 0x68
0x00006794      c3             ret
0x00006795      e886b4ffff     call sym.imp.__stack_chk_fail
0x0000679a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000679e      498d4308       lea rax, [r11 + 8]
0x000067a2      49894208       mov qword [r10 + 8], rax
0x000067a6      ebbd           jmp 0x6765
0x000067a8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000067b0      55             push rbp
0x000067b1      53             push rbx
0x000067b2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000067b8      4531db         xor r11d, r11d
0x000067bb      4881ecb80000.  sub rsp, 0xb8
0x000067c2      64488b042528.  mov rax, qword fs:[0x28]
0x000067cb      4889442478     mov qword [rsp + 0x78], rax
0x000067d0      31c0           xor eax, eax
0x000067d2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000067da      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000067e2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000067ea      4c8d442420     lea r8, [rsp + 0x20]
0x000067ef      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000067f7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000067ff      4889442410     mov qword [rsp + 0x10], rax
0x00006804      488d84248000.  lea rax, [rsp + 0x80]
0x0000680c      4531c9         xor r9d, r9d
0x0000680f      4889442418     mov qword [rsp + 0x18], rax
0x00006814      4889c5         mov rbp, rax
0x00006817      660f1f840000.  nop word [rax + rax]
0x00006820      4183fa2f       cmp r10d, 0x2f
0x00006824      7756           ja 0x687c
0x00006826      4489d0         mov eax, r10d
0x00006829      41bb01000000   mov r11d, 1
0x0000682f      4183c208       add r10d, 8
0x00006833      4801e8         add rax, rbp
0x00006836      488b00         mov rax, qword [rax]
0x00006839      4885c0         test rax, rax
0x0000683c      4b8904c8       mov qword [r8 + r9*8], rax
0x00006840      740a           je 0x684c
0x00006842      4983c101       add r9, 1
0x00006846      4983f90a       cmp r9, 0xa
0x0000684a      75d4           jne 0x6820
0x0000684c      4584db         test r11b, r11b
0x0000684f      7524           jne 0x6875
0x00006851      e89afaffff     call sym.version_etc_arn
0x00006856      488b442478     mov rax, qword [rsp + 0x78]
0x0000685b      644833042528.  xor rax, qword fs:[0x28]
0x00006864      750a           jne 0x6870
0x00006866      4881c4b80000.  add rsp, 0xb8
0x0000686d      5b             pop rbx
0x0000686e      5d             pop rbp
0x0000686f      c3             ret
0x00006870      e8abb3ffff     call sym.imp.__stack_chk_fail
0x00006875      4489542408     mov dword [rsp + 8], r10d
0x0000687a      ebd5           jmp 0x6851
0x0000687c      4889d8         mov rax, rbx
0x0000687f      4883c308       add rbx, 8
0x00006883      ebb1           jmp 0x6836
0x00006885      90             nop
0x00006886      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006890      53             push rbx
0x00006891      488d354a0801.  lea rsi, str.Report_bugs_to:__s         ; 0x170e2 ; "\nReport bugs to: %s\n"
0x00006898      ba05000000     mov edx, 5
0x0000689d      31ff           xor edi, edi
0x0000689f      e84cb3ffff     call sym.imp.dcgettext
0x000068a4      488d154c0801.  lea rdx, str.bug_coreutils_gnu.org      ; 0x170f7 ; "bug-coreutils@gnu.org"
0x000068ab      4889c6         mov rsi, rax
0x000068ae      bf01000000     mov edi, 1
0x000068b3      31c0           xor eax, eax
0x000068b5      e876b5ffff     call sym.imp.__printf_chk
0x000068ba      488d354c0801.  lea rsi, str.s_home_page:___s           ; 0x1710d ; "%s home page: <%s>\n"
0x000068c1      ba05000000     mov edx, 5
0x000068c6      31ff           xor edi, edi
0x000068c8      e823b3ffff     call sym.imp.dcgettext
0x000068cd      488d0dacfe00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x16780 ; "https://www.gnu.org/software/coreutils/"
0x000068d4      488d15bbf700.  lea rdx, str.GNU_coreutils              ; 0x16096 ; "GNU coreutils"
0x000068db      4889c6         mov rsi, rax
0x000068de      bf01000000     mov edi, 1
0x000068e3      31c0           xor eax, eax
0x000068e5      e846b5ffff     call sym.imp.__printf_chk
0x000068ea      488b1db75721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21c0a8:8]=0
0x000068f1      488d35480a01.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x17340 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000068f8      31ff           xor edi, edi
0x000068fa      ba05000000     mov edx, 5
0x000068ff      e8ecb2ffff     call sym.imp.dcgettext
0x00006904      4889de         mov rsi, rbx
0x00006907      4889c7         mov rdi, rax
0x0000690a      5b             pop rbx
0x0000690b      e910b4ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00006910      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00006911      4889fb         mov rbx, rdi
0x00006914      e887b4ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00006919      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000691c      7505           jne 0x6923
0x0000691e      4885db         test rbx, rbx
0x00006921      7502           jne 0x6925
0x00006923      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00006924      c3             ret
0x00006925      e8e6ceffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000692a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00006930      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00006933      48f7e6         mul rsi
0x00006936      4889c7         mov rdi, rax
0x00006939      0f90c0         seto al
0x0000693c      4885ff         test rdi, rdi
0x0000693f      780a           js 0x694b
0x00006941      0fb6c0         movzx eax, al
0x00006944      4885c0         test rax, rax
0x00006947      7502           jne 0x694b
0x00006949      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000694b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000694f      e8bcceffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00006954      6690           nop
0x00006956      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00006960      ebae           jmp sym.xmalloc
0x00006962      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00006966      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006970      4885f6         test rsi, rsi
0x00006973      53             push rbx
0x00006974      4889f3         mov rbx, rsi
0x00006977      7505           jne 0x697e
0x00006979      4885ff         test rdi, rdi
0x0000697c      751a           jne 0x6998
0x0000697e      4889de         mov rsi, rbx
0x00006981      e87ab4ffff     call sym.imp.realloc
0x00006986      4885c0         test rax, rax
0x00006989      7505           jne 0x6990
0x0000698b      4885db         test rbx, rbx
0x0000698e      7511           jne 0x69a1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00006990      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00006991      c3             ret
0x00006992      660f1f440000   nop word [rax + rax]
0x00006998      e863b1ffff     call sym.imp.free
0x0000699d      31c0           xor eax, eax
0x0000699f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000069a0      c3             ret
0x000069a1      e86aceffff     call sym.xalloc_die
0x000069a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000069b0      4889f0         mov rax, rsi
0x000069b3      48f7e2         mul rdx
0x000069b6      4889c6         mov rsi, rax
0x000069b9      0f90c0         seto al
0x000069bc      4885f6         test rsi, rsi
0x000069bf      780a           js 0x69cb
0x000069c1      0fb6c0         movzx eax, al
0x000069c4      4885c0         test rax, rax
0x000069c7      7502           jne 0x69cb
0x000069c9      eba5           jmp sym.xrealloc
0x000069cb      4883ec08       sub rsp, 8
0x000069cf      e83cceffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000069d4      6690           nop
0x000069d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000069e0      4885ff         test rdi, rdi
0x000069e3      4989d1         mov r9, rdx
0x000069e6      488b0e         mov rcx, qword [rsi]
0x000069e9      7435           je 0x6a20
0x000069eb      31d2           xor edx, edx
0x000069ed      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000069f7      49f7f1         div r9
0x000069fa      4839c8         cmp rax, rcx
0x000069fd      763c           jbe 0x6a3b
0x000069ff      4889c8         mov rax, rcx
0x00006a02      48d1e8         shr rax, 1
0x00006a05      488d4c0801     lea rcx, [rax + rcx + 1]
0x00006a0a      48890e         mov qword [rsi], rcx
0x00006a0d      490fafc9       imul rcx, r9
0x00006a11      4889ce         mov rsi, rcx
0x00006a14      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00006a19      0f1f80000000.  nop dword [rax]
0x00006a20      4885c9         test rcx, rcx
0x00006a23      7423           je 0x6a48
0x00006a25      4889c8         mov rax, rcx
0x00006a28      49f7e1         mul r9
0x00006a2b      0f90c2         seto dl
0x00006a2e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00006a31      0fb6d2         movzx edx, dl
0x00006a34      7805           js 0x6a3b
0x00006a36      4885d2         test rdx, rdx
0x00006a39      74cf           je 0x6a0a
0x00006a3b      4883ec08       sub rsp, 8
0x00006a3f      e8cccdffff     call sym.xalloc_die
0x00006a44      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00006a48      31d2           xor edx, edx
0x00006a4a      b880000000     mov eax, 0x80
0x00006a4f      4531c0         xor r8d, r8d
0x00006a52      49f7f1         div r9
0x00006a55      4885c0         test rax, rax
0x00006a58      410f94c0       sete r8b
0x00006a5c      498d0c00       lea rcx, [r8 + rax]
0x00006a60      ebc3           jmp 0x6a25
0x00006a62      0f1f4000       nop dword [rax]
0x00006a66      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006a70      4885ff         test rdi, rdi
0x00006a73      488b06         mov rax, qword [rsi]
0x00006a76      7428           je 0x6aa0
0x00006a78      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00006a82      4839d0         cmp rax, rdx
0x00006a85      772a           ja 0x6ab1
0x00006a87      4889c2         mov rdx, rax
0x00006a8a      48d1ea         shr rdx, 1
0x00006a8d      488d440201     lea rax, [rdx + rax + 1]
0x00006a92      488906         mov qword [rsi], rax
0x00006a95      4889c6         mov rsi, rax
0x00006a98      e9d3feffff     jmp sym.xrealloc
0x00006a9d      0f1f00         nop dword [rax]
0x00006aa0      4885c0         test rax, rax
0x00006aa3      ba80000000     mov edx, 0x80
0x00006aa8      480f44c2       cmove rax, rdx
0x00006aac      4885c0         test rax, rax
0x00006aaf      79e1           jns 0x6a92
0x00006ab1      4883ec08       sub rsp, 8
0x00006ab5      e856cdffff     call sym.xalloc_die
0x00006aba      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006ac0      53             push rbx
0x00006ac1      4889fb         mov rbx, rdi
0x00006ac4      e847feffff     call sym.xmalloc
0x00006ac9      4889da         mov rdx, rbx
0x00006acc      31f6           xor esi, esi
0x00006ace      4889c7         mov rdi, rax
0x00006ad1      5b             pop rbx
0x00006ad2      e9d9b1ffff     jmp sym.imp.memset
0x00006ad7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006ae0      4889f8         mov rax, rdi
0x00006ae3      4883ec08       sub rsp, 8
0x00006ae7      48f7e6         mul rsi
0x00006aea      0f90c2         seto dl
0x00006aed      4885c0         test rax, rax
0x00006af0      7817           js 0x6b09
0x00006af2      0fb6d2         movzx edx, dl
0x00006af5      4885d2         test rdx, rdx
0x00006af8      750f           jne 0x6b09
0x00006afa      e831b2ffff     call sym.imp.calloc
0x00006aff      4885c0         test rax, rax
0x00006b02      7405           je 0x6b09
0x00006b04      4883c408       add rsp, 8
0x00006b08      c3             ret
0x00006b09      e802cdffff     call sym.xalloc_die
0x00006b0e      6690           nop
;-- xmemdup:
0x00006b10      55             push rbp
0x00006b11      53             push rbx
0x00006b12      4889fd         mov rbp, rdi
0x00006b15      4889f7         mov rdi, rsi
0x00006b18      4889f3         mov rbx, rsi
0x00006b1b      4883ec08       sub rsp, 8
0x00006b1f      e8ecfdffff     call sym.xmalloc
0x00006b24      4883c408       add rsp, 8
0x00006b28      4889da         mov rdx, rbx
0x00006b2b      4889ee         mov rsi, rbp
0x00006b2e      5b             pop rbx
0x00006b2f      5d             pop rbp
0x00006b30      4889c7         mov rdi, rax
0x00006b33      e938b2ffff     jmp sym.imp.memcpy
0x00006b38      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00006b40      53             push rbx
0x00006b41      4889fb         mov rbx, rdi
0x00006b44      e8c7b0ffff     call sym.imp.strlen
0x00006b49      4889df         mov rdi, rbx
0x00006b4c      488d7001       lea rsi, [rax + 1]
0x00006b50      5b             pop rbx
0x00006b51      ebbd           jmp sym.xmemdup
0x00006b53      662e0f1f8400.  nop word cs:[rax + rax]
0x00006b5d      0f1f00         nop dword [rax]
;-- xnumtoimax:
0x00006b60      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00006b62      4156           push r14
0x00006b64      4989cf         mov r15, rcx
0x00006b67      4155           push r13
0x00006b69      4154           push r12
0x00006b6b      4989d6         mov r14, rdx
0x00006b6e      55             push rbp
0x00006b6f      53             push rbx
0x00006b70      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00006b72      31f6           xor esi, esi
0x00006b74      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00006b77      4d89cd         mov r13, r9
0x00006b7a      4883ec18       sub rsp, 0x18
0x00006b7e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00006b81      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00006b85      64488b042528.  mov rax, qword fs:[0x28]
0x00006b8e      4889442408     mov qword [rsp + 8], rax
0x00006b93      31c0           xor eax, eax
0x00006b95      e816010000     call sym.xstrtoimax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x00006b9a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x00006b9c      0f858e000000   jne 0x6c30
0x00006ba2      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00006ba6      4c39f5         cmp rbp, r14
0x00006ba9      7c05           jl 0x6bb0
0x00006bab      4c39fd         cmp rbp, r15
0x00006bae      7e56           jle 0x6c06
0x00006bb0      e86bafffff     call sym.imp.__errno_location
0x00006bb5      4881fdffffff.  cmp rbp, 0x3fffffff                     ; ../coreutils-8.31/lib/xdectoint.c:51
0x00006bbc      4989c6         mov r14, rax
0x00006bbf      0f8e8b000000   jle 0x6c50
0x00006bc5      41c7064b0000.  mov dword [r14], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00006bcc      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x00006bcf      e88cf6ffff     call sym.quote
0x00006bd4      418b36         mov esi, dword [r14]
0x00006bd7      4989c0         mov r8, rax
0x00006bda      b800000000     mov eax, 0
0x00006bdf      488d1577ff00.  lea rdx, str.s:__s                      ; 0x16b5d ; "%s: %s"
0x00006be6      4c89e9         mov rcx, r13
0x00006be9      83fe16         cmp esi, 0x16
0x00006bec      0f44f0         cmove esi, eax
0x00006bef      85db           test ebx, ebx
0x00006bf1      b801000000     mov eax, 1
0x00006bf6      0f44d8         cmove ebx, eax
0x00006bf9      31c0           xor eax, eax
0x00006bfb      89df           mov edi, ebx
0x00006bfd      e85eb2ffff     call sym.imp.error
0x00006c02      488b2c24       mov rbp, qword [rsp]
0x00006c06      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00006c0b      644833142528.  xor rdx, qword fs:[0x28]
0x00006c14      4889e8         mov rax, rbp
0x00006c17      7553           jne 0x6c6c
0x00006c19      4883c418       add rsp, 0x18
0x00006c1d      5b             pop rbx
0x00006c1e      5d             pop rbp
0x00006c1f      415c           pop r12
0x00006c21      415d           pop r13
0x00006c23      415e           pop r14
0x00006c25      415f           pop r15
0x00006c27      c3             ret
0x00006c28      0f1f84000000.  nop dword [rax + rax]
0x00006c30      89c5           mov ebp, eax
0x00006c32      e8e9aeffff     call sym.imp.__errno_location
0x00006c37      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x00006c3a      4989c6         mov r14, rax
0x00006c3d      7486           je 0x6bc5
0x00006c3f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00006c42      7588           jne 0x6bcc
0x00006c44      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x00006c4a      eb80           jmp 0x6bcc
0x00006c4c      0f1f4000       nop dword [rax]
0x00006c50      4881fdffffff.  cmp rbp, 0xffffffffbfffffff             ; ../coreutils-8.31/lib/xdectoint.c:55
0x00006c57      b822000000     mov eax, 0x22                           ; '"'
0x00006c5c      ba4b000000     mov edx, 0x4b                           ; 'K'
0x00006c61      0f4ec2         cmovle eax, edx
0x00006c64      418906         mov dword [r14], eax
0x00006c67      e960ffffff     jmp 0x6bcc
0x00006c6c      e8afafffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
0x00006c71      0f1f440000     nop dword [rax + rax]
0x00006c76      662e0f1f8400.  nop word cs:[rax + rax]
;-- xdectoimax:
0x00006c80      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00006c84      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00006c86      4d89c1         mov r9, r8
0x00006c89      4989c8         mov r8, rcx
0x00006c8c      4889d1         mov rcx, rdx
0x00006c8f      4889f2         mov rdx, rsi
0x00006c92      be0a000000     mov esi, 0xa
0x00006c97      e8c4feffff     call sym.xnumtoimax
0x00006c9c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00006ca0      c3             ret
0x00006ca1      662e0f1f8400.  nop word cs:[rax + rax]
0x00006cab      0f1f440000     nop dword [rax + rax]
;-- xstrtoimax:
0x00006cb0      4157           push r15
0x00006cb2      4156           push r14
0x00006cb4      4155           push r13
0x00006cb6      4154           push r12
0x00006cb8      55             push rbp
0x00006cb9      53             push rbx
0x00006cba      4883ec28       sub rsp, 0x28
0x00006cbe      64488b042528.  mov rax, qword fs:[0x28]
0x00006cc7      4889442418     mov qword [rsp + 0x18], rax
0x00006ccc      31c0           xor eax, eax
0x00006cce      83fa24         cmp edx, 0x24
0x00006cd1      0f8768060000   ja 0x733f
0x00006cd7      488d442410     lea rax, [rsp + 0x10]
0x00006cdc      4885f6         test rsi, rsi
0x00006cdf      4889f3         mov rbx, rsi
0x00006ce2      4989fc         mov r12, rdi
0x00006ce5      89d5           mov ebp, edx
0x00006ce7      4989ce         mov r14, rcx
0x00006cea      480f44d8       cmove rbx, rax
0x00006cee      4d89c7         mov r15, r8
0x00006cf1      e82aaeffff     call sym.imp.__errno_location
0x00006cf6      31c9           xor ecx, ecx
0x00006cf8      89ea           mov edx, ebp
0x00006cfa      c70000000000   mov dword [rax], 0
0x00006d00      4889de         mov rsi, rbx
0x00006d03      4c89e7         mov rdi, r12
0x00006d06      4989c5         mov r13, rax
0x00006d09      e8a2aeffff     call sym.imp.__strtol_internal
0x00006d0e      488b0b         mov rcx, qword [rbx]
0x00006d11      4889c5         mov rbp, rax
0x00006d14      4c39e1         cmp rcx, r12
0x00006d17      745f           je 0x6d78
0x00006d19      418b4500       mov eax, dword [r13]
0x00006d1d      85c0           test eax, eax
0x00006d1f      753f           jne 0x6d60
0x00006d21      4531e4         xor r12d, r12d
0x00006d24      4d85ff         test r15, r15
0x00006d27      740d           je 0x6d36
0x00006d29      440fb629       movzx r13d, byte [rcx]
0x00006d2d      4584ed         test r13b, r13b
0x00006d30      0f857d000000   jne 0x6db3
0x00006d36      49892e         mov qword [r14], rbp
0x00006d39      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00006d3e      6448333c2528.  xor rdi, qword fs:[0x28]
0x00006d47      4489e0         mov eax, r12d
0x00006d4a      0f850e060000   jne 0x735e
0x00006d50      4883c428       add rsp, 0x28
0x00006d54      5b             pop rbx
0x00006d55      5d             pop rbp
0x00006d56      415c           pop r12
0x00006d58      415d           pop r13
0x00006d5a      415e           pop r14
0x00006d5c      415f           pop r15
0x00006d5e      c3             ret
0x00006d5f      90             nop
0x00006d60      83f822         cmp eax, 0x22
0x00006d63      41bc04000000   mov r12d, 4
0x00006d69      75ce           jne 0x6d39
0x00006d6b      41bc01000000   mov r12d, 1
0x00006d71      ebb1           jmp 0x6d24
0x00006d73      0f1f440000     nop dword [rax + rax]
0x00006d78      4d85ff         test r15, r15
0x00006d7b      0f848f040000   je 0x7210
0x00006d81      440fb629       movzx r13d, byte [rcx]
0x00006d85      48894c2408     mov qword [rsp + 8], rcx
0x00006d8a      41bc04000000   mov r12d, 4
0x00006d90      4584ed         test r13b, r13b
0x00006d93      74a4           je 0x6d39
0x00006d95      410fbef5       movsx esi, r13b
0x00006d99      4c89ff         mov rdi, r15
0x00006d9c      e8bfaeffff     call sym.imp.strchr
0x00006da1      4885c0         test rax, rax
0x00006da4      488b4c2408     mov rcx, qword [rsp + 8]
0x00006da9      748e           je 0x6d39
0x00006dab      bd01000000     mov ebp, 1
0x00006db0      4531e4         xor r12d, r12d
0x00006db3      410fbef5       movsx esi, r13b
0x00006db7      4c89ff         mov rdi, r15
0x00006dba      48894c2408     mov qword [rsp + 8], rcx
0x00006dbf      e89caeffff     call sym.imp.strchr
0x00006dc4      4885c0         test rax, rax
0x00006dc7      488b4c2408     mov rcx, qword [rsp + 8]
0x00006dcc      745a           je 0x6e28
0x00006dce      418d45bb       lea eax, [r13 - 0x45]
0x00006dd2      3c2f           cmp al, 0x2f
0x00006dd4      7762           ja 0x6e38
0x00006dd6      48ba45893000.  movabs rdx, 0x814400308945
0x00006de0      480fa3c2       bt rdx, rax
0x00006de4      7352           jae 0x6e38
0x00006de6      be30000000     mov esi, 0x30                           ; '0'
0x00006deb      4c89ff         mov rdi, r15
0x00006dee      48894c2408     mov qword [rsp + 8], rcx
0x00006df3      e868aeffff     call sym.imp.strchr
0x00006df8      4885c0         test rax, rax
0x00006dfb      488b4c2408     mov rcx, qword [rsp + 8]
0x00006e00      7436           je 0x6e38
0x00006e02      0fb64101       movzx eax, byte [rcx + 1]
0x00006e06      3c44           cmp al, 0x44
0x00006e08      740c           je 0x6e16
0x00006e0a      3c69           cmp al, 0x69
0x00006e0c      0f84e6040000   je 0x72f8
0x00006e12      3c42           cmp al, 0x42
0x00006e14      7522           jne 0x6e38
0x00006e16      bf02000000     mov edi, 2
0x00006e1b      b8e8030000     mov eax, 0x3e8
0x00006e20      eb20           jmp 0x6e42
0x00006e22      660f1f440000   nop word [rax + rax]
0x00006e28      49892e         mov qword [r14], rbp
0x00006e2b      4183cc02       or r12d, 2
0x00006e2f      e905ffffff     jmp 0x6d39
0x00006e34      0f1f4000       nop dword [rax]
0x00006e38      bf01000000     mov edi, 1
0x00006e3d      b800040000     mov eax, 0x400
0x00006e42      4183ed42       sub r13d, 0x42
0x00006e46      4180fd35       cmp r13b, 0x35
0x00006e4a      77dc           ja 0x6e28
0x00006e4c      488d35e50501.  lea rsi, [0x00017438]
0x00006e53      450fb6ed       movzx r13d, r13b
0x00006e57      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x00006e5b      4801f2         add rdx, rsi
0x00006e5e      ffe2           jmp rdx
0x00006e60      49b800000000.  movabs r8, 0x8000000000000000
0x00006e6a      4863f0         movsxd rsi, eax
0x00006e6d      4c89c0         mov rax, r8
0x00006e70      4899           cqo
0x00006e72      48f7fe         idiv rsi
0x00006e75      4839c5         cmp rbp, rax
0x00006e78      4989c1         mov r9, rax
0x00006e7b      0f8ca4040000   jl 0x7325
0x00006e81      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x00006e8b      4c89d0         mov rax, r10
0x00006e8e      4899           cqo
0x00006e90      48f7fe         idiv rsi
0x00006e93      4839c5         cmp rbp, rax
0x00006e96      0f8f96040000   jg 0x7332
0x00006e9c      480fafee       imul rbp, rsi
0x00006ea0      4939e9         cmp r9, rbp
0x00006ea3      0f8f7c040000   jg 0x7325
0x00006ea9      4839e8         cmp rax, rbp
0x00006eac      0f8c80040000   jl 0x7332
0x00006eb2      480fafee       imul rbp, rsi
0x00006eb6      31c0           xor eax, eax
0x00006eb8      4109c4         or r12d, eax
0x00006ebb      0f1f440000     nop dword [rax + rax]
0x00006ec0      4863c7         movsxd rax, edi
0x00006ec3      4801c1         add rcx, rax
0x00006ec6      4489e0         mov eax, r12d
0x00006ec9      83c802         or eax, 2
0x00006ecc      48890b         mov qword [rbx], rcx
0x00006ecf      803900         cmp byte [rcx], 0
0x00006ed2      440f45e0       cmovne r12d, eax
0x00006ed6      e95bfeffff     jmp 0x6d36
0x00006edb      0f1f440000     nop dword [rax + rax]
0x00006ee0      48b800000000.  movabs rax, 0xc000000000000000
0x00006eea      4839c5         cmp rbp, rax
0x00006eed      0f8c2d030000   jl 0x7220
0x00006ef3      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x00006efd      4839c5         cmp rbp, rax
0x00006f00      0f8fda030000   jg 0x72e0
0x00006f06      4801ed         add rbp, rbp
0x00006f09      ebb5           jmp 0x6ec0
0x00006f0b      0f1f440000     nop dword [rax + rax]
0x00006f10      48b800000000.  movabs rax, 0xffc0000000000000
0x00006f1a      4839c5         cmp rbp, rax
0x00006f1d      0f8cfd020000   jl 0x7220
0x00006f23      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x00006f2d      4839c5         cmp rbp, rax
0x00006f30      0f8faa030000   jg 0x72e0
0x00006f36      48c1e509       shl rbp, 9
0x00006f3a      eb84           jmp 0x6ec0
0x00006f3c      0f1f4000       nop dword [rax]
0x00006f40      4863f0         movsxd rsi, eax
0x00006f43      48b800000000.  movabs rax, 0x8000000000000000
0x00006f4d      41b807000000   mov r8d, 7
0x00006f53      4899           cqo
0x00006f55      4531db         xor r11d, r11d
0x00006f58      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00006f62      48f7fe         idiv rsi
0x00006f65      4989c2         mov r10, rax
0x00006f68      eb25           jmp 0x6f8f
0x00006f6a      660f1f440000   nop word [rax + rax]
0x00006f70      4c89c8         mov rax, r9
0x00006f73      4899           cqo
0x00006f75      48f7fe         idiv rsi
0x00006f78      4839e8         cmp rax, rbp
0x00006f7b      0f8ce7020000   jl 0x7268
0x00006f81      480fafee       imul rbp, rsi
0x00006f85      4183e801       sub r8d, 1
0x00006f89      0f8421010000   je 0x70b0
0x00006f8f      4939ea         cmp r10, rbp
0x00006f92      7edc           jle 0x6f70
0x00006f94      41bb01000000   mov r11d, 1
0x00006f9a      48bd00000000.  movabs rbp, 0x8000000000000000
0x00006fa4      ebdf           jmp 0x6f85
0x00006fa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006fb0      4863f0         movsxd rsi, eax
0x00006fb3      48b800000000.  movabs rax, 0x8000000000000000
0x00006fbd      41b808000000   mov r8d, 8
0x00006fc3      4899           cqo
0x00006fc5      4531db         xor r11d, r11d
0x00006fc8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00006fd2      48f7fe         idiv rsi
0x00006fd5      4989c2         mov r10, rax
0x00006fd8      eb25           jmp 0x6fff
0x00006fda      660f1f440000   nop word [rax + rax]
0x00006fe0      4c89c8         mov rax, r9
0x00006fe3      4899           cqo
0x00006fe5      48f7fe         idiv rsi
0x00006fe8      4839e8         cmp rax, rbp
0x00006feb      0f8c47020000   jl 0x7238
0x00006ff1      480fafee       imul rbp, rsi
0x00006ff5      4183e801       sub r8d, 1
0x00006ff9      0f84b1000000   je 0x70b0
0x00006fff      4939ea         cmp r10, rbp
0x00007002      7edc           jle 0x6fe0
0x00007004      41bb01000000   mov r11d, 1
0x0000700a      48bd00000000.  movabs rbp, 0x8000000000000000
0x00007014      ebdf           jmp 0x6ff5
0x00007016      662e0f1f8400.  nop word cs:[rax + rax]
0x00007020      49b800000000.  movabs r8, 0x8000000000000000
0x0000702a      4863f0         movsxd rsi, eax
0x0000702d      4c89c0         mov rax, r8
0x00007030      4899           cqo
0x00007032      48f7fe         idiv rsi
0x00007035      4839c5         cmp rbp, rax
0x00007038      0f8ce2010000   jl 0x7220
0x0000703e      4983e801       sub r8, 1
0x00007042      4c89c0         mov rax, r8
0x00007045      4899           cqo
0x00007047      48f7fe         idiv rsi
0x0000704a      4839c5         cmp rbp, rax
0x0000704d      0f8f8d020000   jg 0x72e0
0x00007053      480fafee       imul rbp, rsi
0x00007057      e964feffff     jmp 0x6ec0
0x0000705c      0f1f4000       nop dword [rax]
0x00007060      4863f0         movsxd rsi, eax
0x00007063      48b800000000.  movabs rax, 0x8000000000000000
0x0000706d      41b803000000   mov r8d, 3
0x00007073      4899           cqo
0x00007075      4531db         xor r11d, r11d
0x00007078      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00007082      48f7fe         idiv rsi
0x00007085      4989c2         mov r10, rax
0x00007088      4939ea         cmp r10, rbp
0x0000708b      0f8fef010000   jg 0x7280
0x00007091      4c89c8         mov rax, r9
0x00007094      4899           cqo
0x00007096      48f7fe         idiv rsi
0x00007099      4839e8         cmp rax, rbp
0x0000709c      0f8c6e020000   jl 0x7310
0x000070a2      480fafee       imul rbp, rsi
0x000070a6      4183e801       sub r8d, 1
0x000070aa      75dc           jne 0x7088
0x000070ac      0f1f4000       nop dword [rax]
0x000070b0      4509dc         or r12d, r11d
0x000070b3      e908feffff     jmp 0x6ec0
0x000070b8      0f1f84000000.  nop dword [rax + rax]
0x000070c0      4863f0         movsxd rsi, eax
0x000070c3      48b800000000.  movabs rax, 0x8000000000000000
0x000070cd      41b806000000   mov r8d, 6
0x000070d3      4899           cqo
0x000070d5      4531db         xor r11d, r11d
0x000070d8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x000070e2      48f7fe         idiv rsi
0x000070e5      4989c2         mov r10, rax
0x000070e8      eb21           jmp 0x710b
0x000070ea      660f1f440000   nop word [rax + rax]
0x000070f0      4c89c8         mov rax, r9
0x000070f3      4899           cqo
0x000070f5      48f7fe         idiv rsi
0x000070f8      4839e8         cmp rax, rbp
0x000070fb      0f8c97010000   jl 0x7298
0x00007101      480fafee       imul rbp, rsi
0x00007105      4183e801       sub r8d, 1
0x00007109      74a5           je 0x70b0
0x0000710b      4939ea         cmp r10, rbp
0x0000710e      7ee0           jle 0x70f0
0x00007110      41bb01000000   mov r11d, 1
0x00007116      48bd00000000.  movabs rbp, 0x8000000000000000
0x00007120      ebe3           jmp 0x7105
0x00007122      660f1f440000   nop word [rax + rax]
0x00007128      4863f0         movsxd rsi, eax
0x0000712b      48b800000000.  movabs rax, 0x8000000000000000
0x00007135      41b805000000   mov r8d, 5
0x0000713b      4899           cqo
0x0000713d      4531db         xor r11d, r11d
0x00007140      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000714a      48f7fe         idiv rsi
0x0000714d      4989c2         mov r10, rax
0x00007150      eb25           jmp 0x7177
0x00007152      660f1f440000   nop word [rax + rax]
0x00007158      4c89c8         mov rax, r9
0x0000715b      4899           cqo
0x0000715d      48f7fe         idiv rsi
0x00007160      4839e8         cmp rax, rbp
0x00007163      0f8c47010000   jl 0x72b0
0x00007169      480fafee       imul rbp, rsi
0x0000716d      4183e801       sub r8d, 1
0x00007171      0f8439ffffff   je 0x70b0
0x00007177      4939ea         cmp r10, rbp
0x0000717a      7edc           jle 0x7158
0x0000717c      41bb01000000   mov r11d, 1
0x00007182      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000718c      ebdf           jmp 0x716d
0x0000718e      6690           nop
0x00007190      48b800000000.  movabs rax, 0xffe0000000000000
0x0000719a      4839c5         cmp rbp, rax
0x0000719d      0f8c7d000000   jl 0x7220
0x000071a3      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x000071ad      4839c5         cmp rbp, rax
0x000071b0      0f8f2a010000   jg 0x72e0
0x000071b6      48c1e50a       shl rbp, 0xa
0x000071ba      e901fdffff     jmp 0x6ec0
0x000071bf      90             nop
0x000071c0      4863f0         movsxd rsi, eax
0x000071c3      48b800000000.  movabs rax, 0x8000000000000000
0x000071cd      41b804000000   mov r8d, 4
0x000071d3      4899           cqo
0x000071d5      4531db         xor r11d, r11d
0x000071d8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x000071e2      48f7fe         idiv rsi
0x000071e5      4989c2         mov r10, rax
0x000071e8      4939ea         cmp r10, rbp
0x000071eb      7f63           jg 0x7250
0x000071ed      4c89c8         mov rax, r9
0x000071f0      4899           cqo
0x000071f2      48f7fe         idiv rsi
0x000071f5      4839e8         cmp rax, rbp
0x000071f8      0f8cca000000   jl 0x72c8
0x000071fe      480fafee       imul rbp, rsi
0x00007202      4183e801       sub r8d, 1
0x00007206      75e0           jne 0x71e8
0x00007208      e9a3feffff     jmp 0x70b0
0x0000720d      0f1f00         nop dword [rax]
0x00007210      41bc04000000   mov r12d, 4
0x00007216      e91efbffff     jmp 0x6d39
0x0000721b      0f1f440000     nop dword [rax + rax]
0x00007220      41bc01000000   mov r12d, 1
0x00007226      48bd00000000.  movabs rbp, 0x8000000000000000
0x00007230      e98bfcffff     jmp 0x6ec0
0x00007235      0f1f00         nop dword [rax]
0x00007238      41bb01000000   mov r11d, 1
0x0000723e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00007248      e9a8fdffff     jmp 0x6ff5
0x0000724d      0f1f00         nop dword [rax]
0x00007250      41bb01000000   mov r11d, 1
0x00007256      48bd00000000.  movabs rbp, 0x8000000000000000
0x00007260      eba0           jmp 0x7202
0x00007262      660f1f440000   nop word [rax + rax]
0x00007268      41bb01000000   mov r11d, 1
0x0000726e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00007278      e908fdffff     jmp 0x6f85
0x0000727d      0f1f00         nop dword [rax]
0x00007280      41bb01000000   mov r11d, 1
0x00007286      48bd00000000.  movabs rbp, 0x8000000000000000
0x00007290      e911feffff     jmp 0x70a6
0x00007295      0f1f00         nop dword [rax]
0x00007298      41bb01000000   mov r11d, 1
0x0000729e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x000072a8      e958feffff     jmp 0x7105
0x000072ad      0f1f00         nop dword [rax]
0x000072b0      41bb01000000   mov r11d, 1
0x000072b6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x000072c0      e9a8feffff     jmp 0x716d
0x000072c5      0f1f00         nop dword [rax]
0x000072c8      41bb01000000   mov r11d, 1
0x000072ce      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x000072d8      e925ffffff     jmp 0x7202
0x000072dd      0f1f00         nop dword [rax]
0x000072e0      41bc01000000   mov r12d, 1
0x000072e6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x000072f0      e9cbfbffff     jmp 0x6ec0
0x000072f5      0f1f00         nop dword [rax]
0x000072f8      31ff           xor edi, edi
0x000072fa      80790242       cmp byte [rcx + 2], 0x42
0x000072fe      b800040000     mov eax, 0x400
0x00007303      400f94c7       sete dil
0x00007307      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000730b      e932fbffff     jmp 0x6e42
0x00007310      41bb01000000   mov r11d, 1
0x00007316      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00007320      e981fdffff     jmp 0x70a6
0x00007325      b801000000     mov eax, 1
0x0000732a      4c89c5         mov rbp, r8
0x0000732d      e986fbffff     jmp 0x6eb8
0x00007332      b801000000     mov eax, 1
0x00007337      4c89d5         mov rbp, r10
0x0000733a      e979fbffff     jmp 0x6eb8
0x0000733f      488d0dca0101.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x17510 ; "xstrtoimax"
0x00007346      488d35a30001.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x173f0 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000734d      488d3dbc0001.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x17410 ; "0 <= strtol_base && strtol_base <= 36"
0x00007354      ba54000000     mov edx, 0x54                           ; 'T'
0x00007359      e832a9ffff     call sym.imp.__assert_fail
0x0000735e      e8bda8ffff     call sym.imp.__stack_chk_fail
0x00007363      662e0f1f8400.  nop word cs:[rax + rax]
0x0000736d      0f1f00         nop dword [rax]
;-- xstrtoumax:
0x00007370      4157           push r15
0x00007372      4156           push r14
0x00007374      4155           push r13
0x00007376      4154           push r12
0x00007378      55             push rbp
0x00007379      53             push rbx
0x0000737a      4883ec28       sub rsp, 0x28
0x0000737e      64488b042528.  mov rax, qword fs:[0x28]
0x00007387      4889442418     mov qword [rsp + 0x18], rax
0x0000738c      31c0           xor eax, eax
0x0000738e      83fa24         cmp edx, 0x24
0x00007391      0f875e030000   ja 0x76f5
0x00007397      488d442410     lea rax, [rsp + 0x10]
0x0000739c      4989f7         mov r15, rsi
0x0000739f      4885f6         test rsi, rsi
0x000073a2      4889fd         mov rbp, rdi
0x000073a5      89542408       mov dword [rsp + 8], edx
0x000073a9      4989ce         mov r14, rcx
0x000073ac      4d89c5         mov r13, r8
0x000073af      4c0f44f8       cmove r15, rax
0x000073b3      e868a7ffff     call sym.imp.__errno_location
0x000073b8      c70000000000   mov dword [rax], 0
0x000073be      4989c4         mov r12, rax
0x000073c1      0fb65d00       movzx ebx, byte [rbp]
0x000073c5      e886abffff     call sym.imp.__ctype_b_loc
0x000073ca      8b542408       mov edx, dword [rsp + 8]
0x000073ce      488b30         mov rsi, qword [rax]
0x000073d1      4889e8         mov rax, rbp
0x000073d4      eb11           jmp 0x73e7
0x000073d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000073e0      4883c001       add rax, 1
0x000073e4      0fb618         movzx ebx, byte [rax]
0x000073e7      0fb6cb         movzx ecx, bl
0x000073ea      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x000073ef      75ef           jne 0x73e0
0x000073f1      80fb2d         cmp bl, 0x2d
0x000073f4      7452           je 0x7448
0x000073f6      31c9           xor ecx, ecx
0x000073f8      4c89fe         mov rsi, r15
0x000073fb      4889ef         mov rdi, rbp
0x000073fe      e89da8ffff     call sym.imp.__strtoul_internal
0x00007403      498b0f         mov rcx, qword [r15]
0x00007406      4889c3         mov rbx, rax
0x00007409      4839e9         cmp rcx, rbp
0x0000740c      742a           je 0x7438
0x0000740e      418b0424       mov eax, dword [r12]
0x00007412      85c0           test eax, eax
0x00007414      7462           je 0x7478
0x00007416      83f822         cmp eax, 0x22
0x00007419      bd01000000     mov ebp, 1
0x0000741e      7528           jne 0x7448
0x00007420      4d85ed         test r13, r13
0x00007423      7409           je 0x742e
0x00007425      440fb621       movzx r12d, byte [rcx]
0x00007429      4584e4         test r12b, r12b
0x0000742c      7579           jne 0x74a7
0x0000742e      49891e         mov qword [r14], rbx
0x00007431      eb1a           jmp 0x744d
0x00007433      0f1f440000     nop dword [rax + rax]
0x00007438      4d85ed         test r13, r13
0x0000743b      48894c2408     mov qword [rsp + 8], rcx
0x00007440      753e           jne 0x7480
0x00007442      660f1f440000   nop word [rax + rax]
0x00007448      bd04000000     mov ebp, 4
0x0000744d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00007452      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000745b      89e8           mov eax, ebp
0x0000745d      0f858d020000   jne 0x76f0
0x00007463      4883c428       add rsp, 0x28
0x00007467      5b             pop rbx
0x00007468      5d             pop rbp
0x00007469      415c           pop r12
0x0000746b      415d           pop r13
0x0000746d      415e           pop r14
0x0000746f      415f           pop r15
0x00007471      c3             ret
0x00007472      660f1f440000   nop word [rax + rax]
0x00007478      31ed           xor ebp, ebp
0x0000747a      eba4           jmp 0x7420
0x0000747c      0f1f4000       nop dword [rax]
0x00007480      440fb66500     movzx r12d, byte [rbp]
0x00007485      4584e4         test r12b, r12b
0x00007488      74be           je 0x7448
0x0000748a      410fbef4       movsx esi, r12b
0x0000748e      4c89ef         mov rdi, r13
0x00007491      31ed           xor ebp, ebp
0x00007493      e8c8a7ffff     call sym.imp.strchr
0x00007498      4885c0         test rax, rax
0x0000749b      bb01000000     mov ebx, 1
0x000074a0      488b4c2408     mov rcx, qword [rsp + 8]
0x000074a5      74a1           je 0x7448
0x000074a7      410fbef4       movsx esi, r12b
0x000074ab      4c89ef         mov rdi, r13
0x000074ae      48894c2408     mov qword [rsp + 8], rcx
0x000074b3      e8a8a7ffff     call sym.imp.strchr
0x000074b8      4885c0         test rax, rax
0x000074bb      488b4c2408     mov rcx, qword [rsp + 8]
0x000074c0      0f84c6000000   je 0x758c
0x000074c6      418d4424bb     lea eax, [r12 - 0x45]
0x000074cb      3c2f           cmp al, 0x2f
0x000074cd      7751           ja 0x7520
0x000074cf      48ba45893000.  movabs rdx, 0x814400308945
0x000074d9      480fa3c2       bt rdx, rax
0x000074dd      7341           jae 0x7520
0x000074df      be30000000     mov esi, 0x30                           ; '0'
0x000074e4      4c89ef         mov rdi, r13
0x000074e7      48894c2408     mov qword [rsp + 8], rcx
0x000074ec      e86fa7ffff     call sym.imp.strchr
0x000074f1      4885c0         test rax, rax
0x000074f4      488b4c2408     mov rcx, qword [rsp + 8]
0x000074f9      7425           je 0x7520
0x000074fb      0fb64101       movzx eax, byte [rcx + 1]
0x000074ff      3c44           cmp al, 0x44
0x00007501      740c           je 0x750f
0x00007503      3c69           cmp al, 0x69
0x00007505      0f84cd010000   je 0x76d8
0x0000750b      3c42           cmp al, 0x42
0x0000750d      7511           jne 0x7520
0x0000750f      bf02000000     mov edi, 2
0x00007514      bee8030000     mov esi, 0x3e8
0x00007519      eb0f           jmp 0x752a
0x0000751b      0f1f440000     nop dword [rax + rax]
0x00007520      bf01000000     mov edi, 1
0x00007525      be00040000     mov esi, 0x400
0x0000752a      4183ec42       sub r12d, 0x42
0x0000752e      4180fc35       cmp r12b, 0x35
0x00007532      7758           ja 0x758c
0x00007534      488d15e5ff00.  lea rdx, [0x00017520]
0x0000753b      450fb6e4       movzx r12d, r12b
0x0000753f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00007543      4801d0         add rax, rdx
0x00007546      ffe0           jmp rax
0x00007548      4889d8         mov rax, rbx
0x0000754b      48f7e6         mul rsi
0x0000754e      0f80ed010000   jo 0x7741
0x00007554      4531c0         xor r8d, r8d
0x00007557      48f7e6         mul rsi
0x0000755a      0f80d2010000   jo 0x7732
0x00007560      4889c3         mov rbx, rax
0x00007563      4409c5         or ebp, r8d
0x00007566      662e0f1f8400.  nop word cs:[rax + rax]
0x00007570      4863ff         movsxd rdi, edi
0x00007573      89e8           mov eax, ebp
0x00007575      4801f9         add rcx, rdi
0x00007578      83c802         or eax, 2
0x0000757b      49890f         mov qword [r15], rcx
0x0000757e      803900         cmp byte [rcx], 0
0x00007581      49891e         mov qword [r14], rbx
0x00007584      0f45e8         cmovne ebp, eax
0x00007587      e9c1feffff     jmp 0x744d
0x0000758c      49891e         mov qword [r14], rbx
0x0000758f      83cd02         or ebp, 2
0x00007592      e9b6feffff     jmp 0x744d
0x00007597      ba02000000     mov edx, 2
0x0000759c      4889d0         mov rax, rdx
0x0000759f      48f7e3         mul rbx
0x000075a2      0f8096000000   jo 0x763e
0x000075a8      4801db         add rbx, rbx
0x000075ab      ebc3           jmp 0x7570
0x000075ad      ba00020000     mov edx, 0x200
0x000075b2      4889d0         mov rax, rdx
0x000075b5      48f7e3         mul rbx
0x000075b8      0f8080000000   jo 0x763e
0x000075be      48c1e309       shl rbx, 9
0x000075c2      ebac           jmp 0x7570
0x000075c4      41b807000000   mov r8d, 7
0x000075ca      4531c9         xor r9d, r9d
0x000075cd      0f1f00         nop dword [rax]
0x000075d0      4889d8         mov rax, rbx
0x000075d3      48f7e6         mul rsi
0x000075d6      4889c3         mov rbx, rax
0x000075d9      0f808f010000   jo 0x776e
0x000075df      4183e801       sub r8d, 1
0x000075e3      75eb           jne 0x75d0
0x000075e5      4409cd         or ebp, r9d
0x000075e8      eb86           jmp 0x7570
0x000075ea      41b808000000   mov r8d, 8
0x000075f0      4531c9         xor r9d, r9d
0x000075f3      0f1f440000     nop dword [rax + rax]
0x000075f8      4889d8         mov rax, rbx
0x000075fb      48f7e6         mul rsi
0x000075fe      4889c3         mov rbx, rax
0x00007601      0f8049010000   jo 0x7750
0x00007607      4183e801       sub r8d, 1
0x0000760b      75eb           jne 0x75f8
0x0000760d      ebd6           jmp 0x75e5
0x0000760f      41b804000000   mov r8d, 4
0x00007615      4531c9         xor r9d, r9d
0x00007618      4889d8         mov rax, rbx
0x0000761b      48f7e6         mul rsi
0x0000761e      4889c3         mov rbx, rax
0x00007621      0f80fc000000   jo 0x7723
0x00007627      4183e801       sub r8d, 1
0x0000762b      75eb           jne 0x7618
0x0000762d      ebb6           jmp 0x75e5
0x0000762f      4889d8         mov rax, rbx
0x00007632      48f7e6         mul rsi
0x00007635      4889c3         mov rbx, rax
0x00007638      0f8132ffffff   jno 0x7570
0x0000763e      bd01000000     mov ebp, 1
0x00007643      4883cbff       or rbx, 0xffffffffffffffff
0x00007647      e924ffffff     jmp 0x7570
0x0000764c      0f1f4000       nop dword [rax]
0x00007650      41b805000000   mov r8d, 5
0x00007656      4531c9         xor r9d, r9d
0x00007659      4889d8         mov rax, rbx
0x0000765c      48f7e6         mul rsi
0x0000765f      4889c3         mov rbx, rax
0x00007662      0f80f7000000   jo 0x775f
0x00007668      4183e801       sub r8d, 1
0x0000766c      75eb           jne 0x7659
0x0000766e      e972ffffff     jmp 0x75e5
0x00007673      41b806000000   mov r8d, 6
0x00007679      4531c9         xor r9d, r9d
0x0000767c      4889d8         mov rax, rbx
0x0000767f      48f7e6         mul rsi
0x00007682      4889c3         mov rbx, rax
0x00007685      0f8089000000   jo 0x7714
0x0000768b      4183e801       sub r8d, 1
0x0000768f      75eb           jne 0x767c
0x00007691      e94fffffff     jmp 0x75e5
0x00007696      ba00040000     mov edx, 0x400
0x0000769b      4889d0         mov rax, rdx
0x0000769e      48f7e3         mul rbx
0x000076a1      709b           jo 0x763e
0x000076a3      48c1e30a       shl rbx, 0xa
0x000076a7      e9c4feffff     jmp 0x7570
0x000076ac      4889d8         mov rax, rbx
0x000076af      48f7e6         mul rsi
0x000076b2      0f80c5000000   jo 0x777d
0x000076b8      4531c0         xor r8d, r8d
0x000076bb      48f7e6         mul rsi
0x000076be      0f8193feffff   jno 0x7557
0x000076c4      41b801000000   mov r8d, 1
0x000076ca      4883c8ff       or rax, 0xffffffffffffffff
0x000076ce      e984feffff     jmp 0x7557
0x000076d3      0f1f440000     nop dword [rax + rax]
0x000076d8      31ff           xor edi, edi
0x000076da      80790242       cmp byte [rcx + 2], 0x42
0x000076de      be00040000     mov esi, 0x400
0x000076e3      400f94c7       sete dil
0x000076e7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000076eb      e93afeffff     jmp 0x752a
0x000076f0      e82ba5ffff     call sym.imp.__stack_chk_fail
0x000076f5      488d0dfcfe00.  lea rcx, obj.__PRETTY_FUNCTION__.4162_1 ; 0x175f8 ; "xstrtoumax"
0x000076fc      488d35edfc00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x173f0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00007703      488d3d06fd00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x17410 ; "0 <= strtol_base && strtol_base <= 36"
0x0000770a      ba54000000     mov edx, 0x54                           ; 'T'
0x0000770f      e87ca5ffff     call sym.imp.__assert_fail
0x00007714      41b901000000   mov r9d, 1
0x0000771a      4883cbff       or rbx, 0xffffffffffffffff
0x0000771e      e968ffffff     jmp 0x768b
0x00007723      41b901000000   mov r9d, 1
0x00007729      4883cbff       or rbx, 0xffffffffffffffff
0x0000772d      e9f5feffff     jmp 0x7627
0x00007732      41b801000000   mov r8d, 1
0x00007738      4883cbff       or rbx, 0xffffffffffffffff
0x0000773c      e922feffff     jmp 0x7563
0x00007741      4883c8ff       or rax, 0xffffffffffffffff
0x00007745      41b801000000   mov r8d, 1
0x0000774b      e907feffff     jmp 0x7557
0x00007750      41b901000000   mov r9d, 1
0x00007756      4883cbff       or rbx, 0xffffffffffffffff
0x0000775a      e9a8feffff     jmp 0x7607
0x0000775f      41b901000000   mov r9d, 1
0x00007765      4883cbff       or rbx, 0xffffffffffffffff
0x00007769      e9fafeffff     jmp 0x7668
0x0000776e      41b901000000   mov r9d, 1
0x00007774      4883cbff       or rbx, 0xffffffffffffffff
0x00007778      e962feffff     jmp 0x75df
0x0000777d      41b801000000   mov r8d, 1
0x00007783      4883c8ff       or rax, 0xffffffffffffffff
0x00007787      e92fffffff     jmp 0x76bb
0x0000778c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00007790      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00007792      55             push rbp
0x00007793      53             push rbx
0x00007794      4889fb         mov rbx, rdi
0x00007797      e8e4a5ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000779c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000779e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000077a1      7854           js 0x77f7                               ; ../coreutils-8.31/lib/fclose.c:66
0x000077a3      e838a6ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000077a8      85c0           test eax, eax
0x000077aa      752c           jne 0x77d8
0x000077ac      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000077af      e8dc020000     call sym.rpl_fflush
0x000077b4      85c0           test eax, eax
0x000077b6      743c           je 0x77f4
0x000077b8      e863a3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000077bd      448b20         mov r12d, dword [rax]
0x000077c0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000077c3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000077c6      e805a4ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000077cb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000077ce      7530           jne 0x7800
0x000077d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000077d1      5d             pop rbp
0x000077d2      415c           pop r12
0x000077d4      c3             ret
0x000077d5      0f1f00         nop dword [rax]
0x000077d8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000077db      e8a0a5ffff     call sym.imp.fileno
0x000077e0      31f6           xor esi, esi
0x000077e2      ba01000000     mov edx, 1
0x000077e7      89c7           mov edi, eax
0x000077e9      e892a4ffff     call sym.imp.lseek
0x000077ee      4883f8ff       cmp rax, 0xffffffffffffffff
0x000077f2      75b8           jne 0x77ac
0x000077f4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000077f7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000077f8      5d             pop rbp
0x000077f9      415c           pop r12
0x000077fb      e9d0a3ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00007800      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00007804      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00007809      ebc5           jmp 0x77d0
0x0000780b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00007810      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00007812      55             push rbp
0x00007813      89fd           mov ebp, edi
0x00007815      53             push rbx
0x00007816      4883ec50       sub rsp, 0x50
0x0000781a      64488b042528.  mov rax, qword fs:[0x28]
0x00007823      4889442418     mov qword [rsp + 0x18], rax
0x00007828      31c0           xor eax, eax
0x0000782a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000782f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00007831      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00007836      48894c2438     mov qword [rsp + 0x38], rcx
0x0000783b      4c89442440     mov qword [rsp + 0x40], r8
0x00007840      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00007845      488d442420     lea rax, [rsp + 0x20]
0x0000784a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000784f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00007856      4889442410     mov qword [rsp + 0x10], rax
0x0000785b      0f8401020000   je 0x7a62                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00007861      81fe06040000   cmp esi, 0x406
0x00007867      7547           jne 0x78b0
0x00007869      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000786e      833d034b2100.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x21c378:4]=0
0x00007875      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2f90 rip
0x0000787c      448b6010       mov r12d, dword [rax + 0x10]
0x00007880      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00007883      0f882a010000   js 0x79b3                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00007889      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000788b      be06040000     mov esi, 0x406
0x00007890      e8fba2ffff     call sym.imp.fcntl
0x00007895      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00007897      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00007899      0f8889010000   js 0x7a28                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000789f      c705cf4a2100.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x21c378:4]=0
0x000078a9      eb45           jmp 0x78f0
0x000078ab      0f1f440000     nop dword [rax + rax]
0x000078b0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x000078b3      742b           je 0x78e0
0x000078b5      7f59           jg 0x7910
0x000078b7      83fe04         cmp esi, 4
0x000078ba      0f84d0000000   je 0x7990
0x000078c0      0f8fba000000   jg 0x7980
0x000078c6      83fe02         cmp esi, 2
0x000078c9      0f84c1000000   je 0x7990
0x000078cf      7f0f           jg 0x78e0
0x000078d1      83fe01         cmp esi, 1
0x000078d4      7562           jne 0x7938
0x000078d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000078e0      89ef           mov edi, ebp
0x000078e2      31c0           xor eax, eax
0x000078e4      e8a7a2ffff     call sym.imp.fcntl
0x000078e9      89c3           mov ebx, eax
0x000078eb      0f1f440000     nop dword [rax + rax]
0x000078f0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000078f5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000078fe      89d8           mov eax, ebx
0x00007900      0f8557010000   jne 0x7a5d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00007906      4883c450       add rsp, 0x50
0x0000790a      5b             pop rbx
0x0000790b      5d             pop rbp
0x0000790c      415c           pop r12
0x0000790e      c3             ret
0x0000790f      90             nop
0x00007910      81fe07040000   cmp esi, 0x407
0x00007916      7f48           jg 0x7960
0x00007918      81fe06040000   cmp esi, 0x406
0x0000791e      7d70           jge 0x7990
0x00007920      81fe01040000   cmp esi, 0x401
0x00007926      74b8           je 0x78e0
0x00007928      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000792e      7460           je 0x7990
0x00007930      81fe00040000   cmp esi, 0x400
0x00007936      7458           je 0x7990
0x00007938      8b0424         mov eax, dword [rsp]
0x0000793b      83f82f         cmp eax, 0x2f
0x0000793e      0f8736010000   ja 0x7a7a
0x00007944      4803442410     add rax, qword [rsp + 0x10]
0x00007949      488b10         mov rdx, qword [rax]
0x0000794c      89ef           mov edi, ebp
0x0000794e      31c0           xor eax, eax
0x00007950      e83ba2ffff     call sym.imp.fcntl
0x00007955      89c3           mov ebx, eax
0x00007957      eb97           jmp 0x78f0
0x00007959      0f1f80000000.  nop dword [rax]
0x00007960      81fe09040000   cmp esi, 0x409
0x00007966      7428           je 0x7990
0x00007968      0f8c72ffffff   jl 0x78e0
0x0000796e      81fe0a040000   cmp esi, 0x40a
0x00007974      75c2           jne 0x7938
0x00007976      e965ffffff     jmp 0x78e0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000797b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00007980      83fe09         cmp esi, 9
0x00007983      0f8457ffffff   je 0x78e0
0x00007989      7f05           jg 0x7990
0x0000798b      83fe08         cmp esi, 8
0x0000798e      75a8           jne 0x7938
0x00007990      8b0424         mov eax, dword [rsp]
0x00007993      83f82f         cmp eax, 0x2f
0x00007996      0f87e8000000   ja 0x7a84
0x0000799c      4803442410     add rax, qword [rsp + 0x10]
0x000079a1      8b10           mov edx, dword [rax]
0x000079a3      89ef           mov edi, ebp
0x000079a5      31c0           xor eax, eax
0x000079a7      e8e4a1ffff     call sym.imp.fcntl
0x000079ac      89c3           mov ebx, eax
0x000079ae      e93dffffff     jmp 0x78f0
0x000079b3      31f6           xor esi, esi
0x000079b5      31c0           xor eax, eax
0x000079b7      e8d4a1ffff     call sym.imp.fcntl
0x000079bc      85c0           test eax, eax
0x000079be      89c3           mov ebx, eax
0x000079c0      0f882affffff   js 0x78f0
0x000079c6      833dab492100.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21c378:4]=0
0x000079cd      0f851dffffff   jne 0x78f0
0x000079d3      31c0           xor eax, eax
0x000079d5      be01000000     mov esi, 1
0x000079da      89df           mov edi, ebx
0x000079dc      e8afa1ffff     call sym.imp.fcntl
0x000079e1      85c0           test eax, eax
0x000079e3      781c           js 0x7a01
0x000079e5      83c801         or eax, 1
0x000079e8      be02000000     mov esi, 2
0x000079ed      89df           mov edi, ebx
0x000079ef      89c2           mov edx, eax
0x000079f1      31c0           xor eax, eax
0x000079f3      e898a1ffff     call sym.imp.fcntl
0x000079f8      83f8ff         cmp eax, 0xffffffff
0x000079fb      0f85effeffff   jne 0x78f0
0x00007a01      e81aa1ffff     call sym.imp.__errno_location
0x00007a06      448b20         mov r12d, dword [rax]
0x00007a09      4889c5         mov rbp, rax
0x00007a0c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00007a0e      e8ada2ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00007a13      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00007a18      44896500       mov dword [rbp], r12d
0x00007a1c      e9cffeffff     jmp 0x78f0
0x00007a21      0f1f80000000.  nop dword [rax]
0x00007a28      e8f3a0ffff     call sym.imp.__errno_location
0x00007a2d      833816         cmp dword [rax], 0x16
0x00007a30      0f8569feffff   jne 0x789f
0x00007a36      31f6           xor esi, esi
0x00007a38      31c0           xor eax, eax
0x00007a3a      4489e2         mov edx, r12d
0x00007a3d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00007a3f      e84ca1ffff     call sym.imp.fcntl
0x00007a44      85c0           test eax, eax
0x00007a46      89c3           mov ebx, eax
0x00007a48      0f88a2feffff   js 0x78f0
0x00007a4e      c70520492100.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21c378:4]=0
0x00007a58      e976ffffff     jmp 0x79d3
0x00007a5d      e8bea1ffff     call sym.imp.__stack_chk_fail
0x00007a62      488b442410     mov rax, qword [rsp + 0x10]
0x00007a67      31f6           xor esi, esi
0x00007a69      8b5010         mov edx, dword [rax + 0x10]
0x00007a6c      31c0           xor eax, eax
0x00007a6e      e81da1ffff     call sym.imp.fcntl
0x00007a73      89c3           mov ebx, eax
0x00007a75      e976feffff     jmp 0x78f0
0x00007a7a      488b442408     mov rax, qword [rsp + 8]
0x00007a7f      e9c5feffff     jmp 0x7949
0x00007a84      488b442408     mov rax, qword [rsp + 8]
0x00007a89      e913ffffff     jmp 0x79a1
0x00007a8e      6690           nop
;-- rpl_fflush:
0x00007a90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00007a93      53             push rbx
0x00007a94      4889fb         mov rbx, rdi
0x00007a97      7411           je 0x7aaa                               ; ../coreutils-8.31/lib/fflush.c:150
0x00007a99      e842a3ffff     call sym.imp.__freading
0x00007a9e      85c0           test eax, eax
0x00007aa0      7408           je 0x7aaa
0x00007aa2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00007aa8      750e           jne 0x7ab8
0x00007aaa      4889df         mov rdi, rbx
0x00007aad      5b             pop rbx
0x00007aae      e90da3ffff     jmp sym.imp.fflush
0x00007ab3      0f1f440000     nop dword [rax + rax]
0x00007ab8      4889df         mov rdi, rbx
0x00007abb      ba01000000     mov edx, 1
0x00007ac0      31f6           xor esi, esi
0x00007ac2      e809000000     call sym.rpl_fseeko
0x00007ac7      4889df         mov rdi, rbx
0x00007aca      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00007acb      e9f0a2ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00007ad0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00007ad4      48394710       cmp qword [rdi + 0x10], rax
0x00007ad8      7406           je 0x7ae0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00007ada      e9a1a3ffff     jmp sym.imp.fseeko
0x00007adf      90             nop
0x00007ae0      488b4720       mov rax, qword [rdi + 0x20]
0x00007ae4      48394728       cmp qword [rdi + 0x28], rax
0x00007ae8      75f0           jne 0x7ada                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00007aea      48837f4800     cmp qword [rdi + 0x48], 0
0x00007aef      75e9           jne 0x7ada                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00007af1      4154           push r12
0x00007af3      55             push rbp
0x00007af4      4189d4         mov r12d, edx
0x00007af7      53             push rbx
0x00007af8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00007afb      4889fb         mov rbx, rdi
0x00007afe      e87da2ffff     call sym.imp.fileno
0x00007b03      4489e2         mov edx, r12d
0x00007b06      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00007b09      89c7           mov edi, eax
0x00007b0b      e870a1ffff     call sym.imp.lseek
0x00007b10      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007b14      740c           je 0x7b22
0x00007b16      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00007b19      488983900000.  mov qword [rbx + 0x90], rax
0x00007b20      31c0           xor eax, eax
0x00007b22      5b             pop rbx
0x00007b23      5d             pop rbp
0x00007b24      415c           pop r12
0x00007b26      c3             ret
0x00007b27      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00007b30      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00007b32      4154           push r12
0x00007b34      4989f5         mov r13, rsi
0x00007b37      55             push rbp
0x00007b38      53             push rbx
0x00007b39      4889fb         mov rbx, rdi
0x00007b3c      4989d4         mov r12, rdx
0x00007b3f      4883ec18       sub rsp, 0x18
0x00007b43      64488b042528.  mov rax, qword fs:[0x28]
0x00007b4c      4889442408     mov qword [rsp + 8], rax
0x00007b51      31c0           xor eax, eax
0x00007b53      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00007b58      4885ff         test rdi, rdi
0x00007b5b      480f44d8       cmove rbx, rax
0x00007b5f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00007b62      e8d9a0ffff     call sym.imp.mbrtowc
0x00007b67      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00007b6b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00007b6e      7620           jbe 0x7b90                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00007b70      4d85e4         test r12, r12
0x00007b73      741b           je 0x7b90
0x00007b75      31ff           xor edi, edi
0x00007b77      e8d4e20000     call sym.hard_locale
0x00007b7c      84c0           test al, al
0x00007b7e      7510           jne 0x7b90
0x00007b80      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00007b85      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00007b8a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00007b8c      0f1f4000       nop dword [rax]
0x00007b90      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00007b95      644833142528.  xor rdx, qword fs:[0x28]
0x00007b9e      4889e8         mov rax, rbp
0x00007ba1      750b           jne 0x7bae
0x00007ba3      4883c418       add rsp, 0x18
0x00007ba7      5b             pop rbx
0x00007ba8      5d             pop rbp
0x00007ba9      415c           pop r12
0x00007bab      415d           pop r13
0x00007bad      c3             ret
0x00007bae      e86da0ffff     call sym.imp.__stack_chk_fail
0x00007bb3      662e0f1f8400.  nop word cs:[rax + rax]
0x00007bbd      0f1f00         nop dword [rax]
;-- peek_token_bracket:
0x00007bc0      488b4648       mov rax, qword [rsi + 0x48]             ; ../coreutils-8.31/lib/regcomp.c:2026
0x00007bc4      48394668       cmp qword [rsi + 0x68], rax
0x00007bc8      7e56           jle 0x7c20
0x00007bca      4c8b4608       mov r8, qword [rsi + 8]                 ; ../coreutils-8.31/lib/regcomp.c:2033
0x00007bce      83be90000000.  cmp dword [rsi + 0x90], 1               ; ../coreutils-8.31/lib/regcomp.c:2037
0x00007bd5      410fb60c00     movzx ecx, byte [r8 + rax]              ; ../coreutils-8.31/lib/regcomp.c:2033
0x00007bda      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/regcomp.c:2034
0x00007bdc      7e15           jle 0x7bf3                              ; ../coreutils-8.31/lib/regcomp.c:2037
0x00007bde      483b4630       cmp rax, qword [rsi + 0x30]
0x00007be2      740f           je 0x7bf3
0x00007be4      4c8b4e10       mov r9, qword [rsi + 0x10]              ; ../coreutils-8.31/lib/regcomp.c:2038
0x00007be8      41833c81ff     cmp dword [r9 + rax*4], 0xffffffff
0x00007bed      0f847c000000   je 0x7c6f
0x00007bf3      80f95c         cmp cl, 0x5c                            ; ../coreutils-8.31/lib/regcomp.c:2045
0x00007bf6      7468           je 0x7c60
0x00007bf8      80f95b         cmp cl, 0x5b                            ; ../coreutils-8.31/lib/regcomp.c:2056
0x00007bfb      7433           je 0x7c30
0x00007bfd      80f95d         cmp cl, 0x5d                            ; ../coreutils-8.31/lib/regcomp.c:2091
0x00007c00      0f849a000000   je 0x7ca0
0x00007c06      80f95e         cmp cl, 0x5e
0x00007c09      0f8481000000   je 0x7c90
0x00007c0f      80f92d         cmp cl, 0x2d
0x00007c12      755b           jne 0x7c6f
0x00007c14      c6470816       mov byte [rdi + 8], 0x16                ; ../coreutils-8.31/lib/regcomp.c:2094 ; [0x16:1]=0
0x00007c18      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00007c1d      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2095
0x00007c1e      6690           nop
0x00007c20      c6470802       mov byte [rdi + 8], 2                   ; ../coreutils-8.31/lib/regcomp.c:2030
0x00007c24      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:2031
0x00007c26      c3             ret
0x00007c27      660f1f840000.  nop word [rax + rax]
0x00007c30      488d4801       lea rcx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2060
0x00007c34      483b4e58       cmp rcx, qword [rsi + 0x58]
0x00007c38      7d46           jge 0x7c80
0x00007c3a      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2061
0x00007c40      3c3a           cmp al, 0x3a                            ; ../coreutils-8.31/lib/regcomp.c:2066
0x00007c42      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2064
0x00007c44      0f8496000000   je 0x7ce0                               ; ../coreutils-8.31/lib/regcomp.c:2066
0x00007c4a      3c3d           cmp al, 0x3d
0x00007c4c      0f847e000000   je 0x7cd0
0x00007c52      3c2e           cmp al, 0x2e
0x00007c54      752a           jne 0x7c80
0x00007c56      c647081a       mov byte [rdi + 8], 0x1a                ; ../coreutils-8.31/lib/regcomp.c:2069 ; [0x1a:1]=0
0x00007c5a      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x00007c5f      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2070
0x00007c60      83e201         and edx, 1                              ; ../coreutils-8.31/lib/regcomp.c:2045
0x00007c63      740a           je 0x7c6f
0x00007c65      488d5001       lea rdx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2046
0x00007c69      483b5658       cmp rdx, qword [rsi + 0x58]
0x00007c6d      7c41           jl 0x7cb0
0x00007c6f      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2103
0x00007c73      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00007c78      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2106
0x00007c79      0f1f80000000.  nop dword [rax]
0x00007c80      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2084
0x00007c84      c6075b         mov byte [rdi], 0x5b                    ; ../coreutils-8.31/lib/regcomp.c:2085 ; '['
                                                                       ; [0x5b:1]=0
0x00007c87      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2086
0x00007c8c      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2087
0x00007c8d      0f1f00         nop dword [rax]
0x00007c90      c6470819       mov byte [rdi + 8], 0x19                ; ../coreutils-8.31/lib/regcomp.c:2100 ; [0x19:1]=47
0x00007c94      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00007c99      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2101
0x00007c9a      660f1f440000   nop word [rax + rax]
0x00007ca0      c6470815       mov byte [rdi + 8], 0x15                ; ../coreutils-8.31/lib/regcomp.c:2097 ; [0x15:1]=0
0x00007ca4      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00007ca9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2098
0x00007caa      660f1f440000   nop word [rax + rax]
0x00007cb0      48895648       mov qword [rsi + 0x48], rdx             ; ../coreutils-8.31/lib/regcomp.c:2050
0x00007cb4      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2051
0x00007cba      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2053
0x00007cbe      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2052
0x00007cc0      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2054
0x00007cc5      c3             ret
0x00007cc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007cd0      c647081c       mov byte [rdi + 8], 0x1c                ; ../coreutils-8.31/lib/regcomp.c:2073 ; [0x1c:1]=0
0x00007cd4      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x00007cd9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2074
0x00007cda      660f1f440000   nop word [rax + rax]
0x00007ce0      83e204         and edx, 4                              ; ../coreutils-8.31/lib/regcomp.c:2077
0x00007ce3      749b           je 0x7c80
0x00007ce5      c647081e       mov byte [rdi + 8], 0x1e                ; ../coreutils-8.31/lib/regcomp.c:2079 ; [0x1e:1]=0
0x00007ce9      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x00007cee      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2080
0x00007cef      90             nop
;-- mark_opt_subexp:
0x00007cf0      807e3011       cmp byte [rsi + 0x30], 0x11             ; ../coreutils-8.31/lib/regcomp.c:3858
0x00007cf4      740a           je 0x7d00
0x00007cf6      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x00007cf8      c3             ret
0x00007cf9      0f1f80000000.  nop dword [rax]
0x00007d00      483b7e28       cmp rdi, qword [rsi + 0x28]             ; ../coreutils-8.31/lib/regcomp.c:3860
0x00007d04      75f0           jne 0x7cf6
0x00007d06      804e3208       or byte [rsi + 0x32], 8                 ; ../coreutils-8.31/lib/regcomp.c:3861
0x00007d0a      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x00007d0c      c3             ret
0x00007d0d      0f1f00         nop dword [rax]
;-- check_dst_limits_calc_pos_1:
0x00007d10      4157           push r15                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00007d12      4156           push r14
0x00007d14      4989d1         mov r9, rdx
0x00007d17      4155           push r13
0x00007d19      4154           push r12
0x00007d1b      488d1449       lea rdx, [rcx + rcx*2]                  ; ../coreutils-8.31/lib/regexec.c:1907
0x00007d1f      55             push rbp                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00007d20      53             push rbx
0x00007d21      4189f7         mov r15d, esi
0x00007d24      4883ec48       sub rsp, 0x48
0x00007d28      4c8bb7980000.  mov r14, qword [rdi + 0x98]             ; ../coreutils-8.31/lib/regexec.c:1906
0x00007d2f      48893c24       mov qword [rsp], rdi                    ; ../coreutils-8.31/lib/regexec.c:1905
0x00007d33      498b4630       mov rax, qword [r14 + 0x30]             ; ../coreutils-8.31/lib/regexec.c:1907
0x00007d37      4c8d24d0       lea r12, [rax + rdx*8]
0x00007d3b      49837c240800   cmp qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/regexec.c:1912
0x00007d41      0f8e8e010000   jle 0x7ed5
0x00007d47      4b8d0480       lea rax, [r8 + r8*4]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x00007d4b      4989cb         mov r11, rcx
0x00007d4e      4489c9         mov ecx, r9d
0x00007d51      4d89c2         mov r10, r8
0x00007d54      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/regexec.c:1912
0x00007d56      89742420       mov dword [rsp + 0x20], esi             ; ../coreutils-8.31/lib/regexec.c:1971
0x00007d5a      48c1e003       shl rax, 3                              ; ../coreutils-8.31/lib/regexec.c:1920
0x00007d5e      4d89cf         mov r15, r9                             ; ../coreutils-8.31/lib/regexec.c:1971
0x00007d61      4c895c2410     mov qword [rsp + 0x10], r11
0x00007d66      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/regexec.c:1920
0x00007d6b      b801000000     mov eax, 1
0x00007d70      48d3e0         shl rax, cl
0x00007d73      4889442418     mov qword [rsp + 0x18], rax
0x00007d78      f7d0           not eax                                 ; ../coreutils-8.31/lib/regexec.c:1959
0x00007d7a      6689442426     mov word [rsp + 0x26], ax
0x00007d7f      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1966
0x00007d81      83e001         and eax, 1
0x00007d84      8944240c       mov dword [rsp + 0xc], eax
0x00007d88      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1971
0x00007d8a      83e002         and eax, 2
0x00007d8d      89442408       mov dword [rsp + 8], eax
0x00007d91      eb22           jmp 0x7db5
0x00007d93      0f1f440000     nop dword [rax + rax]
0x00007d98      80fa09         cmp dl, 9                               ; ../coreutils-8.31/lib/regexec.c:1915
0x00007d9b      0f844f010000   je 0x7ef0
0x00007da1      80fa04         cmp dl, 4
0x00007da4      7452           je 0x7df8
0x00007da6      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x00007daa      49395c2408     cmp qword [r12 + 8], rbx
0x00007daf      0f8e1b010000   jle 0x7ed0
0x00007db5      498b442410     mov rax, qword [r12 + 0x10]             ; ../coreutils-8.31/lib/regexec.c:1914
0x00007dba      488b2cd8       mov rbp, qword [rax + rbx*8]
0x00007dbe      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/regexec.c:1915
0x00007dc1      48c1e004       shl rax, 4
0x00007dc5      490306         add rax, qword [r14]
0x00007dc8      0fb65008       movzx edx, byte [rax + 8]
0x00007dcc      80fa08         cmp dl, 8
0x00007dcf      75c7           jne 0x7d98
0x00007dd1      8b4c240c       mov ecx, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/regexec.c:1966
0x00007dd5      85c9           test ecx, ecx
0x00007dd7      74cd           je 0x7da6
0x00007dd9      4c3938         cmp qword [rax], r15
0x00007ddc      75c8           jne 0x7da6
0x00007dde      4883c448       add rsp, 0x48                           ; ../coreutils-8.31/lib/regexec.c:1981
0x00007de2      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1953 ; -1
0x00007de7      5b             pop rbx                                 ; ../coreutils-8.31/lib/regexec.c:1981
0x00007de8      5d             pop rbp
0x00007de9      415c           pop r12
0x00007deb      415d           pop r13
0x00007ded      415e           pop r14
0x00007def      415f           pop r15
0x00007df1      c3             ret
0x00007df2      660f1f440000   nop word [rax + rax]
0x00007df8      4983faff       cmp r10, 0xffffffffffffffff             ; ../coreutils-8.31/lib/regexec.c:1918
0x00007dfc      74a8           je 0x7da6
0x00007dfe      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x00007e02      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00007e07      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/regexec.c:1940
0x00007e0a      4c89642430     mov qword [rsp + 0x30], r12
0x00007e0f      48895c2438     mov qword [rsp + 0x38], rbx
0x00007e14      4d89d4         mov r12, r10
0x00007e17      4c03a8d80000.  add r13, qword [rax + 0xd8]             ; ../coreutils-8.31/lib/regexec.c:1920
0x00007e1e      488d446d00     lea rax, [rbp + rbp*2]                  ; ../coreutils-8.31/lib/regexec.c:1940
0x00007e23      4c89f5         mov rbp, r14
0x00007e26      4989fe         mov r14, rdi
0x00007e29      48c1e003       shl rax, 3
0x00007e2d      4889c3         mov rbx, rax
0x00007e30      4d397500       cmp qword [r13], r14                    ; ../coreutils-8.31/lib/regexec.c:1926
0x00007e34      756a           jne 0x7ea0
0x00007e36      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1929
0x00007e3a      7f0c           jg 0x7e48
0x00007e3c      410fb74522     movzx eax, word [r13 + 0x22]            ; ../coreutils-8.31/lib/regexec.c:1930
0x00007e41      4885442418     test qword [rsp + 0x18], rax
0x00007e46      7458           je 0x7ea0
0x00007e48      488b4528       mov rax, qword [rbp + 0x28]             ; ../coreutils-8.31/lib/regexec.c:1940
0x00007e4c      488b441810     mov rax, qword [rax + rbx + 0x10]
0x00007e51      488b08         mov rcx, qword [rax]
0x00007e54      48394c2410     cmp qword [rsp + 0x10], rcx             ; ../coreutils-8.31/lib/regexec.c:1941
0x00007e59      0f84c1000000   je 0x7f20
0x00007e5f      8b742420       mov esi, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/regexec.c:1949
0x00007e63      488b3c24       mov rdi, qword [rsp]
0x00007e67      4d89e0         mov r8, r12
0x00007e6a      4c89fa         mov rdx, r15
0x00007e6d      e89efeffff     call sym.check_dst_limits_calc_pos_1
0x00007e72      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1952
0x00007e75      0f8463ffffff   je 0x7dde
0x00007e7b      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regexec.c:1954
0x00007e7d      7508           jne 0x7e87
0x00007e7f      8b742408       mov esi, dword [rsp + 8]
0x00007e83      85f6           test esi, esi
0x00007e85      757e           jne 0x7f05
0x00007e87      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1957
0x00007e8b      7f13           jg 0x7ea0
0x00007e8d      0fb7442426     movzx eax, word [rsp + 0x26]            ; ../coreutils-8.31/lib/regexec.c:1959
0x00007e92      6641214522     and word [r13 + 0x22], ax
0x00007e97      660f1f840000.  nop word [rax + rax]
0x00007ea0      4983c528       add r13, 0x28                           ; ../coreutils-8.31/lib/regexec.c:1961
0x00007ea4      41807df800     cmp byte [r13 - 8], 0
0x00007ea9      7585           jne 0x7e30
0x00007eab      488b5c2438     mov rbx, qword [rsp + 0x38]
0x00007eb0      4d89e2         mov r10, r12
0x00007eb3      4c8b642430     mov r12, qword [rsp + 0x30]
0x00007eb8      4989ee         mov r14, rbp
0x00007ebb      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x00007ebf      49395c2408     cmp qword [r12 + 8], rbx                ; ../coreutils-8.31/lib/regexec.c:1852
0x00007ec4      0f8febfeffff   jg 0x7db5
0x00007eca      660f1f440000   nop word [rax + rax]
0x00007ed0      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00007ed5      4883c448       add rsp, 0x48
0x00007ed9      4489f8         mov eax, r15d
0x00007edc      5b             pop rbx
0x00007edd      d1f8           sar eax, 1
0x00007edf      5d             pop rbp
0x00007ee0      415c           pop r12
0x00007ee2      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1843
0x00007ee4      415e           pop r14
0x00007ee6      415f           pop r15
0x00007ee8      c3             ret
0x00007ee9      0f1f80000000.  nop dword [rax]
0x00007ef0      8b542408       mov edx, dword [rsp + 8]
0x00007ef4      85d2           test edx, edx
0x00007ef6      0f84aafeffff   je 0x7da6
0x00007efc      4c3938         cmp qword [rax], r15
0x00007eff      0f85a1feffff   jne 0x7da6
0x00007f05      4883c448       add rsp, 0x48
0x00007f09      31c0           xor eax, eax
0x00007f0b      5b             pop rbx
0x00007f0c      5d             pop rbp
0x00007f0d      415c           pop r12
0x00007f0f      415d           pop r13
0x00007f11      415e           pop r14                                 ; ../coreutils-8.31/lib/regexec.c:1815
0x00007f13      415f           pop r15
0x00007f15      c3             ret
0x00007f16      662e0f1f8400.  nop word cs:[rax + rax]
0x00007f20      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00007f25      4883c448       add rsp, 0x48
0x00007f29      5b             pop rbx
0x00007f2a      5d             pop rbp
0x00007f2b      4489f8         mov eax, r15d
0x00007f2e      83e001         and eax, 1
0x00007f31      415c           pop r12
0x00007f33      f7d8           neg eax
0x00007f35      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1864
0x00007f37      415e           pop r14
0x00007f39      415f           pop r15
0x00007f3b      c3             ret
0x00007f3c      0f1f4000       nop dword [rax]
;-- check_dst_limits_calc_pos:
0x00007f40      488b87d80000.  mov rax, qword [rdi + 0xd8]
0x00007f47      488d34b6       lea rsi, [rsi + rsi*4]                  ; ../coreutils-8.31/lib/regexec.c:1871
0x00007f4b      488d04f0       lea rax, [rax + rsi*8]
0x00007f4f      4c8b5010       mov r10, qword [rax + 0x10]
0x00007f53      4d39c2         cmp r10, r8                             ; ../coreutils-8.31/lib/regexec.c:1872
0x00007f56      7f48           jg 0x7fa0
0x00007f58      488b4018       mov rax, qword [rax + 0x18]             ; ../coreutils-8.31/lib/regexec.c:1874
0x00007f5c      4c39c0         cmp rax, r8
0x00007f5f      7c1f           jl 0x7f80                               ; ../coreutils-8.31/lib/regexec.c:1879
0x00007f61      31f6           xor esi, esi
0x00007f63      4d39c2         cmp r10, r8
0x00007f66      400f94c6       sete sil                                ; ../coreutils-8.31/lib/regexec.c:1868
0x00007f6a      83ce02         or esi, 2
0x00007f6d      4c39c0         cmp rax, r8
0x00007f70      7423           je 0x7f95
0x00007f72      31c0           xor eax, eax
0x00007f74      4d39c2         cmp r10, r8
0x00007f77      7417           je 0x7f90
0x00007f79      f3c3           ret
0x00007f7b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regexec.c:1877
0x00007f80      b801000000     mov eax, 1
0x00007f85      c3             ret
0x00007f86      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:1865
0x00007f90      be01000000     mov esi, 1
0x00007f95      4d89c8         mov r8, r9
0x00007f98      e973fdffff     jmp sym.check_dst_limits_calc_pos_1
0x00007f9d      0f1f00         nop dword [rax]
0x00007fa0      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regcomp.c:1100 ; -1
0x00007fa5      c3             ret
0x00007fa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- postorder:
0x00007fb0      4154           push r12
0x00007fb2      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1107
0x00007fb5      55             push rbp
0x00007fb6      4889d5         mov rbp, rdx
0x00007fb9      53             push rbx
0x00007fba      4889fb         mov rbx, rdi
0x00007fbd      eb04           jmp 0x7fc3
0x00007fbf      90             nop
0x00007fc0      4889c3         mov rbx, rax
0x00007fc3      488b4308       mov rax, qword [rbx + 8]
0x00007fc7      4885c0         test rax, rax
0x00007fca      75f4           jne 0x7fc0
0x00007fcc      488b4310       mov rax, qword [rbx + 0x10]
0x00007fd0      4885c0         test rax, rax
0x00007fd3      75eb           jne 0x7fc0
0x00007fd5      4889de         mov rsi, rbx
0x00007fd8      4889ef         mov rdi, rbp
0x00007fdb      41ffd4         call r12
0x00007fde      85c0           test eax, eax
0x00007fe0      7534           jne 0x8016
0x00007fe2      660f1f440000   nop word [rax + rax]
0x00007fe8      488b13         mov rdx, qword [rbx]
0x00007feb      4885d2         test rdx, rdx
0x00007fee      7426           je 0x8016
0x00007ff0      488b4210       mov rax, qword [rdx + 0x10]
0x00007ff4      4839d8         cmp rax, rbx
0x00007ff7      4889d3         mov rbx, rdx
0x00007ffa      400f94c6       sete sil
0x00007ffe      4885c0         test rax, rax
0x00008001      0f94c1         sete cl
0x00008004      4008ce         or sil, cl
0x00008007      74b7           je 0x7fc0
0x00008009      4889de         mov rsi, rbx
0x0000800c      4889ef         mov rdi, rbp
0x0000800f      41ffd4         call r12
0x00008012      85c0           test eax, eax
0x00008014      74d2           je 0x7fe8
0x00008016      5b             pop rbx
0x00008017      5d             pop rbp
0x00008018      415c           pop r12
0x0000801a      c3             ret
0x0000801b      0f1f440000     nop dword [rax + rax]
;-- preorder:
0x00008020      4154           push r12
0x00008022      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1138
0x00008025      55             push rbp
0x00008026      4889d5         mov rbp, rdx                            ; ../coreutils-8.31/lib/regcomp.c:1142
0x00008029      53             push rbx
0x0000802a      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:1146
0x0000802d      eb04           jmp 0x8033
0x0000802f      90             nop
0x00008030      4889d3         mov rbx, rdx
0x00008033      4889de         mov rsi, rbx
0x00008036      4889ef         mov rdi, rbp
0x00008039      41ffd4         call r12                                ; ../coreutils-8.31/lib/regcomp.c:1147
0x0000803c      85c0           test eax, eax
0x0000803e      752c           jne 0x806c
0x00008040      488b5308       mov rdx, qword [rbx + 8]
0x00008044      31c9           xor ecx, ecx
0x00008046      4885d2         test rdx, rdx
0x00008049      75e5           jne 0x8030
0x0000804b      eb06           jmp 0x8053
0x0000804d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regcomp.c:1151
0x00008050      4889d3         mov rbx, rdx
0x00008053      488b5310       mov rdx, qword [rbx + 0x10]
0x00008057      4839ca         cmp rdx, rcx
0x0000805a      7405           je 0x8061
0x0000805c      4885d2         test rdx, rdx
0x0000805f      75cf           jne 0x8030
0x00008061      488b13         mov rdx, qword [rbx]
0x00008064      4889d9         mov rcx, rbx
0x00008067      4885d2         test rdx, rdx
0x0000806a      75e4           jne 0x8050
0x0000806c      5b             pop rbx
0x0000806d      5d             pop rbp
0x0000806e      415c           pop r12
0x00008070      c3             ret
0x00008071      0f1f440000     nop dword [rax + rax]
0x00008076      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_realloc_buffers:
0x00008080      55             push rbp
0x00008081      53             push rbx
0x00008082      4889f5         mov rbp, rsi
0x00008085      4889fb         mov rbx, rdi
0x00008088      4883ec08       sub rsp, 8
0x0000808c      83bf90000000.  cmp dword [rdi + 0x90], 1
0x00008093      7e48           jle 0x80dd
0x00008095      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x0000809f      4839c6         cmp rsi, rax
0x000080a2      776c           ja 0x8110
0x000080a4      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:28
0x000080a8      488d34b50000.  lea rsi, [rsi*4]                        ; ../coreutils-8.31/lib/regex_internal.c:29
0x000080b0      e84b9dffff     call sym.imp.realloc
0x000080b5      4885c0         test rax, rax
0x000080b8      7456           je 0x8110
0x000080ba      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:32
0x000080be      48894310       mov qword [rbx + 0x10], rax
0x000080c2      4885ff         test rdi, rdi
0x000080c5      7416           je 0x80dd
0x000080c7      488d34ed0000.  lea rsi, [rbp*8]
0x000080cf      e82c9dffff     call sym.imp.realloc
0x000080d4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:47
0x000080d7      7437           je 0x8110
0x000080d9      48894318       mov qword [rbx + 0x18], rax
0x000080dd      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000080e4      7512           jne 0x80f8
0x000080e6      48896b40       mov qword [rbx + 0x40], rbp
0x000080ea      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:42
0x000080ee      31c0           xor eax, eax
0x000080f0      5b             pop rbx
0x000080f1      5d             pop rbp
0x000080f2      c3             ret
0x000080f3      0f1f440000     nop dword [rax + rax]
0x000080f8      488b7b08       mov rdi, qword [rbx + 8]
0x000080fc      4889ee         mov rsi, rbp
0x000080ff      e8fc9cffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/regex_internal.c:48
0x00008104      4885c0         test rax, rax
0x00008107      7407           je 0x8110
0x00008109      48894308       mov qword [rbx + 8], rax
0x0000810d      ebd7           jmp 0x80e6
0x0000810f      90             nop
0x00008110      4883c408       add rsp, 8
0x00008114      b80c000000     mov eax, 0xc
0x00008119      5b             pop rbx
0x0000811a      5d             pop rbp
0x0000811b      c3             ret
0x0000811c      0f1f4000       nop dword [rax]
;-- re_node_set_insert_last:
0x00008120      55             push rbp
0x00008121      53             push rbx
0x00008122      4889f5         mov rbp, rsi
0x00008125      4889fb         mov rbx, rdi
0x00008128      4883ec08       sub rsp, 8
0x0000812c      488b7708       mov rsi, qword [rdi + 8]
0x00008130      483937         cmp qword [rdi], rsi                    ; ../coreutils-8.31/lib/regex_internal.c:1224
0x00008133      488b4710       mov rax, qword [rdi + 0x10]
0x00008137      741f           je 0x8158
0x00008139      488d5601       lea rdx, [rsi + 1]
0x0000813d      48895308       mov qword [rbx + 8], rdx
0x00008141      48892cf0       mov qword [rax + rsi*8], rbp
0x00008145      b801000000     mov eax, 1
0x0000814a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:1214
0x0000814e      5b             pop rbx
0x0000814f      5d             pop rbp
0x00008150      c3             ret
0x00008151      0f1f80000000.  nop dword [rax]
0x00008158      4883c601       add rsi, 1
0x0000815c      488d1436       lea rdx, [rsi + rsi]
0x00008160      48c1e604       shl rsi, 4
0x00008164      488917         mov qword [rdi], rdx
0x00008167      4889c7         mov rdi, rax
0x0000816a      e8919cffff     call sym.imp.realloc
0x0000816f      4885c0         test rax, rax
0x00008172      740c           je 0x8180
0x00008174      48894310       mov qword [rbx + 0x10], rax
0x00008178      488b7308       mov rsi, qword [rbx + 8]
0x0000817c      ebbb           jmp 0x8139
0x0000817e      6690           nop
0x00008180      31c0           xor eax, eax
0x00008182      ebc6           jmp 0x814a                              ; ../coreutils-8.31/lib/regex_internal.c:1160
0x00008184      6690           nop
0x00008186      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_insert:
0x00008190      55             push rbp
0x00008191      53             push rbx
0x00008192      4889f5         mov rbp, rsi
0x00008195      4889fb         mov rbx, rdi
0x00008198      4883ec08       sub rsp, 8
0x0000819c      488b17         mov rdx, qword [rdi]
0x0000819f      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/regex_internal.c:1168
0x000081a2      7424           je 0x81c8
0x000081a4      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/regex_internal.c:1200
0x000081a8      488b4710       mov rax, qword [rdi + 0x10]
0x000081ac      4885f6         test rsi, rsi
0x000081af      754f           jne 0x8200
0x000081b1      488928         mov qword [rax], rbp
0x000081b4      4883470801     add qword [rdi + 8], 1
0x000081b9      b801000000     mov eax, 1
0x000081be      4883c408       add rsp, 8
0x000081c2      5b             pop rbx
0x000081c3      5d             pop rbp
0x000081c4      c3             ret
0x000081c5      0f1f00         nop dword [rax]
0x000081c8      48c707010000.  mov qword [rdi], 1
0x000081cf      48c747080100.  mov qword [rdi + 8], 1
0x000081d7      bf08000000     mov edi, 8
0x000081dc      e8bf9bffff     call sym.imp.malloc
0x000081e1      4885c0         test rax, rax
0x000081e4      48894310       mov qword [rbx + 0x10], rax
0x000081e8      0f848a000000   je 0x8278
0x000081ee      488928         mov qword [rax], rbp
0x000081f1      4883c408       add rsp, 8
0x000081f5      b801000000     mov eax, 1
0x000081fa      5b             pop rbx
0x000081fb      5d             pop rbp
0x000081fc      c3             ret                                     ; ../coreutils-8.31/lib/regex_internal.c:1187
0x000081fd      0f1f00         nop dword [rax]
0x00008200      4839f2         cmp rdx, rsi
0x00008203      0f8487000000   je 0x8290
0x00008209      483928         cmp qword [rax], rbp
0x0000820c      488d14f50000.  lea rdx, [rsi*8]
0x00008214      7e3a           jle 0x8250
0x00008216      4885f6         test rsi, rsi
0x00008219      7e18           jle 0x8233                              ; ../coreutils-8.31/lib/regex_internal.c:1197
0x0000821b      4801c2         add rdx, rax
0x0000821e      6690           nop
0x00008220      488b4af8       mov rcx, qword [rdx - 8]
0x00008224      4883ea08       sub rdx, 8
0x00008228      48894a08       mov qword [rdx + 8], rcx
0x0000822c      4839d0         cmp rax, rdx
0x0000822f      75ef           jne 0x8220
0x00008231      31d2           xor edx, edx
0x00008233      48892c10       mov qword [rax + rdx], rbp
0x00008237      b801000000     mov eax, 1
0x0000823c      4883430801     add qword [rbx + 8], 1
0x00008241      e978ffffff     jmp 0x81be
0x00008246      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regex_internal.c:1193
0x00008250      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x00008255      4839cd         cmp rbp, rcx
0x00008258      7dd9           jge 0x8233
0x0000825a      660f1f440000   nop word [rax + rax]
0x00008260      48890c10       mov qword [rax + rdx], rcx
0x00008264      4883ea08       sub rdx, 8
0x00008268      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x0000826d      4839e9         cmp rcx, rbp
0x00008270      7fee           jg 0x8260
0x00008272      ebbf           jmp 0x8233
0x00008274      0f1f4000       nop dword [rax]
0x00008278      48c743080000.  mov qword [rbx + 8], 0
0x00008280      48c703000000.  mov qword [rbx], 0
0x00008287      e932ffffff     jmp 0x81be
0x0000828c      0f1f4000       nop dword [rax]
0x00008290      488d1436       lea rdx, [rsi + rsi]
0x00008294      48c1e604       shl rsi, 4
0x00008298      488917         mov qword [rdi], rdx
0x0000829b      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/regex_internal.c:1178
0x0000829e      e85d9bffff     call sym.imp.realloc
0x000082a3      4885c0         test rax, rax
0x000082a6      740d           je 0x82b5                               ; ../coreutils-8.31/lib/regex_internal.c:1446
0x000082a8      48894310       mov qword [rbx + 0x10], rax
0x000082ac      488b7308       mov rsi, qword [rbx + 8]
0x000082b0      e954ffffff     jmp 0x8209
0x000082b5      31c0           xor eax, eax
0x000082b7      e902ffffff     jmp 0x81be
0x000082bc      0f1f4000       nop dword [rax]
;-- register_state:
0x000082c0      4156           push r14
0x000082c2      4155           push r13
0x000082c4      4989fe         mov r14, rdi
0x000082c7      4154           push r12
0x000082c9      55             push rbp
0x000082ca      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/regex_internal.c:849
0x000082cd      53             push rbx
0x000082ce      488b5e10       mov rbx, qword [rsi + 0x10]
0x000082d2      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/regex_internal.c:847
0x000082d5      488916         mov qword [rsi], rdx
0x000082d8      48c746280000.  mov qword [rsi + 0x28], 0
0x000082e0      4c8d6e20       lea r13, [rsi + 0x20]
0x000082e4      488d3cdd0000.  lea rdi, [rbx*8]                        ; ../coreutils-8.31/lib/regex_internal.c:1455
0x000082ec      48895e20       mov qword [rsi + 0x20], rbx
0x000082f0      e8ab9affff     call sym.imp.malloc
0x000082f5      4885c0         test rax, rax
0x000082f8      48894530       mov qword [rbp + 0x30], rax
0x000082fc      7440           je 0x833e
0x000082fe      4885db         test rbx, rbx
0x00008301      7e4d           jle 0x8350
0x00008303      31db           xor ebx, ebx
0x00008305      eb13           jmp 0x831a
0x00008307      660f1f840000.  nop word [rax + rax]
0x00008310      4883c301       add rbx, 1
0x00008314      48395d10       cmp qword [rbp + 0x10], rbx
0x00008318      7e36           jle 0x8350                              ; ../coreutils-8.31/lib/regex_internal.c:1459
0x0000831a      488b4518       mov rax, qword [rbp + 0x18]
0x0000831e      488b34d8       mov rsi, qword [rax + rbx*8]
0x00008322      4889f0         mov rax, rsi
0x00008325      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/regex_internal.c:1454
0x00008329      490306         add rax, qword [r14]
0x0000832c      f6400808       test byte [rax + 8], 8
0x00008330      75de           jne 0x8310
0x00008332      4c89ef         mov rdi, r13
0x00008335      e8e6fdffff     call sym.re_node_set_insert_last
0x0000833a      84c0           test al, al
0x0000833c      75d2           jne 0x8310
0x0000833e      5b             pop rbx
0x0000833f      b80c000000     mov eax, 0xc
0x00008344      5d             pop rbp
0x00008345      415c           pop r12
0x00008347      415d           pop r13
0x00008349      415e           pop r14                                 ; ../coreutils-8.31/lib/regex_internal.c:1464
0x0000834b      c3             ret
0x0000834c      0f1f4000       nop dword [rax]
0x00008350      4d23a6880000.  and r12, qword [r14 + 0x88]
0x00008357      498b4640       mov rax, qword [r14 + 0x40]
0x0000835b      4b8d1464       lea rdx, [r12 + r12*2]
0x0000835f      488d1cd0       lea rbx, [rax + rdx*8]
0x00008363      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/regex_internal.c:1476
0x00008366      48395308       cmp qword [rbx + 8], rdx
0x0000836a      488b4310       mov rax, qword [rbx + 0x10]
0x0000836e      488d7201       lea rsi, [rdx + 1]
0x00008372      7e12           jle 0x8386
0x00008374      488933         mov qword [rbx], rsi
0x00008377      48892cd0       mov qword [rax + rdx*8], rbp
0x0000837b      31c0           xor eax, eax
0x0000837d      5b             pop rbx
0x0000837e      5d             pop rbp
0x0000837f      415c           pop r12
0x00008381      415d           pop r13
0x00008383      415e           pop r14
0x00008385      c3             ret
0x00008386      4c8d2436       lea r12, [rsi + rsi]
0x0000838a      4889c7         mov rdi, rax
0x0000838d      48c1e604       shl rsi, 4
0x00008391      e86a9affff     call sym.imp.realloc
0x00008396      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:411
0x00008399      74a3           je 0x833e
0x0000839b      488b13         mov rdx, qword [rbx]
0x0000839e      48894310       mov qword [rbx + 0x10], rax
0x000083a2      4c896308       mov qword [rbx + 8], r12
0x000083a6      488d7201       lea rsi, [rdx + 1]
0x000083aa      ebc8           jmp 0x8374                              ; ../coreutils-8.31/lib/regex_internal.c:415
0x000083ac      0f1f4000       nop dword [rax]
;-- build_upper_buffer:
0x000083b0      4154           push r12
0x000083b2      4c8b6758       mov r12, qword [rdi + 0x58]
0x000083b6      4c396740       cmp qword [rdi + 0x40], r12
0x000083ba      55             push rbp
0x000083bb      4889fd         mov rbp, rdi
0x000083be      4c0f4e6740     cmovle r12, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:417
0x000083c3      53             push rbx
0x000083c4      488b5f30       mov rbx, qword [rdi + 0x30]
0x000083c8      4939dc         cmp r12, rbx
0x000083cb      7e38           jle 0x8405
0x000083cd      e8ee96ffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/regex_internal.c:418
0x000083d2      660f1f440000   nop word [rax + rax]
0x000083d8      488b5500       mov rdx, qword [rbp]                    ; ../coreutils-8.31/lib/regex_internal.c:420
0x000083dc      488b4d78       mov rcx, qword [rbp + 0x78]
0x000083e0      4801da         add rdx, rbx
0x000083e3      48035528       add rdx, qword [rbp + 0x28]
0x000083e7      4885c9         test rcx, rcx
0x000083ea      0fb612         movzx edx, byte [rdx]
0x000083ed      7529           jne 0x8418
0x000083ef      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/regex_internal.c:423
0x000083f2      488b4d08       mov rcx, qword [rbp + 8]
0x000083f6      8b1496         mov edx, dword [rsi + rdx*4]
0x000083f9      881419         mov byte [rcx + rbx], dl
0x000083fc      4883c301       add rbx, 1
0x00008400      4939dc         cmp r12, rbx
0x00008403      75d3           jne 0x83d8
0x00008405      48895d30       mov qword [rbp + 0x30], rbx
0x00008409      48895d38       mov qword [rbp + 0x38], rbx
0x0000840d      5b             pop rbx
0x0000840e      5d             pop rbp
0x0000840f      415c           pop r12
0x00008411      c3             ret
0x00008412      660f1f440000   nop word [rax + rax]
0x00008418      0fb61411       movzx edx, byte [rcx + rdx]
0x0000841c      ebd1           jmp 0x83ef
0x0000841e      6690           nop
;-- build_wcs_buffer:
0x00008420      4157           push r15
0x00008422      4156           push r14
0x00008424      4155           push r13
0x00008426      4154           push r12
0x00008428      55             push rbp
0x00008429      53             push rbx
0x0000842a      4889fb         mov rbx, rdi
0x0000842d      4883ec68       sub rsp, 0x68
0x00008431      4c8b6758       mov r12, qword [rdi + 0x58]
0x00008435      488b6f30       mov rbp, qword [rdi + 0x30]
0x00008439      64488b042528.  mov rax, qword fs:[0x28]
0x00008442      4889442458     mov qword [rsp + 0x58], rax
0x00008447      31c0           xor eax, eax
0x00008449      4c396740       cmp qword [rdi + 0x40], r12
0x0000844d      4c0f4e6740     cmovle r12, qword [rdi + 0x40]
0x00008452      4939ec         cmp r12, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:103
0x00008455      0f8e89000000   jle 0x84e4                              ; ../coreutils-8.31/lib/regex_internal.c:104
0x0000845b      4c8d7720       lea r14, [rdi + 0x20]
0x0000845f      4c8d6c240c     lea r13, [rsp + 0xc]
0x00008464      0f1f4000       nop dword [rax]
0x00008468      488b7b78       mov rdi, qword [rbx + 0x78]
0x0000846c      4c89e2         mov rdx, r12
0x0000846f      4c8b7b20       mov r15, qword [rbx + 0x20]             ; ../coreutils-8.31/lib/regex_internal.c:119
0x00008473      4829ea         sub rdx, rbp
0x00008476      4885ff         test rdi, rdi
0x00008479      0f85e1000000   jne 0x8560
0x0000847f      488b7328       mov rsi, qword [rbx + 0x28]
0x00008483      4801ee         add rsi, rbp
0x00008486      480333         add rsi, qword [rbx]
0x00008489      4c89f1         mov rcx, r14
0x0000848c      4c89ef         mov rdi, r13
0x0000848f      e89cf6ffff     call sym.rpl_mbrtowc
0x00008494      488d50ff       lea rdx, [rax - 1]
0x00008498      4883fafd       cmp rdx, 0xfffffffffffffffd
0x0000849c      0f878e000000   ja 0x8530
0x000084a2      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000084a6      8b54240c       mov edx, dword [rsp + 0xc]
0x000084aa      7474           je 0x8520
0x000084ac      488b4b10       mov rcx, qword [rbx + 0x10]
0x000084b0      488d7501       lea rsi, [rbp + 1]
0x000084b4      488d3cad0000.  lea rdi, [rbp*4]
0x000084bc      8914a9         mov dword [rcx + rbp*4], edx
0x000084bf      4801c5         add rbp, rax
0x000084c2      4839ee         cmp rsi, rbp
0x000084c5      7d49           jge 0x8510                              ; ../coreutils-8.31/lib/regex_internal.c:98
0x000084c7      488d543904     lea rdx, [rcx + rdi + 4]
0x000084cc      488d04a9       lea rax, [rcx + rbp*4]
0x000084d0      c702ffffffff   mov dword [rdx], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x000084d6      4883c204       add rdx, 4
0x000084da      4839d0         cmp rax, rdx
0x000084dd      75f1           jne 0x84d0
0x000084df      4c39e5         cmp rbp, r12
0x000084e2      7c84           jl 0x8468
0x000084e4      488b442458     mov rax, qword [rsp + 0x58]
0x000084e9      644833042528.  xor rax, qword fs:[0x28]
0x000084f2      48896b30       mov qword [rbx + 0x30], rbp
0x000084f6      48896b38       mov qword [rbx + 0x38], rbp             ; ../coreutils-8.31/lib/regex_internal.c:141
0x000084fa      0f85de000000   jne 0x85de
0x00008500      4883c468       add rsp, 0x68
0x00008504      5b             pop rbx
0x00008505      5d             pop rbp
0x00008506      415c           pop r12                                 ; ../coreutils-8.31/lib/regex_internal.c:120
0x00008508      415d           pop r13
0x0000850a      415e           pop r14
0x0000850c      415f           pop r15
0x0000850e      c3             ret
0x0000850f      90             nop
0x00008510      4889f5         mov rbp, rsi
0x00008513      4c39e5         cmp rbp, r12
0x00008516      0f8c4cffffff   jl 0x8468                               ; ../coreutils-8.31/lib/regex_internal.c:126
0x0000851c      ebc6           jmp 0x84e4
0x0000851e      6690           nop
0x00008520      488b4358       mov rax, qword [rbx + 0x58]
0x00008524      48394340       cmp qword [rbx + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:127
0x00008528      0f8c9a000000   jl 0x85c8
0x0000852e      6690           nop
0x00008530      488b03         mov rax, qword [rbx]
0x00008533      488b4b78       mov rcx, qword [rbx + 0x78]
0x00008537      4801e8         add rax, rbp
0x0000853a      48034328       add rax, qword [rbx + 0x28]
0x0000853e      4885c9         test rcx, rcx
0x00008541      0fb610         movzx edx, byte [rax]
0x00008544      8954240c       mov dword [rsp + 0xc], edx
0x00008548      0f8583000000   jne 0x85d1
0x0000854e      4c897b20       mov qword [rbx + 0x20], r15
0x00008552      b801000000     mov eax, 1
0x00008557      e950ffffff     jmp 0x84ac
0x0000855c      0f1f4000       nop dword [rax]
0x00008560      8b8b90000000   mov ecx, dword [rbx + 0x90]
0x00008566      31c0           xor eax, eax
0x00008568      488d742410     lea rsi, [rsp + 0x10]
0x0000856d      85c9           test ecx, ecx
0x0000856f      7f20           jg 0x8591
0x00008571      e913ffffff     jmp 0x8489
0x00008576      662e0f1f8400.  nop word cs:[rax + rax]
0x00008580      4883c001       add rax, 1
0x00008584      4839c2         cmp rdx, rax                            ; ../coreutils-8.31/lib/regex_internal.c:113
0x00008587      0f84fcfeffff   je 0x8489
0x0000858d      488b7b78       mov rdi, qword [rbx + 0x78]
0x00008591      488b0b         mov rcx, qword [rbx]
0x00008594      4801e9         add rcx, rbp
0x00008597      4801c1         add rcx, rax
0x0000859a      48034b28       add rcx, qword [rbx + 0x28]
0x0000859e      0fb609         movzx ecx, byte [rcx]
0x000085a1      0fb60c0f       movzx ecx, byte [rdi + rcx]
0x000085a5      488b7b08       mov rdi, qword [rbx + 8]
0x000085a9      4801ef         add rdi, rbp
0x000085ac      880c07         mov byte [rdi + rax], cl
0x000085af      880c06         mov byte [rsi + rax], cl
0x000085b2      8d4801         lea ecx, [rax + 1]
0x000085b5      3b8b90000000   cmp ecx, dword [rbx + 0x90]
0x000085bb      7cc3           jl 0x8580
0x000085bd      e9c7feffff     jmp 0x8489
0x000085c2      660f1f440000   nop word [rax + rax]
0x000085c8      4c897b20       mov qword [rbx + 0x20], r15
0x000085cc      e913ffffff     jmp 0x84e4
0x000085d1      0fb61411       movzx edx, byte [rcx + rdx]
0x000085d5      8954240c       mov dword [rsp + 0xc], edx
0x000085d9      e970ffffff     jmp 0x854e
0x000085de      e83d96ffff     call sym.imp.__stack_chk_fail
0x000085e3      0f1f00         nop dword [rax]
0x000085e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_wcs_upper_buffer:
0x000085f0      4157           push r15
0x000085f2      4156           push r14                                ; ../coreutils-8.31/lib/regex_internal.c:154
0x000085f4      4989fe         mov r14, rdi
0x000085f7      4155           push r13
0x000085f9      4154           push r12
0x000085fb      55             push rbp
0x000085fc      53             push rbx
0x000085fd      4881eca80000.  sub rsp, 0xa8
0x00008604      488b5f58       mov rbx, qword [rdi + 0x58]
0x00008608      4c8b7f30       mov r15, qword [rdi + 0x30]
0x0000860c      64488b042528.  mov rax, qword fs:[0x28]
0x00008615      488984249800.  mov qword [rsp + 0x98], rax
0x0000861d      31c0           xor eax, eax
0x0000861f      48395f40       cmp qword [rdi + 0x40], rbx             ; ../coreutils-8.31/lib/regex_internal.c:114
0x00008623      480f4e5f40     cmovle rbx, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:105
0x00008628      80bf8a000000.  cmp byte [rdi + 0x8a], 0
0x0000862f      750b           jne 0x863c
0x00008631      48837f7800     cmp qword [rdi + 0x78], 0
0x00008636      0f8484010000   je 0x87c0
0x0000863c      4d8b6e38       mov r13, qword [r14 + 0x38]
0x00008640      4939df         cmp r15, rbx
0x00008643      7c3b           jl 0x8680
0x00008645      4d897e30       mov qword [r14 + 0x30], r15
0x00008649      4d896e38       mov qword [r14 + 0x38], r13
0x0000864d      31c0           xor eax, eax
0x0000864f      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x00008657      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008660      0f8584050000   jne 0x8bea
0x00008666      4881c4a80000.  add rsp, 0xa8
0x0000866d      5b             pop rbx
0x0000866e      5d             pop rbp
0x0000866f      415c           pop r12
0x00008671      415d           pop r13
0x00008673      415e           pop r14
0x00008675      415f           pop r15
0x00008677      c3             ret
0x00008678      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regex_internal.c:-9
0x00008680      498d4620       lea rax, [r14 + 0x20]
0x00008684      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/regex_internal.c:-8
0x00008689      4889d8         mov rax, rbx
0x0000868c      4c29f8         sub rax, r15
0x0000868f      4889442410     mov qword [rsp + 0x10], rax
0x00008694      488d442444     lea rax, [rsp + 0x44]
0x00008699      4889442420     mov qword [rsp + 0x20], rax             ; ../coreutils-8.31/lib/regex_internal.c:5
0x0000869e      498b5678       mov rdx, qword [r14 + 0x78]
0x000086a2      498b4620       mov rax, qword [r14 + 0x20]
0x000086a6      4885d2         test rdx, rdx
0x000086a9      4889442448     mov qword [rsp + 0x48], rax
0x000086ae      0f8505030000   jne 0x89b9
0x000086b4      498b6e28       mov rbp, qword [r14 + 0x28]
0x000086b8      4c01ed         add rbp, r13
0x000086bb      49032e         add rbp, qword [r14]
0x000086be      48896c2418     mov qword [rsp + 0x18], rbp
0x000086c3      488b4c2408     mov rcx, qword [rsp + 8]
0x000086c8      488b542410     mov rdx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:8
0x000086cd      488b742418     mov rsi, qword [rsp + 0x18]
0x000086d2      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000086d7      e854f4ffff     call sym.rpl_mbrtowc                    ; ../coreutils-8.31/lib/regex_internal.c:9
0x000086dc      4889c5         mov rbp, rax
0x000086df      488d40ff       lea rax, [rax - 1]
0x000086e3      4883f8fc       cmp rax, 0xfffffffffffffffc
0x000086e7      4889442420     mov qword [rsp + 0x20], rax
0x000086ec      0f8737030000   ja 0x8a29
0x000086f2      8b542444       mov edx, dword [rsp + 0x44]
0x000086f6      89d7           mov edi, edx
0x000086f8      89542410       mov dword [rsp + 0x10], edx
0x000086fc      e8af97ffff     call sym.imp.towupper
0x00008701      8b542410       mov edx, dword [rsp + 0x10]
0x00008705      4189c4         mov r12d, eax
0x00008708      4c897c2408     mov qword [rsp + 8], r15
0x0000870d      39c2           cmp edx, eax
0x0000870f      0f84fb020000   je 0x8a10
0x00008715      488d4c2450     lea rcx, [rsp + 0x50]                   ; ../coreutils-8.31/lib/regex_internal.c:15
0x0000871a      488d542448     lea rdx, [rsp + 0x48]
0x0000871f      89c6           mov esi, eax
0x00008721      4889cf         mov rdi, rcx
0x00008724      48894c2410     mov qword [rsp + 0x10], rcx
0x00008729      e88296ffff     call sym.imp.wcrtomb
0x0000872e      4839c5         cmp rbp, rax
0x00008731      4989c3         mov r11, rax
0x00008734      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00008739      0f8587030000   jne 0x8ac6
0x0000873f      498b7e08       mov rdi, qword [r14 + 8]
0x00008743      4889ea         mov rdx, rbp
0x00008746      4889ce         mov rsi, rcx
0x00008749      4c01ff         add rdi, r15
0x0000874c      e81f96ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:70
0x00008751      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00008759      4a8d442d00     lea rax, [rbp + r13]
0x0000875e      0f8531030000   jne 0x8a95                              ; ../coreutils-8.31/lib/regex_internal.c:74
0x00008764      4983c701       add r15, 1
0x00008768      488b742408     mov rsi, qword [rsp + 8]
0x0000876d      498b5610       mov rdx, qword [r14 + 0x10]
0x00008771      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x00008776      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:75
0x00008779      4939cf         cmp r15, rcx
0x0000877c      488d04b50000.  lea rax, [rsi*4]
0x00008784      448924b2       mov dword [rdx + rsi*4], r12d
0x00008788      0f8db2feffff   jge 0x8640
0x0000878e      488d440204     lea rax, [rdx + rax + 4]
0x00008793      488d148a       lea rdx, [rdx + rcx*4]
0x00008797      660f1f840000.  nop word [rax + rax]
0x000087a0      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x000087a6      4883c004       add rax, 4
0x000087aa      4839c2         cmp rdx, rax
0x000087ad      75f1           jne 0x87a0
0x000087af      4989cf         mov r15, rcx
0x000087b2      e989feffff     jmp 0x8640
0x000087b7      660f1f840000.  nop word [rax + rax]
0x000087c0      80bf8c000000.  cmp byte [rdi + 0x8c], 0
0x000087c7      0f856ffeffff   jne 0x863c
0x000087cd      4939df         cmp r15, rbx
0x000087d0      0f8d92010000   jge 0x8968
0x000087d6      488d4720       lea rax, [rdi + 0x20]                   ; ../coreutils-8.31/lib/regex_internal.c:-81
0x000087da      4889442408     mov qword [rsp + 8], rax
0x000087df      488d442444     lea rax, [rsp + 0x44]
0x000087e4      4889442430     mov qword [rsp + 0x30], rax
0x000087e9      488d442448     lea rax, [rsp + 0x48]
0x000087ee      4889442438     mov qword [rsp + 0x38], rax             ; ../coreutils-8.31/lib/regex_internal.c:-80
0x000087f3      488d442450     lea rax, [rsp + 0x50]
0x000087f8      4889442428     mov qword [rsp + 0x28], rax
0x000087fd      0f1f00         nop dword [rax]
0x00008800      498b6e28       mov rbp, qword [r14 + 0x28]             ; ../coreutils-8.31/lib/regex_internal.c:-67
0x00008804      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-66
0x00008807      4c01fd         add rbp, r15
0x0000880a      49032e         add rbp, qword [r14]
0x0000880d      440fb66500     movzx r12d, byte [rbp]
0x00008812      41f6c480       test r12b, 0x80
0x00008816      7512           jne 0x882a
0x00008818      488b7c2408     mov rdi, qword [rsp + 8]
0x0000881d      e8ee96ffff     call sym.imp.mbsinit
0x00008822      85c0           test eax, eax
0x00008824      0f85ee000000   jne 0x8918
0x0000882a      498b4620       mov rax, qword [r14 + 0x20]
0x0000882e      488b7c2430     mov rdi, qword [rsp + 0x30]             ; ../coreutils-8.31/lib/regex_internal.c:-63
0x00008833      4889da         mov rdx, rbx
0x00008836      488b4c2408     mov rcx, qword [rsp + 8]
0x0000883b      4c29fa         sub rdx, r15
0x0000883e      4889ee         mov rsi, rbp
0x00008841      4889542410     mov qword [rsp + 0x10], rdx
0x00008846      4889442448     mov qword [rsp + 0x48], rax
0x0000884b      48897c2420     mov qword [rsp + 0x20], rdi             ; ../coreutils-8.31/lib/regex_internal.c:-60
0x00008850      e8dbf2ffff     call sym.rpl_mbrtowc
0x00008855      4889c5         mov rbp, rax
0x00008858      488d40ff       lea rax, [rax - 1]
0x0000885c      4883f8fc       cmp rax, 0xfffffffffffffffc
0x00008860      0f87e2000000   ja 0x8948
0x00008866      8b542444       mov edx, dword [rsp + 0x44]
0x0000886a      89d7           mov edi, edx
0x0000886c      89542418       mov dword [rsp + 0x18], edx             ; wchar2.h:-182
0x00008870      e83b96ffff     call sym.imp.towupper                   ; string_fortified.h:-479
0x00008875      8b542418       mov edx, dword [rsp + 0x18]
0x00008879      4189c4         mov r12d, eax
0x0000887c      39c2           cmp edx, eax
0x0000887e      7478           je 0x88f8
0x00008880      488b542438     mov rdx, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/regex_internal.c:-172
0x00008885      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000888a      89c6           mov esi, eax
0x0000888c      e81f95ffff     call sym.imp.wcrtomb
0x00008891      4839c5         cmp rbp, rax
0x00008894      0f856e010000   jne 0x8a08
0x0000889a      498b7e08       mov rdi, qword [r14 + 8]
0x0000889e      488b742428     mov rsi, qword [rsp + 0x28]
0x000088a3      4889ea         mov rdx, rbp
0x000088a6      4c01ff         add rdi, r15
0x000088a9      e8c294ffff     call sym.imp.memcpy
0x000088ae      4983c701       add r15, 1
0x000088b2      498b5610       mov rdx, qword [r14 + 0x10]
0x000088b6      4a8d04ad0000.  lea rax, [r13*4]
0x000088be      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x000088c3      4939cf         cmp r15, rcx
0x000088c6      468924aa       mov dword [rdx + r13*4], r12d
0x000088ca      7d1e           jge 0x88ea                              ; ../coreutils-8.31/lib/regex_internal.c:-173
0x000088cc      488d440204     lea rax, [rdx + rax + 4]
0x000088d1      488d148a       lea rdx, [rdx + rcx*4]
0x000088d5      0f1f00         nop dword [rax]
0x000088d8      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x000088de      4883c004       add rax, 4                              ; string_fortified.h:-479
0x000088e2      4839c2         cmp rdx, rax
0x000088e5      75f1           jne 0x88d8
0x000088e7      4989cf         mov r15, rcx
0x000088ea      4c39fb         cmp rbx, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x000088ed      0f8f0dffffff   jg 0x8800
0x000088f3      eb73           jmp 0x8968
0x000088f5      0f1f00         nop dword [rax]
0x000088f8      498b7628       mov rsi, qword [r14 + 0x28]
0x000088fc      498b7e08       mov rdi, qword [r14 + 8]
0x00008900      4889ea         mov rdx, rbp
0x00008903      4c01fe         add rsi, r15
0x00008906      490336         add rsi, qword [r14]
0x00008909      4c01ff         add rdi, r15
0x0000890c      e85f94ffff     call sym.imp.memcpy
0x00008911      eb9b           jmp 0x88ae
0x00008913      0f1f440000     nop dword [rax + rax]
0x00008918      e8a391ffff     call sym.imp.__ctype_toupper_loc
0x0000891d      488b00         mov rax, qword [rax]
0x00008920      498b5608       mov rdx, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-166
0x00008924      428b04a0       mov eax, dword [rax + r12*4]
0x00008928      4288043a       mov byte [rdx + r15], al
0x0000892c      498b5608       mov rdx, qword [r14 + 8]
0x00008930      498b4610       mov rax, qword [r14 + 0x10]
0x00008934      420fb6143a     movzx edx, byte [rdx + r15]
0x00008939      428914b8       mov dword [rax + r15*4], edx
0x0000893d      4983c701       add r15, 1
0x00008941      eba7           jmp 0x88ea
0x00008943      0f1f440000     nop dword [rax + rax]
0x00008948      4883f8fd       cmp rax, 0xfffffffffffffffd
0x0000894c      7532           jne 0x8980
0x0000894e      498b4658       mov rax, qword [r14 + 0x58]
0x00008952      49394640       cmp qword [r14 + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:-162
0x00008956      7d28           jge 0x8980
0x00008958      488b442448     mov rax, qword [rsp + 0x48]
0x0000895d      49894620       mov qword [r14 + 0x20], rax
0x00008961      0f1f80000000.  nop dword [rax]
0x00008968      4d897e30       mov qword [r14 + 0x30], r15
0x0000896c      4d897e38       mov qword [r14 + 0x38], r15
0x00008970      31c0           xor eax, eax
0x00008972      e9d8fcffff     jmp 0x864f
0x00008977      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/regex_internal.c:-158
0x00008980      498b06         mov rax, qword [r14]
0x00008983      498b5608       mov rdx, qword [r14 + 8]
0x00008987      4c01f8         add rax, r15
0x0000898a      49034628       add rax, qword [r14 + 0x28]
0x0000898e      0fb600         movzx eax, byte [rax]
0x00008991      4288043a       mov byte [rdx + r15], al
0x00008995      498b5610       mov rdx, qword [r14 + 0x10]
0x00008999      4983c701       add r15, 1
0x0000899d      4883fdff       cmp rbp, 0xffffffffffffffff
0x000089a1      428904aa       mov dword [rdx + r13*4], eax
0x000089a5      0f853fffffff   jne 0x88ea
0x000089ab      488b442448     mov rax, qword [rsp + 0x48]
0x000089b0      49894620       mov qword [r14 + 0x20], rax
0x000089b4      e931ffffff     jmp 0x88ea
0x000089b9      418b86900000.  mov eax, dword [r14 + 0x90]
0x000089c0      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regex_internal.c:-132
0x000089c2      0f8e18020000   jle 0x8be0
0x000089c8      498b7e28       mov rdi, qword [r14 + 0x28]
0x000089cc      448d58ff       lea r11d, [rax - 1]
0x000089d0      488d4c2450     lea rcx, [rsp + 0x50]
0x000089d5      31c0           xor eax, eax
0x000089d7      4c01ef         add rdi, r13
0x000089da      49033e         add rdi, qword [r14]                    ; ../coreutils-8.31/lib/regex_internal.c:-178
0x000089dd      eb0b           jmp 0x89ea
0x000089df      4883c001       add rax, 1
0x000089e3      4839442410     cmp qword [rsp + 0x10], rax
0x000089e8      7411           je 0x89fb
0x000089ea      0fb63407       movzx esi, byte [rdi + rax]
0x000089ee      4939c3         cmp r11, rax
0x000089f1      0fb63432       movzx esi, byte [rdx + rsi]
0x000089f5      40883401       mov byte [rcx + rax], sil
0x000089f9      75e4           jne 0x89df
0x000089fb      48894c2418     mov qword [rsp + 0x18], rcx
0x00008a00      e9befcffff     jmp 0x86c3
0x00008a05      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regex_internal.c:-175
0x00008a08      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-173
0x00008a0b      e98efcffff     jmp 0x869e
0x00008a10      498b7e08       mov rdi, qword [r14 + 8]
0x00008a14      488b742418     mov rsi, qword [rsp + 0x18]
0x00008a19      4889ea         mov rdx, rbp
0x00008a1c      4c01ff         add rdi, r15
0x00008a1f      e84c93ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:-171
0x00008a24      e928fdffff     jmp 0x8751
0x00008a29      48837c2420fd   cmp qword [rsp + 0x20], 0xfffffffffffffffd
0x00008a2f      750a           jne 0x8a3b
0x00008a31      498b4658       mov rax, qword [r14 + 0x58]
0x00008a35      49394640       cmp qword [r14 + 0x40], rax
0x00008a39      7c7d           jl 0x8ab8
0x00008a3b      498b06         mov rax, qword [r14]
0x00008a3e      498b5678       mov rdx, qword [r14 + 0x78]
0x00008a42      4c01e8         add rax, r13
0x00008a45      49034628       add rax, qword [r14 + 0x28]
0x00008a49      4885d2         test rdx, rdx
0x00008a4c      0fb600         movzx eax, byte [rax]
0x00008a4f      0f85a7010000   jne 0x8bfc
0x00008a55      498b5608       mov rdx, qword [r14 + 8]
0x00008a59      4c89f9         mov rcx, r15
0x00008a5c      4288043a       mov byte [rdx + r15], al
0x00008a60      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00008a68      0f8581010000   jne 0x8bef
0x00008a6e      498b5610       mov rdx, qword [r14 + 0x10]
0x00008a72      4983c501       add r13, 1
0x00008a76      4983c701       add r15, 1
0x00008a7a      4883fdff       cmp rbp, 0xffffffffffffffff
0x00008a7e      89048a         mov dword [rdx + rcx*4], eax
0x00008a81      0f85b9fbffff   jne 0x8640
0x00008a87      488b442448     mov rax, qword [rsp + 0x48]
0x00008a8c      49894620       mov qword [r14 + 0x20], rax
0x00008a90      e9abfbffff     jmp 0x8640                              ; ../coreutils-8.31/lib/regex_internal.c:-240
0x00008a95      498b5618       mov rdx, qword [r14 + 0x18]
0x00008a99      4c89f9         mov rcx, r15
0x00008a9c      4d89ea         mov r10, r13
0x00008a9f      4c29e9         sub rcx, r13
0x00008aa2      488d14ca       lea rdx, [rdx + rcx*8]
0x00008aa6      4e8914d2       mov qword [rdx + r10*8], r10
0x00008aaa      4983c201       add r10, 1
0x00008aae      4c39d0         cmp rax, r10
0x00008ab1      75f3           jne 0x8aa6
0x00008ab3      e9acfcffff     jmp 0x8764
0x00008ab8      488b442448     mov rax, qword [rsp + 0x48]
0x00008abd      49894620       mov qword [r14 + 0x20], rax
0x00008ac1      e97ffbffff     jmp 0x8645
0x00008ac6      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008aca      0f8440ffffff   je 0x8a10
0x00008ad0      4a8d0438       lea rax, [rax + r15]
0x00008ad4      4889c6         mov rsi, rax
0x00008ad7      4889442408     mov qword [rsp + 8], rax
0x00008adc      498b4640       mov rax, qword [r14 + 0x40]             ; ../coreutils-8.31/lib/regex_internal.c:-219
0x00008ae0      4839c6         cmp rsi, rax
0x00008ae3      77d3           ja 0x8ab8
0x00008ae5      49837e1800     cmp qword [r14 + 0x18], 0
0x00008aea      0f84b8000000   je 0x8ba8
0x00008af0      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00008af8      7520           jne 0x8b1a
0x00008afa      4d85ff         test r15, r15
0x00008afd      7413           je 0x8b12
0x00008aff      498b5618       mov rdx, qword [r14 + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:-213
0x00008b03      31c0           xor eax, eax
0x00008b05      488904c2       mov qword [rdx + rax*8], rax
0x00008b09      4883c001       add rax, 1
0x00008b0d      4c39f8         cmp rax, r15
0x00008b10      75f3           jne 0x8b05                              ; ../coreutils-8.31/lib/regex_internal.c:-215
0x00008b12      41c6868c0000.  mov byte [r14 + 0x8c], 1
0x00008b1a      498b7e08       mov rdi, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-213
0x00008b1e      4889ce         mov rsi, rcx
0x00008b21      4c89da         mov rdx, r11                            ; ../coreutils-8.31/lib/regex_internal.c:-210
0x00008b24      4c895c2410     mov qword [rsp + 0x10], r11
0x00008b29      4c01ff         add rdi, r15
0x00008b2c      e83f92ffff     call sym.imp.memcpy
0x00008b31      498b4610       mov rax, qword [r14 + 0x10]
0x00008b35      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00008b3a      4a8d0cb8       lea rcx, [rax + r15*4]
0x00008b3e      498b4618       mov rax, qword [r14 + 0x18]
0x00008b42      4983fb01       cmp r11, 1
0x00008b46      448921         mov dword [rcx], r12d
0x00008b49      4a8d34f8       lea rsi, [rax + r15*8]
0x00008b4d      4c892e         mov qword [rsi], r13
0x00008b50      7628           jbe 0x8b7a
0x00008b52      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regex_internal.c:-207
0x00008b57      488b542420     mov rdx, qword [rsp + 0x20]
0x00008b5c      4839e8         cmp rax, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x00008b5f      480f42d0       cmovb rdx, rax
0x00008b63      4c01ea         add rdx, r13
0x00008b66      488914c6       mov qword [rsi + rax*8], rdx
0x00008b6a      c70481ffffff.  mov dword [rcx + rax*4], 0xffffffff     ; ../coreutils-8.31/lib/regex_internal.c:-201 ; [0xffffffff:4]=-1 ; -1
0x00008b71      4883c001       add rax, 1
0x00008b75      4c39d8         cmp rax, r11
0x00008b78      75dd           jne 0x8b57
0x00008b7a      498b5e58       mov rbx, qword [r14 + 0x58]
0x00008b7e      4929eb         sub r11, rbp
0x00008b81      4c01db         add rbx, r11
0x00008b84      4d3b6e60       cmp r13, qword [r14 + 0x60]
0x00008b88      49895e58       mov qword [r14 + 0x58], rbx
0x00008b8c      7d04           jge 0x8b92                              ; ../coreutils-8.31/lib/regex_internal.c:-228
0x00008b8e      4d015e68       add qword [r14 + 0x68], r11
0x00008b92      49395e40       cmp qword [r14 + 0x40], rbx
0x00008b96      4c8b7c2408     mov r15, qword [rsp + 8]
0x00008b9b      490f4e5e40     cmovle rbx, qword [r14 + 0x40]
0x00008ba0      4901ed         add r13, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-225
0x00008ba3      e998faffff     jmp 0x8640
0x00008ba8      488d3cc50000.  lea rdi, [rax*8]
0x00008bb0      48894c2418     mov qword [rsp + 0x18], rcx
0x00008bb5      4c895c2410     mov qword [rsp + 0x10], r11
0x00008bba      e8e191ffff     call sym.imp.malloc
0x00008bbf      4885c0         test rax, rax
0x00008bc2      49894618       mov qword [r14 + 0x18], rax
0x00008bc6      4c8b5c2410     mov r11, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regexec.c:3290
0x00008bcb      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00008bd0      0f851affffff   jne 0x8af0
0x00008bd6      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/regexec.c:3295
0x00008bdb      e96ffaffff     jmp 0x864f
0x00008be0      488d4c2450     lea rcx, [rsp + 0x50]
0x00008be5      e911feffff     jmp 0x89fb
0x00008bea      e83190ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/regexec.c:3300
0x00008bef      498b5618       mov rdx, qword [r14 + 0x18]
0x00008bf3      4e892cfa       mov qword [rdx + r15*8], r13
0x00008bf7      e972feffff     jmp 0x8a6e
0x00008bfc      0fb60402       movzx eax, byte [rdx + rax]
0x00008c00      e950feffff     jmp 0x8a55
0x00008c05      90             nop
0x00008c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- extend_buffers:
0x00008c10      55             push rbp
0x00008c11      53             push rbx
0x00008c12      48bafeffffff.  movabs rdx, 0xffffffffffffffe           ; 1152921504606846974
0x00008c1c      4883ec08       sub rsp, 8
0x00008c20      488b4740       mov rax, qword [rdi + 0x40]
0x00008c24      4839d0         cmp rax, rdx
0x00008c27      0f870b010000   ja 0x8d38
0x00008c2d      488b5758       mov rdx, qword [rdi + 0x58]
0x00008c31      4801c0         add rax, rax
0x00008c34      4863f6         movsxd rsi, esi
0x00008c37      4889fb         mov rbx, rdi
0x00008c3a      4839d0         cmp rax, rdx                            ; ../coreutils-8.31/lib/regexec.c:3320
0x00008c3d      480f4fc2       cmovg rax, rdx
0x00008c41      4839f0         cmp rax, rsi
0x00008c44      480f4df0       cmovge rsi, rax
0x00008c48      e833f4ffff     call sym.re_string_realloc_buffers
0x00008c4d      85c0           test eax, eax
0x00008c4f      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/regexec.c:3323
0x00008c51      0f85b6000000   jne 0x8d0d
0x00008c57      488bbbb80000.  mov rdi, qword [rbx + 0xb8]
0x00008c5e      4885ff         test rdi, rdi
0x00008c61      7421           je 0x8c84
0x00008c63      488b4340       mov rax, qword [rbx + 0x40]
0x00008c67      488d34c50800.  lea rsi, [rax*8 + 8]
0x00008c6f      e88c91ffff     call sym.imp.realloc
0x00008c74      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:-209
0x00008c77      0f84bb000000   je 0x8d38
0x00008c7d      488983b80000.  mov qword [rbx + 0xb8], rax
0x00008c84      80bb88000000.  cmp byte [rbx + 0x88], 0
0x00008c8b      8b8390000000   mov eax, dword [rbx + 0x90]
0x00008c91      741d           je 0x8cb0
0x00008c93      83f801         cmp eax, 1
0x00008c96      4889df         mov rdi, rbx
0x00008c99      0f8eb1000000   jle 0x8d50
0x00008c9f      4883c408       add rsp, 8
0x00008ca3      5b             pop rbx
0x00008ca4      5d             pop rbp                                 ; ../coreutils-8.31/lib/regex_internal.c:-204
0x00008ca5      e946f9ffff     jmp sym.build_wcs_upper_buffer
0x00008caa      660f1f440000   nop word [rax + rax]
0x00008cb0      83f801         cmp eax, 1
0x00008cb3      7f6b           jg 0x8d20
0x00008cb5      488b4b78       mov rcx, qword [rbx + 0x78]
0x00008cb9      4885c9         test rcx, rcx
0x00008cbc      744f           je 0x8d0d
0x00008cbe      488b7358       mov rsi, qword [rbx + 0x58]
0x00008cc2      48397340       cmp qword [rbx + 0x40], rsi
0x00008cc6      480f4e7340     cmovle rsi, qword [rbx + 0x40]
0x00008ccb      488b4330       mov rax, qword [rbx + 0x30]
0x00008ccf      4839c6         cmp rsi, rax
0x00008cd2      7f10           jg 0x8ce4
0x00008cd4      eb2f           jmp 0x8d05
0x00008cd6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:3337
0x00008ce0      488b4b78       mov rcx, qword [rbx + 0x78]
0x00008ce4      488b13         mov rdx, qword [rbx]
0x00008ce7      4801c2         add rdx, rax
0x00008cea      48035328       add rdx, qword [rbx + 0x28]
0x00008cee      0fb612         movzx edx, byte [rdx]                   ; ../coreutils-8.31/lib/regexec.c:3297
0x00008cf1      0fb60c11       movzx ecx, byte [rcx + rdx]
0x00008cf5      488b5308       mov rdx, qword [rbx + 8]
0x00008cf9      880c02         mov byte [rdx + rax], cl
0x00008cfc      4883c001       add rax, 1
0x00008d00      4839c6         cmp rsi, rax
0x00008d03      75db           jne 0x8ce0
0x00008d05      48894330       mov qword [rbx + 0x30], rax
0x00008d09      48894338       mov qword [rbx + 0x38], rax
0x00008d0d      4883c408       add rsp, 8
0x00008d11      89e8           mov eax, ebp
0x00008d13      5b             pop rbx
0x00008d14      5d             pop rbp
0x00008d15      c3             ret
0x00008d16      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:925
0x00008d20      4889df         mov rdi, rbx
0x00008d23      e8f8f6ffff     call sym.build_wcs_buffer
0x00008d28      4883c408       add rsp, 8
0x00008d2c      89e8           mov eax, ebp
0x00008d2e      5b             pop rbx
0x00008d2f      5d             pop rbp
0x00008d30      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:929
0x00008d31      0f1f80000000.  nop dword [rax]
0x00008d38      bd0c000000     mov ebp, 0xc
0x00008d3d      4883c408       add rsp, 8
0x00008d41      89e8           mov eax, ebp                            ; ../coreutils-8.31/lib/regexec.c:935
0x00008d43      5b             pop rbx
0x00008d44      5d             pop rbp
0x00008d45      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:939
0x00008d46      662e0f1f8400.  nop word cs:[rax + rax]
0x00008d50      e85bf6ffff     call sym.build_upper_buffer
0x00008d55      4883c408       add rsp, 8
0x00008d59      89e8           mov eax, ebp
0x00008d5b      5b             pop rbx
0x00008d5c      5d             pop rbp
0x00008d5d      c3             ret
0x00008d5e      6690           nop
;-- clean_state_log_if_needed:
0x00008d60      4154           push r12
0x00008d62      55             push rbp
0x00008d63      4889f5         mov rbp, rsi
0x00008d66      53             push rbx
0x00008d67      488b4740       mov rax, qword [rdi + 0x40]
0x00008d6b      4889fb         mov rbx, rdi
0x00008d6e      4c8ba7c00000.  mov r12, qword [rdi + 0xc0]
0x00008d75      4839f0         cmp rax, rsi
0x00008d78      7f26           jg 0x8da0
0x00008d7a      483b4758       cmp rax, qword [rdi + 0x58]
0x00008d7e      7d20           jge 0x8da0
0x00008d80      8d7501         lea esi, [rbp + 1]                      ; string_fortified.h:-698
0x00008d83      4889df         mov rdi, rbx
0x00008d86      e885feffff     call sym.extend_buffers
0x00008d8b      85c0           test eax, eax
0x00008d8d      7507           jne 0x8d96
0x00008d8f      4939ec         cmp r12, rbp
0x00008d92      7c2c           jl 0x8dc0
0x00008d94      31c0           xor eax, eax
0x00008d96      5b             pop rbx
0x00008d97      5d             pop rbp
0x00008d98      415c           pop r12
0x00008d9a      c3             ret
0x00008d9b      0f1f440000     nop dword [rax + rax]
0x00008da0      488b4330       mov rax, qword [rbx + 0x30]
0x00008da4      4839e8         cmp rax, rbp
0x00008da7      7fe6           jg 0x8d8f                               ; ../coreutils-8.31/lib/regcomp.c:3021
0x00008da9      483b4358       cmp rax, qword [rbx + 0x58]
0x00008dad      7de0           jge 0x8d8f
0x00008daf      8d7501         lea esi, [rbp + 1]
0x00008db2      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/regcomp.c:3027
0x00008db5      e856feffff     call sym.extend_buffers
0x00008dba      85c0           test eax, eax
0x00008dbc      74d1           je 0x8d8f
0x00008dbe      ebd6           jmp 0x8d96
0x00008dc0      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x00008dc7      4889ea         mov rdx, rbp
0x00008dca      31f6           xor esi, esi
0x00008dcc      4c29e2         sub rdx, r12
0x00008dcf      48c1e203       shl rdx, 3
0x00008dd3      4a8d7ce008     lea rdi, [rax + r12*8 + 8]
0x00008dd8      e8d38effff     call sym.imp.memset
0x00008ddd      4889abc00000.  mov qword [rbx + 0xc0], rbp
0x00008de4      ebae           jmp 0x8d94
0x00008de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_charset:
0x00008df0      53             push rbx
0x00008df1      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:2974
0x00008df4      488b3f         mov rdi, qword [rdi]
0x00008df7      e8048dffff     call sym.imp.free
0x00008dfc      488b7b08       mov rdi, qword [rbx + 8]
0x00008e00      e8fb8cffff     call sym.imp.free
0x00008e05      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/regcomp.c:2986
0x00008e09      e8f28cffff     call sym.imp.free                       ; ../coreutils-8.31/lib/regcomp.c:2987
0x00008e0e      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regcomp.c:2989
0x00008e12      e8e98cffff     call sym.imp.free
0x00008e17      4889df         mov rdi, rbx
0x00008e1a      5b             pop rbx
0x00008e1b      e9e08cffff     jmp sym.imp.free
;-- free_token:
0x00008e20      8b4708         mov eax, dword [rdi + 8]
0x00008e23      25ff000400     and eax, 0x400ff
0x00008e28      83f806         cmp eax, 6
0x00008e2b      7413           je 0x8e40
0x00008e2d      83f803         cmp eax, 3
0x00008e30      7406           je 0x8e38
0x00008e32      f3c3           ret
0x00008e34      0f1f4000       nop dword [rax]
0x00008e38      488b3f         mov rdi, qword [rdi]
0x00008e3b      e9c08cffff     jmp sym.imp.free
0x00008e40      488b3f         mov rdi, qword [rdi]
0x00008e43      ebab           jmp sym.free_charset
0x00008e45      90             nop
0x00008e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_tree:
0x00008e50      488d7e28       lea rdi, [rsi + 0x28]
0x00008e54      4883ec08       sub rsp, 8
0x00008e58      e8c3ffffff     call sym.free_token
0x00008e5d      31c0           xor eax, eax
0x00008e5f      4883c408       add rsp, 8
0x00008e63      c3             ret
0x00008e64      6690           nop                                     ; ../coreutils-8.31/lib/regex_internal.c:551
0x00008e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_dfa_add_node:
0x00008e70      4157           push r15
0x00008e72      4156           push r14
0x00008e74      4989f6         mov r14, rsi
0x00008e77      4155           push r13                                ; ../coreutils-8.31/lib/regex_internal.c:554
0x00008e79      4154           push r12
0x00008e7b      55             push rbp
0x00008e7c      53             push rbx
0x00008e7d      4889fb         mov rbx, rdi
0x00008e80      4883ec18       sub rsp, 0x18
0x00008e84      488b7710       mov rsi, qword [rdi + 0x10]
0x00008e88      488b6f08       mov rbp, qword [rdi + 8]
0x00008e8c      4839ee         cmp rsi, rbp
0x00008e8f      0f83ab000000   jae 0x8f40
0x00008e95      4c8b6718       mov r12, qword [rdi + 0x18]
0x00008e99      488b6f28       mov rbp, qword [rdi + 0x28]
0x00008e9d      4889f0         mov rax, rsi
0x00008ea0      89d1           mov ecx, edx
0x00008ea2      48c1e004       shl rax, 4
0x00008ea6      480303         add rax, qword [rbx]
0x00008ea9      81e1ff00fcff   and ecx, 0xfffc00ff
0x00008eaf      48895008       mov qword [rax + 8], rdx
0x00008eb3      894808         mov dword [rax + 8], ecx
0x00008eb6      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/regex_internal.c:559
0x00008eb8      80fa06         cmp dl, 6
0x00008ebb      4c8930         mov qword [rax], r14
0x00008ebe      0f94c1         sete cl
0x00008ec1      80fa05         cmp dl, 5
0x00008ec4      750c           jne 0x8ed2
0x00008ec6      31c9           xor ecx, ecx                            ; string_fortified.h:-828
0x00008ec8      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00008ecf      0f9fc1         setg cl
0x00008ed2      0fb6500a       movzx edx, byte [rax + 0xa]
0x00008ed6      c1e104         shl ecx, 4
0x00008ed9      660fefc0       pxor xmm0, xmm0
0x00008edd      83e2ef         and edx, 0xffffffef                     ; ../coreutils-8.31/lib/regex_internal.c:561 ; 4294967279
0x00008ee0      09ca           or edx, ecx
0x00008ee2      88500a         mov byte [rax + 0xa], dl
0x00008ee5      49c704f4ffff.  mov qword [r12 + rsi*8], 0xffffffffffffffff
0x00008eed      488b4310       mov rax, qword [rbx + 0x10]
0x00008ef1      488d0440       lea rax, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:514
0x00008ef5      488d44c500     lea rax, [rbp + rax*8]
0x00008efa      0f1100         movups xmmword [rax], xmm0
0x00008efd      48c740100000.  mov qword [rax + 0x10], 0
0x00008f05      488b4310       mov rax, qword [rbx + 0x10]
0x00008f09      488d1440       lea rdx, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:527
0x00008f0d      488b4330       mov rax, qword [rbx + 0x30]
0x00008f11      488d04d0       lea rax, [rax + rdx*8]
0x00008f15      0f1100         movups xmmword [rax], xmm0
0x00008f18      48c740100000.  mov qword [rax + 0x10], 0
0x00008f20      488b4310       mov rax, qword [rbx + 0x10]
0x00008f24      488d5001       lea rdx, [rax + 1]
0x00008f28      48895310       mov qword [rbx + 0x10], rdx
0x00008f2c      4883c418       add rsp, 0x18
0x00008f30      5b             pop rbx                                 ; ../coreutils-8.31/lib/regex_internal.c:531
0x00008f31      5d             pop rbp
0x00008f32      415c           pop r12
0x00008f34      415d           pop r13
0x00008f36      415e           pop r14
0x00008f38      415f           pop r15
0x00008f3a      c3             ret
0x00008f3b      0f1f440000     nop dword [rax + rax]
0x00008f40      4c8d6c2d00     lea r13, [rbp + rbp]
0x00008f45      48b8aaaaaaaa.  movabs rax, 0xaaaaaaaaaaaaaaa
0x00008f4f      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:532
0x00008f52      0f87da000000   ja 0x9032
0x00008f58      488b3f         mov rdi, qword [rdi]
0x00008f5b      4889ee         mov rsi, rbp
0x00008f5e      4889542408     mov qword [rsp + 8], rdx
0x00008f63      48c1e605       shl rsi, 5
0x00008f67      e8948effff     call sym.imp.realloc
0x00008f6c      4885c0         test rax, rax
0x00008f6f      0f84bd000000   je 0x9032
0x00008f75      4989ef         mov r15, rbp
0x00008f78      488b7b18       mov rdi, qword [rbx + 0x18]
0x00008f7c      488903         mov qword [rbx], rax
0x00008f7f      49c1e704       shl r15, 4
0x00008f83      4c89fe         mov rsi, r15
0x00008f86      e8758effff     call sym.imp.realloc
0x00008f8b      488b7b20       mov rdi, qword [rbx + 0x20]
0x00008f8f      4c89fe         mov rsi, r15
0x00008f92      4d8d7cad00     lea r15, [r13 + rbp*4]
0x00008f97      4989c4         mov r12, rax
0x00008f9a      49c1e703       shl r15, 3
0x00008f9e      e85d8effff     call sym.imp.realloc
0x00008fa3      488b7b28       mov rdi, qword [rbx + 0x28]
0x00008fa7      4c89fe         mov rsi, r15
0x00008faa      48890424       mov qword [rsp], rax
0x00008fae      e84d8effff     call sym.imp.realloc
0x00008fb3      488b7b30       mov rdi, qword [rbx + 0x30]
0x00008fb7      4c89fe         mov rsi, r15
0x00008fba      4889c5         mov rbp, rax
0x00008fbd      e83e8effff     call sym.imp.realloc
0x00008fc2      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/regex_internal.c:539
0x00008fc5      488b0c24       mov rcx, qword [rsp]
0x00008fc9      7435           je 0x9000
0x00008fcb      4885c9         test rcx, rcx
0x00008fce      7430           je 0x9000                               ; ../coreutils-8.31/lib/regex_internal.c:540
0x00008fd0      4885ed         test rbp, rbp
0x00008fd3      742b           je 0x9000
0x00008fd5      4885c0         test rax, rax
0x00008fd8      488b542408     mov rdx, qword [rsp + 8]
0x00008fdd      7421           je 0x9000
0x00008fdf      4c896318       mov qword [rbx + 0x18], r12
0x00008fe3      48894b20       mov qword [rbx + 0x20], rcx             ; ../coreutils-8.31/lib/regex_internal.c:542
0x00008fe7      48896b28       mov qword [rbx + 0x28], rbp
0x00008feb      48894330       mov qword [rbx + 0x30], rax
0x00008fef      4c896b08       mov qword [rbx + 8], r13
0x00008ff3      488b7310       mov rsi, qword [rbx + 0x10]
0x00008ff7      e9a1feffff     jmp 0x8e9d
0x00008ffc      0f1f4000       nop dword [rax]
0x00009000      4c89e7         mov rdi, r12
0x00009003      4889442408     mov qword [rsp + 8], rax
0x00009008      48890c24       mov qword [rsp], rcx
0x0000900c      e8ef8affff     call sym.imp.free
0x00009011      488b0c24       mov rcx, qword [rsp]
0x00009015      4889cf         mov rdi, rcx
0x00009018      e8e38affff     call sym.imp.free
0x0000901d      4889ef         mov rdi, rbp
0x00009020      e8db8affff     call sym.imp.free
0x00009025      488b442408     mov rax, qword [rsp + 8]
0x0000902a      4889c7         mov rdi, rax
0x0000902d      e8ce8affff     call sym.imp.free
0x00009032      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00009039      e9eefeffff     jmp 0x8f2c
0x0000903e      6690           nop
;-- duplicate_node:
0x00009040      4155           push r13
0x00009042      4154           push r12
0x00009044      4989f5         mov r13, rsi
0x00009047      55             push rbp
0x00009048      53             push rbx
0x00009049      49c1e504       shl r13, 4
0x0000904d      4889f5         mov rbp, rsi
0x00009050      4189d4         mov r12d, edx
0x00009053      4889fb         mov rbx, rdi
0x00009056      4883ec08       sub rsp, 8
0x0000905a      488b07         mov rax, qword [rdi]
0x0000905d      4a8b3428       mov rsi, qword [rax + r13]
0x00009061      4a8b542808     mov rdx, qword [rax + r13 + 8]
0x00009066      e805feffff     call sym.re_dfa_add_node
0x0000906b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000906f      7463           je 0x90d4
0x00009071      4489e7         mov edi, r12d
0x00009074      4c8b03         mov r8, qword [rbx]
0x00009077      4889c6         mov rsi, rax
0x0000907a      6681e7ff03     and di, 0x3ff
0x0000907f      48c1e604       shl rsi, 4
0x00009083      89f9           mov ecx, edi
0x00009085      81e1ff030000   and ecx, 0x3ff                          ; ../coreutils-8.31/lib/regcomp.c:726
0x0000908b      4c01c6         add rsi, r8
0x0000908e      c1e108         shl ecx, 8
0x00009091      89ca           mov edx, ecx                            ; ../coreutils-8.31/lib/regcomp.c:590
0x00009093      8b4e08         mov ecx, dword [rsi + 8]
0x00009096      81e1ff00fcff   and ecx, 0xfffc00ff
0x0000909c      09d1           or ecx, edx
0x0000909e      894e08         mov dword [rsi + 8], ecx
0x000090a1      438b542808     mov edx, dword [r8 + r13 + 8]
0x000090a6      81e1ff00fcff   and ecx, 0xfffc00ff
0x000090ac      c1ea08         shr edx, 8
0x000090af      09fa           or edx, edi
0x000090b1      81e2ff030000   and edx, 0x3ff
0x000090b7      c1e208         shl edx, 8
0x000090ba      09ca           or edx, ecx
0x000090bc      89d1           mov ecx, edx
0x000090be      895608         mov dword [rsi + 8], edx
0x000090c1      c1e910         shr ecx, 0x10
0x000090c4      89ca           mov edx, ecx
0x000090c6      83ca04         or edx, 4
0x000090c9      88560a         mov byte [rsi + 0xa], dl
0x000090cc      488b5320       mov rdx, qword [rbx + 0x20]
0x000090d0      48892cc2       mov qword [rdx + rax*8], rbp
0x000090d4      4883c408       add rsp, 8
0x000090d8      5b             pop rbx
0x000090d9      5d             pop rbp
0x000090da      415c           pop r12
0x000090dc      415d           pop r13
0x000090de      c3             ret
0x000090df      90             nop
;-- duplicate_node_closure:
0x000090e0      4157           push r15
0x000090e2      4156           push r14
0x000090e4      4989f1         mov r9, rsi
0x000090e7      4155           push r13
0x000090e9      4154           push r12
0x000090eb      4989fe         mov r14, rdi
0x000090ee      55             push rbp
0x000090ef      53             push rbx
0x000090f0      4989d5         mov r13, rdx
0x000090f3      4489c5         mov ebp, r8d
0x000090f6      4883ec18       sub rsp, 0x18
0x000090fa      48894c2408     mov qword [rsp + 8], rcx
0x000090ff      4d8b06         mov r8, qword [r14]
0x00009102      4c89c8         mov rax, r9
0x00009105      498b7e28       mov rdi, qword [r14 + 0x28]
0x00009109      48c1e004       shl rax, 4
0x0000910d      4d89ec         mov r12, r13
0x00009110      4c01c0         add rax, r8
0x00009113      80780804       cmp byte [rax + 8], 4
0x00009117      0f84b3010000   je 0x92d0
0x0000911d      4f8d2449       lea r12, [r9 + r9*2]
0x00009121      49c1e403       shl r12, 3
0x00009125      4a8d3427       lea rsi, [rdi + r12]
0x00009129      488b4e08       mov rcx, qword [rsi + 8]
0x0000912d      4885c9         test rcx, rcx
0x00009130      0f84f3010000   je 0x9329
0x00009136      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x0000913b      488b7610       mov rsi, qword [rsi + 0x10]
0x0000913f      48c1e303       shl rbx, 3
0x00009143      4801df         add rdi, rbx
0x00009146      4883f901       cmp rcx, 1
0x0000914a      4c8b3e         mov r15, qword [rsi]
0x0000914d      48c747080000.  mov qword [rdi + 8], 0
0x00009155      0f8415010000   je 0x9270
0x0000915b      498b5610       mov rdx, qword [r14 + 0x10]
0x0000915f      488d72ff       lea rsi, [rdx - 1]
0x00009163      4889f0         mov rax, rsi
0x00009166      48c1e004       shl rax, 4
0x0000916a      4c01c0         add rax, r8
0x0000916d      f6400a04       test byte [rax + 0xa], 4
0x00009171      0f84a9000000   je 0x9220
0x00009177      4885f6         test rsi, rsi
0x0000917a      0f8ea0000000   jle 0x9220
0x00009180      48c1e204       shl rdx, 4
0x00009184      4929c0         sub r8, rax
0x00009187      498b4e20       mov rcx, qword [r14 + 0x20]
0x0000918b      4d8d4410e0     lea r8, [r8 + rdx - 0x20]
0x00009190      eb18           jmp 0x91aa
0x00009192      660f1f440000   nop word [rax + rax]
0x00009198      4c01c0         add rax, r8
0x0000919b      4883ee01       sub rsi, 1
0x0000919f      f6400a04       test byte [rax + 0xa], 4
0x000091a3      747b           je 0x9220
0x000091a5      4885f6         test rsi, rsi
0x000091a8      7e76           jle 0x9220
0x000091aa      4c393cf1       cmp qword [rcx + rsi*8], r15
0x000091ae      75e8           jne 0x9198
0x000091b0      8b5008         mov edx, dword [rax + 8]
0x000091b3      c1ea08         shr edx, 8
0x000091b6      81e2ff030000   and edx, 0x3ff
0x000091bc      39d5           cmp ebp, edx
0x000091be      75d8           jne 0x9198
0x000091c0      e8cbefffff     call sym.re_node_set_insert
0x000091c5      84c0           test al, al
0x000091c7      7442           je 0x920b
0x000091c9      498b4628       mov rax, qword [r14 + 0x28]
0x000091cd      89ea           mov edx, ebp
0x000091cf      4c89f7         mov rdi, r14
0x000091d2      4a8b442010     mov rax, qword [rax + r12 + 0x10]
0x000091d7      4c8b4808       mov r9, qword [rax + 8]
0x000091db      4c89ce         mov rsi, r9
0x000091de      4c890c24       mov qword [rsp], r9
0x000091e2      e859feffff     call sym.duplicate_node
0x000091e7      4883f8ff       cmp rax, 0xffffffffffffffff
0x000091eb      4989c5         mov r13, rax
0x000091ee      741b           je 0x920b
0x000091f0      49035e28       add rbx, qword [r14 + 0x28]
0x000091f4      4c89ee         mov rsi, r13
0x000091f7      4889df         mov rdi, rbx
0x000091fa      e891efffff     call sym.re_node_set_insert
0x000091ff      84c0           test al, al
0x00009201      4c8b0c24       mov r9, qword [rsp]
0x00009205      0f85f4feffff   jne 0x90ff
0x0000920b      b80c000000     mov eax, 0xc
0x00009210      4883c418       add rsp, 0x18
0x00009214      5b             pop rbx
0x00009215      5d             pop rbp
0x00009216      415c           pop r12
0x00009218      415d           pop r13
0x0000921a      415e           pop r14
0x0000921c      415f           pop r15
0x0000921e      c3             ret
0x0000921f      90             nop
0x00009220      89ea           mov edx, ebp
0x00009222      4c89fe         mov rsi, r15
0x00009225      4c89f7         mov rdi, r14
0x00009228      e813feffff     call sym.duplicate_node
0x0000922d      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009231      4989c5         mov r13, rax
0x00009234      74d5           je 0x920b
0x00009236      498b7e28       mov rdi, qword [r14 + 0x28]
0x0000923a      4c89ee         mov rsi, r13
0x0000923d      4801df         add rdi, rbx
0x00009240      e84befffff     call sym.re_node_set_insert
0x00009245      84c0           test al, al
0x00009247      74c2           je 0x920b
0x00009249      488b4c2408     mov rcx, qword [rsp + 8]
0x0000924e      4189e8         mov r8d, ebp
0x00009251      4c89ea         mov rdx, r13
0x00009254      4c89fe         mov rsi, r15
0x00009257      4c89f7         mov rdi, r14
0x0000925a      e881feffff     call sym.duplicate_node_closure
0x0000925f      85c0           test eax, eax
0x00009261      0f8462ffffff   je 0x91c9
0x00009267      eba7           jmp 0x9210
0x00009269      0f1f80000000.  nop dword [rax]
0x00009270      4c3b4c2408     cmp r9, qword [rsp + 8]
0x00009275      7509           jne 0x9280
0x00009277      4d39e9         cmp r9, r13
0x0000927a      0f85bc000000   jne 0x933c
0x00009280      8b4008         mov eax, dword [rax + 8]
0x00009283      4c89fe         mov rsi, r15
0x00009286      4c89f7         mov rdi, r14
0x00009289      c1e808         shr eax, 8
0x0000928c      25ff030000     and eax, 0x3ff
0x00009291      09c5           or ebp, eax
0x00009293      89ea           mov edx, ebp
0x00009295      e8a6fdffff     call sym.duplicate_node
0x0000929a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000929e      4989c5         mov r13, rax
0x000092a1      0f8464ffffff   je 0x920b
0x000092a7      49035e28       add rbx, qword [r14 + 0x28]
0x000092ab      4889c6         mov rsi, rax
0x000092ae      4889df         mov rdi, rbx
0x000092b1      e8daeeffff     call sym.re_node_set_insert
0x000092b6      84c0           test al, al
0x000092b8      0f844dffffff   je 0x920b
0x000092be      4d89f9         mov r9, r15
0x000092c1      e939feffff     jmp 0x90ff
0x000092c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000092d0      498b4618       mov rax, qword [r14 + 0x18]
0x000092d4      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x000092d9      4e8d3ccd0000.  lea r15, [r9*8]
0x000092e1      89ea           mov edx, ebp
0x000092e3      48c1e303       shl rbx, 3
0x000092e7      4e8b0cc8       mov r9, qword [rax + r9*8]
0x000092eb      48c7441f0800.  mov qword [rdi + rbx + 8], 0
0x000092f4      4c89f7         mov rdi, r14
0x000092f7      4c89ce         mov rsi, r9
0x000092fa      4c890c24       mov qword [rsp], r9
0x000092fe      e83dfdffff     call sym.duplicate_node
0x00009303      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009307      4989c5         mov r13, rax
0x0000930a      4c8b0c24       mov r9, qword [rsp]
0x0000930e      0f84f7feffff   je 0x920b
0x00009314      498b4618       mov rax, qword [r14 + 0x18]
0x00009318      4c890c24       mov qword [rsp], r9
0x0000931c      4a8b0c38       mov rcx, qword [rax + r15]
0x00009320      4a890ce0       mov qword [rax + r12*8], rcx
0x00009324      e9c7feffff     jmp 0x91f0
0x00009329      498b4618       mov rax, qword [r14 + 0x18]
0x0000932d      4a8b0cc8       mov rcx, qword [rax + r9*8]
0x00009331      4a890ce8       mov qword [rax + r13*8], rcx
0x00009335      31c0           xor eax, eax
0x00009337      e9d4feffff     jmp 0x9210
0x0000933c      4c89fe         mov rsi, r15
0x0000933f      e84ceeffff     call sym.re_node_set_insert
0x00009344      89c2           mov edx, eax
0x00009346      31c0           xor eax, eax
0x00009348      84d2           test dl, dl
0x0000934a      0f85c0feffff   jne 0x9210
0x00009350      e9b6feffff     jmp 0x920b
0x00009355      90             nop
0x00009356      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_state:
0x00009360      53             push rbx
0x00009361      4889fb         mov rbx, rdi
0x00009364      488b7f30       mov rdi, qword [rdi + 0x30]
0x00009368      e89387ffff     call sym.imp.free
0x0000936d      488b7b48       mov rdi, qword [rbx + 0x48]
0x00009371      e88a87ffff     call sym.imp.free
0x00009376      488b4350       mov rax, qword [rbx + 0x50]
0x0000937a      488d5308       lea rdx, [rbx + 8]
0x0000937e      4839d0         cmp rax, rdx
0x00009381      7412           je 0x9395
0x00009383      488b7810       mov rdi, qword [rax + 0x10]
0x00009387      e87487ffff     call sym.imp.free
0x0000938c      488b7b50       mov rdi, qword [rbx + 0x50]
0x00009390      e86b87ffff     call sym.imp.free
0x00009395      488b7b18       mov rdi, qword [rbx + 0x18]
0x00009399      e86287ffff     call sym.imp.free
0x0000939e      488b7b60       mov rdi, qword [rbx + 0x60]
0x000093a2      e85987ffff     call sym.imp.free
0x000093a7      488b7b58       mov rdi, qword [rbx + 0x58]
0x000093ab      e85087ffff     call sym.imp.free
0x000093b0      4889df         mov rdi, rbx
0x000093b3      5b             pop rbx
0x000093b4      e94787ffff     jmp sym.imp.free
0x000093b9      0f1f80000000.  nop dword [rax]
;-- re_string_destruct:
0x000093c0      53             push rbx
0x000093c1      4889fb         mov rbx, rdi
0x000093c4      488b7f10       mov rdi, qword [rdi + 0x10]
0x000093c8      e83387ffff     call sym.imp.free
0x000093cd      488b7b18       mov rdi, qword [rbx + 0x18]
0x000093d1      e82a87ffff     call sym.imp.free
0x000093d6      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000093dd      7509           jne 0x93e8
0x000093df      5b             pop rbx
0x000093e0      c3             ret
0x000093e1      0f1f80000000.  nop dword [rax]
0x000093e8      488b7b08       mov rdi, qword [rbx + 8]
0x000093ec      5b             pop rbx
0x000093ed      e90e87ffff     jmp sym.imp.free
0x000093f2      0f1f4000       nop dword [rax]
0x000093f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_dfa_content:
0x00009400      4156           push r14
0x00009402      4155           push r13
0x00009404      4154           push r12
0x00009406      4989fc         mov r12, rdi
0x00009409      55             push rbp
0x0000940a      53             push rbx
0x0000940b      488b3f         mov rdi, qword [rdi]
0x0000940e      4885ff         test rdi, rdi
0x00009411      742b           je 0x943e
0x00009413      49837c241000   cmp qword [r12 + 0x10], 0
0x00009419      7423           je 0x943e
0x0000941b      31db           xor ebx, ebx
0x0000941d      eb05           jmp 0x9424
0x0000941f      90             nop
0x00009420      498b3c24       mov rdi, qword [r12]
0x00009424      4889d8         mov rax, rbx
0x00009427      4883c301       add rbx, 1
0x0000942b      48c1e004       shl rax, 4
0x0000942f      4801c7         add rdi, rax
0x00009432      e8e9f9ffff     call sym.free_token
0x00009437      49395c2410     cmp qword [r12 + 0x10], rbx
0x0000943c      77e2           ja 0x9420
0x0000943e      498b7c2418     mov rdi, qword [r12 + 0x18]
0x00009443      e8b886ffff     call sym.imp.free
0x00009448      49837c241000   cmp qword [r12 + 0x10], 0
0x0000944e      7453           je 0x94a3
0x00009450      31db           xor ebx, ebx
0x00009452      31ed           xor ebp, ebp
0x00009454      0f1f4000       nop dword [rax]
0x00009458      498b442430     mov rax, qword [r12 + 0x30]
0x0000945d      4885c0         test rax, rax
0x00009460      740a           je 0x946c
0x00009462      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x00009467      e89486ffff     call sym.imp.free
0x0000946c      498b442438     mov rax, qword [r12 + 0x38]
0x00009471      4885c0         test rax, rax
0x00009474      740a           je 0x9480
0x00009476      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000947b      e88086ffff     call sym.imp.free
0x00009480      498b442428     mov rax, qword [r12 + 0x28]
0x00009485      4885c0         test rax, rax
0x00009488      740a           je 0x9494
0x0000948a      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000948f      e86c86ffff     call sym.imp.free
0x00009494      4883c501       add rbp, 1
0x00009498      4883c318       add rbx, 0x18
0x0000949c      49396c2410     cmp qword [r12 + 0x10], rbp
0x000094a1      77b5           ja 0x9458
0x000094a3      498b7c2428     mov rdi, qword [r12 + 0x28]
0x000094a8      e85386ffff     call sym.imp.free
0x000094ad      498b7c2430     mov rdi, qword [r12 + 0x30]
0x000094b2      e84986ffff     call sym.imp.free
0x000094b7      498b7c2438     mov rdi, qword [r12 + 0x38]
0x000094bc      e83f86ffff     call sym.imp.free
0x000094c1      498b3c24       mov rdi, qword [r12]
0x000094c5      e83686ffff     call sym.imp.free
0x000094ca      498b7c2440     mov rdi, qword [r12 + 0x40]
0x000094cf      4885ff         test rdi, rdi
0x000094d2      7453           je 0x9527
0x000094d4      4531f6         xor r14d, r14d
0x000094d7      4531ed         xor r13d, r13d
0x000094da      660f1f440000   nop word [rax + rax]
0x000094e0      4a8d2c37       lea rbp, [rdi + r14]
0x000094e4      48837d0000     cmp qword [rbp], 0
0x000094e9      7e1c           jle 0x9507
0x000094eb      31db           xor ebx, ebx
0x000094ed      0f1f00         nop dword [rax]
0x000094f0      488b4510       mov rax, qword [rbp + 0x10]
0x000094f4      488b3cd8       mov rdi, qword [rax + rbx*8]
0x000094f8      4883c301       add rbx, 1
0x000094fc      e85ffeffff     call sym.free_state
0x00009501      48395d00       cmp qword [rbp], rbx
0x00009505      7fe9           jg 0x94f0
0x00009507      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000950b      4983c501       add r13, 1
0x0000950f      4983c618       add r14, 0x18
0x00009513      e8e885ffff     call sym.imp.free
0x00009518      4d39ac248800.  cmp qword [r12 + 0x88], r13
0x00009520      498b7c2440     mov rdi, qword [r12 + 0x40]
0x00009525      73b9           jae 0x94e0
0x00009527      e8d485ffff     call sym.imp.free
0x0000952c      498b7c2478     mov rdi, qword [r12 + 0x78]
0x00009531      488d0508e700.  lea rax, obj.utf8_sb_map                ; 0x17c40
0x00009538      4839c7         cmp rdi, rax
0x0000953b      7405           je 0x9542
0x0000953d      e8be85ffff     call sym.imp.free
0x00009542      498bbc24e000.  mov rdi, qword [r12 + 0xe0]
0x0000954a      e8b185ffff     call sym.imp.free
0x0000954f      5b             pop rbx
0x00009550      4c89e7         mov rdi, r12
0x00009553      5d             pop rbp
0x00009554      415c           pop r12
0x00009556      415d           pop r13
0x00009558      415e           pop r14
0x0000955a      e9a185ffff     jmp sym.imp.free
0x0000955f      90             nop
;-- match_ctx_clean:
0x00009560      4156           push r14
0x00009562      4155           push r13
0x00009564      4989fe         mov r14, rdi
0x00009567      4154           push r12
0x00009569      55             push rbp
0x0000956a      53             push rbx
0x0000956b      4883bfe80000.  cmp qword [rdi + 0xe8], 0
0x00009573      0f8e80000000   jle 0x95f9
0x00009579      4531ed         xor r13d, r13d
0x0000957c      0f1f4000       nop dword [rax]
0x00009580      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x00009587      4e8b24e8       mov r12, qword [rax + r13*8]
0x0000958b      49837c242000   cmp qword [r12 + 0x20], 0
0x00009591      7e2a           jle 0x95bd
0x00009593      31db           xor ebx, ebx
0x00009595      0f1f00         nop dword [rax]
0x00009598      498b442428     mov rax, qword [r12 + 0x28]
0x0000959d      488b2cd8       mov rbp, qword [rax + rbx*8]
0x000095a1      4883c301       add rbx, 1
0x000095a5      488b7d20       mov rdi, qword [rbp + 0x20]
0x000095a9      e85285ffff     call sym.imp.free
0x000095ae      4889ef         mov rdi, rbp
0x000095b1      e84a85ffff     call sym.imp.free
0x000095b6      49395c2420     cmp qword [r12 + 0x20], rbx
0x000095bb      7fdb           jg 0x9598
0x000095bd      498b7c2428     mov rdi, qword [r12 + 0x28]
0x000095c2      e83985ffff     call sym.imp.free
0x000095c7      498b442410     mov rax, qword [r12 + 0x10]
0x000095cc      4885c0         test rax, rax
0x000095cf      7413           je 0x95e4
0x000095d1      488b7810       mov rdi, qword [rax + 0x10]
0x000095d5      e82685ffff     call sym.imp.free
0x000095da      498b7c2410     mov rdi, qword [r12 + 0x10]
0x000095df      e81c85ffff     call sym.imp.free
0x000095e4      4c89e7         mov rdi, r12
0x000095e7      4983c501       add r13, 1
0x000095eb      e81085ffff     call sym.imp.free
0x000095f0      4d39aee80000.  cmp qword [r14 + 0xe8], r13
0x000095f7      7f87           jg 0x9580
0x000095f9      5b             pop rbx
0x000095fa      49c786e80000.  mov qword [r14 + 0xe8], 0
0x00009605      49c786c80000.  mov qword [r14 + 0xc8], 0
0x00009610      5d             pop rbp
0x00009611      415c           pop r12
0x00009613      415d           pop r13
0x00009615      415e           pop r14
0x00009617      c3             ret
0x00009618      0f1f84000000.  nop dword [rax + rax]
;-- re_string_char_size_at.part.0:
0x00009620      488b4f30       mov rcx, qword [rdi + 0x30]
0x00009624      488d4601       lea rax, [rsi + 1]
0x00009628      4839c8         cmp rax, rcx
0x0000962b      7d3b           jge 0x9668
0x0000962d      488b5710       mov rdx, qword [rdi + 0x10]
0x00009631      488d3c850000.  lea rdi, [rax*4]
0x00009639      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x0000963d      7529           jne 0x9668
0x0000963f      4829f1         sub rcx, rsi
0x00009642      488d743afc     lea rsi, [rdx + rdi - 4]
0x00009647      ba02000000     mov edx, 2
0x0000964c      eb0d           jmp 0x965b
0x0000964e      6690           nop
0x00009650      4883c201       add rdx, 1
0x00009654      837c96fcff     cmp dword [rsi + rdx*4 - 4], 0xffffffff
0x00009659      7512           jne 0x966d
0x0000965b      4839ca         cmp rdx, rcx
0x0000965e      89d0           mov eax, edx
0x00009660      75ee           jne 0x9650
0x00009662      f3c3           ret
0x00009664      0f1f4000       nop dword [rax]
0x00009668      b801000000     mov eax, 1
0x0000966d      f3c3           ret
0x0000966f      90             nop
;-- re_node_set_compare.part.2:
0x00009670      488b5708       mov rdx, qword [rdi + 8]
0x00009674      31c0           xor eax, eax
0x00009676      483b5608       cmp rdx, qword [rsi + 8]
0x0000967a      7404           je 0x9680
0x0000967c      f3c3           ret
0x0000967e      6690           nop
0x00009680      488d42ff       lea rax, [rdx - 1]
0x00009684      488d14c50000.  lea rdx, [rax*8]
0x0000968c      eb1f           jmp 0x96ad
0x0000968e      6690           nop
0x00009690      488b4f10       mov rcx, qword [rdi + 0x10]
0x00009694      4c8b0411       mov r8, qword [rcx + rdx]
0x00009698      488b4e10       mov rcx, qword [rsi + 0x10]
0x0000969c      488b0c11       mov rcx, qword [rcx + rdx]
0x000096a0      4883ea08       sub rdx, 8
0x000096a4      4939c8         cmp r8, rcx
0x000096a7      7517           jne 0x96c0
0x000096a9      4883e801       sub rax, 1
0x000096ad      4885c0         test rax, rax
0x000096b0      79de           jns 0x9690
0x000096b2      b801000000     mov eax, 1
0x000096b7      c3             ret
0x000096b8      0f1f84000000.  nop dword [rax + rax]
0x000096c0      31c0           xor eax, eax
0x000096c2      c3             ret
0x000096c3      0f1f00         nop dword [rax]
0x000096c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_contains.isra.3:
0x000096d0      31c0           xor eax, eax
0x000096d2      4885ff         test rdi, rdi
0x000096d5      7e3e           jle 0x9715
0x000096d7      4c8b06         mov r8, qword [rsi]
0x000096da      4883ef01       sub rdi, 1
0x000096de      31f6           xor esi, esi
0x000096e0      4839fe         cmp rsi, rdi
0x000096e3      7328           jae 0x970d
0x000096e5      488d0c3e       lea rcx, [rsi + rdi]
0x000096e9      48d1e9         shr rcx, 1
0x000096ec      493b14c8       cmp rdx, qword [r8 + rcx*8]
0x000096f0      7e16           jle 0x9708
0x000096f2      eb2c           jmp 0x9720
0x000096f4      0f1f4000       nop dword [rax]
0x000096f8      488d040e       lea rax, [rsi + rcx]
0x000096fc      48d1e8         shr rax, 1
0x000096ff      493914c0       cmp qword [r8 + rax*8], rdx
0x00009703      7c2b           jl 0x9730
0x00009705      4889c1         mov rcx, rax
0x00009708      4839ce         cmp rsi, rcx
0x0000970b      72eb           jb 0x96f8
0x0000970d      31c0           xor eax, eax
0x0000970f      493b14f0       cmp rdx, qword [r8 + rsi*8]
0x00009713      742b           je 0x9740
0x00009715      f3c3           ret
0x00009717      660f1f840000.  nop word [rax + rax]
0x00009720      4889c8         mov rax, rcx
0x00009723      4889f9         mov rcx, rdi
0x00009726      662e0f1f8400.  nop word cs:[rax + rax]
0x00009730      488d7001       lea rsi, [rax + 1]
0x00009734      4889cf         mov rdi, rcx
0x00009737      eba7           jmp 0x96e0
0x00009739      0f1f80000000.  nop dword [rax]
0x00009740      488d4601       lea rax, [rsi + 1]
0x00009744      c3             ret
0x00009745      90             nop
0x00009746      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival_expand_ecl_sub:
0x00009750      4157           push r15
0x00009752      4156           push r14
0x00009754      4c8d7610       lea r14, [rsi + 0x10]
0x00009758      4155           push r13
0x0000975a      4154           push r12
0x0000975c      4989cf         mov r15, rcx
0x0000975f      55             push rbp
0x00009760      53             push rbx
0x00009761      4989fc         mov r12, rdi
0x00009764      4889f5         mov rbp, rsi
0x00009767      4889d3         mov rbx, rdx
0x0000976a      4589c5         mov r13d, r8d
0x0000976d      4883ec08       sub rsp, 8
0x00009771      488b7d08       mov rdi, qword [rbp + 8]
0x00009775      4889da         mov rdx, rbx
0x00009778      4c89f6         mov rsi, r14
0x0000977b      e850ffffff     call sym.re_node_set_contains.isra.3
0x00009780      4885c0         test rax, rax
0x00009783      756b           jne 0x97f0
0x00009785      4889d8         mov rax, rbx
0x00009788      48c1e004       shl rax, 4
0x0000978c      49030424       add rax, qword [r12]
0x00009790      0fb65008       movzx edx, byte [rax + 8]
0x00009794      4439ea         cmp edx, r13d
0x00009797      7505           jne 0x979e
0x00009799      4c3938         cmp qword [rax], r15
0x0000979c      743a           je 0x97d8
0x0000979e      4889de         mov rsi, rbx
0x000097a1      4889ef         mov rdi, rbp
0x000097a4      e8e7e9ffff     call sym.re_node_set_insert
0x000097a9      84c0           test al, al
0x000097ab      745b           je 0x9808
0x000097ad      488d1c5b       lea rbx, [rbx + rbx*2]
0x000097b1      498b542428     mov rdx, qword [r12 + 0x28]
0x000097b6      48c1e303       shl rbx, 3
0x000097ba      4801da         add rdx, rbx
0x000097bd      488b4208       mov rax, qword [rdx + 8]
0x000097c1      4885c0         test rax, rax
0x000097c4      742a           je 0x97f0
0x000097c6      4883f802       cmp rax, 2
0x000097ca      488b5210       mov rdx, qword [rdx + 0x10]
0x000097ce      7450           je 0x9820
0x000097d0      488b1a         mov rbx, qword [rdx]
0x000097d3      eb9c           jmp 0x9771
0x000097d5      0f1f00         nop dword [rax]
0x000097d8      4183fd09       cmp r13d, 9
0x000097dc      7512           jne 0x97f0
0x000097de      4889de         mov rsi, rbx
0x000097e1      4889ef         mov rdi, rbp
0x000097e4      e8a7e9ffff     call sym.re_node_set_insert
0x000097e9      84c0           test al, al
0x000097eb      741b           je 0x9808
0x000097ed      0f1f00         nop dword [rax]
0x000097f0      31c0           xor eax, eax
0x000097f2      4883c408       add rsp, 8
0x000097f6      5b             pop rbx
0x000097f7      5d             pop rbp
0x000097f8      415c           pop r12
0x000097fa      415d           pop r13
0x000097fc      415e           pop r14
0x000097fe      415f           pop r15
0x00009800      c3             ret
0x00009801      0f1f80000000.  nop dword [rax]
0x00009808      4883c408       add rsp, 8
0x0000980c      b80c000000     mov eax, 0xc
0x00009811      5b             pop rbx
0x00009812      5d             pop rbp
0x00009813      415c           pop r12
0x00009815      415d           pop r13
0x00009817      415e           pop r14
0x00009819      415f           pop r15
0x0000981b      c3             ret
0x0000981c      0f1f4000       nop dword [rax]
0x00009820      488b5208       mov rdx, qword [rdx + 8]
0x00009824      4589e8         mov r8d, r13d
0x00009827      4c89f9         mov rcx, r15
0x0000982a      4889ee         mov rsi, rbp
0x0000982d      4c89e7         mov rdi, r12
0x00009830      e81bffffff     call sym.check_arrival_expand_ecl_sub
0x00009835      85c0           test eax, eax
0x00009837      75b9           jne 0x97f2
0x00009839      498b442428     mov rax, qword [r12 + 0x28]
0x0000983e      488b541810     mov rdx, qword [rax + rbx + 0x10]
0x00009843      eb8b           jmp 0x97d0
0x00009845      90             nop
0x00009846      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_remove_at.isra.4.part.5:
0x00009850      488b07         mov rax, qword [rdi]
0x00009853      4839d0         cmp rax, rdx
0x00009856      7e2a           jle 0x9882
0x00009858      4883e801       sub rax, 1
0x0000985c      4839c2         cmp rdx, rax
0x0000985f      488907         mov qword [rdi], rax
0x00009862      7d1e           jge 0x9882
0x00009864      488b06         mov rax, qword [rsi]
0x00009867      660f1f840000.  nop word [rax + rax]
0x00009870      488b4cd008     mov rcx, qword [rax + rdx*8 + 8]
0x00009875      48890cd0       mov qword [rax + rdx*8], rcx
0x00009879      4883c201       add rdx, 1
0x0000987d      483b17         cmp rdx, qword [rdi]
0x00009880      7cee           jl 0x9870
0x00009882      f3c3           ret
0x00009884      6690           nop
0x00009886      662e0f1f8400.  nop word cs:[rax + rax]
;-- optimize_subexps:
0x00009890      0fb64630       movzx eax, byte [rsi + 0x30]
0x00009894      3c04           cmp al, 4
0x00009896      7458           je 0x98f0
0x00009898      3c11           cmp al, 0x11
0x0000989a      7404           je 0x98a0
0x0000989c      31c0           xor eax, eax
0x0000989e      c3             ret
0x0000989f      90             nop
0x000098a0      488b4608       mov rax, qword [rsi + 8]
0x000098a4      4885c0         test rax, rax
0x000098a7      74f3           je 0x989c
0x000098a9      80783011       cmp byte [rax + 0x30], 0x11
0x000098ad      75ed           jne 0x989c
0x000098af      488b4828       mov rcx, qword [rax + 0x28]
0x000098b3      488b4008       mov rax, qword [rax + 8]
0x000098b7      4885c0         test rax, rax
0x000098ba      48894608       mov qword [rsi + 8], rax
0x000098be      7403           je 0x98c3
0x000098c0      488930         mov qword [rax], rsi
0x000098c3      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x000098ca      488b5628       mov rdx, qword [rsi + 0x28]
0x000098ce      4883f93f       cmp rcx, 0x3f
0x000098d2      488b14d0       mov rdx, qword [rax + rdx*8]
0x000098d6      488914c8       mov qword [rax + rcx*8], rdx
0x000098da      7fc0           jg 0x989c
0x000098dc      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x000098e3      48d3c0         rol rax, cl
0x000098e6      482187a00000.  and qword [rdi + 0xa0], rax
0x000098ed      ebad           jmp 0x989c
0x000098ef      90             nop
0x000098f0      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x000098f7      4885c0         test rax, rax
0x000098fa      74a0           je 0x989c
0x000098fc      48635628       movsxd rdx, dword [rsi + 0x28]
0x00009900      488b0cd0       mov rcx, qword [rax + rdx*8]
0x00009904      b801000000     mov eax, 1
0x00009909      d3e0           shl eax, cl
0x0000990b      48894e28       mov qword [rsi + 0x28], rcx
0x0000990f      4898           cdqe
0x00009911      480987a00000.  or qword [rdi + 0xa0], rax
0x00009918      31c0           xor eax, eax
0x0000991a      c3             ret
0x0000991b      0f1f440000     nop dword [rax + rax]
;-- calc_next:
0x00009920      0fb64630       movzx eax, byte [rsi + 0x30]
0x00009924      488b5608       mov rdx, qword [rsi + 8]
0x00009928      3c0b           cmp al, 0xb
0x0000992a      7444           je 0x9970
0x0000992c      3c10           cmp al, 0x10
0x0000992e      7428           je 0x9958
0x00009930      4885d2         test rdx, rdx
0x00009933      7408           je 0x993d
0x00009935      488b4620       mov rax, qword [rsi + 0x20]
0x00009939      48894220       mov qword [rdx + 0x20], rax
0x0000993d      488b4610       mov rax, qword [rsi + 0x10]
0x00009941      4885c0         test rax, rax
0x00009944      7408           je 0x994e
0x00009946      488b5620       mov rdx, qword [rsi + 0x20]
0x0000994a      48895020       mov qword [rax + 0x20], rdx
0x0000994e      31c0           xor eax, eax
0x00009950      c3             ret
0x00009951      0f1f80000000.  nop dword [rax]
0x00009958      488b4610       mov rax, qword [rsi + 0x10]
0x0000995c      488b4818       mov rcx, qword [rax + 0x18]
0x00009960      48894a20       mov qword [rdx + 0x20], rcx
0x00009964      488b5620       mov rdx, qword [rsi + 0x20]
0x00009968      48895020       mov qword [rax + 0x20], rdx
0x0000996c      31c0           xor eax, eax
0x0000996e      c3             ret
0x0000996f      90             nop
0x00009970      48897220       mov qword [rdx + 0x20], rsi
0x00009974      31c0           xor eax, eax
0x00009976      c3             ret
0x00009977      660f1f840000.  nop word [rax + rax]
;-- check_dst_limits.isra.13:
0x00009980      4157           push r15
0x00009982      4156           push r14
0x00009984      4155           push r13
0x00009986      4154           push r12
0x00009988      55             push rbp
0x00009989      53             push rbx
0x0000998a      31db           xor ebx, ebx
0x0000998c      4883ec48       sub rsp, 0x48
0x00009990      488b87980000.  mov rax, qword [rdi + 0x98]
0x00009997      4c8bbfc80000.  mov r15, qword [rdi + 0xc8]
0x0000999e      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x000099a6      4889442408     mov qword [rsp + 8], rax
0x000099ab      4c89fd         mov rbp, r15
0x000099ae      4839eb         cmp rbx, rbp
0x000099b1      7d58           jge 0x9a0b
0x000099b3      488d042b       lea rax, [rbx + rbp]
0x000099b7      4c8bafd80000.  mov r13, qword [rdi + 0xd8]
0x000099be      4989c2         mov r10, rax
0x000099c1      49c1ea3f       shr r10, 0x3f
0x000099c5      4901c2         add r10, rax
0x000099c8      49d1fa         sar r10, 1
0x000099cb      4b8d0492       lea rax, [r10 + r10*4]
0x000099cf      4d3b44c508     cmp r8, qword [r13 + rax*8 + 8]
0x000099d4      7e30           jle 0x9a06
0x000099d6      e995010000     jmp 0x9b70
0x000099db      0f1f440000     nop dword [rax + rax]
0x000099e0      4e8d1c13       lea r11, [rbx + r10]
0x000099e4      4c89d8         mov rax, r11
0x000099e7      48c1e83f       shr rax, 0x3f
0x000099eb      4c01d8         add rax, r11
0x000099ee      48d1f8         sar rax, 1
0x000099f1      4c8d1c80       lea r11, [rax + rax*4]
0x000099f5      4989c6         mov r14, rax
0x000099f8      4f3944dd08     cmp qword [r13 + r11*8 + 8], r8
0x000099fd      0f8c7d010000   jl 0x9b80
0x00009a03      4989c2         mov r10, rax
0x00009a06      4c39d3         cmp rbx, r10
0x00009a09      7cd5           jl 0x99e0
0x00009a0b      4939df         cmp r15, rbx
0x00009a0e      0f8e9c010000   jle 0x9bb0
0x00009a14      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x00009a1b      488d049b       lea rax, [rbx + rbx*4]
0x00009a1f      498d04c3       lea rax, [r11 + rax*8]
0x00009a23      4c3b4008       cmp r8, qword [rax + 8]
0x00009a27      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00009a2e      480f45d8       cmovne rbx, rax
0x00009a32      4c89f8         mov rax, r15
0x00009a35      31ed           xor ebp, ebp
0x00009a37      4839c5         cmp rbp, rax
0x00009a3a      7d58           jge 0x9a94
0x00009a3c      4c8d5c0500     lea r11, [rbp + rax]
0x00009a41      4d89da         mov r10, r11
0x00009a44      49c1ea3f       shr r10, 0x3f
0x00009a48      4d01da         add r10, r11
0x00009a4b      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x00009a52      49d1fa         sar r10, 1
0x00009a55      4f8d2c92       lea r13, [r10 + r10*4]
0x00009a59      4f3b64eb08     cmp r12, qword [r11 + r13*8 + 8]
0x00009a5e      7e2f           jle 0x9a8f
0x00009a60      e92b010000     jmp 0x9b90
0x00009a65      0f1f00         nop dword [rax]
0x00009a68      4e8d6c1500     lea r13, [rbp + r10]
0x00009a6d      4c89e8         mov rax, r13
0x00009a70      48c1e83f       shr rax, 0x3f
0x00009a74      4c01e8         add rax, r13
0x00009a77      48d1f8         sar rax, 1
0x00009a7a      4c8d2c80       lea r13, [rax + rax*4]
0x00009a7e      4989c6         mov r14, rax
0x00009a81      4f3964eb08     cmp qword [r11 + r13*8 + 8], r12
0x00009a86      0f8c14010000   jl 0x9ba0
0x00009a8c      4989c2         mov r10, rax
0x00009a8f      4c39d5         cmp rbp, r10
0x00009a92      7cd4           jl 0x9a68
0x00009a94      4939ef         cmp r15, rbp
0x00009a97      0f8e23010000   jle 0x9bc0
0x00009a9d      4c8b97d80000.  mov r10, qword [rdi + 0xd8]
0x00009aa4      488d44ad00     lea rax, [rbp + rbp*4]
0x00009aa9      498d04c2       lea rax, [r10 + rax*8]
0x00009aad      4c3b6008       cmp r12, qword [rax + 8]
0x00009ab1      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00009ab8      480f45e8       cmovne rbp, rax
0x00009abc      48833e00       cmp qword [rsi], 0
0x00009ac0      0f8e1c010000   jle 0x9be2
0x00009ac6      48896c2430     mov qword [rsp + 0x30], rbp
0x00009acb      4c894c2420     mov qword [rsp + 0x20], r9
0x00009ad0      4989fd         mov r13, rdi
0x00009ad3      4c89442418     mov qword [rsp + 0x18], r8
0x00009ad8      48894c2410     mov qword [rsp + 0x10], rcx
0x00009add      4531f6         xor r14d, r14d
0x00009ae0      4889742438     mov qword [rsp + 0x38], rsi
0x00009ae5      48895c2428     mov qword [rsp + 0x28], rbx
0x00009aea      4889d5         mov rbp, rdx
0x00009aed      4d89e7         mov r15, r12
0x00009af0      488b4500       mov rax, qword [rbp]
0x00009af4      498b95d80000.  mov rdx, qword [r13 + 0xd8]
0x00009afb      4c89ef         mov rdi, r13
0x00009afe      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00009b03      4c8b442418     mov r8, qword [rsp + 0x18]
0x00009b08      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00009b0d      4a8b34f0       mov rsi, qword [rax + r14*8]
0x00009b11      488d04b6       lea rax, [rsi + rsi*4]
0x00009b15      488d04c2       lea rax, [rdx + rax*8]
0x00009b19      488b542408     mov rdx, qword [rsp + 8]
0x00009b1e      488b00         mov rax, qword [rax]
0x00009b21      48c1e004       shl rax, 4
0x00009b25      480302         add rax, qword [rdx]
0x00009b28      4c8b20         mov r12, qword [rax]
0x00009b2b      4c89e2         mov rdx, r12
0x00009b2e      e80de4ffff     call sym.check_dst_limits_calc_pos
0x00009b33      89c3           mov ebx, eax
0x00009b35      488b4500       mov rax, qword [rbp]
0x00009b39      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00009b3e      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00009b43      4d89f8         mov r8, r15
0x00009b46      4c89e2         mov rdx, r12
0x00009b49      4c89ef         mov rdi, r13
0x00009b4c      4a8b34f0       mov rsi, qword [rax + r14*8]
0x00009b50      e8ebe3ffff     call sym.check_dst_limits_calc_pos
0x00009b55      39c3           cmp ebx, eax
0x00009b57      7477           je 0x9bd0
0x00009b59      b801000000     mov eax, 1
0x00009b5e      4883c448       add rsp, 0x48
0x00009b62      5b             pop rbx
0x00009b63      5d             pop rbp
0x00009b64      415c           pop r12
0x00009b66      415d           pop r13
0x00009b68      415e           pop r14
0x00009b6a      415f           pop r15
0x00009b6c      c3             ret
0x00009b6d      0f1f00         nop dword [rax]
0x00009b70      4d89d6         mov r14, r10
0x00009b73      4989ea         mov r10, rbp
0x00009b76      662e0f1f8400.  nop word cs:[rax + rax]
0x00009b80      498d5e01       lea rbx, [r14 + 1]
0x00009b84      4c89d5         mov rbp, r10
0x00009b87      e922feffff     jmp 0x99ae
0x00009b8c      0f1f4000       nop dword [rax]
0x00009b90      4d89d6         mov r14, r10
0x00009b93      4989c2         mov r10, rax
0x00009b96      662e0f1f8400.  nop word cs:[rax + rax]
0x00009ba0      498d6e01       lea rbp, [r14 + 1]
0x00009ba4      4c89d0         mov rax, r10
0x00009ba7      e98bfeffff     jmp 0x9a37
0x00009bac      0f1f4000       nop dword [rax]
0x00009bb0      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x00009bb7      e976feffff     jmp 0x9a32
0x00009bbc      0f1f4000       nop dword [rax]
0x00009bc0      48c7c5ffffff.  mov rbp, 0xffffffffffffffff
0x00009bc7      e9f0feffff     jmp 0x9abc
0x00009bcc      0f1f4000       nop dword [rax]
0x00009bd0      488b442438     mov rax, qword [rsp + 0x38]
0x00009bd5      4983c601       add r14, 1
0x00009bd9      4c3b30         cmp r14, qword [rax]
0x00009bdc      0f8c0effffff   jl 0x9af0
0x00009be2      31c0           xor eax, eax
0x00009be4      e975ffffff     jmp 0x9b5e
0x00009be9      0f1f80000000.  nop dword [rax]
;-- re_node_set_merge:
0x00009bf0      4885f6         test rsi, rsi
0x00009bf3      0f84ef000000   je 0x9ce8
0x00009bf9      488b5608       mov rdx, qword [rsi + 8]
0x00009bfd      4885d2         test rdx, rdx
0x00009c00      0f84e2000000   je 0x9ce8
0x00009c06      4154           push r12
0x00009c08      55             push rbp
0x00009c09      4989f4         mov r12, rsi
0x00009c0c      53             push rbx
0x00009c0d      488b4708       mov rax, qword [rdi + 8]
0x00009c11      4889fb         mov rbx, rdi
0x00009c14      488b37         mov rsi, qword [rdi]
0x00009c17      488d0c50       lea rcx, [rax + rdx*2]
0x00009c1b      4839ce         cmp rsi, rcx
0x00009c1e      0f8c44010000   jl 0x9d68
0x00009c24      4885c0         test rax, rax
0x00009c27      0f8473010000   je 0x9da0
0x00009c2d      488d2c50       lea rbp, [rax + rdx*2]
0x00009c31      4883ea01       sub rdx, 1
0x00009c35      4883e801       sub rax, 1
0x00009c39      4889d7         mov rdi, rdx
0x00009c3c      48f7d7         not rdi
0x00009c3f      4885ff         test rdi, rdi
0x00009c42      793c           jns 0x9c80
0x00009c44      4885c0         test rax, rax
0x00009c47      7837           js 0x9c80
0x00009c49      488b4b10       mov rcx, qword [rbx + 0x10]
0x00009c4d      498b742410     mov rsi, qword [r12 + 0x10]
0x00009c52      488b34d6       mov rsi, qword [rsi + rdx*8]
0x00009c56      483934c1       cmp qword [rcx + rax*8], rsi
0x00009c5a      0f8490000000   je 0x9cf0
0x00009c60      0f8da2000000   jge 0x9d08
0x00009c66      4883ea01       sub rdx, 1
0x00009c6a      4883ed01       sub rbp, 1
0x00009c6e      4889d7         mov rdi, rdx
0x00009c71      488934e9       mov qword [rcx + rbp*8], rsi
0x00009c75      48f7d7         not rdi
0x00009c78      4885ff         test rdi, rdi
0x00009c7b      78c7           js 0x9c44
0x00009c7d      0f1f00         nop dword [rax]
0x00009c80      4885d2         test rdx, rdx
0x00009c83      0f898f000000   jns 0x9d18
0x00009c89      488b4b08       mov rcx, qword [rbx + 8]
0x00009c8d      498b442408     mov rax, qword [r12 + 8]
0x00009c92      4c8d4441ff     lea r8, [rcx + rax*2 - 1]
0x00009c97      4c89c2         mov rdx, r8
0x00009c9a      4829ea         sub rdx, rbp
0x00009c9d      4883c201       add rdx, 1
0x00009ca1      7437           je 0x9cda
0x00009ca3      488b7b10       mov rdi, qword [rbx + 0x10]
0x00009ca7      488d41ff       lea rax, [rcx - 1]
0x00009cab      4801d1         add rcx, rdx
0x00009cae      48894b08       mov qword [rbx + 8], rcx
0x00009cb2      660f1f440000   nop word [rax + rax]
0x00009cb8      4a8b34c7       mov rsi, qword [rdi + r8*8]
0x00009cbc      488b0cc7       mov rcx, qword [rdi + rax*8]
0x00009cc0      4c8d0c10       lea r9, [rax + rdx]
0x00009cc4      4e8d0ccf       lea r9, [rdi + r9*8]
0x00009cc8      4839ce         cmp rsi, rcx
0x00009ccb      7e73           jle 0x9d40
0x00009ccd      4983e801       sub r8, 1
0x00009cd1      4883ea01       sub rdx, 1
0x00009cd5      498931         mov qword [r9], rsi
0x00009cd8      75de           jne 0x9cb8
0x00009cda      31c0           xor eax, eax
0x00009cdc      5b             pop rbx
0x00009cdd      5d             pop rbp
0x00009cde      415c           pop r12
0x00009ce0      c3             ret
0x00009ce1      0f1f80000000.  nop dword [rax]
0x00009ce8      31c0           xor eax, eax
0x00009cea      c3             ret
0x00009ceb      0f1f440000     nop dword [rax + rax]
0x00009cf0      4883ea01       sub rdx, 1
0x00009cf4      4883e801       sub rax, 1
0x00009cf8      4889d7         mov rdi, rdx
0x00009cfb      48f7d7         not rdi
0x00009cfe      e93cffffff     jmp 0x9c3f
0x00009d03      0f1f440000     nop dword [rax + rax]
0x00009d08      4883e801       sub rax, 1
0x00009d0c      e92effffff     jmp 0x9c3f
0x00009d11      0f1f80000000.  nop dword [rax]
0x00009d18      488b4310       mov rax, qword [rbx + 0x10]
0x00009d1c      4883c201       add rdx, 1
0x00009d20      498b742410     mov rsi, qword [r12 + 0x10]
0x00009d25      4829d5         sub rbp, rdx
0x00009d28      48c1e203       shl rdx, 3
0x00009d2c      488d3ce8       lea rdi, [rax + rbp*8]
0x00009d30      e83b80ffff     call sym.imp.memcpy
0x00009d35      e94fffffff     jmp 0x9c89
0x00009d3a      660f1f440000   nop word [rax + rax]
0x00009d40      4883e801       sub rax, 1
0x00009d44      498909         mov qword [r9], rcx
0x00009d47      0f896bffffff   jns 0x9cb8
0x00009d4d      488d34ef       lea rsi, [rdi + rbp*8]
0x00009d51      48c1e203       shl rdx, 3
0x00009d55      e81680ffff     call sym.imp.memcpy
0x00009d5a      31c0           xor eax, eax
0x00009d5c      e97bffffff     jmp 0x9cdc
0x00009d61      0f1f80000000.  nop dword [rax]
0x00009d68      4801f2         add rdx, rsi
0x00009d6b      488b7f10       mov rdi, qword [rdi + 0x10]
0x00009d6f      488d2c12       lea rbp, [rdx + rdx]
0x00009d73      48c1e204       shl rdx, 4
0x00009d77      4889d6         mov rsi, rdx
0x00009d7a      e88180ffff     call sym.imp.realloc
0x00009d7f      4885c0         test rax, rax
0x00009d82      7440           je 0x9dc4
0x00009d84      48894310       mov qword [rbx + 0x10], rax
0x00009d88      48892b         mov qword [rbx], rbp
0x00009d8b      488b4308       mov rax, qword [rbx + 8]
0x00009d8f      498b542408     mov rdx, qword [r12 + 8]
0x00009d94      e98bfeffff     jmp 0x9c24
0x00009d99      0f1f80000000.  nop dword [rax]
0x00009da0      48895308       mov qword [rbx + 8], rdx
0x00009da4      498b442408     mov rax, qword [r12 + 8]
0x00009da9      488b7b10       mov rdi, qword [rbx + 0x10]
0x00009dad      498b742410     mov rsi, qword [r12 + 0x10]
0x00009db2      488d14c50000.  lea rdx, [rax*8]
0x00009dba      e8b17fffff     call sym.imp.memcpy
0x00009dbf      e916ffffff     jmp 0x9cda
0x00009dc4      b80c000000     mov eax, 0xc
0x00009dc9      e90effffff     jmp 0x9cdc
0x00009dce      6690           nop
;-- calc_eclosure_iter:
0x00009dd0      4157           push r15
0x00009dd2      4156           push r14
0x00009dd4      4989f7         mov r15, rsi
0x00009dd7      4155           push r13
0x00009dd9      4154           push r12
0x00009ddb      55             push rbp
0x00009ddc      53             push rbx
0x00009ddd      488d1c52       lea rbx, [rdx + rdx*2]
0x00009de1      4889d5         mov rbp, rdx
0x00009de4      4883ec68       sub rsp, 0x68
0x00009de8      4c8b6628       mov r12, qword [rsi + 0x28]
0x00009dec      48c1e303       shl rbx, 3
0x00009df0      64488b042528.  mov rax, qword fs:[0x28]
0x00009df9      4889442458     mov qword [rsp + 0x58], rax
0x00009dfe      31c0           xor eax, eax
0x00009e00      48897c2410     mov qword [rsp + 0x10], rdi
0x00009e05      894c241c       mov dword [rsp + 0x1c], ecx
0x00009e09      4901dc         add r12, rbx
0x00009e0c      498b442408     mov rax, qword [r12 + 8]
0x00009e11      48c744242800.  mov qword [rsp + 0x28], 0
0x00009e1a      488d7801       lea rdi, [rax + 1]
0x00009e1e      48897c2420     mov qword [rsp + 0x20], rdi
0x00009e23      48c1e703       shl rdi, 3
0x00009e27      e8747fffff     call sym.imp.malloc
0x00009e2c      4885c0         test rax, rax
0x00009e2f      4889442430     mov qword [rsp + 0x30], rax
0x00009e34      0f8436020000   je 0xa070
0x00009e3a      498b4730       mov rax, qword [r15 + 0x30]
0x00009e3e      498b17         mov rdx, qword [r15]
0x00009e41      4989ed         mov r13, rbp
0x00009e44      49c1e504       shl r13, 4
0x00009e48      48c7441808ff.  mov qword [rax + rbx + 8], 0xffffffffffffffff
0x00009e51      4a8d042a       lea rax, [rdx + r13]
0x00009e55      448b4008       mov r8d, dword [rax + 8]
0x00009e59      41f7c000ff03.  test r8d, 0x3ff00
0x00009e60      0f859a010000   jne 0xa000
0x00009e66      f6400808       test byte [rax + 8], 8
0x00009e6a      0f84c0000000   je 0x9f30
0x00009e70      498b7728       mov rsi, qword [r15 + 0x28]
0x00009e74      488d041e       lea rax, [rsi + rbx]
0x00009e78      4883780800     cmp qword [rax + 8], 0
0x00009e7d      0f8ead000000   jle 0x9f30
0x00009e83      488d542420     lea rdx, [rsp + 0x20]
0x00009e88      c644241b00     mov byte [rsp + 0x1b], 0
0x00009e8d      4531f6         xor r14d, r14d
0x00009e90      4c8d642440     lea r12, [rsp + 0x40]
0x00009e95      4889542408     mov qword [rsp + 8], rdx
0x00009e9a      eb1a           jmp 0x9eb6
0x00009e9c      0f1f4000       nop dword [rax]
0x00009ea0      498b7728       mov rsi, qword [r15 + 0x28]
0x00009ea4      4983c601       add r14, 1
0x00009ea8      488d041e       lea rax, [rsi + rbx]
0x00009eac      4c397008       cmp qword [rax + 8], r14
0x00009eb0      0f8e01010000   jle 0x9fb7
0x00009eb6      488b4010       mov rax, qword [rax + 0x10]
0x00009eba      4a8b14f0       mov rdx, qword [rax + r14*8]
0x00009ebe      498b4730       mov rax, qword [r15 + 0x30]
0x00009ec2      4c8d0452       lea r8, [rdx + rdx*2]
0x00009ec6      4e8d2cc50000.  lea r13, [r8*8]
0x00009ece      4c01e8         add rax, r13
0x00009ed1      488b4808       mov rcx, qword [rax + 8]
0x00009ed5      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00009ed9      0f84c1000000   je 0x9fa0
0x00009edf      4885c9         test rcx, rcx
0x00009ee2      0f8470010000   je 0xa058
0x00009ee8      f30f6f00       movdqu xmm0, xmmword [rax]
0x00009eec      0f29442440     movaps xmmword [rsp + 0x40], xmm0
0x00009ef1      488b4010       mov rax, qword [rax + 0x10]
0x00009ef5      4889442450     mov qword [rsp + 0x50], rax
0x00009efa      488b7c2408     mov rdi, qword [rsp + 8]
0x00009eff      4c89e6         mov rsi, r12
0x00009f02      e8e9fcffff     call sym.re_node_set_merge
0x00009f07      85c0           test eax, eax
0x00009f09      756b           jne 0x9f76
0x00009f0b      498b4730       mov rax, qword [r15 + 0x30]
0x00009f0f      4a837c280800   cmp qword [rax + r13 + 8], 0
0x00009f15      7589           jne 0x9ea0
0x00009f17      488b7c2450     mov rdi, qword [rsp + 0x50]
0x00009f1c      e8df7bffff     call sym.imp.free
0x00009f21      c644241b01     mov byte [rsp + 0x1b], 1
0x00009f26      e975ffffff     jmp 0x9ea0
0x00009f2b      0f1f440000     nop dword [rax + rax]
0x00009f30      488d7c2420     lea rdi, [rsp + 0x20]
0x00009f35      4889ee         mov rsi, rbp
0x00009f38      e853e2ffff     call sym.re_node_set_insert
0x00009f3d      84c0           test al, al
0x00009f3f      0f842b010000   je 0xa070
0x00009f45      498b4730       mov rax, qword [r15 + 0x30]
0x00009f49      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x00009f4f      0f110418       movups xmmword [rax + rbx], xmm0
0x00009f53      488b542430     mov rdx, qword [rsp + 0x30]
0x00009f58      4889541810     mov qword [rax + rbx + 0x10], rdx
0x00009f5d      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00009f62      488b442430     mov rax, qword [rsp + 0x30]
0x00009f67      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x00009f6d      0f2903         movaps xmmword [rbx], xmm0
0x00009f70      48894310       mov qword [rbx + 0x10], rax
0x00009f74      31c0           xor eax, eax
0x00009f76      488b742458     mov rsi, qword [rsp + 0x58]
0x00009f7b      644833342528.  xor rsi, qword fs:[0x28]
0x00009f84      0f85f0000000   jne 0xa07a
0x00009f8a      4883c468       add rsp, 0x68
0x00009f8e      5b             pop rbx
0x00009f8f      5d             pop rbp
0x00009f90      415c           pop r12
0x00009f92      415d           pop r13
0x00009f94      415e           pop r14
0x00009f96      415f           pop r15
0x00009f98      c3             ret
0x00009f99      0f1f80000000.  nop dword [rax]
0x00009fa0      488d041e       lea rax, [rsi + rbx]
0x00009fa4      4983c601       add r14, 1
0x00009fa8      c644241b01     mov byte [rsp + 0x1b], 1
0x00009fad      4c397008       cmp qword [rax + 8], r14
0x00009fb1      0f8ffffeffff   jg 0x9eb6
0x00009fb7      488d7c2420     lea rdi, [rsp + 0x20]
0x00009fbc      4889ee         mov rsi, rbp
0x00009fbf      e8cce1ffff     call sym.re_node_set_insert
0x00009fc4      84c0           test al, al
0x00009fc6      0f84a4000000   je 0xa070
0x00009fcc      807c241c01     cmp byte [rsp + 0x1c], 1
0x00009fd1      498b4730       mov rax, qword [r15 + 0x30]
0x00009fd5      488d1418       lea rdx, [rax + rbx]
0x00009fd9      0f846affffff   je 0x9f49
0x00009fdf      807c241b00     cmp byte [rsp + 0x1b], 0
0x00009fe4      0f845fffffff   je 0x9f49
0x00009fea      48c742080000.  mov qword [rdx + 8], 0
0x00009ff2      e966ffffff     jmp 0x9f5d
0x00009ff7      660f1f840000.  nop word [rax + rax]
0x0000a000      49837c240800   cmp qword [r12 + 8], 0
0x0000a006      0f8424ffffff   je 0x9f30
0x0000a00c      498b4c2410     mov rcx, qword [r12 + 0x10]
0x0000a011      488b09         mov rcx, qword [rcx]
0x0000a014      48c1e104       shl rcx, 4
0x0000a018      f6440a0a04     test byte [rdx + rcx + 0xa], 4
0x0000a01d      0f8543feffff   jne 0x9e66
0x0000a023      41c1e808       shr r8d, 8
0x0000a027      4889e9         mov rcx, rbp
0x0000a02a      4889ea         mov rdx, rbp
0x0000a02d      4181e0ff0300.  and r8d, 0x3ff
0x0000a034      4889ee         mov rsi, rbp
0x0000a037      4c89ff         mov rdi, r15
0x0000a03a      e8a1f0ffff     call sym.duplicate_node_closure
0x0000a03f      85c0           test eax, eax
0x0000a041      0f852fffffff   jne 0x9f76
0x0000a047      498b07         mov rax, qword [r15]
0x0000a04a      4c01e8         add rax, r13
0x0000a04d      e914feffff     jmp 0x9e66
0x0000a052      660f1f440000   nop word [rax + rax]
0x0000a058      4c89fe         mov rsi, r15
0x0000a05b      4c89e7         mov rdi, r12
0x0000a05e      e86dfdffff     call sym.calc_eclosure_iter
0x0000a063      85c0           test eax, eax
0x0000a065      0f848ffeffff   je 0x9efa
0x0000a06b      e906ffffff     jmp 0x9f76
0x0000a070      b80c000000     mov eax, 0xc
0x0000a075      e9fcfeffff     jmp 0x9f76
0x0000a07a      e8a17bffff     call sym.imp.__stack_chk_fail
0x0000a07f      90             nop
;-- check_arrival_expand_ecl:
0x0000a080      4157           push r15
0x0000a082      4156           push r14
0x0000a084      4989fe         mov r14, rdi
0x0000a087      4155           push r13
0x0000a089      4154           push r12
0x0000a08b      4989f7         mov r15, rsi
0x0000a08e      55             push rbp
0x0000a08f      53             push rbx
0x0000a090      4889d5         mov rbp, rdx
0x0000a093      89cb           mov ebx, ecx
0x0000a095      4883ec38       sub rsp, 0x38
0x0000a099      4c8b6608       mov r12, qword [rsi + 8]
0x0000a09d      64488b042528.  mov rax, qword fs:[0x28]
0x0000a0a6      4889442428     mov qword [rsp + 0x28], rax
0x0000a0ab      31c0           xor eax, eax
0x0000a0ad      48c744241800.  mov qword [rsp + 0x18], 0
0x0000a0b6      4a8d3ce50000.  lea rdi, [r12*8]
0x0000a0be      4c89642410     mov qword [rsp + 0x10], r12
0x0000a0c3      e8d87cffff     call sym.imp.malloc
0x0000a0c8      4885c0         test rax, rax
0x0000a0cb      4889442420     mov qword [rsp + 0x20], rax
0x0000a0d0      0f84f7000000   je 0xa1cd
0x0000a0d6      4d85e4         test r12, r12
0x0000a0d9      0f8e8c000000   jle 0xa16b
0x0000a0df      4c8d642410     lea r12, [rsp + 0x10]
0x0000a0e4      4531ed         xor r13d, r13d
0x0000a0e7      660f1f840000.  nop word [rax + rax]
0x0000a0f0      498b4710       mov rax, qword [r15 + 0x10]
0x0000a0f4      4a8b14e8       mov rdx, qword [rax + r13*8]
0x0000a0f8      498b4630       mov rax, qword [r14 + 0x30]
0x0000a0fc      488d0c52       lea rcx, [rdx + rdx*2]
0x0000a100      488d34c8       lea rsi, [rax + rcx*8]
0x0000a104      4c8b4608       mov r8, qword [rsi + 8]
0x0000a108      4d85c0         test r8, r8
0x0000a10b      0f8e7f000000   jle 0xa190
0x0000a111      4c8b5610       mov r10, qword [rsi + 0x10]
0x0000a115      4d8b0e         mov r9, qword [r14]
0x0000a118      31c9           xor ecx, ecx
0x0000a11a      eb0d           jmp 0xa129
0x0000a11c      0f1f4000       nop dword [rax]
0x0000a120      4883c101       add rcx, 1
0x0000a124      4939c8         cmp r8, rcx
0x0000a127      7467           je 0xa190
0x0000a129      498b3cca       mov rdi, qword [r10 + rcx*8]
0x0000a12d      4889f8         mov rax, rdi
0x0000a130      48c1e004       shl rax, 4
0x0000a134      4c01c8         add rax, r9
0x0000a137      440fb65808     movzx r11d, byte [rax + 8]
0x0000a13c      4439db         cmp ebx, r11d
0x0000a13f      75df           jne 0xa120
0x0000a141      483b28         cmp rbp, qword [rax]
0x0000a144      75da           jne 0xa120
0x0000a146      4883ffff       cmp rdi, 0xffffffffffffffff
0x0000a14a      7444           je 0xa190
0x0000a14c      4189d8         mov r8d, ebx
0x0000a14f      4889e9         mov rcx, rbp
0x0000a152      4c89e6         mov rsi, r12
0x0000a155      4c89f7         mov rdi, r14
0x0000a158      e8f3f5ffff     call sym.check_arrival_expand_ecl_sub
0x0000a15d      85c0           test eax, eax
0x0000a15f      753b           jne 0xa19c
0x0000a161      4983c501       add r13, 1
0x0000a165      4d396f08       cmp qword [r15 + 8], r13
0x0000a169      7f85           jg 0xa0f0
0x0000a16b      498b7f10       mov rdi, qword [r15 + 0x10]
0x0000a16f      e88c79ffff     call sym.imp.free
0x0000a174      488b442420     mov rax, qword [rsp + 0x20]
0x0000a179      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x0000a17f      49894710       mov qword [r15 + 0x10], rax
0x0000a183      31c0           xor eax, eax
0x0000a185      410f2907       movaps xmmword [r15], xmm0
0x0000a189      eb23           jmp 0xa1ae
0x0000a18b      0f1f440000     nop dword [rax + rax]
0x0000a190      4c89e7         mov rdi, r12
0x0000a193      e858faffff     call sym.re_node_set_merge
0x0000a198      85c0           test eax, eax
0x0000a19a      74c5           je 0xa161
0x0000a19c      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000a1a1      8944240c       mov dword [rsp + 0xc], eax
0x0000a1a5      e85679ffff     call sym.imp.free
0x0000a1aa      8b44240c       mov eax, dword [rsp + 0xc]
0x0000a1ae      488b542428     mov rdx, qword [rsp + 0x28]
0x0000a1b3      644833142528.  xor rdx, qword fs:[0x28]
0x0000a1bc      7516           jne 0xa1d4
0x0000a1be      4883c438       add rsp, 0x38
0x0000a1c2      5b             pop rbx
0x0000a1c3      5d             pop rbp
0x0000a1c4      415c           pop r12
0x0000a1c6      415d           pop r13
0x0000a1c8      415e           pop r14
0x0000a1ca      415f           pop r15
0x0000a1cc      c3             ret
0x0000a1cd      b80c000000     mov eax, 0xc
0x0000a1d2      ebda           jmp 0xa1ae
0x0000a1d4      e8477affff     call sym.imp.__stack_chk_fail
0x0000a1d9      0f1f80000000.  nop dword [rax]
;-- re_node_set_add_intersect:
0x0000a1e0      4c8b4e08       mov r9, qword [rsi + 8]
0x0000a1e4      31c0           xor eax, eax
0x0000a1e6      4d85c9         test r9, r9
0x0000a1e9      0f84b9000000   je 0xa2a8
0x0000a1ef      4c8b5a08       mov r11, qword [rdx + 8]
0x0000a1f3      4d85db         test r11, r11
0x0000a1f6      0f84ac000000   je 0xa2a8
0x0000a1fc      4155           push r13
0x0000a1fe      4154           push r12
0x0000a200      4b8d0419       lea rax, [r9 + r11]
0x0000a204      55             push rbp
0x0000a205      53             push rbx
0x0000a206      4989d4         mov r12, rdx
0x0000a209      4889fb         mov rbx, rdi
0x0000a20c      4889f5         mov rbp, rsi
0x0000a20f      4883ec08       sub rsp, 8
0x0000a213      488b4f08       mov rcx, qword [rdi + 8]
0x0000a217      4c8b2f         mov r13, qword [rdi]
0x0000a21a      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000a21e      488d1408       lea rdx, [rax + rcx]
0x0000a222      4c39ea         cmp rdx, r13
0x0000a225      0f8f25010000   jg 0xa350
0x0000a22b      4a8d3409       lea rsi, [rcx + r9]
0x0000a22f      4c8b6d10       mov r13, qword [rbp + 0x10]
0x0000a233      498b542410     mov rdx, qword [r12 + 0x10]
0x0000a238      4983e901       sub r9, 1
0x0000a23c      4883e901       sub rcx, 1
0x0000a240      4c01de         add rsi, r11
0x0000a243      4983eb01       sub r11, 1
0x0000a247      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0000a24c      4e8b04da       mov r8, qword [rdx + r11*8]
0x0000a250      4c39c0         cmp rax, r8
0x0000a253      7411           je 0xa266
0x0000a255      7d59           jge 0xa2b0
0x0000a257      4983eb01       sub r11, 1
0x0000a25b      7863           js 0xa2c0
0x0000a25d      4e8b04da       mov r8, qword [rdx + r11*8]
0x0000a261      4c39c0         cmp rax, r8
0x0000a264      75ef           jne 0xa255
0x0000a266      4885c9         test rcx, rcx
0x0000a269      790f           jns 0xa27a
0x0000a26b      eb1b           jmp 0xa288
0x0000a26d      0f1f00         nop dword [rax]
0x0000a270      4883e901       sub rcx, 1
0x0000a274      4883f9ff       cmp rcx, 0xffffffffffffffff
0x0000a278      740e           je 0xa288
0x0000a27a      4c8b14cf       mov r10, qword [rdi + rcx*8]
0x0000a27e      4d39c2         cmp r10, r8
0x0000a281      7fed           jg 0xa270
0x0000a283      4d39c2         cmp r10, r8
0x0000a286      7408           je 0xa290
0x0000a288      4883ee01       sub rsi, 1
0x0000a28c      4c8904f7       mov qword [rdi + rsi*8], r8
0x0000a290      4983e901       sub r9, 1
0x0000a294      782a           js 0xa2c0
0x0000a296      4983eb01       sub r11, 1
0x0000a29a      7824           js 0xa2c0
0x0000a29c      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0000a2a1      ebba           jmp 0xa25d
0x0000a2a3      0f1f440000     nop dword [rax + rax]
0x0000a2a8      f3c3           ret
0x0000a2aa      660f1f440000   nop word [rax + rax]
0x0000a2b0      4983e901       sub r9, 1
0x0000a2b4      780a           js 0xa2c0
0x0000a2b6      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0000a2bb      eb93           jmp 0xa250
0x0000a2bd      0f1f00         nop dword [rax]
0x0000a2c0      488b4b08       mov rcx, qword [rbx + 8]
0x0000a2c4      488b5508       mov rdx, qword [rbp + 8]
0x0000a2c8      4801ca         add rdx, rcx
0x0000a2cb      4903542408     add rdx, qword [r12 + 8]
0x0000a2d0      488d41ff       lea rax, [rcx - 1]
0x0000a2d4      4c8d4aff       lea r9, [rdx - 1]
0x0000a2d8      4829f2         sub rdx, rsi
0x0000a2db      4801d1         add rcx, rdx
0x0000a2de      4885d2         test rdx, rdx
0x0000a2e1      48894b08       mov qword [rbx + 8], rcx
0x0000a2e5      7e46           jle 0xa32d
0x0000a2e7      4885c0         test rax, rax
0x0000a2ea      7841           js 0xa32d
0x0000a2ec      0f1f4000       nop dword [rax]
0x0000a2f0      4e8b04cf       mov r8, qword [rdi + r9*8]
0x0000a2f4      488b0cc7       mov rcx, qword [rdi + rax*8]
0x0000a2f8      4c8d1410       lea r10, [rax + rdx]
0x0000a2fc      4e8d14d7       lea r10, [rdi + r10*8]
0x0000a300      4939c8         cmp r8, rcx
0x0000a303      7e1b           jle 0xa320
0x0000a305      4983e901       sub r9, 1
0x0000a309      4883ea01       sub rdx, 1
0x0000a30d      4d8902         mov qword [r10], r8
0x0000a310      75de           jne 0xa2f0
0x0000a312      31d2           xor edx, edx
0x0000a314      eb1b           jmp 0xa331
0x0000a316      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a320      4883e801       sub rax, 1
0x0000a324      49890a         mov qword [r10], rcx
0x0000a327      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a32b      75c3           jne 0xa2f0
0x0000a32d      48c1e203       shl rdx, 3
0x0000a331      488d34f7       lea rsi, [rdi + rsi*8]
0x0000a335      e8367affff     call sym.imp.memcpy
0x0000a33a      31c0           xor eax, eax
0x0000a33c      4883c408       add rsp, 8
0x0000a340      5b             pop rbx
0x0000a341      5d             pop rbp
0x0000a342      415c           pop r12
0x0000a344      415d           pop r13
0x0000a346      c3             ret
0x0000a347      660f1f840000.  nop word [rax + rax]
0x0000a350      4901c5         add r13, rax
0x0000a353      4a8d34ed0000.  lea rsi, [r13*8]
0x0000a35b      e8a07affff     call sym.imp.realloc
0x0000a360      4885c0         test rax, rax
0x0000a363      4889c7         mov rdi, rax
0x0000a366      7419           je 0xa381
0x0000a368      48894310       mov qword [rbx + 0x10], rax
0x0000a36c      4c892b         mov qword [rbx], r13
0x0000a36f      488b4b08       mov rcx, qword [rbx + 8]
0x0000a373      4c8b4d08       mov r9, qword [rbp + 8]
0x0000a377      4d8b5c2408     mov r11, qword [r12 + 8]
0x0000a37c      e9aafeffff     jmp 0xa22b
0x0000a381      b80c000000     mov eax, 0xc
0x0000a386      ebb4           jmp 0xa33c
0x0000a388      0f1f84000000.  nop dword [rax + rax]
;-- create_token_tree.isra.16:
0x0000a390      53             push rbx
0x0000a391      4889fb         mov rbx, rdi
0x0000a394      4883ec20       sub rsp, 0x20
0x0000a398      8b06           mov eax, dword [rsi]
0x0000a39a      83f80f         cmp eax, 0xf
0x0000a39d      7479           je 0xa418
0x0000a39f      4c63c8         movsxd r9, eax
0x0000a3a2      448d5001       lea r10d, [rax + 1]
0x0000a3a6      488b3f         mov rdi, qword [rdi]
0x0000a3a9      4c89c8         mov rax, r9
0x0000a3ac      48c1e006       shl rax, 6
0x0000a3b0      4883c008       add rax, 8
0x0000a3b4      49c1e106       shl r9, 6
0x0000a3b8      448916         mov dword [rsi], r10d
0x0000a3bb      4801f8         add rax, rdi
0x0000a3be      4a8d340f       lea rsi, [rdi + r9]
0x0000a3c2      48c746080000.  mov qword [rsi + 8], 0
0x0000a3ca      48895610       mov qword [rsi + 0x10], rdx
0x0000a3ce      488d7e20       lea rdi, [rsi + 0x20]
0x0000a3d2      48894e18       mov qword [rsi + 0x18], rcx
0x0000a3d6      f3410f6f00     movdqu xmm0, xmmword [r8]
0x0000a3db      0f114630       movups xmmword [rsi + 0x30], xmm0
0x0000a3df      80671af3       and byte [rdi + 0x1a], 0xf3             ; [0xf3:1]=0
0x0000a3e3      4885d2         test rdx, rdx
0x0000a3e6      48c746200000.  mov qword [rsi + 0x20], 0
0x0000a3ee      48c746280000.  mov qword [rsi + 0x28], 0
0x0000a3f6      48c74640ffff.  mov qword [rsi + 0x40], 0xffffffffffffffff
0x0000a3fe      7403           je 0xa403
0x0000a400      488902         mov qword [rdx], rax
0x0000a403      4885c9         test rcx, rcx
0x0000a406      7403           je 0xa40b
0x0000a408      488901         mov qword [rcx], rax
0x0000a40b      4883c420       add rsp, 0x20
0x0000a40f      5b             pop rbx
0x0000a410      c3             ret
0x0000a411      0f1f80000000.  nop dword [rax]
0x0000a418      bfc8030000     mov edi, 0x3c8
0x0000a41d      4c89442418     mov qword [rsp + 0x18], r8
0x0000a422      48894c2410     mov qword [rsp + 0x10], rcx
0x0000a427      4889542408     mov qword [rsp + 8], rdx
0x0000a42c      48893424       mov qword [rsp], rsi
0x0000a430      e86b79ffff     call sym.imp.malloc
0x0000a435      4885c0         test rax, rax
0x0000a438      4889c7         mov rdi, rax
0x0000a43b      742f           je 0xa46c
0x0000a43d      488b03         mov rax, qword [rbx]
0x0000a440      41ba01000000   mov r10d, 1
0x0000a446      48893b         mov qword [rbx], rdi
0x0000a449      4531c9         xor r9d, r9d
0x0000a44c      4c8b442418     mov r8, qword [rsp + 0x18]
0x0000a451      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000a456      488b542408     mov rdx, qword [rsp + 8]
0x0000a45b      488b3424       mov rsi, qword [rsp]
0x0000a45f      488907         mov qword [rdi], rax
0x0000a462      b808000000     mov eax, 8
0x0000a467      e948ffffff     jmp 0xa3b4
0x0000a46c      31c0           xor eax, eax
0x0000a46e      eb9b           jmp 0xa40b
;-- duplicate_tree:
0x0000a470      4156           push r14
0x0000a472      4155           push r13
0x0000a474      4c8d6e70       lea r13, [rsi + 0x70]
0x0000a478      4154           push r12
0x0000a47a      55             push rbp
0x0000a47b      4c8da6800000.  lea r12, [rsi + 0x80]
0x0000a482      53             push rbx
0x0000a483      4889fb         mov rbx, rdi
0x0000a486      4883ec10       sub rsp, 0x10
0x0000a48a      488b2f         mov rbp, qword [rdi]
0x0000a48d      64488b042528.  mov rax, qword fs:[0x28]
0x0000a496      4889442408     mov qword [rsp + 8], rax
0x0000a49b      31c0           xor eax, eax
0x0000a49d      4989e6         mov r14, rsp
0x0000a4a0      4c8d4328       lea r8, [rbx + 0x28]
0x0000a4a4      31c9           xor ecx, ecx
0x0000a4a6      31d2           xor edx, edx
0x0000a4a8      4c89e6         mov rsi, r12
0x0000a4ab      4c89ef         mov rdi, r13
0x0000a4ae      e8ddfeffff     call sym.create_token_tree.isra.16
0x0000a4b3      4885c0         test rax, rax
0x0000a4b6      498906         mov qword [r14], rax
0x0000a4b9      7451           je 0xa50c
0x0000a4bb      488928         mov qword [rax], rbp
0x0000a4be      498b2e         mov rbp, qword [r14]
0x0000a4c1      804d3204       or byte [rbp + 0x32], 4
0x0000a4c5      488b4308       mov rax, qword [rbx + 8]
0x0000a4c9      4885c0         test rax, rax
0x0000a4cc      7412           je 0xa4e0
0x0000a4ce      4c8d7508       lea r14, [rbp + 8]
0x0000a4d2      4889c3         mov rbx, rax
0x0000a4d5      ebc9           jmp 0xa4a0
0x0000a4d7      660f1f840000.  nop word [rax + rax]
0x0000a4e0      31d2           xor edx, edx
0x0000a4e2      eb07           jmp 0xa4eb
0x0000a4e4      0f1f4000       nop dword [rax]
0x0000a4e8      4889c3         mov rbx, rax
0x0000a4eb      488b4310       mov rax, qword [rbx + 0x10]
0x0000a4ef      4885c0         test rax, rax
0x0000a4f2      7405           je 0xa4f9
0x0000a4f4      4839d0         cmp rax, rdx
0x0000a4f7      7537           jne 0xa530
0x0000a4f9      488b03         mov rax, qword [rbx]
0x0000a4fc      488b6d00       mov rbp, qword [rbp]
0x0000a500      4889da         mov rdx, rbx
0x0000a503      4885c0         test rax, rax
0x0000a506      75e0           jne 0xa4e8
0x0000a508      488b0424       mov rax, qword [rsp]
0x0000a50c      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a511      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a51a      7520           jne 0xa53c
0x0000a51c      4883c410       add rsp, 0x10
0x0000a520      5b             pop rbx
0x0000a521      5d             pop rbp
0x0000a522      415c           pop r12
0x0000a524      415d           pop r13
0x0000a526      415e           pop r14
0x0000a528      c3             ret
0x0000a529      0f1f80000000.  nop dword [rax]
0x0000a530      4c8d7510       lea r14, [rbp + 0x10]
0x0000a534      4889c3         mov rbx, rax
0x0000a537      e964ffffff     jmp 0xa4a0
0x0000a53c      e8df76ffff     call sym.imp.__stack_chk_fail
0x0000a541      0f1f440000     nop dword [rax + rax]
0x0000a546      662e0f1f8400.  nop word cs:[rax + rax]
;-- lower_subexp:
0x0000a550      4157           push r15
0x0000a552      4156           push r14
0x0000a554      4155           push r13
0x0000a556      4154           push r12
0x0000a558      4989d5         mov r13, rdx
0x0000a55b      55             push rbp
0x0000a55c      53             push rbx
0x0000a55d      4883ec48       sub rsp, 0x48
0x0000a561      488b1e         mov rbx, qword [rsi]
0x0000a564      488b6a08       mov rbp, qword [rdx + 8]
0x0000a568      64488b042528.  mov rax, qword fs:[0x28]
0x0000a571      4889442438     mov qword [rsp + 0x38], rax
0x0000a576      31c0           xor eax, eax
0x0000a578      f6463810       test byte [rsi + 0x38], 0x10
0x0000a57c      48897c2418     mov qword [rsp + 0x18], rdi
0x0000a581      0f8471010000   je 0xa6f8
0x0000a587      4885ed         test rbp, rbp
0x0000a58a      7474           je 0xa600
0x0000a58c      488b4228       mov rax, qword [rdx + 0x28]
0x0000a590      4883f83f       cmp rax, 0x3f
0x0000a594      0f8f33010000   jg 0xa6cd
0x0000a59a      488b93a00000.  mov rdx, qword [rbx + 0xa0]
0x0000a5a1      480fa3c2       bt rdx, rax
0x0000a5a5      0f8322010000   jae 0xa6cd
0x0000a5ab      488d4370       lea rax, [rbx + 0x70]
0x0000a5af      4c8d742420     lea r14, [rsp + 0x20]
0x0000a5b4      4883eb80       sub rbx, 0xffffffffffffff80
0x0000a5b8      31c9           xor ecx, ecx
0x0000a5ba      31d2           xor edx, edx
0x0000a5bc      4889de         mov rsi, rbx
0x0000a5bf      4989c7         mov r15, rax
0x0000a5c2      4d89f0         mov r8, r14
0x0000a5c5      4889c7         mov rdi, rax
0x0000a5c8      c644242808     mov byte [rsp + 0x28], 8
0x0000a5cd      4889442408     mov qword [rsp + 8], rax
0x0000a5d2      e8b9fdffff     call sym.create_token_tree.isra.16
0x0000a5d7      4c89ff         mov rdi, r15
0x0000a5da      4d89f0         mov r8, r14
0x0000a5dd      31c9           xor ecx, ecx
0x0000a5df      31d2           xor edx, edx
0x0000a5e1      4889de         mov rsi, rbx
0x0000a5e4      4989c4         mov r12, rax
0x0000a5e7      c644242809     mov byte [rsp + 0x28], 9
0x0000a5ec      e89ffdffff     call sym.create_token_tree.isra.16
0x0000a5f1      4989c7         mov r15, rax
0x0000a5f4      e954010000     jmp 0xa74d
0x0000a5f9      0f1f80000000.  nop dword [rax]
0x0000a600      488d4370       lea rax, [rbx + 0x70]
0x0000a604      4c8d742420     lea r14, [rsp + 0x20]
0x0000a609      4883eb80       sub rbx, 0xffffffffffffff80
0x0000a60d      31c9           xor ecx, ecx
0x0000a60f      31d2           xor edx, edx
0x0000a611      4889de         mov rsi, rbx
0x0000a614      4989c7         mov r15, rax
0x0000a617      4d89f0         mov r8, r14
0x0000a61a      4889c7         mov rdi, rax
0x0000a61d      c644242808     mov byte [rsp + 0x28], 8
0x0000a622      4889442408     mov qword [rsp + 8], rax
0x0000a627      e864fdffff     call sym.create_token_tree.isra.16
0x0000a62c      4c89ff         mov rdi, r15
0x0000a62f      4d89f0         mov r8, r14
0x0000a632      31c9           xor ecx, ecx
0x0000a634      31d2           xor edx, edx
0x0000a636      4889de         mov rsi, rbx
0x0000a639      4989c4         mov r12, rax
0x0000a63c      c644242809     mov byte [rsp + 0x28], 9
0x0000a641      e84afdffff     call sym.create_token_tree.isra.16
0x0000a646      4989c3         mov r11, rax
0x0000a649      4989c7         mov r15, rax
0x0000a64c      488b7c2408     mov rdi, qword [rsp + 8]
0x0000a651      4d89f0         mov r8, r14
0x0000a654      4c89d9         mov rcx, r11
0x0000a657      4c89e2         mov rdx, r12
0x0000a65a      4889de         mov rsi, rbx
0x0000a65d      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x0000a662      4c895c2410     mov qword [rsp + 0x10], r11
0x0000a667      e824fdffff     call sym.create_token_tree.isra.16
0x0000a66c      4885c0         test rax, rax
0x0000a66f      4889c5         mov rbp, rax
0x0000a672      0f84f8000000   je 0xa770
0x0000a678      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000a67d      4d85db         test r11, r11
0x0000a680      0f84ea000000   je 0xa770
0x0000a686      4d85e4         test r12, r12
0x0000a689      0f84e1000000   je 0xa770
0x0000a68f      4d85ff         test r15, r15
0x0000a692      0f84d8000000   je 0xa770
0x0000a698      498b4528       mov rax, qword [r13 + 0x28]
0x0000a69c      49894728       mov qword [r15 + 0x28], rax
0x0000a6a0      4989442428     mov qword [r12 + 0x28], rax
0x0000a6a5      410fb64532     movzx eax, byte [r13 + 0x32]
0x0000a6aa      410fb65732     movzx edx, byte [r15 + 0x32]
0x0000a6af      83e008         and eax, 8
0x0000a6b2      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0000a6b5      89c1           mov ecx, eax
0x0000a6b7      09ca           or edx, ecx
0x0000a6b9      41885732       mov byte [r15 + 0x32], dl
0x0000a6bd      410fb6442432   movzx eax, byte [r12 + 0x32]
0x0000a6c3      83e0f7         and eax, 0xfffffff7                     ; 4294967287
0x0000a6c6      09c8           or eax, ecx
0x0000a6c8      4188442432     mov byte [r12 + 0x32], al
0x0000a6cd      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000a6d2      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000a6db      4889e8         mov rax, rbp
0x0000a6de      0f859e000000   jne 0xa782
0x0000a6e4      4883c448       add rsp, 0x48
0x0000a6e8      5b             pop rbx
0x0000a6e9      5d             pop rbp
0x0000a6ea      415c           pop r12
0x0000a6ec      415d           pop r13
0x0000a6ee      415e           pop r14
0x0000a6f0      415f           pop r15
0x0000a6f2      c3             ret
0x0000a6f3      0f1f440000     nop dword [rax + rax]
0x0000a6f8      488d4370       lea rax, [rbx + 0x70]
0x0000a6fc      4c8d742420     lea r14, [rsp + 0x20]
0x0000a701      4883eb80       sub rbx, 0xffffffffffffff80
0x0000a705      31c9           xor ecx, ecx
0x0000a707      31d2           xor edx, edx
0x0000a709      4889de         mov rsi, rbx
0x0000a70c      4989c7         mov r15, rax
0x0000a70f      4d89f0         mov r8, r14
0x0000a712      4889c7         mov rdi, rax
0x0000a715      c644242808     mov byte [rsp + 0x28], 8
0x0000a71a      4889442408     mov qword [rsp + 8], rax
0x0000a71f      e86cfcffff     call sym.create_token_tree.isra.16
0x0000a724      31c9           xor ecx, ecx
0x0000a726      31d2           xor edx, edx
0x0000a728      4c89ff         mov rdi, r15
0x0000a72b      4d89f0         mov r8, r14
0x0000a72e      4889de         mov rsi, rbx
0x0000a731      4989c4         mov r12, rax
0x0000a734      c644242809     mov byte [rsp + 0x28], 9
0x0000a739      e852fcffff     call sym.create_token_tree.isra.16
0x0000a73e      4885ed         test rbp, rbp
0x0000a741      4989c7         mov r15, rax
0x0000a744      4989c3         mov r11, rax
0x0000a747      0f84fffeffff   je 0xa64c
0x0000a74d      488b7c2408     mov rdi, qword [rsp + 8]
0x0000a752      4d89f0         mov r8, r14
0x0000a755      4c89f9         mov rcx, r15
0x0000a758      4889ea         mov rdx, rbp
0x0000a75b      4889de         mov rsi, rbx
0x0000a75e      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x0000a763      e828fcffff     call sym.create_token_tree.isra.16
0x0000a768      4989c3         mov r11, rax
0x0000a76b      e9dcfeffff     jmp 0xa64c
0x0000a770      488b442418     mov rax, qword [rsp + 0x18]
0x0000a775      31ed           xor ebp, ebp
0x0000a777      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000a77d      e94bffffff     jmp 0xa6cd
0x0000a782      e89974ffff     call sym.imp.__stack_chk_fail
0x0000a787      660f1f840000.  nop word [rax + rax]
;-- lower_subexps:
0x0000a790      55             push rbp
0x0000a791      53             push rbx
0x0000a792      4889fd         mov rbp, rdi
0x0000a795      4889f3         mov rbx, rsi
0x0000a798      4883ec18       sub rsp, 0x18
0x0000a79c      488b5608       mov rdx, qword [rsi + 8]
0x0000a7a0      64488b042528.  mov rax, qword fs:[0x28]
0x0000a7a9      4889442408     mov qword [rsp + 8], rax
0x0000a7ae      31c0           xor eax, eax
0x0000a7b0      c74424040000.  mov dword [rsp + 4], 0
0x0000a7b8      4885d2         test rdx, rdx
0x0000a7bb      7406           je 0xa7c3
0x0000a7bd      807a3011       cmp byte [rdx + 0x30], 0x11
0x0000a7c1      744d           je 0xa810
0x0000a7c3      488b5310       mov rdx, qword [rbx + 0x10]
0x0000a7c7      4885d2         test rdx, rdx
0x0000a7ca      7406           je 0xa7d2
0x0000a7cc      807a3011       cmp byte [rdx + 0x30], 0x11
0x0000a7d0      741e           je 0xa7f0
0x0000a7d2      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a7d7      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a7e0      8b442404       mov eax, dword [rsp + 4]
0x0000a7e4      7545           jne 0xa82b
0x0000a7e6      4883c418       add rsp, 0x18
0x0000a7ea      5b             pop rbx
0x0000a7eb      5d             pop rbp
0x0000a7ec      c3             ret
0x0000a7ed      0f1f00         nop dword [rax]
0x0000a7f0      488d7c2404     lea rdi, [rsp + 4]
0x0000a7f5      4889ee         mov rsi, rbp
0x0000a7f8      e853fdffff     call sym.lower_subexp
0x0000a7fd      4885c0         test rax, rax
0x0000a800      48894310       mov qword [rbx + 0x10], rax
0x0000a804      74cc           je 0xa7d2
0x0000a806      488918         mov qword [rax], rbx
0x0000a809      ebc7           jmp 0xa7d2
0x0000a80b      0f1f440000     nop dword [rax + rax]
0x0000a810      488d7c2404     lea rdi, [rsp + 4]
0x0000a815      4889ee         mov rsi, rbp
0x0000a818      e833fdffff     call sym.lower_subexp
0x0000a81d      4885c0         test rax, rax
0x0000a820      48894308       mov qword [rbx + 8], rax
0x0000a824      749d           je 0xa7c3
0x0000a826      488918         mov qword [rax], rbx
0x0000a829      eb98           jmp 0xa7c3
0x0000a82b      e8f073ffff     call sym.imp.__stack_chk_fail
;-- re_node_set_init_copy:
0x0000a830      4154           push r12
0x0000a832      55             push rbp
0x0000a833      53             push rbx
0x0000a834      488b4608       mov rax, qword [rsi + 8]
0x0000a838      48894708       mov qword [rdi + 8], rax
0x0000a83c      4c8b6608       mov r12, qword [rsi + 8]
0x0000a840      4d85e4         test r12, r12
0x0000a843      7e3b           jle 0xa880
0x0000a845      4889fb         mov rbx, rdi
0x0000a848      488907         mov qword [rdi], rax
0x0000a84b      488d3cc50000.  lea rdi, [rax*8]
0x0000a853      4889f5         mov rbp, rsi
0x0000a856      e84575ffff     call sym.imp.malloc
0x0000a85b      4885c0         test rax, rax
0x0000a85e      48894310       mov qword [rbx + 0x10], rax
0x0000a862      743c           je 0xa8a0
0x0000a864      488b7510       mov rsi, qword [rbp + 0x10]
0x0000a868      4a8d14e50000.  lea rdx, [r12*8]
0x0000a870      4889c7         mov rdi, rax
0x0000a873      e8f874ffff     call sym.imp.memcpy
0x0000a878      31c0           xor eax, eax
0x0000a87a      5b             pop rbx
0x0000a87b      5d             pop rbp
0x0000a87c      415c           pop r12
0x0000a87e      c3             ret
0x0000a87f      90             nop
0x0000a880      660fefc0       pxor xmm0, xmm0
0x0000a884      48c747100000.  mov qword [rdi + 0x10], 0
0x0000a88c      31c0           xor eax, eax
0x0000a88e      0f1107         movups xmmword [rdi], xmm0
0x0000a891      5b             pop rbx
0x0000a892      5d             pop rbp
0x0000a893      415c           pop r12
0x0000a895      c3             ret
0x0000a896      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a8a0      48c743080000.  mov qword [rbx + 8], 0
0x0000a8a8      48c703000000.  mov qword [rbx], 0
0x0000a8af      b80c000000     mov eax, 0xc
0x0000a8b4      ebc4           jmp 0xa87a
0x0000a8b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_init_union:
0x0000a8c0      4885f6         test rsi, rsi
0x0000a8c3      4156           push r14
0x0000a8c5      4155           push r13
0x0000a8c7      4154           push r12
0x0000a8c9      55             push rbp
0x0000a8ca      53             push rbx
0x0000a8cb      0f84a4000000   je 0xa975
0x0000a8d1      4885d2         test rdx, rdx
0x0000a8d4      4c8b6e08       mov r13, qword [rsi + 8]
0x0000a8d8      0f8492000000   je 0xa970
0x0000a8de      4d85ed         test r13, r13
0x0000a8e1      0f8e89000000   jle 0xa970
0x0000a8e7      4c8b7208       mov r14, qword [rdx + 8]
0x0000a8eb      4d85f6         test r14, r14
0x0000a8ee      0f8eaf000000   jle 0xa9a3
0x0000a8f4      4989fc         mov r12, rdi
0x0000a8f7      4b8d7c3500     lea rdi, [r13 + r14]
0x0000a8fc      4889d3         mov rbx, rdx
0x0000a8ff      4889f5         mov rbp, rsi
0x0000a902      49893c24       mov qword [r12], rdi
0x0000a906      48c1e703       shl rdi, 3
0x0000a90a      e89174ffff     call sym.imp.malloc
0x0000a90f      4885c0         test rax, rax
0x0000a912      4989442410     mov qword [r12 + 0x10], rax
0x0000a917      0f84eb000000   je 0xaa08
0x0000a91d      4c8b4b10       mov r9, qword [rbx + 0x10]
0x0000a921      4c8b4510       mov r8, qword [rbp + 0x10]
0x0000a925      31db           xor ebx, ebx
0x0000a927      31c9           xor ecx, ecx
0x0000a929      31f6           xor esi, esi
0x0000a92b      eb21           jmp 0xa94e
0x0000a92d      0f1f00         nop dword [rax]
0x0000a930      400f94c7       sete dil
0x0000a934      488954d8f8     mov qword [rax + rbx*8 - 8], rdx
0x0000a939      4883c601       add rsi, 1
0x0000a93d      400fb6ff       movzx edi, dil
0x0000a941      4801f9         add rcx, rdi
0x0000a944      4939f5         cmp r13, rsi
0x0000a947      7e67           jle 0xa9b0
0x0000a949      4939ce         cmp r14, rcx
0x0000a94c      7e7a           jle 0xa9c8
0x0000a94e      498b14f0       mov rdx, qword [r8 + rsi*8]
0x0000a952      498b3cc9       mov rdi, qword [r9 + rcx*8]
0x0000a956      4883c301       add rbx, 1
0x0000a95a      4839fa         cmp rdx, rdi
0x0000a95d      7ed1           jle 0xa930
0x0000a95f      4883c101       add rcx, 1
0x0000a963      48897cd8f8     mov qword [rax + rbx*8 - 8], rdi
0x0000a968      ebda           jmp 0xa944
0x0000a96a      660f1f440000   nop word [rax + rax]
0x0000a970      4d85ed         test r13, r13
0x0000a973      7f2e           jg 0xa9a3
0x0000a975      4885d2         test rdx, rdx
0x0000a978      7407           je 0xa981
0x0000a97a      48837a0800     cmp qword [rdx + 8], 0
0x0000a97f      7f1f           jg 0xa9a0
0x0000a981      660fefc0       pxor xmm0, xmm0
0x0000a985      48c747100000.  mov qword [rdi + 0x10], 0
0x0000a98d      31c0           xor eax, eax
0x0000a98f      0f2907         movaps xmmword [rdi], xmm0
0x0000a992      5b             pop rbx
0x0000a993      5d             pop rbp
0x0000a994      415c           pop r12
0x0000a996      415d           pop r13
0x0000a998      415e           pop r14
0x0000a99a      c3             ret
0x0000a99b      0f1f440000     nop dword [rax + rax]
0x0000a9a0      4889d6         mov rsi, rdx
0x0000a9a3      5b             pop rbx
0x0000a9a4      5d             pop rbp
0x0000a9a5      415c           pop r12
0x0000a9a7      415d           pop r13
0x0000a9a9      415e           pop r14
0x0000a9ab      e980feffff     jmp sym.re_node_set_init_copy
0x0000a9b0      4939ce         cmp r14, rcx
0x0000a9b3      7f33           jg 0xa9e8
0x0000a9b5      49895c2408     mov qword [r12 + 8], rbx
0x0000a9ba      31c0           xor eax, eax
0x0000a9bc      5b             pop rbx
0x0000a9bd      5d             pop rbp
0x0000a9be      415c           pop r12
0x0000a9c0      415d           pop r13
0x0000a9c2      415e           pop r14
0x0000a9c4      c3             ret
0x0000a9c5      0f1f00         nop dword [rax]
0x0000a9c8      4929f5         sub r13, rsi
0x0000a9cb      488d3cd8       lea rdi, [rax + rbx*8]
0x0000a9cf      498d34f0       lea rsi, [r8 + rsi*8]
0x0000a9d3      4a8d14ed0000.  lea rdx, [r13*8]
0x0000a9db      4c01eb         add rbx, r13
0x0000a9de      e88d73ffff     call sym.imp.memcpy
0x0000a9e3      ebd0           jmp 0xa9b5
0x0000a9e5      0f1f00         nop dword [rax]
0x0000a9e8      4929ce         sub r14, rcx
0x0000a9eb      488d3cd8       lea rdi, [rax + rbx*8]
0x0000a9ef      498d34c9       lea rsi, [r9 + rcx*8]
0x0000a9f3      4a8d14f50000.  lea rdx, [r14*8]
0x0000a9fb      4c01f3         add rbx, r14
0x0000a9fe      e86d73ffff     call sym.imp.memcpy
0x0000aa03      ebb0           jmp 0xa9b5
0x0000aa05      0f1f00         nop dword [rax]
0x0000aa08      b80c000000     mov eax, 0xc
0x0000aa0d      e980ffffff     jmp 0xa992
0x0000aa12      0f1f4000       nop dword [rax]
0x0000aa16      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_acquire_state_context:
0x0000aa20      4157           push r15
0x0000aa22      4156           push r14
0x0000aa24      4155           push r13
0x0000aa26      4154           push r12
0x0000aa28      55             push rbp
0x0000aa29      53             push rbx
0x0000aa2a      4883ec28       sub rsp, 0x28
0x0000aa2e      4c8b5208       mov r10, qword [rdx + 8]
0x0000aa32      4d85d2         test r10, r10
0x0000aa35      0f8484020000   je 0xacbf
0x0000aa3b      4189c8         mov r8d, ecx
0x0000aa3e      4d85d2         test r10, r10
0x0000aa41      4f8d2410       lea r12, [r8 + r10]
0x0000aa45      7e15           jle 0xaa5c
0x0000aa47      488b4210       mov rax, qword [rdx + 0x10]
0x0000aa4b      4e8d14d0       lea r10, [rax + r10*8]
0x0000aa4f      90             nop
0x0000aa50      4c0320         add r12, qword [rax]
0x0000aa53      4883c008       add rax, 8
0x0000aa57      4939c2         cmp r10, rax
0x0000aa5a      75f4           jne 0xaa50
0x0000aa5c      488b86880000.  mov rax, qword [rsi + 0x88]
0x0000aa63      4889d5         mov rbp, rdx
0x0000aa66      894c2404       mov dword [rsp + 4], ecx
0x0000aa6a      4989f5         mov r13, rsi
0x0000aa6d      48897c2418     mov qword [rsp + 0x18], rdi
0x0000aa72      4c21e0         and rax, r12
0x0000aa75      488d1440       lea rdx, [rax + rax*2]
0x0000aa79      488b4640       mov rax, qword [rsi + 0x40]
0x0000aa7d      488d04d0       lea rax, [rax + rdx*8]
0x0000aa81      4c8b18         mov r11, qword [rax]
0x0000aa84      4d85db         test r11, r11
0x0000aa87      7e57           jle 0xaae0
0x0000aa89      488b5810       mov rbx, qword [rax + 0x10]
0x0000aa8d      4531d2         xor r10d, r10d
0x0000aa90      4189c9         mov r9d, ecx
0x0000aa93      eb0c           jmp 0xaaa1
0x0000aa95      0f1f00         nop dword [rax]
0x0000aa98      4983c201       add r10, 1
0x0000aa9c      4d39da         cmp r10, r11
0x0000aa9f      743f           je 0xaae0
0x0000aaa1      4e8b34d3       mov r14, qword [rbx + r10*8]
0x0000aaa5      4d3926         cmp qword [r14], r12
0x0000aaa8      75ee           jne 0xaa98
0x0000aaaa      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000aaaf      83e00f         and eax, 0xf
0x0000aab2      4439c8         cmp eax, r9d
0x0000aab5      75e1           jne 0xaa98
0x0000aab7      498b7e50       mov rdi, qword [r14 + 0x50]
0x0000aabb      4885ff         test rdi, rdi
0x0000aabe      74d8           je 0xaa98
0x0000aac0      4889ee         mov rsi, rbp
0x0000aac3      e8a8ebffff     call sym.re_node_set_compare.part.2
0x0000aac8      84c0           test al, al
0x0000aaca      74cc           je 0xaa98
0x0000aacc      4883c428       add rsp, 0x28
0x0000aad0      4c89f0         mov rax, r14
0x0000aad3      5b             pop rbx
0x0000aad4      5d             pop rbp
0x0000aad5      415c           pop r12
0x0000aad7      415d           pop r13
0x0000aad9      415e           pop r14
0x0000aadb      415f           pop r15
0x0000aadd      c3             ret
0x0000aade      6690           nop
0x0000aae0      be01000000     mov esi, 1
0x0000aae5      bf70000000     mov edi, 0x70                           ; 'p'
0x0000aaea      e84172ffff     call sym.imp.calloc
0x0000aaef      4885c0         test rax, rax
0x0000aaf2      4989c6         mov r14, rax
0x0000aaf5      0f843b010000   je 0xac36
0x0000aafb      488d4008       lea rax, [rax + 8]
0x0000aaff      4889ee         mov rsi, rbp
0x0000ab02      4889c7         mov rdi, rax
0x0000ab05      4889c3         mov rbx, rax
0x0000ab08      e823fdffff     call sym.re_node_set_init_copy
0x0000ab0d      85c0           test eax, eax
0x0000ab0f      0f85b8010000   jne 0xaccd
0x0000ab15      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000ab1a      0fb6542404     movzx edx, byte [rsp + 4]
0x0000ab1f      49895e50       mov qword [r14 + 0x50], rbx
0x0000ab23      83e20f         and edx, 0xf
0x0000ab26      83e0f0         and eax, 0xfffffff0                     ; 4294967280
0x0000ab29      09d0           or eax, edx
0x0000ab2b      48837d0800     cmp qword [rbp + 8], 0
0x0000ab30      41884668       mov byte [r14 + 0x68], al
0x0000ab34      0f8ede000000   jle 0xac18
0x0000ab3a      498d4e18       lea rcx, [r14 + 0x18]
0x0000ab3e      4531ff         xor r15d, r15d
0x0000ab41      4c89642410     mov qword [rsp + 0x10], r12
0x0000ab46      4531d2         xor r10d, r10d
0x0000ab49      4d89ec         mov r12, r13
0x0000ab4c      4d89fd         mov r13, r15
0x0000ab4f      48894c2408     mov qword [rsp + 8], rcx
0x0000ab54      4989df         mov r15, rbx
0x0000ab57      660f1f840000.  nop word [rax + rax]
0x0000ab60      488b4510       mov rax, qword [rbp + 0x10]
0x0000ab64      4a8b04e8       mov rax, qword [rax + r13*8]
0x0000ab68      48c1e004       shl rax, 4
0x0000ab6c      49030424       add rax, qword [r12]
0x0000ab70      0fb67008       movzx esi, byte [rax + 8]
0x0000ab74      8b5808         mov ebx, dword [rax + 8]
0x0000ab77      c1eb08         shr ebx, 8
0x0000ab7a      6681e3ff03     and bx, 0x3ff
0x0000ab7f      83fe01         cmp esi, 1
0x0000ab82      0fb7fb         movzx edi, bx
0x0000ab85      7504           jne 0xab8b
0x0000ab87      85ff           test edi, edi
0x0000ab89      7477           je 0xac02
0x0000ab8b      410fb65668     movzx edx, byte [r14 + 0x68]
0x0000ab90      0fb6400a       movzx eax, byte [rax + 0xa]
0x0000ab94      4189d1         mov r9d, edx
0x0000ab97      c0e804         shr al, 4
0x0000ab9a      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000ab9d      41c0e905       shr r9b, 5
0x0000aba1      4409c8         or eax, r9d
0x0000aba4      83e001         and eax, 1
0x0000aba7      c1e005         shl eax, 5
0x0000abaa      09d0           or eax, edx
0x0000abac      83fe02         cmp esi, 2
0x0000abaf      41884668       mov byte [r14 + 0x68], al
0x0000abb3      0f84c7000000   je 0xac80
0x0000abb9      83fe04         cmp esi, 4
0x0000abbc      7507           jne 0xabc5
0x0000abbe      83c840         or eax, 0x40                            ; segment.PHDR
0x0000abc1      41884668       mov byte [r14 + 0x68], al
0x0000abc5      85ff           test edi, edi
0x0000abc7      7439           je 0xac02
0x0000abc9      4d3b7e50       cmp r15, qword [r14 + 0x50]
0x0000abcd      0f84bd000000   je 0xac90
0x0000abd3      f6c301         test bl, 1
0x0000abd6      7478           je 0xac50
0x0000abd8      f644240401     test byte [rsp + 4], 1
0x0000abdd      7409           je 0xabe8
0x0000abdf      f6c302         test bl, 2
0x0000abe2      7478           je 0xac5c
0x0000abe4      0f1f4000       nop dword [rax]
0x0000abe8      4c89ea         mov rdx, r13
0x0000abeb      4c29d2         sub rdx, r10
0x0000abee      780e           js 0xabfe
0x0000abf0      488b742408     mov rsi, qword [rsp + 8]
0x0000abf5      498d7e10       lea rdi, [r14 + 0x10]
0x0000abf9      e852ecffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000abfe      4983c201       add r10, 1
0x0000ac02      4983c501       add r13, 1
0x0000ac06      4c3b6d08       cmp r13, qword [rbp + 8]
0x0000ac0a      0f8c50ffffff   jl 0xab60
0x0000ac10      4d89e5         mov r13, r12
0x0000ac13      4c8b642410     mov r12, qword [rsp + 0x10]
0x0000ac18      4c89e2         mov rdx, r12
0x0000ac1b      4c89f6         mov rsi, r14
0x0000ac1e      4c89ef         mov rdi, r13
0x0000ac21      e89ad6ffff     call sym.register_state
0x0000ac26      85c0           test eax, eax
0x0000ac28      0f849efeffff   je 0xaacc
0x0000ac2e      4c89f7         mov rdi, r14
0x0000ac31      e82ae7ffff     call sym.free_state
0x0000ac36      488b442418     mov rax, qword [rsp + 0x18]
0x0000ac3b      4531f6         xor r14d, r14d
0x0000ac3e      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000ac44      e983feffff     jmp 0xaacc
0x0000ac49      0f1f80000000.  nop dword [rax]
0x0000ac50      f6c302         test bl, 2
0x0000ac53      7407           je 0xac5c
0x0000ac55      f644240401     test byte [rsp + 4], 1
0x0000ac5a      758c           jne 0xabe8
0x0000ac5c      f6c310         test bl, 0x10
0x0000ac5f      7407           je 0xac68
0x0000ac61      f644240402     test byte [rsp + 4], 2
0x0000ac66      7480           je 0xabe8
0x0000ac68      83e340         and ebx, 0x40                           ; segment.PHDR
0x0000ac6b      7495           je 0xac02
0x0000ac6d      f644240404     test byte [rsp + 4], 4
0x0000ac72      758e           jne 0xac02
0x0000ac74      e96fffffff     jmp 0xabe8
0x0000ac79      0f1f80000000.  nop dword [rax]
0x0000ac80      83c810         or eax, 0x10
0x0000ac83      41884668       mov byte [r14 + 0x68], al
0x0000ac87      e939ffffff     jmp 0xabc5
0x0000ac8c      0f1f4000       nop dword [rax]
0x0000ac90      bf18000000     mov edi, 0x18
0x0000ac95      e80671ffff     call sym.imp.malloc
0x0000ac9a      4885c0         test rax, rax
0x0000ac9d      49894650       mov qword [r14 + 0x50], rax
0x0000aca1      748b           je 0xac2e
0x0000aca3      4889ee         mov rsi, rbp
0x0000aca6      4889c7         mov rdi, rax
0x0000aca9      e882fbffff     call sym.re_node_set_init_copy
0x0000acae      85c0           test eax, eax
0x0000acb0      7584           jne 0xac36
0x0000acb2      41804e6880     or byte [r14 + 0x68], 0x80              ; [0x80:1]=56
0x0000acb7      4531d2         xor r10d, r10d
0x0000acba      e914ffffff     jmp 0xabd3
0x0000acbf      c70700000000   mov dword [rdi], 0
0x0000acc5      4531f6         xor r14d, r14d
0x0000acc8      e9fffdffff     jmp 0xaacc
0x0000accd      4c89f7         mov rdi, r14
0x0000acd0      e82b6effff     call sym.imp.free
0x0000acd5      e95cffffff     jmp 0xac36
0x0000acda      660f1f440000   nop word [rax + rax]
;-- re_acquire_state:
0x0000ace0      4157           push r15
0x0000ace2      4156           push r14
0x0000ace4      4155           push r13
0x0000ace6      4154           push r12
0x0000ace8      55             push rbp
0x0000ace9      53             push rbx
0x0000acea      4883ec08       sub rsp, 8
0x0000acee      488b6a08       mov rbp, qword [rdx + 8]
0x0000acf2      4885ed         test rbp, rbp
0x0000acf5      0f84d5010000   je 0xaed0
0x0000acfb      4885ed         test rbp, rbp
0x0000acfe      7e1c           jle 0xad1c
0x0000ad00      488b4210       mov rax, qword [rdx + 0x10]
0x0000ad04      488d0ce8       lea rcx, [rax + rbp*8]
0x0000ad08      0f1f84000000.  nop dword [rax + rax]
0x0000ad10      480328         add rbp, qword [rax]
0x0000ad13      4883c008       add rax, 8
0x0000ad17      4839c1         cmp rcx, rax
0x0000ad1a      75f4           jne 0xad10
0x0000ad1c      488b86880000.  mov rax, qword [rsi + 0x88]
0x0000ad23      4989d6         mov r14, rdx
0x0000ad26      4989f4         mov r12, rsi
0x0000ad29      4989fd         mov r13, rdi
0x0000ad2c      4821e8         and rax, rbp
0x0000ad2f      488d1440       lea rdx, [rax + rax*2]
0x0000ad33      488b4640       mov rax, qword [rsi + 0x40]
0x0000ad37      488d04d0       lea rax, [rax + rdx*8]
0x0000ad3b      4c8b10         mov r10, qword [rax]
0x0000ad3e      4d85d2         test r10, r10
0x0000ad41      7e33           jle 0xad76
0x0000ad43      4c8b5810       mov r11, qword [rax + 0x10]
0x0000ad47      4531c9         xor r9d, r9d
0x0000ad4a      660f1f440000   nop word [rax + rax]
0x0000ad50      4b8b1ccb       mov rbx, qword [r11 + r9*8]
0x0000ad54      48392b         cmp qword [rbx], rbp
0x0000ad57      7514           jne 0xad6d
0x0000ad59      488d7b08       lea rdi, [rbx + 8]
0x0000ad5d      4c89f6         mov rsi, r14
0x0000ad60      e80be9ffff     call sym.re_node_set_compare.part.2
0x0000ad65      84c0           test al, al
0x0000ad67      0f8502010000   jne 0xae6f
0x0000ad6d      4983c101       add r9, 1
0x0000ad71      4d39ca         cmp r10, r9
0x0000ad74      75da           jne 0xad50
0x0000ad76      be01000000     mov esi, 1
0x0000ad7b      bf70000000     mov edi, 0x70                           ; 'p'
0x0000ad80      e8ab6fffff     call sym.imp.calloc
0x0000ad85      4885c0         test rax, rax
0x0000ad88      4889c3         mov rbx, rax
0x0000ad8b      0f8427010000   je 0xaeb8
0x0000ad91      4c8d7808       lea r15, [rax + 8]
0x0000ad95      4c89f6         mov rsi, r14
0x0000ad98      4c89ff         mov rdi, r15
0x0000ad9b      e890faffff     call sym.re_node_set_init_copy
0x0000ada0      85c0           test eax, eax
0x0000ada2      0f8508010000   jne 0xaeb0
0x0000ada8      498b4608       mov rax, qword [r14 + 8]
0x0000adac      4c897b50       mov qword [rbx + 0x50], r15
0x0000adb0      4885c0         test rax, rax
0x0000adb3      0f8ea4000000   jle 0xae5d
0x0000adb9      498b7610       mov rsi, qword [r14 + 0x10]
0x0000adbd      4d8b0424       mov r8, qword [r12]
0x0000adc1      4c8d0cc6       lea r9, [rsi + rax*8]
0x0000adc5      eb4d           jmp 0xae14
0x0000adc7      660f1f840000.  nop word [rax + rax]
0x0000add0      0fb64b68       movzx ecx, byte [rbx + 0x68]
0x0000add4      0fb6500a       movzx edx, byte [rax + 0xa]
0x0000add8      4189ca         mov r10d, ecx
0x0000addb      c0ea04         shr dl, 4
0x0000adde      83e1df         and ecx, 0xffffffdf                     ; 4294967263
0x0000ade1      41c0ea05       shr r10b, 5
0x0000ade5      4409d2         or edx, r10d
0x0000ade8      83e201         and edx, 1
0x0000adeb      c1e205         shl edx, 5
0x0000adee      09ca           or edx, ecx
0x0000adf0      83ff02         cmp edi, 2
0x0000adf3      885368         mov byte [rbx + 0x68], dl
0x0000adf6      0f848c000000   je 0xae88
0x0000adfc      83ff04         cmp edi, 4
0x0000adff      0f8593000000   jne 0xae98
0x0000ae05      83ca40         or edx, 0x40                            ; segment.PHDR
0x0000ae08      885368         mov byte [rbx + 0x68], dl
0x0000ae0b      4883c608       add rsi, 8
0x0000ae0f      4939f1         cmp r9, rsi
0x0000ae12      7449           je 0xae5d
0x0000ae14      488b06         mov rax, qword [rsi]
0x0000ae17      48c1e004       shl rax, 4
0x0000ae1b      4c01c0         add rax, r8
0x0000ae1e      0fb67808       movzx edi, byte [rax + 8]
0x0000ae22      83ff01         cmp edi, 1
0x0000ae25      75a9           jne 0xadd0
0x0000ae27      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x0000ae2e      74db           je 0xae0b
0x0000ae30      0fb65368       movzx edx, byte [rbx + 0x68]
0x0000ae34      0fb6400a       movzx eax, byte [rax + 0xa]
0x0000ae38      89d1           mov ecx, edx
0x0000ae3a      c0e804         shr al, 4
0x0000ae3d      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000ae40      c0e905         shr cl, 5
0x0000ae43      09c8           or eax, ecx
0x0000ae45      83e001         and eax, 1
0x0000ae48      c1e005         shl eax, 5
0x0000ae4b      09d0           or eax, edx
0x0000ae4d      884368         mov byte [rbx + 0x68], al
0x0000ae50      4883c608       add rsi, 8
0x0000ae54      804b6880       or byte [rbx + 0x68], 0x80              ; [0x80:1]=56
0x0000ae58      4939f1         cmp r9, rsi
0x0000ae5b      75b7           jne 0xae14
0x0000ae5d      4889ea         mov rdx, rbp
0x0000ae60      4889de         mov rsi, rbx
0x0000ae63      4c89e7         mov rdi, r12
0x0000ae66      e855d4ffff     call sym.register_state
0x0000ae6b      85c0           test eax, eax
0x0000ae6d      7555           jne 0xaec4
0x0000ae6f      4883c408       add rsp, 8
0x0000ae73      4889d8         mov rax, rbx
0x0000ae76      5b             pop rbx
0x0000ae77      5d             pop rbp
0x0000ae78      415c           pop r12
0x0000ae7a      415d           pop r13
0x0000ae7c      415e           pop r14
0x0000ae7e      415f           pop r15
0x0000ae80      c3             ret
0x0000ae81      0f1f80000000.  nop dword [rax]
0x0000ae88      83ca10         or edx, 0x10
0x0000ae8b      885368         mov byte [rbx + 0x68], dl
0x0000ae8e      e978ffffff     jmp 0xae0b
0x0000ae93      0f1f440000     nop dword [rax + rax]
0x0000ae98      83ff0c         cmp edi, 0xc
0x0000ae9b      74b3           je 0xae50
0x0000ae9d      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x0000aea4      0f8461ffffff   je 0xae0b
0x0000aeaa      eba4           jmp 0xae50
0x0000aeac      0f1f4000       nop dword [rax]
0x0000aeb0      4889df         mov rdi, rbx
0x0000aeb3      e8486cffff     call sym.imp.free
0x0000aeb8      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x0000aec0      31db           xor ebx, ebx
0x0000aec2      ebab           jmp 0xae6f
0x0000aec4      4889df         mov rdi, rbx
0x0000aec7      e894e4ffff     call sym.free_state
0x0000aecc      ebea           jmp 0xaeb8
0x0000aece      6690           nop
0x0000aed0      c70700000000   mov dword [rdi], 0
0x0000aed6      31db           xor ebx, ebx
0x0000aed8      eb95           jmp 0xae6f
0x0000aeda      660f1f440000   nop word [rax + rax]
;-- merge_state_array:
0x0000aee0      4157           push r15
0x0000aee2      4156           push r14
0x0000aee4      4155           push r13
0x0000aee6      4154           push r12
0x0000aee8      55             push rbp
0x0000aee9      53             push rbx
0x0000aeea      4883ec48       sub rsp, 0x48
0x0000aeee      64488b042528.  mov rax, qword fs:[0x28]
0x0000aef7      4889442438     mov qword [rsp + 0x38], rax
0x0000aefc      31c0           xor eax, eax
0x0000aefe      4885c9         test rcx, rcx
0x0000af01      0f8e8f000000   jle 0xaf96
0x0000af07      488d44241c     lea rax, [rsp + 0x1c]
0x0000af0c      4989fe         mov r14, rdi
0x0000af0f      4889f3         mov rbx, rsi
0x0000af12      4989d4         mov r12, rdx
0x0000af15      4889cd         mov rbp, rcx
0x0000af18      4531ff         xor r15d, r15d
0x0000af1b      4c8d6c2420     lea r13, [rsp + 0x20]
0x0000af20      4889442408     mov qword [rsp + 8], rax
0x0000af25      eb55           jmp 0xaf7c
0x0000af27      660f1f840000.  nop word [rax + rax]
0x0000af30      4885d2         test rdx, rdx
0x0000af33      743e           je 0xaf73
0x0000af35      4883c208       add rdx, 8
0x0000af39      4883c608       add rsi, 8
0x0000af3d      4c89ef         mov rdi, r13
0x0000af40      e87bf9ffff     call sym.re_node_set_init_union
0x0000af45      85c0           test eax, eax
0x0000af47      8944241c       mov dword [rsp + 0x1c], eax
0x0000af4b      754b           jne 0xaf98
0x0000af4d      488b7c2408     mov rdi, qword [rsp + 8]
0x0000af52      4c89ea         mov rdx, r13
0x0000af55      4c89f6         mov rsi, r14
0x0000af58      e883fdffff     call sym.re_acquire_state
0x0000af5d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000af62      4a8904fb       mov qword [rbx + r15*8], rax
0x0000af66      e8956bffff     call sym.imp.free
0x0000af6b      8b44241c       mov eax, dword [rsp + 0x1c]
0x0000af6f      85c0           test eax, eax
0x0000af71      7525           jne 0xaf98
0x0000af73      4983c701       add r15, 1
0x0000af77      4c39fd         cmp rbp, r15
0x0000af7a      741a           je 0xaf96
0x0000af7c      4a8b34fb       mov rsi, qword [rbx + r15*8]
0x0000af80      4b8b14fc       mov rdx, qword [r12 + r15*8]
0x0000af84      4885f6         test rsi, rsi
0x0000af87      75a7           jne 0xaf30
0x0000af89      4a8914fb       mov qword [rbx + r15*8], rdx
0x0000af8d      4983c701       add r15, 1
0x0000af91      4c39fd         cmp rbp, r15
0x0000af94      75e6           jne 0xaf7c
0x0000af96      31c0           xor eax, eax
0x0000af98      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000af9d      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000afa6      750f           jne 0xafb7
0x0000afa8      4883c448       add rsp, 0x48
0x0000afac      5b             pop rbx
0x0000afad      5d             pop rbp
0x0000afae      415c           pop r12
0x0000afb0      415d           pop r13
0x0000afb2      415e           pop r14
0x0000afb4      415f           pop r15
0x0000afb6      c3             ret
0x0000afb7      e8646cffff     call sym.imp.__stack_chk_fail
0x0000afbc      0f1f4000       nop dword [rax]
;-- expand_bkref_cache:
0x0000afc0      4157           push r15
0x0000afc2      4156           push r14
0x0000afc4      4155           push r13
0x0000afc6      4154           push r12
0x0000afc8      4989d4         mov r12, rdx
0x0000afcb      55             push rbp
0x0000afcc      53             push rbx
0x0000afcd      4889fb         mov rbx, rdi
0x0000afd0      4889f5         mov rbp, rsi
0x0000afd3      31f6           xor esi, esi
0x0000afd5      4883ec78       sub rsp, 0x78
0x0000afd9      488bbfc80000.  mov rdi, qword [rdi + 0xc8]
0x0000afe0      64488b042528.  mov rax, qword fs:[0x28]
0x0000afe9      4889442468     mov qword [rsp + 0x68], rax
0x0000afee      31c0           xor eax, eax
0x0000aff0      48894c2420     mov qword [rsp + 0x20], rcx
0x0000aff5      448944242c     mov dword [rsp + 0x2c], r8d
0x0000affa      4889fa         mov rdx, rdi
0x0000affd      4839d6         cmp rsi, rdx
0x0000b000      7d55           jge 0xb057
0x0000b002      488d0416       lea rax, [rsi + rdx]
0x0000b006      4c8b83d80000.  mov r8, qword [rbx + 0xd8]
0x0000b00d      4889c1         mov rcx, rax
0x0000b010      48c1e93f       shr rcx, 0x3f
0x0000b014      4801c1         add rcx, rax
0x0000b017      48d1f9         sar rcx, 1
0x0000b01a      488d0489       lea rax, [rcx + rcx*4]
0x0000b01e      4d3b64c008     cmp r12, qword [r8 + rax*8 + 8]
0x0000b023      7e2d           jle 0xb052
0x0000b025      e97e000000     jmp 0xb0a8
0x0000b02a      660f1f440000   nop word [rax + rax]
0x0000b030      488d140e       lea rdx, [rsi + rcx]
0x0000b034      4889d0         mov rax, rdx
0x0000b037      48c1e83f       shr rax, 0x3f
0x0000b03b      4801d0         add rax, rdx
0x0000b03e      48d1f8         sar rax, 1
0x0000b041      488d1480       lea rdx, [rax + rax*4]
0x0000b045      4989c1         mov r9, rax
0x0000b048      4d3b64d008     cmp r12, qword [r8 + rdx*8 + 8]
0x0000b04d      7f61           jg 0xb0b0
0x0000b04f      4889c1         mov rcx, rax
0x0000b052      4839ce         cmp rsi, rcx
0x0000b055      7cd9           jl 0xb030
0x0000b057      4839f7         cmp rdi, rsi
0x0000b05a      7e21           jle 0xb07d
0x0000b05c      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x0000b063      488d04b6       lea rax, [rsi + rsi*4]
0x0000b067      48c1e003       shl rax, 3
0x0000b06b      4c39640108     cmp qword [rcx + rax + 8], r12
0x0000b070      4889442430     mov qword [rsp + 0x30], rax
0x0000b075      7506           jne 0xb07d
0x0000b077      4883feff       cmp rsi, 0xffffffffffffffff
0x0000b07b      7543           jne 0xb0c0
0x0000b07d      31c0           xor eax, eax
0x0000b07f      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000b084      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000b08d      0f85c6020000   jne 0xb359
0x0000b093      4883c478       add rsp, 0x78
0x0000b097      5b             pop rbx
0x0000b098      5d             pop rbp
0x0000b099      415c           pop r12
0x0000b09b      415d           pop r13
0x0000b09d      415e           pop r14
0x0000b09f      415f           pop r15
0x0000b0a1      c3             ret
0x0000b0a2      660f1f440000   nop word [rax + rax]
0x0000b0a8      4989c9         mov r9, rcx
0x0000b0ab      4889d1         mov rcx, rdx
0x0000b0ae      6690           nop
0x0000b0b0      498d7101       lea rsi, [r9 + 1]
0x0000b0b4      4889ca         mov rdx, rcx
0x0000b0b7      e941ffffff     jmp 0xaffd
0x0000b0bc      0f1f4000       nop dword [rax]
0x0000b0c0      488d4510       lea rax, [rbp + 0x10]
0x0000b0c4      4c8bab980000.  mov r13, qword [rbx + 0x98]
0x0000b0cb      48890424       mov qword [rsp], rax
0x0000b0cf      488d44244c     lea rax, [rsp + 0x4c]
0x0000b0d4      4889442438     mov qword [rsp + 0x38], rax
0x0000b0d9      488d442450     lea rax, [rsp + 0x50]
0x0000b0de      4889442410     mov qword [rsp + 0x10], rax
0x0000b0e3      488b442430     mov rax, qword [rsp + 0x30]
0x0000b0e8      4c8d3c01       lea r15, [rcx + rax]
0x0000b0ec      e9d7000000     jmp 0xb1c8
0x0000b0f1      0f1f80000000.  nop dword [rax]
0x0000b0f8      498b4518       mov rax, qword [r13 + 0x18]
0x0000b0fc      4a8b0cd0       mov rcx, qword [rax + r10*8]
0x0000b100      4c8b93b80000.  mov r10, qword [rbx + 0xb8]
0x0000b107      4a8d04f50000.  lea rax, [r14*8]
0x0000b10f      4889442418     mov qword [rsp + 0x18], rax
0x0000b114      4901c2         add r10, rax
0x0000b117      48894c2408     mov qword [rsp + 8], rcx
0x0000b11c      4d8b0a         mov r9, qword [r10]
0x0000b11f      4d85c9         test r9, r9
0x0000b122      0f8488010000   je 0xb2b0
0x0000b128      498b7910       mov rdi, qword [r9 + 0x10]
0x0000b12c      498d7118       lea rsi, [r9 + 0x18]
0x0000b130      4889ca         mov rdx, rcx
0x0000b133      e898e5ffff     call sym.re_node_set_contains.isra.3
0x0000b138      4885c0         test rax, rax
0x0000b13b      757c           jne 0xb1b9
0x0000b13d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000b142      498d7108       lea rsi, [r9 + 8]
0x0000b146      e8e5f6ffff     call sym.re_node_set_init_copy
0x0000b14b      488b742408     mov rsi, qword [rsp + 8]
0x0000b150      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000b155      8944244c       mov dword [rsp + 0x4c], eax
0x0000b159      e832d0ffff     call sym.re_node_set_insert
0x0000b15e      8b54244c       mov edx, dword [rsp + 0x4c]
0x0000b162      85d2           test edx, edx
0x0000b164      0f859c010000   jne 0xb306
0x0000b16a      3c01           cmp al, 1
0x0000b16c      0f8594010000   jne 0xb306
0x0000b172      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000b177      4c0393b80000.  add r10, qword [rbx + 0xb8]
0x0000b17e      488b542410     mov rdx, qword [rsp + 0x10]
0x0000b183      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000b188      4c89ee         mov rsi, r13
0x0000b18b      4c89542408     mov qword [rsp + 8], r10
0x0000b190      e84bfbffff     call sym.re_acquire_state
0x0000b195      4c8b542408     mov r10, qword [rsp + 8]
0x0000b19a      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000b19f      498902         mov qword [r10], rax
0x0000b1a2      e85969ffff     call sym.imp.free
0x0000b1a7      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000b1ae      4a833cf000     cmp qword [rax + r14*8], 0
0x0000b1b3      0f843c010000   je 0xb2f5
0x0000b1b9      4983c728       add r15, 0x28
0x0000b1bd      41807ff800     cmp byte [r15 - 8], 0
0x0000b1c2      0f84b5feffff   je 0xb07d
0x0000b1c8      4d8b17         mov r10, qword [r15]
0x0000b1cb      4c8b4d08       mov r9, qword [rbp + 8]
0x0000b1cf      488b3424       mov rsi, qword [rsp]
0x0000b1d3      4c89d2         mov rdx, r10
0x0000b1d6      4c89cf         mov rdi, r9
0x0000b1d9      e8f2e4ffff     call sym.re_node_set_contains.isra.3
0x0000b1de      4885c0         test rax, rax
0x0000b1e1      74d6           je 0xb1b9
0x0000b1e3      4d8b4718       mov r8, qword [r15 + 0x18]
0x0000b1e7      4d01e0         add r8, r12
0x0000b1ea      4d89c6         mov r14, r8
0x0000b1ed      4d2b7710       sub r14, qword [r15 + 0x10]
0x0000b1f1      4d39f4         cmp r12, r14
0x0000b1f4      0f85fefeffff   jne 0xb0f8
0x0000b1fa      498b4d28       mov rcx, qword [r13 + 0x28]
0x0000b1fe      4b8d0452       lea rax, [r10 + r10*2]
0x0000b202      488b3424       mov rsi, qword [rsp]
0x0000b206      4c89cf         mov rdi, r9
0x0000b209      488d04c1       lea rax, [rcx + rax*8]
0x0000b20d      488b4010       mov rax, qword [rax + 0x10]
0x0000b211      4c8b30         mov r14, qword [rax]
0x0000b214      4c89f2         mov rdx, r14
0x0000b217      e8b4e4ffff     call sym.re_node_set_contains.isra.3
0x0000b21c      4885c0         test rax, rax
0x0000b21f      7598           jne 0xb1b9
0x0000b221      bf08000000     mov edi, 8
0x0000b226      48c744245001.  mov qword [rsp + 0x50], 1
0x0000b22f      48c744245801.  mov qword [rsp + 0x58], 1
0x0000b238      e8636bffff     call sym.imp.malloc
0x0000b23d      4885c0         test rax, rax
0x0000b240      4889442460     mov qword [rsp + 0x60], rax
0x0000b245      0f84f2000000   je 0xb33d
0x0000b24b      4c8930         mov qword [rax], r14
0x0000b24e      31c0           xor eax, eax
0x0000b250      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000b255      488b542420     mov rdx, qword [rsp + 0x20]
0x0000b25a      4c89ef         mov rdi, r13
0x0000b25d      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000b261      8944244c       mov dword [rsp + 0x4c], eax
0x0000b265      4c89fe         mov rsi, r15
0x0000b268      e813eeffff     call sym.check_arrival_expand_ecl
0x0000b26d      4c89fe         mov rsi, r15
0x0000b270      4889ef         mov rdi, rbp
0x0000b273      4189c6         mov r14d, eax
0x0000b276      e875e9ffff     call sym.re_node_set_merge
0x0000b27b      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000b280      4189c7         mov r15d, eax
0x0000b283      e87868ffff     call sym.imp.free
0x0000b288      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000b28c      4489f2         mov edx, r14d
0x0000b28f      4409fa         or edx, r15d
0x0000b292      09c2           or edx, eax
0x0000b294      0f858c000000   jne 0xb326
0x0000b29a      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x0000b2a1      e93dfeffff     jmp 0xb0e3
0x0000b2a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b2b0      bf08000000     mov edi, 8
0x0000b2b5      4c89542418     mov qword [rsp + 0x18], r10
0x0000b2ba      48c744245001.  mov qword [rsp + 0x50], 1
0x0000b2c3      48c744245801.  mov qword [rsp + 0x58], 1
0x0000b2cc      e8cf6affff     call sym.imp.malloc
0x0000b2d1      4885c0         test rax, rax
0x0000b2d4      4889442460     mov qword [rsp + 0x60], rax
0x0000b2d9      7441           je 0xb31c
0x0000b2db      488b7c2408     mov rdi, qword [rsp + 8]
0x0000b2e0      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0000b2e8      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000b2ed      488938         mov qword [rax], rdi
0x0000b2f0      e989feffff     jmp 0xb17e
0x0000b2f5      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000b2f9      85c0           test eax, eax
0x0000b2fb      0f84b8feffff   je 0xb1b9
0x0000b301      e979fdffff     jmp 0xb07f
0x0000b306      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000b30b      e8f067ffff     call sym.imp.free
0x0000b310      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000b314      85c0           test eax, eax
0x0000b316      0f8563fdffff   jne 0xb07f
0x0000b31c      b80c000000     mov eax, 0xc
0x0000b321      e959fdffff     jmp 0xb07f
0x0000b326      85c0           test eax, eax
0x0000b328      0f8551fdffff   jne 0xb07f
0x0000b32e      4585f6         test r14d, r14d
0x0000b331      4489f0         mov eax, r14d
0x0000b334      410f44c7       cmove eax, r15d
0x0000b338      e942fdffff     jmp 0xb07f
0x0000b33d      48c744245800.  mov qword [rsp + 0x58], 0
0x0000b346      48c744245000.  mov qword [rsp + 0x50], 0
0x0000b34f      b80c000000     mov eax, 0xc
0x0000b354      e9f7feffff     jmp 0xb250
0x0000b359      e8c268ffff     call sym.imp.__stack_chk_fail
0x0000b35e      6690           nop
;-- check_subexp_matching_top.isra.18:
0x0000b360      4157           push r15
0x0000b362      4156           push r14
0x0000b364      4155           push r13
0x0000b366      4154           push r12
0x0000b368      55             push rbp
0x0000b369      53             push rbx
0x0000b36a      4883ec28       sub rsp, 0x28
0x0000b36e      48833e00       cmp qword [rsi], 0
0x0000b372      4c8baf980000.  mov r13, qword [rdi + 0x98]
0x0000b379      0f8ec1000000   jle 0xb440
0x0000b37f      4989d6         mov r14, rdx
0x0000b382      4989f4         mov r12, rsi
0x0000b385      4989ff         mov r15, rdi
0x0000b388      31db           xor ebx, ebx
0x0000b38a      eb12           jmp 0xb39e
0x0000b38c      0f1f4000       nop dword [rax]
0x0000b390      4883c301       add rbx, 1
0x0000b394      493b1c24       cmp rbx, qword [r12]
0x0000b398      0f8da2000000   jge 0xb440
0x0000b39e      498b06         mov rax, qword [r14]
0x0000b3a1      488b2cd8       mov rbp, qword [rax + rbx*8]
0x0000b3a5      4889e8         mov rax, rbp
0x0000b3a8      48c1e004       shl rax, 4
0x0000b3ac      49034500       add rax, qword [r13]
0x0000b3b0      80780808       cmp byte [rax + 8], 8
0x0000b3b4      75da           jne 0xb390
0x0000b3b6      488b00         mov rax, qword [rax]
0x0000b3b9      4883f83f       cmp rax, 0x3f
0x0000b3bd      7fd1           jg 0xb390
0x0000b3bf      498bb5a00000.  mov rsi, qword [r13 + 0xa0]
0x0000b3c6      480fa3c6       bt rsi, rax
0x0000b3ca      73c4           jae 0xb390
0x0000b3cc      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x0000b3d3      4d3b87f00000.  cmp r8, qword [r15 + 0xf0]
0x0000b3da      4d8b8ff80000.  mov r9, qword [r15 + 0xf8]
0x0000b3e1      7475           je 0xb458
0x0000b3e3      be30000000     mov esi, 0x30                           ; '0'
0x0000b3e8      bf01000000     mov edi, 1
0x0000b3ed      4c894c2410     mov qword [rsp + 0x10], r9
0x0000b3f2      4c89442408     mov qword [rsp + 8], r8
0x0000b3f7      48894c2418     mov qword [rsp + 0x18], rcx
0x0000b3fc      e82f69ffff     call sym.imp.calloc
0x0000b401      4c8b442408     mov r8, qword [rsp + 8]
0x0000b406      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000b40b      4885c0         test rax, rax
0x0000b40e      4b8904c1       mov qword [r9 + r8*8], rax
0x0000b412      743d           je 0xb451
0x0000b414      4983c001       add r8, 1
0x0000b418      4883c301       add rbx, 1
0x0000b41c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000b421      4d8987e80000.  mov qword [r15 + 0xe8], r8
0x0000b428      493b1c24       cmp rbx, qword [r12]
0x0000b42c      48896808       mov qword [rax + 8], rbp
0x0000b430      488908         mov qword [rax], rcx
0x0000b433      0f8c65ffffff   jl 0xb39e
0x0000b439      0f1f80000000.  nop dword [rax]
0x0000b440      31c0           xor eax, eax
0x0000b442      4883c428       add rsp, 0x28
0x0000b446      5b             pop rbx
0x0000b447      5d             pop rbp
0x0000b448      415c           pop r12
0x0000b44a      415d           pop r13
0x0000b44c      415e           pop r14
0x0000b44e      415f           pop r15
0x0000b450      c3             ret
0x0000b451      b80c000000     mov eax, 0xc
0x0000b456      ebea           jmp 0xb442
0x0000b458      4b8d0400       lea rax, [r8 + r8]
0x0000b45c      4c89c6         mov rsi, r8
0x0000b45f      4c89cf         mov rdi, r9
0x0000b462      48c1e604       shl rsi, 4
0x0000b466      48894c2408     mov qword [rsp + 8], rcx
0x0000b46b      4889442410     mov qword [rsp + 0x10], rax
0x0000b470      e88b69ffff     call sym.imp.realloc
0x0000b475      4885c0         test rax, rax
0x0000b478      4989c1         mov r9, rax
0x0000b47b      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b480      74cf           je 0xb451
0x0000b482      498987f80000.  mov qword [r15 + 0xf8], rax
0x0000b489      488b442410     mov rax, qword [rsp + 0x10]
0x0000b48e      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x0000b495      498987f00000.  mov qword [r15 + 0xf0], rax
0x0000b49c      e942ffffff     jmp 0xb3e3
0x0000b4a1      0f1f440000     nop dword [rax + rax]
0x0000b4a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_context_at:
0x0000b4b0      55             push rbp
0x0000b4b1      53             push rbx
0x0000b4b2      4889fd         mov rbp, rdi
0x0000b4b5      4883ec08       sub rsp, 8
0x0000b4b9      4885f6         test rsi, rsi
0x0000b4bc      7852           js 0xb510
0x0000b4be      48397758       cmp qword [rdi + 0x58], rsi
0x0000b4c2      0f84a0000000   je 0xb568
0x0000b4c8      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0000b4cf      7e4f           jle 0xb520
0x0000b4d1      488b4710       mov rax, qword [rdi + 0x10]
0x0000b4d5      eb13           jmp 0xb4ea
0x0000b4d7      660f1f840000.  nop word [rax + rax]
0x0000b4e0      4883ee01       sub rsi, 1
0x0000b4e4      4883feff       cmp rsi, 0xffffffffffffffff
0x0000b4e8      7426           je 0xb510
0x0000b4ea      8b1cb0         mov ebx, dword [rax + rsi*4]
0x0000b4ed      83fbff         cmp ebx, 0xffffffff
0x0000b4f0      74ee           je 0xb4e0
0x0000b4f2      80bd8e000000.  cmp byte [rbp + 0x8e], 0
0x0000b4f9      757d           jne 0xb578
0x0000b4fb      31c0           xor eax, eax
0x0000b4fd      83fb0a         cmp ebx, 0xa
0x0000b500      744a           je 0xb54c
0x0000b502      4883c408       add rsp, 8
0x0000b506      5b             pop rbx
0x0000b507      5d             pop rbp
0x0000b508      c3             ret
0x0000b509      0f1f80000000.  nop dword [rax]
0x0000b510      8b4570         mov eax, dword [rbp + 0x70]
0x0000b513      4883c408       add rsp, 8
0x0000b517      5b             pop rbx
0x0000b518      5d             pop rbp
0x0000b519      c3             ret
0x0000b51a      660f1f440000   nop word [rax + rax]
0x0000b520      488b4708       mov rax, qword [rdi + 8]
0x0000b524      488b8f800000.  mov rcx, qword [rdi + 0x80]
0x0000b52b      0fb60430       movzx eax, byte [rax + rsi]
0x0000b52f      4889c2         mov rdx, rax
0x0000b532      48c1f806       sar rax, 6
0x0000b536      488b0cc1       mov rcx, qword [rcx + rax*8]
0x0000b53a      b801000000     mov eax, 1
0x0000b53f      480fa3d1       bt rcx, rdx
0x0000b543      72bd           jb 0xb502
0x0000b545      31c0           xor eax, eax
0x0000b547      80fa0a         cmp dl, 0xa
0x0000b54a      75b6           jne 0xb502
0x0000b54c      31c0           xor eax, eax
0x0000b54e      80bd8d000000.  cmp byte [rbp + 0x8d], 0
0x0000b555      0f95c0         setne al
0x0000b558      4883c408       add rsp, 8
0x0000b55c      01c0           add eax, eax
0x0000b55e      5b             pop rbx
0x0000b55f      5d             pop rbp
0x0000b560      c3             ret
0x0000b561      0f1f80000000.  nop dword [rax]
0x0000b568      83e202         and edx, 2
0x0000b56b      83fa01         cmp edx, 1
0x0000b56e      19c0           sbb eax, eax
0x0000b570      83e002         and eax, 2
0x0000b573      83c008         add eax, 8
0x0000b576      eb8a           jmp 0xb502
0x0000b578      89df           mov edi, ebx
0x0000b57a      e81168ffff     call sym.imp.iswalnum
0x0000b57f      85c0           test eax, eax
0x0000b581      7509           jne 0xb58c
0x0000b583      83fb5f         cmp ebx, 0x5f
0x0000b586      0f856fffffff   jne 0xb4fb
0x0000b58c      b801000000     mov eax, 1
0x0000b591      e96cffffff     jmp 0xb502
0x0000b596      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_node_accept:
0x0000b5a0      488b4708       mov rax, qword [rdi + 8]
0x0000b5a4      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000b5a8      0fb64608       movzx eax, byte [rsi + 8]
0x0000b5ac      3c03           cmp al, 3
0x0000b5ae      0f84b4000000   je 0xb668
0x0000b5b4      0f8696000000   jbe 0xb650
0x0000b5ba      3c05           cmp al, 5
0x0000b5bc      7412           je 0xb5d0
0x0000b5be      3c07           cmp al, 7
0x0000b5c0      0f859a000000   jne 0xb660
0x0000b5c6      31c0           xor eax, eax
0x0000b5c8      84c9           test cl, cl
0x0000b5ca      0f888a000000   js 0xb65a
0x0000b5d0      80f90a         cmp cl, 0xa
0x0000b5d3      0f84bf000000   je 0xb698
0x0000b5d9      84c9           test cl, cl
0x0000b5db      7513           jne 0xb5f0
0x0000b5dd      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000b5e4      31c0           xor eax, eax
0x0000b5e6      f681d8000000.  test byte [rcx + 0xd8], 0x80
0x0000b5ed      756b           jne 0xb65a
0x0000b5ef      90             nop
0x0000b5f0      53             push rbx
0x0000b5f1      8b5e08         mov ebx, dword [rsi + 8]
0x0000b5f4      b801000000     mov eax, 1
0x0000b5f9      f7c300ff0300   test ebx, 0x3ff00
0x0000b5ff      744b           je 0xb64c
0x0000b601      4889d6         mov rsi, rdx
0x0000b604      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x0000b60a      c1eb08         shr ebx, 8
0x0000b60d      e89efeffff     call sym.re_string_context_at
0x0000b612      89d9           mov ecx, ebx
0x0000b614      89c2           mov edx, eax
0x0000b616      6681e1ff03     and cx, 0x3ff
0x0000b61b      f6c304         test bl, 4
0x0000b61e      7468           je 0xb688
0x0000b620      31c0           xor eax, eax
0x0000b622      f6c201         test dl, 1
0x0000b625      7425           je 0xb64c
0x0000b627      83e308         and ebx, 8
0x0000b62a      7520           jne 0xb64c
0x0000b62c      f6c120         test cl, 0x20                           ; "@"
0x0000b62f      7407           je 0xb638
0x0000b631      31c0           xor eax, eax
0x0000b633      f6c202         test dl, 2
0x0000b636      7414           je 0xb64c
0x0000b638      c1ea03         shr edx, 3
0x0000b63b      b801000000     mov eax, 1
0x0000b640      83e201         and edx, 1
0x0000b643      81e180000000   and ecx, 0x80
0x0000b649      0f45c2         cmovne eax, edx
0x0000b64c      5b             pop rbx
0x0000b64d      c3             ret
0x0000b64e      6690           nop
0x0000b650      3c01           cmp al, 1
0x0000b652      750c           jne 0xb660
0x0000b654      31c0           xor eax, eax
0x0000b656      380e           cmp byte [rsi], cl
0x0000b658      7496           je 0xb5f0
0x0000b65a      f3c3           ret
0x0000b65c      0f1f4000       nop dword [rax]
0x0000b660      31c0           xor eax, eax
0x0000b662      c3             ret
0x0000b663      0f1f440000     nop dword [rax + rax]
0x0000b668      4c8b06         mov r8, qword [rsi]
0x0000b66b      0fb6c1         movzx eax, cl
0x0000b66e      48c1f806       sar rax, 6
0x0000b672      4d8b04c0       mov r8, qword [r8 + rax*8]
0x0000b676      31c0           xor eax, eax
0x0000b678      490fa3c8       bt r8, rcx
0x0000b67c      0f826effffff   jb 0xb5f0
0x0000b682      f3c3           ret
0x0000b684      0f1f4000       nop dword [rax]
0x0000b688      83e308         and ebx, 8
0x0000b68b      749f           je 0xb62c
0x0000b68d      a801           test al, 1
0x0000b68f      749b           je 0xb62c
0x0000b691      31c0           xor eax, eax
0x0000b693      5b             pop rbx
0x0000b694      c3             ret
0x0000b695      0f1f00         nop dword [rax]
0x0000b698      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000b69f      31c0           xor eax, eax
0x0000b6a1      f681d8000000.  test byte [rcx + 0xd8], 0x40
0x0000b6a8      0f8542ffffff   jne 0xb5f0
0x0000b6ae      f3c3           ret
;-- check_halt_state_context.isra.20:
0x0000b6b0      4154           push r12
0x0000b6b2      4989d4         mov r12, rdx
0x0000b6b5      55             push rbp
0x0000b6b6      53             push rbx
0x0000b6b7      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x0000b6bd      4889f3         mov rbx, rsi
0x0000b6c0      4889ce         mov rsi, rcx
0x0000b6c3      4889fd         mov rbp, rdi
0x0000b6c6      e8e5fdffff     call sym.re_string_context_at
0x0000b6cb      4885db         test rbx, rbx
0x0000b6ce      0f8ea4000000   jle 0xb778
0x0000b6d4      488b95980000.  mov rdx, qword [rbp + 0x98]
0x0000b6db      4189c3         mov r11d, eax
0x0000b6de      89c5           mov ebp, eax
0x0000b6e0      83e001         and eax, 1
0x0000b6e3      4d8b0c24       mov r9, qword [r12]
0x0000b6e7      31f6           xor esi, esi
0x0000b6e9      83e508         and ebp, 8
0x0000b6ec      4183e302       and r11d, 2
0x0000b6f0      4189c2         mov r10d, eax
0x0000b6f3      4c8b02         mov r8, qword [rdx]
0x0000b6f6      eb11           jmp 0xb709
0x0000b6f8      0f1f84000000.  nop dword [rax + rax]
0x0000b700      4883c601       add rsi, 1
0x0000b704      4839de         cmp rsi, rbx
0x0000b707      746f           je 0xb778
0x0000b709      498b04f1       mov rax, qword [r9 + rsi*8]
0x0000b70d      4889c2         mov rdx, rax
0x0000b710      48c1e204       shl rdx, 4
0x0000b714      4c01c2         add rdx, r8
0x0000b717      8b4a08         mov ecx, dword [rdx + 8]
0x0000b71a      c1e908         shr ecx, 8
0x0000b71d      89cf           mov edi, ecx
0x0000b71f      6681e7ff03     and di, 0x3ff
0x0000b724      807a0802       cmp byte [rdx + 8], 2
0x0000b728      75d6           jne 0xb700
0x0000b72a      6685ff         test di, di
0x0000b72d      7426           je 0xb755
0x0000b72f      f6c104         test cl, 4
0x0000b732      742c           je 0xb760
0x0000b734      4585d2         test r10d, r10d
0x0000b737      74c7           je 0xb700
0x0000b739      83e108         and ecx, 8
0x0000b73c      75c2           jne 0xb700
0x0000b73e      40f6c720       test dil, 0x20                          ; "@"
0x0000b742      7405           je 0xb749
0x0000b744      4585db         test r11d, r11d
0x0000b747      74b7           je 0xb700
0x0000b749      81e780000000   and edi, 0x80
0x0000b74f      7404           je 0xb755
0x0000b751      85ed           test ebp, ebp
0x0000b753      74ab           je 0xb700
0x0000b755      5b             pop rbx
0x0000b756      5d             pop rbp
0x0000b757      415c           pop r12
0x0000b759      c3             ret
0x0000b75a      660f1f440000   nop word [rax + rax]
0x0000b760      83e108         and ecx, 8
0x0000b763      74d9           je 0xb73e
0x0000b765      4585d2         test r10d, r10d
0x0000b768      7596           jne 0xb700
0x0000b76a      40f6c720       test dil, 0x20                          ; "@"
0x0000b76e      74d9           je 0xb749
0x0000b770      ebd2           jmp 0xb744
0x0000b772      660f1f440000   nop word [rax + rax]
0x0000b778      5b             pop rbx
0x0000b779      31c0           xor eax, eax
0x0000b77b      5d             pop rbp
0x0000b77c      415c           pop r12
0x0000b77e      c3             ret
0x0000b77f      90             nop
;-- re_string_reconstruct:
0x0000b780      4157           push r15
0x0000b782      4156           push r14
0x0000b784      4989f7         mov r15, rsi
0x0000b787      4155           push r13
0x0000b789      4154           push r12
0x0000b78b      4189d2         mov r10d, edx
0x0000b78e      55             push rbp
0x0000b78f      53             push rbx
0x0000b790      4889f5         mov rbp, rsi
0x0000b793      4889fb         mov rbx, rdi
0x0000b796      4883ec48       sub rsp, 0x48
0x0000b79a      64488b042528.  mov rax, qword fs:[0x28]
0x0000b7a3      4889442438     mov qword [rsp + 0x38], rax
0x0000b7a8      31c0           xor eax, eax
0x0000b7aa      488b4728       mov rax, qword [rdi + 0x28]
0x0000b7ae      4829c5         sub rbp, rax
0x0000b7b1      4839f0         cmp rax, rsi
0x0000b7b4      7e60           jle 0xb816
0x0000b7b6      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0000b7bd      0f8f2d010000   jg 0xb8f0
0x0000b7c3      488b4350       mov rax, qword [rbx + 0x50]
0x0000b7c7      48c743300000.  mov qword [rbx + 0x30], 0
0x0000b7cf      4c89fd         mov rbp, r15
0x0000b7d2      48c743280000.  mov qword [rbx + 0x28], 0
0x0000b7da      48c743380000.  mov qword [rbx + 0x38], 0
0x0000b7e2      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000b7e9      48894358       mov qword [rbx + 0x58], rax
0x0000b7ed      488b4360       mov rax, qword [rbx + 0x60]
0x0000b7f1      48894368       mov qword [rbx + 0x68], rax
0x0000b7f5      4489d0         mov eax, r10d
0x0000b7f8      83e001         and eax, 1
0x0000b7fb      83f801         cmp eax, 1
0x0000b7fe      19c0           sbb eax, eax
0x0000b800      83e002         and eax, 2
0x0000b803      83c004         add eax, 4
0x0000b806      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000b80d      894370         mov dword [rbx + 0x70], eax
0x0000b810      0f84ca000000   je 0xb8e0
0x0000b816      4885ed         test rbp, rbp
0x0000b819      7463           je 0xb87e
0x0000b81b      488b4338       mov rax, qword [rbx + 0x38]
0x0000b81f      0fb6938c0000.  movzx edx, byte [rbx + 0x8c]
0x0000b826      4c8b4330       mov r8, qword [rbx + 0x30]
0x0000b82a      4839e8         cmp rax, rbp
0x0000b82d      0f8e1d010000   jle 0xb950
0x0000b833      84d2           test dl, dl
0x0000b835      0f850d020000   jne 0xba48
0x0000b83b      488d75ff       lea rsi, [rbp - 1]
0x0000b83f      4489d2         mov edx, r10d
0x0000b842      4889df         mov rdi, rbx
0x0000b845      4c890424       mov qword [rsp], r8
0x0000b849      e862fcffff     call sym.re_string_context_at
0x0000b84e      4c8b0424       mov r8, qword [rsp]
0x0000b852      894370         mov dword [rbx + 0x70], eax
0x0000b855      4929e8         sub r8, rbp
0x0000b858      83bb90000000.  cmp dword [rbx + 0x90], 1
0x0000b85f      0f8f9b000000   jg 0xb900
0x0000b865      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000b86c      0f859e030000   jne 0xbc10
0x0000b872      48296b38       sub qword [rbx + 0x38], rbp
0x0000b876      4c894330       mov qword [rbx + 0x30], r8
0x0000b87a      48016b08       add qword [rbx + 8], rbp
0x0000b87e      488b4358       mov rax, qword [rbx + 0x58]
0x0000b882      48296b68       sub qword [rbx + 0x68], rbp
0x0000b886      4c897b28       mov qword [rbx + 0x28], r15
0x0000b88a      4829e8         sub rax, rbp
0x0000b88d      83bb90000000.  cmp dword [rbx + 0x90], 1
0x0000b894      48894358       mov qword [rbx + 0x58], rax
0x0000b898      0f8e9a000000   jle 0xb938
0x0000b89e      80bb88000000.  cmp byte [rbx + 0x88], 0
0x0000b8a5      4889df         mov rdi, rbx
0x0000b8a8      747e           je 0xb928
0x0000b8aa      e841cdffff     call sym.build_wcs_upper_buffer
0x0000b8af      85c0           test eax, eax
0x0000b8b1      750a           jne 0xb8bd
0x0000b8b3      48c743480000.  mov qword [rbx + 0x48], 0
0x0000b8bb      31c0           xor eax, eax
0x0000b8bd      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000b8c2      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b8cb      0f8549060000   jne 0xbf1a
0x0000b8d1      4883c448       add rsp, 0x48
0x0000b8d5      5b             pop rbx
0x0000b8d6      5d             pop rbp
0x0000b8d7      415c           pop r12
0x0000b8d9      415d           pop r13
0x0000b8db      415e           pop r14
0x0000b8dd      415f           pop r15
0x0000b8df      c3             ret
0x0000b8e0      488b03         mov rax, qword [rbx]
0x0000b8e3      48894308       mov qword [rbx + 8], rax
0x0000b8e7      e92affffff     jmp 0xb816
0x0000b8ec      0f1f4000       nop dword [rax]
0x0000b8f0      48c747200000.  mov qword [rdi + 0x20], 0
0x0000b8f8      e9c6feffff     jmp 0xb7c3
0x0000b8fd      0f1f00         nop dword [rax]
0x0000b900      488b7b10       mov rdi, qword [rbx + 0x10]
0x0000b904      4a8d14850000.  lea rdx, [r8*4]
0x0000b90c      488d34af       lea rsi, [rdi + rbp*4]
0x0000b910      e83b65ffff     call sym.imp.memmove
0x0000b915      4c8b4330       mov r8, qword [rbx + 0x30]
0x0000b919      4929e8         sub r8, rbp
0x0000b91c      e944ffffff     jmp 0xb865
0x0000b921      0f1f80000000.  nop dword [rax]
0x0000b928      e8f3caffff     call sym.build_wcs_buffer
0x0000b92d      e981ffffff     jmp 0xb8b3
0x0000b932      660f1f440000   nop word [rax + rax]
0x0000b938      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000b93f      0f85ab030000   jne 0xbcf0
0x0000b945      48894330       mov qword [rbx + 0x30], rax
0x0000b949      e965ffffff     jmp 0xb8b3
0x0000b94e      6690           nop
0x0000b950      84d2           test dl, dl
0x0000b952      0f85a5040000   jne 0xbdfd
0x0000b958      486393900000.  movsxd rdx, dword [rbx + 0x90]
0x0000b95f      48c743300000.  mov qword [rbx + 0x30], 0
0x0000b967      4c8b5b28       mov r11, qword [rbx + 0x28]
0x0000b96b      83fa01         cmp edx, 1
0x0000b96e      0f8ee4030000   jle 0xbd58
0x0000b974      80bb89000000.  cmp byte [rbx + 0x89], 0
0x0000b97b      0f85b7020000   jne 0xbc38
0x0000b981      4d8d3403       lea r14, [r11 + rax]
0x0000b985      4d39f7         cmp r15, r14
0x0000b988      0f8e41040000   jle 0xbdcf
0x0000b98e      488d4320       lea rax, [rbx + 0x20]
0x0000b992      4c8d6c2424     lea r13, [rsp + 0x24]
0x0000b997      4889442410     mov qword [rsp + 0x10], rax
0x0000b99c      0f1f4000       nop dword [rax]
0x0000b9a0      4c8b6350       mov r12, qword [rbx + 0x50]
0x0000b9a4      488b33         mov rsi, qword [rbx]
0x0000b9a7      4c89ef         mov rdi, r13
0x0000b9aa      488b4320       mov rax, qword [rbx + 0x20]
0x0000b9ae      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000b9b3      448954240c     mov dword [rsp + 0xc], r10d
0x0000b9b8      4c890424       mov qword [rsp], r8
0x0000b9bc      4d29f4         sub r12, r14
0x0000b9bf      4c01f6         add rsi, r14
0x0000b9c2      4c89e2         mov rdx, r12
0x0000b9c5      4889442418     mov qword [rsp + 0x18], rax
0x0000b9ca      e861c1ffff     call sym.rpl_mbrtowc
0x0000b9cf      488d48ff       lea rcx, [rax - 1]
0x0000b9d3      8b542424       mov edx, dword [rsp + 0x24]
0x0000b9d7      4c8b0424       mov r8, qword [rsp]
0x0000b9db      448b54240c     mov r10d, dword [rsp + 0xc]
0x0000b9e0      4883f9fc       cmp rcx, 0xfffffffffffffffc
0x0000b9e4      0f873b040000   ja 0xbe25
0x0000b9ea      4901c6         add r14, rax
0x0000b9ed      4d39f7         cmp r15, r14
0x0000b9f0      7fae           jg 0xb9a0
0x0000b9f2      4d29fe         sub r14, r15
0x0000b9f5      83faff         cmp edx, 0xffffffff
0x0000b9f8      4d89f4         mov r12, r14
0x0000b9fb      4c897330       mov qword [rbx + 0x30], r14
0x0000b9ff      0f84d4030000   je 0xbdd9
0x0000ba05      80bb8e000000.  cmp byte [rbx + 0x8e], 0
0x0000ba0c      0f8567040000   jne 0xbe79
0x0000ba12      31c0           xor eax, eax
0x0000ba14      83fa0a         cmp edx, 0xa
0x0000ba17      750e           jne 0xba27
0x0000ba19      31c0           xor eax, eax
0x0000ba1b      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x0000ba22      0f95c0         setne al
0x0000ba25      01c0           add eax, eax
0x0000ba27      894370         mov dword [rbx + 0x70], eax
0x0000ba2a      4983fc00       cmp r12, 0
0x0000ba2e      0f8516040000   jne 0xbe4a
0x0000ba34      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000ba3b      4c896338       mov qword [rbx + 0x38], r12
0x0000ba3f      e9b8010000     jmp 0xbbfc
0x0000ba44      0f1f4000       nop dword [rax]
0x0000ba48      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000ba4c      4c89c1         mov rcx, r8
0x0000ba4f      31f6           xor esi, esi
0x0000ba51      eb10           jmp 0xba63
0x0000ba53      0f1f440000     nop dword [rax + rax]
0x0000ba58      7d39           jge 0xba93
0x0000ba5a      488d7001       lea rsi, [rax + 1]
0x0000ba5e      4839ce         cmp rsi, rcx
0x0000ba61      7d25           jge 0xba88
0x0000ba63      488d140e       lea rdx, [rsi + rcx]
0x0000ba67      4889d0         mov rax, rdx
0x0000ba6a      48c1e83f       shr rax, 0x3f
0x0000ba6e      4801d0         add rax, rdx
0x0000ba71      48d1f8         sar rax, 1
0x0000ba74      498b14c6       mov rdx, qword [r14 + rax*8]
0x0000ba78      4989c4         mov r12, rax
0x0000ba7b      4839ea         cmp rdx, rbp
0x0000ba7e      7ed8           jle 0xba58
0x0000ba80      4889c1         mov rcx, rax
0x0000ba83      ebd9           jmp 0xba5e
0x0000ba85      0f1f00         nop dword [rax]
0x0000ba88      4c8d6001       lea r12, [rax + 1]
0x0000ba8c      4839ea         cmp rdx, rbp
0x0000ba8f      4c0f4de0       cmovge r12, rax
0x0000ba93      4d8d6c24ff     lea r13, [r12 - 1]
0x0000ba98      4489d2         mov edx, r10d
0x0000ba9b      4889df         mov rdi, rbx
0x0000ba9e      4c890424       mov qword [rsp], r8
0x0000baa2      4c89ee         mov rsi, r13
0x0000baa5      e806faffff     call sym.re_string_context_at
0x0000baaa      4c39e5         cmp rbp, r12
0x0000baad      894370         mov dword [rbx + 0x70], eax
0x0000bab0      4c8b0424       mov r8, qword [rsp]
0x0000bab4      0f857e000000   jne 0xbb38
0x0000baba      4c39c5         cmp rbp, r8
0x0000babd      7d79           jge 0xbb38
0x0000babf      4b392ce6       cmp qword [r14 + r12*8], rbp
0x0000bac3      7573           jne 0xbb38
0x0000bac5      488b7b10       mov rdi, qword [rbx + 0x10]
0x0000bac9      4929e8         sub r8, rbp
0x0000bacc      4a8d14850000.  lea rdx, [r8*4]
0x0000bad4      488d34af       lea rsi, [rdi + rbp*4]
0x0000bad8      e87363ffff     call sym.imp.memmove
0x0000badd      488b7b08       mov rdi, qword [rbx + 8]
0x0000bae1      488b5330       mov rdx, qword [rbx + 0x30]
0x0000bae5      488d342f       lea rsi, [rdi + rbp]
0x0000bae9      4829ea         sub rdx, rbp
0x0000baec      e85f63ffff     call sym.imp.memmove
0x0000baf1      488b4330       mov rax, qword [rbx + 0x30]
0x0000baf5      48296b38       sub qword [rbx + 0x38], rbp
0x0000baf9      4829e8         sub rax, rbp
0x0000bafc      4885c0         test rax, rax
0x0000baff      48894330       mov qword [rbx + 0x30], rax
0x0000bb03      7e23           jle 0xbb28
0x0000bb05      488b4b18       mov rcx, qword [rbx + 0x18]
0x0000bb09      31c0           xor eax, eax
0x0000bb0b      488d34e9       lea rsi, [rcx + rbp*8]
0x0000bb0f      90             nop
0x0000bb10      488b14c6       mov rdx, qword [rsi + rax*8]
0x0000bb14      4829ea         sub rdx, rbp
0x0000bb17      488914c1       mov qword [rcx + rax*8], rdx
0x0000bb1b      4883c001       add rax, 1
0x0000bb1f      48394330       cmp qword [rbx + 0x30], rax
0x0000bb23      7feb           jg 0xbb10
0x0000bb25      0f1f00         nop dword [rax]
0x0000bb28      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000bb2f      e9c8000000     jmp 0xbbfc
0x0000bb34      0f1f4000       nop dword [rax]
0x0000bb38      488b4350       mov rax, qword [rbx + 0x50]
0x0000bb3c      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000bb43      4801e8         add rax, rbp
0x0000bb46      4c29f8         sub rax, r15
0x0000bb49      48894358       mov qword [rbx + 0x58], rax
0x0000bb4d      488b4360       mov rax, qword [rbx + 0x60]
0x0000bb51      4801e8         add rax, rbp
0x0000bb54      4c29f8         sub rax, r15
0x0000bb57      4d85e4         test r12, r12
0x0000bb5a      48894368       mov qword [rbx + 0x68], rax
0x0000bb5e      7e23           jle 0xbb83
0x0000bb60      4b396ce6f8     cmp qword [r14 + r12*8 - 8], rbp
0x0000bb65      7414           je 0xbb7b
0x0000bb67      eb1a           jmp 0xbb83
0x0000bb69      0f1f80000000.  nop dword [rax]
0x0000bb70      4b396ceef8     cmp qword [r14 + r13*8 - 8], rbp
0x0000bb75      750c           jne 0xbb83
0x0000bb77      4983ed01       sub r13, 1
0x0000bb7b      4d85ed         test r13, r13
0x0000bb7e      4d89ec         mov r12, r13
0x0000bb81      75ed           jne 0xbb70
0x0000bb83      4d39c4         cmp r12, r8
0x0000bb86      0f8d2c020000   jge 0xbdb8
0x0000bb8c      488b4310       mov rax, qword [rbx + 0x10]
0x0000bb90      eb13           jmp 0xbba5
0x0000bb92      660f1f440000   nop word [rax + rax]
0x0000bb98      4983c401       add r12, 1
0x0000bb9c      4d39c4         cmp r12, r8
0x0000bb9f      0f841b020000   je 0xbdc0
0x0000bba5      42833ca0ff     cmp dword [rax + r12*4], 0xffffffff
0x0000bbaa      74ec           je 0xbb98
0x0000bbac      4b8b14e6       mov rdx, qword [r14 + r12*8]
0x0000bbb0      4829ea         sub rdx, rbp
0x0000bbb3      4883fa00       cmp rdx, 0
0x0000bbb7      48895330       mov qword [rbx + 0x30], rdx
0x0000bbbb      7434           je 0xbbf1
0x0000bbbd      7e20           jle 0xbbdf
0x0000bbbf      488b4310       mov rax, qword [rbx + 0x10]
0x0000bbc3      488d0c90       lea rcx, [rax + rdx*4]
0x0000bbc7      660f1f840000.  nop word [rax + rax]
0x0000bbd0      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000bbd6      4883c004       add rax, 4
0x0000bbda      4839c1         cmp rcx, rax
0x0000bbdd      75f1           jne 0xbbd0
0x0000bbdf      488b7b08       mov rdi, qword [rbx + 8]
0x0000bbe3      beff000000     mov esi, 0xff
0x0000bbe8      e8c360ffff     call sym.imp.memset
0x0000bbed      488b5330       mov rdx, qword [rbx + 0x30]
0x0000bbf1      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000bbf8      48895338       mov qword [rbx + 0x38], rdx
0x0000bbfc      84c0           test al, al
0x0000bbfe      0f8476fcffff   je 0xb87a
0x0000bc04      e975fcffff     jmp 0xb87e
0x0000bc09      0f1f80000000.  nop dword [rax]
0x0000bc10      488b7b08       mov rdi, qword [rbx + 8]
0x0000bc14      4c89c2         mov rdx, r8
0x0000bc17      488d342f       lea rsi, [rdi + rbp]
0x0000bc1b      e83062ffff     call sym.imp.memmove
0x0000bc20      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000bc27      48296b30       sub qword [rbx + 0x30], rbp
0x0000bc2b      48296b38       sub qword [rbx + 0x38], rbp
0x0000bc2f      ebcb           jmp 0xbbfc
0x0000bc31      0f1f80000000.  nop dword [rax]
0x0000bc38      488b0b         mov rcx, qword [rbx]
0x0000bc3b      4889ef         mov rdi, rbp
0x0000bc3e      4829d7         sub rdi, rdx
0x0000bc41      4889fa         mov rdx, rdi
0x0000bc44      4e8d2419       lea r12, [rcx + r11]
0x0000bc48      4c01e2         add rdx, r12
0x0000bc4b      498d742cff     lea rsi, [r12 + rbp - 1]
0x0000bc50      4839d1         cmp rcx, rdx
0x0000bc53      480f42ca       cmovb rcx, rdx
0x0000bc57      4839f1         cmp rcx, rsi
0x0000bc5a      7619           jbe 0xbc75
0x0000bc5c      e920fdffff     jmp 0xb981
0x0000bc61      0f1f80000000.  nop dword [rax]
0x0000bc68      4883ee01       sub rsi, 1
0x0000bc6c      4839f1         cmp rcx, rsi
0x0000bc6f      0f870cfdffff   ja 0xb981
0x0000bc75      0fb616         movzx edx, byte [rsi]
0x0000bc78      83e2c0         and edx, 0xffffffc0                     ; 4294967232
0x0000bc7b      80fa80         cmp dl, 0x80
0x0000bc7e      74e8           je 0xbc68
0x0000bc80      488b5358       mov rdx, qword [rbx + 0x58]
0x0000bc84      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000bc88      4989f6         mov r14, rsi
0x0000bc8b      4c01e2         add rdx, r12
0x0000bc8e      4829f2         sub rdx, rsi
0x0000bc91      4885c9         test rcx, rcx
0x0000bc94      0f8548020000   jne 0xbee2
0x0000bc9a      4c8d6c2424     lea r13, [rsp + 0x24]
0x0000bc9f      4901ec         add r12, rbp
0x0000bca2      488d4c2428     lea rcx, [rsp + 0x28]
0x0000bca7      4d29f4         sub r12, r14
0x0000bcaa      448954240c     mov dword [rsp + 0xc], r10d
0x0000bcaf      4c890424       mov qword [rsp], r8
0x0000bcb3      4c89ef         mov rdi, r13
0x0000bcb6      48c744242800.  mov qword [rsp + 0x28], 0
0x0000bcbf      e86cbeffff     call sym.rpl_mbrtowc
0x0000bcc4      4939c4         cmp r12, rax
0x0000bcc7      4c8b0424       mov r8, qword [rsp]
0x0000bccb      448b54240c     mov r10d, dword [rsp + 0xc]
0x0000bcd0      770a           ja 0xbcdc
0x0000bcd2      4883f8fd       cmp rax, 0xfffffffffffffffd
0x0000bcd6      0f86c5010000   jbe 0xbea1
0x0000bcdc      4c8b5b28       mov r11, qword [rbx + 0x28]
0x0000bce0      488b4338       mov rax, qword [rbx + 0x38]
0x0000bce4      e998fcffff     jmp 0xb981
0x0000bce9      0f1f80000000.  nop dword [rax]
0x0000bcf0      80bb88000000.  cmp byte [rbx + 0x88], 0
0x0000bcf7      0f85f3000000   jne 0xbdf0
0x0000bcfd      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000bd01      4885c9         test rcx, rcx
0x0000bd04      0f84a9fbffff   je 0xb8b3
0x0000bd0a      48394340       cmp qword [rbx + 0x40], rax
0x0000bd0e      488b5330       mov rdx, qword [rbx + 0x30]
0x0000bd12      480f4e4340     cmovle rax, qword [rbx + 0x40]
0x0000bd17      4839d0         cmp rax, rdx
0x0000bd1a      7f0c           jg 0xbd28
0x0000bd1c      eb2a           jmp 0xbd48
0x0000bd1e      6690           nop
0x0000bd20      4c8b7b28       mov r15, qword [rbx + 0x28]
0x0000bd24      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000bd28      488b33         mov rsi, qword [rbx]
0x0000bd2b      4801d6         add rsi, rdx
0x0000bd2e      420fb6343e     movzx esi, byte [rsi + r15]
0x0000bd33      0fb63431       movzx esi, byte [rcx + rsi]
0x0000bd37      488b4b08       mov rcx, qword [rbx + 8]
0x0000bd3b      40883411       mov byte [rcx + rdx], sil
0x0000bd3f      4883c201       add rdx, 1
0x0000bd43      4839d0         cmp rax, rdx
0x0000bd46      75d8           jne 0xbd20
0x0000bd48      48895330       mov qword [rbx + 0x30], rdx
0x0000bd4c      48895338       mov qword [rbx + 0x38], rdx
0x0000bd50      e95efbffff     jmp 0xb8b3
0x0000bd55      0f1f00         nop dword [rax]
0x0000bd58      488b03         mov rax, qword [rbx]
0x0000bd5b      488b5378       mov rdx, qword [rbx + 0x78]
0x0000bd5f      4801e8         add rax, rbp
0x0000bd62      4885d2         test rdx, rdx
0x0000bd65      410fb64403ff   movzx eax, byte [r11 + rax - 1]
0x0000bd6b      48c743380000.  mov qword [rbx + 0x38], 0
0x0000bd73      7404           je 0xbd79
0x0000bd75      0fb60402       movzx eax, byte [rdx + rax]
0x0000bd79      488b8b800000.  mov rcx, qword [rbx + 0x80]
0x0000bd80      0fb6d0         movzx edx, al
0x0000bd83      48c1fa06       sar rdx, 6
0x0000bd87      488b0cd1       mov rcx, qword [rcx + rdx*8]
0x0000bd8b      ba01000000     mov edx, 1
0x0000bd90      480fa3c1       bt rcx, rax
0x0000bd94      721a           jb 0xbdb0
0x0000bd96      31d2           xor edx, edx
0x0000bd98      3c0a           cmp al, 0xa
0x0000bd9a      7514           jne 0xbdb0
0x0000bd9c      31d2           xor edx, edx
0x0000bd9e      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x0000bda5      0f95c2         setne dl
0x0000bda8      01d2           add edx, edx
0x0000bdaa      660f1f440000   nop word [rax + rax]
0x0000bdb0      895370         mov dword [rbx + 0x70], edx
0x0000bdb3      e970fdffff     jmp 0xbb28
0x0000bdb8      0f85eefdffff   jne 0xbbac
0x0000bdbe      6690           nop
0x0000bdc0      48c743300000.  mov qword [rbx + 0x30], 0
0x0000bdc8      31d2           xor edx, edx
0x0000bdca      e922feffff     jmp 0xbbf1
0x0000bdcf      4d29fe         sub r14, r15
0x0000bdd2      4d89f4         mov r12, r14
0x0000bdd5      4c897330       mov qword [rbx + 0x30], r14
0x0000bdd9      498d70ff       lea rsi, [r8 - 1]
0x0000bddd      4489d2         mov edx, r10d
0x0000bde0      4889df         mov rdi, rbx
0x0000bde3      e8c8f6ffff     call sym.re_string_context_at
0x0000bde8      894370         mov dword [rbx + 0x70], eax
0x0000bdeb      e93afcffff     jmp 0xba2a
0x0000bdf0      4889df         mov rdi, rbx
0x0000bdf3      e8b8c5ffff     call sym.build_upper_buffer
0x0000bdf8      e9b6faffff     jmp 0xb8b3
0x0000bdfd      488b5350       mov rdx, qword [rbx + 0x50]
0x0000be01      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000be08      4801ea         add rdx, rbp
0x0000be0b      4c29fa         sub rdx, r15
0x0000be0e      48895358       mov qword [rbx + 0x58], rdx
0x0000be12      488b5360       mov rdx, qword [rbx + 0x60]
0x0000be16      4801ea         add rdx, rbp
0x0000be19      4c29fa         sub rdx, r15
0x0000be1c      48895368       mov qword [rbx + 0x68], rdx
0x0000be20      e933fbffff     jmp 0xb958
0x0000be25      4885c0         test rax, rax
0x0000be28      7473           je 0xbe9d
0x0000be2a      4d85e4         test r12, r12
0x0000be2d      746e           je 0xbe9d
0x0000be2f      488b03         mov rax, qword [rbx]
0x0000be32      420fb61430     movzx edx, byte [rax + r14]
0x0000be37      488b442418     mov rax, qword [rsp + 0x18]
0x0000be3c      48894320       mov qword [rbx + 0x20], rax
0x0000be40      b801000000     mov eax, 1
0x0000be45      e9a0fbffff     jmp 0xb9ea
0x0000be4a      7e1b           jle 0xbe67
0x0000be4c      488b4310       mov rax, qword [rbx + 0x10]
0x0000be50      4a8d14a0       lea rdx, [rax + r12*4]
0x0000be54      0f1f4000       nop dword [rax]
0x0000be58      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000be5e      4883c004       add rax, 4
0x0000be62      4839c2         cmp rdx, rax
0x0000be65      75f1           jne 0xbe58
0x0000be67      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000be6e      7558           jne 0xbec8
0x0000be70      4c896338       mov qword [rbx + 0x38], r12
0x0000be74      e901faffff     jmp 0xb87a
0x0000be79      89d7           mov edi, edx
0x0000be7b      891424         mov dword [rsp], edx
0x0000be7e      e80d5fffff     call sym.imp.iswalnum
0x0000be83      85c0           test eax, eax
0x0000be85      750c           jne 0xbe93
0x0000be87      8b1424         mov edx, dword [rsp]
0x0000be8a      83fa5f         cmp edx, 0x5f
0x0000be8d      0f857ffbffff   jne 0xba12
0x0000be93      b801000000     mov eax, 1
0x0000be98      e98afbffff     jmp 0xba27
0x0000be9d      31d2           xor edx, edx
0x0000be9f      eb96           jmp 0xbe37
0x0000bea1      8b542424       mov edx, dword [rsp + 0x24]
0x0000bea5      4c29e0         sub rax, r12
0x0000bea8      48c743200000.  mov qword [rbx + 0x20], 0
0x0000beb0      4989c4         mov r12, rax
0x0000beb3      48894330       mov qword [rbx + 0x30], rax
0x0000beb7      83faff         cmp edx, 0xffffffff
0x0000beba      0f8545fbffff   jne 0xba05
0x0000bec0      e917feffff     jmp 0xbcdc
0x0000bec5      0f1f00         nop dword [rax]
0x0000bec8      488b7b08       mov rdi, qword [rbx + 8]
0x0000becc      4c89e2         mov rdx, r12
0x0000becf      beff000000     mov esi, 0xff
0x0000bed4      e8d75dffff     call sym.imp.memset
0x0000bed9      4c8b6330       mov r12, qword [rbx + 0x30]
0x0000bedd      e952fbffff     jmp 0xba34
0x0000bee2      4883fa06       cmp rdx, 6
0x0000bee6      bf06000000     mov edi, 6
0x0000beeb      4c8d5c2432     lea r11, [rsp + 0x32]
0x0000bef0      480f4efa       cmovle rdi, rdx
0x0000bef4      83ef01         sub edi, 1
0x0000bef7      85ff           test edi, edi
0x0000bef9      4863c7         movsxd rax, edi
0x0000befc      7814           js 0xbf12
0x0000befe      0fb63c06       movzx edi, byte [rsi + rax]
0x0000bf02      0fb63c39       movzx edi, byte [rcx + rdi]
0x0000bf06      41883c03       mov byte [r11 + rax], dil
0x0000bf0a      4883e801       sub rax, 1
0x0000bf0e      85c0           test eax, eax
0x0000bf10      79ec           jns 0xbefe
0x0000bf12      4c89de         mov rsi, r11
0x0000bf15      e980fdffff     jmp 0xbc9a
0x0000bf1a      e8015dffff     call sym.imp.__stack_chk_fail
0x0000bf1f      90             nop
;-- sub_epsilon_src_nodes:
0x0000bf20      4157           push r15
0x0000bf22      4156           push r14
0x0000bf24      4989d6         mov r14, rdx
0x0000bf27      4155           push r13
0x0000bf29      4154           push r12
0x0000bf2b      488d1476       lea rdx, [rsi + rsi*2]
0x0000bf2f      55             push rbp
0x0000bf30      53             push rbx
0x0000bf31      660fefc0       pxor xmm0, xmm0
0x0000bf35      4883ec48       sub rsp, 0x48
0x0000bf39      64488b042528.  mov rax, qword fs:[0x28]
0x0000bf42      4889442438     mov qword [rsp + 0x38], rax
0x0000bf47      31c0           xor eax, eax
0x0000bf49      488b4738       mov rax, qword [rdi + 0x38]
0x0000bf4d      48c744243000.  mov qword [rsp + 0x30], 0
0x0000bf56      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000bf5b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000bf60      488d2cd0       lea rbp, [rax + rdx*8]
0x0000bf64      4c8b5508       mov r10, qword [rbp + 8]
0x0000bf68      4d85d2         test r10, r10
0x0000bf6b      0f8ee1010000   jle 0xc152
0x0000bf71      488d442420     lea rax, [rsp + 0x20]
0x0000bf76      4989fc         mov r12, rdi
0x0000bf79      4989f5         mov r13, rsi
0x0000bf7c      31db           xor ebx, ebx
0x0000bf7e      4889442418     mov qword [rsp + 0x18], rax
0x0000bf83      eb58           jmp 0xbfdd
0x0000bf85      0f1f00         nop dword [rax]
0x0000bf88      4885c0         test rax, rax
0x0000bf8b      0f85d7000000   jne 0xc068
0x0000bf91      498b7e08       mov rdi, qword [r14 + 8]
0x0000bf95      498d7610       lea rsi, [r14 + 0x10]
0x0000bf99      4c89c2         mov rdx, r8
0x0000bf9c      e82fd7ffff     call sym.re_node_set_contains.isra.3
0x0000bfa1      4885c0         test rax, rax
0x0000bfa4      0f84be000000   je 0xc068
0x0000bfaa      498b542438     mov rdx, qword [r12 + 0x38]
0x0000bfaf      488b742410     mov rsi, qword [rsp + 0x10]
0x0000bfb4      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000bfb9      4c01ca         add rdx, r9
0x0000bfbc      e81fe2ffff     call sym.re_node_set_add_intersect
0x0000bfc1      85c0           test eax, eax
0x0000bfc3      0f8577010000   jne 0xc140
0x0000bfc9      4c8b5508       mov r10, qword [rbp + 8]
0x0000bfcd      0f1f00         nop dword [rax]
0x0000bfd0      4883c301       add rbx, 1
0x0000bfd4      4939da         cmp r10, rbx
0x0000bfd7      0f8ed3000000   jle 0xc0b0
0x0000bfdd      488b4510       mov rax, qword [rbp + 0x10]
0x0000bfe1      488b04d8       mov rax, qword [rax + rbx*8]
0x0000bfe5      4939c5         cmp r13, rax
0x0000bfe8      74e6           je 0xbfd0
0x0000bfea      4889c2         mov rdx, rax
0x0000bfed      48c1e204       shl rdx, 4
0x0000bff1      49031424       add rdx, qword [r12]
0x0000bff5      f6420808       test byte [rdx + 8], 8
0x0000bff9      74d5           je 0xbfd0
0x0000bffb      4c8d0c40       lea r9, [rax + rax*2]
0x0000bfff      498b4c2428     mov rcx, qword [r12 + 0x28]
0x0000c004      4c8d5d10       lea r11, [rbp + 0x10]
0x0000c008      4c89d7         mov rdi, r10
0x0000c00b      49c1e103       shl r9, 3
0x0000c00f      4c89de         mov rsi, r11
0x0000c012      4c01c9         add rcx, r9
0x0000c015      4c8b7910       mov r15, qword [rcx + 0x10]
0x0000c019      48894c2408     mov qword [rsp + 8], rcx
0x0000c01e      4d8b07         mov r8, qword [r15]
0x0000c021      4c89c2         mov rdx, r8
0x0000c024      4c890424       mov qword [rsp], r8
0x0000c028      e8a3d6ffff     call sym.re_node_set_contains.isra.3
0x0000c02d      488b4c2408     mov rcx, qword [rsp + 8]
0x0000c032      4c8b0424       mov r8, qword [rsp]
0x0000c036      4883790801     cmp qword [rcx + 8], 1
0x0000c03b      0f8f47ffffff   jg 0xbf88
0x0000c041      4885c0         test rax, rax
0x0000c044      758a           jne 0xbfd0
0x0000c046      498b7e08       mov rdi, qword [r14 + 8]
0x0000c04a      498d7610       lea rsi, [r14 + 0x10]
0x0000c04e      4c89c2         mov rdx, r8
0x0000c051      e87ad6ffff     call sym.re_node_set_contains.isra.3
0x0000c056      4885c0         test rax, rax
0x0000c059      0f854bffffff   jne 0xbfaa
0x0000c05f      e96cffffff     jmp 0xbfd0
0x0000c064      0f1f4000       nop dword [rax]
0x0000c068      4d8b7f08       mov r15, qword [r15 + 8]
0x0000c06c      4d85ff         test r15, r15
0x0000c06f      0f8e5bffffff   jle 0xbfd0
0x0000c075      4c89fa         mov rdx, r15
0x0000c078      4c89de         mov rsi, r11
0x0000c07b      4c89d7         mov rdi, r10
0x0000c07e      e84dd6ffff     call sym.re_node_set_contains.isra.3
0x0000c083      4885c0         test rax, rax
0x0000c086      0f8544ffffff   jne 0xbfd0
0x0000c08c      498b7e08       mov rdi, qword [r14 + 8]
0x0000c090      498d7610       lea rsi, [r14 + 0x10]
0x0000c094      e837d6ffff     call sym.re_node_set_contains.isra.3
0x0000c099      4885c0         test rax, rax
0x0000c09c      0f842effffff   je 0xbfd0
0x0000c0a2      e903ffffff     jmp 0xbfaa
0x0000c0a7      660f1f840000.  nop word [rax + rax]
0x0000c0b0      4531c9         xor r9d, r9d
0x0000c0b3      4d85d2         test r10, r10
0x0000c0b6      4c8d5c2430     lea r11, [rsp + 0x30]
0x0000c0bb      7e4f           jle 0xc10c
0x0000c0bd      0f1f00         nop dword [rax]
0x0000c0c0      488b4510       mov rax, qword [rbp + 0x10]
0x0000c0c4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000c0c9      4c89de         mov rsi, r11
0x0000c0cc      4e8b14c8       mov r10, qword [rax + r9*8]
0x0000c0d0      4c89d2         mov rdx, r10
0x0000c0d3      e8f8d5ffff     call sym.re_node_set_contains.isra.3
0x0000c0d8      4885c0         test rax, rax
0x0000c0db      7525           jne 0xc102
0x0000c0dd      498d5e10       lea rbx, [r14 + 0x10]
0x0000c0e1      498b7e08       mov rdi, qword [r14 + 8]
0x0000c0e5      4889de         mov rsi, rbx
0x0000c0e8      e8e3d5ffff     call sym.re_node_set_contains.isra.3
0x0000c0ed      4883e801       sub rax, 1
0x0000c0f1      4889c2         mov rdx, rax
0x0000c0f4      780c           js 0xc102
0x0000c0f6      498d7e08       lea rdi, [r14 + 8]
0x0000c0fa      4889de         mov rsi, rbx
0x0000c0fd      e84ed7ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000c102      4983c101       add r9, 1
0x0000c106      4c394d08       cmp qword [rbp + 8], r9
0x0000c10a      7fb4           jg 0xc0c0
0x0000c10c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c111      e8ea59ffff     call sym.imp.free
0x0000c116      31c0           xor eax, eax
0x0000c118      488b742438     mov rsi, qword [rsp + 0x38]
0x0000c11d      644833342528.  xor rsi, qword fs:[0x28]
0x0000c126      752e           jne 0xc156
0x0000c128      4883c448       add rsp, 0x48
0x0000c12c      5b             pop rbx
0x0000c12d      5d             pop rbp
0x0000c12e      415c           pop r12
0x0000c130      415d           pop r13
0x0000c132      415e           pop r14
0x0000c134      415f           pop r15
0x0000c136      c3             ret
0x0000c137      660f1f840000.  nop word [rax + rax]
0x0000c140      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c145      890424         mov dword [rsp], eax
0x0000c148      e8b359ffff     call sym.imp.free
0x0000c14d      8b0424         mov eax, dword [rsp]
0x0000c150      ebc6           jmp 0xc118
0x0000c152      31ff           xor edi, edi
0x0000c154      ebbb           jmp 0xc111
0x0000c156      e8c55affff     call sym.imp.__stack_chk_fail
0x0000c15b      0f1f440000     nop dword [rax + rax]
;-- build_trtable:
0x0000c160      4157           push r15
0x0000c162      4156           push r14
0x0000c164      4989ff         mov r15, rdi
0x0000c167      4155           push r13
0x0000c169      4154           push r12
0x0000c16b      bf00380000     mov edi, 0x3800
0x0000c170      55             push rbp
0x0000c171      53             push rbx
0x0000c172      4881ec080100.  sub rsp, 0x108
0x0000c179      64488b042528.  mov rax, qword fs:[0x28]
0x0000c182      48898424f800.  mov qword [rsp + 0xf8], rax
0x0000c18a      31c0           xor eax, eax
0x0000c18c      4889742408     mov qword [rsp + 8], rsi
0x0000c191      e80a5cffff     call sym.imp.malloc
0x0000c196      4885c0         test rax, rax
0x0000c199      4889442418     mov qword [rsp + 0x18], rax
0x0000c19e      0f84cc030000   je 0xc570
0x0000c1a4      488b442418     mov rax, qword [rsp + 0x18]
0x0000c1a9      660fefc0       pxor xmm0, xmm0
0x0000c1ad      488d98001800.  lea rbx, [rax + 0x1800]
0x0000c1b4      488b442408     mov rax, qword [rsp + 8]
0x0000c1b9      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000c1c1      48895c2440     mov qword [rsp + 0x40], rbx
0x0000c1c6      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0000c1ce      4883781000     cmp qword [rax + 0x10], 0
0x0000c1d3      48c740580000.  mov qword [rax + 0x58], 0
0x0000c1db      48c740600000.  mov qword [rax + 0x60], 0
0x0000c1e3      0f8e710a0000   jle 0xcc5a
0x0000c1e9      4c897c2430     mov qword [rsp + 0x30], r15
0x0000c1ee      31ed           xor ebp, ebp
0x0000c1f0      48c744241000.  mov qword [rsp + 0x10], 0
0x0000c1f9      4989df         mov r15, rbx
0x0000c1fc      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000c201      488d04dd0000.  lea rax, [rbx*8]
0x0000c209      4889442420     mov qword [rsp + 0x20], rax
0x0000c20e      488b442408     mov rax, qword [rsp + 8]
0x0000c213      488b4018       mov rax, qword [rax + 0x18]
0x0000c217      4c8b2cd8       mov r13, qword [rax + rbx*8]
0x0000c21b      488b442430     mov rax, qword [rsp + 0x30]
0x0000c220      49c1e504       shl r13, 4
0x0000c224      4c0328         add r13, qword [rax]
0x0000c227      450fb67508     movzx r14d, byte [r13 + 8]
0x0000c22c      418b4508       mov eax, dword [r13 + 8]
0x0000c230      c1e808         shr eax, 8
0x0000c233      6625ff03       and ax, 0x3ff
0x0000c237      4183fe01       cmp r14d, 1
0x0000c23b      0f845f030000   je 0xc5a0
0x0000c241      4183fe03       cmp r14d, 3
0x0000c245      0f84c5070000   je 0xca10
0x0000c24b      4183fe05       cmp r14d, 5
0x0000c24f      0f847b060000   je 0xc8d0
0x0000c255      4183fe07       cmp r14d, 7
0x0000c259      0f84da070000   je 0xca39
0x0000c25f      488b5c2408     mov rbx, qword [rsp + 8]
0x0000c264      488344241001   add qword [rsp + 0x10], 1
0x0000c26a      488b442410     mov rax, qword [rsp + 0x10]
0x0000c26f      483b4310       cmp rax, qword [rbx + 0x10]
0x0000c273      7c87           jl 0xc1fc
0x0000c275      4885ed         test rbp, rbp
0x0000c278      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x0000c27d      0f8e560a0000   jle 0xccd9
0x0000c283      488d5d01       lea rbx, [rbp + 1]
0x0000c287      48c744247800.  mov qword [rsp + 0x78], 0
0x0000c290      48895c2470     mov qword [rsp + 0x70], rbx
0x0000c295      48c1e303       shl rbx, 3
0x0000c299      4889df         mov rdi, rbx
0x0000c29c      e8ff5affff     call sym.imp.malloc
0x0000c2a1      4885c0         test rax, rax
0x0000c2a4      4989c4         mov r12, rax
0x0000c2a7      488984248000.  mov qword [rsp + 0x80], rax
0x0000c2af      0f84fa070000   je 0xcaaf
0x0000c2b5      48b855a8aaaa.  movabs rax, 0xaaaaaaaaaaaa855
0x0000c2bf      c744246c0000.  mov dword [rsp + 0x6c], 0
0x0000c2c7      4839c5         cmp rbp, rax
0x0000c2ca      0f8fdf070000   jg 0xcaaf
0x0000c2d0      488d446d00     lea rax, [rbp + rbp*2]
0x0000c2d5      48c1e003       shl rax, 3
0x0000c2d9      4889c7         mov rdi, rax
0x0000c2dc      4889442458     mov qword [rsp + 0x58], rax
0x0000c2e1      e8ba5affff     call sym.imp.malloc
0x0000c2e6      4885c0         test rax, rax
0x0000c2e9      4889442410     mov qword [rsp + 0x10], rax
0x0000c2ee      0f84bb070000   je 0xcaaf
0x0000c2f4      488b442410     mov rax, qword [rsp + 0x10]
0x0000c2f9      4883eb08       sub rbx, 8
0x0000c2fd      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000c302      660fefc0       pxor xmm0, xmm0
0x0000c306      4c8d742470     lea r14, [rsp + 0x70]
0x0000c30b      48896c2420     mov qword [rsp + 0x20], rbp
0x0000c310      c644244f00     mov byte [rsp + 0x4f], 0
0x0000c315      4c89fd         mov rbp, r15
0x0000c318      4801d8         add rax, rbx
0x0000c31b      4c89642450     mov qword [rsp + 0x50], r12
0x0000c320      4801c3         add rbx, rax
0x0000c323      4889442430     mov qword [rsp + 0x30], rax
0x0000c328      488b442418     mov rax, qword [rsp + 0x18]
0x0000c32d      0f298424d000.  movaps xmmword [rsp + 0xd0], xmm0
0x0000c335      48895c2438     mov qword [rsp + 0x38], rbx
0x0000c33a      31db           xor ebx, ebx
0x0000c33c      4c8d6808       lea r13, [rax + 8]
0x0000c340      488d44246c     lea rax, [rsp + 0x6c]
0x0000c345      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x0000c34d      4889442428     mov qword [rsp + 0x28], rax
0x0000c352      48c744247800.  mov qword [rsp + 0x78], 0
0x0000c35b      49837d0000     cmp qword [r13], 0
0x0000c360      7e46           jle 0xc3a8
0x0000c362      4531ff         xor r15d, r15d
0x0000c365      0f1f00         nop dword [rax]
0x0000c368      498b4508       mov rax, qword [r13 + 8]
0x0000c36c      4a8b14f8       mov rdx, qword [rax + r15*8]
0x0000c370      488b4518       mov rax, qword [rbp + 0x18]
0x0000c374      488b04d0       mov rax, qword [rax + rdx*8]
0x0000c378      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000c37c      7420           je 0xc39e
0x0000c37e      488d1440       lea rdx, [rax + rax*2]
0x0000c382      488b4530       mov rax, qword [rbp + 0x30]
0x0000c386      4c89f7         mov rdi, r14
0x0000c389      488d34d0       lea rsi, [rax + rdx*8]
0x0000c38d      e85ed8ffff     call sym.re_node_set_merge
0x0000c392      85c0           test eax, eax
0x0000c394      8944246c       mov dword [rsp + 0x6c], eax
0x0000c398      0f85fa060000   jne 0xca98
0x0000c39e      4983c701       add r15, 1
0x0000c3a2      4d397d00       cmp qword [r13], r15
0x0000c3a6      7fc0           jg 0xc368
0x0000c3a8      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000c3ad      31c9           xor ecx, ecx
0x0000c3af      4889ee         mov rsi, rbp
0x0000c3b2      4c89f2         mov rdx, r14
0x0000c3b5      e866e6ffff     call sym.re_acquire_state_context
0x0000c3ba      488b742410     mov rsi, qword [rsp + 0x10]
0x0000c3bf      4885c0         test rax, rax
0x0000c3c2      488904de       mov qword [rsi + rbx*8], rax
0x0000c3c6      0f84ac070000   je 0xcb78
0x0000c3cc      80786800       cmp byte [rax + 0x68], 0
0x0000c3d0      0f881a070000   js 0xcaf0
0x0000c3d6      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c3db      488b742438     mov rsi, qword [rsp + 0x38]
0x0000c3e0      488904df       mov qword [rdi + rbx*8], rax
0x0000c3e4      488b442410     mov rax, qword [rsp + 0x10]
0x0000c3e9      488b04d8       mov rax, qword [rax + rbx*8]
0x0000c3ed      488904de       mov qword [rsi + rbx*8], rax
0x0000c3f1      488d9424d000.  lea rdx, [rsp + 0xd0]
0x0000c3f9      31c0           xor eax, eax
0x0000c3fb      488b0c02       mov rcx, qword [rdx + rax]
0x0000c3ff      490b0c04       or rcx, qword [r12 + rax]
0x0000c403      48890c02       mov qword [rdx + rax], rcx
0x0000c407      4883c008       add rax, 8
0x0000c40b      4883f820       cmp rax, 0x20                           ; "@"
0x0000c40f      75ea           jne 0xc3fb
0x0000c411      4883c301       add rbx, 1
0x0000c415      4983c518       add r13, 0x18
0x0000c419      4983c420       add r12, 0x20                           ; "@"
0x0000c41d      483b5c2420     cmp rbx, qword [rsp + 0x20]
0x0000c422      0f852affffff   jne 0xc352
0x0000c428      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000c42d      4989ef         mov r15, rbp
0x0000c430      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000c435      4889542420     mov qword [rsp + 0x20], rdx
0x0000c43a      0f8549070000   jne 0xcb89
0x0000c440      be00010000     mov esi, 0x100
0x0000c445      bf08000000     mov edi, 8
0x0000c44a      e8e158ffff     call sym.imp.calloc
0x0000c44f      4989c3         mov r11, rax
0x0000c452      488b442408     mov rax, qword [rsp + 8]
0x0000c457      4d85db         test r11, r11
0x0000c45a      4c895858       mov qword [rax + 0x58], r11
0x0000c45e      0f8439060000   je 0xca9d
0x0000c464      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000c469      4c8b642410     mov r12, qword [rsp + 0x10]
0x0000c46e      4531c9         xor r9d, r9d
0x0000c471      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x0000c476      488b542420     mov rdx, qword [rsp + 0x20]
0x0000c47b      4883c320       add rbx, 0x20                           ; "@"
0x0000c47f      4a8b040a       mov rax, qword [rdx + r9]
0x0000c483      4885c0         test rax, rax
0x0000c486      742c           je 0xc4b4
0x0000c488      4c89ce         mov rsi, r9
0x0000c48b      b901000000     mov ecx, 1
0x0000c490      48c1e606       shl rsi, 6
0x0000c494      4c01de         add rsi, r11
0x0000c497      660f1f840000.  nop word [rax + rax]
0x0000c4a0      a801           test al, 1
0x0000c4a2      0f8560070000   jne 0xcc08
0x0000c4a8      4801c9         add rcx, rcx
0x0000c4ab      4883c608       add rsi, 8
0x0000c4af      48d1e8         shr rax, 1
0x0000c4b2      75ec           jne 0xc4a0
0x0000c4b4      4983c108       add r9, 8
0x0000c4b8      4983f920       cmp r9, 0x20                            ; "@"
0x0000c4bc      75c1           jne 0xc47f
0x0000c4be      f68424d10000.  test byte [rsp + 0xd1], 4
0x0000c4c6      743a           je 0xc502
0x0000c4c8      31c0           xor eax, eax
0x0000c4ca      488b542450     mov rdx, qword [rsp + 0x50]
0x0000c4cf      eb0d           jmp 0xc4de
0x0000c4d1      4883c001       add rax, 1
0x0000c4d5      4883c220       add rdx, 0x20                           ; "@"
0x0000c4d9      4839e8         cmp rax, rbp
0x0000c4dc      7424           je 0xc502
0x0000c4de      48f702000400.  test qword [rdx], 0x400
0x0000c4e5      74ea           je 0xc4d1
0x0000c4e7      488b5c2438     mov rbx, qword [rsp + 0x38]
0x0000c4ec      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000c4f1      488b04c3       mov rax, qword [rbx + rax*8]
0x0000c4f5      49894350       mov qword [r11 + 0x50], rax
0x0000c4f9      7407           je 0xc502
0x0000c4fb      498983500800.  mov qword [r11 + 0x850], rax
0x0000c502      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000c507      e8f455ffff     call sym.imp.free
0x0000c50c      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000c514      e8e755ffff     call sym.imp.free
0x0000c519      488b442418     mov rax, qword [rsp + 0x18]
0x0000c51e      488b5c2458     mov rbx, qword [rsp + 0x58]
0x0000c523      488d6810       lea rbp, [rax + 0x10]
0x0000c527      4801eb         add rbx, rbp
0x0000c52a      488b7d00       mov rdi, qword [rbp]
0x0000c52e      4883c518       add rbp, 0x18
0x0000c532      e8c955ffff     call sym.imp.free
0x0000c537      4839eb         cmp rbx, rbp
0x0000c53a      75ee           jne 0xc52a
0x0000c53c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c541      e8ba55ffff     call sym.imp.free
0x0000c546      b801000000     mov eax, 1
0x0000c54b      eb25           jmp 0xc572
0x0000c54d      4885ed         test rbp, rbp
0x0000c550      48c743080000.  mov qword [rbx + 8], 0
0x0000c558      48c703000000.  mov qword [rbx], 0
0x0000c55f      0f852b030000   jne 0xc890
0x0000c565      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c56a      e89155ffff     call sym.imp.free
0x0000c56f      90             nop
0x0000c570      31c0           xor eax, eax
0x0000c572      488b9c24f800.  mov rbx, qword [rsp + 0xf8]
0x0000c57a      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000c583      0f854b070000   jne 0xccd4
0x0000c589      4881c4080100.  add rsp, 0x108
0x0000c590      5b             pop rbx
0x0000c591      5d             pop rbp
0x0000c592      415c           pop r12
0x0000c594      415d           pop r13
0x0000c596      415e           pop r14
0x0000c598      415f           pop r15
0x0000c59a      c3             ret
0x0000c59b      0f1f440000     nop dword [rax + rax]
0x0000c5a0      410fb64d00     movzx ecx, byte [r13]
0x0000c5a5      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000c5ad      bf01000000     mov edi, 1
0x0000c5b2      4889ca         mov rdx, rcx
0x0000c5b5      83e13f         and ecx, 0x3f
0x0000c5b8      48c1ea03       shr rdx, 3
0x0000c5bc      48d3e7         shl rdi, cl
0x0000c5bf      83e218         and edx, 0x18
0x0000c5c2      49093c14       or qword [r12 + rdx], rdi
0x0000c5c6      6685c0         test ax, ax
0x0000c5c9      0f84c1000000   je 0xc690
0x0000c5cf      a820           test al, 0x20                           ; "@"
0x0000c5d1      0f8569030000   jne 0xc940
0x0000c5d7      a880           test al, 0x80
0x0000c5d9      0f8595020000   jne 0xc874
0x0000c5df      a804           test al, 4
0x0000c5e1      7452           je 0xc635
0x0000c5e3      4183fe01       cmp r14d, 1
0x0000c5e7      0f84d8030000   je 0xc9c5
0x0000c5ed      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000c5f2      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000c5fa      0f8e52040000   jle 0xca52
0x0000c600      498b7878       mov rdi, qword [r8 + 0x78]
0x0000c604      31f6           xor esi, esi
0x0000c606      31c9           xor ecx, ecx
0x0000c608      488b14cf       mov rdx, qword [rdi + rcx*8]
0x0000c60c      48f7d2         not rdx
0x0000c60f      490b94c8b800.  or rdx, qword [r8 + rcx*8 + 0xb8]
0x0000c617      492314cc       and rdx, qword [r12 + rcx*8]
0x0000c61b      498914cc       mov qword [r12 + rcx*8], rdx
0x0000c61f      4883c101       add rcx, 1
0x0000c623      4809d6         or rsi, rdx
0x0000c626      4883f904       cmp rcx, 4
0x0000c62a      75dc           jne 0xc608
0x0000c62c      4885f6         test rsi, rsi
0x0000c62f      0f842afcffff   je 0xc25f
0x0000c635      a808           test al, 8
0x0000c637      7457           je 0xc690
0x0000c639      4183fe01       cmp r14d, 1
0x0000c63d      0f842e030000   je 0xc971
0x0000c643      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c648      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000c64f      0f8e39030000   jle 0xc98e
0x0000c655      488b7778       mov rsi, qword [rdi + 0x78]
0x0000c659      31c9           xor ecx, ecx
0x0000c65b      31d2           xor edx, edx
0x0000c65d      488b84d7b800.  mov rax, qword [rdi + rdx*8 + 0xb8]
0x0000c665      482304d6       and rax, qword [rsi + rdx*8]
0x0000c669      48f7d0         not rax
0x0000c66c      492304d4       and rax, qword [r12 + rdx*8]
0x0000c670      498904d4       mov qword [r12 + rdx*8], rax
0x0000c674      4883c201       add rdx, 1
0x0000c678      4809c1         or rcx, rax
0x0000c67b      4883fa04       cmp rdx, 4
0x0000c67f      75dc           jne 0xc65d
0x0000c681      4885c9         test rcx, rcx
0x0000c684      0f84d5fbffff   je 0xc25f
0x0000c68a      660f1f440000   nop word [rax + rax]
0x0000c690      31db           xor ebx, ebx
0x0000c692      4885ed         test rbp, rbp
0x0000c695      0f8e60010000   jle 0xc7fb
0x0000c69b      4c896c2428     mov qword [rsp + 0x28], r13
0x0000c6a0      4d89fd         mov r13, r15
0x0000c6a3      0f1f440000     nop dword [rax + rax]
0x0000c6a8      4989da         mov r10, rbx
0x0000c6ab      49c1e205       shl r10, 5
0x0000c6af      4183fe01       cmp r14d, 1
0x0000c6b3      7523           jne 0xc6d8
0x0000c6b5      488b442428     mov rax, qword [rsp + 0x28]
0x0000c6ba      0fb610         movzx edx, byte [rax]
0x0000c6bd      4889d0         mov rax, rdx
0x0000c6c0      48c1e803       shr rax, 3
0x0000c6c4      83e018         and eax, 0x18
0x0000c6c7      4c01e8         add rax, r13
0x0000c6ca      4a8b0410       mov rax, qword [rax + r10]
0x0000c6ce      480fa3d0       bt rax, rdx
0x0000c6d2      0f8313010000   jae 0xc7eb
0x0000c6d8      4b8d7c1500     lea rdi, [r13 + r10]
0x0000c6dd      488db424b000.  lea rsi, [rsp + 0xb0]
0x0000c6e5      31c9           xor ecx, ecx
0x0000c6e7      31c0           xor eax, eax
0x0000c6e9      498b14c4       mov rdx, qword [r12 + rax*8]
0x0000c6ed      482314c7       and rdx, qword [rdi + rax*8]
0x0000c6f1      488914c6       mov qword [rsi + rax*8], rdx
0x0000c6f5      4883c001       add rax, 1
0x0000c6f9      4809d1         or rcx, rdx
0x0000c6fc      4883f804       cmp rax, 4
0x0000c700      75e7           jne 0xc6e9
0x0000c702      4885c9         test rcx, rcx
0x0000c705      0f84e0000000   je 0xc7eb
0x0000c70b      4c8d9c24d000.  lea r11, [rsp + 0xd0]
0x0000c713      4531ff         xor r15d, r15d
0x0000c716      4531c9         xor r9d, r9d
0x0000c719      31c9           xor ecx, ecx
0x0000c71b      498b34cc       mov rsi, qword [r12 + rcx*8]
0x0000c71f      488b04cf       mov rax, qword [rdi + rcx*8]
0x0000c723      4889f2         mov rdx, rsi
0x0000c726      48f7d2         not rdx
0x0000c729      4821c2         and rdx, rax
0x0000c72c      48f7d0         not rax
0x0000c72f      4821f0         and rax, rsi
0x0000c732      498914cb       mov qword [r11 + rcx*8], rdx
0x0000c736      4909d1         or r9, rdx
0x0000c739      498904cc       mov qword [r12 + rcx*8], rax
0x0000c73d      4883c101       add rcx, 1
0x0000c741      4909c7         or r15, rax
0x0000c744      4883f904       cmp rcx, 4
0x0000c748      75d1           jne 0xc71b
0x0000c74a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c74f      488d045b       lea rax, [rbx + rbx*2]
0x0000c753      4d85c9         test r9, r9
0x0000c756      488d14c7       lea rdx, [rdi + rax*8]
0x0000c75a      7468           je 0xc7c4
0x0000c75c      4889e8         mov rax, rbp
0x0000c75f      660f6f8424d0.  movdqa xmm0, xmmword [rsp + 0xd0]
0x0000c768      48c1e005       shl rax, 5
0x0000c76c      4889d6         mov rsi, rdx
0x0000c76f      4889542438     mov qword [rsp + 0x38], rdx
0x0000c774      4c01e8         add rax, r13
0x0000c777      0f1100         movups xmmword [rax], xmm0
0x0000c77a      660f6f8424e0.  movdqa xmm0, xmmword [rsp + 0xe0]
0x0000c783      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000c787      488d446d00     lea rax, [rbp + rbp*2]
0x0000c78c      488d3cc7       lea rdi, [rdi + rax*8]
0x0000c790      660f6f8424b0.  movdqa xmm0, xmmword [rsp + 0xb0]
0x0000c799      430f11441500   movups xmmword [r13 + r10], xmm0
0x0000c79f      660f6f8424c0.  movdqa xmm0, xmmword [rsp + 0xc0]
0x0000c7a8      430f11441510   movups xmmword [r13 + r10 + 0x10], xmm0
0x0000c7ae      e87de0ffff     call sym.re_node_set_init_copy
0x0000c7b3      85c0           test eax, eax
0x0000c7b5      0f85d5000000   jne 0xc890
0x0000c7bb      488b542438     mov rdx, qword [rsp + 0x38]
0x0000c7c0      4883c501       add rbp, 1
0x0000c7c4      488b442408     mov rax, qword [rsp + 8]
0x0000c7c9      488b742420     mov rsi, qword [rsp + 0x20]
0x0000c7ce      4889d7         mov rdi, rdx
0x0000c7d1      488b4018       mov rax, qword [rax + 0x18]
0x0000c7d5      488b3430       mov rsi, qword [rax + rsi]
0x0000c7d9      e8b2b9ffff     call sym.re_node_set_insert
0x0000c7de      84c0           test al, al
0x0000c7e0      0f84aa000000   je 0xc890
0x0000c7e6      4d85ff         test r15, r15
0x0000c7e9      740d           je 0xc7f8
0x0000c7eb      4883c301       add rbx, 1
0x0000c7ef      4839eb         cmp rbx, rbp
0x0000c7f2      0f8cb0feffff   jl 0xc6a8
0x0000c7f8      4d89ef         mov r15, r13
0x0000c7fb      4839dd         cmp rbp, rbx
0x0000c7fe      0f855bfaffff   jne 0xc25f
0x0000c804      4889e8         mov rax, rbp
0x0000c807      660f6f842490.  movdqa xmm0, xmmword [rsp + 0x90]
0x0000c810      48c1e005       shl rax, 5
0x0000c814      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000c819      bf08000000     mov edi, 8
0x0000c81e      4c01f8         add rax, r15
0x0000c821      0f1100         movups xmmword [rax], xmm0
0x0000c824      660f6f8424a0.  movdqa xmm0, xmmword [rsp + 0xa0]
0x0000c82d      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000c831      488b442408     mov rax, qword [rsp + 8]
0x0000c836      488b4018       mov rax, qword [rax + 0x18]
0x0000c83a      4c8b2c18       mov r13, qword [rax + rbx]
0x0000c83e      488b5c2418     mov rbx, qword [rsp + 0x18]
0x0000c843      488d446d00     lea rax, [rbp + rbp*2]
0x0000c848      488d1cc3       lea rbx, [rbx + rax*8]
0x0000c84c      48c703010000.  mov qword [rbx], 1
0x0000c853      48c743080100.  mov qword [rbx + 8], 1
0x0000c85b      e84055ffff     call sym.imp.malloc
0x0000c860      4885c0         test rax, rax
0x0000c863      48894310       mov qword [rbx + 0x10], rax
0x0000c867      0f84e0fcffff   je 0xc54d
0x0000c86d      4c8928         mov qword [rax], r13
0x0000c870      4883c501       add rbp, 1
0x0000c874      660fefc0       pxor xmm0, xmm0
0x0000c878      410f290424     movaps xmmword [r12], xmm0
0x0000c87d      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000c883      e9d7f9ffff     jmp 0xc25f
0x0000c888      0f1f84000000.  nop dword [rax + rax]
0x0000c890      488b442418     mov rax, qword [rsp + 0x18]
0x0000c895      488d5810       lea rbx, [rax + 0x10]
0x0000c899      488d446d00     lea rax, [rbp + rbp*2]
0x0000c89e      488d2cc3       lea rbp, [rbx + rax*8]
0x0000c8a2      660f1f440000   nop word [rax + rax]
0x0000c8a8      488b3b         mov rdi, qword [rbx]
0x0000c8ab      4883c318       add rbx, 0x18
0x0000c8af      e84c52ffff     call sym.imp.free
0x0000c8b4      4839dd         cmp rbp, rbx
0x0000c8b7      75ef           jne 0xc8a8
0x0000c8b9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c8be      e83d52ffff     call sym.imp.free
0x0000c8c3      e9a8fcffff     jmp 0xc570
0x0000c8c8      0f1f84000000.  nop dword [rax + rax]
0x0000c8d0      488b742430     mov rsi, qword [rsp + 0x30]
0x0000c8d5      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000c8dc      0f8e03010000   jle 0xc9e5
0x0000c8e2      488b7678       mov rsi, qword [rsi + 0x78]
0x0000c8e6      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000c8ee      31d2           xor edx, edx
0x0000c8f0      498b0c14       mov rcx, qword [r12 + rdx]
0x0000c8f4      480b0c16       or rcx, qword [rsi + rdx]
0x0000c8f8      49890c14       mov qword [r12 + rdx], rcx
0x0000c8fc      4883c208       add rdx, 8
0x0000c900      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000c904      75ea           jne 0xc8f0
0x0000c906      488b5c2430     mov rbx, qword [rsp + 0x30]
0x0000c90b      488b93d80000.  mov rdx, qword [rbx + 0xd8]
0x0000c912      f6c240         test dl, 0x40                           ; segment.PHDR
0x0000c915      750c           jne 0xc923
0x0000c917      4881a4249000.  and qword [rsp + 0x90], 0xfffffffffffffbff
0x0000c923      81e280000000   and edx, 0x80
0x0000c929      0f8497fcffff   je 0xc5c6
0x0000c92f      4883a4249000.  and qword [rsp + 0x90], 0xfffffffffffffffe
0x0000c938      e989fcffff     jmp 0xc5c6
0x0000c93d      0f1f00         nop dword [rax]
0x0000c940      488b94249000.  mov rdx, qword [rsp + 0x90]
0x0000c948      660fefc0       pxor xmm0, xmm0
0x0000c94c      80e604         and dh, 4
0x0000c94f      410f290424     movaps xmmword [r12], xmm0
0x0000c954      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000c95a      0f84fff8ffff   je 0xc25f
0x0000c960      48c784249000.  mov qword [rsp + 0x90], 0x400           ; [0x400:8]=0x1200000012
0x0000c96c      e966fcffff     jmp 0xc5d7
0x0000c971      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000c976      0f85f8feffff   jne 0xc874
0x0000c97c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c981      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000c988      0f8fc7fcffff   jg 0xc655
0x0000c98e      488b742430     mov rsi, qword [rsp + 0x30]
0x0000c993      31c9           xor ecx, ecx
0x0000c995      31d2           xor edx, edx
0x0000c997      488b84d6b800.  mov rax, qword [rsi + rdx*8 + 0xb8]
0x0000c99f      48f7d0         not rax
0x0000c9a2      492304d4       and rax, qword [r12 + rdx*8]
0x0000c9a6      498904d4       mov qword [r12 + rdx*8], rax
0x0000c9aa      4883c201       add rdx, 1
0x0000c9ae      4809c1         or rcx, rax
0x0000c9b1      4883fa04       cmp rdx, 4
0x0000c9b5      75e0           jne 0xc997
0x0000c9b7      4885c9         test rcx, rcx
0x0000c9ba      0f85d0fcffff   jne 0xc690
0x0000c9c0      e99af8ffff     jmp 0xc25f
0x0000c9c5      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000c9ca      0f84a4feffff   je 0xc874
0x0000c9d0      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000c9d5      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000c9dd      0f8f1dfcffff   jg 0xc600
0x0000c9e3      eb6d           jmp 0xca52
0x0000c9e5      660f76c0       pcmpeqd xmm0, xmm0
0x0000c9e9      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000c9f1      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000c9f9      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0000ca01      e900ffffff     jmp 0xc906
0x0000ca06      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ca10      498b7500       mov rsi, qword [r13]
0x0000ca14      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000ca1c      31d2           xor edx, edx
0x0000ca1e      498b0c14       mov rcx, qword [r12 + rdx]
0x0000ca22      480b0c16       or rcx, qword [rsi + rdx]
0x0000ca26      49890c14       mov qword [r12 + rdx], rcx
0x0000ca2a      4883c208       add rdx, 8
0x0000ca2e      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000ca32      75ea           jne 0xca1e
0x0000ca34      e98dfbffff     jmp 0xc5c6
0x0000ca39      660f76c0       pcmpeqd xmm0, xmm0
0x0000ca3d      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000ca45      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000ca4d      e9b4feffff     jmp 0xc906
0x0000ca52      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000ca57      31f6           xor esi, esi
0x0000ca59      31d2           xor edx, edx
0x0000ca5b      498b0cd4       mov rcx, qword [r12 + rdx*8]
0x0000ca5f      48238cd7b800.  and rcx, qword [rdi + rdx*8 + 0xb8]
0x0000ca67      49890cd4       mov qword [r12 + rdx*8], rcx
0x0000ca6b      4883c201       add rdx, 1
0x0000ca6f      4809ce         or rsi, rcx
0x0000ca72      4883fa04       cmp rdx, 4
0x0000ca76      75e3           jne 0xca5b
0x0000ca78      4885f6         test rsi, rsi
0x0000ca7b      0f85b4fbffff   jne 0xc635
0x0000ca81      e9d9f7ffff     jmp 0xc25f
0x0000ca86      8b54246c       mov edx, dword [rsp + 0x6c]
0x0000ca8a      85d2           test edx, edx
0x0000ca8c      0f8485000000   je 0xcb17
0x0000ca92      660f1f440000   nop word [rax + rax]
0x0000ca98      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000ca9d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000caa2      e85950ffff     call sym.imp.free
0x0000caa7      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x0000caaf      4c89e7         mov rdi, r12
0x0000cab2      e84950ffff     call sym.imp.free
0x0000cab7      488b442418     mov rax, qword [rsp + 0x18]
0x0000cabc      488d5810       lea rbx, [rax + 0x10]
0x0000cac0      488d446d00     lea rax, [rbp + rbp*2]
0x0000cac5      488d2cc3       lea rbp, [rbx + rax*8]
0x0000cac9      0f1f80000000.  nop dword [rax]
0x0000cad0      488b3b         mov rdi, qword [rbx]
0x0000cad3      4883c318       add rbx, 0x18
0x0000cad7      e82450ffff     call sym.imp.free
0x0000cadc      4839dd         cmp rbp, rbx
0x0000cadf      75ef           jne 0xcad0
0x0000cae1      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000cae6      e81550ffff     call sym.imp.free
0x0000caeb      e980faffff     jmp 0xc570
0x0000caf0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000caf5      b901000000     mov ecx, 1
0x0000cafa      4c89f2         mov rdx, r14
0x0000cafd      4889ee         mov rsi, rbp
0x0000cb00      e81bdfffff     call sym.re_acquire_state_context
0x0000cb05      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000cb0a      4885c0         test rax, rax
0x0000cb0d      488904df       mov qword [rdi + rbx*8], rax
0x0000cb11      0f846fffffff   je 0xca86
0x0000cb17      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000cb1c      483b04df       cmp rax, qword [rdi + rbx*8]
0x0000cb20      7419           je 0xcb3b
0x0000cb22      0fb67c244f     movzx edi, byte [rsp + 0x4f]
0x0000cb27      83bdb4000000.  cmp dword [rbp + 0xb4], 2
0x0000cb2e      b801000000     mov eax, 1
0x0000cb33      0f4df8         cmovge edi, eax
0x0000cb36      40887c244f     mov byte [rsp + 0x4f], dil
0x0000cb3b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000cb40      4889ee         mov rsi, rbp
0x0000cb43      b902000000     mov ecx, 2
0x0000cb48      4c89f2         mov rdx, r14
0x0000cb4b      e8d0deffff     call sym.re_acquire_state_context
0x0000cb50      488b742438     mov rsi, qword [rsp + 0x38]
0x0000cb55      4885c0         test rax, rax
0x0000cb58      488904de       mov qword [rsi + rbx*8], rax
0x0000cb5c      0f858ff8ffff   jne 0xc3f1
0x0000cb62      8b44246c       mov eax, dword [rsp + 0x6c]
0x0000cb66      85c0           test eax, eax
0x0000cb68      0f8483f8ffff   je 0xc3f1
0x0000cb6e      e925ffffff     jmp 0xca98
0x0000cb73      0f1f440000     nop dword [rax + rax]
0x0000cb78      8b4c246c       mov ecx, dword [rsp + 0x6c]
0x0000cb7c      85c9           test ecx, ecx
0x0000cb7e      0f8448f8ffff   je 0xc3cc
0x0000cb84      e90fffffff     jmp 0xca98
0x0000cb89      be00020000     mov esi, 0x200
0x0000cb8e      bf08000000     mov edi, 8
0x0000cb93      e89851ffff     call sym.imp.calloc
0x0000cb98      4989c3         mov r11, rax
0x0000cb9b      488b442408     mov rax, qword [rsp + 8]
0x0000cba0      4d85db         test r11, r11
0x0000cba3      4c895860       mov qword [rax + 0x60], r11
0x0000cba7      0f84f0feffff   je 0xca9d
0x0000cbad      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0000cbb2      4c8b542410     mov r10, qword [rsp + 0x10]
0x0000cbb7      4d89dc         mov r12, r11
0x0000cbba      4c8b742430     mov r14, qword [rsp + 0x30]
0x0000cbbf      488b542420     mov rdx, qword [rsp + 0x20]
0x0000cbc4      31db           xor ebx, ebx
0x0000cbc6      4983c520       add r13, 0x20                           ; "@"
0x0000cbca      488b041a       mov rax, qword [rdx + rbx]
0x0000cbce      4885c0         test rax, rax
0x0000cbd1      741c           je 0xcbef
0x0000cbd3      4c89e6         mov rsi, r12
0x0000cbd6      b901000000     mov ecx, 1
0x0000cbdb      a801           test al, 1
0x0000cbdd      0f85a9000000   jne 0xcc8c
0x0000cbe3      4801c9         add rcx, rcx
0x0000cbe6      4883c608       add rsi, 8
0x0000cbea      48d1e8         shr rax, 1
0x0000cbed      75ec           jne 0xcbdb
0x0000cbef      4883c308       add rbx, 8
0x0000cbf3      4981c4000200.  add r12, 0x200
0x0000cbfa      4883fb20       cmp rbx, 0x20                           ; "@"
0x0000cbfe      75ca           jne 0xcbca
0x0000cc00      e9b9f8ffff     jmp 0xc4be
0x0000cc05      0f1f00         nop dword [rax]
0x0000cc08      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000cc0d      4a858c0f0018.  test qword [rdi + r9 + 0x1800], rcx
0x0000cc15      7570           jne 0xcc87
0x0000cc17      4a8d3c0b       lea rdi, [rbx + r9]
0x0000cc1b      4531c0         xor r8d, r8d
0x0000cc1e      6690           nop
0x0000cc20      4c8b17         mov r10, qword [rdi]
0x0000cc23      4983c001       add r8, 1
0x0000cc27      4883c720       add rdi, 0x20                           ; "@"
0x0000cc2b      4921ca         and r10, rcx
0x0000cc2e      4d85d2         test r10, r10
0x0000cc31      74ed           je 0xcc20
0x0000cc33      49c1e003       shl r8, 3
0x0000cc37      4b858c0fb800.  test qword [r15 + r9 + 0xb8], rcx
0x0000cc3f      740d           je 0xcc4e
0x0000cc41      4b8b7c0500     mov rdi, qword [r13 + r8]
0x0000cc46      48893e         mov qword [rsi], rdi
0x0000cc49      e95af8ffff     jmp 0xc4a8
0x0000cc4e      4b8b3c04       mov rdi, qword [r12 + r8]
0x0000cc52      48893e         mov qword [rsi], rdi
0x0000cc55      e94ef8ffff     jmp 0xc4a8
0x0000cc5a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000cc5f      e89c4effff     call sym.imp.free
0x0000cc64      be00010000     mov esi, 0x100
0x0000cc69      bf08000000     mov edi, 8
0x0000cc6e      e8bd50ffff     call sym.imp.calloc
0x0000cc73      488b5c2408     mov rbx, qword [rsp + 8]
0x0000cc78      4885c0         test rax, rax
0x0000cc7b      48894358       mov qword [rbx + 0x58], rax
0x0000cc7f      0f95c0         setne al
0x0000cc82      e9ebf8ffff     jmp 0xc572
0x0000cc87      4531c0         xor r8d, r8d
0x0000cc8a      ebab           jmp 0xcc37
0x0000cc8c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000cc91      48858c1f0018.  test qword [rdi + rbx + 0x1800], rcx
0x0000cc99      7535           jne 0xccd0
0x0000cc9b      4d8d4c1d00     lea r9, [r13 + rbx]
0x0000cca0      4531c0         xor r8d, r8d
0x0000cca3      4d8b39         mov r15, qword [r9]
0x0000cca6      4983c001       add r8, 1
0x0000ccaa      4983c120       add r9, 0x20                            ; "@"
0x0000ccae      4c89c7         mov rdi, r8
0x0000ccb1      4921cf         and r15, rcx
0x0000ccb4      4d85ff         test r15, r15
0x0000ccb7      74ea           je 0xcca3
0x0000ccb9      4d8b04fa       mov r8, qword [r10 + rdi*8]
0x0000ccbd      4c8906         mov qword [rsi], r8
0x0000ccc0      498b3cfe       mov rdi, qword [r14 + rdi*8]
0x0000ccc4      4889be000800.  mov qword [rsi + 0x800], rdi
0x0000cccb      e913ffffff     jmp 0xcbe3
0x0000ccd0      31ff           xor edi, edi
0x0000ccd2      ebe5           jmp 0xccb9
0x0000ccd4      e8474fffff     call sym.imp.__stack_chk_fail
0x0000ccd9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000ccde      e81d4effff     call sym.imp.free
0x0000cce3      4885ed         test rbp, rbp
0x0000cce6      0f8584f8ffff   jne 0xc570
0x0000ccec      e973ffffff     jmp 0xcc64
0x0000ccf1      0f1f440000     nop dword [rax + rax]
0x0000ccf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- calc_first:
0x0000cd00      807e3010       cmp byte [rsi + 0x30], 0x10
0x0000cd04      7462           je 0xcd68
0x0000cd06      55             push rbp
0x0000cd07      53             push rbx
0x0000cd08      4889f3         mov rbx, rsi
0x0000cd0b      4889fd         mov rbp, rdi
0x0000cd0e      4883ec08       sub rsp, 8
0x0000cd12      48897318       mov qword [rbx + 0x18], rsi
0x0000cd16      488b5330       mov rdx, qword [rbx + 0x30]
0x0000cd1a      488b7628       mov rsi, qword [rsi + 0x28]
0x0000cd1e      e84dc1ffff     call sym.re_dfa_add_node
0x0000cd23      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000cd27      4889c2         mov rdx, rax
0x0000cd2a      48894338       mov qword [rbx + 0x38], rax
0x0000cd2e      7450           je 0xcd80
0x0000cd30      31c0           xor eax, eax
0x0000cd32      807b300c       cmp byte [rbx + 0x30], 0xc
0x0000cd36      7524           jne 0xcd5c
0x0000cd38      8b4b28         mov ecx, dword [rbx + 0x28]
0x0000cd3b      48c1e204       shl rdx, 4
0x0000cd3f      48035500       add rdx, qword [rbp]
0x0000cd43      81e1ff030000   and ecx, 0x3ff
0x0000cd49      c1e108         shl ecx, 8
0x0000cd4c      89ce           mov esi, ecx
0x0000cd4e      8b4a08         mov ecx, dword [rdx + 8]
0x0000cd51      81e1ff00fcff   and ecx, 0xfffc00ff
0x0000cd57      09f1           or ecx, esi
0x0000cd59      894a08         mov dword [rdx + 8], ecx
0x0000cd5c      4883c408       add rsp, 8
0x0000cd60      5b             pop rbx
0x0000cd61      5d             pop rbp
0x0000cd62      c3             ret
0x0000cd63      0f1f440000     nop dword [rax + rax]
0x0000cd68      488b4608       mov rax, qword [rsi + 8]
0x0000cd6c      488b5018       mov rdx, qword [rax + 0x18]
0x0000cd70      488b4038       mov rax, qword [rax + 0x38]
0x0000cd74      48895618       mov qword [rsi + 0x18], rdx
0x0000cd78      48894638       mov qword [rsi + 0x38], rax
0x0000cd7c      31c0           xor eax, eax
0x0000cd7e      c3             ret
0x0000cd7f      90             nop
0x0000cd80      b80c000000     mov eax, 0xc
0x0000cd85      ebd5           jmp 0xcd5c
0x0000cd87      660f1f840000.  nop word [rax + rax]
;-- free_fail_stack_return.part.24:
0x0000cd90      4154           push r12
0x0000cd92      55             push rbp
0x0000cd93      4889fd         mov rbp, rdi
0x0000cd96      53             push rbx
0x0000cd97      48833f00       cmp qword [rdi], 0
0x0000cd9b      7e35           jle 0xcdd2
0x0000cd9d      31db           xor ebx, ebx
0x0000cd9f      4531e4         xor r12d, r12d
0x0000cda2      660f1f440000   nop word [rax + rax]
0x0000cda8      488b4510       mov rax, qword [rbp + 0x10]
0x0000cdac      4983c401       add r12, 1
0x0000cdb0      488b7c1828     mov rdi, qword [rax + rbx + 0x28]
0x0000cdb5      e8464dffff     call sym.imp.free
0x0000cdba      488b4510       mov rax, qword [rbp + 0x10]
0x0000cdbe      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000cdc3      4883c330       add rbx, 0x30
0x0000cdc7      e8344dffff     call sym.imp.free
0x0000cdcc      4c3b6500       cmp r12, qword [rbp]
0x0000cdd0      7cd6           jl 0xcda8
0x0000cdd2      5b             pop rbx
0x0000cdd3      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000cdd7      5d             pop rbp
0x0000cdd8      415c           pop r12
0x0000cdda      e9214dffff     jmp sym.imp.free
0x0000cddf      90             nop
;-- pop_fail_stack.isra.25:
0x0000cde0      4154           push r12
0x0000cde2      55             push rbp
0x0000cde3      53             push rbx
0x0000cde4      488b07         mov rax, qword [rdi]
0x0000cde7      4883e801       sub rax, 1
0x0000cdeb      4885c0         test rax, rax
0x0000cdee      488907         mov qword [rdi], rax
0x0000cdf1      7862           js 0xce55
0x0000cdf3      488d1c40       lea rbx, [rax + rax*2]
0x0000cdf7      488b06         mov rax, qword [rsi]
0x0000cdfa      4989f4         mov r12, rsi
0x0000cdfd      48c1e104       shl rcx, 4
0x0000ce01      4c89cd         mov rbp, r9
0x0000ce04      4c89c7         mov rdi, r8
0x0000ce07      48c1e304       shl rbx, 4
0x0000ce0b      4801d8         add rax, rbx
0x0000ce0e      488b30         mov rsi, qword [rax]
0x0000ce11      488932         mov qword [rdx], rsi
0x0000ce14      488b7010       mov rsi, qword [rax + 0x10]
0x0000ce18      4889ca         mov rdx, rcx
0x0000ce1b      e8504fffff     call sym.imp.memcpy
0x0000ce20      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000ce24      e8d74cffff     call sym.imp.free
0x0000ce29      498b0424       mov rax, qword [r12]
0x0000ce2d      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000ce32      e8c94cffff     call sym.imp.free
0x0000ce37      49031c24       add rbx, qword [r12]
0x0000ce3b      f30f6f4318     movdqu xmm0, xmmword [rbx + 0x18]
0x0000ce40      0f294500       movaps xmmword [rbp], xmm0
0x0000ce44      488b4328       mov rax, qword [rbx + 0x28]
0x0000ce48      48894510       mov qword [rbp + 0x10], rax
0x0000ce4c      488b4308       mov rax, qword [rbx + 8]
0x0000ce50      5b             pop rbx
0x0000ce51      5d             pop rbp
0x0000ce52      415c           pop r12
0x0000ce54      c3             ret
0x0000ce55      488d0d84ad00.  lea rcx, obj.__PRETTY_FUNCTION__.8040   ; 0x17be0 ; "pop_fail_stack"
0x0000ce5c      488d35a5a700.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x17608 ; "../coreutils-8.31/lib/regexec.c"
0x0000ce63      488d3d06a800.  lea rdi, str.num____0                   ; 0x17670 ; "num >= 0"
0x0000ce6a      ba55050000     mov edx, 0x555
0x0000ce6f      e81c4effff     call sym.imp.__assert_fail
0x0000ce74      6690           nop
0x0000ce76      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_equiv_class.isra.27:
;-- build_collating_symbol.isra.28:
0x0000ce80      55             push rbp
0x0000ce81      53             push rbx
0x0000ce82      4889fd         mov rbp, rdi
0x0000ce85      4889f7         mov rdi, rsi
0x0000ce88      4889f3         mov rbx, rsi
0x0000ce8b      4883ec08       sub rsp, 8
0x0000ce8f      e87c4dffff     call sym.imp.strlen
0x0000ce94      4883f801       cmp rax, 1
0x0000ce98      7526           jne 0xcec0
0x0000ce9a      0fb60b         movzx ecx, byte [rbx]
0x0000ce9d      4889ca         mov rdx, rcx
0x0000cea0      83e13f         and ecx, 0x3f
0x0000cea3      48c1ea03       shr rdx, 3
0x0000cea7      48d3e0         shl rax, cl
0x0000ceaa      83e218         and edx, 0x18
0x0000cead      4809441500     or qword [rbp + rdx], rax
0x0000ceb2      4883c408       add rsp, 8
0x0000ceb6      31c0           xor eax, eax
0x0000ceb8      5b             pop rbx
0x0000ceb9      5d             pop rbp
0x0000ceba      c3             ret
0x0000cebb      0f1f440000     nop dword [rax + rax]
0x0000cec0      4883c408       add rsp, 8
0x0000cec4      b803000000     mov eax, 3
0x0000cec9      5b             pop rbx
0x0000ceca      5d             pop rbp
0x0000cecb      c3             ret
0x0000cecc      0f1f4000       nop dword [rax]
;-- build_charclass.isra.29:
0x0000ced0      4156           push r14
0x0000ced2      4155           push r13
0x0000ced4      4989cd         mov r13, rcx
0x0000ced7      4154           push r12
0x0000ced9      55             push rbp
0x0000ceda      4d89cc         mov r12, r9
0x0000cedd      53             push rbx
0x0000cede      4889fd         mov rbp, rdi
0x0000cee1      4889f3         mov rbx, rsi
0x0000cee4      4883ec10       sub rsp, 0x10
0x0000cee8      48f744244000.  test qword [rsp + 0x40], 0x400000
0x0000cef1      7425           je 0xcf18
0x0000cef3      488d3d85a700.  lea rdi, str.upper                      ; 0x1767f ; "upper"
0x0000cefa      b906000000     mov ecx, 6
0x0000ceff      4c89ce         mov rsi, r9
0x0000cf02      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000cf04      0f97c0         seta al
0x0000cf07      1c00           sbb al, 0
0x0000cf09      84c0           test al, al
0x0000cf0b      0f85f5000000   jne 0xd006
0x0000cf11      4c8d2561a700.  lea r12, str.alpha                      ; 0x17679 ; "alpha"
0x0000cf18      498b4d00       mov rcx, qword [r13]
0x0000cf1c      493908         cmp qword [r8], rcx
0x0000cf1f      488b02         mov rax, qword [rdx]
0x0000cf22      0f8411010000   je 0xd039
0x0000cf28      488d5101       lea rdx, [rcx + 1]
0x0000cf2c      4c89e7         mov rdi, r12
0x0000cf2f      49895500       mov qword [r13], rdx
0x0000cf33      4c8d2cc8       lea r13, [rax + rcx*8]
0x0000cf37      e8d44dffff     call sym.imp.wctype
0x0000cf3c      488d3d48a700.  lea rdi, str.alnum                      ; 0x1768b ; "alnum"
0x0000cf43      49894500       mov qword [r13], rax
0x0000cf47      b906000000     mov ecx, 6
0x0000cf4c      4c89e6         mov rsi, r12
0x0000cf4f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000cf51      0f97c0         seta al
0x0000cf54      1c00           sbb al, 0
0x0000cf56      84c0           test al, al
0x0000cf58      746e           je 0xcfc8
0x0000cf5a      488d3d30a700.  lea rdi, str.cntrl                      ; 0x17691 ; "cntrl"
0x0000cf61      b906000000     mov ecx, 6
0x0000cf66      4c89e6         mov rsi, r12
0x0000cf69      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000cf6b      0f97c0         seta al
0x0000cf6e      1c00           sbb al, 0
0x0000cf70      84c0           test al, al
0x0000cf72      0f8500010000   jne 0xd078
0x0000cf78      e8d34fffff     call sym.imp.__ctype_b_loc
0x0000cf7d      31c9           xor ecx, ecx
0x0000cf7f      4885ed         test rbp, rbp
0x0000cf82      488b10         mov rdx, qword [rax]
0x0000cf85      bf01000000     mov edi, 1
0x0000cf8a      0f85ba020000   jne 0xd24a
0x0000cf90      f6044a02       test byte [rdx + rcx*2], 2
0x0000cf94      7411           je 0xcfa7
0x0000cf96      4889c8         mov rax, rcx
0x0000cf99      4889fe         mov rsi, rdi
0x0000cf9c      48c1f806       sar rax, 6
0x0000cfa0      48d3e6         shl rsi, cl
0x0000cfa3      480934c3       or qword [rbx + rax*8], rsi
0x0000cfa7      4883c101       add rcx, 1
0x0000cfab      4881f9000100.  cmp rcx, 0x100
0x0000cfb2      75dc           jne 0xcf90
0x0000cfb4      31c0           xor eax, eax
0x0000cfb6      4883c410       add rsp, 0x10
0x0000cfba      5b             pop rbx
0x0000cfbb      5d             pop rbp
0x0000cfbc      415c           pop r12
0x0000cfbe      415d           pop r13
0x0000cfc0      415e           pop r14
0x0000cfc2      c3             ret
0x0000cfc3      0f1f440000     nop dword [rax + rax]
0x0000cfc8      e8834fffff     call sym.imp.__ctype_b_loc
0x0000cfcd      31c9           xor ecx, ecx
0x0000cfcf      4885ed         test rbp, rbp
0x0000cfd2      488b10         mov rdx, qword [rax]
0x0000cfd5      bf01000000     mov edi, 1
0x0000cfda      0f85ea010000   jne 0xd1ca
0x0000cfe0      f6044a08       test byte [rdx + rcx*2], 8
0x0000cfe4      7411           je 0xcff7
0x0000cfe6      4889c8         mov rax, rcx
0x0000cfe9      4889fe         mov rsi, rdi
0x0000cfec      48c1f806       sar rax, 6
0x0000cff0      48d3e6         shl rsi, cl
0x0000cff3      480934c3       or qword [rbx + rax*8], rsi
0x0000cff7      4883c101       add rcx, 1
0x0000cffb      4881f9000100.  cmp rcx, 0x100
0x0000d002      75dc           jne 0xcfe0
0x0000d004      ebae           jmp 0xcfb4
0x0000d006      488d3d78a600.  lea rdi, str.lower                      ; 0x17685 ; "lower"
0x0000d00d      b906000000     mov ecx, 6
0x0000d012      4c89ce         mov rsi, r9
0x0000d015      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d017      498b4d00       mov rcx, qword [r13]
0x0000d01b      0f97c0         seta al
0x0000d01e      1c00           sbb al, 0
0x0000d020      84c0           test al, al
0x0000d022      488d0550a600.  lea rax, str.alpha                      ; 0x17679 ; "alpha"
0x0000d029      4c0f44e0       cmove r12, rax
0x0000d02d      493908         cmp qword [r8], rcx
0x0000d030      488b02         mov rax, qword [rdx]
0x0000d033      0f85effeffff   jne 0xcf28
0x0000d039      4c8d740901     lea r14, [rcx + rcx + 1]
0x0000d03e      4889c7         mov rdi, rax
0x0000d041      4c89442408     mov qword [rsp + 8], r8
0x0000d046      48891424       mov qword [rsp], rdx
0x0000d04a      4a8d34f50000.  lea rsi, [r14*8]
0x0000d052      e8a94dffff     call sym.imp.realloc
0x0000d057      4885c0         test rax, rax
0x0000d05a      0f8418030000   je 0xd378
0x0000d060      488b1424       mov rdx, qword [rsp]
0x0000d064      4c8b442408     mov r8, qword [rsp + 8]
0x0000d069      488902         mov qword [rdx], rax
0x0000d06c      4d8930         mov qword [r8], r14
0x0000d06f      498b4d00       mov rcx, qword [r13]
0x0000d073      e9b0feffff     jmp 0xcf28
0x0000d078      488d3d06a600.  lea rdi, str.lower                      ; 0x17685 ; "lower"
0x0000d07f      b906000000     mov ecx, 6
0x0000d084      4c89e6         mov rsi, r12
0x0000d087      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d089      0f97c0         seta al
0x0000d08c      1c00           sbb al, 0
0x0000d08e      84c0           test al, al
0x0000d090      7468           je 0xd0fa
0x0000d092      488d3dfea500.  lea rdi, str.space                      ; 0x17697 ; "space"
0x0000d099      b906000000     mov ecx, 6
0x0000d09e      4c89e6         mov rsi, r12
0x0000d0a1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d0a3      0f97c0         seta al
0x0000d0a6      1c00           sbb al, 0
0x0000d0a8      84c0           test al, al
0x0000d0aa      0f8592000000   jne 0xd142
0x0000d0b0      e89b4effff     call sym.imp.__ctype_b_loc
0x0000d0b5      31c9           xor ecx, ecx
0x0000d0b7      4885ed         test rbp, rbp
0x0000d0ba      488b10         mov rdx, qword [rax]
0x0000d0bd      bf01000000     mov edi, 1
0x0000d0c2      0f8556030000   jne 0xd41e
0x0000d0c8      0f1f84000000.  nop dword [rax + rax]
0x0000d0d0      f6444a0120     test byte [rdx + rcx*2 + 1], 0x20
0x0000d0d5      7411           je 0xd0e8
0x0000d0d7      4889c8         mov rax, rcx
0x0000d0da      4889fe         mov rsi, rdi
0x0000d0dd      48c1f806       sar rax, 6
0x0000d0e1      48d3e6         shl rsi, cl
0x0000d0e4      480934c3       or qword [rbx + rax*8], rsi
0x0000d0e8      4883c101       add rcx, 1
0x0000d0ec      4881f9000100.  cmp rcx, 0x100
0x0000d0f3      75db           jne 0xd0d0
0x0000d0f5      e9bafeffff     jmp 0xcfb4
0x0000d0fa      e8514effff     call sym.imp.__ctype_b_loc
0x0000d0ff      31c9           xor ecx, ecx
0x0000d101      4885ed         test rbp, rbp
0x0000d104      488b10         mov rdx, qword [rax]
0x0000d107      bf01000000     mov edi, 1
0x0000d10c      0f85d0010000   jne 0xd2e2
0x0000d112      660f1f440000   nop word [rax + rax]
0x0000d118      f6444a0102     test byte [rdx + rcx*2 + 1], 2
0x0000d11d      7411           je 0xd130
0x0000d11f      4889c8         mov rax, rcx
0x0000d122      4889fe         mov rsi, rdi
0x0000d125      48c1f806       sar rax, 6
0x0000d129      48d3e6         shl rsi, cl
0x0000d12c      480934c3       or qword [rbx + rax*8], rsi
0x0000d130      4883c101       add rcx, 1
0x0000d134      4881f9000100.  cmp rcx, 0x100
0x0000d13b      75db           jne 0xd118
0x0000d13d      e972feffff     jmp 0xcfb4
0x0000d142      488d3d30a500.  lea rdi, str.alpha                      ; 0x17679 ; "alpha"
0x0000d149      b906000000     mov ecx, 6
0x0000d14e      4c89e6         mov rsi, r12
0x0000d151      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d153      0f97c0         seta al
0x0000d156      1c00           sbb al, 0
0x0000d158      84c0           test al, al
0x0000d15a      0f84a3000000   je 0xd203
0x0000d160      488d3d4fa500.  lea rdi, [0x000176b6]                   ; "digit"
0x0000d167      b906000000     mov ecx, 6
0x0000d16c      4c89e6         mov rsi, r12
0x0000d16f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d171      0f97c0         seta al
0x0000d174      1c00           sbb al, 0
0x0000d176      84c0           test al, al
0x0000d178      0f8505010000   jne 0xd283
0x0000d17e      e8cd4dffff     call sym.imp.__ctype_b_loc
0x0000d183      31c9           xor ecx, ecx
0x0000d185      4885ed         test rbp, rbp
0x0000d188      488b10         mov rdx, qword [rax]
0x0000d18b      bf01000000     mov edi, 1
0x0000d190      0f85a4040000   jne 0xd63a
0x0000d196      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d1a0      f6444a0108     test byte [rdx + rcx*2 + 1], 8
0x0000d1a5      7411           je 0xd1b8
0x0000d1a7      4889c8         mov rax, rcx
0x0000d1aa      4889fe         mov rsi, rdi
0x0000d1ad      48c1f806       sar rax, 6
0x0000d1b1      48d3e6         shl rsi, cl
0x0000d1b4      480934c3       or qword [rbx + rax*8], rsi
0x0000d1b8      4883c101       add rcx, 1
0x0000d1bc      4881f9000100.  cmp rcx, 0x100
0x0000d1c3      75db           jne 0xd1a0
0x0000d1c5      e9eafdffff     jmp 0xcfb4
0x0000d1ca      31c0           xor eax, eax
0x0000d1cc      0f1f4000       nop dword [rax]
0x0000d1d0      f6044208       test byte [rdx + rax*2], 8
0x0000d1d4      741c           je 0xd1f2
0x0000d1d6      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d1db      4989fa         mov r10, rdi
0x0000d1de      4889ce         mov rsi, rcx
0x0000d1e1      83e13f         and ecx, 0x3f
0x0000d1e4      48c1ee03       shr rsi, 3
0x0000d1e8      49d3e2         shl r10, cl
0x0000d1eb      83e618         and esi, 0x18
0x0000d1ee      4c091433       or qword [rbx + rsi], r10
0x0000d1f2      4883c001       add rax, 1
0x0000d1f6      483d00010000   cmp rax, 0x100
0x0000d1fc      75d2           jne 0xd1d0
0x0000d1fe      e9b1fdffff     jmp 0xcfb4
0x0000d203      e8484dffff     call sym.imp.__ctype_b_loc
0x0000d208      31c9           xor ecx, ecx
0x0000d20a      4885ed         test rbp, rbp
0x0000d20d      488b10         mov rdx, qword [rax]
0x0000d210      bf01000000     mov edi, 1
0x0000d215      0f85cd010000   jne 0xd3e8
0x0000d21b      0f1f440000     nop dword [rax + rax]
0x0000d220      f6444a0104     test byte [rdx + rcx*2 + 1], 4
0x0000d225      7411           je 0xd238
0x0000d227      4889c8         mov rax, rcx
0x0000d22a      4889fe         mov rsi, rdi
0x0000d22d      48c1f806       sar rax, 6
0x0000d231      48d3e6         shl rsi, cl
0x0000d234      480934c3       or qword [rbx + rax*8], rsi
0x0000d238      4883c101       add rcx, 1
0x0000d23c      4881f9000100.  cmp rcx, 0x100
0x0000d243      75db           jne 0xd220
0x0000d245      e96afdffff     jmp 0xcfb4
0x0000d24a      31c0           xor eax, eax
0x0000d24c      0f1f4000       nop dword [rax]
0x0000d250      f6044202       test byte [rdx + rax*2], 2
0x0000d254      741c           je 0xd272
0x0000d256      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d25b      4989fb         mov r11, rdi
0x0000d25e      4889ce         mov rsi, rcx
0x0000d261      83e13f         and ecx, 0x3f
0x0000d264      48c1ee03       shr rsi, 3
0x0000d268      49d3e3         shl r11, cl
0x0000d26b      83e618         and esi, 0x18
0x0000d26e      4c091c33       or qword [rbx + rsi], r11
0x0000d272      4883c001       add rax, 1
0x0000d276      483d00010000   cmp rax, 0x100
0x0000d27c      75d2           jne 0xd250
0x0000d27e      e931fdffff     jmp 0xcfb4
0x0000d283      488d3d13a400.  lea rdi, str.print                      ; 0x1769d ; "print"
0x0000d28a      b906000000     mov ecx, 6
0x0000d28f      4c89e6         mov rsi, r12
0x0000d292      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d294      0f97c0         seta al
0x0000d297      1c00           sbb al, 0
0x0000d299      84c0           test al, al
0x0000d29b      757f           jne 0xd31c
0x0000d29d      e8ae4cffff     call sym.imp.__ctype_b_loc
0x0000d2a2      31c9           xor ecx, ecx
0x0000d2a4      4885ed         test rbp, rbp
0x0000d2a7      488b10         mov rdx, qword [rax]
0x0000d2aa      bf01000000     mov edi, 1
0x0000d2af      0f85f2030000   jne 0xd6a7
0x0000d2b5      0f1f00         nop dword [rax]
0x0000d2b8      f6444a0140     test byte [rdx + rcx*2 + 1], 0x40
0x0000d2bd      7411           je 0xd2d0
0x0000d2bf      4889c8         mov rax, rcx
0x0000d2c2      4889fe         mov rsi, rdi
0x0000d2c5      48c1f806       sar rax, 6
0x0000d2c9      48d3e6         shl rsi, cl
0x0000d2cc      480934c3       or qword [rbx + rax*8], rsi
0x0000d2d0      4883c101       add rcx, 1
0x0000d2d4      4881f9000100.  cmp rcx, 0x100
0x0000d2db      75db           jne 0xd2b8
0x0000d2dd      e9d2fcffff     jmp 0xcfb4
0x0000d2e2      31c0           xor eax, eax
0x0000d2e4      0f1f4000       nop dword [rax]
0x0000d2e8      f644420102     test byte [rdx + rax*2 + 1], 2
0x0000d2ed      741c           je 0xd30b
0x0000d2ef      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d2f4      4989fe         mov r14, rdi
0x0000d2f7      4889ce         mov rsi, rcx
0x0000d2fa      83e13f         and ecx, 0x3f
0x0000d2fd      48c1ee03       shr rsi, 3
0x0000d301      49d3e6         shl r14, cl
0x0000d304      83e618         and esi, 0x18
0x0000d307      4c093433       or qword [rbx + rsi], r14
0x0000d30b      4883c001       add rax, 1
0x0000d30f      483d00010000   cmp rax, 0x100
0x0000d315      75d1           jne 0xd2e8
0x0000d317      e998fcffff     jmp 0xcfb4
0x0000d31c      488d3d5ca300.  lea rdi, str.upper                      ; 0x1767f ; "upper"
0x0000d323      b906000000     mov ecx, 6
0x0000d328      4c89e6         mov rsi, r12
0x0000d32b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d32d      0f97c0         seta al
0x0000d330      1c00           sbb al, 0
0x0000d332      84c0           test al, al
0x0000d334      754c           jne 0xd382
0x0000d336      e8154cffff     call sym.imp.__ctype_b_loc
0x0000d33b      31c9           xor ecx, ecx
0x0000d33d      4885ed         test rbp, rbp
0x0000d340      488b00         mov rax, qword [rax]
0x0000d343      bf01000000     mov edi, 1
0x0000d348      0f8522030000   jne 0xd670
0x0000d34e      f644480101     test byte [rax + rcx*2 + 1], 1
0x0000d353      7411           je 0xd366
0x0000d355      4889ca         mov rdx, rcx
0x0000d358      4889fe         mov rsi, rdi
0x0000d35b      48c1fa06       sar rdx, 6
0x0000d35f      48d3e6         shl rsi, cl
0x0000d362      480934d3       or qword [rbx + rdx*8], rsi
0x0000d366      4883c101       add rcx, 1
0x0000d36a      4881f9000100.  cmp rcx, 0x100
0x0000d371      75db           jne 0xd34e
0x0000d373      e93cfcffff     jmp 0xcfb4
0x0000d378      b80c000000     mov eax, 0xc
0x0000d37d      e934fcffff     jmp 0xcfb6
0x0000d382      488d3d1aa300.  lea rdi, str.blank                      ; 0x176a3 ; "blank"
0x0000d389      b906000000     mov ecx, 6
0x0000d38e      4c89e6         mov rsi, r12
0x0000d391      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d393      0f97c0         seta al
0x0000d396      1c00           sbb al, 0
0x0000d398      84c0           test al, al
0x0000d39a      0f85ee000000   jne 0xd48e
0x0000d3a0      e8ab4bffff     call sym.imp.__ctype_b_loc
0x0000d3a5      31c9           xor ecx, ecx
0x0000d3a7      4885ed         test rbp, rbp
0x0000d3aa      488b10         mov rdx, qword [rax]
0x0000d3ad      be01000000     mov esi, 1
0x0000d3b2      0f859c000000   jne 0xd454
0x0000d3b8      f6044a01       test byte [rdx + rcx*2], 1
0x0000d3bc      7411           je 0xd3cf
0x0000d3be      4889c8         mov rax, rcx
0x0000d3c1      4889f7         mov rdi, rsi
0x0000d3c4      48c1f806       sar rax, 6
0x0000d3c8      48d3e7         shl rdi, cl
0x0000d3cb      48093cc3       or qword [rbx + rax*8], rdi
0x0000d3cf      4883c101       add rcx, 1
0x0000d3d3      4881f9000100.  cmp rcx, 0x100
0x0000d3da      75dc           jne 0xd3b8
0x0000d3dc      e9d3fbffff     jmp 0xcfb4
0x0000d3e1      0f1f80000000.  nop dword [rax]
0x0000d3e8      31c0           xor eax, eax
0x0000d3ea      f644420104     test byte [rdx + rax*2 + 1], 4
0x0000d3ef      741c           je 0xd40d
0x0000d3f1      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d3f6      4989f9         mov r9, rdi
0x0000d3f9      4889ce         mov rsi, rcx
0x0000d3fc      83e13f         and ecx, 0x3f
0x0000d3ff      48c1ee03       shr rsi, 3
0x0000d403      49d3e1         shl r9, cl
0x0000d406      83e618         and esi, 0x18
0x0000d409      4c090c33       or qword [rbx + rsi], r9
0x0000d40d      4883c001       add rax, 1
0x0000d411      483d00010000   cmp rax, 0x100
0x0000d417      75d1           jne 0xd3ea
0x0000d419      e996fbffff     jmp 0xcfb4
0x0000d41e      31c0           xor eax, eax
0x0000d420      f644420120     test byte [rdx + rax*2 + 1], 0x20
0x0000d425      741c           je 0xd443
0x0000d427      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d42c      4989f9         mov r9, rdi
0x0000d42f      4889ce         mov rsi, rcx
0x0000d432      83e13f         and ecx, 0x3f
0x0000d435      48c1ee03       shr rsi, 3
0x0000d439      49d3e1         shl r9, cl
0x0000d43c      83e618         and esi, 0x18
0x0000d43f      4c090c33       or qword [rbx + rsi], r9
0x0000d443      4883c001       add rax, 1
0x0000d447      483d00010000   cmp rax, 0x100
0x0000d44d      75d1           jne 0xd420
0x0000d44f      e960fbffff     jmp 0xcfb4
0x0000d454      31c0           xor eax, eax
0x0000d456      bf01000000     mov edi, 1
0x0000d45b      f6044201       test byte [rdx + rax*2], 1
0x0000d45f      741c           je 0xd47d
0x0000d461      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d466      4989fe         mov r14, rdi
0x0000d469      4889ce         mov rsi, rcx
0x0000d46c      83e13f         and ecx, 0x3f
0x0000d46f      48c1ee03       shr rsi, 3
0x0000d473      49d3e6         shl r14, cl
0x0000d476      83e618         and esi, 0x18
0x0000d479      4c093433       or qword [rbx + rsi], r14
0x0000d47d      4883c001       add rax, 1
0x0000d481      483d00010000   cmp rax, 0x100
0x0000d487      75d2           jne 0xd45b
0x0000d489      e926fbffff     jmp 0xcfb4
0x0000d48e      488d3514a200.  lea rsi, str.graph                      ; 0x176a9 ; "graph"
0x0000d495      4c89e7         mov rdi, r12
0x0000d498      e8a348ffff     call sym.imp.strcmp
0x0000d49d      85c0           test eax, eax
0x0000d49f      7579           jne 0xd51a
0x0000d4a1      e8aa4affff     call sym.imp.__ctype_b_loc
0x0000d4a6      31c9           xor ecx, ecx
0x0000d4a8      4885ed         test rbp, rbp
0x0000d4ab      488b30         mov rsi, qword [rax]
0x0000d4ae      ba01000000     mov edx, 1
0x0000d4b3      752a           jne 0xd4df
0x0000d4b5      66833c4e00     cmp word [rsi + rcx*2], 0
0x0000d4ba      7911           jns 0xd4cd
0x0000d4bc      4889c8         mov rax, rcx
0x0000d4bf      4889d7         mov rdi, rdx
0x0000d4c2      48c1f806       sar rax, 6
0x0000d4c6      48d3e7         shl rdi, cl
0x0000d4c9      48093cc3       or qword [rbx + rax*8], rdi
0x0000d4cd      4883c101       add rcx, 1
0x0000d4d1      4881f9000100.  cmp rcx, 0x100
0x0000d4d8      75db           jne 0xd4b5
0x0000d4da      e9d5faffff     jmp 0xcfb4
0x0000d4df      31c0           xor eax, eax
0x0000d4e1      bf01000000     mov edi, 1
0x0000d4e6      66833c4600     cmp word [rsi + rax*2], 0
0x0000d4eb      791c           jns 0xd509
0x0000d4ed      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d4f2      4989f9         mov r9, rdi
0x0000d4f5      4889ca         mov rdx, rcx
0x0000d4f8      83e13f         and ecx, 0x3f
0x0000d4fb      48c1ea03       shr rdx, 3
0x0000d4ff      49d3e1         shl r9, cl
0x0000d502      83e218         and edx, 0x18
0x0000d505      4c090c13       or qword [rbx + rdx], r9
0x0000d509      4883c001       add rax, 1
0x0000d50d      483d00010000   cmp rax, 0x100
0x0000d513      75d1           jne 0xd4e6
0x0000d515      e99afaffff     jmp 0xcfb4
0x0000d51a      488d358ea100.  lea rsi, str.punct                      ; 0x176af ; "punct"
0x0000d521      4c89e7         mov rdi, r12
0x0000d524      e81748ffff     call sym.imp.strcmp
0x0000d529      85c0           test eax, eax
0x0000d52b      7577           jne 0xd5a4
0x0000d52d      e81e4affff     call sym.imp.__ctype_b_loc
0x0000d532      31c9           xor ecx, ecx
0x0000d534      4885ed         test rbp, rbp
0x0000d537      488b30         mov rsi, qword [rax]
0x0000d53a      ba01000000     mov edx, 1
0x0000d53f      7529           jne 0xd56a
0x0000d541      f6044e04       test byte [rsi + rcx*2], 4
0x0000d545      7411           je 0xd558
0x0000d547      4889c8         mov rax, rcx
0x0000d54a      4889d7         mov rdi, rdx
0x0000d54d      48c1f806       sar rax, 6
0x0000d551      48d3e7         shl rdi, cl
0x0000d554      48093cc3       or qword [rbx + rax*8], rdi
0x0000d558      4883c101       add rcx, 1
0x0000d55c      4881f9000100.  cmp rcx, 0x100
0x0000d563      75dc           jne 0xd541
0x0000d565      e94afaffff     jmp 0xcfb4
0x0000d56a      31c0           xor eax, eax
0x0000d56c      bf01000000     mov edi, 1
0x0000d571      f6044604       test byte [rsi + rax*2], 4
0x0000d575      741c           je 0xd593
0x0000d577      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d57c      4989fe         mov r14, rdi
0x0000d57f      4889ca         mov rdx, rcx
0x0000d582      83e13f         and ecx, 0x3f
0x0000d585      48c1ea03       shr rdx, 3
0x0000d589      49d3e6         shl r14, cl
0x0000d58c      83e218         and edx, 0x18
0x0000d58f      4c093413       or qword [rbx + rdx], r14
0x0000d593      4883c001       add rax, 1
0x0000d597      483d00010000   cmp rax, 0x100
0x0000d59d      75d2           jne 0xd571
0x0000d59f      e910faffff     jmp 0xcfb4
0x0000d5a4      488d350aa100.  lea rsi, str.xdigit                     ; 0x176b5 ; "xdigit"
0x0000d5ab      4c89e7         mov rdi, r12
0x0000d5ae      e88d47ffff     call sym.imp.strcmp
0x0000d5b3      85c0           test eax, eax
0x0000d5b5      7579           jne 0xd630
0x0000d5b7      e89449ffff     call sym.imp.__ctype_b_loc
0x0000d5bc      31c9           xor ecx, ecx
0x0000d5be      4885ed         test rbp, rbp
0x0000d5c1      488b30         mov rsi, qword [rax]
0x0000d5c4      ba01000000     mov edx, 1
0x0000d5c9      752a           jne 0xd5f5
0x0000d5cb      f6444e0110     test byte [rsi + rcx*2 + 1], 0x10
0x0000d5d0      7411           je 0xd5e3
0x0000d5d2      4889c8         mov rax, rcx
0x0000d5d5      4889d7         mov rdi, rdx
0x0000d5d8      48c1f806       sar rax, 6
0x0000d5dc      48d3e7         shl rdi, cl
0x0000d5df      48093cc3       or qword [rbx + rax*8], rdi
0x0000d5e3      4883c101       add rcx, 1
0x0000d5e7      4881f9000100.  cmp rcx, 0x100
0x0000d5ee      75db           jne 0xd5cb
0x0000d5f0      e9bff9ffff     jmp 0xcfb4
0x0000d5f5      31c0           xor eax, eax
0x0000d5f7      bf01000000     mov edi, 1
0x0000d5fc      f644460110     test byte [rsi + rax*2 + 1], 0x10
0x0000d601      741c           je 0xd61f
0x0000d603      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d608      4989f9         mov r9, rdi
0x0000d60b      4889ca         mov rdx, rcx
0x0000d60e      83e13f         and ecx, 0x3f
0x0000d611      48c1ea03       shr rdx, 3
0x0000d615      49d3e1         shl r9, cl
0x0000d618      83e218         and edx, 0x18
0x0000d61b      4c090c13       or qword [rbx + rdx], r9
0x0000d61f      4883c001       add rax, 1
0x0000d623      483d00010000   cmp rax, 0x100
0x0000d629      75d1           jne 0xd5fc
0x0000d62b      e984f9ffff     jmp 0xcfb4
0x0000d630      b804000000     mov eax, 4
0x0000d635      e97cf9ffff     jmp 0xcfb6
0x0000d63a      31c0           xor eax, eax
0x0000d63c      f644420108     test byte [rdx + rax*2 + 1], 8
0x0000d641      741c           je 0xd65f
0x0000d643      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d648      4989fe         mov r14, rdi
0x0000d64b      4889ce         mov rsi, rcx
0x0000d64e      83e13f         and ecx, 0x3f
0x0000d651      48c1ee03       shr rsi, 3
0x0000d655      49d3e6         shl r14, cl
0x0000d658      83e618         and esi, 0x18
0x0000d65b      4c093433       or qword [rbx + rsi], r14
0x0000d65f      4883c001       add rax, 1
0x0000d663      483d00010000   cmp rax, 0x100
0x0000d669      75d1           jne 0xd63c
0x0000d66b      e944f9ffff     jmp 0xcfb4
0x0000d670      31d2           xor edx, edx
0x0000d672      f644500101     test byte [rax + rdx*2 + 1], 1
0x0000d677      741c           je 0xd695
0x0000d679      0fb64c1500     movzx ecx, byte [rbp + rdx]
0x0000d67e      4989f9         mov r9, rdi
0x0000d681      4889ce         mov rsi, rcx
0x0000d684      83e13f         and ecx, 0x3f
0x0000d687      48c1ee03       shr rsi, 3
0x0000d68b      49d3e1         shl r9, cl
0x0000d68e      83e618         and esi, 0x18
0x0000d691      4c090c33       or qword [rbx + rsi], r9
0x0000d695      4883c201       add rdx, 1
0x0000d699      4881fa000100.  cmp rdx, 0x100
0x0000d6a0      75d0           jne 0xd672
0x0000d6a2      e90df9ffff     jmp 0xcfb4
0x0000d6a7      31c0           xor eax, eax
0x0000d6a9      f644420140     test byte [rdx + rax*2 + 1], 0x40
0x0000d6ae      741c           je 0xd6cc
0x0000d6b0      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000d6b5      4989fe         mov r14, rdi
0x0000d6b8      4889ce         mov rsi, rcx
0x0000d6bb      83e13f         and ecx, 0x3f
0x0000d6be      48c1ee03       shr rsi, 3
0x0000d6c2      49d3e6         shl r14, cl
0x0000d6c5      83e618         and esi, 0x18
0x0000d6c8      4c093433       or qword [rbx + rsi], r14
0x0000d6cc      4883c001       add rax, 1
0x0000d6d0      483d00010000   cmp rax, 0x100
0x0000d6d6      75d1           jne 0xd6a9
0x0000d6d8      e9d7f8ffff     jmp 0xcfb4
0x0000d6dd      0f1f00         nop dword [rax]
;-- build_charclass_op:
0x0000d6e0      4157           push r15
0x0000d6e2      4156           push r14
0x0000d6e4      4989d6         mov r14, rdx
0x0000d6e7      4155           push r13
0x0000d6e9      4154           push r12
0x0000d6eb      4989cd         mov r13, rcx
0x0000d6ee      55             push rbp
0x0000d6ef      53             push rbx
0x0000d6f0      4889fd         mov rbp, rdi
0x0000d6f3      bf20000000     mov edi, 0x20                           ; "@"
0x0000d6f8      4589c4         mov r12d, r8d
0x0000d6fb      4883ec58       sub rsp, 0x58
0x0000d6ff      48893424       mov qword [rsp], rsi
0x0000d703      be01000000     mov esi, 1
0x0000d708      4c894c2408     mov qword [rsp + 8], r9
0x0000d70d      64488b042528.  mov rax, qword fs:[0x28]
0x0000d716      4889442448     mov qword [rsp + 0x48], rax
0x0000d71b      31c0           xor eax, eax
0x0000d71d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000d726      e80546ffff     call sym.imp.calloc
0x0000d72b      4885c0         test rax, rax
0x0000d72e      0f84bc010000   je 0xd8f0
0x0000d734      be01000000     mov esi, 1
0x0000d739      bf50000000     mov edi, 0x50                           ; 'P'
0x0000d73e      4889c3         mov rbx, rax
0x0000d741      e8ea45ffff     call sym.imp.calloc
0x0000d746      4885c0         test rax, rax
0x0000d749      4989c7         mov r15, rax
0x0000d74c      0f84ae010000   je 0xd900
0x0000d752      0fb64020       movzx eax, byte [rax + 0x20]
0x0000d756      4883ec08       sub rsp, 8
0x0000d75a      4489e2         mov edx, r12d
0x0000d75d      6a00           push 0
0x0000d75f      83e201         and edx, 1
0x0000d762      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000d767      498d4f48       lea rcx, [r15 + 0x48]
0x0000d76b      4d89f1         mov r9, r14
0x0000d76e      4889de         mov rsi, rbx
0x0000d771      4c8d442428     lea r8, [rsp + 0x28]
0x0000d776      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x0000d779      09d0           or eax, edx
0x0000d77b      498d5718       lea rdx, [r15 + 0x18]
0x0000d77f      41884720       mov byte [r15 + 0x20], al
0x0000d783      e848f7ffff     call sym.build_charclass.isra.29
0x0000d788      85c0           test eax, eax
0x0000d78a      5a             pop rdx
0x0000d78b      59             pop rcx
0x0000d78c      0f858e010000   jne 0xd920
0x0000d792      490fbe4d00     movsx rcx, byte [r13]
0x0000d797      be01000000     mov esi, 1
0x0000d79c      84c9           test cl, cl
0x0000d79e      743a           je 0xd7da
0x0000d7a0      488d413f       lea rax, [rcx + 0x3f]
0x0000d7a4      4885c9         test rcx, rcx
0x0000d7a7      4889ca         mov rdx, rcx
0x0000d7aa      480f49c1       cmovns rax, rcx
0x0000d7ae      48c1fa3f       sar rdx, 0x3f
0x0000d7b2      4983c501       add r13, 1
0x0000d7b6      48c1ea3a       shr rdx, 0x3a
0x0000d7ba      48c1f806       sar rax, 6
0x0000d7be      4801d1         add rcx, rdx
0x0000d7c1      83e13f         and ecx, 0x3f
0x0000d7c4      4829d1         sub rcx, rdx
0x0000d7c7      4889f2         mov rdx, rsi
0x0000d7ca      48d3e2         shl rdx, cl
0x0000d7cd      490fbe4d00     movsx rcx, byte [r13]
0x0000d7d2      480914c3       or qword [rbx + rax*8], rdx
0x0000d7d6      84c9           test cl, cl
0x0000d7d8      75c6           jne 0xd7a0
0x0000d7da      4584e4         test r12b, r12b
0x0000d7dd      7413           je 0xd7f2
0x0000d7df      488d5320       lea rdx, [rbx + 0x20]
0x0000d7e3      4889d8         mov rax, rbx
0x0000d7e6      48f710         not qword [rax]
0x0000d7e9      4883c008       add rax, 8
0x0000d7ed      4839c2         cmp rdx, rax
0x0000d7f0      75f4           jne 0xd7e6
0x0000d7f2      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x0000d7f9      7e18           jle 0xd813
0x0000d7fb      488b4d78       mov rcx, qword [rbp + 0x78]
0x0000d7ff      31c0           xor eax, eax
0x0000d801      488b1401       mov rdx, qword [rcx + rax]
0x0000d805      48211403       and qword [rbx + rax], rdx
0x0000d809      4883c008       add rax, 8
0x0000d80d      4883f820       cmp rax, 0x20                           ; "@"
0x0000d811      75ee           jne 0xd801
0x0000d813      4c8d4c2420     lea r9, [rsp + 0x20]
0x0000d818      4c8d6570       lea r12, [rbp + 0x70]
0x0000d81c      4c8dad800000.  lea r13, [rbp + 0x80]
0x0000d823      31c9           xor ecx, ecx
0x0000d825      31d2           xor edx, edx
0x0000d827      c644242803     mov byte [rsp + 0x28], 3
0x0000d82c      4d89c8         mov r8, r9
0x0000d82f      4c89ee         mov rsi, r13
0x0000d832      4c89e7         mov rdi, r12
0x0000d835      48895c2420     mov qword [rsp + 0x20], rbx
0x0000d83a      4c890c24       mov qword [rsp], r9
0x0000d83e      e84dcbffff     call sym.create_token_tree.isra.16
0x0000d843      4885c0         test rax, rax
0x0000d846      4989c6         mov r14, rax
0x0000d849      0f8491000000   je 0xd8e0
0x0000d84f      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x0000d856      7e78           jle 0xd8d0
0x0000d858      808db0000000.  or byte [rbp + 0xb0], 2
0x0000d85f      4c8b0c24       mov r9, qword [rsp]
0x0000d863      31c9           xor ecx, ecx
0x0000d865      31d2           xor edx, edx
0x0000d867      4c89ee         mov rsi, r13
0x0000d86a      4c89e7         mov rdi, r12
0x0000d86d      c644242806     mov byte [rsp + 0x28], 6
0x0000d872      4c897c2420     mov qword [rsp + 0x20], r15
0x0000d877      4d89c8         mov r8, r9
0x0000d87a      e811cbffff     call sym.create_token_tree.isra.16
0x0000d87f      4885c0         test rax, rax
0x0000d882      745c           je 0xd8e0
0x0000d884      4c8d442430     lea r8, [rsp + 0x30]
0x0000d889      4c89f2         mov rdx, r14
0x0000d88c      4889c1         mov rcx, rax
0x0000d88f      4c89ee         mov rsi, r13
0x0000d892      4c89e7         mov rdi, r12
0x0000d895      c64424380a     mov byte [rsp + 0x38], 0xa
0x0000d89a      e8f1caffff     call sym.create_token_tree.isra.16
0x0000d89f      4989c6         mov r14, rax
0x0000d8a2      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000d8a7      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000d8b0      4c89f0         mov rax, r14
0x0000d8b3      0f858c000000   jne 0xd945
0x0000d8b9      4883c458       add rsp, 0x58
0x0000d8bd      5b             pop rbx
0x0000d8be      5d             pop rbp
0x0000d8bf      415c           pop r12
0x0000d8c1      415d           pop r13
0x0000d8c3      415e           pop r14
0x0000d8c5      415f           pop r15
0x0000d8c7      c3             ret
0x0000d8c8      0f1f84000000.  nop dword [rax + rax]
0x0000d8d0      4c89ff         mov rdi, r15
0x0000d8d3      e818b5ffff     call sym.free_charset
0x0000d8d8      ebc8           jmp 0xd8a2
0x0000d8da      660f1f440000   nop word [rax + rax]
0x0000d8e0      4889df         mov rdi, rbx
0x0000d8e3      e81842ffff     call sym.imp.free
0x0000d8e8      4c89ff         mov rdi, r15
0x0000d8eb      e800b5ffff     call sym.free_charset
0x0000d8f0      488b442408     mov rax, qword [rsp + 8]
0x0000d8f5      4531f6         xor r14d, r14d
0x0000d8f8      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000d8fe      eba2           jmp 0xd8a2
0x0000d900      4889df         mov rdi, rbx
0x0000d903      4531f6         xor r14d, r14d
0x0000d906      e8f541ffff     call sym.imp.free
0x0000d90b      488b442408     mov rax, qword [rsp + 8]
0x0000d910      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000d916      eb8a           jmp 0xd8a2
0x0000d918      0f1f84000000.  nop dword [rax + rax]
0x0000d920      4889df         mov rdi, rbx
0x0000d923      890424         mov dword [rsp], eax
0x0000d926      4531f6         xor r14d, r14d
0x0000d929      e8d241ffff     call sym.imp.free
0x0000d92e      4c89ff         mov rdi, r15
0x0000d931      e8bab4ffff     call sym.free_charset
0x0000d936      488b7c2408     mov rdi, qword [rsp + 8]
0x0000d93b      8b0424         mov eax, dword [rsp]
0x0000d93e      8907           mov dword [rdi], eax
0x0000d940      e95dffffff     jmp 0xd8a2
0x0000d945      e8d642ffff     call sym.imp.__stack_chk_fail
0x0000d94a      660f1f440000   nop word [rax + rax]
;-- re_compile_fastmap_iter.isra.30:
0x0000d950      4157           push r15
0x0000d952      4156           push r14
0x0000d954      4889f8         mov rax, rdi
0x0000d957      4155           push r13
0x0000d959      4154           push r12
0x0000d95b      55             push rbp
0x0000d95c      53             push rbx
0x0000d95d      31db           xor ebx, ebx
0x0000d95f      4889cd         mov rbp, rcx
0x0000d962      4881ec780100.  sub rsp, 0x178
0x0000d969      488b00         mov rax, qword [rax]
0x0000d96c      48897c2430     mov qword [rsp + 0x30], rdi
0x0000d971      4889742420     mov qword [rsp + 0x20], rsi
0x0000d976      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0000d97f      4889bc246801.  mov qword [rsp + 0x168], rdi
0x0000d987      31ff           xor edi, edi
0x0000d989      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000d990      4889542428     mov qword [rsp + 0x28], rdx
0x0000d995      4889442408     mov qword [rsp + 8], rax
0x0000d99a      7517           jne 0xd9b3
0x0000d99c      488b442430     mov rax, qword [rsp + 0x30]
0x0000d9a1      488b4018       mov rax, qword [rax + 0x18]
0x0000d9a5      4889c3         mov rbx, rax
0x0000d9a8      48890424       mov qword [rsp], rax
0x0000d9ac      48c1eb16       shr rbx, 0x16
0x0000d9b0      83e301         and ebx, 1
0x0000d9b3      488b442420     mov rax, qword [rsp + 0x20]
0x0000d9b8      48833800       cmp qword [rax], 0
0x0000d9bc      0f8e0b040000   jle 0xddcd
0x0000d9c2      488d442458     lea rax, [rsp + 0x58]
0x0000d9c7      48c704240000.  mov qword [rsp], 0
0x0000d9cf      4889442440     mov qword [rsp + 0x40], rax
0x0000d9d4      488d442454     lea rax, [rsp + 0x54]
0x0000d9d9      4889442448     mov qword [rsp + 0x48], rax
0x0000d9de      488d442460     lea rax, [rsp + 0x60]
0x0000d9e3      4889442438     mov qword [rsp + 0x38], rax
0x0000d9e8      eb44           jmp 0xda2e
0x0000d9ea      660f1f440000   nop word [rax + rax]
0x0000d9f0      83f803         cmp eax, 3
0x0000d9f3      0f84ed020000   je 0xdce6
0x0000d9f9      83f806         cmp eax, 6
0x0000d9fc      0f8486010000   je 0xdb88
0x0000da02      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x0000da05      80fa05         cmp dl, 5
0x0000da08      0f84f6030000   je 0xde04
0x0000da0e      83f802         cmp eax, 2
0x0000da11      0f844d030000   je 0xdd64
0x0000da17      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000da1c      4883042401     add qword [rsp], 1
0x0000da21      488b0424       mov rax, qword [rsp]
0x0000da25      483b07         cmp rax, qword [rdi]
0x0000da28      0f8d9f030000   jge 0xddcd
0x0000da2e      488b442428     mov rax, qword [rsp + 0x28]
0x0000da33      488b3c24       mov rdi, qword [rsp]
0x0000da37      488b00         mov rax, qword [rax]
0x0000da3a      4c8b24f8       mov r12, qword [rax + rdi*8]
0x0000da3e      488b442408     mov rax, qword [rsp + 8]
0x0000da43      488b08         mov rcx, qword [rax]
0x0000da46      4c89e0         mov rax, r12
0x0000da49      48c1e004       shl rax, 4
0x0000da4d      4889442410     mov qword [rsp + 0x10], rax
0x0000da52      488d3401       lea rsi, [rcx + rax]
0x0000da56      0fb64608       movzx eax, byte [rsi + 8]
0x0000da5a      83f801         cmp eax, 1
0x0000da5d      89c2           mov edx, eax
0x0000da5f      758f           jne 0xd9f0
0x0000da61      440fb62e       movzx r13d, byte [rsi]
0x0000da65      85db           test ebx, ebx
0x0000da67      42c6442d0001   mov byte [rbp + r13], 1
0x0000da6d      7411           je 0xda80
0x0000da6f      e8cc44ffff     call sym.imp.__ctype_tolower_loc
0x0000da74      488b00         mov rax, qword [rax]
0x0000da77      4a6304a8       movsxd rax, dword [rax + r13*4]
0x0000da7b      c644050001     mov byte [rbp + rax], 1
0x0000da80      488b442430     mov rax, qword [rsp + 0x30]
0x0000da85      f6401a40       test byte [rax + 0x1a], 0x40
0x0000da89      748c           je 0xda17
0x0000da8b      488b742408     mov rsi, qword [rsp + 8]
0x0000da90      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000da97      0f8e7affffff   jle 0xda17
0x0000da9d      488b06         mov rax, qword [rsi]
0x0000daa0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000daa5      0fb61438       movzx edx, byte [rax + rdi]
0x0000daa9      88542460       mov byte [rsp + 0x60], dl
0x0000daad      498d542401     lea rdx, [r12 + 1]
0x0000dab2      48395610       cmp qword [rsi + 0x10], rdx
0x0000dab6      0f863a030000   jbe 0xddf6
0x0000dabc      488d4c3810     lea rcx, [rax + rdi + 0x10]
0x0000dac1      8b4108         mov eax, dword [rcx + 8]
0x0000dac4      25ff002000     and eax, 0x2000ff
0x0000dac9      3d01002000     cmp eax, 0x200001
0x0000dace      0f8522030000   jne 0xddf6
0x0000dad4      4883c720       add rdi, 0x20                           ; "@"
0x0000dad8      4989fd         mov r13, rdi
0x0000dadb      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000dae0      488d4701       lea rax, [rdi + 1]
0x0000dae4      eb25           jmp 0xdb0b
0x0000dae6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000daf0      488b0e         mov rcx, qword [rsi]
0x0000daf3      4c01e9         add rcx, r13
0x0000daf6      4983c510       add r13, 0x10
0x0000dafa      8b5108         mov edx, dword [rcx + 8]
0x0000dafd      81e2ff002000   and edx, 0x2000ff
0x0000db03      81fa01002000   cmp edx, 0x200001
0x0000db09      7519           jne 0xdb24
0x0000db0b      0fb611         movzx edx, byte [rcx]
0x0000db0e      4883c001       add rax, 1
0x0000db12      8850ff         mov byte [rax - 1], dl
0x0000db15      4889c2         mov rdx, rax
0x0000db18      4829fa         sub rdx, rdi
0x0000db1b      4c01e2         add rdx, r12
0x0000db1e      48395610       cmp qword [rsi + 0x10], rdx
0x0000db22      77cc           ja 0xdaf0
0x0000db24      488b742438     mov rsi, qword [rsp + 0x38]
0x0000db29      488b4c2440     mov rcx, qword [rsp + 0x40]
0x0000db2e      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000db33      4829f0         sub rax, rsi
0x0000db36      48c701000000.  mov qword [rcx], 0
0x0000db3d      4989c4         mov r12, rax
0x0000db40      4889c2         mov rdx, rax
0x0000db43      e8e89fffff     call sym.rpl_mbrtowc
0x0000db48      4939c4         cmp r12, rax
0x0000db4b      0f85c6feffff   jne 0xda17
0x0000db51      8b7c2454       mov edi, dword [rsp + 0x54]
0x0000db55      e84643ffff     call sym.imp.towlower
0x0000db5a      488b542440     mov rdx, qword [rsp + 0x40]
0x0000db5f      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000db64      89c6           mov esi, eax
0x0000db66      e84542ffff     call sym.imp.wcrtomb
0x0000db6b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000db6f      0f84a2feffff   je 0xda17
0x0000db75      0fb6442460     movzx eax, byte [rsp + 0x60]
0x0000db7a      c644050001     mov byte [rbp + rax], 1
0x0000db7f      e993feffff     jmp 0xda17
0x0000db84      0f1f4000       nop dword [rax]
0x0000db88      488b442408     mov rax, qword [rsp + 8]
0x0000db8d      4c8b26         mov r12, qword [rsi]
0x0000db90      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000db97      7e24           jle 0xdbbd
0x0000db99      49837c244800   cmp qword [r12 + 0x48], 0
0x0000db9f      0f85fa000000   jne 0xdc9f
0x0000dba5      41f644242001   test byte [r12 + 0x20], 1
0x0000dbab      0f85ee000000   jne 0xdc9f
0x0000dbb1      49837c244000   cmp qword [r12 + 0x40], 0
0x0000dbb7      0f85e2000000   jne 0xdc9f
0x0000dbbd      4531ed         xor r13d, r13d
0x0000dbc0      49837c242800   cmp qword [r12 + 0x28], 0
0x0000dbc6      0f8e4bfeffff   jle 0xda17
0x0000dbcc      4d89e7         mov r15, r12
0x0000dbcf      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000dbd4      4989ec         mov r12, rbp
0x0000dbd7      4c89ed         mov rbp, r13
0x0000dbda      4189dd         mov r13d, ebx
0x0000dbdd      eb0e           jmp 0xdbed
0x0000dbdf      4883c501       add rbp, 1
0x0000dbe3      493b6f28       cmp rbp, qword [r15 + 0x28]
0x0000dbe7      0f8da7000000   jge 0xdc94
0x0000dbed      49c706000000.  mov qword [r14], 0
0x0000dbf4      498b07         mov rax, qword [r15]
0x0000dbf7      4c89f2         mov rdx, r14
0x0000dbfa      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000dbff      488d1cad0000.  lea rbx, [rbp*4]
0x0000dc07      8b34a8         mov esi, dword [rax + rbp*4]
0x0000dc0a      e8a141ffff     call sym.imp.wcrtomb
0x0000dc0f      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000dc13      742a           je 0xdc3f
0x0000dc15      0fb6542460     movzx edx, byte [rsp + 0x60]
0x0000dc1a      4585ed         test r13d, r13d
0x0000dc1d      41c6041401     mov byte [r12 + rdx], 1
0x0000dc22      4889542410     mov qword [rsp + 0x10], rdx
0x0000dc27      7416           je 0xdc3f
0x0000dc29      e81243ffff     call sym.imp.__ctype_tolower_loc
0x0000dc2e      488b542410     mov rdx, qword [rsp + 0x10]
0x0000dc33      488b00         mov rax, qword [rax]
0x0000dc36      48630490       movsxd rax, dword [rax + rdx*4]
0x0000dc3a      41c6040401     mov byte [r12 + rax], 1
0x0000dc3f      488b442430     mov rax, qword [rsp + 0x30]
0x0000dc44      f6401a40       test byte [rax + 0x1a], 0x40
0x0000dc48      7495           je 0xdbdf
0x0000dc4a      488b442408     mov rax, qword [rsp + 8]
0x0000dc4f      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000dc56      7e87           jle 0xdbdf
0x0000dc58      498b07         mov rax, qword [r15]
0x0000dc5b      8b3c18         mov edi, dword [rax + rbx]
0x0000dc5e      e83d42ffff     call sym.imp.towlower
0x0000dc63      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000dc68      4c89f2         mov rdx, r14
0x0000dc6b      89c6           mov esi, eax
0x0000dc6d      e83e41ffff     call sym.imp.wcrtomb
0x0000dc72      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000dc76      0f8463ffffff   je 0xdbdf
0x0000dc7c      0fb6442460     movzx eax, byte [rsp + 0x60]
0x0000dc81      4883c501       add rbp, 1
0x0000dc85      41c6040401     mov byte [r12 + rax], 1
0x0000dc8a      493b6f28       cmp rbp, qword [r15 + 0x28]
0x0000dc8e      0f8c59ffffff   jl 0xdbed
0x0000dc94      4489eb         mov ebx, r13d
0x0000dc97      4c89e5         mov rbp, r12
0x0000dc9a      e978fdffff     jmp 0xda17
0x0000dc9f      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000dca4      4c8b6c2448     mov r13, qword [rsp + 0x48]
0x0000dca9      c644245400     mov byte [rsp + 0x54], 0
0x0000dcae      6690           nop
0x0000dcb0      31ff           xor edi, edi
0x0000dcb2      49c704240000.  mov qword [r12], 0
0x0000dcba      4c89e1         mov rcx, r12
0x0000dcbd      ba01000000     mov edx, 1
0x0000dcc2      4c89ee         mov rsi, r13
0x0000dcc5      e8669effff     call sym.rpl_mbrtowc
0x0000dcca      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000dcce      750a           jne 0xdcda
0x0000dcd0      0fb6442454     movzx eax, byte [rsp + 0x54]
0x0000dcd5      c644050001     mov byte [rbp + rax], 1
0x0000dcda      8044245401     add byte [rsp + 0x54], 1
0x0000dcdf      75cf           jne 0xdcb0
0x0000dce1      e931fdffff     jmp 0xda17
0x0000dce6      4989ed         mov r13, rbp
0x0000dce9      4531e4         xor r12d, r12d
0x0000dcec      48c744241800.  mov qword [rsp + 0x18], 0
0x0000dcf5      488b442410     mov rax, qword [rsp + 0x10]
0x0000dcfa      488b742418     mov rsi, qword [rsp + 0x18]
0x0000dcff      4531f6         xor r14d, r14d
0x0000dd02      488b0401       mov rax, qword [rcx + rax]
0x0000dd06      4c8b3c30       mov r15, qword [rax + rsi]
0x0000dd0a      660f1f440000   nop word [rax + rax]
0x0000dd10      4d0fa3f7       bt r15, r14
0x0000dd14      731f           jae 0xdd35
0x0000dd16      85db           test ebx, ebx
0x0000dd18      43c644350001   mov byte [r13 + r14], 1
0x0000dd1e      7415           je 0xdd35
0x0000dd20      e81b42ffff     call sym.imp.__ctype_tolower_loc
0x0000dd25      488b00         mov rax, qword [rax]
0x0000dd28      4b8d1434       lea rdx, [r12 + r14]
0x0000dd2c      48630490       movsxd rax, dword [rax + rdx*4]
0x0000dd30      c644050001     mov byte [rbp + rax], 1
0x0000dd35      4983c601       add r14, 1
0x0000dd39      4983fe40       cmp r14, 0x40                           ; segment.PHDR
0x0000dd3d      75d1           jne 0xdd10
0x0000dd3f      4983c440       add r12, 0x40                           ; segment.PHDR
0x0000dd43      488344241808   add qword [rsp + 0x18], 8
0x0000dd49      4983c540       add r13, 0x40                           ; segment.PHDR
0x0000dd4d      4981fc000100.  cmp r12, 0x100
0x0000dd54      0f84bdfcffff   je 0xda17
0x0000dd5a      488b442408     mov rax, qword [rsp + 8]
0x0000dd5f      488b08         mov rcx, qword [rax]
0x0000dd62      eb91           jmp 0xdcf5
0x0000dd64      660f6f0514a1.  movdqa xmm0, xmmword [0x00017e80]
0x0000dd6c      0f114500       movups xmmword [rbp], xmm0
0x0000dd70      0f114510       movups xmmword [rbp + 0x10], xmm0
0x0000dd74      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0000dd78      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000dd7c      0f114540       movups xmmword [rbp + 0x40], xmm0
0x0000dd80      0f114550       movups xmmword [rbp + 0x50], xmm0
0x0000dd84      0f114560       movups xmmword [rbp + 0x60], xmm0
0x0000dd88      0f114570       movups xmmword [rbp + 0x70], xmm0
0x0000dd8c      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x0000dd93      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x0000dd9a      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x0000dda1      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x0000dda8      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x0000ddaf      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x0000ddb6      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x0000ddbd      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x0000ddc4      488b442430     mov rax, qword [rsp + 0x30]
0x0000ddc9      80483801       or byte [rax + 0x38], 1
0x0000ddcd      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000ddd5      644833042528.  xor rax, qword fs:[0x28]
0x0000ddde      0f858e000000   jne 0xde72
0x0000dde4      4881c4780100.  add rsp, 0x178
0x0000ddeb      5b             pop rbx
0x0000ddec      5d             pop rbp
0x0000dded      415c           pop r12
0x0000ddef      415d           pop r13
0x0000ddf1      415e           pop r14
0x0000ddf3      415f           pop r15
0x0000ddf5      c3             ret
0x0000ddf6      488b442438     mov rax, qword [rsp + 0x38]
0x0000ddfb      4883c001       add rax, 1
0x0000ddff      e920fdffff     jmp 0xdb24
0x0000de04      660f6f0574a0.  movdqa xmm0, xmmword [0x00017e80]
0x0000de0c      83f802         cmp eax, 2
0x0000de0f      0f114500       movups xmmword [rbp], xmm0
0x0000de13      0f114510       movups xmmword [rbp + 0x10], xmm0
0x0000de17      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0000de1b      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000de1f      0f114540       movups xmmword [rbp + 0x40], xmm0
0x0000de23      0f114550       movups xmmword [rbp + 0x50], xmm0
0x0000de27      0f114560       movups xmmword [rbp + 0x60], xmm0
0x0000de2b      0f114570       movups xmmword [rbp + 0x70], xmm0
0x0000de2f      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x0000de36      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x0000de3d      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x0000de44      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x0000de4b      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x0000de52      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x0000de59      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x0000de60      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x0000de67      0f8560ffffff   jne 0xddcd
0x0000de6d      e952ffffff     jmp 0xddc4
0x0000de72      e8a93dffff     call sym.imp.__stack_chk_fail
0x0000de77      660f1f840000.  nop word [rax + rax]
;-- check_node_accept_bytes.isra.31:
0x0000de80      48c1e204       shl rdx, 4
0x0000de84      4155           push r13
0x0000de86      4154           push r12
0x0000de88      4c8d0c17       lea r9, [rdi + rdx]
0x0000de8c      55             push rbp
0x0000de8d      53             push rbx
0x0000de8e      4883ec08       sub rsp, 8
0x0000de92      450fb65908     movzx r11d, byte [r9 + 8]
0x0000de97      4180fb07       cmp r11b, 7
0x0000de9b      0f840f010000   je 0xdfb0
0x0000dea1      83b990000000.  cmp dword [rcx + 0x90], 1
0x0000dea8      0f84c2000000   je 0xdf70
0x0000deae      4889f3         mov rbx, rsi
0x0000deb1      4889cf         mov rdi, rcx
0x0000deb4      4c89c6         mov rsi, r8
0x0000deb7      4989ca         mov r10, rcx
0x0000deba      e861b7ffff     call sym.re_string_char_size_at.part.0
0x0000debf      4180fb05       cmp r11b, 5
0x0000dec3      89c5           mov ebp, eax
0x0000dec5      0f84b5000000   je 0xdf80
0x0000decb      4180fb06       cmp r11b, 6
0x0000decf      0f859b000000   jne 0xdf70
0x0000ded5      83f801         cmp eax, 1
0x0000ded8      0f8e92000000   jle 0xdf70
0x0000dede      4d8b29         mov r13, qword [r9]
0x0000dee1      498b7540       mov rsi, qword [r13 + 0x40]
0x0000dee5      498b5528       mov rdx, qword [r13 + 0x28]
0x0000dee9      4885f6         test rsi, rsi
0x0000deec      750b           jne 0xdef9
0x0000deee      49837d4800     cmp qword [r13 + 0x48], 0
0x0000def3      0f84ef000000   je 0xdfe8
0x0000def9      498b4210       mov rax, qword [r10 + 0x10]
0x0000defd      4885d2         test rdx, rdx
0x0000df00      468b2480       mov r12d, dword [rax + r8*4]
0x0000df04      7e21           jle 0xdf27
0x0000df06      498b4d00       mov rcx, qword [r13]
0x0000df0a      443b21         cmp r12d, dword [rcx]
0x0000df0d      7453           je 0xdf62
0x0000df0f      31c0           xor eax, eax
0x0000df11      eb0b           jmp 0xdf1e
0x0000df13      0f1f440000     nop dword [rax + rax]
0x0000df18      443b2481       cmp r12d, dword [rcx + rax*4]
0x0000df1c      7444           je 0xdf62
0x0000df1e      4883c001       add rax, 1
0x0000df22      4839d0         cmp rax, rdx
0x0000df25      75f1           jne 0xdf18
0x0000df27      498b4548       mov rax, qword [r13 + 0x48]
0x0000df2b      4885c0         test rax, rax
0x0000df2e      0f8ed8000000   jle 0xe00c
0x0000df34      31db           xor ebx, ebx
0x0000df36      eb16           jmp 0xdf4e
0x0000df38      0f1f84000000.  nop dword [rax + rax]
0x0000df40      4883c301       add rbx, 1
0x0000df44      493b5d48       cmp rbx, qword [r13 + 0x48]
0x0000df48      0f8dba000000   jge 0xe008
0x0000df4e      498b4518       mov rax, qword [r13 + 0x18]
0x0000df52      4489e7         mov edi, r12d
0x0000df55      488b34d8       mov rsi, qword [rax + rbx*8]
0x0000df59      e8623cffff     call sym.imp.iswctype
0x0000df5e      85c0           test eax, eax
0x0000df60      74de           je 0xdf40
0x0000df62      41f6452001     test byte [r13 + 0x20], 1
0x0000df67      7409           je 0xdf72
0x0000df69      0f1f80000000.  nop dword [rax]
0x0000df70      31ed           xor ebp, ebp
0x0000df72      4883c408       add rsp, 8
0x0000df76      89e8           mov eax, ebp
0x0000df78      5b             pop rbx
0x0000df79      5d             pop rbp
0x0000df7a      415c           pop r12
0x0000df7c      415d           pop r13
0x0000df7e      c3             ret
0x0000df7f      90             nop
0x0000df80      83f801         cmp eax, 1
0x0000df83      7eeb           jle 0xdf70
0x0000df85      488b03         mov rax, qword [rbx]
0x0000df88      a840           test al, 0x40                           ; segment.PHDR
0x0000df8a      7414           je 0xdfa0
0x0000df8c      a880           test al, 0x80
0x0000df8e      74e2           je 0xdf72
0x0000df90      498b4208       mov rax, qword [r10 + 8]
0x0000df94      42803c0000     cmp byte [rax + r8], 0
0x0000df99      74d5           je 0xdf70
0x0000df9b      ebd5           jmp 0xdf72
0x0000df9d      0f1f00         nop dword [rax]
0x0000dfa0      498b5208       mov rdx, qword [r10 + 8]
0x0000dfa4      42803c020a     cmp byte [rdx + r8], 0xa
0x0000dfa9      75e1           jne 0xdf8c
0x0000dfab      ebc3           jmp 0xdf70
0x0000dfad      0f1f00         nop dword [rax]
0x0000dfb0      488b5108       mov rdx, qword [rcx + 8]
0x0000dfb4      4a8d3402       lea rsi, [rdx + r8]
0x0000dfb8      0fb606         movzx eax, byte [rsi]
0x0000dfbb      3cc1           cmp al, 0xc1
0x0000dfbd      76b1           jbe 0xdf70
0x0000dfbf      488b4958       mov rcx, qword [rcx + 0x58]
0x0000dfc3      498d7801       lea rdi, [r8 + 1]
0x0000dfc7      4839cf         cmp rdi, rcx
0x0000dfca      7da4           jge 0xdf70
0x0000dfcc      3cdf           cmp al, 0xdf
0x0000dfce      420fb6540201   movzx edx, byte [rdx + r8 + 1]
0x0000dfd4      7768           ja 0xe03e
0x0000dfd6      83c280         add edx, 0xffffff80
0x0000dfd9      bd02000000     mov ebp, 2
0x0000dfde      80fa3f         cmp dl, 0x3f
0x0000dfe1      778d           ja 0xdf70
0x0000dfe3      eb8d           jmp 0xdf72
0x0000dfe5      0f1f00         nop dword [rax]
0x0000dfe8      4885d2         test rdx, rdx
0x0000dfeb      0f8508ffffff   jne 0xdef9
0x0000dff1      41f6452001     test byte [r13 + 0x20], 1
0x0000dff6      0f8576ffffff   jne 0xdf72
0x0000dffc      e96fffffff     jmp 0xdf70
0x0000e001      0f1f80000000.  nop dword [rax]
0x0000e008      498b7540       mov rsi, qword [r13 + 0x40]
0x0000e00c      4885f6         test rsi, rsi
0x0000e00f      7ee0           jle 0xdff1
0x0000e011      498b5508       mov rdx, qword [r13 + 8]
0x0000e015      31c0           xor eax, eax
0x0000e017      eb10           jmp 0xe029
0x0000e019      0f1f80000000.  nop dword [rax]
0x0000e020      4883c001       add rax, 1
0x0000e024      4839f0         cmp rax, rsi
0x0000e027      74c8           je 0xdff1
0x0000e029      443b2482       cmp r12d, dword [rdx + rax*4]
0x0000e02d      7cf1           jl 0xe020
0x0000e02f      498b4d10       mov rcx, qword [r13 + 0x10]
0x0000e033      443b2481       cmp r12d, dword [rcx + rax*4]
0x0000e037      7fe7           jg 0xe020
0x0000e039      e924ffffff     jmp 0xdf62
0x0000e03e      3cef           cmp al, 0xef
0x0000e040      7746           ja 0xe088
0x0000e042      3ce0           cmp al, 0xe0
0x0000e044      7509           jne 0xe04f
0x0000e046      80fa9f         cmp dl, 0x9f
0x0000e049      0f8621ffffff   jbe 0xdf70
0x0000e04f      bd03000000     mov ebp, 3
0x0000e054      4863fd         movsxd rdi, ebp
0x0000e057      4901f8         add r8, rdi
0x0000e05a      4c39c1         cmp rcx, r8
0x0000e05d      0f8c0dffffff   jl 0xdf70
0x0000e063      b801000000     mov eax, 1
0x0000e068      eb0d           jmp 0xe077
0x0000e06a      4883c001       add rax, 1
0x0000e06e      4839c7         cmp rdi, rax
0x0000e071      0f8efbfeffff   jle 0xdf72
0x0000e077      0fb61c06       movzx ebx, byte [rsi + rax]
0x0000e07b      8d5380         lea edx, [rbx - 0x80]
0x0000e07e      80fa3f         cmp dl, 0x3f
0x0000e081      76e7           jbe 0xe06a
0x0000e083      e9e8feffff     jmp 0xdf70
0x0000e088      3cf7           cmp al, 0xf7
0x0000e08a      7714           ja 0xe0a0
0x0000e08c      3cf0           cmp al, 0xf0
0x0000e08e      7509           jne 0xe099
0x0000e090      80fa8f         cmp dl, 0x8f
0x0000e093      0f86d7feffff   jbe 0xdf70
0x0000e099      bd04000000     mov ebp, 4
0x0000e09e      ebb4           jmp 0xe054
0x0000e0a0      3cfb           cmp al, 0xfb
0x0000e0a2      7714           ja 0xe0b8
0x0000e0a4      3cf8           cmp al, 0xf8
0x0000e0a6      7509           jne 0xe0b1
0x0000e0a8      80fa87         cmp dl, 0x87
0x0000e0ab      0f86bffeffff   jbe 0xdf70
0x0000e0b1      bd05000000     mov ebp, 5
0x0000e0b6      eb9c           jmp 0xe054
0x0000e0b8      3cfd           cmp al, 0xfd
0x0000e0ba      0f87b0feffff   ja 0xdf70
0x0000e0c0      3cfc           cmp al, 0xfc
0x0000e0c2      7509           jne 0xe0cd
0x0000e0c4      80fa83         cmp dl, 0x83
0x0000e0c7      0f86a3feffff   jbe 0xdf70
0x0000e0cd      bd06000000     mov ebp, 6
0x0000e0d2      eb80           jmp 0xe054
0x0000e0d4      6690           nop
0x0000e0d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival:
0x0000e0e0      4157           push r15
0x0000e0e2      4156           push r14
0x0000e0e4      4989ff         mov r15, rdi
0x0000e0e7      4155           push r13
0x0000e0e9      4154           push r12
0x0000e0eb      55             push rbp
0x0000e0ec      53             push rbx
0x0000e0ed      4889cd         mov rbp, rcx
0x0000e0f0      4889d3         mov rbx, rdx
0x0000e0f3      4881ecd80000.  sub rsp, 0xd8
0x0000e0fa      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000e101      4c8b6e08       mov r13, qword [rsi + 8]
0x0000e105      64488b042528.  mov rax, qword fs:[0x28]
0x0000e10e      48898424c800.  mov qword [rsp + 0xc8], rax
0x0000e116      31c0           xor eax, eax
0x0000e118      4889d0         mov rax, rdx
0x0000e11b      4889742460     mov qword [rsp + 0x60], rsi
0x0000e120      4c89442478     mov qword [rsp + 0x78], r8
0x0000e125      48c1e004       shl rax, 4
0x0000e129      480301         add rax, qword [rcx]
0x0000e12c      4c894c2440     mov qword [rsp + 0x40], r9
0x0000e131      48894c2430     mov qword [rsp + 0x30], rcx
0x0000e136      c78424880000.  mov dword [rsp + 0x88], 0
0x0000e141      488b00         mov rax, qword [rax]
0x0000e144      4889442448     mov qword [rsp + 0x48], rax
0x0000e149      486387e00000.  movsxd rax, dword [rdi + 0xe0]
0x0000e150      4c01c8         add rax, r9
0x0000e153      4c39e8         cmp rax, r13
0x0000e156      0f8d1a060000   jge 0xe776
0x0000e15c      488b442460     mov rax, qword [rsp + 0x60]
0x0000e161      498b97b80000.  mov rdx, qword [r15 + 0xb8]
0x0000e168      498b4f48       mov rcx, qword [r15 + 0x48]
0x0000e16c      4c8b20         mov r12, qword [rax]
0x0000e16f      4c8b7010       mov r14, qword [rax + 0x10]
0x0000e173      4889542468     mov qword [rsp + 0x68], rdx
0x0000e178      48894c2470     mov qword [rsp + 0x70], rcx
0x0000e17d      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x0000e184      4d85e4         test r12, r12
0x0000e187      4d89b7b80000.  mov qword [r15 + 0xb8], r14
0x0000e18e      0f84dc030000   je 0xe570
0x0000e194      498d7424ff     lea rsi, [r12 - 1]
0x0000e199      4d896748       mov qword [r15 + 0x48], r12
0x0000e19d      4c89ff         mov rdi, r15
0x0000e1a0      e80bd3ffff     call sym.re_string_context_at
0x0000e1a5      4939ec         cmp r12, rbp
0x0000e1a8      4189c5         mov r13d, eax
0x0000e1ab      0f84d2030000   je 0xe583
0x0000e1b1      4b8b2ce6       mov rbp, qword [r14 + r12*8]
0x0000e1b5      4885ed         test rbp, rbp
0x0000e1b8      740a           je 0xe1c4
0x0000e1ba      f6456840       test byte [rbp + 0x68], 0x40
0x0000e1be      0f851c050000   jne 0xe6e0
0x0000e1c4      660fefc0       pxor xmm0, xmm0
0x0000e1c8      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000e1d4      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000e1dc      4c3b642440     cmp r12, qword [rsp + 0x40]
0x0000e1e1      0f8d21030000   jge 0xe508
0x0000e1e7      418b8fe00000.  mov ecx, dword [r15 + 0xe0]
0x0000e1ee      85c9           test ecx, ecx
0x0000e1f0      0f8812030000   js 0xe508
0x0000e1f6      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000e1fe      4a8d04e50800.  lea rax, [r12*8 + 8]
0x0000e206      4c892424       mov qword [rsp], r12
0x0000e20a      48c744242000.  mov qword [rsp + 0x20], 0
0x0000e213      48895c2408     mov qword [rsp + 8], rbx
0x0000e218      488d9c24b000.  lea rbx, [rsp + 0xb0]
0x0000e220      4889442410     mov qword [rsp + 0x10], rax
0x0000e225      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000e22c      48895c2418     mov qword [rsp + 0x18], rbx
0x0000e231      488d9c248c00.  lea rbx, [rsp + 0x8c]
0x0000e239      48895c2458     mov qword [rsp + 0x58], rbx
0x0000e23e      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000e243      48c784249800.  mov qword [rsp + 0x98], 0
0x0000e24f      488b3408       mov rsi, qword [rax + rcx]
0x0000e253      4885f6         test rsi, rsi
0x0000e256      0f84bc030000   je 0xe618
0x0000e25c      488b7c2408     mov rdi, qword [rsp + 8]
0x0000e261      4883c608       add rsi, 8
0x0000e265      e886b9ffff     call sym.re_node_set_merge
0x0000e26a      85c0           test eax, eax
0x0000e26c      898424880000.  mov dword [rsp + 0x88], eax
0x0000e273      0f85d7030000   jne 0xe650
0x0000e279      4885ed         test rbp, rbp
0x0000e27c      0f84a6010000   je 0xe428
0x0000e282      48837d2800     cmp qword [rbp + 0x28], 0
0x0000e287      488b442418     mov rax, qword [rsp + 0x18]
0x0000e28c      660fefc0       pxor xmm0, xmm0
0x0000e290      4d8ba7980000.  mov r12, qword [r15 + 0x98]
0x0000e297      c784248c0000.  mov dword [rsp + 0x8c], 0
0x0000e2a2      48c740100000.  mov qword [rax + 0x10], 0
0x0000e2aa      0f2900         movaps xmmword [rax], xmm0
0x0000e2ad      0f8e2d050000   jle 0xe7e0
0x0000e2b3      498d8424d800.  lea rax, [r12 + 0xd8]
0x0000e2bb      31db           xor ebx, ebx
0x0000e2bd      4889442428     mov qword [rsp + 0x28], rax
0x0000e2c2      eb45           jmp 0xe309
0x0000e2c4      0f1f4000       nop dword [rax]
0x0000e2c8      488b1424       mov rdx, qword [rsp]
0x0000e2cc      4c89ff         mov rdi, r15
0x0000e2cf      e8ccd2ffff     call sym.check_node_accept
0x0000e2d4      84c0           test al, al
0x0000e2d6      7423           je 0xe2fb
0x0000e2d8      4e8d2cf50000.  lea r13, [r14*8]
0x0000e2e0      498b442418     mov rax, qword [r12 + 0x18]
0x0000e2e5      488b7c2408     mov rdi, qword [rsp + 8]
0x0000e2ea      4a8b3428       mov rsi, qword [rax + r13]
0x0000e2ee      e89d9effff     call sym.re_node_set_insert
0x0000e2f3      84c0           test al, al
0x0000e2f5      0f843d030000   je 0xe638
0x0000e2fb      4883c301       add rbx, 1
0x0000e2ff      483b5d28       cmp rbx, qword [rbp + 0x28]
0x0000e303      0f8d87030000   jge 0xe690
0x0000e309      488b4530       mov rax, qword [rbp + 0x30]
0x0000e30d      498b3c24       mov rdi, qword [r12]
0x0000e311      4c8b34d8       mov r14, qword [rax + rbx*8]
0x0000e315      4d89f5         mov r13, r14
0x0000e318      49c1e504       shl r13, 4
0x0000e31c      4a8d342f       lea rsi, [rdi + r13]
0x0000e320      f6460a10       test byte [rsi + 0xa], 0x10
0x0000e324      74a2           je 0xe2c8
0x0000e326      4c8b0424       mov r8, qword [rsp]
0x0000e32a      488b742428     mov rsi, qword [rsp + 0x28]
0x0000e32f      4c89f9         mov rcx, r15
0x0000e332      4c89f2         mov rdx, r14
0x0000e335      e846fbffff     call sym.check_node_accept_bytes.isra.31
0x0000e33a      83f801         cmp eax, 1
0x0000e33d      0f8ebd020000   jle 0xe600
0x0000e343      4898           cdqe
0x0000e345      48030424       add rax, qword [rsp]
0x0000e349      498b542418     mov rdx, qword [r12 + 0x18]
0x0000e34e      4e8d2cf50000.  lea r13, [r14*8]
0x0000e356      4a8b14f2       mov rdx, qword [rdx + r14*8]
0x0000e35a      4889c1         mov rcx, rax
0x0000e35d      4889442438     mov qword [rsp + 0x38], rax
0x0000e362      4c8d34c50000.  lea r14, [rax*8]
0x0000e36a      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000e371      488b34c8       mov rsi, qword [rax + rcx*8]
0x0000e375      48c78424b800.  mov qword [rsp + 0xb8], 0
0x0000e381      4885f6         test rsi, rsi
0x0000e384      7423           je 0xe3a9
0x0000e386      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000e38b      4883c608       add rsi, 8
0x0000e38f      4889542450     mov qword [rsp + 0x50], rdx
0x0000e394      e857b8ffff     call sym.re_node_set_merge
0x0000e399      85c0           test eax, eax
0x0000e39b      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000e3a2      488b542450     mov rdx, qword [rsp + 0x50]
0x0000e3a7      7557           jne 0xe400
0x0000e3a9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000e3ae      4889d6         mov rsi, rdx
0x0000e3b1      e8da9dffff     call sym.re_node_set_insert
0x0000e3b6      84c0           test al, al
0x0000e3b8      0f847a020000   je 0xe638
0x0000e3be      4d03b7b80000.  add r14, qword [r15 + 0xb8]
0x0000e3c5      488b542418     mov rdx, qword [rsp + 0x18]
0x0000e3ca      4c89e6         mov rsi, r12
0x0000e3cd      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000e3d2      e809c9ffff     call sym.re_acquire_state
0x0000e3d7      488b542438     mov rdx, qword [rsp + 0x38]
0x0000e3dc      498906         mov qword [r14], rax
0x0000e3df      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000e3e6      48833cd000     cmp qword [rax + rdx*8], 0
0x0000e3eb      0f85effeffff   jne 0xe2e0
0x0000e3f1      8b94248c0000.  mov edx, dword [rsp + 0x8c]
0x0000e3f8      85d2           test edx, edx
0x0000e3fa      0f84e0feffff   je 0xe2e0
0x0000e400      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000e408      e8f336ffff     call sym.imp.free
0x0000e40d      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000e414      85c0           test eax, eax
0x0000e416      898424880000.  mov dword [rsp + 0x88], eax
0x0000e41d      0f852d020000   jne 0xe650
0x0000e423      0f1f440000     nop dword [rax + rax]
0x0000e428      488b0424       mov rax, qword [rsp]
0x0000e42c      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000e435      488d5801       lea rbx, [rax + 1]
0x0000e439      4989dc         mov r12, rbx
0x0000e43c      7456           je 0xe494
0x0000e43e      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x0000e445      488b542448     mov rdx, qword [rsp + 0x48]
0x0000e44a      488b742408     mov rsi, qword [rsp + 8]
0x0000e44f      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000e454      e827bcffff     call sym.check_arrival_expand_ecl
0x0000e459      85c0           test eax, eax
0x0000e45b      898424880000.  mov dword [rsp + 0x88], eax
0x0000e462      0f85e8010000   jne 0xe650
0x0000e468      448b84241001.  mov r8d, dword [rsp + 0x110]
0x0000e470      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000e475      4889da         mov rdx, rbx
0x0000e478      488b742408     mov rsi, qword [rsp + 8]
0x0000e47d      4c89ff         mov rdi, r15
0x0000e480      e83bcbffff     call sym.expand_bkref_cache
0x0000e485      85c0           test eax, eax
0x0000e487      898424880000.  mov dword [rsp + 0x88], eax
0x0000e48e      0f85bc010000   jne 0xe650
0x0000e494      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x0000e49b      488b3424       mov rsi, qword [rsp]
0x0000e49f      4c89ff         mov rdi, r15
0x0000e4a2      e809d0ffff     call sym.re_string_context_at
0x0000e4a7      488b542408     mov rdx, qword [rsp + 8]
0x0000e4ac      488b742430     mov rsi, qword [rsp + 0x30]
0x0000e4b1      488dbc248800.  lea rdi, [rsp + 0x88]
0x0000e4b9      89c1           mov ecx, eax
0x0000e4bb      e860c5ffff     call sym.re_acquire_state_context
0x0000e4c0      4885c0         test rax, rax
0x0000e4c3      4889c5         mov rbp, rax
0x0000e4c6      0f84e4010000   je 0xe6b0
0x0000e4cc      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000e4d3      488b542410     mov rdx, qword [rsp + 0x10]
0x0000e4d8      48c744242000.  mov qword [rsp + 0x20], 0
0x0000e4e1      48892c10       mov qword [rax + rdx], rbp
0x0000e4e5      48395c2440     cmp qword [rsp + 0x40], rbx
0x0000e4ea      7e1c           jle 0xe508
0x0000e4ec      496397e00000.  movsxd rdx, dword [r15 + 0xe0]
0x0000e4f3      488344241008   add qword [rsp + 0x10], 8
0x0000e4f9      483b542420     cmp rdx, qword [rsp + 0x20]
0x0000e4fe      48891c24       mov qword [rsp], rbx
0x0000e502      0f8d36fdffff   jge 0xe23e
0x0000e508      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000e510      e8eb35ffff     call sym.imp.free
0x0000e515      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000e51c      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000e521      488b04d8       mov rax, qword [rax + rbx*8]
0x0000e525      4885c0         test rax, rax
0x0000e528      0f84d7020000   je 0xe805
0x0000e52e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000e533      488b542478     mov rdx, qword [rsp + 0x78]
0x0000e538      488d7018       lea rsi, [rax + 0x18]
0x0000e53c      4c8923         mov qword [rbx], r12
0x0000e53f      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000e544      49899fb80000.  mov qword [r15 + 0xb8], rbx
0x0000e54b      488b5c2470     mov rbx, qword [rsp + 0x70]
0x0000e550      49895f48       mov qword [r15 + 0x48], rbx
0x0000e554      488b7810       mov rdi, qword [rax + 0x10]
0x0000e558      e873b1ffff     call sym.re_node_set_contains.isra.3
0x0000e55d      4885c0         test rax, rax
0x0000e560      0f94c0         sete al
0x0000e563      0fb6c0         movzx eax, al
0x0000e566      e9f9000000     jmp 0xe664
0x0000e56b      0f1f440000     nop dword [rax + rax]
0x0000e570      488d75ff       lea rsi, [rbp - 1]
0x0000e574      49896f48       mov qword [r15 + 0x48], rbp
0x0000e578      4c89ff         mov rdi, r15
0x0000e57b      e830cfffff     call sym.re_string_context_at
0x0000e580      4189c5         mov r13d, eax
0x0000e583      bf08000000     mov edi, 8
0x0000e588      48c784249000.  mov qword [rsp + 0x90], 1
0x0000e594      48c784249800.  mov qword [rsp + 0x98], 1
0x0000e5a0      e8fb37ffff     call sym.imp.malloc
0x0000e5a5      4885c0         test rax, rax
0x0000e5a8      48898424a000.  mov qword [rsp + 0xa0], rax
0x0000e5b0      0f8445020000   je 0xe7fb
0x0000e5b6      488918         mov qword [rax], rbx
0x0000e5b9      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x0000e5c0      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000e5c8      488b542448     mov rdx, qword [rsp + 0x48]
0x0000e5cd      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000e5d2      4989ec         mov r12, rbp
0x0000e5d5      4889de         mov rsi, rbx
0x0000e5d8      c78424880000.  mov dword [rsp + 0x88], 0
0x0000e5e3      e898baffff     call sym.check_arrival_expand_ecl
0x0000e5e8      85c0           test eax, eax
0x0000e5ea      898424880000.  mov dword [rsp + 0x88], eax
0x0000e5f1      0f8416010000   je 0xe70d
0x0000e5f7      eb57           jmp 0xe650
0x0000e5f9      0f1f80000000.  nop dword [rax]
0x0000e600      85c0           test eax, eax
0x0000e602      0f85d0fcffff   jne 0xe2d8
0x0000e608      498b3424       mov rsi, qword [r12]
0x0000e60c      4c01ee         add rsi, r13
0x0000e60f      e9b4fcffff     jmp 0xe2c8
0x0000e614      0f1f4000       nop dword [rax]
0x0000e618      4885ed         test rbp, rbp
0x0000e61b      0f8561fcffff   jne 0xe282
0x0000e621      488b0424       mov rax, qword [rsp]
0x0000e625      488d5801       lea rbx, [rax + 1]
0x0000e629      4989dc         mov r12, rbx
0x0000e62c      e963feffff     jmp 0xe494
0x0000e631      0f1f80000000.  nop dword [rax]
0x0000e638      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000e640      e8bb34ffff     call sym.imp.free
0x0000e645      c78424880000.  mov dword [rsp + 0x88], 0xc             ; [0xc:4]=0
0x0000e650      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000e658      e8a334ffff     call sym.imp.free
0x0000e65d      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000e664      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x0000e66c      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000e675      0f85b1010000   jne 0xe82c
0x0000e67b      4881c4d80000.  add rsp, 0xd8
0x0000e682      5b             pop rbx
0x0000e683      5d             pop rbp
0x0000e684      415c           pop r12
0x0000e686      415d           pop r13
0x0000e688      415e           pop r14
0x0000e68a      415f           pop r15
0x0000e68c      c3             ret
0x0000e68d      0f1f00         nop dword [rax]
0x0000e690      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000e698      e86334ffff     call sym.imp.free
0x0000e69d      c78424880000.  mov dword [rsp + 0x88], 0
0x0000e6a8      e97bfdffff     jmp 0xe428
0x0000e6ad      0f1f00         nop dword [rax]
0x0000e6b0      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000e6b7      85c0           test eax, eax
0x0000e6b9      7595           jne 0xe650
0x0000e6bb      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000e6c2      488b542410     mov rdx, qword [rsp + 0x10]
0x0000e6c7      488344242001   add qword [rsp + 0x20], 1
0x0000e6cd      48c704100000.  mov qword [rax + rdx], 0
0x0000e6d5      e90bfeffff     jmp 0xe4e5
0x0000e6da      660f1f440000   nop word [rax + rax]
0x0000e6e0      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000e6e8      488d7508       lea rsi, [rbp + 8]
0x0000e6ec      4889df         mov rdi, rbx
0x0000e6ef      e83cc1ffff     call sym.re_node_set_init_copy
0x0000e6f4      85c0           test eax, eax
0x0000e6f6      898424880000.  mov dword [rsp + 0x88], eax
0x0000e6fd      0f8561ffffff   jne 0xe664
0x0000e703      f6456840       test byte [rbp + 0x68], 0x40
0x0000e707      0f84cffaffff   je 0xe1dc
0x0000e70d      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000e716      742a           je 0xe742
0x0000e718      448b84241001.  mov r8d, dword [rsp + 0x110]
0x0000e720      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000e725      4c89e2         mov rdx, r12
0x0000e728      4889de         mov rsi, rbx
0x0000e72b      4c89ff         mov rdi, r15
0x0000e72e      e88dc8ffff     call sym.expand_bkref_cache
0x0000e733      85c0           test eax, eax
0x0000e735      898424880000.  mov dword [rsp + 0x88], eax
0x0000e73c      0f850effffff   jne 0xe650
0x0000e742      488b742430     mov rsi, qword [rsp + 0x30]
0x0000e747      488dbc248800.  lea rdi, [rsp + 0x88]
0x0000e74f      4489e9         mov ecx, r13d
0x0000e752      4889da         mov rdx, rbx
0x0000e755      e8c6c2ffff     call sym.re_acquire_state_context
0x0000e75a      4885c0         test rax, rax
0x0000e75d      4889c5         mov rbp, rax
0x0000e760      0f8481000000   je 0xe7e7
0x0000e766      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000e76d      4a892ce0       mov qword [rax + r12*8], rbp
0x0000e771      e966faffff     jmp 0xe1dc
0x0000e776      4c8d6001       lea r12, [rax + 1]
0x0000e77a      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x0000e784      4c29e8         sub rax, r13
0x0000e787      4c39e0         cmp rax, r12
0x0000e78a      7c6f           jl 0xe7fb
0x0000e78c      4f8d742500     lea r14, [r13 + r12]
0x0000e791      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x0000e79b      4939c6         cmp r14, rax
0x0000e79e      775b           ja 0xe7fb
0x0000e7a0      488b442460     mov rax, qword [rsp + 0x60]
0x0000e7a5      4a8d34f50000.  lea rsi, [r14*8]
0x0000e7ad      488b7810       mov rdi, qword [rax + 0x10]
0x0000e7b1      e84a36ffff     call sym.imp.realloc
0x0000e7b6      4885c0         test rax, rax
0x0000e7b9      7440           je 0xe7fb
0x0000e7bb      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000e7c0      4a8d14e50000.  lea rdx, [r12*8]
0x0000e7c8      4a8d3ce8       lea rdi, [rax + r13*8]
0x0000e7cc      31f6           xor esi, esi
0x0000e7ce      48894110       mov qword [rcx + 0x10], rax
0x0000e7d2      4c897108       mov qword [rcx + 8], r14
0x0000e7d6      e8d534ffff     call sym.imp.memset
0x0000e7db      e97cf9ffff     jmp 0xe15c
0x0000e7e0      31ff           xor edi, edi
0x0000e7e2      e9b1feffff     jmp 0xe698
0x0000e7e7      8bb424880000.  mov esi, dword [rsp + 0x88]
0x0000e7ee      85f6           test esi, esi
0x0000e7f0      0f8470ffffff   je 0xe766
0x0000e7f6      e955feffff     jmp 0xe650
0x0000e7fb      b80c000000     mov eax, 0xc
0x0000e800      e95ffeffff     jmp 0xe664
0x0000e805      488b442460     mov rax, qword [rsp + 0x60]
0x0000e80a      4c8920         mov qword [rax], r12
0x0000e80d      488b442468     mov rax, qword [rsp + 0x68]
0x0000e812      498987b80000.  mov qword [r15 + 0xb8], rax
0x0000e819      488b442470     mov rax, qword [rsp + 0x70]
0x0000e81e      49894748       mov qword [r15 + 0x48], rax
0x0000e822      b801000000     mov eax, 1
0x0000e827      e938feffff     jmp 0xe664
0x0000e82c      e8ef33ffff     call sym.imp.__stack_chk_fail
0x0000e831      0f1f440000     nop dword [rax + rax]
0x0000e836      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_regs:
0x0000e840      55             push rbp
0x0000e841      4889e5         mov rbp, rsp
0x0000e844      4157           push r15
0x0000e846      4156           push r14
0x0000e848      4155           push r13
0x0000e84a      4154           push r12
0x0000e84c      4989cd         mov r13, rcx
0x0000e84f      53             push rbx
0x0000e850      4989f4         mov r12, rsi
0x0000e853      4881ecb80000.  sub rsp, 0xb8
0x0000e85a      48899568ffff.  mov qword [rbp - 0x98], rdx
0x0000e861      48c745b00000.  mov qword [rbp - 0x50], 0
0x0000e869      64488b042528.  mov rax, qword fs:[0x28]
0x0000e872      488945c8       mov qword [rbp - 0x38], rax
0x0000e876      31c0           xor eax, eax
0x0000e878      488b07         mov rax, qword [rdi]
0x0000e87b      4584c0         test r8b, r8b
0x0000e87e      48c745b80200.  mov qword [rbp - 0x48], 2
0x0000e886      48c745c00000.  mov qword [rbp - 0x40], 0
0x0000e88e      48898570ffff.  mov qword [rbp - 0x90], rax
0x0000e895      0f84a2070000   je 0xf03d
0x0000e89b      bf60000000     mov edi, 0x60                           ; '`'
0x0000e8a0      e8fb34ffff     call sym.imp.malloc
0x0000e8a5      488d4db0       lea rcx, [rbp - 0x50]
0x0000e8a9      4885c0         test rax, rax
0x0000e8ac      488945c0       mov qword [rbp - 0x40], rax
0x0000e8b0      48898d78ffff.  mov qword [rbp - 0x88], rcx
0x0000e8b7      0f841f070000   je 0xefdc
0x0000e8bd      488b8570ffff.  mov rax, qword [rbp - 0x90]
0x0000e8c4      660fefc0       pxor xmm0, xmm0
0x0000e8c8      48c745a00000.  mov qword [rbp - 0x60], 0
0x0000e8d0      488b98900000.  mov rbx, qword [rax + 0x90]
0x0000e8d7      488b8568ffff.  mov rax, qword [rbp - 0x98]
0x0000e8de      0f294590       movaps xmmword [rbp - 0x70], xmm0
0x0000e8e2      48c1e004       shl rax, 4
0x0000e8e6      483dbf0f0000   cmp rax, 0xfbf
0x0000e8ec      48898548ffff.  mov qword [rbp - 0xb8], rax
0x0000e8f3      0f87ed060000   ja 0xefe6
0x0000e8f9      4883c010       add rax, 0x10
0x0000e8fd      c68537ffffff.  mov byte [rbp - 0xc9], 0
0x0000e904      4829c4         sub rsp, rax
0x0000e907      488d44240f     lea rax, [rsp + 0xf]
0x0000e90c      4883e0f0       and rax, 0xfffffffffffffff0
0x0000e910      48898540ffff.  mov qword [rbp - 0xc0], rax
0x0000e917      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000e91e      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000e925      4c89ee         mov rsi, r13
0x0000e928      e84334ffff     call sym.imp.memcpy
0x0000e92d      488d4590       lea rax, [rbp - 0x70]
0x0000e931      498b4d00       mov rcx, qword [r13]
0x0000e935      48898558ffff.  mov qword [rbp - 0xa8], rax
0x0000e93c      4883c010       add rax, 0x10
0x0000e940      48894d88       mov qword [rbp - 0x78], rcx
0x0000e944      48898538ffff.  mov qword [rbp - 0xc8], rax
0x0000e94b      488d4588       lea rax, [rbp - 0x78]
0x0000e94f      48898550ffff.  mov qword [rbp - 0xb0], rax
0x0000e956      e9de000000     jmp 0xea39
0x0000e95b      0f1f440000     nop dword [rax + rax]
0x0000e960      83fe09         cmp esi, 9
0x0000e963      0f84e7010000   je 0xeb50
0x0000e969      4839c8         cmp rax, rcx
0x0000e96c      750e           jne 0xe97c
0x0000e96e      49399c24b000.  cmp qword [r12 + 0xb0], rbx
0x0000e976      0f84d4030000   je 0xed50
0x0000e97c      4d8bb4249800.  mov r14, qword [r12 + 0x98]
0x0000e984      498b3e         mov rdi, qword [r14]
0x0000e987      4a8d340f       lea rsi, [rdi + r9]
0x0000e98b      0fb64608       movzx eax, byte [rsi + 8]
0x0000e98f      a808           test al, 8
0x0000e991      0f8509010000   jne 0xeaa0
0x0000e997      f6460a10       test byte [rsi + 0xa], 0x10
0x0000e99b      0f85ff010000   jne 0xeba0
0x0000e9a1      3c04           cmp al, 4
0x0000e9a3      0f8437020000   je 0xebe0
0x0000e9a9      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000e9ad      4889ca         mov rdx, rcx
0x0000e9b0      4c89e7         mov rdi, r12
0x0000e9b3      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000e9ba      e8e1cbffff     call sym.check_node_accept
0x0000e9bf      84c0           test al, al
0x0000e9c1      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000e9c8      0f844a040000   je 0xee18
0x0000e9ce      498b4618       mov rax, qword [r14 + 0x18]
0x0000e9d2      488d5101       lea rdx, [rcx + 1]
0x0000e9d6      4a8b1cf8       mov rbx, qword [rax + r15*8]
0x0000e9da      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000e9e2      48895588       mov qword [rbp - 0x78], rdx
0x0000e9e6      743c           je 0xea24
0x0000e9e8      493b9424a800.  cmp rdx, qword [r12 + 0xa8]
0x0000e9f0      0f8f30040000   jg 0xee26
0x0000e9f6      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000e9fe      488b04d0       mov rax, qword [rax + rdx*8]
0x0000ea02      4885c0         test rax, rax
0x0000ea05      0f841b040000   je 0xee26
0x0000ea0b      488b7810       mov rdi, qword [rax + 0x10]
0x0000ea0f      488d7018       lea rsi, [rax + 0x18]
0x0000ea13      4889da         mov rdx, rbx
0x0000ea16      e8b5acffff     call sym.re_node_set_contains.isra.3
0x0000ea1b      4885c0         test rax, rax
0x0000ea1e      0f8402040000   je 0xee26
0x0000ea24      48c745980000.  mov qword [rbp - 0x68], 0
0x0000ea2c      4885db         test rbx, rbx
0x0000ea2f      0f88d5030000   js 0xee0a
0x0000ea35      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000ea39      498b4508       mov rax, qword [r13 + 8]
0x0000ea3d      4839c8         cmp rax, rcx
0x0000ea40      0f8cea040000   jl 0xef30
0x0000ea46      488bbd70ffff.  mov rdi, qword [rbp - 0x90]
0x0000ea4d      4989d9         mov r9, rbx
0x0000ea50      4989df         mov r15, rbx
0x0000ea53      49c1e104       shl r9, 4
0x0000ea57      488b17         mov rdx, qword [rdi]
0x0000ea5a      4c01ca         add rdx, r9
0x0000ea5d      0fb67208       movzx esi, byte [rdx + 8]
0x0000ea61      83fe08         cmp esi, 8
0x0000ea64      0f85f6feffff   jne 0xe960
0x0000ea6a      488b12         mov rdx, qword [rdx]
0x0000ea6d      4883c201       add rdx, 1
0x0000ea71      48399568ffff.  cmp qword [rbp - 0x98], rdx
0x0000ea78      0f8eebfeffff   jle 0xe969
0x0000ea7e      48c1e204       shl rdx, 4
0x0000ea82      4c01ea         add rdx, r13
0x0000ea85      48c74208ffff.  mov qword [rdx + 8], 0xffffffffffffffff
0x0000ea8d      48890a         mov qword [rdx], rcx
0x0000ea90      498b4508       mov rax, qword [r13 + 8]
0x0000ea94      e9d0feffff     jmp 0xe969
0x0000ea99      0f1f80000000.  nop dword [rax]
0x0000eaa0      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000eaa8      488b5588       mov rdx, qword [rbp - 0x78]
0x0000eaac      4889de         mov rsi, rbx
0x0000eaaf      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x0000eab6      4c8b0cd0       mov r9, qword [rax + rdx*8]
0x0000eaba      498b4628       mov rax, qword [r14 + 0x28]
0x0000eabe      488d145b       lea rdx, [rbx + rbx*2]
0x0000eac2      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000eac9      4c8d3cd0       lea r15, [rax + rdx*8]
0x0000eacd      e8be96ffff     call sym.re_node_set_insert
0x0000ead2      84c0           test al, al
0x0000ead4      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000eadb      0f84d7040000   je 0xefb8
0x0000eae1      4d8b5708       mov r10, qword [r15 + 8]
0x0000eae5      4d85d2         test r10, r10
0x0000eae8      0f8e2a030000   jle 0xee18
0x0000eaee      4d8b7f10       mov r15, qword [r15 + 0x10]
0x0000eaf2      4d8b5910       mov r11, qword [r9 + 0x10]
0x0000eaf6      4d8d7118       lea r14, [r9 + 0x18]
0x0000eafa      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x0000eb01      4531c9         xor r9d, r9d
0x0000eb04      4c89a560ffff.  mov qword [rbp - 0xa0], r12
0x0000eb0b      0f1f440000     nop dword [rax + rax]
0x0000eb10      4f8b24cf       mov r12, qword [r15 + r9*8]
0x0000eb14      4c89f6         mov rsi, r14
0x0000eb17      4c89df         mov rdi, r11
0x0000eb1a      4c89e2         mov rdx, r12
0x0000eb1d      e8aeabffff     call sym.re_node_set_contains.isra.3
0x0000eb22      4885c0         test rax, rax
0x0000eb25      740d           je 0xeb34
0x0000eb27      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000eb2b      0f854f010000   jne 0xec80
0x0000eb31      4c89e3         mov rbx, r12
0x0000eb34      4983c101       add r9, 1
0x0000eb38      4d39ca         cmp r10, r9
0x0000eb3b      75d3           jne 0xeb10
0x0000eb3d      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x0000eb44      e9e3feffff     jmp 0xea2c
0x0000eb49      0f1f80000000.  nop dword [rax]
0x0000eb50      488b3a         mov rdi, qword [rdx]
0x0000eb53      488d7701       lea rsi, [rdi + 1]
0x0000eb57      4839b568ffff.  cmp qword [rbp - 0x98], rsi
0x0000eb5e      0f8e05feffff   jle 0xe969
0x0000eb64      48c1e604       shl rsi, 4
0x0000eb68      498d443500     lea rax, [r13 + rsi]
0x0000eb6d      483908         cmp qword [rax], rcx
0x0000eb70      0f8c7a030000   jl 0xeef0
0x0000eb76      f6420a08       test byte [rdx + 0xa], 8
0x0000eb7a      7412           je 0xeb8e
0x0000eb7c      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000eb83      48833c37ff     cmp qword [rdi + rsi], 0xffffffffffffffff
0x0000eb88      0f85ed030000   jne 0xef7b
0x0000eb8e      48894808       mov qword [rax + 8], rcx
0x0000eb92      498b4508       mov rax, qword [r13 + 8]
0x0000eb96      e9cefdffff     jmp 0xe969
0x0000eb9b      0f1f440000     nop dword [rax + rax]
0x0000eba0      4c8b4588       mov r8, qword [rbp - 0x78]
0x0000eba4      498db6d80000.  lea rsi, [r14 + 0xd8]
0x0000ebab      4c89e1         mov rcx, r12
0x0000ebae      4889da         mov rdx, rbx
0x0000ebb1      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000ebb8      e8c3f2ffff     call sym.check_node_accept_bytes.isra.31
0x0000ebbd      4863c8         movsxd rcx, eax
0x0000ebc0      4885c9         test rcx, rcx
0x0000ebc3      0f85f8010000   jne 0xedc1
0x0000ebc9      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000ebd0      498b36         mov rsi, qword [r14]
0x0000ebd3      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000ebd7      4c01ce         add rsi, r9
0x0000ebda      e9cefdffff     jmp 0xe9ad
0x0000ebdf      90             nop
0x0000ebe0      488b06         mov rax, qword [rsi]
0x0000ebe3      4883c001       add rax, 1
0x0000ebe7      48c1e004       shl rax, 4
0x0000ebeb      4c01e8         add rax, r13
0x0000ebee      488b5008       mov rdx, qword [rax + 8]
0x0000ebf2      488b38         mov rdi, qword [rax]
0x0000ebf5      4889d1         mov rcx, rdx
0x0000ebf8      4829f9         sub rcx, rdi
0x0000ebfb      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000ec03      0f84af010000   je 0xedb8
0x0000ec09      4883ffff       cmp rdi, 0xffffffffffffffff
0x0000ec0d      0f8413020000   je 0xee26
0x0000ec13      4883faff       cmp rdx, 0xffffffffffffffff
0x0000ec17      0f8409020000   je 0xee26
0x0000ec1d      4885c9         test rcx, rcx
0x0000ec20      0f844a020000   je 0xee70
0x0000ec26      4c8b7d88       mov r15, qword [rbp - 0x78]
0x0000ec2a      498b542430     mov rdx, qword [r12 + 0x30]
0x0000ec2f      498b442408     mov rax, qword [r12 + 8]
0x0000ec34      4c29fa         sub rdx, r15
0x0000ec37      4839d1         cmp rcx, rdx
0x0000ec3a      0f8fe6010000   jg 0xee26
0x0000ec40      4a8d3438       lea rsi, [rax + r15]
0x0000ec44      4801c7         add rdi, rax
0x0000ec47      4889ca         mov rdx, rcx
0x0000ec4a      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000ec51      e8aa30ffff     call sym.imp.memcmp
0x0000ec56      85c0           test eax, eax
0x0000ec58      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000ec5f      0f85c1010000   jne 0xee26
0x0000ec65      498b4618       mov rax, qword [r14 + 0x18]
0x0000ec69      498d140f       lea rdx, [r15 + rcx]
0x0000ec6d      488b1cd8       mov rbx, qword [rax + rbx*8]
0x0000ec71      e964fdffff     jmp 0xe9da
0x0000ec76      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ec80      488bb538ffff.  mov rsi, qword [rbp - 0xc8]
0x0000ec87      488b7d98       mov rdi, qword [rbp - 0x68]
0x0000ec8b      4889da         mov rdx, rbx
0x0000ec8e      4d89e6         mov r14, r12
0x0000ec91      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x0000ec98      e833aaffff     call sym.re_node_set_contains.isra.3
0x0000ec9d      4885c0         test rax, rax
0x0000eca0      0f85ba010000   jne 0xee60
0x0000eca6      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x0000ecad      4885c9         test rcx, rcx
0x0000ecb0      0f8476fdffff   je 0xea2c
0x0000ecb6      4c8b39         mov r15, qword [rcx]
0x0000ecb9      488b5588       mov rdx, qword [rbp - 0x78]
0x0000ecbd      498d4701       lea rax, [r15 + 1]
0x0000ecc1      483b4108       cmp rax, qword [rcx + 8]
0x0000ecc5      488901         mov qword [rcx], rax
0x0000ecc8      0f847f030000   je 0xf04d
0x0000ecce      488b4110       mov rax, qword [rcx + 0x10]
0x0000ecd2      4f8d3c7f       lea r15, [r15 + r15*2]
0x0000ecd6      49c1e704       shl r15, 4
0x0000ecda      4901c7         add r15, rax
0x0000ecdd      4d897708       mov qword [r15 + 8], r14
0x0000ece1      4c8bb548ffff.  mov r14, qword [rbp - 0xb8]
0x0000ece8      498917         mov qword [r15], rdx
0x0000eceb      4c89f7         mov rdi, r14
0x0000ecee      e8ad30ffff     call sym.imp.malloc
0x0000ecf3      4885c0         test rax, rax
0x0000ecf6      49894710       mov qword [r15 + 0x10], rax
0x0000ecfa      7426           je 0xed22
0x0000ecfc      4c89f2         mov rdx, r14
0x0000ecff      4c89ee         mov rsi, r13
0x0000ed02      4889c7         mov rdi, rax
0x0000ed05      e86630ffff     call sym.imp.memcpy
0x0000ed0a      488bb558ffff.  mov rsi, qword [rbp - 0xa8]
0x0000ed11      498d7f18       lea rdi, [r15 + 0x18]
0x0000ed15      e816bbffff     call sym.re_node_set_init_copy
0x0000ed1a      85c0           test eax, eax
0x0000ed1c      0f840afdffff   je 0xea2c
0x0000ed22      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000ed26      e8d52dffff     call sym.imp.free
0x0000ed2b      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000ed32      0f8593030000   jne 0xf0cb
0x0000ed38      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000ed3f      e84ce0ffff     call sym.free_fail_stack_return.part.24
0x0000ed44      b80c000000     mov eax, 0xc
0x0000ed49      e90b020000     jmp 0xef59
0x0000ed4e      6690           nop
0x0000ed50      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000ed58      0f842e030000   je 0xf08c
0x0000ed5e      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000ed65      4885c9         test rcx, rcx
0x0000ed68      7420           je 0xed8a
0x0000ed6a      4c89e8         mov rax, r13
0x0000ed6d      31d2           xor edx, edx
0x0000ed6f      90             nop
0x0000ed70      48833800       cmp qword [rax], 0
0x0000ed74      7807           js 0xed7d
0x0000ed76      48837808ff     cmp qword [rax + 8], 0xffffffffffffffff
0x0000ed7b      7453           je 0xedd0
0x0000ed7d      4883c201       add rdx, 1
0x0000ed81      4883c010       add rax, 0x10
0x0000ed85      4839d1         cmp rcx, rdx
0x0000ed88      75e6           jne 0xed70
0x0000ed8a      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000ed8e      e86d2dffff     call sym.imp.free
0x0000ed93      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000ed9a      0f8574030000   jne 0xf114
0x0000eda0      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000eda7      e8e4dfffff     call sym.free_fail_stack_return.part.24
0x0000edac      31c0           xor eax, eax
0x0000edae      e9a6010000     jmp 0xef59
0x0000edb3      0f1f440000     nop dword [rax + rax]
0x0000edb8      4885c9         test rcx, rcx
0x0000edbb      0f84af000000   je 0xee70
0x0000edc1      4c8b7d88       mov r15, qword [rbp - 0x78]
0x0000edc5      e99bfeffff     jmp 0xec65
0x0000edca      660f1f440000   nop word [rax + rax]
0x0000edd0      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000edd7      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x0000edde      4d89e8         mov r8, r13
0x0000ede1      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000ede8      488b9550ffff.  mov rdx, qword [rbp - 0xb0]
0x0000edef      488d7710       lea rsi, [rdi + 0x10]
0x0000edf3      e8e8dfffff     call sym.pop_fail_stack.isra.25
0x0000edf8      4989c1         mov r9, rax
0x0000edfb      4889c3         mov rbx, rax
0x0000edfe      4989c7         mov r15, rax
0x0000ee01      49c1e104       shl r9, 4
0x0000ee05      e972fbffff     jmp 0xe97c
0x0000ee0a      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x0000ee0e      0f84a4010000   je 0xefb8
0x0000ee14      0f1f4000       nop dword [rax]
0x0000ee18      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000ee20      0f84b6020000   je 0xf0dc
0x0000ee26      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000ee2d      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000ee34      488d5588       lea rdx, [rbp - 0x78]
0x0000ee38      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x0000ee3f      4d89e8         mov r8, r13
0x0000ee42      488d7710       lea rsi, [rdi + 0x10]
0x0000ee46      e895dfffff     call sym.pop_fail_stack.isra.25
0x0000ee4b      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000ee4f      4889c3         mov rbx, rax
0x0000ee52      e9f4faffff     jmp 0xe94b
0x0000ee57      660f1f840000.  nop word [rax + rax]
0x0000ee60      4c89f3         mov rbx, r14
0x0000ee63      e9c4fbffff     jmp 0xea2c
0x0000ee68      0f1f84000000.  nop dword [rax + rax]
0x0000ee70      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x0000ee77      4889de         mov rsi, rbx
0x0000ee7a      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000ee81      e80a93ffff     call sym.re_node_set_insert
0x0000ee86      84c0           test al, al
0x0000ee88      0f842a010000   je 0xefb8
0x0000ee8e      498b5628       mov rdx, qword [r14 + 0x28]
0x0000ee92      488d045b       lea rax, [rbx + rbx*2]
0x0000ee96      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000ee9a      488d04c2       lea rax, [rdx + rax*8]
0x0000ee9e      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x0000eea5      488b4010       mov rax, qword [rax + 0x10]
0x0000eea9      488b18         mov rbx, qword [rax]
0x0000eeac      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000eeb4      488b04c8       mov rax, qword [rax + rcx*8]
0x0000eeb8      4889da         mov rdx, rbx
0x0000eebb      488b7810       mov rdi, qword [rax + 0x10]
0x0000eebf      488d7018       lea rsi, [rax + 0x18]
0x0000eec3      e808a8ffff     call sym.re_node_set_contains.isra.3
0x0000eec8      4885c0         test rax, rax
0x0000eecb      0f855bfbffff   jne 0xea2c
0x0000eed1      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000eed8      498b36         mov rsi, qword [r14]
0x0000eedb      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x0000eee2      4c01ce         add rsi, r9
0x0000eee5      e9c3faffff     jmp 0xe9ad
0x0000eeea      660f1f440000   nop word [rax + rax]
0x0000eef0      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000eef7      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000eefe      4c89ee         mov rsi, r13
0x0000ef01      48894808       mov qword [rax + 8], rcx
0x0000ef05      4c898d28ffff.  mov qword [rbp - 0xd8], r9
0x0000ef0c      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000ef13      e8582effff     call sym.imp.memcpy
0x0000ef18      498b4508       mov rax, qword [r13 + 8]
0x0000ef1c      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000ef23      4c8b8d28ffff.  mov r9, qword [rbp - 0xd8]
0x0000ef2a      e93afaffff     jmp 0xe969
0x0000ef2f      90             nop
0x0000ef30      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000ef34      e8c72bffff     call sym.imp.free
0x0000ef39      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000ef40      0f85d6000000   jne 0xf01c
0x0000ef46      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000ef4d      4885ff         test rdi, rdi
0x0000ef50      7405           je 0xef57
0x0000ef52      e839deffff     call sym.free_fail_stack_return.part.24
0x0000ef57      31c0           xor eax, eax
0x0000ef59      488b5dc8       mov rbx, qword [rbp - 0x38]
0x0000ef5d      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000ef66      0f85b9010000   jne 0xf125
0x0000ef6c      488d65d8       lea rsp, [rbp - 0x28]
0x0000ef70      5b             pop rbx
0x0000ef71      415c           pop r12
0x0000ef73      415d           pop r13
0x0000ef75      415e           pop r14
0x0000ef77      415f           pop r15
0x0000ef79      5d             pop rbp
0x0000ef7a      c3             ret
0x0000ef7b      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000ef82      4889fe         mov rsi, rdi
0x0000ef85      4c89ef         mov rdi, r13
0x0000ef88      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x0000ef8f      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000ef96      e8d52dffff     call sym.imp.memcpy
0x0000ef9b      498b4508       mov rax, qword [r13 + 8]
0x0000ef9f      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000efa6      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x0000efad      e9b7f9ffff     jmp 0xe969
0x0000efb2      660f1f440000   nop word [rax + rax]
0x0000efb8      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000efbc      e83f2bffff     call sym.imp.free
0x0000efc1      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000efc8      0f85fd000000   jne 0xf0cb
0x0000efce      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000efd6      0f855cfdffff   jne 0xed38
0x0000efdc      b80c000000     mov eax, 0xc
0x0000efe1      e973ffffff     jmp 0xef59
0x0000efe6      488bbd48ffff.  mov rdi, qword [rbp - 0xb8]
0x0000efed      e8ae2dffff     call sym.imp.malloc
0x0000eff2      4885c0         test rax, rax
0x0000eff5      48898540ffff.  mov qword [rbp - 0xc0], rax
0x0000effc      c68537ffffff.  mov byte [rbp - 0xc9], 1
0x0000f003      0f850ef9ffff   jne 0xe917
0x0000f009      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000f010      4885ff         test rdi, rdi
0x0000f013      74c7           je 0xefdc
0x0000f015      e876ddffff     call sym.free_fail_stack_return.part.24
0x0000f01a      ebc0           jmp 0xefdc
0x0000f01c      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000f023      e8d82affff     call sym.imp.free
0x0000f028      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000f02f      4885ff         test rdi, rdi
0x0000f032      0f851affffff   jne 0xef52
0x0000f038      e91affffff     jmp 0xef57
0x0000f03d      48c78578ffff.  mov qword [rbp - 0x88], 0
0x0000f048      e970f8ffff     jmp 0xe8bd
0x0000f04d      488d3440       lea rsi, [rax + rax*2]
0x0000f051      488b8578ffff.  mov rax, qword [rbp - 0x88]
0x0000f058      48899560ffff.  mov qword [rbp - 0xa0], rdx
0x0000f05f      48c1e605       shl rsi, 5
0x0000f063      488b7810       mov rdi, qword [rax + 0x10]
0x0000f067      e8942dffff     call sym.imp.realloc
0x0000f06c      4885c0         test rax, rax
0x0000f06f      7444           je 0xf0b5
0x0000f071      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x0000f078      488b9560ffff.  mov rdx, qword [rbp - 0xa0]
0x0000f07f      48d16108       shl qword [rcx + 8], 1
0x0000f083      48894110       mov qword [rcx + 0x10], rax
0x0000f087      e946fcffff     jmp 0xecd2
0x0000f08c      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000f090      e86b2affff     call sym.imp.free
0x0000f095      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000f09c      0f84b5feffff   je 0xef57
0x0000f0a2      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000f0a9      e8522affff     call sym.imp.free
0x0000f0ae      31c0           xor eax, eax
0x0000f0b0      e9a4feffff     jmp 0xef59
0x0000f0b5      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000f0b9      e8422affff     call sym.imp.free
0x0000f0be      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000f0c5      0f846dfcffff   je 0xed38
0x0000f0cb      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000f0d2      e8292affff     call sym.imp.free
0x0000f0d7      e9f2feffff     jmp 0xefce
0x0000f0dc      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000f0e0      e81b2affff     call sym.imp.free
0x0000f0e5      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000f0ec      b801000000     mov eax, 1
0x0000f0f1      0f8462feffff   je 0xef59
0x0000f0f7      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000f0fe      898578ffffff   mov dword [rbp - 0x88], eax
0x0000f104      e8f729ffff     call sym.imp.free
0x0000f109      8b8578ffffff   mov eax, dword [rbp - 0x88]
0x0000f10f      e945feffff     jmp 0xef59
0x0000f114      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000f11b      e8e029ffff     call sym.imp.free
0x0000f120      e97bfcffff     jmp 0xeda0
0x0000f125      e8f62affff     call sym.imp.__stack_chk_fail
0x0000f12a      660f1f440000   nop word [rax + rax]
;-- get_subexp_sub.isra.32:
0x0000f130      4157           push r15
0x0000f132      4156           push r14
0x0000f134      4989ce         mov r14, rcx
0x0000f137      4155           push r13
0x0000f139      4154           push r12
0x0000f13b      4989f5         mov r13, rsi
0x0000f13e      55             push rbp
0x0000f13f      53             push rbx
0x0000f140      488d7210       lea rsi, [rdx + 0x10]
0x0000f144      4889d5         mov rbp, rdx
0x0000f147      4d89c1         mov r9, r8
0x0000f14a      4d89c4         mov r12, r8
0x0000f14d      4883ec20       sub rsp, 0x20
0x0000f151      488b4a08       mov rcx, qword [rdx + 8]
0x0000f155      4d89f0         mov r8, r14
0x0000f158      6a08           push 8
0x0000f15a      488b12         mov rdx, qword [rdx]
0x0000f15d      4889fb         mov rbx, rdi
0x0000f160      e87befffff     call sym.check_arrival
0x0000f165      85c0           test eax, eax
0x0000f167      5a             pop rdx
0x0000f168      59             pop rcx
0x0000f169      7415           je 0xf180
0x0000f16b      4883c418       add rsp, 0x18
0x0000f16f      5b             pop rbx
0x0000f170      5d             pop rbp
0x0000f171      415c           pop r12
0x0000f173      415d           pop r13
0x0000f175      415e           pop r14
0x0000f177      415f           pop r15
0x0000f179      c3             ret
0x0000f17a      660f1f440000   nop word [rax + rax]
0x0000f180      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x0000f187      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0000f18e      4c8b7d08       mov r15, qword [rbp + 8]
0x0000f192      498b4d00       mov rcx, qword [r13]
0x0000f196      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000f19d      4839d0         cmp rax, rdx
0x0000f1a0      4c89fe         mov rsi, r15
0x0000f1a3      0f8d97000000   jge 0xf240
0x0000f1a9      488d1480       lea rdx, [rax + rax*4]
0x0000f1ad      48c1e203       shl rdx, 3
0x0000f1b1      4885c0         test rax, rax
0x0000f1b4      7e0b           jle 0xf1c1
0x0000f1b6      4c8d4417d8     lea r8, [rdi + rdx - 0x28]
0x0000f1bb      4d3b6008       cmp r12, qword [r8 + 8]
0x0000f1bf      746f           je 0xf230
0x0000f1c1      4801d7         add rdi, rdx
0x0000f1c4      31d2           xor edx, edx
0x0000f1c6      4939cf         cmp r15, rcx
0x0000f1c9      0f94c2         sete dl
0x0000f1cc      4883c001       add rax, 1
0x0000f1d0      4c8937         mov qword [rdi], r14
0x0000f1d3      f7da           neg edx
0x0000f1d5      4c896708       mov qword [rdi + 8], r12
0x0000f1d9      48894f10       mov qword [rdi + 0x10], rcx
0x0000f1dd      66895722       mov word [rdi + 0x22], dx
0x0000f1e1      4c897f18       mov qword [rdi + 0x18], r15
0x0000f1e5      488983c80000.  mov qword [rbx + 0xc8], rax
0x0000f1ec      c6472000       mov byte [rdi + 0x20], 0
0x0000f1f0      4c89f8         mov rax, r15
0x0000f1f3      486393e00000.  movsxd rdx, dword [rbx + 0xe0]
0x0000f1fa      4829c8         sub rax, rcx
0x0000f1fd      4839c2         cmp rdx, rax
0x0000f200      7d0a           jge 0xf20c
0x0000f202      4129cf         sub r15d, ecx
0x0000f205      4489bbe00000.  mov dword [rbx + 0xe0], r15d
0x0000f20c      4c01e6         add rsi, r12
0x0000f20f      492b7500       sub rsi, qword [r13]
0x0000f213      4883c418       add rsp, 0x18
0x0000f217      4889df         mov rdi, rbx
0x0000f21a      5b             pop rbx
0x0000f21b      5d             pop rbp
0x0000f21c      415c           pop r12
0x0000f21e      415d           pop r13
0x0000f220      415e           pop r14
0x0000f222      415f           pop r15
0x0000f224      e9379bffff     jmp sym.clean_state_log_if_needed
0x0000f229      0f1f80000000.  nop dword [rax]
0x0000f230      41c6402001     mov byte [r8 + 0x20], 1
0x0000f235      eb8a           jmp 0xf1c1
0x0000f237      660f1f840000.  nop word [rax + rax]
0x0000f240      488d3492       lea rsi, [rdx + rdx*4]
0x0000f244      48894c2408     mov qword [rsp + 8], rcx
0x0000f249      48c1e604       shl rsi, 4
0x0000f24d      e8ae2bffff     call sym.imp.realloc
0x0000f252      4885c0         test rax, rax
0x0000f255      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f25a      7454           je 0xf2b0
0x0000f25c      488bb3c80000.  mov rsi, qword [rbx + 0xc8]
0x0000f263      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0000f26a      488983d80000.  mov qword [rbx + 0xd8], rax
0x0000f271      48894c2408     mov qword [rsp + 8], rcx
0x0000f276      488d34b6       lea rsi, [rsi + rsi*4]
0x0000f27a      488d1492       lea rdx, [rdx + rdx*4]
0x0000f27e      488d3cf0       lea rdi, [rax + rsi*8]
0x0000f282      48c1e203       shl rdx, 3
0x0000f286      31f6           xor esi, esi
0x0000f288      e8232affff     call sym.imp.memset
0x0000f28d      48d1a3d00000.  shl qword [rbx + 0xd0], 1
0x0000f294      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x0000f29b      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000f2a2      488b7508       mov rsi, qword [rbp + 8]
0x0000f2a6      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f2ab      e9f9feffff     jmp 0xf1a9
0x0000f2b0      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000f2b7      e84428ffff     call sym.imp.free
0x0000f2bc      b80c000000     mov eax, 0xc
0x0000f2c1      e9a5feffff     jmp 0xf16b
0x0000f2c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- transit_state_bkref.isra.34:
0x0000f2d0      4157           push r15
0x0000f2d2      4156           push r14
0x0000f2d4      4155           push r13
0x0000f2d6      4154           push r12
0x0000f2d8      55             push rbp
0x0000f2d9      53             push rbx
0x0000f2da      4881ecb80000.  sub rsp, 0xb8
0x0000f2e1      4c8b7f48       mov r15, qword [rdi + 0x48]
0x0000f2e5      64488b042528.  mov rax, qword fs:[0x28]
0x0000f2ee      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000f2f6      31c0           xor eax, eax
0x0000f2f8      48833e00       cmp qword [rsi], 0
0x0000f2fc      488b87980000.  mov rax, qword [rdi + 0x98]
0x0000f303      4889742448     mov qword [rsp + 0x48], rsi
0x0000f308      4889542440     mov qword [rsp + 0x40], rdx
0x0000f30d      4889442438     mov qword [rsp + 0x38], rax
0x0000f312      0f8e28030000   jle 0xf640
0x0000f318      4a8d04fd0000.  lea rax, [r15*8]
0x0000f320      4989fe         mov r14, rdi
0x0000f323      48c704240000.  mov qword [rsp], 0
0x0000f32b      4c897c2408     mov qword [rsp + 8], r15
0x0000f330      4889442460     mov qword [rsp + 0x60], rax
0x0000f335      488d84249000.  lea rax, [rsp + 0x90]
0x0000f33d      4889442468     mov qword [rsp + 0x68], rax
0x0000f342      488d84248c00.  lea rax, [rsp + 0x8c]
0x0000f34a      4889442478     mov qword [rsp + 0x78], rax
0x0000f34f      eb46           jmp 0xf397
0x0000f351      0f1f80000000.  nop dword [rax]
0x0000f358      a801           test al, 1
0x0000f35a      7424           je 0xf380
0x0000f35c      83e208         and edx, 8
0x0000f35f      751f           jne 0xf380
0x0000f361      f6c120         test cl, 0x20                           ; "@"
0x0000f364      7404           je 0xf36a
0x0000f366      a802           test al, 2
0x0000f368      7416           je 0xf380
0x0000f36a      81e180000000   and ecx, 0x80
0x0000f370      0f849a000000   je 0xf410
0x0000f376      a808           test al, 8
0x0000f378      0f8592000000   jne 0xf410
0x0000f37e      6690           nop
0x0000f380      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000f385      4883042401     add qword [rsp], 1
0x0000f38a      488b0424       mov rax, qword [rsp]
0x0000f38e      483b07         cmp rax, qword [rdi]
0x0000f391      0f8da9020000   jge 0xf640
0x0000f397      488b442440     mov rax, qword [rsp + 0x40]
0x0000f39c      488b3c24       mov rdi, qword [rsp]
0x0000f3a0      488b00         mov rax, qword [rax]
0x0000f3a3      4c8b2cf8       mov r13, qword [rax + rdi*8]
0x0000f3a7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000f3ac      488b07         mov rax, qword [rdi]
0x0000f3af      4c89eb         mov rbx, r13
0x0000f3b2      48c1e304       shl rbx, 4
0x0000f3b6      4801d8         add rax, rbx
0x0000f3b9      80780804       cmp byte [rax + 8], 4
0x0000f3bd      75c1           jne 0xf380
0x0000f3bf      8b6808         mov ebp, dword [rax + 8]
0x0000f3c2      f7c500ff0300   test ebp, 0x3ff00
0x0000f3c8      7446           je 0xf410
0x0000f3ca      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x0000f3d1      488b742408     mov rsi, qword [rsp + 8]
0x0000f3d6      4c89f7         mov rdi, r14
0x0000f3d9      e8d2c0ffff     call sym.re_string_context_at
0x0000f3de      89ea           mov edx, ebp
0x0000f3e0      c1ea08         shr edx, 8
0x0000f3e3      89d1           mov ecx, edx
0x0000f3e5      6681e1ff03     and cx, 0x3ff
0x0000f3ea      f6c204         test dl, 4
0x0000f3ed      0f8565ffffff   jne 0xf358
0x0000f3f3      83e208         and edx, 8
0x0000f3f6      0f8465ffffff   je 0xf361
0x0000f3fc      a801           test al, 1
0x0000f3fe      0f845dffffff   je 0xf361
0x0000f404      e977ffffff     jmp 0xf380
0x0000f409      0f1f80000000.  nop dword [rax]
0x0000f410      498bbec80000.  mov rdi, qword [r14 + 0xc8]
0x0000f417      498b86980000.  mov rax, qword [r14 + 0x98]
0x0000f41e      31c9           xor ecx, ecx
0x0000f420      4d8b5608       mov r10, qword [r14 + 8]
0x0000f424      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000f429      48897c2470     mov qword [rsp + 0x70], rdi
0x0000f42e      4889442450     mov qword [rsp + 0x50], rax
0x0000f433      4839f9         cmp rcx, rdi
0x0000f436      7d53           jge 0xf48b
0x0000f438      488d0439       lea rax, [rcx + rdi]
0x0000f43c      4d8b9ed80000.  mov r11, qword [r14 + 0xd8]
0x0000f443      4889c6         mov rsi, rax
0x0000f446      48c1ee3f       shr rsi, 0x3f
0x0000f44a      4801c6         add rsi, rax
0x0000f44d      48d1fe         sar rsi, 1
0x0000f450      488d04b6       lea rax, [rsi + rsi*4]
0x0000f454      4d3b4cc308     cmp r9, qword [r11 + rax*8 + 8]
0x0000f459      7e2b           jle 0xf486
0x0000f45b      e9c8010000     jmp 0xf628
0x0000f460      488d140e       lea rdx, [rsi + rcx]
0x0000f464      4889d0         mov rax, rdx
0x0000f467      48c1e83f       shr rax, 0x3f
0x0000f46b      4801d0         add rax, rdx
0x0000f46e      48d1f8         sar rax, 1
0x0000f471      488d1480       lea rdx, [rax + rax*4]
0x0000f475      4989c0         mov r8, rax
0x0000f478      4d3b4cd308     cmp r9, qword [r11 + rdx*8 + 8]
0x0000f47d      0f8fad010000   jg 0xf630
0x0000f483      4889c6         mov rsi, rax
0x0000f486      4839ce         cmp rsi, rcx
0x0000f489      7fd5           jg 0xf460
0x0000f48b      48394c2470     cmp qword [rsp + 0x70], rcx
0x0000f490      7e24           jle 0xf4b6
0x0000f492      498b96d80000.  mov rdx, qword [r14 + 0xd8]
0x0000f499      488d0489       lea rax, [rcx + rcx*4]
0x0000f49d      488b7c2408     mov rdi, qword [rsp + 8]
0x0000f4a2      488d04c2       lea rax, [rdx + rax*8]
0x0000f4a6      48397808       cmp qword [rax + 8], rdi
0x0000f4aa      750a           jne 0xf4b6
0x0000f4ac      4883f9ff       cmp rcx, 0xffffffffffffffff
0x0000f4b0      0f85d0010000   jne 0xf686
0x0000f4b6      488b442450     mov rax, qword [rsp + 0x50]
0x0000f4bb      4983bee80000.  cmp qword [r14 + 0xe8], 0
0x0000f4c3      488b10         mov rdx, qword [rax]
0x0000f4c6      488b041a       mov rax, qword [rdx + rbx]
0x0000f4ca      4889442458     mov qword [rsp + 0x58], rax
0x0000f4cf      0f8eb6010000   jle 0xf68b
0x0000f4d5      4c896c2430     mov qword [rsp + 0x30], r13
0x0000f4da      48c744242800.  mov qword [rsp + 0x28], 0
0x0000f4e3      4d89d5         mov r13, r10
0x0000f4e6      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x0000f4ed      488b5c2428     mov rbx, qword [rsp + 0x28]
0x0000f4f2      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000f4f7      488b1cd8       mov rbx, qword [rax + rbx*8]
0x0000f4fb      488b4308       mov rax, qword [rbx + 8]
0x0000f4ff      48c1e004       shl rax, 4
0x0000f503      483b3c02       cmp rdi, qword [rdx + rax]
0x0000f507      7427           je 0xf530
0x0000f509      488344242801   add qword [rsp + 0x28], 1
0x0000f50f      488b442428     mov rax, qword [rsp + 0x28]
0x0000f514      493b86e80000.  cmp rax, qword [r14 + 0xe8]
0x0000f51b      0f8d70060000   jge 0xfb91
0x0000f521      488b442450     mov rax, qword [rsp + 0x50]
0x0000f526      488b10         mov rdx, qword [rax]
0x0000f529      ebbb           jmp 0xf4e6
0x0000f52b      0f1f440000     nop dword [rax + rax]
0x0000f530      48837b2000     cmp qword [rbx + 0x20], 0
0x0000f535      4c8b1b         mov r11, qword [rbx]
0x0000f538      0f8e64060000   jle 0xfba2
0x0000f53e      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f543      4d89e8         mov r8, r13
0x0000f546      31ed           xor ebp, ebp
0x0000f548      4989dd         mov r13, rbx
0x0000f54b      4889cb         mov rbx, rcx
0x0000f54e      eb6c           jmp 0xf5bc
0x0000f550      4b8d3418       lea rsi, [r8 + r11]
0x0000f554      498d3c18       lea rdi, [r8 + rbx]
0x0000f558      4c894c2420     mov qword [rsp + 0x20], r9
0x0000f55d      4c895c2418     mov qword [rsp + 0x18], r11
0x0000f562      4c89442410     mov qword [rsp + 0x10], r8
0x0000f567      e89427ffff     call sym.imp.memcmp
0x0000f56c      85c0           test eax, eax
0x0000f56e      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000f573      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000f578      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x0000f57d      0f85c5040000   jne 0xfa48
0x0000f583      4c8b442408     mov r8, qword [rsp + 8]
0x0000f588      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000f58d      4c89ca         mov rdx, r9
0x0000f590      4c89ee         mov rsi, r13
0x0000f593      4c89f7         mov rdi, r14
0x0000f596      e895fbffff     call sym.get_subexp_sub.isra.32
0x0000f59b      83f801         cmp eax, 1
0x0000f59e      4d8b4608       mov r8, qword [r14 + 8]
0x0000f5a2      0f87a0000000   ja 0xf648
0x0000f5a8      4883c501       add rbp, 1
0x0000f5ac      493b6d20       cmp rbp, qword [r13 + 0x20]
0x0000f5b0      4d89fb         mov r11, r15
0x0000f5b3      4c89e3         mov rbx, r12
0x0000f5b6      0f8dac020000   jge 0xf868
0x0000f5bc      498b4528       mov rax, qword [r13 + 0x28]
0x0000f5c0      4c8b0ce8       mov r9, qword [rax + rbp*8]
0x0000f5c4      4d8b7908       mov r15, qword [r9 + 8]
0x0000f5c8      4c89fa         mov rdx, r15
0x0000f5cb      4c29da         sub rdx, r11
0x0000f5ce      4885d2         test rdx, rdx
0x0000f5d1      4c8d241a       lea r12, [rdx + rbx]
0x0000f5d5      7eac           jle 0xf583
0x0000f5d7      4d396630       cmp qword [r14 + 0x30], r12
0x0000f5db      0f8d6fffffff   jge 0xf550
0x0000f5e1      4d396658       cmp qword [r14 + 0x58], r12
0x0000f5e5      4889542418     mov qword [rsp + 0x18], rdx
0x0000f5ea      4c894c2410     mov qword [rsp + 0x10], r9
0x0000f5ef      0f8c53040000   jl 0xfa48
0x0000f5f5      4c89e6         mov rsi, r12
0x0000f5f8      4c89f7         mov rdi, r14
0x0000f5fb      4c895c2420     mov qword [rsp + 0x20], r11
0x0000f600      e85b97ffff     call sym.clean_state_log_if_needed
0x0000f605      85c0           test eax, eax
0x0000f607      753f           jne 0xf648
0x0000f609      4d8b4608       mov r8, qword [r14 + 8]
0x0000f60d      488b542418     mov rdx, qword [rsp + 0x18]
0x0000f612      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000f617      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0000f61c      e92fffffff     jmp 0xf550
0x0000f621      0f1f80000000.  nop dword [rax]
0x0000f628      4989f0         mov r8, rsi
0x0000f62b      4889fe         mov rsi, rdi
0x0000f62e      6690           nop
0x0000f630      498d4801       lea rcx, [r8 + 1]
0x0000f634      4889f7         mov rdi, rsi
0x0000f637      e9f7fdffff     jmp 0xf433
0x0000f63c      0f1f4000       nop dword [rax]
0x0000f640      31c0           xor eax, eax
0x0000f642      660f1f440000   nop word [rax + rax]
0x0000f648      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000f650      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000f659      0f854d050000   jne 0xfbac
0x0000f65f      4881c4b80000.  add rsp, 0xb8
0x0000f666      5b             pop rbx
0x0000f667      5d             pop rbp
0x0000f668      415c           pop r12
0x0000f66a      415d           pop r13
0x0000f66c      415e           pop r14
0x0000f66e      415f           pop r15
0x0000f670      c3             ret
0x0000f671      0f1f80000000.  nop dword [rax]
0x0000f678      4883c028       add rax, 0x28
0x0000f67c      8078f800       cmp byte [rax - 8], 0
0x0000f680      0f8430feffff   je 0xf4b6
0x0000f686      4c3b28         cmp r13, qword [rax]
0x0000f689      75ed           jne 0xf678
0x0000f68b      488b442470     mov rax, qword [rsp + 0x70]
0x0000f690      4839442470     cmp qword [rsp + 0x70], rax
0x0000f695      c784248c0000.  mov dword [rsp + 0x8c], 0
0x0000f6a0      0f8ddafcffff   jge 0xf380
0x0000f6a6      4a8d04ed0000.  lea rax, [r13*8]
0x0000f6ae      4c8b642470     mov r12, qword [rsp + 0x70]
0x0000f6b3      488b6c2438     mov rbp, qword [rsp + 0x38]
0x0000f6b8      4889442450     mov qword [rsp + 0x50], rax
0x0000f6bd      4b8d446d00     lea rax, [r13 + r13*2]
0x0000f6c2      4f8d04a4       lea r8, [r12 + r12*4]
0x0000f6c6      48c1e003       shl rax, 3
0x0000f6ca      4889442458     mov qword [rsp + 0x58], rax
0x0000f6cf      4e8d3cc50000.  lea r15, [r8*8]
0x0000f6d7      e931010000     jmp 0xf80d
0x0000f6dc      0f1f4000       nop dword [rax]
0x0000f6e0      488b4d28       mov rcx, qword [rbp + 0x28]
0x0000f6e4      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000f6e9      488b4c3910     mov rcx, qword [rcx + rdi + 0x10]
0x0000f6ee      488b09         mov rcx, qword [rcx]
0x0000f6f1      488d0c49       lea rcx, [rcx + rcx*2]
0x0000f6f5      488d0cca       lea rcx, [rdx + rcx*8]
0x0000f6f9      48894c2418     mov qword [rsp + 0x18], rcx
0x0000f6fe      48035c2408     add rbx, qword [rsp + 8]
0x0000f703      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x0000f70a      4c89f7         mov rdi, r14
0x0000f70d      4829c3         sub rbx, rax
0x0000f710      488d73ff       lea rsi, [rbx - 1]
0x0000f714      e897bdffff     call sym.re_string_context_at
0x0000f719      488b742460     mov rsi, qword [rsp + 0x60]
0x0000f71e      89c1           mov ecx, eax
0x0000f720      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0000f727      4c8d14dd0000.  lea r10, [rbx*8]
0x0000f72f      48c744241000.  mov qword [rsp + 0x10], 0
0x0000f738      4e8d1c10       lea r11, [rax + r10]
0x0000f73c      488b0430       mov rax, qword [rax + rsi]
0x0000f740      498b13         mov rdx, qword [r11]
0x0000f743      4885c0         test rax, rax
0x0000f746      7409           je 0xf751
0x0000f748      488b4010       mov rax, qword [rax + 0x10]
0x0000f74c      4889442410     mov qword [rsp + 0x10], rax
0x0000f751      4885d2         test rdx, rdx
0x0000f754      0f8416030000   je 0xfa70
0x0000f75a      488b7250       mov rsi, qword [rdx + 0x50]
0x0000f75e      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000f763      488b542418     mov rdx, qword [rsp + 0x18]
0x0000f768      4c89542430     mov qword [rsp + 0x30], r10
0x0000f76d      894c2428       mov dword [rsp + 0x28], ecx
0x0000f771      e84ab1ffff     call sym.re_node_set_init_union
0x0000f776      85c0           test eax, eax
0x0000f778      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000f77f      8b4c2428       mov ecx, dword [rsp + 0x28]
0x0000f783      4c8b542430     mov r10, qword [rsp + 0x30]
0x0000f788      0f858a030000   jne 0xfb18
0x0000f78e      4d0396b80000.  add r10, qword [r14 + 0xb8]
0x0000f795      488b542468     mov rdx, qword [rsp + 0x68]
0x0000f79a      4889ee         mov rsi, rbp
0x0000f79d      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000f7a2      4c89542428     mov qword [rsp + 0x28], r10
0x0000f7a7      e874b2ffff     call sym.re_acquire_state_context
0x0000f7ac      4c8b542428     mov r10, qword [rsp + 0x28]
0x0000f7b1      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000f7b9      498902         mov qword [r10], rax
0x0000f7bc      e83f23ffff     call sym.imp.free
0x0000f7c1      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x0000f7c8      48833cda00     cmp qword [rdx + rbx*8], 0
0x0000f7cd      0f84ce020000   je 0xfaa1
0x0000f7d3      48837c242000   cmp qword [rsp + 0x20], 0
0x0000f7d9      751d           jne 0xf7f8
0x0000f7db      488b442460     mov rax, qword [rsp + 0x60]
0x0000f7e0      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000f7e5      488b0402       mov rax, qword [rdx + rax]
0x0000f7e9      48395810       cmp qword [rax + 0x10], rbx
0x0000f7ed      0f8fc5020000   jg 0xfab8
0x0000f7f3      0f1f440000     nop dword [rax + rax]
0x0000f7f8      4983c401       add r12, 1
0x0000f7fc      4983c728       add r15, 0x28
0x0000f800      4d3ba6c80000.  cmp r12, qword [r14 + 0xc8]
0x0000f807      0f8d73fbffff   jge 0xf380
0x0000f80d      498b86d80000.  mov rax, qword [r14 + 0xd8]
0x0000f814      4c01f8         add rax, r15
0x0000f817      4c3b28         cmp r13, qword [rax]
0x0000f81a      75dc           jne 0xf7f8
0x0000f81c      488b7c2408     mov rdi, qword [rsp + 8]
0x0000f821      483b7808       cmp rdi, qword [rax + 8]
0x0000f825      75d1           jne 0xf7f8
0x0000f827      488b5818       mov rbx, qword [rax + 0x18]
0x0000f82b      488b4010       mov rax, qword [rax + 0x10]
0x0000f82f      488b5530       mov rdx, qword [rbp + 0x30]
0x0000f833      4889d9         mov rcx, rbx
0x0000f836      4829c1         sub rcx, rax
0x0000f839      48894c2420     mov qword [rsp + 0x20], rcx
0x0000f83e      0f849cfeffff   je 0xf6e0
0x0000f844      488b4d18       mov rcx, qword [rbp + 0x18]
0x0000f848      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000f84d      488b0c39       mov rcx, qword [rcx + rdi]
0x0000f851      488d0c49       lea rcx, [rcx + rcx*2]
0x0000f855      488d0cca       lea rcx, [rdx + rcx*8]
0x0000f859      48894c2418     mov qword [rsp + 0x18], rcx
0x0000f85e      e99bfeffff     jmp 0xf6fe
0x0000f863      0f1f440000     nop dword [rax + rax]
0x0000f868      4c89eb         mov rbx, r13
0x0000f86b      4d89c5         mov r13, r8
0x0000f86e      4d8d5f01       lea r11, [r15 + 1]
0x0000f872      4c395c2408     cmp qword [rsp + 8], r11
0x0000f877      0f8c8cfcffff   jl 0xf509
0x0000f87d      4c89e0         mov rax, r12
0x0000f880      4e8d3cdd0000.  lea r15, [r11*8]
0x0000f888      4989dc         mov r12, rbx
0x0000f88b      4c89db         mov rbx, r11
0x0000f88e      4d89eb         mov r11, r13
0x0000f891      4989c5         mov r13, rax
0x0000f894      0f1f4000       nop dword [rax]
0x0000f898      4889d8         mov rax, rbx
0x0000f89b      492b0424       sub rax, qword [r12]
0x0000f89f      4885c0         test rax, rax
0x0000f8a2      7e21           jle 0xf8c5
0x0000f8a4      4d396e30       cmp qword [r14 + 0x30], r13
0x0000f8a8      0f8e83020000   jle 0xfb31
0x0000f8ae      410fb64c1bff   movzx ecx, byte [r11 + rbx - 1]
0x0000f8b4      498d4501       lea rax, [r13 + 1]
0x0000f8b8      43380c2b       cmp byte [r11 + r13], cl
0x0000f8bc      0f8530010000   jne 0xf9f2
0x0000f8c2      4989c5         mov r13, rax
0x0000f8c5      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0000f8cc      4a8b0438       mov rax, qword [rax + r15]
0x0000f8d0      4885c0         test rax, rax
0x0000f8d3      0f8406010000   je 0xf9df
0x0000f8d9      488b4810       mov rcx, qword [rax + 0x10]
0x0000f8dd      4885c9         test rcx, rcx
0x0000f8e0      0f8ef9000000   jle 0xf9df
0x0000f8e6      488b7818       mov rdi, qword [rax + 0x18]
0x0000f8ea      488b442450     mov rax, qword [rsp + 0x50]
0x0000f8ef      31d2           xor edx, edx
0x0000f8f1      4c8b442458     mov r8, qword [rsp + 0x58]
0x0000f8f6      488b30         mov rsi, qword [rax]
0x0000f8f9      eb12           jmp 0xf90d
0x0000f8fb      0f1f440000     nop dword [rax + rax]
0x0000f900      4883c201       add rdx, 1
0x0000f904      4839d1         cmp rcx, rdx
0x0000f907      0f84d2000000   je 0xf9df
0x0000f90d      488b2cd7       mov rbp, qword [rdi + rdx*8]
0x0000f911      4889e8         mov rax, rbp
0x0000f914      48c1e004       shl rax, 4
0x0000f918      4801f0         add rax, rsi
0x0000f91b      80780809       cmp byte [rax + 8], 9
0x0000f91f      75df           jne 0xf900
0x0000f921      4c3b00         cmp r8, qword [rax]
0x0000f924      75da           jne 0xf900
0x0000f926      4883fdff       cmp rbp, 0xffffffffffffffff
0x0000f92a      0f84af000000   je 0xf9df
0x0000f930      498b742410     mov rsi, qword [r12 + 0x10]
0x0000f935      498b0c24       mov rcx, qword [r12]
0x0000f939      4885f6         test rsi, rsi
0x0000f93c      0f84be000000   je 0xfa00
0x0000f942      4c895c2410     mov qword [rsp + 0x10], r11
0x0000f947      498b542408     mov rdx, qword [r12 + 8]
0x0000f94c      4883ec08       sub rsp, 8
0x0000f950      6a09           push 9
0x0000f952      4989d9         mov r9, rbx
0x0000f955      4989e8         mov r8, rbp
0x0000f958      4c89f7         mov rdi, r14
0x0000f95b      e880e7ffff     call sym.check_arrival
0x0000f960      5a             pop rdx
0x0000f961      83f801         cmp eax, 1
0x0000f964      59             pop rcx
0x0000f965      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000f96a      7473           je 0xf9df
0x0000f96c      85c0           test eax, eax
0x0000f96e      0f85d4fcffff   jne 0xf648
0x0000f974      498b442420     mov rax, qword [r12 + 0x20]
0x0000f979      493b442418     cmp rax, qword [r12 + 0x18]
0x0000f97e      0f84d4010000   je 0xfb58
0x0000f984      be28000000     mov esi, 0x28                           ; '('
0x0000f989      bf01000000     mov edi, 1
0x0000f98e      e89d23ffff     call sym.imp.calloc
0x0000f993      4885c0         test rax, rax
0x0000f996      0f849d000000   je 0xfa39
0x0000f99c      498b542420     mov rdx, qword [r12 + 0x20]
0x0000f9a1      498b4c2428     mov rcx, qword [r12 + 0x28]
0x0000f9a6      4c89e6         mov rsi, r12
0x0000f9a9      4c8b442408     mov r8, qword [rsp + 8]
0x0000f9ae      4c89f7         mov rdi, r14
0x0000f9b1      488904d1       mov qword [rcx + rdx*8], rax
0x0000f9b5      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000f9ba      4883c201       add rdx, 1
0x0000f9be      488928         mov qword [rax], rbp
0x0000f9c1      48895808       mov qword [rax + 8], rbx
0x0000f9c5      4989542420     mov qword [r12 + 0x20], rdx
0x0000f9ca      4889c2         mov rdx, rax
0x0000f9cd      e85ef7ffff     call sym.get_subexp_sub.isra.32
0x0000f9d2      83f801         cmp eax, 1
0x0000f9d5      4d8b5e08       mov r11, qword [r14 + 8]
0x0000f9d9      0f8769fcffff   ja 0xf648
0x0000f9df      4883c301       add rbx, 1
0x0000f9e3      4983c708       add r15, 8
0x0000f9e7      48395c2408     cmp qword [rsp + 8], rbx
0x0000f9ec      0f8da6feffff   jge 0xf898
0x0000f9f2      4d89dd         mov r13, r11
0x0000f9f5      e90ffbffff     jmp 0xf509
0x0000f9fa      660f1f440000   nop word [rax + rax]
0x0000fa00      4889de         mov rsi, rbx
0x0000fa03      bf18000000     mov edi, 0x18
0x0000fa08      4c895c2418     mov qword [rsp + 0x18], r11
0x0000fa0d      4829ce         sub rsi, rcx
0x0000fa10      48894c2410     mov qword [rsp + 0x10], rcx
0x0000fa15      4883c601       add rsi, 1
0x0000fa19      e81223ffff     call sym.imp.calloc
0x0000fa1e      4885c0         test rax, rax
0x0000fa21      4889c6         mov rsi, rax
0x0000fa24      4989442410     mov qword [r12 + 0x10], rax
0x0000fa29      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000fa2e      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000fa33      0f8509ffffff   jne 0xf942
0x0000fa39      b80c000000     mov eax, 0xc
0x0000fa3e      e905fcffff     jmp 0xf648
0x0000fa43      0f1f440000     nop dword [rax + rax]
0x0000fa48      4889d9         mov rcx, rbx
0x0000fa4b      4c89eb         mov rbx, r13
0x0000fa4e      4d89c5         mov r13, r8
0x0000fa51      48396b20       cmp qword [rbx + 0x20], rbp
0x0000fa55      0f8faefaffff   jg 0xf509
0x0000fa5b      4885ed         test rbp, rbp
0x0000fa5e      4989cc         mov r12, rcx
0x0000fa61      0f840bfeffff   je 0xf872
0x0000fa67      4d89df         mov r15, r11
0x0000fa6a      e9fffdffff     jmp 0xf86e
0x0000fa6f      90             nop
0x0000fa70      488b542418     mov rdx, qword [rsp + 0x18]
0x0000fa75      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000fa7a      4889ee         mov rsi, rbp
0x0000fa7d      4c895c2428     mov qword [rsp + 0x28], r11
0x0000fa82      e899afffff     call sym.re_acquire_state_context
0x0000fa87      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000fa8c      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x0000fa93      498903         mov qword [r11], rax
0x0000fa96      48833cda00     cmp qword [rdx + rbx*8], 0
0x0000fa9b      0f8532fdffff   jne 0xf7d3
0x0000faa1      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000faa8      85c0           test eax, eax
0x0000faaa      0f8423fdffff   je 0xf7d3
0x0000fab0      e993fbffff     jmp 0xf648
0x0000fab5      0f1f00         nop dword [rax]
0x0000fab8      488b442418     mov rax, qword [rsp + 0x18]
0x0000fabd      488b4c2408     mov rcx, qword [rsp + 8]
0x0000fac2      4c89f7         mov rdi, r14
0x0000fac5      4c8d4010       lea r8, [rax + 0x10]
0x0000fac9      488d5808       lea rbx, [rax + 8]
0x0000facd      4c89c2         mov rdx, r8
0x0000fad0      4889de         mov rsi, rbx
0x0000fad3      4c89442410     mov qword [rsp + 0x10], r8
0x0000fad8      e883b8ffff     call sym.check_subexp_matching_top.isra.18
0x0000fadd      85c0           test eax, eax
0x0000fadf      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000fae6      0f855cfbffff   jne 0xf648
0x0000faec      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000faf1      4889de         mov rsi, rbx
0x0000faf4      4c89f7         mov rdi, r14
0x0000faf7      4c89c2         mov rdx, r8
0x0000fafa      e8d1f7ffff     call sym.transit_state_bkref.isra.34
0x0000faff      85c0           test eax, eax
0x0000fb01      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000fb08      0f84eafcffff   je 0xf7f8
0x0000fb0e      e935fbffff     jmp 0xf648
0x0000fb13      0f1f440000     nop dword [rax + rax]
0x0000fb18      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000fb20      e8db1fffff     call sym.imp.free
0x0000fb25      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000fb2c      e917fbffff     jmp 0xf648
0x0000fb31      4d396e58       cmp qword [r14 + 0x58], r13
0x0000fb35      0f8eb7feffff   jle 0xf9f2
0x0000fb3b      418d7501       lea esi, [r13 + 1]
0x0000fb3f      4c89f7         mov rdi, r14
0x0000fb42      e8c990ffff     call sym.extend_buffers
0x0000fb47      85c0           test eax, eax
0x0000fb49      0f85f9faffff   jne 0xf648
0x0000fb4f      4d8b5e08       mov r11, qword [r14 + 8]
0x0000fb53      e956fdffff     jmp 0xf8ae
0x0000fb58      488d540001     lea rdx, [rax + rax + 1]
0x0000fb5d      498b7c2428     mov rdi, qword [r12 + 0x28]
0x0000fb62      488d34d50000.  lea rsi, [rdx*8]
0x0000fb6a      4889542410     mov qword [rsp + 0x10], rdx
0x0000fb6f      e88c22ffff     call sym.imp.realloc
0x0000fb74      4885c0         test rax, rax
0x0000fb77      0f84bcfeffff   je 0xfa39
0x0000fb7d      488b542410     mov rdx, qword [rsp + 0x10]
0x0000fb82      4989442428     mov qword [r12 + 0x28], rax
0x0000fb87      4989542418     mov qword [r12 + 0x18], rdx
0x0000fb8c      e9f3fdffff     jmp 0xf984
0x0000fb91      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x0000fb96      498b86c80000.  mov rax, qword [r14 + 0xc8]
0x0000fb9d      e9eefaffff     jmp 0xf690
0x0000fba2      4c8b642408     mov r12, qword [rsp + 8]
0x0000fba7      e9c6fcffff     jmp 0xf872
0x0000fbac      e86f20ffff     call sym.imp.__stack_chk_fail
0x0000fbb1      0f1f440000     nop dword [rax + rax]
0x0000fbb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- merge_state_with_log:
0x0000fbc0      4157           push r15
0x0000fbc2      4156           push r14
0x0000fbc4      4155           push r13
0x0000fbc6      4154           push r12
0x0000fbc8      4989fd         mov r13, rdi
0x0000fbcb      55             push rbp
0x0000fbcc      53             push rbx
0x0000fbcd      4889f3         mov rbx, rsi
0x0000fbd0      4883ec38       sub rsp, 0x38
0x0000fbd4      4c8b6648       mov r12, qword [rsi + 0x48]
0x0000fbd8      4c8bb6b80000.  mov r14, qword [rsi + 0xb8]
0x0000fbdf      64488b042528.  mov rax, qword fs:[0x28]
0x0000fbe8      4889442428     mov qword [rsp + 0x28], rax
0x0000fbed      31c0           xor eax, eax
0x0000fbef      4c8bbe980000.  mov r15, qword [rsi + 0x98]
0x0000fbf6      4a8d2ce50000.  lea rbp, [r12*8]
0x0000fbfe      4901ee         add r14, rbp
0x0000fc01      4c39a6c00000.  cmp qword [rsi + 0xc0], r12
0x0000fc08      7d46           jge 0xfc50
0x0000fc0a      498916         mov qword [r14], rdx
0x0000fc0d      4889d5         mov rbp, rdx
0x0000fc10      4c89a6c00000.  mov qword [rsi + 0xc0], r12
0x0000fc17      4983bf980000.  cmp qword [r15 + 0x98], 0
0x0000fc1f      0f8523010000   jne 0xfd48
0x0000fc25      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000fc2a      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000fc33      4889e8         mov rax, rbp
0x0000fc36      0f856b010000   jne 0xfda7
0x0000fc3c      4883c438       add rsp, 0x38
0x0000fc40      5b             pop rbx
0x0000fc41      5d             pop rbp
0x0000fc42      415c           pop r12
0x0000fc44      415d           pop r13
0x0000fc46      415e           pop r14
0x0000fc48      415f           pop r15
0x0000fc4a      c3             ret
0x0000fc4b      0f1f440000     nop dword [rax + rax]
0x0000fc50      498b06         mov rax, qword [r14]
0x0000fc53      4885c0         test rax, rax
0x0000fc56      0f84dc000000   je 0xfd38
0x0000fc5c      4885d2         test rdx, rdx
0x0000fc5f      488b4050       mov rax, qword [rax + 0x50]
0x0000fc63      0f8487000000   je 0xfcf0
0x0000fc69      4c8b7250       mov r14, qword [rdx + 0x50]
0x0000fc6d      488d7c2410     lea rdi, [rsp + 0x10]
0x0000fc72      4889c2         mov rdx, rax
0x0000fc75      48893c24       mov qword [rsp], rdi
0x0000fc79      4c89f6         mov rsi, r14
0x0000fc7c      e83facffff     call sym.re_node_set_init_union
0x0000fc81      85c0           test eax, eax
0x0000fc83      41894500       mov dword [r13], eax
0x0000fc87      0f8513010000   jne 0xfda0
0x0000fc8d      488b4348       mov rax, qword [rbx + 0x48]
0x0000fc91      8b93a0000000   mov edx, dword [rbx + 0xa0]
0x0000fc97      4889df         mov rdi, rbx
0x0000fc9a      488d70ff       lea rsi, [rax - 1]
0x0000fc9e      e80db8ffff     call sym.re_string_context_at
0x0000fca3      4c8b83b80000.  mov r8, qword [rbx + 0xb8]
0x0000fcaa      488b1424       mov rdx, qword [rsp]
0x0000fcae      89c1           mov ecx, eax
0x0000fcb0      4c89fe         mov rsi, r15
0x0000fcb3      4c89ef         mov rdi, r13
0x0000fcb6      4901e8         add r8, rbp
0x0000fcb9      4c89442408     mov qword [rsp + 8], r8
0x0000fcbe      e85dadffff     call sym.re_acquire_state_context
0x0000fcc3      4c8b442408     mov r8, qword [rsp + 8]
0x0000fcc8      4d85f6         test r14, r14
0x0000fccb      4889c5         mov rbp, rax
0x0000fcce      498900         mov qword [r8], rax
0x0000fcd1      0f8440ffffff   je 0xfc17
0x0000fcd7      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000fcdc      e81f1effff     call sym.imp.free
0x0000fce1      e931ffffff     jmp 0xfc17
0x0000fce6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000fcf0      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000fcf4      4889df         mov rdi, rbx
0x0000fcf7      8b96a0000000   mov edx, dword [rsi + 0xa0]
0x0000fcfd      498d7424ff     lea rsi, [r12 - 1]
0x0000fd02      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000fd07      488b4010       mov rax, qword [rax + 0x10]
0x0000fd0b      4889442420     mov qword [rsp + 0x20], rax
0x0000fd10      e89bb7ffff     call sym.re_string_context_at
0x0000fd15      488d542410     lea rdx, [rsp + 0x10]
0x0000fd1a      89c1           mov ecx, eax
0x0000fd1c      4c89fe         mov rsi, r15
0x0000fd1f      4c89ef         mov rdi, r13
0x0000fd22      e8f9acffff     call sym.re_acquire_state_context
0x0000fd27      4889c5         mov rbp, rax
0x0000fd2a      498906         mov qword [r14], rax
0x0000fd2d      e9e5feffff     jmp 0xfc17
0x0000fd32      660f1f440000   nop word [rax + rax]
0x0000fd38      498916         mov qword [r14], rdx
0x0000fd3b      4889d5         mov rbp, rdx
0x0000fd3e      e9d4feffff     jmp 0xfc17
0x0000fd43      0f1f440000     nop dword [rax + rax]
0x0000fd48      4885ed         test rbp, rbp
0x0000fd4b      7453           je 0xfda0
0x0000fd4d      4c8d7510       lea r14, [rbp + 0x10]
0x0000fd51      4c8d7d18       lea r15, [rbp + 0x18]
0x0000fd55      4c89e1         mov rcx, r12
0x0000fd58      4889df         mov rdi, rbx
0x0000fd5b      4c89fa         mov rdx, r15
0x0000fd5e      4c89f6         mov rsi, r14
0x0000fd61      e8fab5ffff     call sym.check_subexp_matching_top.isra.18
0x0000fd66      85c0           test eax, eax
0x0000fd68      41894500       mov dword [r13], eax
0x0000fd6c      7532           jne 0xfda0
0x0000fd6e      f6456840       test byte [rbp + 0x68], 0x40
0x0000fd72      0f84adfeffff   je 0xfc25
0x0000fd78      4c89fa         mov rdx, r15
0x0000fd7b      4c89f6         mov rsi, r14
0x0000fd7e      4889df         mov rdi, rbx
0x0000fd81      e84af5ffff     call sym.transit_state_bkref.isra.34
0x0000fd86      85c0           test eax, eax
0x0000fd88      41894500       mov dword [r13], eax
0x0000fd8c      7512           jne 0xfda0
0x0000fd8e      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000fd95      4a8b2ce0       mov rbp, qword [rax + r12*8]
0x0000fd99      e987feffff     jmp 0xfc25
0x0000fd9e      6690           nop
0x0000fda0      31ed           xor ebp, ebp
0x0000fda2      e97efeffff     jmp 0xfc25
0x0000fda7      e8741effff     call sym.imp.__stack_chk_fail
0x0000fdac      0f1f4000       nop dword [rax]
;-- sift_states_backward:
0x0000fdb0      4157           push r15
0x0000fdb2      4156           push r14
0x0000fdb4      4989fe         mov r14, rdi
0x0000fdb7      4155           push r13
0x0000fdb9      4154           push r12
0x0000fdbb      4989f5         mov r13, rsi
0x0000fdbe      55             push rbp
0x0000fdbf      53             push rbx
0x0000fdc0      4883ec68       sub rsp, 0x68
0x0000fdc4      4c8b7e18       mov r15, qword [rsi + 0x18]
0x0000fdc8      488b5e10       mov rbx, qword [rsi + 0x10]
0x0000fdcc      48893c24       mov qword [rsp], rdi
0x0000fdd0      bf08000000     mov edi, 8
0x0000fdd5      48c744244001.  mov qword [rsp + 0x40], 1
0x0000fdde      64488b042528.  mov rax, qword fs:[0x28]
0x0000fde7      4889442458     mov qword [rsp + 0x58], rax
0x0000fdec      31c0           xor eax, eax
0x0000fdee      48c744244801.  mov qword [rsp + 0x48], 1
0x0000fdf7      e8a41fffff     call sym.imp.malloc
0x0000fdfc      4885c0         test rax, rax
0x0000fdff      4889442450     mov qword [rsp + 0x50], rax
0x0000fe04      0f84da020000   je 0x100e4
0x0000fe0a      488d4c2440     lea rcx, [rsp + 0x40]
0x0000fe0f      488918         mov qword [rax], rbx
0x0000fe12      4c89fa         mov rdx, r15
0x0000fe15      4c89ee         mov rsi, r13
0x0000fe18      4c89f7         mov rdi, r14
0x0000fe1b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000fe20      e8fb190000     call sym.update_cur_sifted_state
0x0000fe25      85c0           test eax, eax
0x0000fe27      0f8588020000   jne 0x100b5
0x0000fe2d      4a8d04fd0000.  lea rax, [r15*8]
0x0000fe35      4d85ff         test r15, r15
0x0000fe38      c744242c0000.  mov dword [rsp + 0x2c], 0
0x0000fe40      4889442408     mov qword [rsp + 8], rax
0x0000fe45      498d4530       lea rax, [r13 + 0x30]
0x0000fe49      4889442438     mov qword [rsp + 0x38], rax
0x0000fe4e      0f8e03020000   jle 0x10057
0x0000fe54      498b7d00       mov rdi, qword [r13]
0x0000fe58      488b442408     mov rax, qword [rsp + 8]
0x0000fe5d      48833c0700     cmp qword [rdi + rax], 0
0x0000fe62      0f8410020000   je 0x10078
0x0000fe68      488b0424       mov rax, qword [rsp]
0x0000fe6c      c744242c0000.  mov dword [rsp + 0x2c], 0
0x0000fe74      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000fe78      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0000fe7e      0f8c0d020000   jl 0x10091
0x0000fe84      488b1c24       mov rbx, qword [rsp]
0x0000fe88      488b7c2408     mov rdi, qword [rsp + 8]
0x0000fe8d      4983ef01       sub r15, 1
0x0000fe91      48c744244800.  mov qword [rsp + 0x48], 0
0x0000fe9a      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000fea1      4c8b6438f8     mov r12, qword [rax + rdi - 8]
0x0000fea6      4d85e4         test r12, r12
0x0000fea9      0f8481010000   je 0x10030
0x0000feaf      49837c242800   cmp qword [r12 + 0x28], 0
0x0000feb5      4c8bb3980000.  mov r14, qword [rbx + 0x98]
0x0000febc      0f8e6e010000   jle 0x10030
0x0000fec2      31db           xor ebx, ebx
0x0000fec4      e9a2000000     jmp 0xff6b
0x0000fec9      0f1f80000000.  nop dword [rax]
0x0000fed0      488b3c24       mov rdi, qword [rsp]
0x0000fed4      4c89fa         mov rdx, r15
0x0000fed7      e8c4b6ffff     call sym.check_node_accept
0x0000fedc      84c0           test al, al
0x0000fede      747c           je 0xff5c
0x0000fee0      498b4500       mov rax, qword [r13]
0x0000fee4      488b4c2408     mov rcx, qword [rsp + 8]
0x0000fee9      488b0408       mov rax, qword [rax + rcx]
0x0000feed      4885c0         test rax, rax
0x0000fef0      746a           je 0xff5c
0x0000fef2      498b5618       mov rdx, qword [r14 + 0x18]
0x0000fef6      488b7810       mov rdi, qword [rax + 0x10]
0x0000fefa      488d7018       lea rsi, [rax + 0x18]
0x0000fefe      488b14ea       mov rdx, qword [rdx + rbp*8]
0x0000ff02      e8c997ffff     call sym.re_node_set_contains.isra.3
0x0000ff07      4885c0         test rax, rax
0x0000ff0a      7450           je 0xff5c
0x0000ff0c      41ba01000000   mov r10d, 1
0x0000ff12      49837d2800     cmp qword [r13 + 0x28], 0
0x0000ff17      742e           je 0xff47
0x0000ff19      498b4618       mov rax, qword [r14 + 0x18]
0x0000ff1d      4883ec08       sub rsp, 8
0x0000ff21      498d7528       lea rsi, [r13 + 0x28]
0x0000ff25      4f8d043a       lea r8, [r10 + r15]
0x0000ff29      4989e9         mov r9, rbp
0x0000ff2c      488b0ce8       mov rcx, qword [rax + rbp*8]
0x0000ff30      4157           push r15
0x0000ff32      488b542448     mov rdx, qword [rsp + 0x48]
0x0000ff37      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000ff3c      e83f9affff     call sym.check_dst_limits.isra.13
0x0000ff41      84c0           test al, al
0x0000ff43      5a             pop rdx
0x0000ff44      59             pop rcx
0x0000ff45      7515           jne 0xff5c
0x0000ff47      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000ff4c      4889ee         mov rsi, rbp
0x0000ff4f      e83c82ffff     call sym.re_node_set_insert
0x0000ff54      84c0           test al, al
0x0000ff56      0f8454010000   je 0x100b0
0x0000ff5c      4883c301       add rbx, 1
0x0000ff60      493b5c2428     cmp rbx, qword [r12 + 0x28]
0x0000ff65      0f8dc5000000   jge 0x10030
0x0000ff6b      498b442430     mov rax, qword [r12 + 0x30]
0x0000ff70      498b36         mov rsi, qword [r14]
0x0000ff73      488b2cd8       mov rbp, qword [rax + rbx*8]
0x0000ff77      4989e9         mov r9, rbp
0x0000ff7a      49c1e104       shl r9, 4
0x0000ff7e      4c01ce         add rsi, r9
0x0000ff81      f6460a10       test byte [rsi + 0xa], 0x10
0x0000ff85      0f8445ffffff   je 0xfed0
0x0000ff8b      488b0c24       mov rcx, qword [rsp]
0x0000ff8f      498b4518       mov rax, qword [r13 + 0x18]
0x0000ff93      4d89f8         mov r8, r15
0x0000ff96      4889ea         mov rdx, rbp
0x0000ff99      4c894c2418     mov qword [rsp + 0x18], r9
0x0000ff9e      4c8b99980000.  mov r11, qword [rcx + 0x98]
0x0000ffa5      4889442420     mov qword [rsp + 0x20], rax
0x0000ffaa      498b3b         mov rdi, qword [r11]
0x0000ffad      498db3d80000.  lea rsi, [r11 + 0xd8]
0x0000ffb4      4c895c2430     mov qword [rsp + 0x30], r11
0x0000ffb9      e8c2deffff     call sym.check_node_accept_bytes.isra.31
0x0000ffbe      4c63d0         movsxd r10, eax
0x0000ffc1      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0000ffc6      4183fa00       cmp r10d, 0
0x0000ffca      0f8e90000000   jle 0x10060
0x0000ffd0      4963c2         movsxd rax, r10d
0x0000ffd3      4c01f8         add rax, r15
0x0000ffd6      4839442420     cmp qword [rsp + 0x20], rax
0x0000ffdb      0f8c31ffffff   jl 0xff12
0x0000ffe1      498b5500       mov rdx, qword [r13]
0x0000ffe5      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000ffea      488b04c2       mov rax, qword [rdx + rax*8]
0x0000ffee      4885c0         test rax, rax
0x0000fff1      7473           je 0x10066
0x0000fff3      498b5318       mov rdx, qword [r11 + 0x18]
0x0000fff7      488b7810       mov rdi, qword [rax + 0x10]
0x0000fffb      488d7018       lea rsi, [rax + 0x18]
0x0000ffff      4c894c2418     mov qword [rsp + 0x18], r9
0x00010004      488b14ea       mov rdx, qword [rdx + rbp*8]
0x00010008      e8c396ffff     call sym.re_node_set_contains.isra.3
0x0001000d      4885c0         test rax, rax
0x00010010      0f85fcfeffff   jne 0xff12
0x00010016      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0001001b      498b36         mov rsi, qword [r14]
0x0001001e      4c01ce         add rsi, r9
0x00010021      e9aafeffff     jmp 0xfed0
0x00010026      662e0f1f8400.  nop word cs:[rax + rax]
0x00010030      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00010035      488b3c24       mov rdi, qword [rsp]
0x00010039      4c89fa         mov rdx, r15
0x0001003c      4c89ee         mov rsi, r13
0x0001003f      e8dc170000     call sym.update_cur_sifted_state
0x00010044      85c0           test eax, eax
0x00010046      756d           jne 0x100b5
0x00010048      48836c240808   sub qword [rsp + 8], 8
0x0001004e      4d85ff         test r15, r15
0x00010051      0f85fdfdffff   jne 0xfe54
0x00010057      31c0           xor eax, eax
0x00010059      eb5a           jmp 0x100b5
0x0001005b      0f1f440000     nop dword [rax + rax]
0x00010060      0f85acfeffff   jne 0xff12
0x00010066      498b36         mov rsi, qword [r14]
0x00010069      4c01ce         add rsi, r9
0x0001006c      e95ffeffff     jmp 0xfed0
0x00010071      0f1f80000000.  nop dword [rax]
0x00010078      488b0424       mov rax, qword [rsp]
0x0001007c      8344242c01     add dword [rsp + 0x2c], 1
0x00010081      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x00010085      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0001008b      0f8df3fdffff   jge 0xfe84
0x00010091      488b542408     mov rdx, qword [rsp + 8]
0x00010096      31f6           xor esi, esi
0x00010098      e8131cffff     call sym.imp.memset
0x0001009d      488b7c2450     mov rdi, qword [rsp + 0x50]
0x000100a2      e8591affff     call sym.imp.free
0x000100a7      31c0           xor eax, eax
0x000100a9      eb1a           jmp 0x100c5
0x000100ab      0f1f440000     nop dword [rax + rax]
0x000100b0      b80c000000     mov eax, 0xc
0x000100b5      488b7c2450     mov rdi, qword [rsp + 0x50]
0x000100ba      890424         mov dword [rsp], eax
0x000100bd      e83e1affff     call sym.imp.free
0x000100c2      8b0424         mov eax, dword [rsp]
0x000100c5      488b542458     mov rdx, qword [rsp + 0x58]
0x000100ca      644833142528.  xor rdx, qword fs:[0x28]
0x000100d3      7516           jne 0x100eb
0x000100d5      4883c468       add rsp, 0x68
0x000100d9      5b             pop rbx
0x000100da      5d             pop rbp
0x000100db      415c           pop r12
0x000100dd      415d           pop r13
0x000100df      415e           pop r14
0x000100e1      415f           pop r15
0x000100e3      c3             ret
0x000100e4      b80c000000     mov eax, 0xc
0x000100e9      ebda           jmp 0x100c5
0x000100eb      e8301bffff     call sym.imp.__stack_chk_fail
;-- re_search_internal:
0x000100f0      4157           push r15
0x000100f2      4156           push r14
0x000100f4      4155           push r13
0x000100f6      4154           push r12
0x000100f8      4d89cd         mov r13, r9
0x000100fb      55             push rbp
0x000100fc      53             push rbx
0x000100fd      4889cd         mov rbp, rcx
0x00010100      b920000000     mov ecx, 0x20                           ; "@"
0x00010105      4d89c4         mov r12, r8
0x00010108      4881ec380200.  sub rsp, sym..interp
0x0001010f      488b1f         mov rbx, qword [rdi]
0x00010112      488b84247802.  mov rax, qword [rsp + 0x278]
0x0001011a      48897c2448     mov qword [rsp + 0x48], rdi
0x0001011f      4889742478     mov qword [rsp + 0x78], rsi
0x00010124      4889fe         mov rsi, rdi
0x00010127      488dbc242001.  lea rdi, [rsp + 0x120]
0x0001012f      488994248800.  mov qword [rsp + 0x88], rdx
0x00010137      48895c2438     mov qword [rsp + 0x38], rbx
0x0001013c      48898424b800.  mov qword [rsp + 0xb8], rax
0x00010144      48893c24       mov qword [rsp], rdi
0x00010148      64488b042528.  mov rax, qword fs:[0x28]
0x00010151      488984242802.  mov qword [rsp + 0x228], rax
0x00010159      31c0           xor eax, eax
0x0001015b      f348ab         rep stosq qword [rdi], rax
0x0001015e      488b7e20       mov rdi, qword [rsi + 0x20]
0x00010162      48899c24b801.  mov qword [rsp + 0x1b8], rbx
0x0001016a      4885ff         test rdi, rdi
0x0001016d      48897c2468     mov qword [rsp + 0x68], rdi
0x00010172      7422           je 0x10196
0x00010174      0fb65638       movzx edx, byte [rsi + 0x38]
0x00010178      f6c208         test dl, 8
0x0001017b      0f848f040000   je 0x10610
0x00010181      4c39c5         cmp rbp, r8
0x00010184      0f8486040000   je 0x10610
0x0001018a      83e201         and edx, 1
0x0001018d      480f44c7       cmove rax, rdi
0x00010191      4889442468     mov qword [rsp + 0x68], rax
0x00010196      488b442448     mov rax, qword [rsp + 0x48]
0x0001019b      48c784249800.  mov qword [rsp + 0x98], 0
0x000101a7      488b4030       mov rax, qword [rax + 0x30]
0x000101ab      483b84247002.  cmp rax, qword [rsp + 0x270]
0x000101b3      731f           jae 0x101d4
0x000101b5      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x000101bd      488d51ff       lea rdx, [rcx - 1]
0x000101c1      4829c2         sub rdx, rax
0x000101c4      482994247002.  sub qword [rsp + 0x270], rdx
0x000101cc      488994249800.  mov qword [rsp + 0x98], rdx
0x000101d4      488b742448     mov rsi, qword [rsp + 0x48]
0x000101d9      48837e1000     cmp qword [rsi + 0x10], 0
0x000101de      0f848c0e0000   je 0x11070
0x000101e4      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000101e9      488b4748       mov rax, qword [rdi + 0x48]
0x000101ed      4885c0         test rax, rax
0x000101f0      0f847a0e0000   je 0x11070
0x000101f6      488b5750       mov rdx, qword [rdi + 0x50]
0x000101fa      4885d2         test rdx, rdx
0x000101fd      0f846d0e0000   je 0x11070
0x00010203      488b4f58       mov rcx, qword [rdi + 0x58]
0x00010207      4885c9         test rcx, rcx
0x0001020a      0f84600e0000   je 0x11070
0x00010210      48837f6000     cmp qword [rdi + 0x60], 0
0x00010215      0f84550e0000   je 0x11070
0x0001021b      4883781000     cmp qword [rax + 0x10], 0
0x00010220      7536           jne 0x10258
0x00010222      48837a1000     cmp qword [rdx + 0x10], 0
0x00010227      752f           jne 0x10258
0x00010229      4883791000     cmp qword [rcx + 0x10], 0
0x0001022e      7406           je 0x10236
0x00010230      807e3800       cmp byte [rsi + 0x38], 0
0x00010234      7822           js 0x10258
0x00010236      4885ed         test rbp, rbp
0x00010239      7411           je 0x1024c
0x0001023b      4d85e4         test r12, r12
0x0001023e      c744245c0100.  mov dword [rsp + 0x5c], 1
0x00010246      0f851d0a0000   jne 0x10c69
0x0001024c      4531e4         xor r12d, r12d
0x0001024f      31ed           xor ebp, ebp
0x00010251      0f1f80000000.  nop dword [rax]
0x00010258      4883bc247002.  cmp qword [rsp + 0x270], 0
0x00010261      c74424580100.  mov dword [rsp + 0x58], 1
0x00010269      0f8481030000   je 0x105f0
0x0001026f      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00010274      488b442448     mov rax, qword [rsp + 0x48]
0x00010279      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x00010281      498b7310       mov rsi, qword [r11 + 0x10]
0x00010285      488b5828       mov rbx, qword [rax + 0x28]
0x00010289      418b93b40000.  mov edx, dword [r11 + 0xb4]
0x00010290      488b4018       mov rax, qword [rax + 0x18]
0x00010294      4889bc247801.  mov qword [rsp + 0x178], rdi
0x0001029c      4889bc247001.  mov qword [rsp + 0x170], rdi
0x000102a4      4889742408     mov qword [rsp + 8], rsi
0x000102a9      488d7601       lea rsi, [rsi + 1]
0x000102ad      48899c24b000.  mov qword [rsp + 0xb0], rbx
0x000102b5      4863ca         movsxd rcx, edx
0x000102b8      48c1e816       shr rax, 0x16
0x000102bc      48899c249801.  mov qword [rsp + 0x198], rbx
0x000102c4      83e001         and eax, 1
0x000102c7      4839ce         cmp rsi, rcx
0x000102ca      899424b00100.  mov dword [rsp + 0x1b0], edx
0x000102d1      480f4cf1       cmovl rsi, rcx
0x000102d5      488d4f01       lea rcx, [rdi + 1]
0x000102d9      888424a80100.  mov byte [rsp + 0x1a8], al
0x000102e0      4889bc248801.  mov qword [rsp + 0x188], rdi
0x000102e8      4889bc248001.  mov qword [rsp + 0x180], rdi
0x000102f0      4839ce         cmp rsi, rcx
0x000102f3      488b3c24       mov rdi, qword [rsp]
0x000102f7      480f4ff1       cmovg rsi, rcx
0x000102fb      4885db         test rbx, rbx
0x000102fe      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00010303      0f95c3         setne bl
0x00010306      09d8           or eax, ebx
0x00010308      888424ab0100.  mov byte [rsp + 0x1ab], al
0x0001030f      410fb683b000.  movzx eax, byte [r11 + 0xb0]
0x00010317      48898c242001.  mov qword [rsp + 0x120], rcx
0x0001031f      89c2           mov edx, eax
0x00010321      c0e803         shr al, 3
0x00010324      c0ea02         shr dl, 2
0x00010327      83e001         and eax, 1
0x0001032a      83e201         and edx, 1
0x0001032d      888424aa0100.  mov byte [rsp + 0x1aa], al
0x00010334      889424a90100.  mov byte [rsp + 0x1a9], dl
0x0001033b      e8407dffff     call sym.re_string_realloc_buffers
0x00010340      85c0           test eax, eax
0x00010342      8944245c       mov dword [rsp + 0x5c], eax
0x00010346      0f85f4080000   jne 0x10c40
0x0001034c      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00010351      488d87b80000.  lea rax, [rdi + 0xb8]
0x00010358      48898424a001.  mov qword [rsp + 0x1a0], rax
0x00010360      0fb687b00000.  movzx eax, byte [rdi + 0xb0]
0x00010367      88442408       mov byte [rsp + 8], al
0x0001036b      c0e804         shr al, 4
0x0001036e      83e001         and eax, 1
0x00010371      80bc24ab0100.  cmp byte [rsp + 0x1ab], 0
0x00010379      888424ae0100.  mov byte [rsp + 0x1ae], al
0x00010380      7523           jne 0x103a5
0x00010382      488b742438     mov rsi, qword [rsp + 0x38]
0x00010387      488b442478     mov rax, qword [rsp + 0x78]
0x0001038c      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x00010393      488984242801.  mov qword [rsp + 0x128], rax
0x0001039b      488b84248800.  mov rax, qword [rsp + 0x88]
0x000103a3      7e02           jle 0x103a7
0x000103a5      31c0           xor eax, eax
0x000103a7      488984245001.  mov qword [rsp + 0x150], rax
0x000103af      488984245801.  mov qword [rsp + 0x158], rax
0x000103b7      488b442448     mov rax, qword [rsp + 0x48]
0x000103bc      4c89ac248801.  mov qword [rsp + 0x188], r13
0x000103c4      4c89ac248001.  mov qword [rsp + 0x180], r13
0x000103cc      0fb64038       movzx eax, byte [rax + 0x38]
0x000103d0      88442408       mov byte [rsp + 8], al
0x000103d4      c0e807         shr al, 7
0x000103d7      888424ad0100.  mov byte [rsp + 0x1ad], al
0x000103de      488b442438     mov rax, qword [rsp + 0x38]
0x000103e3      4c8bb0980000.  mov r14, qword [rax + 0x98]
0x000103ea      8b8424800200.  mov eax, dword [rsp + 0x280]
0x000103f1      48c78424c801.  mov qword [rsp + 0x1c8], 0xffffffffffffffff
0x000103fd      4f8d2c36       lea r13, [r14 + r14]
0x00010401      898424c00100.  mov dword [rsp + 0x1c0], eax
0x00010408      4d85ed         test r13, r13
0x0001040b      7e52           jle 0x1045f
0x0001040d      48b866666666.  movabs rax, 0x666666666666666
0x00010417      4939c5         cmp r13, rax
0x0001041a      0f8f400d0000   jg 0x11160
0x00010420      4b8d7cf500     lea rdi, [r13 + r14*8]
0x00010425      48c1e703       shl rdi, 3
0x00010429      e87219ffff     call sym.imp.malloc
0x0001042e      4c89f7         mov rdi, r14
0x00010431      4989c7         mov r15, rax
0x00010434      48898424f801.  mov qword [rsp + 0x1f8], rax
0x0001043c      48c1e704       shl rdi, 4
0x00010440      e85b19ffff     call sym.imp.malloc
0x00010445      4885c0         test rax, rax
0x00010448      488984241802.  mov qword [rsp + 0x218], rax
0x00010450      0f840a0d0000   je 0x11160
0x00010456      4d85ff         test r15, r15
0x00010459      0f84010d0000   je 0x11160
0x0001045f      4883bc247002.  cmp qword [rsp + 0x270], 1
0x00010468      4c89ac24f001.  mov qword [rsp + 0x1f0], r13
0x00010470      c78424000200.  mov dword [rsp + 0x200], 1
0x0001047b      4c89ac241002.  mov qword [rsp + 0x210], r13
0x00010483      0f861f110000   jbe 0x115a8
0x00010489      488b84246001.  mov rax, qword [rsp + 0x160]
0x00010491      48bafeffffff.  movabs rdx, 0x1ffffffffffffffe          ; 2305843009213693950
0x0001049b      4839d0         cmp rax, rdx
0x0001049e      0f87bc0c0000   ja 0x11160
0x000104a4      488d3cc50800.  lea rdi, [rax*8 + 8]
0x000104ac      e8ef18ffff     call sym.imp.malloc
0x000104b1      4885c0         test rax, rax
0x000104b4      4889c7         mov rdi, rax
0x000104b7      48898424d801.  mov qword [rsp + 0x1d8], rax
0x000104bf      0f84eb0c0000   je 0x111b0
0x000104c5      8b8424800200.  mov eax, dword [rsp + 0x280]
0x000104cc      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x000104d4      83e001         and eax, 1
0x000104d7      83f801         cmp eax, 1
0x000104da      19c0           sbb eax, eax
0x000104dc      83e002         and eax, 2
0x000104df      83c004         add eax, 4
0x000104e2      898424900100.  mov dword [rsp + 0x190], eax
0x000104e9      31c0           xor eax, eax
0x000104eb      4c39e5         cmp rbp, r12
0x000104ee      0f9ec0         setle al
0x000104f1      8d4400ff       lea eax, [rax + rax - 1]
0x000104f5      898424ac0000.  mov dword [rsp + 0xac], eax
0x000104fc      4c89e0         mov rax, r12
0x000104ff      480f4ec5       cmovle rax, rbp
0x00010503      488984249000.  mov qword [rsp + 0x90], rax
0x0001050b      4c89e0         mov rax, r12
0x0001050e      480f4dc5       cmovge rax, rbp
0x00010512      48837c246800   cmp qword [rsp + 0x68], 0
0x00010518      4889442470     mov qword [rsp + 0x70], rax
0x0001051d      488b442438     mov rax, qword [rsp + 0x38]
0x00010522      8bb0b4000000   mov esi, dword [rax + 0xb4]
0x00010528      b808000000     mov eax, 8
0x0001052d      89b424c80000.  mov dword [rsp + 0xc8], esi
0x00010534      7439           je 0x1056f
0x00010536      83fe01         cmp esi, 1
0x00010539      b904000000     mov ecx, 4
0x0001053e      741e           je 0x1055e
0x00010540      488b442448     mov rax, qword [rsp + 0x48]
0x00010545      f6401a40       test byte [rax + 0x1a], 0x40
0x00010549      0f857f0d0000   jne 0x112ce
0x0001054f      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x00010558      0f85700d0000   jne 0x112ce
0x0001055e      31d2           xor edx, edx
0x00010560      4c39e5         cmp rbp, r12
0x00010563      0fb6c3         movzx eax, bl
0x00010566      0f9ec2         setle dl
0x00010569      09c8           or eax, ecx
0x0001056b      01d2           add edx, edx
0x0001056d      09d0           or eax, edx
0x0001056f      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x00010574      0f9fc1         setg cl
0x00010577      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x0001057f      0f9cc2         setl dl
0x00010582      08d1           or cl, dl
0x00010584      0f85cf0a0000   jne 0x11059
0x0001058a      488d8c24d800.  lea rcx, [rsp + 0xd8]
0x00010592      4c39e5         cmp rbp, r12
0x00010595      ba00000000     mov edx, 0
0x0001059a      480f4ed1       cmovle rdx, rcx
0x0001059e      4885d2         test rdx, rdx
0x000105a1      48899424c000.  mov qword [rsp + 0xc0], rdx
0x000105a9      0f958424cf00.  setne byte [rsp + 0xcf]
0x000105b1      83e804         sub eax, 4
0x000105b4      898424a80000.  mov dword [rsp + 0xa8], eax
0x000105bb      488d8424d000.  lea rax, [rsp + 0xd0]
0x000105c3      4889442428     mov qword [rsp + 0x28], rax
0x000105c8      8b8424a80000.  mov eax, dword [rsp + 0xa8]
0x000105cf      83f804         cmp eax, 4
0x000105d2      0f87e50b0000   ja 0x111bd
0x000105d8      488d0d817100.  lea rcx, [0x00017760]
0x000105df      48630481       movsxd rax, dword [rcx + rax*4]
0x000105e3      4801c8         add rax, rcx
0x000105e6      ffe0           jmp rax
0x000105e8      0f1f84000000.  nop dword [rax + rax]
0x000105f0      488b442438     mov rax, qword [rsp + 0x38]
0x000105f5      4883b8980000.  cmp qword [rax + 0x98], 0
0x000105fd      0f95c0         setne al
0x00010600      0fb6c0         movzx eax, al
0x00010603      89442458       mov dword [rsp + 0x58], eax
0x00010607      e963fcffff     jmp 0x1026f
0x0001060c      0f1f4000       nop dword [rax]
0x00010610      48c744246800.  mov qword [rsp + 0x68], 0
0x00010619      e978fbffff     jmp 0x10196
0x0001061e      48396c2470     cmp qword [rsp + 0x70], rbp
0x00010623      7e5a           jle 0x1067f
0x00010625      488b442478     mov rax, qword [rsp + 0x78]
0x0001062a      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0001062f      0fb61428       movzx edx, byte [rax + rbp]
0x00010633      488d4501       lea rax, [rbp + 1]
0x00010637      803c1700       cmp byte [rdi + rdx], 0
0x0001063b      0f8587000000   jne 0x106c8
0x00010641      488b742468     mov rsi, qword [rsp + 0x68]
0x00010646      488b4c2470     mov rcx, qword [rsp + 0x70]
0x0001064b      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00010650      eb18           jmp 0x1066a
0x00010652      660f1f440000   nop word [rax + rax]
0x00010658      0fb61407       movzx edx, byte [rdi + rax]
0x0001065c      488d4001       lea rax, [rax + 1]
0x00010660      803c1600       cmp byte [rsi + rdx], 0
0x00010664      0f8597110000   jne 0x11801
0x0001066a      4839c1         cmp rcx, rax
0x0001066d      4889c5         mov rbp, rax
0x00010670      75e6           jne 0x10658
0x00010672      488b442470     mov rax, qword [rsp + 0x70]
0x00010677      48898424d800.  mov qword [rsp + 0xd8], rax
0x0001067f      48396c2470     cmp qword [rsp + 0x70], rbp
0x00010684      7542           jne 0x106c8
0x00010686      31c0           xor eax, eax
0x00010688      488b742470     mov rsi, qword [rsp + 0x70]
0x0001068d      4839b4248800.  cmp qword [rsp + 0x88], rsi
0x00010695      7e09           jle 0x106a0
0x00010697      488b442478     mov rax, qword [rsp + 0x78]
0x0001069c      0fb60430       movzx eax, byte [rax + rsi]
0x000106a0      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x000106a8      4885f6         test rsi, rsi
0x000106ab      7404           je 0x106b1
0x000106ad      0fb60406       movzx eax, byte [rsi + rax]
0x000106b1      488b7c2468     mov rdi, qword [rsp + 0x68]
0x000106b6      803c0700       cmp byte [rdi + rax], 0
0x000106ba      0f8499090000   je 0x11059
0x000106c0      488b6c2470     mov rbp, qword [rsp + 0x70]
0x000106c5      0f1f00         nop dword [rax]
0x000106c8      8b9424800200.  mov edx, dword [rsp + 0x280]
0x000106cf      488b3c24       mov rdi, qword [rsp]
0x000106d3      4889ee         mov rsi, rbp
0x000106d6      e8a5b0ffff     call sym.re_string_reconstruct
0x000106db      85c0           test eax, eax
0x000106dd      8944245c       mov dword [rsp + 0x5c], eax
0x000106e1      0f8559050000   jne 0x10c40
0x000106e7      83bc24c80000.  cmp dword [rsp + 0xc8], 1
0x000106ef      741c           je 0x1070d
0x000106f1      4883bc245001.  cmp qword [rsp + 0x150], 0
0x000106fa      7411           je 0x1070d
0x000106fc      488b84243001.  mov rax, qword [rsp + 0x130]
0x00010704      8338ff         cmp dword [rax], 0xffffffff
0x00010707      0f8424090000   je 0x11031
0x0001070d      488b9c24b801.  mov rbx, qword [rsp + 0x1b8]
0x00010715      0fb6442458     movzx eax, byte [rsp + 0x58]
0x0001071a      c78424000200.  mov dword [rsp + 0x200], 0
0x00010725      48c78424e801.  mov qword [rsp + 0x1e8], 0
0x00010731      48c78424e001.  mov qword [rsp + 0x1e0], 0
0x0001073d      c78424d00000.  mov dword [rsp + 0xd0], 0
0x00010748      4c8b7348       mov r14, qword [rbx + 0x48]
0x0001074c      83e001         and eax, 1
0x0001074f      888424ce0000.  mov byte [rsp + 0xce], al
0x00010756      488b84246801.  mov rax, qword [rsp + 0x168]
0x0001075e      41807e6800     cmp byte [r14 + 0x68], 0
0x00010763      4889442408     mov qword [rsp + 8], rax
0x00010768      0f8872090000   js 0x110e0
0x0001076e      488b8424d801.  mov rax, qword [rsp + 0x1d8]
0x00010776      4885c0         test rax, rax
0x00010779      7417           je 0x10792
0x0001077b      4883bb980000.  cmp qword [rbx + 0x98], 0
0x00010783      488b7c2408     mov rdi, qword [rsp + 8]
0x00010788      4c8934f8       mov qword [rax + rdi*8], r14
0x0001078c      0f85e90e0000   jne 0x1167b
0x00010792      0fb68424cf00.  movzx eax, byte [rsp + 0xcf]
0x0001079a      88442418       mov byte [rsp + 0x18], al
0x0001079e      410fb64668     movzx eax, byte [r14 + 0x68]
0x000107a3      a810           test al, 0x10
0x000107a5      48c7442420ff.  mov qword [rsp + 0x20], 0xffffffffffffffff
0x000107ae      48c744243000.  mov qword [rsp + 0x30], 0
0x000107b7      0f85830e0000   jne 0x11640
0x000107bd      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x000107c5      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x000107cd      4889442450     mov qword [rsp + 0x50], rax
0x000107d2      488d8424e000.  lea rax, [rsp + 0xe0]
0x000107da      4889442460     mov qword [rsp + 0x60], rax
0x000107df      488d8424d400.  lea rax, [rsp + 0xd4]
0x000107e7      488984248000.  mov qword [rsp + 0x80], rax
0x000107ef      eb5b           jmp 0x1084c
0x000107f1      0f1f80000000.  nop dword [rax]
0x000107f8      4d39ee         cmp r14, r13
0x000107fb      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x00010803      0f94c0         sete al
0x00010806      20442418       and byte [rsp + 0x18], al
0x0001080a      410fb64568     movzx eax, byte [r13 + 0x68]
0x0001080f      480f445c2408   cmove rbx, qword [rsp + 8]
0x00010815      a810           test al, 0x10
0x00010817      48895c2408     mov qword [rsp + 8], rbx
0x0001081c      742b           je 0x10849
0x0001081e      84c0           test al, al
0x00010820      0f88ba040000   js 0x10ce0
0x00010826      8b442458       mov eax, dword [rsp + 0x58]
0x0001082a      4c89442420     mov qword [rsp + 0x20], r8
0x0001082f      85c0           test eax, eax
0x00010831      0f841f010000   je 0x10956
0x00010837      48c744243001.  mov qword [rsp + 0x30], 1
0x00010840      48c744245000.  mov qword [rsp + 0x50], 0
0x00010849      4d89ee         mov r14, r13
0x0001084c      4c3984248801.  cmp qword [rsp + 0x188], r8
0x00010854      0f8eea000000   jle 0x10944
0x0001085a      488b84246001.  mov rax, qword [rsp + 0x160]
0x00010862      498d5801       lea rbx, [r8 + 1]
0x00010866      4839c3         cmp rbx, rax
0x00010869      0f8da1040000   jge 0x10d10
0x0001086f      488b84245001.  mov rax, qword [rsp + 0x150]
0x00010877      4839c3         cmp rbx, rax
0x0001087a      0f8d80070000   jge 0x11000
0x00010880      41f6466820     test byte [r14 + 0x68], 0x20
0x00010885      0f85c5040000   jne 0x10d50
0x0001088b      498d4001       lea rax, [r8 + 1]
0x0001088f      488984246801.  mov qword [rsp + 0x168], rax
0x00010897      488b84242801.  mov rax, qword [rsp + 0x128]
0x0001089f      460fb62c00     movzx r13d, byte [rax + r8]
0x000108a4      498b4658       mov rax, qword [r14 + 0x58]
0x000108a8      4885c0         test rax, rax
0x000108ab      0f840f070000   je 0x10fc0
0x000108b1      4e8b2ce8       mov r13, qword [rax + r13*8]
0x000108b5      4883bc24d801.  cmp qword [rsp + 0x1d8], 0
0x000108be      7414           je 0x108d4
0x000108c0      488b3424       mov rsi, qword [rsp]
0x000108c4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000108c9      4c89ea         mov rdx, r13
0x000108cc      e8eff2ffff     call sym.merge_state_with_log
0x000108d1      4989c5         mov r13, rax
0x000108d4      4d85ed         test r13, r13
0x000108d7      0f851bffffff   jne 0x107f8
0x000108dd      8b8c24d00000.  mov ecx, dword [rsp + 0xd0]
0x000108e4      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000108ec      85c9           test ecx, ecx
0x000108ee      0f85bc080000   jne 0x111b0
0x000108f4      4885ff         test rdi, rdi
0x000108f7      744b           je 0x10944
0x000108f9      0fb68424ce00.  movzx eax, byte [rsp + 0xce]
0x00010901      83f001         xor eax, 1
0x00010904      84442430       test byte [rsp + 0x30], al
0x00010908      753a           jne 0x10944
0x0001090a      488bb424e001.  mov rsi, qword [rsp + 0x1e0]
0x00010912      488b84246801.  mov rax, qword [rsp + 0x168]
0x0001091a      31c9           xor ecx, ecx
0x0001091c      eb15           jmp 0x10933
0x0001091e      6690           nop
0x00010920      48833cd700     cmp qword [rdi + rdx*8], 0
0x00010925      4889d0         mov rax, rdx
0x00010928      b901000000     mov ecx, 1
0x0001092d      0f856d030000   jne 0x10ca0
0x00010933      488d5001       lea rdx, [rax + 1]
0x00010937      4839d6         cmp rsi, rdx
0x0001093a      7de4           jge 0x10920
0x0001093c      84c9           test cl, cl
0x0001093e      0f85ca0e0000   jne 0x1180e
0x00010944      488b442450     mov rax, qword [rsp + 0x50]
0x00010949      4885c0         test rax, rax
0x0001094c      7408           je 0x10956
0x0001094e      488b7c2408     mov rdi, qword [rsp + 8]
0x00010953      480138         add qword [rax], rdi
0x00010956      488b442420     mov rax, qword [rsp + 0x20]
0x0001095b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001095f      0f84bb060000   je 0x11020
0x00010965      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00010969      0f84f1070000   je 0x11160
0x0001096f      488b442420     mov rax, qword [rsp + 0x20]
0x00010974      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0001097c      488b442448     mov rax, qword [rsp + 0x48]
0x00010981      f6403810       test byte [rax + 0x38], 0x10
0x00010985      0f85b5070000   jne 0x11140
0x0001098b      4883bc247002.  cmp qword [rsp + 0x270], 1
0x00010994      0f86f2080000   jbe 0x1128c
0x0001099a      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0001099f      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x000109a7      488b3c24       mov rdi, qword [rsp]
0x000109ab      488b04cb       mov rax, qword [rbx + rcx*8]
0x000109af      488b7010       mov rsi, qword [rax + 0x10]
0x000109b3      488d5018       lea rdx, [rax + 0x18]
0x000109b7      e8f4acffff     call sym.check_halt_state_context.isra.20
0x000109bc      4989c5         mov r13, rax
0x000109bf      48898424d001.  mov qword [rsp + 0x1d0], rax
0x000109c7      488b442438     mov rax, qword [rsp + 0x38]
0x000109cc      f680b0000000.  test byte [rax + 0xb0], 1
0x000109d3      751b           jne 0x109f0
0x000109d5      488b442438     mov rax, qword [rsp + 0x38]
0x000109da      4883b8980000.  cmp qword [rax + 0x98], 0
0x000109e2      0f8494090000   je 0x1137c
0x000109e8      4c8bac24d001.  mov r13, qword [rsp + 0x1d0]
0x000109f0      48befeffffff.  movabs rsi, 0x1ffffffffffffffe          ; 2305843009213693950
0x000109fa      4839742420     cmp qword [rsp + 0x20], rsi
0x000109ff      4c8bbc24b801.  mov r15, qword [rsp + 0x1b8]
0x00010a07      0f875e0c0000   ja 0x1166b
0x00010a0d      488b442420     mov rax, qword [rsp + 0x20]
0x00010a12      4883c001       add rax, 1
0x00010a16      488d1cc50000.  lea rbx, [rax*8]
0x00010a1e      4889442408     mov qword [rsp + 8], rax
0x00010a23      4889df         mov rdi, rbx
0x00010a26      e87513ffff     call sym.imp.malloc
0x00010a2b      4885c0         test rax, rax
0x00010a2e      4989c4         mov r12, rax
0x00010a31      0f8429070000   je 0x11160
0x00010a37      4983bf980000.  cmp qword [r15 + 0x98], 0
0x00010a3f      0f8490080000   je 0x112d5
0x00010a45      4889df         mov rdi, rbx
0x00010a48      e85313ffff     call sym.imp.malloc
0x00010a4d      4885c0         test rax, rax
0x00010a50      4889c5         mov rbp, rax
0x00010a53      0f84ff060000   je 0x11158
0x00010a59      4c8b742420     mov r14, qword [rsp + 0x20]
0x00010a5e      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x00010a66      4c897c2410     mov qword [rsp + 0x10], r15
0x00010a6b      4889442418     mov qword [rsp + 0x18], rax
0x00010a70      488b442408     mov rax, qword [rsp + 8]
0x00010a75      31f6           xor esi, esi
0x00010a77      4889ef         mov rdi, rbp
0x00010a7a      488d14c50000.  lea rdx, [rax*8]
0x00010a82      e82912ffff     call sym.imp.memset
0x00010a87      660fefc0       pxor xmm0, xmm0
0x00010a8b      4c89a424e000.  mov qword [rsp + 0xe0], r12
0x00010a93      4889ac24e800.  mov qword [rsp + 0xe8], rbp
0x00010a9b      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x00010aa3      4889de         mov rsi, rbx
0x00010aa6      4c89b424f800.  mov qword [rsp + 0xf8], r14
0x00010aae      488b3c24       mov rdi, qword [rsp]
0x00010ab2      0f294320       movaps xmmword [rbx + 0x20], xmm0
0x00010ab6      48c743300000.  mov qword [rbx + 0x30], 0
0x00010abe      e8edf2ffff     call sym.sift_states_backward
0x00010ac3      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x00010acb      4189c7         mov r15d, eax
0x00010ace      e82d10ffff     call sym.imp.free
0x00010ad3      4585ff         test r15d, r15d
0x00010ad6      0f85180c0000   jne 0x116f4
0x00010adc      49833c2400     cmp qword [r12], 0
0x00010ae1      0f856c0c0000   jne 0x11753
0x00010ae7      48837d0000     cmp qword [rbp], 0
0x00010aec      0f85610c0000   jne 0x11753
0x00010af2      488b9424d801.  mov rdx, qword [rsp + 0x1d8]
0x00010afa      660f1f440000   nop word [rax + rax]
0x00010b00      4983ee01       sub r14, 1
0x00010b04      4983feff       cmp r14, 0xffffffffffffffff
0x00010b08      0f84bd0a0000   je 0x115cb
0x00010b0e      4a8b04f2       mov rax, qword [rdx + r14*8]
0x00010b12      4885c0         test rax, rax
0x00010b15      74e9           je 0x10b00
0x00010b17      f6406810       test byte [rax + 0x68], 0x10
0x00010b1b      74e3           je 0x10b00
0x00010b1d      488b7010       mov rsi, qword [rax + 0x10]
0x00010b21      488b3c24       mov rdi, qword [rsp]
0x00010b25      488d5018       lea rdx, [rax + 0x18]
0x00010b29      4c89f1         mov rcx, r14
0x00010b2c      e87fabffff     call sym.check_halt_state_context.isra.20
0x00010b31      4989c5         mov r13, rax
0x00010b34      498d4601       lea rax, [r14 + 1]
0x00010b38      4889442408     mov qword [rsp + 8], rax
0x00010b3d      e92effffff     jmp 0x10a70
0x00010b42      48396c2470     cmp qword [rsp + 0x70], rbp
0x00010b47      0f8e32fbffff   jle 0x1067f
0x00010b4d      488b442478     mov rax, qword [rsp + 0x78]
0x00010b52      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x00010b5a      488b742468     mov rsi, qword [rsp + 0x68]
0x00010b5f      0fb60428       movzx eax, byte [rax + rbp]
0x00010b63      0fb61407       movzx edx, byte [rdi + rax]
0x00010b67      488d4501       lea rax, [rbp + 1]
0x00010b6b      803c1600       cmp byte [rsi + rdx], 0
0x00010b6f      0f8553fbffff   jne 0x106c8
0x00010b75      488b742468     mov rsi, qword [rsp + 0x68]
0x00010b7a      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x00010b82      488b4c2470     mov rcx, qword [rsp + 0x70]
0x00010b87      4c8b442478     mov r8, qword [rsp + 0x78]
0x00010b8c      eb19           jmp 0x10ba7
0x00010b8e      6690           nop
0x00010b90      410fb60400     movzx eax, byte [r8 + rax]
0x00010b95      0fb61407       movzx edx, byte [rdi + rax]
0x00010b99      488d4501       lea rax, [rbp + 1]
0x00010b9d      803c1600       cmp byte [rsi + rdx], 0
0x00010ba1      0f855a0c0000   jne 0x11801
0x00010ba7      4839c1         cmp rcx, rax
0x00010baa      4889c5         mov rbp, rax
0x00010bad      75e1           jne 0x10b90
0x00010baf      e9befaffff     jmp 0x10672
0x00010bb4      4839ac249000.  cmp qword [rsp + 0x90], rbp
0x00010bbc      0f8f97040000   jg 0x11059
0x00010bc2      31c9           xor ecx, ecx
0x00010bc4      4889e8         mov rax, rbp
0x00010bc7      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00010bcc      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x00010bd4      4c8b8c249000.  mov r9, qword [rsp + 0x90]
0x00010bdc      4c8b542478     mov r10, qword [rsp + 0x78]
0x00010be1      4c8b84248800.  mov r8, qword [rsp + 0x88]
0x00010be9      eb17           jmp 0x10c02
0x00010beb      0f1f440000     nop dword [rax + rax]
0x00010bf0      4883e801       sub rax, 1
0x00010bf4      b901000000     mov ecx, 1
0x00010bf9      4c39c8         cmp rax, r9
0x00010bfc      0f8cde090000   jl 0x115e0
0x00010c02      31d2           xor edx, edx
0x00010c04      4939c0         cmp r8, rax
0x00010c07      7e05           jle 0x10c0e
0x00010c09      410fb61402     movzx edx, byte [r10 + rax]
0x00010c0e      4885f6         test rsi, rsi
0x00010c11      7404           je 0x10c17
0x00010c13      0fb61416       movzx edx, byte [rsi + rdx]
0x00010c17      803c1700       cmp byte [rdi + rdx], 0
0x00010c1b      74d3           je 0x10bf0
0x00010c1d      84c9           test cl, cl
0x00010c1f      0f84a3faffff   je 0x106c8
0x00010c25      48898424d800.  mov qword [rsp + 0xd8], rax
0x00010c2d      4889c5         mov rbp, rax
0x00010c30      e993faffff     jmp 0x106c8
0x00010c35      0f1f00         nop dword [rax]
0x00010c38      8944245c       mov dword [rsp + 0x5c], eax
0x00010c3c      0f1f4000       nop dword [rax]
0x00010c40      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010c48      e8b30effff     call sym.imp.free
0x00010c4d      488b442438     mov rax, qword [rsp + 0x38]
0x00010c52      4883b8980000.  cmp qword [rax + 0x98], 0
0x00010c5a      0f8520090000   jne 0x11580
0x00010c60      488b3c24       mov rdi, qword [rsp]
0x00010c64      e85787ffff     call sym.re_string_destruct
0x00010c69      488bb4242802.  mov rsi, qword [rsp + 0x228]
0x00010c71      644833342528.  xor rsi, qword fs:[0x28]
0x00010c7a      8b44245c       mov eax, dword [rsp + 0x5c]
0x00010c7e      0f85970b0000   jne 0x1181b
0x00010c84      4881c4380200.  add rsp, sym..interp
0x00010c8b      5b             pop rbx
0x00010c8c      5d             pop rbp
0x00010c8d      415c           pop r12
0x00010c8f      415d           pop r13
0x00010c91      415e           pop r14
0x00010c93      415f           pop r15
0x00010c95      c3             ret
0x00010c96      662e0f1f8400.  nop word cs:[rax + rax]
0x00010ca0      488b3424       mov rsi, qword [rsp]
0x00010ca4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00010ca9      488994246801.  mov qword [rsp + 0x168], rdx
0x00010cb1      31d2           xor edx, edx
0x00010cb3      e808efffff     call sym.merge_state_with_log
0x00010cb8      8b9424d00000.  mov edx, dword [rsp + 0xd0]
0x00010cbf      85d2           test edx, edx
0x00010cc1      0f8536090000   jne 0x115fd
0x00010cc7      4885c0         test rax, rax
0x00010cca      0f8540090000   jne 0x11610
0x00010cd0      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010cd8      e92dfcffff     jmp 0x1090a
0x00010cdd      0f1f00         nop dword [rax]
0x00010ce0      498b7510       mov rsi, qword [r13 + 0x10]
0x00010ce4      488b3c24       mov rdi, qword [rsp]
0x00010ce8      498d5518       lea rdx, [r13 + 0x18]
0x00010cec      4c89c1         mov rcx, r8
0x00010cef      4c89442410     mov qword [rsp + 0x10], r8
0x00010cf4      e8b7a9ffff     call sym.check_halt_state_context.isra.20
0x00010cf9      4885c0         test rax, rax
0x00010cfc      4c8b442410     mov r8, qword [rsp + 0x10]
0x00010d01      0f8442fbffff   je 0x10849
0x00010d07      e91afbffff     jmp 0x10826
0x00010d0c      0f1f4000       nop dword [rax]
0x00010d10      483b84247801.  cmp rax, qword [rsp + 0x178]
0x00010d18      0f8d51fbffff   jge 0x1086f
0x00010d1e      488b3c24       mov rdi, qword [rsp]
0x00010d22      8d7301         lea esi, [rbx + 1]
0x00010d25      e8e67effff     call sym.extend_buffers
0x00010d2a      85c0           test eax, eax
0x00010d2c      898424d00000.  mov dword [rsp + 0xd0], eax
0x00010d33      0f85df080000   jne 0x11618
0x00010d39      41f6466820     test byte [r14 + 0x68], 0x20
0x00010d3e      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x00010d46      0f843ffbffff   je 0x1088b
0x00010d4c      0f1f4000       nop dword [rax]
0x00010d50      49837e1000     cmp qword [r14 + 0x10], 0
0x00010d55      4c8bac24b801.  mov r13, qword [rsp + 0x1b8]
0x00010d5d      0f8e28030000   jle 0x1108b
0x00010d63      498d85d80000.  lea rax, [r13 + 0xd8]
0x00010d6a      4531e4         xor r12d, r12d
0x00010d6d      48899c24a000.  mov qword [rsp + 0xa0], rbx
0x00010d75      4c89e3         mov rbx, r12
0x00010d78      4d89c4         mov r12, r8
0x00010d7b      4889442440     mov qword [rsp + 0x40], rax
0x00010d80      e953010000     jmp 0x10ed8
0x00010d85      0f1f00         nop dword [rax]
0x00010d88      a801           test al, 1
0x00010d8a      0f843a010000   je 0x10eca
0x00010d90      83e108         and ecx, 8
0x00010d93      0f8531010000   jne 0x10eca
0x00010d99      f6c220         test dl, 0x20                           ; "@"
0x00010d9c      7408           je 0x10da6
0x00010d9e      a802           test al, 2
0x00010da0      0f8424010000   je 0x10eca
0x00010da6      81e280000000   and edx, 0x80
0x00010dac      7412           je 0x10dc0
0x00010dae      a808           test al, 8
0x00010db0      0f8414010000   je 0x10eca
0x00010db6      662e0f1f8400.  nop word cs:[rax + rax]
0x00010dc0      488b0c24       mov rcx, qword [rsp]
0x00010dc4      488b742440     mov rsi, qword [rsp + 0x40]
0x00010dc9      4d89e0         mov r8, r12
0x00010dcc      4c89fa         mov rdx, r15
0x00010dcf      4889ef         mov rdi, rbp
0x00010dd2      e8a9d0ffff     call sym.check_node_accept_bytes.isra.31
0x00010dd7      85c0           test eax, eax
0x00010dd9      0f84e3000000   je 0x10ec2
0x00010ddf      4863e8         movsxd rbp, eax
0x00010de2      4803ac246801.  add rbp, qword [rsp + 0x168]
0x00010dea      398424000200.  cmp dword [rsp + 0x200], eax
0x00010df1      0f4d84240002.  cmovge eax, dword [rsp + 0x200]
0x00010df9      488b3c24       mov rdi, qword [rsp]
0x00010dfd      4889ee         mov rsi, rbp
0x00010e00      898424000200.  mov dword [rsp + 0x200], eax
0x00010e07      e8547fffff     call sym.clean_state_log_if_needed
0x00010e0c      85c0           test eax, eax
0x00010e0e      898424d40000.  mov dword [rsp + 0xd4], eax
0x00010e15      0f8595020000   jne 0x110b0
0x00010e1b      498b4518       mov rax, qword [r13 + 0x18]
0x00010e1f      4c8d24ed0000.  lea r12, [rbp*8]
0x00010e27      4a8b04f8       mov rax, qword [rax + r15*8]
0x00010e2b      4c8bbc24d801.  mov r15, qword [rsp + 0x1d8]
0x00010e33      488d1440       lea rdx, [rax + rax*2]
0x00010e37      498b4530       mov rax, qword [r13 + 0x30]
0x00010e3b      4d01e7         add r15, r12
0x00010e3e      488d14d0       lea rdx, [rax + rdx*8]
0x00010e42      498b07         mov rax, qword [r15]
0x00010e45      4885c0         test rax, rax
0x00010e48      0f84fa000000   je 0x10f48
0x00010e4e      488b7050       mov rsi, qword [rax + 0x50]
0x00010e52      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00010e57      e8649affff     call sym.re_node_set_init_union
0x00010e5c      85c0           test eax, eax
0x00010e5e      898424d40000.  mov dword [rsp + 0xd4], eax
0x00010e65      0f8545020000   jne 0x110b0
0x00010e6b      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00010e72      488b3c24       mov rdi, qword [rsp]
0x00010e76      488d75ff       lea rsi, [rbp - 1]
0x00010e7a      e831a6ffff     call sym.re_string_context_at
0x00010e7f      488b542460     mov rdx, qword [rsp + 0x60]
0x00010e84      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00010e8c      89c1           mov ecx, eax
0x00010e8e      4c03a424d801.  add r12, qword [rsp + 0x1d8]
0x00010e96      4c89ee         mov rsi, r13
0x00010e99      e8829bffff     call sym.re_acquire_state_context
0x00010e9e      488bbc24f000.  mov rdi, qword [rsp + 0xf0]
0x00010ea6      49890424       mov qword [r12], rax
0x00010eaa      e8510cffff     call sym.imp.free
0x00010eaf      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010eb7      48833cef00     cmp qword [rdi + rbp*8], 0
0x00010ebc      0f84df000000   je 0x10fa1
0x00010ec2      4c8ba4246801.  mov r12, qword [rsp + 0x168]
0x00010eca      4883c301       add rbx, 1
0x00010ece      493b5e10       cmp rbx, qword [r14 + 0x10]
0x00010ed2      0f8da8010000   jge 0x11080
0x00010ed8      498b4618       mov rax, qword [r14 + 0x18]
0x00010edc      498b6d00       mov rbp, qword [r13]
0x00010ee0      4c8b3cd8       mov r15, qword [rax + rbx*8]
0x00010ee4      4c89f8         mov rax, r15
0x00010ee7      48c1e004       shl rax, 4
0x00010eeb      4801e8         add rax, rbp
0x00010eee      f6400a10       test byte [rax + 0xa], 0x10
0x00010ef2      74d6           je 0x10eca
0x00010ef4      8b4808         mov ecx, dword [rax + 8]
0x00010ef7      f7c100ff0300   test ecx, 0x3ff00
0x00010efd      894c2410       mov dword [rsp + 0x10], ecx
0x00010f01      0f84b9feffff   je 0x10dc0
0x00010f07      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00010f0e      488b3c24       mov rdi, qword [rsp]
0x00010f12      4c89e6         mov rsi, r12
0x00010f15      e896a5ffff     call sym.re_string_context_at
0x00010f1a      8b4c2410       mov ecx, dword [rsp + 0x10]
0x00010f1e      c1e908         shr ecx, 8
0x00010f21      89ca           mov edx, ecx
0x00010f23      6681e2ff03     and dx, 0x3ff
0x00010f28      f6c104         test cl, 4
0x00010f2b      0f8557feffff   jne 0x10d88
0x00010f31      83e108         and ecx, 8
0x00010f34      0f845ffeffff   je 0x10d99
0x00010f3a      a801           test al, 1
0x00010f3c      0f8457feffff   je 0x10d99
0x00010f42      eb86           jmp 0x10eca
0x00010f44      0f1f4000       nop dword [rax]
0x00010f48      f30f6f02       movdqu xmm0, xmmword [rdx]
0x00010f4c      488d75ff       lea rsi, [rbp - 1]
0x00010f50      488b3c24       mov rdi, qword [rsp]
0x00010f54      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x00010f5c      488b4210       mov rax, qword [rdx + 0x10]
0x00010f60      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00010f67      48898424f000.  mov qword [rsp + 0xf0], rax
0x00010f6f      e83ca5ffff     call sym.re_string_context_at
0x00010f74      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00010f7c      488b542460     mov rdx, qword [rsp + 0x60]
0x00010f81      89c1           mov ecx, eax
0x00010f83      4c89ee         mov rsi, r13
0x00010f86      e8959affff     call sym.re_acquire_state_context
0x00010f8b      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00010f93      498907         mov qword [r15], rax
0x00010f96      48833cef00     cmp qword [rdi + rbp*8], 0
0x00010f9b      0f8521ffffff   jne 0x10ec2
0x00010fa1      8b8424d40000.  mov eax, dword [rsp + 0xd4]
0x00010fa8      85c0           test eax, eax
0x00010faa      0f8412ffffff   je 0x10ec2
0x00010fb0      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x00010fb8      e903010000     jmp 0x110c0
0x00010fbd      0f1f00         nop dword [rax]
0x00010fc0      498b6e60       mov rbp, qword [r14 + 0x60]
0x00010fc4      4885ed         test rbp, rbp
0x00010fc7      0f84a8010000   je 0x11175
0x00010fcd      488b84246801.  mov rax, qword [rsp + 0x168]
0x00010fd5      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00010fdc      488b3c24       mov rdi, qword [rsp]
0x00010fe0      488d70ff       lea rsi, [rax - 1]
0x00010fe4      e8c7a4ffff     call sym.re_string_context_at
0x00010fe9      a801           test al, 1
0x00010feb      0f84af000000   je 0x110a0
0x00010ff1      4e8baced0008.  mov r13, qword [rbp + r13*8 + 0x800]
0x00010ff9      e9b7f8ffff     jmp 0x108b5
0x00010ffe      6690           nop
0x00011000      483b84247801.  cmp rax, qword [rsp + 0x178]
0x00011008      0f8d72f8ffff   jge 0x10880
0x0001100e      e90bfdffff     jmp 0x10d1e
0x00011013      4c89e7         mov rdi, r12
0x00011016      e8e50affff     call sym.imp.free
0x0001101b      0f1f440000     nop dword [rax + rax]
0x00011020      488b3c24       mov rdi, qword [rsp]
0x00011024      e83785ffff     call sym.match_ctx_clean
0x00011029      488bac24d800.  mov rbp, qword [rsp + 0xd8]
0x00011031      48638424ac00.  movsxd rax, dword [rsp + 0xac]
0x00011039      4801c5         add rbp, rax
0x0001103c      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x00011044      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0001104c      7c0b           jl 0x11059
0x0001104e      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x00011053      0f8e6ff5ffff   jle 0x105c8
0x00011059      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00011061      c744245c0100.  mov dword [rsp + 0x5c], 1
0x00011069      e9dafbffff     jmp 0x10c48
0x0001106e      6690           nop
0x00011070      c744245c0100.  mov dword [rsp + 0x5c], 1
0x00011078      e9ecfbffff     jmp 0x10c69
0x0001107d      0f1f00         nop dword [rax]
0x00011080      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x00011088      4d89e0         mov r8, r12
0x0001108b      c78424d00000.  mov dword [rsp + 0xd0], 0
0x00011096      e9f0f7ffff     jmp 0x1088b
0x0001109b      0f1f440000     nop dword [rax + rax]
0x000110a0      4e8b6ced00     mov r13, qword [rbp + r13*8]
0x000110a5      e90bf8ffff     jmp 0x108b5
0x000110aa      660f1f440000   nop word [rax + rax]
0x000110b0      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x000110b8      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000110c0      4885ff         test rdi, rdi
0x000110c3      898424d00000.  mov dword [rsp + 0xd0], eax
0x000110ca      0f84e0000000   je 0x111b0
0x000110d0      4531ed         xor r13d, r13d
0x000110d3      e9e8f7ffff     jmp 0x108c0
0x000110d8      0f1f84000000.  nop dword [rax + rax]
0x000110e0      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x000110e7      488b3c24       mov rdi, qword [rsp]
0x000110eb      488d70ff       lea rsi, [rax - 1]
0x000110ef      e8bca3ffff     call sym.re_string_context_at
0x000110f4      a801           test al, 1
0x000110f6      0f8469010000   je 0x11265
0x000110fc      4c8b7350       mov r14, qword [rbx + 0x50]
0x00011100      4d85f6         test r14, r14
0x00011103      0f8565f6ffff   jne 0x1076e
0x00011109      8b8424d00000.  mov eax, dword [rsp + 0xd0]
0x00011110      83f80c         cmp eax, 0xc
0x00011113      8944245c       mov dword [rsp + 0x5c], eax
0x00011117      0f8423fbffff   je 0x10c40
0x0001111d      488d0dcc6a00.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x17bf0 ; "check_matching"
0x00011124      488d35dd6400.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x17608 ; "../coreutils-8.31/lib/regexec.c"
0x0001112b      488d3d8a6500.  lea rdi, str.err____REG_ESPACE          ; 0x176bc ; "err == REG_ESPACE"
0x00011132      ba35040000     mov edx, 0x435
0x00011137      e8540bffff     call sym.imp.__assert_fail
0x0001113c      0f1f4000       nop dword [rax]
0x00011140      488b442438     mov rax, qword [rsp + 0x38]
0x00011145      4883b8980000.  cmp qword [rax + 0x98], 0
0x0001114d      0f8429020000   je 0x1137c
0x00011153      e947010000     jmp 0x1129f
0x00011158      4c89e7         mov rdi, r12
0x0001115b      e8a009ffff     call sym.imp.free
0x00011160      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00011168      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x00011170      e9d3faffff     jmp 0x10c48
0x00011175      488bbc24b801.  mov rdi, qword [rsp + 0x1b8]
0x0001117d      4c89f6         mov rsi, r14
0x00011180      e8dbafffff     call sym.build_trtable
0x00011185      84c0           test al, al
0x00011187      0f8517f7ffff   jne 0x108a4
0x0001118d      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00011195      c78424d00000.  mov dword [rsp + 0xd0], 0xc             ; [0xc:4]=0
0x000111a0      4885ff         test rdi, rdi
0x000111a3      0f8527ffffff   jne 0x110d0
0x000111a9      0f1f80000000.  nop dword [rax]
0x000111b0      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x000111b8      e98bfaffff     jmp 0x10c48
0x000111bd      488b5c2468     mov rbx, qword [rsp + 0x68]
0x000111c2      448bac24ac00.  mov r13d, dword [rsp + 0xac]
0x000111ca      4c8bb4249000.  mov r14, qword [rsp + 0x90]
0x000111d2      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x000111d7      4c8ba4248800.  mov r12, qword [rsp + 0x88]
0x000111df      eb47           jmp 0x11228
0x000111e1      0f1f80000000.  nop dword [rax]
0x000111e8      4939ec         cmp r12, rbp
0x000111eb      4889d8         mov rax, rbx
0x000111ee      7e0f           jle 0x111ff
0x000111f0      488b84242801.  mov rax, qword [rsp + 0x128]
0x000111f8      0fb60410       movzx eax, byte [rax + rdx]
0x000111fc      4801d8         add rax, rbx
0x000111ff      803800         cmp byte [rax], 0
0x00011202      0f85c0f4ffff   jne 0x106c8
0x00011208      4963c5         movsxd rax, r13d
0x0001120b      4801c5         add rbp, rax
0x0001120e      4c39f5         cmp rbp, r14
0x00011211      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x00011219      0f8c3afeffff   jl 0x11059
0x0001121f      4c39fd         cmp rbp, r15
0x00011222      0f8f31feffff   jg 0x11059
0x00011228      4889ea         mov rdx, rbp
0x0001122b      482b94244801.  sub rdx, qword [rsp + 0x148]
0x00011233      483994245801.  cmp qword [rsp + 0x158], rdx
0x0001123b      77ab           ja 0x111e8
0x0001123d      8b9424800200.  mov edx, dword [rsp + 0x280]
0x00011244      488b3c24       mov rdi, qword [rsp]
0x00011248      4889ee         mov rsi, rbp
0x0001124b      e830a5ffff     call sym.re_string_reconstruct
0x00011250      85c0           test eax, eax
0x00011252      0f85e0f9ffff   jne 0x10c38
0x00011258      4889ea         mov rdx, rbp
0x0001125b      482b94244801.  sub rdx, qword [rsp + 0x148]
0x00011263      eb83           jmp 0x111e8
0x00011265      85c0           test eax, eax
0x00011267      0f8401f5ffff   je 0x1076e
0x0001126d      89c2           mov edx, eax
0x0001126f      83e206         and edx, 6
0x00011272      83fa06         cmp edx, 6
0x00011275      0f8464040000   je 0x116df
0x0001127b      a802           test al, 2
0x0001127d      0f84ad040000   je 0x11730
0x00011283      4c8b7358       mov r14, qword [rbx + 0x58]
0x00011287      e974feffff     jmp 0x11100
0x0001128c      488b442438     mov rax, qword [rsp + 0x38]
0x00011291      4883b8980000.  cmp qword [rax + 0x98], 0
0x00011299      0f84dd000000   je 0x1137c
0x0001129f      488b4c2420     mov rcx, qword [rsp + 0x20]
0x000112a4      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x000112ac      488b3c24       mov rdi, qword [rsp]
0x000112b0      488b04cb       mov rax, qword [rbx + rcx*8]
0x000112b4      488b7010       mov rsi, qword [rax + 0x10]
0x000112b8      488d5018       lea rdx, [rax + 0x18]
0x000112bc      e8efa3ffff     call sym.check_halt_state_context.isra.20
0x000112c1      48898424d001.  mov qword [rsp + 0x1d0], rax
0x000112c9      e91af7ffff     jmp 0x109e8
0x000112ce      31c9           xor ecx, ecx
0x000112d0      e989f2ffff     jmp 0x1055e
0x000112d5      660fefc0       pxor xmm0, xmm0
0x000112d9      48898424e000.  mov qword [rsp + 0xe0], rax
0x000112e1      488b3c24       mov rdi, qword [rsp]
0x000112e5      488b442420     mov rax, qword [rsp + 0x20]
0x000112ea      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x000112f2      48c78424e800.  mov qword [rsp + 0xe8], 0
0x000112fe      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x00011306      4889de         mov rsi, rbx
0x00011309      48c784241001.  mov qword [rsp + 0x110], 0
0x00011315      0f2984240001.  movaps xmmword [rsp + 0x100], xmm0
0x0001131d      48898424f800.  mov qword [rsp + 0xf8], rax
0x00011325      e886eaffff     call sym.sift_states_backward
0x0001132a      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x00011332      89442408       mov dword [rsp + 8], eax
0x00011336      e8c507ffff     call sym.imp.free
0x0001133b      8b442408       mov eax, dword [rsp + 8]
0x0001133f      85c0           test eax, eax
0x00011341      0f8541040000   jne 0x11788
0x00011347      49833c2400     cmp qword [r12], 0
0x0001134c      0f84c1fcffff   je 0x11013
0x00011352      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001135a      e8a107ffff     call sym.imp.free
0x0001135f      488b442420     mov rax, qword [rsp + 0x20]
0x00011364      4c89a424d801.  mov qword [rsp + 0x1d8], r12
0x0001136c      4c89ac24d001.  mov qword [rsp + 0x1d0], r13
0x00011374      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0001137c      4883bc247002.  cmp qword [rsp + 0x270], 0
0x00011385      0f84b5f8ffff   je 0x10c40
0x0001138b      4883bc247002.  cmp qword [rsp + 0x270], 1
0x00011394      0f841e040000   je 0x117b8
0x0001139a      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x000113a2      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x000113aa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000113b1      48c1e104       shl rcx, 4
0x000113b5      488d4610       lea rax, [rsi + 0x10]
0x000113b9      4801f1         add rcx, rsi
0x000113bc      48895008       mov qword [rax + 8], rdx
0x000113c0      488910         mov qword [rax], rdx
0x000113c3      4883c010       add rax, 0x10
0x000113c7      4839c1         cmp rcx, rax
0x000113ca      75f0           jne 0x113bc
0x000113cc      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x000113d4      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x000113dc      48894708       mov qword [rdi + 8], rax
0x000113e0      488b442448     mov rax, qword [rsp + 0x48]
0x000113e5      48c707000000.  mov qword [rdi], 0
0x000113ec      f6403810       test byte [rax + 0x38], 0x10
0x000113f0      0f85dd030000   jne 0x117d3
0x000113f6      4883bc247002.  cmp qword [rsp + 0x270], 1
0x000113ff      0f84ce030000   je 0x117d3
0x00011405      488b442438     mov rax, qword [rsp + 0x38]
0x0001140a      4531c0         xor r8d, r8d
0x0001140d      f680b0000000.  test byte [rax + 0xb0], 1
0x00011414      740f           je 0x11425
0x00011416      4531c0         xor r8d, r8d
0x00011419      4883b8980000.  cmp qword [rax + 0x98], 0
0x00011421      410f9fc0       setg r8b
0x00011425      488b9c24b800.  mov rbx, qword [rsp + 0xb8]
0x0001142d      488b94247002.  mov rdx, qword [rsp + 0x270]
0x00011435      488b3424       mov rsi, qword [rsp]
0x00011439      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0001143e      4889d9         mov rcx, rbx
0x00011441      e8fad3ffff     call sym.set_regs
0x00011446      85c0           test eax, eax
0x00011448      0f85cf020000   jne 0x1171d
0x0001144e      488b03         mov rax, qword [rbx]
0x00011451      440fb69c24ac.  movzx r11d, byte [rsp + 0x1ac]
0x0001145a      4c8b94245001.  mov r10, qword [rsp + 0x150]
0x00011462      31c9           xor ecx, ecx
0x00011464      4c8b8c243801.  mov r9, qword [rsp + 0x138]
0x0001146c      4c8b84245801.  mov r8, qword [rsp + 0x158]
0x00011474      488bbc24d800.  mov rdi, qword [rsp + 0xd8]
0x0001147c      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x00011484      eb03           jmp 0x11489
0x00011486      488b02         mov rax, qword [rdx]
0x00011489      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001148d      741a           je 0x114a9
0x0001148f      4584db         test r11b, r11b
0x00011492      488b7208       mov rsi, qword [rdx + 8]
0x00011496      0f853e030000   jne 0x117da
0x0001149c      4801f8         add rax, rdi
0x0001149f      4801fe         add rsi, rdi
0x000114a2      488902         mov qword [rdx], rax
0x000114a5      48897208       mov qword [rdx + 8], rsi
0x000114a9      4883c101       add rcx, 1
0x000114ad      4883c210       add rdx, 0x10
0x000114b1      483b8c247002.  cmp rcx, qword [rsp + 0x270]
0x000114b9      75cb           jne 0x11486
0x000114bb      4883bc249800.  cmp qword [rsp + 0x98], 0
0x000114c4      7e3f           jle 0x11505
0x000114c6      488b94249800.  mov rdx, qword [rsp + 0x98]
0x000114ce      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x000114d6      4889c8         mov rax, rcx
0x000114d9      48c1e004       shl rax, 4
0x000114dd      4801ca         add rdx, rcx
0x000114e0      488d440708     lea rax, [rdi + rax + 8]
0x000114e5      48c1e204       shl rdx, 4
0x000114e9      488d741708     lea rsi, [rdi + rdx + 8]
0x000114ee      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000114f5      488950f8       mov qword [rax - 8], rdx
0x000114f9      488910         mov qword [rax], rdx
0x000114fc      4883c010       add rax, 0x10
0x00011500      4839c6         cmp rsi, rax
0x00011503      75f0           jne 0x114f5
0x00011505      488b442438     mov rax, qword [rsp + 0x38]
0x0001150a      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00011512      4c8b88e00000.  mov r9, qword [rax + 0xe0]
0x00011519      4d85c9         test r9, r9
0x0001151c      0f8426f7ffff   je 0x10c48
0x00011522      4c8b9424b800.  mov r10, qword [rsp + 0xb8]
0x0001152a      4531c0         xor r8d, r8d
0x0001152d      498d5210       lea rdx, [r10 + 0x10]
0x00011531      eb36           jmp 0x11569
0x00011533      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x00011538      4c39c0         cmp rax, r8
0x0001153b      7425           je 0x11562
0x0001153d      4883c001       add rax, 1
0x00011541      48c1e004       shl rax, 4
0x00011545      498b0402       mov rax, qword [r10 + rax]
0x00011549      488902         mov qword [rdx], rax
0x0001154c      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x00011551      4883c001       add rax, 1
0x00011555      48c1e004       shl rax, 4
0x00011559      498b440208     mov rax, qword [r10 + rax + 8]
0x0001155e      48894208       mov qword [rdx + 8], rax
0x00011562      4883c210       add rdx, 0x10
0x00011566      4989f0         mov r8, rsi
0x00011569      498d7001       lea rsi, [r8 + 1]
0x0001156d      4839ce         cmp rsi, rcx
0x00011570      75c1           jne 0x11533
0x00011572      e9d1f6ffff     jmp 0x10c48
0x00011577      660f1f840000.  nop word [rax + rax]
0x00011580      488b3c24       mov rdi, qword [rsp]
0x00011584      e8d77fffff     call sym.match_ctx_clean
0x00011589      488bbc241802.  mov rdi, qword [rsp + 0x218]
0x00011591      e86a05ffff     call sym.imp.free
0x00011596      488bbc24f801.  mov rdi, qword [rsp + 0x1f8]
0x0001159e      e85d05ffff     call sym.imp.free
0x000115a3      e9b8f6ffff     jmp 0x10c60
0x000115a8      488b442438     mov rax, qword [rsp + 0x38]
0x000115ad      f680b0000000.  test byte [rax + 0xb0], 2
0x000115b4      0f85cfeeffff   jne 0x10489
0x000115ba      48c78424d801.  mov qword [rsp + 0x1d8], 0
0x000115c6      e9faeeffff     jmp 0x104c5
0x000115cb      4c89e7         mov rdi, r12
0x000115ce      e82d05ffff     call sym.imp.free
0x000115d3      4889ef         mov rdi, rbp
0x000115d6      e82505ffff     call sym.imp.free
0x000115db      e940faffff     jmp 0x11020
0x000115e0      48898424d800.  mov qword [rsp + 0xd8], rax
0x000115e8      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000115f0      c744245c0100.  mov dword [rsp + 0x5c], 1
0x000115f8      e94bf6ffff     jmp 0x10c48
0x000115fd      4885c0         test rax, rax
0x00011600      4989c5         mov r13, rax
0x00011603      0f85eff1ffff   jne 0x107f8
0x00011609      e936f3ffff     jmp 0x10944
0x0001160e      6690           nop
0x00011610      4989c5         mov r13, rax
0x00011613      e9e0f1ffff     jmp 0x107f8
0x00011618      83f80c         cmp eax, 0xc
0x0001161b      0f843ffbffff   je 0x11160
0x00011621      488d0dc86500.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x17bf0 ; "check_matching"
0x00011628      488d35d95f00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x17608 ; "../coreutils-8.31/lib/regexec.c"
0x0001162f      488d3d866000.  lea rdi, str.err____REG_ESPACE          ; 0x176bc ; "err == REG_ESPACE"
0x00011636      ba6c040000     mov edx, 0x46c
0x0001163b      e85006ffff     call sym.imp.__assert_fail
0x00011640      41807e6800     cmp byte [r14 + 0x68], 0
0x00011645      786f           js 0x116b6
0x00011647      8b742458       mov esi, dword [rsp + 0x58]
0x0001164b      488b442408     mov rax, qword [rsp + 8]
0x00011650      85f6           test esi, esi
0x00011652      4889442420     mov qword [rsp + 0x20], rax
0x00011657      0f84f9f2ffff   je 0x10956
0x0001165d      48c744243001.  mov qword [rsp + 0x30], 1
0x00011666      e952f1ffff     jmp 0x107bd
0x0001166b      4889df         mov rdi, rbx
0x0001166e      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x00011676      e9cdf5ffff     jmp 0x10c48
0x0001167b      498d5e10       lea rbx, [r14 + 0x10]
0x0001167f      498d6e18       lea rbp, [r14 + 0x18]
0x00011683      488b3c24       mov rdi, qword [rsp]
0x00011687      31c9           xor ecx, ecx
0x00011689      4889ea         mov rdx, rbp
0x0001168c      4889de         mov rsi, rbx
0x0001168f      e8cc9cffff     call sym.check_subexp_matching_top.isra.18
0x00011694      85c0           test eax, eax
0x00011696      898424d00000.  mov dword [rsp + 0xd0], eax
0x0001169d      7549           jne 0x116e8
0x0001169f      410fb64668     movzx eax, byte [r14 + 0x68]
0x000116a4      a840           test al, 0x40                           ; segment.PHDR
0x000116a6      0f85e4000000   jne 0x11790
0x000116ac      c644241800     mov byte [rsp + 0x18], 0
0x000116b1      e9edf0ffff     jmp 0x107a3
0x000116b6      498b7610       mov rsi, qword [r14 + 0x10]
0x000116ba      488b4c2408     mov rcx, qword [rsp + 8]
0x000116bf      498d5618       lea rdx, [r14 + 0x18]
0x000116c3      488b3c24       mov rdi, qword [rsp]
0x000116c7      e8e49fffff     call sym.check_halt_state_context.isra.20
0x000116cc      4885c0         test rax, rax
0x000116cf      4889442430     mov qword [rsp + 0x30], rax
0x000116d4      0f84e3f0ffff   je 0x107bd
0x000116da      e968ffffff     jmp 0x11647
0x000116df      4c8b7360       mov r14, qword [rbx + 0x60]
0x000116e3      e918faffff     jmp 0x11100
0x000116e8      4898           cdqe
0x000116ea      4889442420     mov qword [rsp + 0x20], rax
0x000116ef      e962f2ffff     jmp 0x10956
0x000116f4      4c8b742418     mov r14, qword [rsp + 0x18]
0x000116f9      4489f8         mov eax, r15d
0x000116fc      4c89e7         mov rdi, r12
0x000116ff      89442408       mov dword [rsp + 8], eax
0x00011703      e8f803ffff     call sym.imp.free
0x00011708      4c89f7         mov rdi, r14
0x0001170b      e8f003ffff     call sym.imp.free
0x00011710      8b442408       mov eax, dword [rsp + 8]
0x00011714      83f801         cmp eax, 1
0x00011717      0f8403f9ffff   je 0x11020
0x0001171d      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00011725      8944245c       mov dword [rsp + 0x5c], eax
0x00011729      e91af5ffff     jmp 0x10c48
0x0001172e      6690           nop
0x00011730      a804           test al, 4
0x00011732      0f8436f0ffff   je 0x1076e
0x00011738      498b5650       mov rdx, qword [r14 + 0x50]
0x0001173c      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00011741      89c1           mov ecx, eax
0x00011743      4889de         mov rsi, rbx
0x00011746      e8d592ffff     call sym.re_acquire_state_context
0x0001174b      4989c6         mov r14, rax
0x0001174e      e9adf9ffff     jmp 0x11100
0x00011753      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00011758      488b4c2408     mov rcx, qword [rsp + 8]
0x0001175d      4889ea         mov rdx, rbp
0x00011760      4c89e6         mov rsi, r12
0x00011763      4c89742420     mov qword [rsp + 0x20], r14
0x00011768      4c89ff         mov rdi, r15
0x0001176b      e87097ffff     call sym.merge_state_array
0x00011770      4889ef         mov rdi, rbp
0x00011773      89442408       mov dword [rsp + 8], eax
0x00011777      e88403ffff     call sym.imp.free
0x0001177c      8b442408       mov eax, dword [rsp + 8]
0x00011780      85c0           test eax, eax
0x00011782      0f84cafbffff   je 0x11352
0x00011788      4531f6         xor r14d, r14d
0x0001178b      e96cffffff     jmp 0x116fc
0x00011790      488b3c24       mov rdi, qword [rsp]
0x00011794      4889ea         mov rdx, rbp
0x00011797      4889de         mov rsi, rbx
0x0001179a      e831dbffff     call sym.transit_state_bkref.isra.34
0x0001179f      85c0           test eax, eax
0x000117a1      898424d00000.  mov dword [rsp + 0xd0], eax
0x000117a8      0f853affffff   jne 0x116e8
0x000117ae      410fb64668     movzx eax, byte [r14 + 0x68]
0x000117b3      e9f4feffff     jmp 0x116ac
0x000117b8      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x000117c0      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x000117c8      48c706000000.  mov qword [rsi], 0
0x000117cf      48894608       mov qword [rsi + 8], rax
0x000117d3      31c0           xor eax, eax
0x000117d5      e977fcffff     jmp 0x11451
0x000117da      4939c2         cmp r10, rax
0x000117dd      741d           je 0x117fc
0x000117df      498b04c1       mov rax, qword [r9 + rax*8]
0x000117e3      4939f2         cmp r10, rsi
0x000117e6      488902         mov qword [rdx], rax
0x000117e9      7409           je 0x117f4
0x000117eb      498b34f1       mov rsi, qword [r9 + rsi*8]
0x000117ef      e9a8fcffff     jmp 0x1149c
0x000117f4      4c89c6         mov rsi, r8
0x000117f7      e9a0fcffff     jmp 0x1149c
0x000117fc      4c89c0         mov rax, r8
0x000117ff      ebe2           jmp 0x117e3
0x00011801      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x00011809      e9baeeffff     jmp 0x106c8
0x0001180e      488984246801.  mov qword [rsp + 0x168], rax
0x00011816      e929f1ffff     jmp 0x10944
0x0001181b      e80004ffff     call sym.imp.__stack_chk_fail
;-- update_cur_sifted_state:
0x00011820      4157           push r15
0x00011822      4156           push r14
0x00011824      4889f8         mov rax, rdi
0x00011827      4155           push r13
0x00011829      4154           push r12
0x0001182b      4989f5         mov r13, rsi
0x0001182e      55             push rbp
0x0001182f      53             push rbx
0x00011830      4889d5         mov rbp, rdx
0x00011833      4889cb         mov rbx, rcx
0x00011836      488d0cd50000.  lea rcx, [rdx*8]
0x0001183e      4881eca80000.  sub rsp, 0xa8
0x00011845      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x0001184c      488b80b80000.  mov rax, qword [rax + 0xb8]
0x00011853      48897c2408     mov qword [rsp + 8], rdi
0x00011858      48894c2418     mov qword [rsp + 0x18], rcx
0x0001185d      64488b3c2528.  mov rdi, qword fs:[0x28]
0x00011866      4889bc249800.  mov qword [rsp + 0x98], rdi
0x0001186e      31ff           xor edi, edi
0x00011870      488b14d0       mov rdx, qword [rax + rdx*8]
0x00011874      c744245c0000.  mov dword [rsp + 0x5c], 0
0x0001187c      488b4b08       mov rcx, qword [rbx + 8]
0x00011880      4885d2         test rdx, rdx
0x00011883      0f844f020000   je 0x11ad8
0x00011889      488d7a08       lea rdi, [rdx + 8]
0x0001188d      4885c9         test rcx, rcx
0x00011890      48897c2410     mov qword [rsp + 0x10], rdi
0x00011895      7551           jne 0x118e8
0x00011897      488b16         mov rdx, qword [rsi]
0x0001189a      48c704ea0000.  mov qword [rdx + rbp*8], 0
0x000118a2      488b14e8       mov rdx, qword [rax + rbp*8]
0x000118a6      31c0           xor eax, eax
0x000118a8      f6426840       test byte [rdx + 0x68], 0x40
0x000118ac      0f85dd000000   jne 0x1198f
0x000118b2      660f1f440000   nop word [rax + rax]
0x000118b8      488bbc249800.  mov rdi, qword [rsp + 0x98]
0x000118c0      6448333c2528.  xor rdi, qword fs:[0x28]
0x000118c9      0f859c070000   jne 0x1206b
0x000118cf      4881c4a80000.  add rsp, 0xa8
0x000118d6      5b             pop rbx
0x000118d7      5d             pop rbp
0x000118d8      415c           pop r12
0x000118da      415d           pop r13
0x000118dc      415e           pop r14
0x000118de      415f           pop r15
0x000118e0      c3             ret
0x000118e1      0f1f80000000.  nop dword [rax]
0x000118e8      488d7c2460     lea rdi, [rsp + 0x60]
0x000118ed      4889da         mov rdx, rbx
0x000118f0      4c89e6         mov rsi, r12
0x000118f3      c74424600000.  mov dword [rsp + 0x60], 0
0x000118fb      e8e093ffff     call sym.re_acquire_state
0x00011900      4889c2         mov rdx, rax
0x00011903      8b442460       mov eax, dword [rsp + 0x60]
0x00011907      85c0           test eax, eax
0x00011909      75ad           jne 0x118b8
0x0001190b      4c8b7a38       mov r15, qword [rdx + 0x38]
0x0001190f      4c8d7238       lea r14, [rdx + 0x38]
0x00011913      4d85ff         test r15, r15
0x00011916      0f8404020000   je 0x11b20
0x0001191c      488b742410     mov rsi, qword [rsp + 0x10]
0x00011921      4c89f2         mov rdx, r14
0x00011924      4889df         mov rdi, rbx
0x00011927      e8b488ffff     call sym.re_node_set_add_intersect
0x0001192c      85c0           test eax, eax
0x0001192e      8944245c       mov dword [rsp + 0x5c], eax
0x00011932      7584           jne 0x118b8
0x00011934      49837d2800     cmp qword [r13 + 0x28], 0
0x00011939      0f8571020000   jne 0x11bb0
0x0001193f      4c8b742418     mov r14, qword [rsp + 0x18]
0x00011944      4d037500       add r14, qword [r13]
0x00011948      488d7c245c     lea rdi, [rsp + 0x5c]
0x0001194d      4889da         mov rdx, rbx
0x00011950      4c89e6         mov rsi, r12
0x00011953      e88893ffff     call sym.re_acquire_state
0x00011958      498906         mov qword [r14], rax
0x0001195b      8b44245c       mov eax, dword [rsp + 0x5c]
0x0001195f      85c0           test eax, eax
0x00011961      0f8551ffffff   jne 0x118b8
0x00011967      48837c241000   cmp qword [rsp + 0x10], 0
0x0001196d      0f8445ffffff   je 0x118b8
0x00011973      488b442408     mov rax, qword [rsp + 8]
0x00011978      488b80b80000.  mov rax, qword [rax + 0xb8]
0x0001197f      488b14e8       mov rdx, qword [rax + rbp*8]
0x00011983      31c0           xor eax, eax
0x00011985      f6426840       test byte [rdx + 0x68], 0x40
0x00011989      0f8429ffffff   je 0x118b8
0x0001198f      488b442408     mov rax, qword [rsp + 8]
0x00011994      31db           xor ebx, ebx
0x00011996      488bb0c80000.  mov rsi, qword [rax + 0xc8]
0x0001199d      4889f2         mov rdx, rsi
0x000119a0      4839d3         cmp rbx, rdx
0x000119a3      7d5e           jge 0x11a03
0x000119a5      488d0413       lea rax, [rbx + rdx]
0x000119a9      4889c1         mov rcx, rax
0x000119ac      48c1e93f       shr rcx, 0x3f
0x000119b0      4801c1         add rcx, rax
0x000119b3      488b442408     mov rax, qword [rsp + 8]
0x000119b8      48d1f9         sar rcx, 1
0x000119bb      488bb8d80000.  mov rdi, qword [rax + 0xd8]
0x000119c2      488d0489       lea rax, [rcx + rcx*4]
0x000119c6      483b6cc708     cmp rbp, qword [rdi + rax*8 + 8]
0x000119cb      7e31           jle 0x119fe
0x000119cd      e935010000     jmp 0x11b07
0x000119d2      660f1f440000   nop word [rax + rax]
0x000119d8      488d140b       lea rdx, [rbx + rcx]
0x000119dc      4889d0         mov rax, rdx
0x000119df      48c1e83f       shr rax, 0x3f
0x000119e3      4801d0         add rax, rdx
0x000119e6      48d1f8         sar rax, 1
0x000119e9      488d1480       lea rdx, [rax + rax*4]
0x000119ed      4989c0         mov r8, rax
0x000119f0      483b6cd708     cmp rbp, qword [rdi + rdx*8 + 8]
0x000119f5      0f8f15010000   jg 0x11b10
0x000119fb      4889c1         mov rcx, rax
0x000119fe      4839cb         cmp rbx, rcx
0x00011a01      7cd5           jl 0x119d8
0x00011a03      4839de         cmp rsi, rbx
0x00011a06      0f8ef4000000   jle 0x11b00
0x00011a0c      488d049b       lea rax, [rbx + rbx*4]
0x00011a10      488d34c50000.  lea rsi, [rax*8]
0x00011a18      488b442408     mov rax, qword [rsp + 8]
0x00011a1d      4889742440     mov qword [rsp + 0x40], rsi
0x00011a22      488b80d80000.  mov rax, qword [rax + 0xd8]
0x00011a29      483b6c3008     cmp rbp, qword [rax + rsi + 8]
0x00011a2e      0f85cc000000   jne 0x11b00
0x00011a34      4883fbff       cmp rbx, 0xffffffffffffffff
0x00011a38      0f84c2000000   je 0x11b00
0x00011a3e      488b442408     mov rax, qword [rsp + 8]
0x00011a43      48c744246000.  mov qword [rsp + 0x60], 0
0x00011a4c      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x00011a53      488b442410     mov rax, qword [rsp + 0x10]
0x00011a58      4883780800     cmp qword [rax + 8], 0
0x00011a5d      0f8e9d000000   jle 0x11b00
0x00011a63      488d442460     lea rax, [rsp + 0x60]
0x00011a68      48c744242000.  mov qword [rsp + 0x20], 0
0x00011a71      48895c2448     mov qword [rsp + 0x48], rbx
0x00011a76      4d89ef         mov r15, r13
0x00011a79      4889442438     mov qword [rsp + 0x38], rax
0x00011a7e      eb22           jmp 0x11aa2
0x00011a80      3c04           cmp al, 4
0x00011a82      0f8480030000   je 0x11e08
0x00011a88      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00011a8d      488344242001   add qword [rsp + 0x20], 1
0x00011a93      488b442420     mov rax, qword [rsp + 0x20]
0x00011a98      483b4108       cmp rax, qword [rcx + 8]
0x00011a9c      0f8db9050000   jge 0x1205b
0x00011aa2      488b442410     mov rax, qword [rsp + 0x10]
0x00011aa7      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00011aac      488b4010       mov rax, qword [rax + 0x10]
0x00011ab0      4c8b34f8       mov r14, qword [rax + rdi*8]
0x00011ab4      4c89f0         mov rax, r14
0x00011ab7      48c1e004       shl rax, 4
0x00011abb      49030424       add rax, qword [r12]
0x00011abf      4d3b7710       cmp r14, qword [r15 + 0x10]
0x00011ac3      0fb64008       movzx eax, byte [rax + 8]
0x00011ac7      75b7           jne 0x11a80
0x00011ac9      493b6f18       cmp rbp, qword [r15 + 0x18]
0x00011acd      75b1           jne 0x11a80
0x00011acf      ebb7           jmp 0x11a88
0x00011ad1      0f1f80000000.  nop dword [rax]
0x00011ad8      4c8d34ed0000.  lea r14, [rbp*8]
0x00011ae0      4c0336         add r14, qword [rsi]
0x00011ae3      4885c9         test rcx, rcx
0x00011ae6      0f85b4000000   jne 0x11ba0
0x00011aec      49c706000000.  mov qword [r14], 0
0x00011af3      31c0           xor eax, eax
0x00011af5      e9befdffff     jmp 0x118b8
0x00011afa      660f1f440000   nop word [rax + rax]
0x00011b00      31c0           xor eax, eax
0x00011b02      e9b1fdffff     jmp 0x118b8
0x00011b07      4989c8         mov r8, rcx
0x00011b0a      4889d1         mov rcx, rdx
0x00011b0d      0f1f00         nop dword [rax]
0x00011b10      498d5801       lea rbx, [r8 + 1]
0x00011b14      4889ca         mov rdx, rcx
0x00011b17      e984feffff     jmp 0x119a0
0x00011b1c      0f1f4000       nop dword [rax]
0x00011b20      488b7b08       mov rdi, qword [rbx + 8]
0x00011b24      48c742400000.  mov qword [rdx + 0x40], 0
0x00011b2c      4889542420     mov qword [rsp + 0x20], rdx
0x00011b31      48897a38       mov qword [rdx + 0x38], rdi
0x00011b35      48c1e703       shl rdi, 3
0x00011b39      e86202ffff     call sym.imp.malloc
0x00011b3e      488b542420     mov rdx, qword [rsp + 0x20]
0x00011b43      4885c0         test rax, rax
0x00011b46      48894248       mov qword [rdx + 0x48], rax
0x00011b4a      7447           je 0x11b93
0x00011b4c      48837b0800     cmp qword [rbx + 8], 0
0x00011b51      c74424600000.  mov dword [rsp + 0x60], 0
0x00011b59      7f13           jg 0x11b6e
0x00011b5b      e9bcfdffff     jmp 0x1191c
0x00011b60      4983c701       add r15, 1
0x00011b64      4c3b7b08       cmp r15, qword [rbx + 8]
0x00011b68      0f8daefdffff   jge 0x1191c
0x00011b6e      488b4310       mov rax, qword [rbx + 0x10]
0x00011b72      4c89f7         mov rdi, r14
0x00011b75      4a8b04f8       mov rax, qword [rax + r15*8]
0x00011b79      488d1440       lea rdx, [rax + rax*2]
0x00011b7d      498b442438     mov rax, qword [r12 + 0x38]
0x00011b82      488d34d0       lea rsi, [rax + rdx*8]
0x00011b86      e86580ffff     call sym.re_node_set_merge
0x00011b8b      85c0           test eax, eax
0x00011b8d      89442460       mov dword [rsp + 0x60], eax
0x00011b91      74cd           je 0x11b60
0x00011b93      b80c000000     mov eax, 0xc
0x00011b98      e91bfdffff     jmp 0x118b8
0x00011b9d      0f1f00         nop dword [rax]
0x00011ba0      48c744241000.  mov qword [rsp + 0x10], 0
0x00011ba9      e99afdffff     jmp 0x11948
0x00011bae      6690           nop
0x00011bb0      488b442408     mov rax, qword [rsp + 8]
0x00011bb5      488b80d80000.  mov rax, qword [rax + 0xd8]
0x00011bbc      4889442420     mov qword [rsp + 0x20], rax
0x00011bc1      0f8ed4000000   jle 0x11c9b
0x00011bc7      4531ff         xor r15d, r15d
0x00011bca      660f1f440000   nop word [rax + rax]
0x00011bd0      498b4530       mov rax, qword [r13 + 0x30]
0x00011bd4      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00011bd9      4a8b04f8       mov rax, qword [rax + r15*8]
0x00011bdd      488d0480       lea rax, [rax + rax*4]
0x00011be1      488d14c7       lea rdx, [rdi + rax*8]
0x00011be5      483b6a10       cmp rbp, qword [rdx + 0x10]
0x00011be9      0f8e9e000000   jle 0x11c8d
0x00011bef      483b6a08       cmp rbp, qword [rdx + 8]
0x00011bf3      0f8f94000000   jg 0x11c8d
0x00011bf9      488b0a         mov rcx, qword [rdx]
0x00011bfc      498b0424       mov rax, qword [r12]
0x00011c00      488b7308       mov rsi, qword [rbx + 8]
0x00011c04      48c1e104       shl rcx, 4
0x00011c08      483b6a18       cmp rbp, qword [rdx + 0x18]
0x00011c0c      4c8b0408       mov r8, qword [rax + rcx]
0x00011c10      0f849a000000   je 0x11cb0
0x00011c16      4531f6         xor r14d, r14d
0x00011c19      4885f6         test rsi, rsi
0x00011c1c      7e6f           jle 0x11c8d
0x00011c1e      48896c2428     mov qword [rsp + 0x28], rbp
0x00011c23      4c89c5         mov rbp, r8
0x00011c26      eb16           jmp 0x11c3e
0x00011c28      0f1f84000000.  nop dword [rax + rax]
0x00011c30      4983c601       add r14, 1
0x00011c34      4c3b7308       cmp r14, qword [rbx + 8]
0x00011c38      7d4e           jge 0x11c88
0x00011c3a      498b0424       mov rax, qword [r12]
0x00011c3e      488b5310       mov rdx, qword [rbx + 0x10]
0x00011c42      4a8b34f2       mov rsi, qword [rdx + r14*8]
0x00011c46      4889f2         mov rdx, rsi
0x00011c49      48c1e204       shl rdx, 4
0x00011c4d      4801d0         add rax, rdx
0x00011c50      0fb65008       movzx edx, byte [rax + 8]
0x00011c54      83ea08         sub edx, 8
0x00011c57      83fa01         cmp edx, 1
0x00011c5a      77d4           ja 0x11c30
0x00011c5c      483b28         cmp rbp, qword [rax]
0x00011c5f      75cf           jne 0x11c30
0x00011c61      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00011c66      4889da         mov rdx, rbx
0x00011c69      4c89e7         mov rdi, r12
0x00011c6c      e8afa2ffff     call sym.sub_epsilon_src_nodes
0x00011c71      85c0           test eax, eax
0x00011c73      0f853ffcffff   jne 0x118b8
0x00011c79      4983c601       add r14, 1
0x00011c7d      4c3b7308       cmp r14, qword [rbx + 8]
0x00011c81      7cb7           jl 0x11c3a
0x00011c83      0f1f440000     nop dword [rax + rax]
0x00011c88      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00011c8d      4983c701       add r15, 1
0x00011c91      4d3b7d28       cmp r15, qword [r13 + 0x28]
0x00011c95      0f8c35ffffff   jl 0x11bd0
0x00011c9b      c744245c0000.  mov dword [rsp + 0x5c], 0
0x00011ca3      e997fcffff     jmp 0x1193f
0x00011ca8      0f1f84000000.  nop dword [rax + rax]
0x00011cb0      4885f6         test rsi, rsi
0x00011cb3      7ed8           jle 0x11c8d
0x00011cb5      4c8b5310       mov r10, qword [rbx + 0x10]
0x00011cb9      49c7c1ffffff.  mov r9, 0xffffffffffffffff
0x00011cc0      4d8d1cf2       lea r11, [r10 + rsi*8]
0x00011cc4      4c89d1         mov rcx, r10
0x00011cc7      4c89ce         mov rsi, r9
0x00011cca      eb1a           jmp 0x11ce6
0x00011ccc      0f1f4000       nop dword [rax]
0x00011cd0      4183fe09       cmp r14d, 9
0x00011cd4      7507           jne 0x11cdd
0x00011cd6      4c3b02         cmp r8, qword [rdx]
0x00011cd9      4c0f44cf       cmove r9, rdi
0x00011cdd      4883c108       add rcx, 8
0x00011ce1      4939cb         cmp r11, rcx
0x00011ce4      7428           je 0x11d0e
0x00011ce6      488b39         mov rdi, qword [rcx]
0x00011ce9      4889fa         mov rdx, rdi
0x00011cec      48c1e204       shl rdx, 4
0x00011cf0      4801c2         add rdx, rax
0x00011cf3      440fb67208     movzx r14d, byte [rdx + 8]
0x00011cf8      4183fe08       cmp r14d, 8
0x00011cfc      75d2           jne 0x11cd0
0x00011cfe      4c3b02         cmp r8, qword [rdx]
0x00011d01      480f44f7       cmove rsi, rdi
0x00011d05      4883c108       add rcx, 8
0x00011d09      4939cb         cmp r11, rcx
0x00011d0c      75d8           jne 0x11ce6
0x00011d0e      4885f6         test rsi, rsi
0x00011d11      4d89ce         mov r14, r9
0x00011d14      4c894c2428     mov qword [rsp + 0x28], r9
0x00011d19      0f88c1000000   js 0x11de0
0x00011d1f      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00011d24      4889da         mov rdx, rbx
0x00011d27      4c89e7         mov rdi, r12
0x00011d2a      e8f1a1ffff     call sym.sub_epsilon_src_nodes
0x00011d2f      85c0           test eax, eax
0x00011d31      0f8581fbffff   jne 0x118b8
0x00011d37      4d85f6         test r14, r14
0x00011d3a      0f884dffffff   js 0x11c8d
0x00011d40      48837b0800     cmp qword [rbx + 8], 0
0x00011d45      0f8e42ffffff   jle 0x11c8d
0x00011d4b      4c8b5310       mov r10, qword [rbx + 0x10]
0x00011d4f      4531f6         xor r14d, r14d
0x00011d52      48896c2430     mov qword [rsp + 0x30], rbp
0x00011d57      4c89f5         mov rbp, r14
0x00011d5a      4c8b742428     mov r14, qword [rsp + 0x28]
0x00011d5f      eb19           jmp 0x11d7a
0x00011d61      0f1f80000000.  nop dword [rax]
0x00011d68      4883c501       add rbp, 1
0x00011d6c      483b6b08       cmp rbp, qword [rbx + 8]
0x00011d70      0f8d82000000   jge 0x11df8
0x00011d76      4c8b5310       mov r10, qword [rbx + 0x10]
0x00011d7a      4d8b14ea       mov r10, qword [r10 + rbp*8]
0x00011d7e      498b442438     mov rax, qword [r12 + 0x38]
0x00011d83      4c89f2         mov rdx, r14
0x00011d86      4f8d0c52       lea r9, [r10 + r10*2]
0x00011d8a      49c1e103       shl r9, 3
0x00011d8e      4c01c8         add rax, r9
0x00011d91      488b7808       mov rdi, qword [rax + 8]
0x00011d95      488d7010       lea rsi, [rax + 0x10]
0x00011d99      e83279ffff     call sym.re_node_set_contains.isra.3
0x00011d9e      4885c0         test rax, rax
0x00011da1      75c5           jne 0x11d68
0x00011da3      4d034c2430     add r9, qword [r12 + 0x30]
0x00011da8      498b7908       mov rdi, qword [r9 + 8]
0x00011dac      498d7110       lea rsi, [r9 + 0x10]
0x00011db0      e81b79ffff     call sym.re_node_set_contains.isra.3
0x00011db5      4885c0         test rax, rax
0x00011db8      75ae           jne 0x11d68
0x00011dba      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00011dbf      4889da         mov rdx, rbx
0x00011dc2      4c89d6         mov rsi, r10
0x00011dc5      4c89e7         mov rdi, r12
0x00011dc8      e853a1ffff     call sym.sub_epsilon_src_nodes
0x00011dcd      85c0           test eax, eax
0x00011dcf      0f85e3faffff   jne 0x118b8
0x00011dd5      4883ed01       sub rbp, 1
0x00011dd9      eb8d           jmp 0x11d68
0x00011ddb      0f1f440000     nop dword [rax + rax]
0x00011de0      48837c242800   cmp qword [rsp + 0x28], 0
0x00011de6      0f8963ffffff   jns 0x11d4f
0x00011dec      e99cfeffff     jmp 0x11c8d
0x00011df1      0f1f80000000.  nop dword [rax]
0x00011df8      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00011dfd      e98bfeffff     jmp 0x11c8d
0x00011e02      660f1f440000   nop word [rax + rax]
0x00011e08      488b442408     mov rax, qword [rsp + 8]
0x00011e0d      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00011e12      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00011e17      4c03a8d80000.  add r13, qword [rax + 0xd8]
0x00011e1e      4b8d0476       lea rax, [r14 + r14*2]
0x00011e22      48c1e003       shl rax, 3
0x00011e26      4889442430     mov qword [rsp + 0x30], rax
0x00011e2b      4a8d04f50000.  lea rax, [r14*8]
0x00011e33      4889442428     mov qword [rsp + 0x28], rax
0x00011e38      4c89f8         mov rax, r15
0x00011e3b      4d89ef         mov r15, r13
0x00011e3e      4989dd         mov r13, rbx
0x00011e41      4889c3         mov rbx, rax
0x00011e44      e965010000     jmp 0x11fae
0x00011e49      0f1f80000000.  nop dword [rax]
0x00011e50      498b4718       mov rax, qword [r15 + 0x18]
0x00011e54      492b4710       sub rax, qword [r15 + 0x10]
0x00011e58      4885c0         test rax, rax
0x00011e5b      4c8d4c0500     lea r9, [rbp + rax]
0x00011e60      0f845a010000   je 0x11fc0
0x00011e66      498b442418     mov rax, qword [r12 + 0x18]
0x00011e6b      488b742428     mov rsi, qword [rsp + 0x28]
0x00011e70      4c8b1430       mov r10, qword [rax + rsi]
0x00011e74      4c3b4b18       cmp r9, qword [rbx + 0x18]
0x00011e78      0f8f39010000   jg 0x11fb7
0x00011e7e      488b03         mov rax, qword [rbx]
0x00011e81      4a8b04c8       mov rax, qword [rax + r9*8]
0x00011e85      4885c0         test rax, rax
0x00011e88      0f8429010000   je 0x11fb7
0x00011e8e      488b7810       mov rdi, qword [rax + 0x10]
0x00011e92      488d7018       lea rsi, [rax + 0x18]
0x00011e96      4c89d2         mov rdx, r10
0x00011e99      e83278ffff     call sym.re_node_set_contains.isra.3
0x00011e9e      4885c0         test rax, rax
0x00011ea1      0f8410010000   je 0x11fb7
0x00011ea7      4883ec08       sub rsp, 8
0x00011eab      488d5330       lea rdx, [rbx + 0x30]
0x00011eaf      488d7328       lea rsi, [rbx + 0x28]
0x00011eb3      4151           push r9
0x00011eb5      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00011eba      4c89f1         mov rcx, r14
0x00011ebd      4d89d1         mov r9, r10
0x00011ec0      4989e8         mov r8, rbp
0x00011ec3      e8b87affff     call sym.check_dst_limits.isra.13
0x00011ec8      84c0           test al, al
0x00011eca      5a             pop rdx
0x00011ecb      59             pop rcx
0x00011ecc      0f85e5000000   jne 0x11fb7
0x00011ed2      48837c246000   cmp qword [rsp + 0x60], 0
0x00011ed8      0f840a010000   je 0x11fe8
0x00011ede      488b442438     mov rax, qword [rsp + 0x38]
0x00011ee3      4c89ee         mov rsi, r13
0x00011ee6      4c89742470     mov qword [rsp + 0x70], r14
0x00011eeb      48896c2478     mov qword [rsp + 0x78], rbp
0x00011ef0      488d7820       lea rdi, [rax + 0x20]
0x00011ef4      e89762ffff     call sym.re_node_set_insert
0x00011ef9      84c0           test al, al
0x00011efb      0f8453010000   je 0x12054
0x00011f01      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00011f06      488b442460     mov rax, qword [rsp + 0x60]
0x00011f0b      488b742438     mov rsi, qword [rsp + 0x38]
0x00011f10      4c8b3c38       mov r15, qword [rax + rdi]
0x00011f14      488b7c2408     mov rdi, qword [rsp + 8]
0x00011f19      e892deffff     call sym.sift_states_backward
0x00011f1e      85c0           test eax, eax
0x00011f20      0f8508010000   jne 0x1202e
0x00011f26      488b7308       mov rsi, qword [rbx + 8]
0x00011f2a      488b542460     mov rdx, qword [rsp + 0x60]
0x00011f2f      4885f6         test rsi, rsi
0x00011f32      7419           je 0x11f4d
0x00011f34      488d4d01       lea rcx, [rbp + 1]
0x00011f38      4c89e7         mov rdi, r12
0x00011f3b      e8a08fffff     call sym.merge_state_array
0x00011f40      85c0           test eax, eax
0x00011f42      0f85e6000000   jne 0x1202e
0x00011f48      488b542460     mov rdx, qword [rsp + 0x60]
0x00011f4d      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00011f52      488b442418     mov rax, qword [rsp + 0x18]
0x00011f57      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x00011f5f      4d8d4b30       lea r9, [r11 + 0x30]
0x00011f63      4c893c02       mov qword [rdx + rax], r15
0x00011f67      4c89ea         mov rdx, r13
0x00011f6a      4c89ce         mov rsi, r9
0x00011f6d      e85e77ffff     call sym.re_node_set_contains.isra.3
0x00011f72      4883e801       sub rax, 1
0x00011f76      4889c2         mov rdx, rax
0x00011f79      780c           js 0x11f87
0x00011f7b      498d7b28       lea rdi, [r11 + 0x28]
0x00011f7f      4c89ce         mov rsi, r9
0x00011f82      e8c978ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x00011f87      488b4c2408     mov rcx, qword [rsp + 8]
0x00011f8c      4b8d44ad00     lea rax, [r13 + r13*4]
0x00011f91      488b91d80000.  mov rdx, qword [rcx + 0xd8]
0x00011f98      488d04c2       lea rax, [rdx + rax*8]
0x00011f9c      0f1f4000       nop dword [rax]
0x00011fa0      4983c501       add r13, 1
0x00011fa4      80782000       cmp byte [rax + 0x20], 0
0x00011fa8      4c8d7828       lea r15, [rax + 0x28]
0x00011fac      7432           je 0x11fe0
0x00011fae      4d3b37         cmp r14, qword [r15]
0x00011fb1      0f8499feffff   je 0x11e50
0x00011fb7      4c89f8         mov rax, r15
0x00011fba      ebe4           jmp 0x11fa0
0x00011fbc      0f1f4000       nop dword [rax]
0x00011fc0      498b442428     mov rax, qword [r12 + 0x28]
0x00011fc5      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00011fca      488b443810     mov rax, qword [rax + rdi + 0x10]
0x00011fcf      4c8b10         mov r10, qword [rax]
0x00011fd2      e99dfeffff     jmp 0x11e74
0x00011fd7      660f1f840000.  nop word [rax + rax]
0x00011fe0      4989df         mov r15, rbx
0x00011fe3      e9a0faffff     jmp 0x11a88
0x00011fe8      488b4330       mov rax, qword [rbx + 0x30]
0x00011fec      488d7320       lea rsi, [rbx + 0x20]
0x00011ff0      660f6f03       movdqa xmm0, xmmword [rbx]
0x00011ff4      488984249000.  mov qword [rsp + 0x90], rax
0x00011ffc      488b442438     mov rax, qword [rsp + 0x38]
0x00012001      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00012006      488d7820       lea rdi, [rax + 0x20]
0x0001200a      660f6f4310     movdqa xmm0, xmmword [rbx + 0x10]
0x0001200f      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x00012014      660f6f4320     movdqa xmm0, xmmword [rbx + 0x20]
0x00012019      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x00012021      e80a88ffff     call sym.re_node_set_init_copy
0x00012026      85c0           test eax, eax
0x00012028      0f84b0feffff   je 0x11ede
0x0001202e      48837c246000   cmp qword [rsp + 0x60], 0
0x00012034      0f847ef8ffff   je 0x118b8
0x0001203a      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x00012042      89442408       mov dword [rsp + 8], eax
0x00012046      e8b5fafeff     call sym.imp.free
0x0001204b      8b442408       mov eax, dword [rsp + 8]
0x0001204f      e964f8ffff     jmp 0x118b8
0x00012054      b80c000000     mov eax, 0xc
0x00012059      ebd3           jmp 0x1202e
0x0001205b      48837c246000   cmp qword [rsp + 0x60], 0
0x00012061      0f8499faffff   je 0x11b00
0x00012067      31c0           xor eax, eax
0x00012069      ebcf           jmp 0x1203a
0x0001206b      e8b0fbfeff     call sym.imp.__stack_chk_fail
;-- parse_bracket_element.constprop.37:
0x00012070      4156           push r14
0x00012072      4155           push r13
0x00012074      4989f2         mov r10, rsi
0x00012077      4154           push r12
0x00012079      55             push rbp
0x0001207a      4c63d9         movsxd r11, ecx
0x0001207d      53             push rbx
0x0001207e      4889d5         mov rbp, rdx
0x00012081      4889fb         mov rbx, rdi
0x00012084      4883ec20       sub rsp, 0x20
0x00012088      4c8b6648       mov r12, qword [rsi + 0x48]
0x0001208c      64488b042528.  mov rax, qword fs:[0x28]
0x00012095      4889442418     mov qword [rsp + 0x18], rax
0x0001209a      31c0           xor eax, eax
0x0001209c      83be90000000.  cmp dword [rsi + 0x90], 1
0x000120a3      7453           je 0x120f8
0x000120a5      4c89e6         mov rsi, r12
0x000120a8      4c89d7         mov rdi, r10
0x000120ab      e87075ffff     call sym.re_string_char_size_at.part.0
0x000120b0      83f801         cmp eax, 1
0x000120b3      7e43           jle 0x120f8
0x000120b5      498b5210       mov rdx, qword [r10 + 0x10]
0x000120b9      4898           cdqe
0x000120bb      c70301000000   mov dword [rbx], 1
0x000120c1      4c01e0         add rax, r12
0x000120c4      428b14a2       mov edx, dword [rdx + r12*4]
0x000120c8      895308         mov dword [rbx + 8], edx
0x000120cb      49894248       mov qword [r10 + 0x48], rax
0x000120cf      31c0           xor eax, eax
0x000120d1      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000120d6      6448330c2528.  xor rcx, qword fs:[0x28]
0x000120df      0f85e3010000   jne 0x122c8
0x000120e5      4883c420       add rsp, 0x20
0x000120e9      5b             pop rbx
0x000120ea      5d             pop rbp
0x000120eb      415c           pop r12
0x000120ed      415d           pop r13
0x000120ef      415e           pop r14
0x000120f1      c3             ret
0x000120f2      660f1f440000   nop word [rax + rax]
0x000120f8      0fb64508       movzx eax, byte [rbp + 8]
0x000120fc      4d01e3         add r11, r12
0x000120ff      4d895a48       mov qword [r10 + 0x48], r11
0x00012103      89c2           mov edx, eax
0x00012105      83e2fb         and edx, 0xfffffffb                     ; 4294967291
0x00012108      80fa1a         cmp dl, 0x1a
0x0001210b      7423           je 0x12130
0x0001210d      3c1c           cmp al, 0x1c
0x0001210f      741f           je 0x12130
0x00012111      3c16           cmp al, 0x16
0x00012113      7509           jne 0x1211e
0x00012115      4584c9         test r9b, r9b
0x00012118      0f8444010000   je 0x12262
0x0001211e      0fb64500       movzx eax, byte [rbp]
0x00012122      c70300000000   mov dword [rbx], 0
0x00012128      884308         mov byte [rbx + 8], al
0x0001212b      31c0           xor eax, eax
0x0001212d      eba2           jmp 0x120d1
0x0001212f      90             nop
0x00012130      4d8b6268       mov r12, qword [r10 + 0x68]
0x00012134      4d39e3         cmp r11, r12
0x00012137      0f8d1b010000   jge 0x12258
0x0001213d      440fb66d00     movzx r13d, byte [rbp]
0x00012142      4531c0         xor r8d, r8d
0x00012145      eb2b           jmp 0x12172
0x00012147      660f1f840000.  nop word [rax + rax]
0x00012150      488b4308       mov rax, qword [rbx + 8]
0x00012154      46880c00       mov byte [rax + r8], r9b
0x00012158      4983c001       add r8, 1
0x0001215c      4983f820       cmp r8, 0x20                            ; "@"
0x00012160      0f84f2000000   je 0x12258
0x00012166      0fb64508       movzx eax, byte [rbp + 8]
0x0001216a      4d8b5a48       mov r11, qword [r10 + 0x48]
0x0001216e      4d8b6268       mov r12, qword [r10 + 0x68]
0x00012172      3c1e           cmp al, 0x1e
0x00012174      4d63f0         movsxd r14, r8d
0x00012177      7467           je 0x121e0
0x00012179      498b5208       mov rdx, qword [r10 + 8]
0x0001217d      498d4301       lea rax, [r11 + 1]
0x00012181      49894248       mov qword [r10 + 0x48], rax
0x00012185      460fb60c1a     movzx r9d, byte [rdx + r11]
0x0001218a      4c39e0         cmp rax, r12
0x0001218d      0f8dc5000000   jge 0x12258
0x00012193      4538cd         cmp r13b, r9b
0x00012196      75b8           jne 0x12150
0x00012198      498b5208       mov rdx, qword [r10 + 8]
0x0001219c      803c025d       cmp byte [rdx + rax], 0x5d
0x000121a0      75ae           jne 0x12150
0x000121a2      4883c001       add rax, 1
0x000121a6      49894248       mov qword [r10 + 0x48], rax
0x000121aa      488b4308       mov rax, qword [rbx + 8]
0x000121ae      42c6043000     mov byte [rax + r14], 0
0x000121b3      0fb64508       movzx eax, byte [rbp + 8]
0x000121b7      3c1c           cmp al, 0x1c
0x000121b9      0f84fc000000   je 0x122bb
0x000121bf      3c1e           cmp al, 0x1e
0x000121c1      0f84e7000000   je 0x122ae
0x000121c7      3c1a           cmp al, 0x1a
0x000121c9      0f84d2000000   je 0x122a1
0x000121cf      31c0           xor eax, eax
0x000121d1      e9fbfeffff     jmp 0x120d1
0x000121d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000121e0      4180ba8b0000.  cmp byte [r10 + 0x8b], 0
0x000121e8      748f           je 0x12179
0x000121ea      4180ba8c0000.  cmp byte [r10 + 0x8c], 0
0x000121f2      0f8490000000   je 0x12288
0x000121f8      4d3b5a30       cmp r11, qword [r10 + 0x30]
0x000121fc      740f           je 0x1220d
0x000121fe      498b4210       mov rax, qword [r10 + 0x10]
0x00012202      42833c98ff     cmp dword [rax + r11*4], 0xffffffff
0x00012207      0f846cffffff   je 0x12179
0x0001220d      498b4218       mov rax, qword [r10 + 0x18]
0x00012211      4a8b04d8       mov rax, qword [rax + r11*8]
0x00012215      490302         add rax, qword [r10]
0x00012218      49034228       add rax, qword [r10 + 0x28]
0x0001221c      440fb608       movzx r9d, byte [rax]
0x00012220      41f6c180       test r9b, 0x80
0x00012224      0f854fffffff   jne 0x12179
0x0001222a      4183ba900000.  cmp dword [r10 + 0x90], 1
0x00012232      b801000000     mov eax, 1
0x00012237      740d           je 0x12246
0x00012239      4c89de         mov rsi, r11
0x0001223c      4c89d7         mov rdi, r10
0x0001223f      e8dc73ffff     call sym.re_string_char_size_at.part.0
0x00012244      4898           cdqe
0x00012246      4c01d8         add rax, r11
0x00012249      49894248       mov qword [r10 + 0x48], rax
0x0001224d      e938ffffff     jmp 0x1218a
0x00012252      660f1f440000   nop word [rax + rax]
0x00012258      b807000000     mov eax, 7
0x0001225d      e96ffeffff     jmp 0x120d1
0x00012262      4889e7         mov rdi, rsp
0x00012265      4c89c2         mov rdx, r8
0x00012268      4c89d6         mov rsi, r10
0x0001226b      e85059ffff     call sym.peek_token_bracket
0x00012270      807c240815     cmp byte [rsp + 8], 0x15
0x00012275      b80b000000     mov eax, 0xb
0x0001227a      0f849efeffff   je 0x1211e
0x00012280      e94cfeffff     jmp 0x120d1
0x00012285      0f1f00         nop dword [rax]
0x00012288      498d4301       lea rax, [r11 + 1]
0x0001228c      4d031a         add r11, qword [r10]
0x0001228f      498b5228       mov rdx, qword [r10 + 0x28]
0x00012293      49894248       mov qword [r10 + 0x48], rax
0x00012297      450fb60c13     movzx r9d, byte [r11 + rdx]
0x0001229c      e9e9feffff     jmp 0x1218a
0x000122a1      c70303000000   mov dword [rbx], 3
0x000122a7      31c0           xor eax, eax
0x000122a9      e923feffff     jmp 0x120d1
0x000122ae      c70304000000   mov dword [rbx], 4
0x000122b4      31c0           xor eax, eax
0x000122b6      e916feffff     jmp 0x120d1
0x000122bb      c70302000000   mov dword [rbx], 2
0x000122c1      31c0           xor eax, eax
0x000122c3      e909feffff     jmp 0x120d1
0x000122c8      e853f9feff     call sym.imp.__stack_chk_fail
0x000122cd      0f1f00         nop dword [rax]
;-- peek_token:
0x000122d0      4157           push r15
0x000122d2      4156           push r14
0x000122d4      4155           push r13
0x000122d6      4154           push r12
0x000122d8      55             push rbp
0x000122d9      53             push rbx
0x000122da      4889fd         mov rbp, rdi
0x000122dd      4883ec38       sub rsp, 0x38
0x000122e1      4c8b7648       mov r14, qword [rsi + 0x48]
0x000122e5      64488b042528.  mov rax, qword fs:[0x28]
0x000122ee      4889442428     mov qword [rsp + 0x28], rax
0x000122f3      31c0           xor eax, eax
0x000122f5      4c397668       cmp qword [rsi + 0x68], r14
0x000122f9      0f8e91000000   jle 0x12390
0x000122ff      440fb66f0a     movzx r13d, byte [rdi + 0xa]
0x00012304      4989d7         mov r15, rdx
0x00012307      488b5608       mov rdx, qword [rsi + 8]
0x0001230b      4889f3         mov rbx, rsi
0x0001230e      460fb62432     movzx r12d, byte [rdx + r14]
0x00012313      4183e59f       and r13d, 0xffffff9f                    ; 4294967199
0x00012317      44886f0a       mov byte [rdi + 0xa], r13b
0x0001231b      8b8690000000   mov eax, dword [rsi + 0x90]
0x00012321      448827         mov byte [rdi], r12b
0x00012324      83f801         cmp eax, 1
0x00012327      0f8e93000000   jle 0x123c0
0x0001232d      4c3b7630       cmp r14, qword [rsi + 0x30]
0x00012331      0f8499010000   je 0x124d0
0x00012337      488b4e10       mov rcx, qword [rsi + 0x10]
0x0001233b      428b0cb1       mov ecx, dword [rcx + r14*4]
0x0001233f      83f9ff         cmp ecx, 0xffffffff
0x00012342      0f84d8000000   je 0x12420
0x00012348      4180fc5c       cmp r12b, 0x5c
0x0001234c      0f84ee000000   je 0x12440
0x00012352      c6470801       mov byte [rdi + 8], 1
0x00012356      89cf           mov edi, ecx
0x00012358      4889542408     mov qword [rsp + 8], rdx
0x0001235d      890c24         mov dword [rsp], ecx
0x00012360      e82bfafeff     call sym.imp.iswalnum
0x00012365      8b0c24         mov ecx, dword [rsp]
0x00012368      85c0           test eax, eax
0x0001236a      0f95c0         setne al
0x0001236d      83f95f         cmp ecx, 0x5f
0x00012370      0f94c1         sete cl
0x00012373      09c8           or eax, ecx
0x00012375      c1e006         shl eax, 6
0x00012378      4109c5         or r13d, eax
0x0001237b      44886d0a       mov byte [rbp + 0xa], r13b
0x0001237f      488b542408     mov rdx, qword [rsp + 8]
0x00012384      eb76           jmp 0x123fc
0x00012386      662e0f1f8400.  nop word cs:[rax + rax]
0x00012390      c6470802       mov byte [rdi + 8], 2
0x00012394      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00012399      6448333c2528.  xor rdi, qword fs:[0x28]
0x000123a2      0f8520060000   jne 0x129c8
0x000123a8      4883c438       add rsp, 0x38
0x000123ac      5b             pop rbx
0x000123ad      5d             pop rbp
0x000123ae      415c           pop r12
0x000123b0      415d           pop r13
0x000123b2      415e           pop r14
0x000123b4      415f           pop r15
0x000123b6      c3             ret
0x000123b7      660f1f840000.  nop word [rax + rax]
0x000123c0      4180fc5c       cmp r12b, 0x5c
0x000123c4      747a           je 0x12440
0x000123c6      c6450801       mov byte [rbp + 8], 1
0x000123ca      48891424       mov qword [rsp], rdx
0x000123ce      e87dfbfeff     call sym.imp.__ctype_b_loc
0x000123d3      488b30         mov rsi, qword [rax]
0x000123d6      410fb6cc       movzx ecx, r12b
0x000123da      0fb7044e       movzx eax, word [rsi + rcx*2]
0x000123de      66c1e803       shr ax, 3
0x000123e2      83e001         and eax, 1
0x000123e5      4180fc5f       cmp r12b, 0x5f
0x000123e9      0f94c1         sete cl
0x000123ec      09c8           or eax, ecx
0x000123ee      c1e006         shl eax, 6
0x000123f1      4109c5         or r13d, eax
0x000123f4      44886d0a       mov byte [rbp + 0xa], r13b
0x000123f8      488b1424       mov rdx, qword [rsp]
0x000123fc      4183ec0a       sub r12d, 0xa
0x00012400      4180fc73       cmp r12b, 0x73
0x00012404      0f8732010000   ja 0x1253c
0x0001240a      488d0d635300.  lea rcx, [0x00017774]
0x00012411      450fb6e4       movzx r12d, r12b
0x00012415      4a6304a1       movsxd rax, dword [rcx + r12*4]
0x00012419      4801c8         add rax, rcx
0x0001241c      ffe0           jmp rax
0x0001241e      6690           nop
0x00012420      4183cd20       or r13d, 0x20                           ; "@"
0x00012424      c6470801       mov byte [rdi + 8], 1
0x00012428      b801000000     mov eax, 1
0x0001242d      44886f0a       mov byte [rdi + 0xa], r13b
0x00012431      e95effffff     jmp 0x12394
0x00012436      662e0f1f8400.  nop word cs:[rax + rax]
0x00012440      498d7601       lea rsi, [r14 + 1]
0x00012444      483b7358       cmp rsi, qword [rbx + 0x58]
0x00012448      0f8da2000000   jge 0x124f0
0x0001244e      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00012455      0f8585040000   jne 0x128e0
0x0001245b      420fb67c3201   movzx edi, byte [rdx + r14 + 1]
0x00012461      4189fc         mov r12d, edi
0x00012464      897c2408       mov dword [rsp + 8], edi
0x00012468      83f801         cmp eax, 1
0x0001246b      44886500       mov byte [rbp], r12b
0x0001246f      c6450801       mov byte [rbp + 8], 1
0x00012473      0f8e47040000   jle 0x128c0
0x00012479      488b4310       mov rax, qword [rbx + 0x10]
0x0001247d      448b04b0       mov r8d, dword [rax + rsi*4]
0x00012481      4489c7         mov edi, r8d
0x00012484      44890424       mov dword [rsp], r8d
0x00012488      e803f9feff     call sym.imp.iswalnum
0x0001248d      448b0424       mov r8d, dword [rsp]
0x00012491      85c0           test eax, eax
0x00012493      0f95c0         setne al
0x00012496      4183f85f       cmp r8d, 0x5f
0x0001249a      0f94c2         sete dl
0x0001249d      418d4c24d9     lea ecx, [r12 - 0x27]
0x000124a2      09d0           or eax, edx
0x000124a4      c1e006         shl eax, 6
0x000124a7      4109c5         or r13d, eax
0x000124aa      80f956         cmp cl, 0x56
0x000124ad      44886d0a       mov byte [rbp + 0xa], r13b
0x000124b1      0f87fe030000   ja 0x128b5
0x000124b7      488d15865400.  lea rdx, [0x00017944]
0x000124be      0fb6c9         movzx ecx, cl
0x000124c1      4863048a       movsxd rax, dword [rdx + rcx*4]
0x000124c5      4801d0         add rax, rdx
0x000124c8      ffe0           jmp rax
0x000124ca      660f1f440000   nop word [rax + rax]
0x000124d0      4180fc5c       cmp r12b, 0x5c
0x000124d4      0f8466ffffff   je 0x12440
0x000124da      488b4310       mov rax, qword [rbx + 0x10]
0x000124de      c6450801       mov byte [rbp + 8], 1
0x000124e2      428b0cb0       mov ecx, dword [rax + r14*4]
0x000124e6      e96bfeffff     jmp 0x12356
0x000124eb      0f1f440000     nop dword [rax + rax]
0x000124f0      c6450824       mov byte [rbp + 8], 0x24                ; '$'
0x000124f4      b801000000     mov eax, 1
0x000124f9      e996feffff     jmp 0x12394
0x000124fe      6690           nop
0x00012500      4181e7001200.  and r15d, 0x1200
0x00012507      b801000000     mov eax, 1
0x0001250c      4981ff001200.  cmp r15, 0x1200
0x00012513      0f857bfeffff   jne 0x12394
0x00012519      c6450818       mov byte [rbp + 8], 0x18
0x0001251d      e972feffff     jmp 0x12394
0x00012522      660f1f440000   nop word [rax + rax]
0x00012528      4181e7008400.  and r15d, 0x8400
0x0001252f      4981ff008000.  cmp r15, 0x8000
0x00012536      0f84d6000000   je 0x12612
0x0001253c      b801000000     mov eax, 1
0x00012541      e94efeffff     jmp 0x12394
0x00012546      662e0f1f8400.  nop word cs:[rax + rax]
0x00012550      4181e7001200.  and r15d, 0x1200
0x00012557      b801000000     mov eax, 1
0x0001255c      4981ff001200.  cmp r15, 0x1200
0x00012563      0f852bfeffff   jne 0x12394
0x00012569      c6450817       mov byte [rbp + 8], 0x17
0x0001256d      e922feffff     jmp 0x12394
0x00012572      660f1f440000   nop word [rax + rax]
0x00012578      41f7c7080080.  test r15d, 0x800008
0x0001257f      7509           jne 0x1258a
0x00012581      4d85f6         test r14, r14
0x00012584      0f85c0030000   jne 0x1294a
0x0001258a      c645080c       mov byte [rbp + 8], 0xc
0x0001258e      c74500100000.  mov dword [rbp], 0x10
0x00012595      b801000000     mov eax, 1
0x0001259a      e9f5fdffff     jmp 0x12394
0x0001259f      90             nop
0x000125a0      c6450814       mov byte [rbp + 8], 0x14
0x000125a4      b801000000     mov eax, 1
0x000125a9      e9e6fdffff     jmp 0x12394
0x000125ae      6690           nop
0x000125b0      41f7c7020400.  test r15d, 0x402
0x000125b7      b801000000     mov eax, 1
0x000125bc      0f85d2fdffff   jne 0x12394
0x000125c2      c6450813       mov byte [rbp + 8], 0x13
0x000125c6      e9c9fdffff     jmp 0x12394
0x000125cb      0f1f440000     nop dword [rax + rax]
0x000125d0      c6450805       mov byte [rbp + 8], 5
0x000125d4      b801000000     mov eax, 1
0x000125d9      e9b6fdffff     jmp 0x12394
0x000125de      6690           nop
0x000125e0      41f7c7020400.  test r15d, 0x402
0x000125e7      b801000000     mov eax, 1
0x000125ec      0f85a2fdffff   jne 0x12394
0x000125f2      c6450812       mov byte [rbp + 8], 0x12
0x000125f6      e999fdffff     jmp 0x12394
0x000125fb      0f1f440000     nop dword [rax + rax]
0x00012600      41f7c7000800.  test r15d, 0x800
0x00012607      b801000000     mov eax, 1
0x0001260c      0f8482fdffff   je 0x12394
0x00012612      c645080a       mov byte [rbp + 8], 0xa
0x00012616      b801000000     mov eax, 1
0x0001261b      e974fdffff     jmp 0x12394
0x00012620      c645080b       mov byte [rbp + 8], 0xb
0x00012624      b801000000     mov eax, 1
0x00012629      e966fdffff     jmp 0x12394
0x0001262e      6690           nop
0x00012630      41f7c7002000.  test r15d, 0x2000                       ; "?\x01"
0x00012637      b801000000     mov eax, 1
0x0001263c      0f8452fdffff   je 0x12394
0x00012642      c6450809       mov byte [rbp + 8], 9
0x00012646      e949fdffff     jmp 0x12394
0x0001264b      0f1f440000     nop dword [rax + rax]
0x00012650      41f7c7002000.  test r15d, 0x2000                       ; "?\x01"
0x00012657      b801000000     mov eax, 1
0x0001265c      0f8432fdffff   je 0x12394
0x00012662      c6450808       mov byte [rbp + 8], 8
0x00012666      e929fdffff     jmp 0x12394
0x0001266b      0f1f440000     nop dword [rax + rax]
0x00012670      41f6c708       test r15b, 8
0x00012674      750e           jne 0x12684
0x00012676      4983c601       add r14, 1
0x0001267a      4c3b7358       cmp r14, qword [rbx + 0x58]
0x0001267e      0f85f7020000   jne 0x1297b
0x00012684      c645080c       mov byte [rbp + 8], 0xc
0x00012688      c74500200000.  mov dword [rbp], 0x20                   ; "@"
0x0001268f      b801000000     mov eax, 1
0x00012694      e9fbfcffff     jmp 0x12394
0x00012699      41f7c7008400.  test r15d, 0x8400
0x000126a0      b802000000     mov eax, 2
0x000126a5      0f85e9fcffff   jne 0x12394
0x000126ab      c645080a       mov byte [rbp + 8], 0xa
0x000126af      e9e0fcffff     jmp 0x12394
0x000126b4      4181e7001200.  and r15d, 0x1200
0x000126bb      b802000000     mov eax, 2
0x000126c0      4981ff000200.  cmp r15, 0x200
0x000126c7      0f85c7fcffff   jne 0x12394
0x000126cd      e997feffff     jmp 0x12569
0x000126d2      41f7c7000008.  test r15d, 0x80000
0x000126d9      b802000000     mov eax, 2
0x000126de      0f85b0fcffff   jne 0x12394
0x000126e4      c6450820       mov byte [rbp + 8], 0x20                ; "@"
0x000126e8      e9a7fcffff     jmp 0x12394
0x000126ed      41f7c7000008.  test r15d, 0x80000
0x000126f4      b802000000     mov eax, 2
0x000126f9      0f8595fcffff   jne 0x12394
0x000126ff      c6450822       mov byte [rbp + 8], 0x22                ; '"'
0x00012703      e98cfcffff     jmp 0x12394
0x00012708      4181e7001200.  and r15d, 0x1200
0x0001270f      b802000000     mov eax, 2
0x00012714      4981ff000200.  cmp r15, 0x200
0x0001271b      0f8573fcffff   jne 0x12394
0x00012721      e9f3fdffff     jmp 0x12519
0x00012726      41f7c7000008.  test r15d, 0x80000
0x0001272d      b802000000     mov eax, 2
0x00012732      0f855cfcffff   jne 0x12394
0x00012738      c645080c       mov byte [rbp + 8], 0xc
0x0001273c      c74500000100.  mov dword [rbp], obj.__frame_dummy_init_array_entry ; 0x100
0x00012743      e94cfcffff     jmp 0x12394
0x00012748      41f7c7000008.  test r15d, 0x80000
0x0001274f      b802000000     mov eax, 2
0x00012754      0f853afcffff   jne 0x12394
0x0001275a      c645080c       mov byte [rbp + 8], 0xc
0x0001275e      c74500400000.  mov dword [rbp], 0x40                   ; segment.PHDR
0x00012765      e92afcffff     jmp 0x12394
0x0001276a      41f7c7000008.  test r15d, 0x80000
0x00012771      b802000000     mov eax, 2
0x00012776      0f8518fcffff   jne 0x12394
0x0001277c      c6450821       mov byte [rbp + 8], 0x21                ; '!'
0x00012780      e90ffcffff     jmp 0x12394
0x00012785      41f7c7000008.  test r15d, 0x80000
0x0001278c      b802000000     mov eax, 2
0x00012791      0f85fdfbffff   jne 0x12394
0x00012797      c6450823       mov byte [rbp + 8], 0x23                ; '#'
0x0001279b      e9f4fbffff     jmp 0x12394
0x000127a0      41f7c7000008.  test r15d, 0x80000
0x000127a7      b802000000     mov eax, 2
0x000127ac      0f85e2fbffff   jne 0x12394
0x000127b2      c645080c       mov byte [rbp + 8], 0xc
0x000127b6      c74500000200.  mov dword [rbp], 0x200
0x000127bd      e9d2fbffff     jmp 0x12394
0x000127c2      4181e7020400.  and r15d, 0x402
0x000127c9      b802000000     mov eax, 2
0x000127ce      4983ff02       cmp r15, 2
0x000127d2      0f85bcfbffff   jne 0x12394
0x000127d8      e9e5fdffff     jmp 0x125c2
0x000127dd      41f7c7000008.  test r15d, 0x80000
0x000127e4      b802000000     mov eax, 2
0x000127e9      0f85a5fbffff   jne 0x12394
0x000127ef      c645080c       mov byte [rbp + 8], 0xc
0x000127f3      c74500090000.  mov dword [rbp], 9
0x000127fa      e995fbffff     jmp 0x12394
0x000127ff      41f7c7000008.  test r15d, 0x80000
0x00012806      b802000000     mov eax, 2
0x0001280b      0f8583fbffff   jne 0x12394
0x00012811      c645080c       mov byte [rbp + 8], 0xc
0x00012815      c74500060000.  mov dword [rbp], 6
0x0001281c      e973fbffff     jmp 0x12394
0x00012821      41f7c7004000.  test r15d, 0x4000
0x00012828      b802000000     mov eax, 2
0x0001282d      0f8561fbffff   jne 0x12394
0x00012833      8b542408       mov edx, dword [rsp + 8]
0x00012837      c6450804       mov byte [rbp + 8], 4
0x0001283b      83ea31         sub edx, 0x31
0x0001283e      4863d2         movsxd rdx, edx
0x00012841      48895500       mov qword [rbp], rdx
0x00012845      e94afbffff     jmp 0x12394
0x0001284a      4181e7020400.  and r15d, 0x402
0x00012851      b802000000     mov eax, 2
0x00012856      4983ff02       cmp r15, 2
0x0001285a      0f8534fbffff   jne 0x12394
0x00012860      e98dfdffff     jmp 0x125f2
0x00012865      41f7c7002000.  test r15d, 0x2000                       ; "?\x01"
0x0001286c      b802000000     mov eax, 2
0x00012871      0f851dfbffff   jne 0x12394
0x00012877      e9c6fdffff     jmp 0x12642
0x0001287c      41f7c7002000.  test r15d, 0x2000                       ; "?\x01"
0x00012883      b802000000     mov eax, 2
0x00012888      0f8506fbffff   jne 0x12394
0x0001288e      e9cffdffff     jmp 0x12662
0x00012893      41f7c7000008.  test r15d, 0x80000
0x0001289a      b802000000     mov eax, 2
0x0001289f      0f85effaffff   jne 0x12394
0x000128a5      c645080c       mov byte [rbp + 8], 0xc
0x000128a9      c74500800000.  mov dword [rbp], 0x80
0x000128b0      e9dffaffff     jmp 0x12394
0x000128b5      b802000000     mov eax, 2
0x000128ba      e9d5faffff     jmp 0x12394
0x000128bf      90             nop
0x000128c0      e88bf6feff     call sym.imp.__ctype_b_loc
0x000128c5      488b30         mov rsi, qword [rax]
0x000128c8      410fb6d4       movzx edx, r12b
0x000128cc      0fb70456       movzx eax, word [rsi + rdx*2]
0x000128d0      66c1e803       shr ax, 3
0x000128d4      83e001         and eax, 1
0x000128d7      4180fc5f       cmp r12b, 0x5f
0x000128db      e9bafbffff     jmp 0x1249a
0x000128e0      83f801         cmp eax, 1
0x000128e3      7e2f           jle 0x12914
0x000128e5      488b4b10       mov rcx, qword [rbx + 0x10]
0x000128e9      488d3cb50000.  lea rdi, [rsi*4]
0x000128f1      448b04b1       mov r8d, dword [rcx + rsi*4]
0x000128f5      4183f8ff       cmp r8d, 0xffffffff
0x000128f9      0f84b0000000   je 0x129af
0x000128ff      4d8d4e02       lea r9, [r14 + 2]
0x00012903      4c394b30       cmp qword [rbx + 0x30], r9
0x00012907      740b           je 0x12914
0x00012909      837c3904ff     cmp dword [rcx + rdi + 4], 0xffffffff
0x0001290e      0f849b000000   je 0x129af
0x00012914      80bb8c000000.  cmp byte [rbx + 0x8c], 0
0x0001291b      488b0b         mov rcx, qword [rbx]
0x0001291e      488b7b28       mov rdi, qword [rbx + 0x28]
0x00012922      7444           je 0x12968
0x00012924      4c8b4318       mov r8, qword [rbx + 0x18]
0x00012928      4801f9         add rcx, rdi
0x0001292b      49030cf0       add rcx, qword [r8 + rsi*8]
0x0001292f      0fb639         movzx edi, byte [rcx]
0x00012932      4189fc         mov r12d, edi
0x00012935      897c2408       mov dword [rsp + 8], edi
0x00012939      81e780000000   and edi, 0x80
0x0001293f      0f8516fbffff   jne 0x1245b
0x00012945      e91efbffff     jmp 0x12468
0x0001294a      42807c32ff0a   cmp byte [rdx + r14 - 1], 0xa
0x00012950      0f85e6fbffff   jne 0x1253c
0x00012956      41f7c7000800.  test r15d, 0x800
0x0001295d      0f84d9fbffff   je 0x1253c
0x00012963      e922fcffff     jmp 0x1258a
0x00012968      4801f1         add rcx, rsi
0x0001296b      0fb63c39       movzx edi, byte [rcx + rdi]
0x0001296f      4189fc         mov r12d, edi
0x00012972      897c2408       mov dword [rsp + 8], edi
0x00012976      e9edfaffff     jmp 0x12468
0x0001297b      488d7c2410     lea rdi, [rsp + 0x10]
0x00012980      4c89fa         mov rdx, r15
0x00012983      4c897348       mov qword [rbx + 0x48], r14
0x00012987      4889de         mov rsi, rbx
0x0001298a      e841f9ffff     call sym.peek_token
0x0001298f      0fb6442418     movzx eax, byte [rsp + 0x18]
0x00012994      48836b4801     sub qword [rbx + 0x48], 1
0x00012999      8d50f7         lea edx, [rax - 9]
0x0001299c      b801000000     mov eax, 1
0x000129a1      80fa01         cmp dl, 1
0x000129a4      0f87eaf9ffff   ja 0x12394
0x000129aa      e9d5fcffff     jmp 0x12684
0x000129af      420fb6443201   movzx eax, byte [rdx + r14 + 1]
0x000129b5      c6450801       mov byte [rbp + 8], 1
0x000129b9      4189c4         mov r12d, eax
0x000129bc      884500         mov byte [rbp], al
0x000129bf      89442408       mov dword [rsp + 8], eax
0x000129c3      e9b9faffff     jmp 0x12481
0x000129c8      e853f2feff     call sym.imp.__stack_chk_fail
0x000129cd      0f1f00         nop dword [rax]
;-- fetch_number:
0x000129d0      4156           push r14
0x000129d2      4989fe         mov r14, rdi
0x000129d5      4155           push r13
0x000129d7      4989f5         mov r13, rsi
0x000129da      4154           push r12
0x000129dc      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x000129e3      55             push rbp
0x000129e4      4889d5         mov rbp, rdx
0x000129e7      53             push rbx
0x000129e8      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x000129ef      90             nop
0x000129f0      4889ea         mov rdx, rbp
0x000129f3      4c89f6         mov rsi, r14
0x000129f6      4c89ef         mov rdi, r13
0x000129f9      e8d2f8ffff     call sym.peek_token
0x000129fe      4898           cdqe
0x00012a00      49014648       add qword [r14 + 0x48], rax
0x00012a04      410fb64508     movzx eax, byte [r13 + 8]
0x00012a09      410fb65500     movzx edx, byte [r13]
0x00012a0e      3c02           cmp al, 2
0x00012a10      744e           je 0x12a60
0x00012a12      3c18           cmp al, 0x18
0x00012a14      7451           je 0x12a67
0x00012a16      80fa2c         cmp dl, 0x2c
0x00012a19      744c           je 0x12a67
0x00012a1b      3c01           cmp al, 1
0x00012a1d      7409           je 0x12a28
0x00012a1f      4c89e3         mov rbx, r12
0x00012a22      ebcc           jmp 0x129f0
0x00012a24      0f1f4000       nop dword [rax]
0x00012a28      8d42d0         lea eax, [rdx - 0x30]
0x00012a2b      3c09           cmp al, 9
0x00012a2d      77f0           ja 0x12a1f
0x00012a2f      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x00012a33      74ea           je 0x12a1f
0x00012a35      4883fbff       cmp rbx, 0xffffffffffffffff
0x00012a39      743d           je 0x12a78
0x00012a3b      488d049b       lea rax, [rbx + rbx*4]
0x00012a3f      488d1c42       lea rbx, [rdx + rax*2]
0x00012a43      b830800000     mov eax, 0x8030
0x00012a48      4881fb308000.  cmp rbx, 0x8030
0x00012a4f      480f4fd8       cmovg rbx, rax
0x00012a53      4883eb30       sub rbx, 0x30
0x00012a57      eb97           jmp 0x129f0
0x00012a59      0f1f80000000.  nop dword [rax]
0x00012a60      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x00012a67      4889d8         mov rax, rbx
0x00012a6a      5b             pop rbx
0x00012a6b      5d             pop rbp
0x00012a6c      415c           pop r12
0x00012a6e      415d           pop r13
0x00012a70      415e           pop r14
0x00012a72      c3             ret
0x00012a73      0f1f440000     nop dword [rax + rax]
0x00012a78      0fb6da         movzx ebx, dl
0x00012a7b      83eb30         sub ebx, 0x30
0x00012a7e      4863db         movsxd rbx, ebx
0x00012a81      e96affffff     jmp 0x129f0
0x00012a86      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_expression:
0x00012a90      4157           push r15
0x00012a92      4156           push r14
0x00012a94      4155           push r13
0x00012a96      4154           push r12
0x00012a98      55             push rbp
0x00012a99      53             push rbx
0x00012a9a      4881ec280100.  sub rsp, 0x128
0x00012aa1      48894c2420     mov qword [rsp + 0x20], rcx
0x00012aa6      0fb64a08       movzx ecx, byte [rdx + 8]
0x00012aaa      64488b042528.  mov rax, qword fs:[0x28]
0x00012ab3      488984241801.  mov qword [rsp + 0x118], rax
0x00012abb      31c0           xor eax, eax
0x00012abd      488b06         mov rax, qword [rsi]
0x00012ac0      4889542418     mov qword [rsp + 0x18], rdx
0x00012ac5      4c894c2440     mov qword [rsp + 0x40], r9
0x00012aca      80f924         cmp cl, 0x24
0x00012acd      4889442410     mov qword [rsp + 0x10], rax
0x00012ad2      0f87b8000000   ja 0x12b90
0x00012ad8      4889f5         mov rbp, rsi
0x00012adb      488d35be4f00.  lea rsi, [0x00017aa0]
0x00012ae2      0fb6d1         movzx edx, cl
0x00012ae5      4989fe         mov r14, rdi
0x00012ae8      48630496       movsxd rax, dword [rsi + rdx*4]
0x00012aec      4801f0         add rax, rsi
0x00012aef      ffe0           jmp rax
0x00012af1      488b5d30       mov rbx, qword [rbp + 0x30]
0x00012af5      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x00012afa      4889fe         mov rsi, rdi
0x00012afd      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00012b02      4c890424       mov qword [rsp], r8
0x00012b06      488d4301       lea rax, [rbx + 1]
0x00012b0a      4c89fa         mov rdx, r15
0x00012b0d      4881ca000080.  or rdx, 0x800000
0x00012b14      4c89ef         mov rdi, r13
0x00012b17      48894530       mov qword [rbp + 0x30], rax
0x00012b1b      e8b0f7ffff     call sym.peek_token
0x00012b20      4898           cdqe
0x00012b22      49014648       add qword [r14 + 0x48], rax
0x00012b26      31c0           xor eax, eax
0x00012b28      41807d0809     cmp byte [r13 + 8], 9
0x00012b2d      4c89ea         mov rdx, r13
0x00012b30      0f84fa0a0000   je 0x13630
0x00012b36      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00012b3b      4c8b0424       mov r8, qword [rsp]
0x00012b3f      4c89f9         mov rcx, r15
0x00012b42      4889ee         mov rsi, rbp
0x00012b45      4c89f7         mov rdi, r14
0x00012b48      4983c001       add r8, 1
0x00012b4c      4d89e9         mov r9, r13
0x00012b4f      e8ac150000     call sym.parse_reg_exp
0x00012b54      458b5d00       mov r11d, dword [r13]
0x00012b58      4585db         test r11d, r11d
0x00012b5b      7533           jne 0x12b90
0x00012b5d      488b542418     mov rdx, qword [rsp + 0x18]
0x00012b62      807a0809       cmp byte [rdx + 8], 9
0x00012b66      0f84c40a0000   je 0x13630
0x00012b6c      4885c0         test rax, rax
0x00012b6f      7411           je 0x12b82
0x00012b71      488d35d862ff.  lea rsi, sym.free_tree                  ; 0x8e50 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00012b78      31d2           xor edx, edx
0x00012b7a      4889c7         mov rdi, rax
0x00012b7d      e82e54ffff     call sym.postorder
0x00012b82      488b442440     mov rax, qword [rsp + 0x40]
0x00012b87      c70008000000   mov dword [rax], 8
0x00012b8d      0f1f00         nop dword [rax]
0x00012b90      48c744242800.  mov qword [rsp + 0x28], 0
0x00012b99      0f1f80000000.  nop dword [rax]
0x00012ba0      488bbc241801.  mov rdi, qword [rsp + 0x118]
0x00012ba8      6448333c2528.  xor rdi, qword fs:[0x28]
0x00012bb1      488b442428     mov rax, qword [rsp + 0x28]
0x00012bb6      0f8572130000   jne 0x13f2e
0x00012bbc      4881c4280100.  add rsp, 0x128
0x00012bc3      5b             pop rbx
0x00012bc4      5d             pop rbp
0x00012bc5      415c           pop r12
0x00012bc7      415d           pop r13
0x00012bc9      415e           pop r14
0x00012bcb      415f           pop r15
0x00012bcd      c3             ret
0x00012bce      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x00012bd7      0f8550020000   jne 0x12e2d
0x00012bdd      488b442420     mov rax, qword [rsp + 0x20]
0x00012be2      a820           test al, 0x20                           ; "@"
0x00012be4      0f8543020000   jne 0x12e2d
0x00012bea      a810           test al, 0x10
0x00012bec      0f85630e0000   jne 0x13a55
0x00012bf2      80f909         cmp cl, 9
0x00012bf5      0f840d0a0000   je 0x13608
0x00012bfb      488b442410     mov rax, qword [rsp + 0x10]
0x00012c00      4c8b442418     mov r8, qword [rsp + 0x18]
0x00012c05      31c9           xor ecx, ecx
0x00012c07      31d2           xor edx, edx
0x00012c09      488db0800000.  lea rsi, [rax + 0x80]
0x00012c10      488d7870       lea rdi, [rax + 0x70]
0x00012c14      41c6400801     mov byte [r8 + 8], 1
0x00012c19      e87277ffff     call sym.create_token_tree.isra.16
0x00012c1e      4885c0         test rax, rax
0x00012c21      4889442428     mov qword [rsp + 0x28], rax
0x00012c26      0f84cc090000   je 0x135f8
0x00012c2c      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00012c31      488b542420     mov rdx, qword [rsp + 0x20]
0x00012c36      4c89f6         mov rsi, r14
0x00012c39      4c8dbc24c000.  lea r15, [rsp + 0xc0]
0x00012c41      4889df         mov rdi, rbx
0x00012c44      e887f6ffff     call sym.peek_token
0x00012c49      4898           cdqe
0x00012c4b      49014648       add qword [r14 + 0x48], rax
0x00012c4f      0fb64308       movzx eax, byte [rbx + 8]
0x00012c53      0f1f440000     nop dword [rax + rax]
0x00012c58      3c17           cmp al, 0x17
0x00012c5a      0f8740ffffff   ja 0x12ba0
0x00012c60      3c12           cmp al, 0x12
0x00012c62      b900088c00     mov ecx, 0x8c0800
0x00012c67      0f94c3         sete bl
0x00012c6a      480fa3c1       bt rcx, rax
0x00012c6e      0f832cffffff   jae 0x12ba0
0x00012c74      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00012c79      3c17           cmp al, 0x17
0x00012c7b      498b6e48       mov rbp, qword [r14 + 0x48]
0x00012c7f      660f6f01       movdqa xmm0, xmmword [rcx]
0x00012c83      0f841f030000   je 0x12fa8
0x00012c89      3c13           cmp al, 0x13
0x00012c8b      0fb6db         movzx ebx, bl
0x00012c8e      0f84ac020000   je 0x12f40
0x00012c94      488b542420     mov rdx, qword [rsp + 0x20]
0x00012c99      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00012c9e      4c89f6         mov rsi, r14
0x00012ca1      e82af6ffff     call sym.peek_token
0x00012ca6      4898           cdqe
0x00012ca8      49014648       add qword [r14 + 0x48], rax
0x00012cac      48837c242800   cmp qword [rsp + 0x28], 0
0x00012cb2      0f8488030000   je 0x13040
0x00012cb8      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff
0x00012cc0      4885db         test rbx, rbx
0x00012cc3      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00012cc8      48c744243000.  mov qword [rsp + 0x30], 0
0x00012cd1      0f8f79010000   jg 0x12e50
0x00012cd7      807d3011       cmp byte [rbp + 0x30], 0x11
0x00012cdb      0f843f030000   je 0x13020
0x00012ce1      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x00012ce6      4889ea         mov rdx, rbp
0x00012ce9      4d89f8         mov r8, r15
0x00012cec      0f94c0         sete al
0x00012cef      31c9           xor ecx, ecx
0x00012cf1      83c00a         add eax, 0xa
0x00012cf4      888424c80000.  mov byte [rsp + 0xc8], al
0x00012cfb      488b442410     mov rax, qword [rsp + 0x10]
0x00012d00      4c8d6070       lea r12, [rax + 0x70]
0x00012d04      4c8da8800000.  lea r13, [rax + 0x80]
0x00012d0b      4c89e7         mov rdi, r12
0x00012d0e      4c89ee         mov rsi, r13
0x00012d11      e87a76ffff     call sym.create_token_tree.isra.16
0x00012d16      4885c0         test rax, rax
0x00012d19      4889c2         mov rdx, rax
0x00012d1c      0f84ee010000   je 0x12f10
0x00012d22      4883c302       add rbx, 2
0x00012d26      483b1c24       cmp rbx, qword [rsp]
0x00012d2a      7f7f           jg 0x12dab
0x00012d2c      4c89742448     mov qword [rsp + 0x48], r14
0x00012d31      4989c6         mov r14, rax
0x00012d34      488b742410     mov rsi, qword [rsp + 0x10]
0x00012d39      4889ef         mov rdi, rbp
0x00012d3c      e82f77ffff     call sym.duplicate_tree
0x00012d41      4d89f8         mov r8, r15
0x00012d44      4889c5         mov rbp, rax
0x00012d47      4889c1         mov rcx, rax
0x00012d4a      4c89f2         mov rdx, r14
0x00012d4d      4c89ee         mov rsi, r13
0x00012d50      4c89e7         mov rdi, r12
0x00012d53      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00012d5b      e83076ffff     call sym.create_token_tree.isra.16
0x00012d60      4885ed         test rbp, rbp
0x00012d63      0f84a7010000   je 0x12f10
0x00012d69      4885c0         test rax, rax
0x00012d6c      0f849e010000   je 0x12f10
0x00012d72      31c9           xor ecx, ecx
0x00012d74      4d89f8         mov r8, r15
0x00012d77      4889c2         mov rdx, rax
0x00012d7a      4c89ee         mov rsi, r13
0x00012d7d      4c89e7         mov rdi, r12
0x00012d80      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00012d88      e80376ffff     call sym.create_token_tree.isra.16
0x00012d8d      4885c0         test rax, rax
0x00012d90      4989c6         mov r14, rax
0x00012d93      0f8477010000   je 0x12f10
0x00012d99      4883c301       add rbx, 1
0x00012d9d      483b1c24       cmp rbx, qword [rsp]
0x00012da1      7e91           jle 0x12d34
0x00012da3      4c8b742448     mov r14, qword [rsp + 0x48]
0x00012da8      4889c2         mov rdx, rax
0x00012dab      488b442430     mov rax, qword [rsp + 0x30]
0x00012db0      4885c0         test rax, rax
0x00012db3      0f84a7020000   je 0x13060
0x00012db9      4889d1         mov rcx, rdx
0x00012dbc      4d89f8         mov r8, r15
0x00012dbf      4889c2         mov rdx, rax
0x00012dc2      4c89ee         mov rsi, r13
0x00012dc5      4c89e7         mov rdi, r12
0x00012dc8      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00012dd0      e8bb75ffff     call sym.create_token_tree.isra.16
0x00012dd5      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00012dda      8b17           mov edx, dword [rdi]
0x00012ddc      85d2           test edx, edx
0x00012dde      7409           je 0x12de9
0x00012de0      4885c0         test rax, rax
0x00012de3      0f8452030000   je 0x1313b
0x00012de9      4889442428     mov qword [rsp + 0x28], rax
0x00012dee      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x00012df7      488b442418     mov rax, qword [rsp + 0x18]
0x00012dfc      0fb64008       movzx eax, byte [rax + 8]
0x00012e00      0f8452feffff   je 0x12c58
0x00012e06      3c0b           cmp al, 0xb
0x00012e08      7408           je 0x12e12
0x00012e0a      3c17           cmp al, 0x17
0x00012e0c      0f8546feffff   jne 0x12c58
0x00012e12      488b442428     mov rax, qword [rsp + 0x28]
0x00012e17      4885c0         test rax, rax
0x00012e1a      7411           je 0x12e2d
0x00012e1c      488d352d60ff.  lea rsi, sym.free_tree                  ; 0x8e50 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00012e23      31d2           xor edx, edx
0x00012e25      4889c7         mov rdi, rax
0x00012e28      e88351ffff     call sym.postorder
0x00012e2d      488b442440     mov rax, qword [rsp + 0x40]
0x00012e32      48c744242800.  mov qword [rsp + 0x28], 0
0x00012e3b      c7000d000000   mov dword [rax], 0xd                    ; [0xd:4]=0x3000000
0x00012e41      e95afdffff     jmp 0x12ba0
0x00012e46      662e0f1f8400.  nop word cs:[rax + rax]
0x00012e50      4883fb01       cmp rbx, 1
0x00012e54      0f8432080000   je 0x1368c
0x00012e5a      488b442410     mov rax, qword [rsp + 0x10]
0x00012e5f      4989ed         mov r13, rbp
0x00012e62      4c89742448     mov qword [rsp + 0x48], r14
0x00012e67      4c8da0800000.  lea r12, [rax + 0x80]
0x00012e6e      488d7870       lea rdi, [rax + 0x70]
0x00012e72      4889e8         mov rax, rbp
0x00012e75      4989c6         mov r14, rax
0x00012e78      bd02000000     mov ebp, 2
0x00012e7d      4c89e6         mov rsi, r12
0x00012e80      48897c2430     mov qword [rsp + 0x30], rdi
0x00012e85      4d89ec         mov r12, r13
0x00012e88      4989dd         mov r13, rbx
0x00012e8b      4889f3         mov rbx, rsi
0x00012e8e      6690           nop
0x00012e90      488b742410     mov rsi, qword [rsp + 0x10]
0x00012e95      4c89e7         mov rdi, r12
0x00012e98      e8d375ffff     call sym.duplicate_tree
0x00012e9d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00012ea2      4989c4         mov r12, rax
0x00012ea5      4c89f2         mov rdx, r14
0x00012ea8      4d89f8         mov r8, r15
0x00012eab      4889c1         mov rcx, rax
0x00012eae      4889de         mov rsi, rbx
0x00012eb1      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00012eb9      e8d274ffff     call sym.create_token_tree.isra.16
0x00012ebe      4d85e4         test r12, r12
0x00012ec1      4989c6         mov r14, rax
0x00012ec4      744a           je 0x12f10
0x00012ec6      4885c0         test rax, rax
0x00012ec9      7445           je 0x12f10
0x00012ecb      4883c501       add rbp, 1
0x00012ecf      4c39ed         cmp rbp, r13
0x00012ed2      7ebc           jle 0x12e90
0x00012ed4      4c8b742448     mov r14, qword [rsp + 0x48]
0x00012ed9      4c89eb         mov rbx, r13
0x00012edc      4889442430     mov qword [rsp + 0x30], rax
0x00012ee1      4d89e5         mov r13, r12
0x00012ee4      48391c24       cmp qword [rsp], rbx
0x00012ee8      0f8466010000   je 0x13054
0x00012eee      488b742410     mov rsi, qword [rsp + 0x10]
0x00012ef3      4c89ef         mov rdi, r13
0x00012ef6      e87575ffff     call sym.duplicate_tree
0x00012efb      4885c0         test rax, rax
0x00012efe      4889c5         mov rbp, rax
0x00012f01      0f85d0fdffff   jne 0x12cd7
0x00012f07      660f1f840000.  nop word [rax + rax]
0x00012f10      488b442440     mov rax, qword [rsp + 0x40]
0x00012f15      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00012f1b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00012f20      488d35295fff.  lea rsi, sym.free_tree                  ; 0x8e50 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00012f27      31d2           xor edx, edx
0x00012f29      e88250ffff     call sym.postorder
0x00012f2e      48c744242800.  mov qword [rsp + 0x28], 0
0x00012f37      e964fcffff     jmp 0x12ba0
0x00012f3c      0f1f4000       nop dword [rax]
0x00012f40      48c704240100.  mov qword [rsp], 1
0x00012f48      488b542420     mov rdx, qword [rsp + 0x20]
0x00012f4d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00012f52      4c89f6         mov rsi, r14
0x00012f55      e876f3ffff     call sym.peek_token
0x00012f5a      4898           cdqe
0x00012f5c      49014648       add qword [r14 + 0x48], rax
0x00012f60      48837c242800   cmp qword [rsp + 0x28], 0
0x00012f66      0f84d4000000   je 0x13040
0x00012f6c      488b0424       mov rax, qword [rsp]
0x00012f70      4809d8         or rax, rbx
0x00012f73      0f8547fdffff   jne 0x12cc0
0x00012f79      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00012f7e      488d35cb5eff.  lea rsi, sym.free_tree                  ; 0x8e50 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00012f85      31d2           xor edx, edx
0x00012f87      e82450ffff     call sym.postorder
0x00012f8c      488b442440     mov rax, qword [rsp + 0x40]
0x00012f91      8b30           mov esi, dword [rax]
0x00012f93      85f6           test esi, esi
0x00012f95      7584           jne 0x12f1b
0x00012f97      48c744242800.  mov qword [rsp + 0x28], 0
0x00012fa0      e949feffff     jmp 0x12dee
0x00012fa5      0f1f00         nop dword [rax]
0x00012fa8      488b542420     mov rdx, qword [rsp + 0x20]
0x00012fad      4889ce         mov rsi, rcx
0x00012fb0      4c89f7         mov rdi, r14
0x00012fb3      0f290424       movaps xmmword [rsp], xmm0
0x00012fb7      e814faffff     call sym.fetch_number
0x00012fbc      4883f8ff       cmp rax, 0xffffffffffffffff
0x00012fc0      4889c3         mov rbx, rax
0x00012fc3      660f6f0424     movdqa xmm0, xmmword [rsp]
0x00012fc8      0f84a2000000   je 0x13070
0x00012fce      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00012fd2      7419           je 0x12fed
0x00012fd4      488b442418     mov rax, qword [rsp + 0x18]
0x00012fd9      0fb64008       movzx eax, byte [rax + 8]
0x00012fdd      3c18           cmp al, 0x18
0x00012fdf      0f841b010000   je 0x13100
0x00012fe5      3c01           cmp al, 1
0x00012fe7      0f8426010000   je 0x13113
0x00012fed      48f744242000.  test qword [rsp + 0x20], 0x200000
0x00012ff6      0f84370f0000   je 0x13f33
0x00012ffc      488b442418     mov rax, qword [rsp + 0x18]
0x00013001      49896e48       mov qword [r14 + 0x48], rbp
0x00013005      0f2900         movaps xmmword [rax], xmm0
0x00013008      c6400801       mov byte [rax + 8], 1
0x0001300c      488b442428     mov rax, qword [rsp + 0x28]
0x00013011      e9bffdffff     jmp 0x12dd5
0x00013016      662e0f1f8400.  nop word cs:[rax + rax]
0x00013020      488b5528       mov rdx, qword [rbp + 0x28]
0x00013024      488d35c54cff.  lea rsi, sym.mark_opt_subexp            ; 0x7cf0
0x0001302b      4889ef         mov rdi, rbp
0x0001302e      e87d4fffff     call sym.postorder
0x00013033      e9a9fcffff     jmp 0x12ce1
0x00013038      0f1f84000000.  nop dword [rax + rax]
0x00013040      488b442440     mov rax, qword [rsp + 0x40]
0x00013045      8b08           mov ecx, dword [rax]
0x00013047      85c9           test ecx, ecx
0x00013049      0f8448ffffff   je 0x12f97
0x0001304f      e93cfbffff     jmp 0x12b90
0x00013054      488b542430     mov rdx, qword [rsp + 0x30]
0x00013059      0f1f80000000.  nop dword [rax]
0x00013060      4889542428     mov qword [rsp + 0x28], rdx
0x00013065      e984fdffff     jmp 0x12dee
0x0001306a      660f1f440000   nop word [rax + rax]
0x00013070      488b442418     mov rax, qword [rsp + 0x18]
0x00013075      80780801       cmp byte [rax + 8], 1
0x00013079      0f85b1000000   jne 0x13130
0x0001307f      488b442418     mov rax, qword [rsp + 0x18]
0x00013084      80382c         cmp byte [rax], 0x2c
0x00013087      0f85a3000000   jne 0x13130
0x0001308d      31db           xor ebx, ebx
0x0001308f      488b542420     mov rdx, qword [rsp + 0x20]
0x00013094      488b742418     mov rsi, qword [rsp + 0x18]
0x00013099      4c89f7         mov rdi, r14
0x0001309c      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x000130a1      e82af9ffff     call sym.fetch_number
0x000130a6      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000130aa      48890424       mov qword [rsp], rax
0x000130ae      660f6f442430   movdqa xmm0, xmmword [rsp + 0x30]
0x000130b4      0f8433ffffff   je 0x12fed
0x000130ba      488b0424       mov rax, qword [rsp]
0x000130be      4883f8ff       cmp rax, 0xffffffffffffffff
0x000130c2      7405           je 0x130c9
0x000130c4      4839d8         cmp rax, rbx
0x000130c7      7c67           jl 0x13130
0x000130c9      488b442418     mov rax, qword [rsp + 0x18]
0x000130ce      80780818       cmp byte [rax + 8], 0x18
0x000130d2      755c           jne 0x13130
0x000130d4      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x000130d9      7529           jne 0x13104
0x000130db      31c0           xor eax, eax
0x000130dd      4881fbff7f00.  cmp rbx, 0x7fff
0x000130e4      0f9fc0         setg al
0x000130e7      4885c0         test rax, rax
0x000130ea      0f8458feffff   je 0x12f48
0x000130f0      488b442440     mov rax, qword [rsp + 0x40]
0x000130f5      c7000f000000   mov dword [rax], 0xf                    ; [0xf:4]=0x3e000300
0x000130fb      eb3e           jmp 0x1313b
0x000130fd      0f1f00         nop dword [rax]
0x00013100      48891c24       mov qword [rsp], rbx
0x00013104      31c0           xor eax, eax
0x00013106      48813c24ff7f.  cmp qword [rsp], 0x7fff
0x0001310e      0f9fc0         setg al
0x00013111      ebd4           jmp 0x130e7
0x00013113      488b442418     mov rax, qword [rsp + 0x18]
0x00013118      80382c         cmp byte [rax], 0x2c
0x0001311b      0f846effffff   je 0x1308f
0x00013121      48f744242000.  test qword [rsp + 0x20], 0x200000
0x0001312a      0f85ccfeffff   jne 0x12ffc
0x00013130      488b442440     mov rax, qword [rsp + 0x40]
0x00013135      c7000a000000   mov dword [rax], 0xa
0x0001313b      48837c242800   cmp qword [rsp + 0x28], 0
0x00013141      0f85d4fdffff   jne 0x12f1b
0x00013147      e944faffff     jmp 0x12b90
0x0001314c      0f1f4000       nop dword [rax]
0x00013150      488b442418     mov rax, qword [rsp + 0x18]
0x00013155      8b28           mov ebp, dword [rax]
0x00013157      f7c50f030000   test ebp, 0x30f
0x0001315d      7462           je 0x131c1
0x0001315f      488b442410     mov rax, qword [rsp + 0x10]
0x00013164      0fb680b00000.  movzx eax, byte [rax + 0xb0]
0x0001316b      a810           test al, 0x10
0x0001316d      7552           jne 0x131c1
0x0001316f      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00013174      83c810         or eax, 0x10
0x00013177      a808           test al, 8
0x00013179      8887b0000000   mov byte [rdi + 0xb0], al
0x0001317f      0f85fe0b0000   jne 0x13d83
0x00013185      48ba00000000.  movabs rdx, 0x3ff000000000000           ; 287948901175001088
0x0001318f      a804           test al, 4
0x00013191      488997b80000.  mov qword [rdi + 0xb8], rdx
0x00013198      48bafeffff87.  movabs rdx, 0x7fffffe87fffffe
0x000131a2      488997c00000.  mov qword [rdi + 0xc0], rdx
0x000131a9      0f84590b0000   je 0x13d08
0x000131af      660fefc0       pxor xmm0, xmm0
0x000131b3      488b442418     mov rax, qword [rsp + 0x18]
0x000131b8      0f1187c80000.  movups xmmword [rdi + 0xc8], xmm0
0x000131bf      8b28           mov ebp, dword [rax]
0x000131c1      488b442410     mov rax, qword [rsp + 0x10]
0x000131c6      488d5870       lea rbx, [rax + 0x70]
0x000131ca      4c8da0800000.  lea r12, [rax + 0x80]
0x000131d1      8d8500ffffff   lea eax, [rbp - 0x100]
0x000131d7      a9fffeffff     test eax, 0xfffffeff                    ; 4294967039
0x000131dc      0f8568060000   jne 0x1384a
0x000131e2      81fd00010000   cmp ebp, 0x100
0x000131e8      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x000131ed      0f842f060000   je 0x13822
0x000131f3      41c707050000.  mov dword [r15], 5
0x000131fa      4d89f8         mov r8, r15
0x000131fd      31c9           xor ecx, ecx
0x000131ff      31d2           xor edx, edx
0x00013201      4c89e6         mov rsi, r12
0x00013204      4889df         mov rdi, rbx
0x00013207      e88471ffff     call sym.create_token_tree.isra.16
0x0001320c      41c7070a0000.  mov dword [r15], 0xa
0x00013213      4889c5         mov rbp, rax
0x00013216      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001321b      31c9           xor ecx, ecx
0x0001321d      31d2           xor edx, edx
0x0001321f      4c89e6         mov rsi, r12
0x00013222      4889df         mov rdi, rbx
0x00013225      e86671ffff     call sym.create_token_tree.isra.16
0x0001322a      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00013232      4889ea         mov rdx, rbp
0x00013235      4889df         mov rdi, rbx
0x00013238      4889c1         mov rcx, rax
0x0001323b      4c89e6         mov rsi, r12
0x0001323e      4989c5         mov r13, rax
0x00013241      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00013249      e84271ffff     call sym.create_token_tree.isra.16
0x0001324e      4885ed         test rbp, rbp
0x00013251      4889c7         mov rdi, rax
0x00013254      4889442428     mov qword [rsp + 0x28], rax
0x00013259      0f94c2         sete dl
0x0001325c      4d85ed         test r13, r13
0x0001325f      0f94c0         sete al
0x00013262      08c2           or dl, al
0x00013264      0f858e030000   jne 0x135f8
0x0001326a      4885ff         test rdi, rdi
0x0001326d      0f8485030000   je 0x135f8
0x00013273      488b542420     mov rdx, qword [rsp + 0x20]
0x00013278      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001327d      4c89f6         mov rsi, r14
0x00013280      e84bf0ffff     call sym.peek_token
0x00013285      4898           cdqe
0x00013287      49014648       add qword [r14 + 0x48], rax
0x0001328b      e910f9ffff     jmp 0x12ba0
0x00013290      be01000000     mov esi, 1
0x00013295      bf20000000     mov edi, 0x20                           ; "@"
0x0001329a      48c784249800.  mov qword [rsp + 0x98], 0
0x000132a6      e885eafeff     call sym.imp.calloc
0x000132ab      be01000000     mov esi, 1
0x000132b0      4989c4         mov r12, rax
0x000132b3      bf50000000     mov edi, 0x50                           ; 'P'
0x000132b8      e873eafeff     call sym.imp.calloc
0x000132bd      4d85e4         test r12, r12
0x000132c0      4989c5         mov r13, rax
0x000132c3      0f94c2         sete dl
0x000132c6      4885c0         test rax, rax
0x000132c9      0f94c0         sete al
0x000132cc      08c2           or dl, al
0x000132ce      0f85d5070000   jne 0x13aa9
0x000132d4      4c8b542418     mov r10, qword [rsp + 0x18]
0x000132d9      488b542420     mov rdx, qword [rsp + 0x20]
0x000132de      4c89f6         mov rsi, r14
0x000132e1      4c89d7         mov rdi, r10
0x000132e4      e8d748ffff     call sym.peek_token_bracket
0x000132e9      4863d8         movsxd rbx, eax
0x000132ec      410fb64208     movzx eax, byte [r10 + 8]
0x000132f1      3c02           cmp al, 2
0x000132f3      0f84a0070000   je 0x13a99
0x000132f9      3c19           cmp al, 0x19
0x000132fb      c644245700     mov byte [rsp + 0x57], 0
0x00013300      0f84c4040000   je 0x137ca
0x00013306      3c15           cmp al, 0x15
0x00013308      0f8406050000   je 0x13814
0x0001330e      488d8424d000.  lea rax, [rsp + 0xd0]
0x00013316      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x0001331b      488d2d124800.  lea rbp, [0x00017b34]
0x00013322      48c744244800.  mov qword [rsp + 0x48], 0
0x0001332b      41b901000000   mov r9d, 1
0x00013331      48c744243000.  mov qword [rsp + 0x30], 0
0x0001333a      4889442428     mov qword [rsp + 0x28], rax
0x0001333f      488d8424a000.  lea rax, [rsp + 0xa0]
0x00013347      48890424       mov qword [rsp], rax
0x0001334b      488d84249800.  lea rax, [rsp + 0x98]
0x00013353      4889442458     mov qword [rsp + 0x58], rax
0x00013358      488d8424c000.  lea rax, [rsp + 0xc0]
0x00013360      4889442460     mov qword [rsp + 0x60], rax
0x00013365      488d8424f000.  lea rax, [rsp + 0xf0]
0x0001336d      4889442468     mov qword [rsp + 0x68], rax
0x00013372      488b442428     mov rax, qword [rsp + 0x28]
0x00013377      4c8b442420     mov r8, qword [rsp + 0x20]
0x0001337c      4183e101       and r9d, 1
0x00013380      488b3c24       mov rdi, qword [rsp]
0x00013384      89d9           mov ecx, ebx
0x00013386      4c89fa         mov rdx, r15
0x00013389      4c89f6         mov rsi, r14
0x0001338c      c78424a00000.  mov dword [rsp + 0xa0], 3
0x00013397      48898424a800.  mov qword [rsp + 0xa8], rax
0x0001339f      e8ccecffff     call sym.parse_bracket_element.constprop.37
0x000133a4      85c0           test eax, eax
0x000133a6      0f85df040000   jne 0x1388b
0x000133ac      488b542420     mov rdx, qword [rsp + 0x20]
0x000133b1      4c89f6         mov rsi, r14
0x000133b4      4c89ff         mov rdi, r15
0x000133b7      e80448ffff     call sym.peek_token_bracket
0x000133bc      4863d8         movsxd rbx, eax
0x000133bf      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x000133c6      8d50fe         lea edx, [rax - 2]
0x000133c9      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x000133cc      7417           je 0x133e5
0x000133ce      410fb65708     movzx edx, byte [r15 + 8]
0x000133d3      80fa02         cmp dl, 2
0x000133d6      0f8495040000   je 0x13871
0x000133dc      80fa16         cmp dl, 0x16
0x000133df      0f84b2040000   je 0x13897
0x000133e5      83f804         cmp eax, 4
0x000133e8      0f879c090000   ja 0x13d8a
0x000133ee      4863448500     movsxd rax, dword [rbp + rax*4]
0x000133f3      4801e8         add rax, rbp
0x000133f6      ffe0           jmp rax
0x000133f8      488b5c2440     mov rbx, qword [rsp + 0x40]
0x000133fd      80f923         cmp cl, 0x23
0x00013400      488b7778       mov rsi, qword [rdi + 0x78]
0x00013404      410f94c0       sete r8b
0x00013408      488d0dd23c00.  lea rcx, [0x000170e1]
0x0001340f      488d15814200.  lea rdx, str.space                      ; 0x17697 ; "space"
0x00013416      450fb6c0       movzx r8d, r8b
0x0001341a      4989d9         mov r9, rbx
0x0001341d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00013422      e8b9a2ffff     call sym.build_charclass_op
0x00013427      8b3b           mov edi, dword [rbx]
0x00013429      4889442428     mov qword [rsp + 0x28], rax
0x0001342e      85ff           test edi, edi
0x00013430      0f84f6f7ffff   je 0x12c2c
0x00013436      4885c0         test rax, rax
0x00013439      0f85edf7ffff   jne 0x12c2c
0x0001343f      e94cf7ffff     jmp 0x12b90
0x00013444      0f1f4000       nop dword [rax]
0x00013448      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0001344d      80f921         cmp cl, 0x21
0x00013450      488b7778       mov rsi, qword [rdi + 0x78]
0x00013454      410f94c0       sete r8b
0x00013458      488d0d472c00.  lea rcx, [0x000160a6]                   ; "_"
0x0001345f      488d15254200.  lea rdx, str.alnum                      ; 0x1768b ; "alnum"
0x00013466      450fb6c0       movzx r8d, r8b
0x0001346a      4989d9         mov r9, rbx
0x0001346d      ebae           jmp 0x1341d
0x0001346f      488b442418     mov rax, qword [rsp + 0x18]
0x00013474      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00013479      488b08         mov rcx, qword [rax]
0x0001347c      b801000000     mov eax, 1
0x00013481      d3e0           shl eax, cl
0x00013483      4898           cdqe
0x00013485      488587a80000.  test qword [rdi + 0xa8], rax
0x0001348c      0f842c060000   je 0x13abe
0x00013492      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00013497      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001349c      31c9           xor ecx, ecx
0x0001349e      31d2           xor edx, edx
0x000134a0      480983a00000.  or qword [rbx + 0xa0], rax
0x000134a7      488db3800000.  lea rsi, [rbx + 0x80]
0x000134ae      488d7b70       lea rdi, [rbx + 0x70]
0x000134b2      e8d96effff     call sym.create_token_tree.isra.16
0x000134b7      4885c0         test rax, rax
0x000134ba      4889442428     mov qword [rsp + 0x28], rax
0x000134bf      0f8433010000   je 0x135f8
0x000134c5      488383980000.  add qword [rbx + 0x98], 1
0x000134cd      808bb0000000.  or byte [rbx + 0xb0], 2
0x000134d4      e953f7ffff     jmp 0x12c2c
0x000134d9      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000134de      4c8b442418     mov r8, qword [rsp + 0x18]
0x000134e3      31c9           xor ecx, ecx
0x000134e5      31d2           xor edx, edx
0x000134e7      488db3800000.  lea rsi, [rbx + 0x80]
0x000134ee      488d7b70       lea rdi, [rbx + 0x70]
0x000134f2      e8996effff     call sym.create_token_tree.isra.16
0x000134f7      4885c0         test rax, rax
0x000134fa      4889442428     mov qword [rsp + 0x28], rax
0x000134ff      0f84f3000000   je 0x135f8
0x00013505      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x0001350c      0f8e1af7ffff   jle 0x12c2c
0x00013512      808bb0000000.  or byte [rbx + 0xb0], 2
0x00013519      e90ef7ffff     jmp 0x12c2c
0x0001351e      488b442410     mov rax, qword [rsp + 0x10]
0x00013523      4c8b442418     mov r8, qword [rsp + 0x18]
0x00013528      31c9           xor ecx, ecx
0x0001352a      31d2           xor edx, edx
0x0001352c      488d5870       lea rbx, [rax + 0x70]
0x00013530      488da8800000.  lea rbp, [rax + 0x80]
0x00013537      4889df         mov rdi, rbx
0x0001353a      4889ee         mov rsi, rbp
0x0001353d      e84e6effff     call sym.create_token_tree.isra.16
0x00013542      4885c0         test rax, rax
0x00013545      4889442428     mov qword [rsp + 0x28], rax
0x0001354a      0f84a8000000   je 0x135f8
0x00013550      488b442410     mov rax, qword [rsp + 0x10]
0x00013555      4c8da424c000.  lea r12, [rsp + 0xc0]
0x0001355d      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00013562      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00013569      0f8ebdf6ffff   jle 0x12c2c
0x0001356f      498b4648       mov rax, qword [r14 + 0x48]
0x00013573      49394668       cmp qword [r14 + 0x68], rax
0x00013577      0f8e04030000   jle 0x13881
0x0001357d      493b4630       cmp rax, qword [r14 + 0x30]
0x00013581      0f84fa020000   je 0x13881
0x00013587      498b5610       mov rdx, qword [r14 + 0x10]
0x0001358b      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x0001358f      0f85ec020000   jne 0x13881
0x00013595      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0001359a      488b542420     mov rdx, qword [rsp + 0x20]
0x0001359f      4c89f6         mov rsi, r14
0x000135a2      4c89ef         mov rdi, r13
0x000135a5      e826edffff     call sym.peek_token
0x000135aa      4898           cdqe
0x000135ac      49014648       add qword [r14 + 0x48], rax
0x000135b0      4d89e8         mov r8, r13
0x000135b3      31c9           xor ecx, ecx
0x000135b5      31d2           xor edx, edx
0x000135b7      4889ee         mov rsi, rbp
0x000135ba      4889df         mov rdi, rbx
0x000135bd      e8ce6dffff     call sym.create_token_tree.isra.16
0x000135c2      4c89fa         mov rdx, r15
0x000135c5      4989c5         mov r13, rax
0x000135c8      4d89e0         mov r8, r12
0x000135cb      4889c1         mov rcx, rax
0x000135ce      4889ee         mov rsi, rbp
0x000135d1      4889df         mov rdi, rbx
0x000135d4      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x000135dc      e8af6dffff     call sym.create_token_tree.isra.16
0x000135e1      4d85ed         test r13, r13
0x000135e4      4989c7         mov r15, rax
0x000135e7      0f94c2         sete dl
0x000135ea      4885c0         test rax, rax
0x000135ed      0f94c0         sete al
0x000135f0      08c2           or dl, al
0x000135f2      0f8477ffffff   je 0x1356f
0x000135f8      488b442440     mov rax, qword [rsp + 0x40]
0x000135fd      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00013603      e988f5ffff     jmp 0x12b90
0x00013608      48f744242000.  test qword [rsp + 0x20], 0x20000
0x00013611      0f85e4f5ffff   jne 0x12bfb
0x00013617      488b442440     mov rax, qword [rsp + 0x40]
0x0001361c      48c744242800.  mov qword [rsp + 0x28], 0
0x00013625      c70010000000   mov dword [rax], 0x10                   ; [0x10:4]=0x3e0003
0x0001362b      e970f5ffff     jmp 0x12ba0
0x00013630      4883fb08       cmp rbx, 8
0x00013634      7665           jbe 0x1369b
0x00013636      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0001363b      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00013643      31c9           xor ecx, ecx
0x00013645      4889c2         mov rdx, rax
0x00013648      c68424c80000.  mov byte [rsp + 0xc8], 0x11             ; [0x11:1]=0
0x00013650      488db7800000.  lea rsi, [rdi + 0x80]
0x00013657      4883c770       add rdi, 0x70
0x0001365b      e8306dffff     call sym.create_token_tree.isra.16
0x00013660      4885c0         test rax, rax
0x00013663      4889442428     mov qword [rsp + 0x28], rax
0x00013668      748e           je 0x135f8
0x0001366a      48895828       mov qword [rax + 0x28], rbx
0x0001366e      e9b9f5ffff     jmp 0x12c2c
0x00013673      488b442440     mov rax, qword [rsp + 0x40]
0x00013678      48c744242800.  mov qword [rsp + 0x28], 0
0x00013681      c70005000000   mov dword [rax], 5
0x00013687      e914f5ffff     jmp 0x12ba0
0x0001368c      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00013691      4c896c2430     mov qword [rsp + 0x30], r13
0x00013696      e949f8ffff     jmp 0x12ee4
0x0001369b      488b742410     mov rsi, qword [rsp + 0x10]
0x000136a0      ba01000000     mov edx, 1
0x000136a5      89d9           mov ecx, ebx
0x000136a7      d3e2           shl edx, cl
0x000136a9      4863d2         movsxd rdx, edx
0x000136ac      480996a80000.  or qword [rsi + 0xa8], rdx
0x000136b3      eb81           jmp 0x13636
0x000136b5      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x000136bd      4c89e7         mov rdi, r12
0x000136c0      e8bb97ffff     call sym.build_equiv_class.isra.27
0x000136c5      488b542440     mov rdx, qword [rsp + 0x40]
0x000136ca      85c0           test eax, eax
0x000136cc      8902           mov dword [rdx], eax
0x000136ce      7538           jne 0x13708
0x000136d0      410fb64708     movzx eax, byte [r15 + 8]
0x000136d5      3c02           cmp al, 2
0x000136d7      0f8494010000   je 0x13871
0x000136dd      3c15           cmp al, 0x15
0x000136df      0f840d040000   je 0x13af2
0x000136e5      4531c9         xor r9d, r9d
0x000136e8      e985fcffff     jmp 0x13372
0x000136ed      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x000136f5      4c89e7         mov rdi, r12
0x000136f8      e88397ffff     call sym.build_equiv_class.isra.27
0x000136fd      488b542440     mov rdx, qword [rsp + 0x40]
0x00013702      85c0           test eax, eax
0x00013704      8902           mov dword [rdx], eax
0x00013706      74c8           je 0x136d0
0x00013708      4c89e7         mov rdi, r12
0x0001370b      e8f0e3feff     call sym.imp.free
0x00013710      4c89ef         mov rdi, r13
0x00013713      e8d856ffff     call sym.free_charset
0x00013718      488b442440     mov rax, qword [rsp + 0x40]
0x0001371d      448b00         mov r8d, dword [rax]
0x00013720      4585c0         test r8d, r8d
0x00013723      0f8567f4ffff   jne 0x12b90
0x00013729      48c744242800.  mov qword [rsp + 0x28], 0
0x00013732      e9f5f4ffff     jmp 0x12c2c
0x00013737      498b5528       mov rdx, qword [r13 + 0x28]
0x0001373b      483b542430     cmp rdx, qword [rsp + 0x30]
0x00013740      498b4500       mov rax, qword [r13]
0x00013744      0f84f4040000   je 0x13c3e
0x0001374a      488d4a01       lea rcx, [rdx + 1]
0x0001374e      49894d28       mov qword [r13 + 0x28], rcx
0x00013752      8b8c24a80000.  mov ecx, dword [rsp + 0xa8]
0x00013759      890c90         mov dword [rax + rdx*4], ecx
0x0001375c      e96fffffff     jmp 0x136d0
0x00013761      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x00013769      be01000000     mov esi, 1
0x0001376e      4889d0         mov rax, rdx
0x00013771      83e23f         and edx, 0x3f
0x00013774      48c1e803       shr rax, 3
0x00013778      89d1           mov ecx, edx
0x0001377a      83e018         and eax, 0x18
0x0001377d      48d3e6         shl rsi, cl
0x00013780      49093404       or qword [r12 + rax], rsi
0x00013784      e947ffffff     jmp 0x136d0
0x00013789      4883ec08       sub rsp, 8
0x0001378d      498b7e78       mov rdi, qword [r14 + 0x78]
0x00013791      498d5518       lea rdx, [r13 + 0x18]
0x00013795      ff742428       push qword [rsp + 0x28]
0x00013799      4c8b8c24b800.  mov r9, qword [rsp + 0xb8]
0x000137a1      498d4d48       lea rcx, [r13 + 0x48]
0x000137a5      4c8b442468     mov r8, qword [rsp + 0x68]
0x000137aa      4c89e6         mov rsi, r12
0x000137ad      e81e97ffff     call sym.build_charclass.isra.29
0x000137b2      488b542450     mov rdx, qword [rsp + 0x50]
0x000137b7      85c0           test eax, eax
0x000137b9      8902           mov dword [rdx], eax
0x000137bb      4159           pop r9
0x000137bd      415a           pop r10
0x000137bf      0f840bffffff   je 0x136d0
0x000137c5      e93effffff     jmp 0x13708
0x000137ca      41804d2001     or byte [r13 + 0x20], 1
0x000137cf      48f744242000.  test qword [rsp + 0x20], 0x100
0x000137d8      7408           je 0x137e2
0x000137da      49810c240004.  or qword [r12], 0x400                   ; [0x400:8]=0x1200000012
0x000137e2      49015e48       add qword [r14 + 0x48], rbx
0x000137e6      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x000137eb      4c89f6         mov rsi, r14
0x000137ee      488b542420     mov rdx, qword [rsp + 0x20]
0x000137f3      4c89df         mov rdi, r11
0x000137f6      e8c543ffff     call sym.peek_token_bracket
0x000137fb      89c3           mov ebx, eax
0x000137fd      410fb64308     movzx eax, byte [r11 + 8]
0x00013802      3c02           cmp al, 2
0x00013804      0f848f020000   je 0x13a99
0x0001380a      c644245701     mov byte [rsp + 0x57], 1
0x0001380f      e9f2faffff     jmp 0x13306
0x00013814      488b442418     mov rax, qword [rsp + 0x18]
0x00013819      c6400801       mov byte [rax + 8], 1
0x0001381d      e9ecfaffff     jmp 0x1330e
0x00013822      41c707060000.  mov dword [r15], 6
0x00013829      4d89f8         mov r8, r15
0x0001382c      31c9           xor ecx, ecx
0x0001382e      31d2           xor edx, edx
0x00013830      4c89e6         mov rsi, r12
0x00013833      4889df         mov rdi, rbx
0x00013836      e8556bffff     call sym.create_token_tree.isra.16
0x0001383b      41c707090000.  mov dword [r15], 9
0x00013842      4889c5         mov rbp, rax
0x00013845      e9ccf9ffff     jmp 0x13216
0x0001384a      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001384f      31c9           xor ecx, ecx
0x00013851      31d2           xor edx, edx
0x00013853      4c89e6         mov rsi, r12
0x00013856      4889df         mov rdi, rbx
0x00013859      e8326bffff     call sym.create_token_tree.isra.16
0x0001385e      4885c0         test rax, rax
0x00013861      4889442428     mov qword [rsp + 0x28], rax
0x00013866      0f8507faffff   jne 0x13273
0x0001386c      e987fdffff     jmp 0x135f8
0x00013871      488b442440     mov rax, qword [rsp + 0x40]
0x00013876      c70007000000   mov dword [rax], 7
0x0001387c      e987feffff     jmp 0x13708
0x00013881      4c897c2428     mov qword [rsp + 0x28], r15
0x00013886      e9a1f3ffff     jmp 0x12c2c
0x0001388b      488b542440     mov rdx, qword [rsp + 0x40]
0x00013890      8902           mov dword [rdx], eax
0x00013892      e971feffff     jmp 0x13708
0x00013897      4863c3         movsxd rax, ebx
0x0001389a      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0001389f      49014648       add qword [r14 + 0x48], rax
0x000138a3      4c8b542460     mov r10, qword [rsp + 0x60]
0x000138a8      4c89da         mov rdx, r11
0x000138ab      4c89d7         mov rdi, r10
0x000138ae      e80d43ffff     call sym.peek_token_bracket
0x000138b3      0fb69424c800.  movzx edx, byte [rsp + 0xc8]
0x000138bb      80fa02         cmp dl, 2
0x000138be      74b1           je 0x13871
0x000138c0      80fa15         cmp dl, 0x15
0x000138c3      0f840e020000   je 0x13ad7
0x000138c9      488b542468     mov rdx, qword [rsp + 0x68]
0x000138ce      488dbc24b000.  lea rdi, [rsp + 0xb0]
0x000138d6      41b901000000   mov r9d, 1
0x000138dc      4d89d8         mov r8, r11
0x000138df      89c1           mov ecx, eax
0x000138e1      c78424b00000.  mov dword [rsp + 0xb0], 3
0x000138ec      48899424b800.  mov qword [rsp + 0xb8], rdx
0x000138f4      4c89d2         mov rdx, r10
0x000138f7      e874e7ffff     call sym.parse_bracket_element.constprop.37
0x000138fc      85c0           test eax, eax
0x000138fe      758b           jne 0x1388b
0x00013900      488b542420     mov rdx, qword [rsp + 0x20]
0x00013905      4c89f6         mov rsi, r14
0x00013908      4c89ff         mov rdi, r15
0x0001390b      e8b042ffff     call sym.peek_token_bracket
0x00013910      4863d8         movsxd rbx, eax
0x00013913      488b442410     mov rax, qword [rsp + 0x10]
0x00013918      8bb424a00000.  mov esi, dword [rsp + 0xa0]
0x0001391f      41b900000000   mov r9d, 0
0x00013925      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0001392c      8d46fe         lea eax, [rsi - 2]
0x0001392f      4d0f4fcd       cmovg r9, r13
0x00013933      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00013936      0f846d040000   je 0x13da9
0x0001393c      448b9424b000.  mov r10d, dword [rsp + 0xb0]
0x00013944      418d42fe       lea eax, [r10 - 2]
0x00013948      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x0001394b      0f8458040000   je 0x13da9
0x00013951      83fe03         cmp esi, 3
0x00013954      410f94c3       sete r11b
0x00013958      0f848f040000   je 0x13ded
0x0001395e      4183fa03       cmp r10d, 3
0x00013962      0f8451040000   je 0x13db9
0x00013968      85f6           test esi, esi
0x0001396a      0f8569030000   jne 0x13cd9
0x00013970      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x00013978      4585d2         test r10d, r10d
0x0001397b      0f853c030000   jne 0x13cbd
0x00013981      440fb68424b8.  movzx r8d, byte [rsp + 0xb8]
0x0001398a      85f6           test esi, esi
0x0001398c      0f84e4020000   je 0x13c76
0x00013992      4584db         test r11b, r11b
0x00013995      0f85db020000   jne 0x13c76
0x0001399b      4d85c9         test r9, r9
0x0001399e      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x000139a5      741d           je 0x139c4
0x000139a7      4489c7         mov edi, r8d
0x000139aa      89542478       mov dword [rsp + 0x78], edx
0x000139ae      4c894c2470     mov qword [rsp + 0x70], r9
0x000139b3      e888e4feff     call sym.imp.btowc
0x000139b8      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x000139bd      8b542478       mov edx, dword [rsp + 0x78]
0x000139c1      4189c0         mov r8d, eax
0x000139c4      83faff         cmp edx, 0xffffffff
0x000139c7      0f8410040000   je 0x13ddd
0x000139cd      4183f8ff       cmp r8d, 0xffffffff
0x000139d1      0f8406040000   je 0x13ddd
0x000139d7      48f744242000.  test qword [rsp + 0x20], 0x10000
0x000139e0      7409           je 0x139eb
0x000139e2      4139d0         cmp r8d, edx
0x000139e5      0f82be030000   jb 0x13da9
0x000139eb      4d85c9         test r9, r9
0x000139ee      7426           je 0x13a16
0x000139f0      498b4140       mov rax, qword [r9 + 0x40]
0x000139f4      483b442448     cmp rax, qword [rsp + 0x48]
0x000139f9      498b4908       mov rcx, qword [r9 + 8]
0x000139fd      0f8410040000   je 0x13e13
0x00013a03      891481         mov dword [rcx + rax*4], edx
0x00013a06      498b4910       mov rcx, qword [r9 + 0x10]
0x00013a0a      488d7001       lea rsi, [rax + 1]
0x00013a0e      49897140       mov qword [r9 + 0x40], rsi
0x00013a12      44890481       mov dword [rcx + rax*4], r8d
0x00013a16      31c0           xor eax, eax
0x00013a18      bf01000000     mov edi, 1
0x00013a1d      39c2           cmp edx, eax
0x00013a1f      89c1           mov ecx, eax
0x00013a21      7716           ja 0x13a39
0x00013a23      4139c0         cmp r8d, eax
0x00013a26      7211           jb 0x13a39
0x00013a28      4889c6         mov rsi, rax
0x00013a2b      4989fb         mov r11, rdi
0x00013a2e      48c1fe06       sar rsi, 6
0x00013a32      49d3e3         shl r11, cl
0x00013a35      4d091cf4       or qword [r12 + rsi*8], r11
0x00013a39      4883c001       add rax, 1
0x00013a3d      483d00010000   cmp rax, 0x100
0x00013a43      75d8           jne 0x13a1d
0x00013a45      488b442440     mov rax, qword [rsp + 0x40]
0x00013a4a      c70000000000   mov dword [rax], 0
0x00013a50      e97bfcffff     jmp 0x136d0
0x00013a55      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00013a5a      4889c2         mov rdx, rax
0x00013a5d      4c89f6         mov rsi, r14
0x00013a60      4c890424       mov qword [rsp], r8
0x00013a64      4989c7         mov r15, rax
0x00013a67      4889df         mov rdi, rbx
0x00013a6a      e861e8ffff     call sym.peek_token
0x00013a6f      4898           cdqe
0x00013a71      49014648       add qword [r14 + 0x48], rax
0x00013a75      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00013a7a      4c8b0424       mov r8, qword [rsp]
0x00013a7e      4c89f9         mov rcx, r15
0x00013a81      4889da         mov rdx, rbx
0x00013a84      4889ee         mov rsi, rbp
0x00013a87      4c89f7         mov rdi, r14
0x00013a8a      e801f0ffff     call sym.parse_expression
0x00013a8f      4889442428     mov qword [rsp + 0x28], rax
0x00013a94      e907f1ffff     jmp 0x12ba0
0x00013a99      488b442440     mov rax, qword [rsp + 0x40]
0x00013a9e      c70002000000   mov dword [rax], 2
0x00013aa4      e95ffcffff     jmp 0x13708
0x00013aa9      4c89e7         mov rdi, r12
0x00013aac      e84fe0feff     call sym.imp.free
0x00013ab1      4c89ef         mov rdi, r13
0x00013ab4      e847e0feff     call sym.imp.free
0x00013ab9      e93afbffff     jmp 0x135f8
0x00013abe      488b442440     mov rax, qword [rsp + 0x40]
0x00013ac3      48c744242800.  mov qword [rsp + 0x28], 0
0x00013acc      c70006000000   mov dword [rax], 6
0x00013ad2      e9c9f0ffff     jmp 0x12ba0
0x00013ad7      89d8           mov eax, ebx
0x00013ad9      f7d8           neg eax
0x00013adb      4898           cdqe
0x00013add      49014648       add qword [r14 + 0x48], rax
0x00013ae1      41c6470801     mov byte [r15 + 8], 1
0x00013ae6      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x00013aed      e9f3f8ffff     jmp 0x133e5
0x00013af2      49015e48       add qword [r14 + 0x48], rbx
0x00013af6      807c245700     cmp byte [rsp + 0x57], 0
0x00013afb      7414           je 0x13b11
0x00013afd      498d542420     lea rdx, [r12 + 0x20]
0x00013b02      4c89e0         mov rax, r12
0x00013b05      48f710         not qword [rax]
0x00013b08      4883c008       add rax, 8
0x00013b0c      4839c2         cmp rdx, rax
0x00013b0f      75f4           jne 0x13b05
0x00013b11      488b442410     mov rax, qword [rsp + 0x10]
0x00013b16      8b90b4000000   mov edx, dword [rax + 0xb4]
0x00013b1c      83fa01         cmp edx, 1
0x00013b1f      7e18           jle 0x13b39
0x00013b21      488b4878       mov rcx, qword [rax + 0x78]
0x00013b25      31c0           xor eax, eax
0x00013b27      488b3401       mov rsi, qword [rcx + rax]
0x00013b2b      49213404       and qword [r12 + rax], rsi
0x00013b2f      4883c008       add rax, 8
0x00013b33      4883f820       cmp rax, 0x20                           ; "@"
0x00013b37      75ee           jne 0x13b27
0x00013b39      49837d2800     cmp qword [r13 + 0x28], 0
0x00013b3e      0f8584000000   jne 0x13bc8
0x00013b44      49837d3000     cmp qword [r13 + 0x30], 0
0x00013b49      757d           jne 0x13bc8
0x00013b4b      49837d3800     cmp qword [r13 + 0x38], 0
0x00013b50      7576           jne 0x13bc8
0x00013b52      49837d4000     cmp qword [r13 + 0x40], 0
0x00013b57      756f           jne 0x13bc8
0x00013b59      83ea01         sub edx, 1
0x00013b5c      7e0e           jle 0x13b6c
0x00013b5e      49837d4800     cmp qword [r13 + 0x48], 0
0x00013b63      7563           jne 0x13bc8
0x00013b65      41f6452001     test byte [r13 + 0x20], 1
0x00013b6a      755c           jne 0x13bc8
0x00013b6c      4c89ef         mov rdi, r13
0x00013b6f      e87c52ffff     call sym.free_charset
0x00013b74      488b442410     mov rax, qword [rsp + 0x10]
0x00013b79      4c8d8424b000.  lea r8, [rsp + 0xb0]
0x00013b81      31c9           xor ecx, ecx
0x00013b83      31d2           xor edx, edx
0x00013b85      c68424b80000.  mov byte [rsp + 0xb8], 3
0x00013b8d      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x00013b95      488db0800000.  lea rsi, [rax + 0x80]
0x00013b9c      488d7870       lea rdi, [rax + 0x70]
0x00013ba0      e8eb67ffff     call sym.create_token_tree.isra.16
0x00013ba5      4885c0         test rax, rax
0x00013ba8      4889442428     mov qword [rsp + 0x28], rax
0x00013bad      0f8579f0ffff   jne 0x12c2c
0x00013bb3      488b442440     mov rax, qword [rsp + 0x40]
0x00013bb8      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00013bbe      e945fbffff     jmp 0x13708
0x00013bc3      0f1f440000     nop dword [rax + rax]
0x00013bc8      488b442410     mov rax, qword [rsp + 0x10]
0x00013bcd      4c8dbc24b000.  lea r15, [rsp + 0xb0]
0x00013bd5      31d2           xor edx, edx
0x00013bd7      31c9           xor ecx, ecx
0x00013bd9      4d89f8         mov r8, r15
0x00013bdc      8088b0000000.  or byte [rax + 0xb0], 2
0x00013be3      488d5870       lea rbx, [rax + 0x70]
0x00013be7      488da8800000.  lea rbp, [rax + 0x80]
0x00013bee      c68424b80000.  mov byte [rsp + 0xb8], 6
0x00013bf6      4c89ac24b000.  mov qword [rsp + 0xb0], r13
0x00013bfe      4889df         mov rdi, rbx
0x00013c01      4889ee         mov rsi, rbp
0x00013c04      e88767ffff     call sym.create_token_tree.isra.16
0x00013c09      4889c7         mov rdi, rax
0x00013c0c      4889442428     mov qword [rsp + 0x28], rax
0x00013c11      498d542420     lea rdx, [r12 + 0x20]
0x00013c16      4885ff         test rdi, rdi
0x00013c19      4c89e0         mov rax, r12
0x00013c1c      7495           je 0x13bb3
0x00013c1e      48833800       cmp qword [rax], 0
0x00013c22      0f85a5020000   jne 0x13ecd
0x00013c28      4883c008       add rax, 8
0x00013c2c      4839c2         cmp rdx, rax
0x00013c2f      75ed           jne 0x13c1e
0x00013c31      4c89e7         mov rdi, r12
0x00013c34      e8c7defeff     call sym.imp.free
0x00013c39      e9eeefffff     jmp 0x12c2c
0x00013c3e      488b542430     mov rdx, qword [rsp + 0x30]
0x00013c43      488d7c1201     lea rdi, [rdx + rdx + 1]
0x00013c48      488d34bd0000.  lea rsi, [rdi*4]
0x00013c50      48897c2430     mov qword [rsp + 0x30], rdi
0x00013c55      4889c7         mov rdi, rax
0x00013c58      e8a3e1feff     call sym.imp.realloc
0x00013c5d      4885c0         test rax, rax
0x00013c60      0f844dffffff   je 0x13bb3
0x00013c66      49894500       mov qword [r13], rax
0x00013c6a      498b5528       mov rdx, qword [r13 + 0x28]
0x00013c6e      e9d7faffff     jmp 0x1374a
0x00013c73      4531c0         xor r8d, r8d
0x00013c76      4d85c9         test r9, r9
0x00013c79      7479           je 0x13cf4
0x00013c7b      89d7           mov edi, edx
0x00013c7d      4489442478     mov dword [rsp + 0x78], r8d
0x00013c82      4c894c2470     mov qword [rsp + 0x70], r9
0x00013c87      e8b4e1feff     call sym.imp.btowc
0x00013c8c      89c2           mov edx, eax
0x00013c8e      8b8424b00000.  mov eax, dword [rsp + 0xb0]
0x00013c95      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00013c9a      448b442478     mov r8d, dword [rsp + 0x78]
0x00013c9f      83f803         cmp eax, 3
0x00013ca2      0f84fffcffff   je 0x139a7
0x00013ca8      85c0           test eax, eax
0x00013caa      0f84f7fcffff   je 0x139a7
0x00013cb0      448b8424b800.  mov r8d, dword [rsp + 0xb8]
0x00013cb8      e907fdffff     jmp 0x139c4
0x00013cbd      4183fa03       cmp r10d, 3
0x00013cc1      0f848b020000   je 0x13f52
0x00013cc7      85f6           test esi, esi
0x00013cc9      74a8           je 0x13c73
0x00013ccb      4584db         test r11b, r11b
0x00013cce      75a3           jne 0x13c73
0x00013cd0      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x00013cd7      ebd7           jmp 0x13cb0
0x00013cd9      31d2           xor edx, edx
0x00013cdb      83fe03         cmp esi, 3
0x00013cde      0f8594fcffff   jne 0x13978
0x00013ce4      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x00013cec      0fb610         movzx edx, byte [rax]
0x00013cef      e984fcffff     jmp 0x13978
0x00013cf4      4585d2         test r10d, r10d
0x00013cf7      0f84dafcffff   je 0x139d7
0x00013cfd      4183fa03       cmp r10d, 3
0x00013d01      75ad           jne 0x13cb0
0x00013d03      e9cffcffff     jmp 0x139d7
0x00013d08      bb80000000     mov ebx, 0x80
0x00013d0d      41bc02000000   mov r12d, 2
0x00013d13      e838e2feff     call sym.imp.__ctype_b_loc
0x00013d18      4863d3         movsxd rdx, ebx
0x00013d1b      4d63cc         movsxd r9, r12d
0x00013d1e      41b801000000   mov r8d, 1
0x00013d24      4801d2         add rdx, rdx
0x00013d27      480310         add rdx, qword [rax]
0x00013d2a      488b442410     mov rax, qword [rsp + 0x10]
0x00013d2f      4a8d3cc8       lea rdi, [rax + r9*8]
0x00013d33      31c0           xor eax, eax
0x00013d35      eb1b           jmp 0x13d52
0x00013d37      660f1f840000.  nop word [rax + rax]
0x00013d40      8d3403         lea esi, [rbx + rax]
0x00013d43      83fe5f         cmp esi, 0x5f
0x00013d46      7412           je 0x13d5a
0x00013d48      4883c001       add rax, 1
0x00013d4c      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x00013d50      7417           je 0x13d69
0x00013d52      f6044208       test byte [rdx + rax*2], 8
0x00013d56      89c1           mov ecx, eax
0x00013d58      74e6           je 0x13d40
0x00013d5a      4c89c6         mov rsi, r8
0x00013d5d      48d3e6         shl rsi, cl
0x00013d60      4809b7b80000.  or qword [rdi + 0xb8], rsi
0x00013d67      ebdf           jmp 0x13d48
0x00013d69      4983c101       add r9, 1
0x00013d6d      83c340         add ebx, 0x40                           ; segment.PHDR
0x00013d70      4883ea80       sub rdx, 0xffffffffffffff80
0x00013d74      4883c708       add rdi, 8
0x00013d78      4183f903       cmp r9d, 3
0x00013d7c      7eb5           jle 0x13d33
0x00013d7e      e93ef4ffff     jmp 0x131c1
0x00013d83      31db           xor ebx, ebx
0x00013d85      4531e4         xor r12d, r12d
0x00013d88      eb89           jmp 0x13d13
0x00013d8a      488d0d7f3e00.  lea rcx, obj.__PRETTY_FUNCTION__.7327   ; 0x17c10 ; "parse_bracket_exp"
0x00013d91      488d35903800.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x17628 ; "../coreutils-8.31/lib/regcomp.c"
0x00013d98      488d3dd83800.  lea rdi, [0x00017677]                   ; "0"
0x00013d9f      baed0c0000     mov edx, 0xced
0x00013da4      e8e7defeff     call sym.imp.__assert_fail
0x00013da9      488b442440     mov rax, qword [rsp + 0x40]
0x00013dae      c7000b000000   mov dword [rax], 0xb                    ; [0xb:4]=0
0x00013db4      e94ff9ffff     jmp 0x13708
0x00013db9      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x00013dc1      31c0           xor eax, eax
0x00013dc3      4883c9ff       or rcx, 0xffffffffffffffff
0x00013dc7      f2ae           repne scasb al, byte [rdi]
0x00013dc9      4889c8         mov rax, rcx
0x00013dcc      48f7d0         not rax
0x00013dcf      4883e801       sub rax, 1
0x00013dd3      4883f801       cmp rax, 1
0x00013dd7      0f868bfbffff   jbe 0x13968
0x00013ddd      488b442440     mov rax, qword [rsp + 0x40]
0x00013de2      c70003000000   mov dword [rax], 3
0x00013de8      e91bf9ffff     jmp 0x13708
0x00013ded      488bbc24a800.  mov rdi, qword [rsp + 0xa8]
0x00013df5      31c0           xor eax, eax
0x00013df7      4883c9ff       or rcx, 0xffffffffffffffff
0x00013dfb      f2ae           repne scasb al, byte [rdi]
0x00013dfd      4889c8         mov rax, rcx
0x00013e00      48f7d0         not rax
0x00013e03      4883e801       sub rax, 1
0x00013e07      4883f801       cmp rax, 1
0x00013e0b      0f864dfbffff   jbe 0x1395e
0x00013e11      ebca           jmp 0x13ddd
0x00013e13      488b442448     mov rax, qword [rsp + 0x48]
0x00013e18      4889cf         mov rdi, rcx
0x00013e1b      448984248c00.  mov dword [rsp + 0x8c], r8d
0x00013e23      899424880000.  mov dword [rsp + 0x88], edx
0x00013e2a      4c894c2470     mov qword [rsp + 0x70], r9
0x00013e2f      4801c0         add rax, rax
0x00013e32      4883c001       add rax, 1
0x00013e36      4c8d14850000.  lea r10, [rax*4]
0x00013e3e      4889442448     mov qword [rsp + 0x48], rax
0x00013e43      4c89d6         mov rsi, r10
0x00013e46      4c8994248000.  mov qword [rsp + 0x80], r10
0x00013e4e      e8addffeff     call sym.imp.realloc
0x00013e53      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00013e58      4c8b94248000.  mov r10, qword [rsp + 0x80]
0x00013e60      4889442478     mov qword [rsp + 0x78], rax
0x00013e65      498b7910       mov rdi, qword [r9 + 0x10]
0x00013e69      4c89d6         mov rsi, r10
0x00013e6c      e88fdffeff     call sym.imp.realloc
0x00013e71      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00013e76      4885c9         test rcx, rcx
0x00013e79      742a           je 0x13ea5
0x00013e7b      4885c0         test rax, rax
0x00013e7e      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00013e83      8b9424880000.  mov edx, dword [rsp + 0x88]
0x00013e8a      448b84248c00.  mov r8d, dword [rsp + 0x8c]
0x00013e92      7411           je 0x13ea5
0x00013e94      49894110       mov qword [r9 + 0x10], rax
0x00013e98      49894908       mov qword [r9 + 8], rcx
0x00013e9c      498b4140       mov rax, qword [r9 + 0x40]
0x00013ea0      e95efbffff     jmp 0x13a03
0x00013ea5      4889cf         mov rdi, rcx
0x00013ea8      48890424       mov qword [rsp], rax
0x00013eac      e84fdcfeff     call sym.imp.free
0x00013eb1      488b0424       mov rax, qword [rsp]
0x00013eb5      4889c7         mov rdi, rax
0x00013eb8      e843dcfeff     call sym.imp.free
0x00013ebd      488b442440     mov rax, qword [rsp + 0x40]
0x00013ec2      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00013ec8      e93bf8ffff     jmp 0x13708
0x00013ecd      31c9           xor ecx, ecx
0x00013ecf      31d2           xor edx, edx
0x00013ed1      4d89f8         mov r8, r15
0x00013ed4      4889ee         mov rsi, rbp
0x00013ed7      4889df         mov rdi, rbx
0x00013eda      c68424b80000.  mov byte [rsp + 0xb8], 3
0x00013ee2      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x00013eea      e8a164ffff     call sym.create_token_tree.isra.16
0x00013eef      4885c0         test rax, rax
0x00013ef2      0f84bbfcffff   je 0x13bb3
0x00013ef8      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00013efd      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00013f05      4889c2         mov rdx, rax
0x00013f08      4889ee         mov rsi, rbp
0x00013f0b      4889df         mov rdi, rbx
0x00013f0e      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00013f16      e87564ffff     call sym.create_token_tree.isra.16
0x00013f1b      4885c0         test rax, rax
0x00013f1e      4889442428     mov qword [rsp + 0x28], rax
0x00013f23      0f8503edffff   jne 0x12c2c
0x00013f29      e985fcffff     jmp 0x13bb3
0x00013f2e      e8eddcfeff     call sym.imp.__stack_chk_fail
0x00013f33      488b442418     mov rax, qword [rsp + 0x18]
0x00013f38      80780802       cmp byte [rax + 8], 2
0x00013f3c      0f85eef1ffff   jne 0x13130
0x00013f42      488b442440     mov rax, qword [rsp + 0x40]
0x00013f47      c70009000000   mov dword [rax], 9
0x00013f4d      e9e9f1ffff     jmp 0x1313b
0x00013f52      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00013f5a      440fb600       movzx r8d, byte [rax]
0x00013f5e      e927faffff     jmp 0x1398a
0x00013f63      0f1f00         nop dword [rax]
0x00013f66      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_branch:
0x00013f70      4157           push r15
0x00013f72      4156           push r14
0x00013f74      4989cf         mov r15, rcx
0x00013f77      4155           push r13
0x00013f79      4154           push r12
0x00013f7b      4989f5         mov r13, rsi
0x00013f7e      55             push rbp
0x00013f7f      53             push rbx
0x00013f80      4c89cb         mov rbx, r9
0x00013f83      4889d5         mov rbp, rdx
0x00013f86      4d89c4         mov r12, r8
0x00013f89      4883ec48       sub rsp, 0x48
0x00013f8d      64488b042528.  mov rax, qword fs:[0x28]
0x00013f96      4889442438     mov qword [rsp + 0x38], rax
0x00013f9b      31c0           xor eax, eax
0x00013f9d      488b06         mov rax, qword [rsi]
0x00013fa0      48893c24       mov qword [rsp], rdi
0x00013fa4      4889442410     mov qword [rsp + 0x10], rax
0x00013fa9      e8e2eaffff     call sym.parse_expression
0x00013fae      8b13           mov edx, dword [rbx]
0x00013fb0      4989c6         mov r14, rax
0x00013fb3      85d2           test edx, edx
0x00013fb5      7409           je 0x13fc0
0x00013fb7      4885c0         test rax, rax
0x00013fba      0f84fa000000   je 0x140ba
0x00013fc0      488d442420     lea rax, [rsp + 0x20]
0x00013fc5      4889442418     mov qword [rsp + 0x18], rax
0x00013fca      660f1f440000   nop word [rax + rax]
0x00013fd0      0fb64508       movzx eax, byte [rbp + 8]
0x00013fd4      89c2           mov edx, eax
0x00013fd6      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00013fd9      80fa02         cmp dl, 2
0x00013fdc      0f848e000000   je 0x14070
0x00013fe2      3c09           cmp al, 9
0x00013fe4      7509           jne 0x13fef
0x00013fe6      4d85e4         test r12, r12
0x00013fe9      0f8581000000   jne 0x14070
0x00013fef      488b3c24       mov rdi, qword [rsp]
0x00013ff3      4989d9         mov r9, rbx
0x00013ff6      4d89e0         mov r8, r12
0x00013ff9      4c89f9         mov rcx, r15
0x00013ffc      4889ea         mov rdx, rbp
0x00013fff      4c89ee         mov rsi, r13
0x00014002      e889eaffff     call sym.parse_expression
0x00014007      4989c1         mov r9, rax
0x0001400a      8b03           mov eax, dword [rbx]
0x0001400c      85c0           test eax, eax
0x0001400e      7409           je 0x14019
0x00014010      4d85c9         test r9, r9
0x00014013      0f848b000000   je 0x140a4
0x00014019      4d85f6         test r14, r14
0x0001401c      747a           je 0x14098
0x0001401e      4d85c9         test r9, r9
0x00014021      7475           je 0x14098
0x00014023      488b442410     mov rax, qword [rsp + 0x10]
0x00014028      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001402d      4c89c9         mov rcx, r9
0x00014030      4c89f2         mov rdx, r14
0x00014033      4c894c2408     mov qword [rsp + 8], r9
0x00014038      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x0001403d      488db0800000.  lea rsi, [rax + 0x80]
0x00014044      488d7870       lea rdi, [rax + 0x70]
0x00014048      e84363ffff     call sym.create_token_tree.isra.16
0x0001404d      4885c0         test rax, rax
0x00014050      4c8b4c2408     mov r9, qword [rsp + 8]
0x00014055      7469           je 0x140c0
0x00014057      4989c6         mov r14, rax
0x0001405a      0fb64508       movzx eax, byte [rbp + 8]
0x0001405e      89c2           mov edx, eax
0x00014060      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00014063      80fa02         cmp dl, 2
0x00014066      0f8576ffffff   jne 0x13fe2
0x0001406c      0f1f4000       nop dword [rax]
0x00014070      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00014075      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001407e      4c89f0         mov rax, r14
0x00014081      756a           jne 0x140ed
0x00014083      4883c448       add rsp, 0x48
0x00014087      5b             pop rbx
0x00014088      5d             pop rbp
0x00014089      415c           pop r12
0x0001408b      415d           pop r13
0x0001408d      415e           pop r14
0x0001408f      415f           pop r15
0x00014091      c3             ret
0x00014092      660f1f440000   nop word [rax + rax]
0x00014098      4d85f6         test r14, r14
0x0001409b      4d0f44f1       cmove r14, r9
0x0001409f      e92cffffff     jmp 0x13fd0
0x000140a4      4d85f6         test r14, r14
0x000140a7      7411           je 0x140ba
0x000140a9      488d35a04dff.  lea rsi, sym.free_tree                  ; 0x8e50 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000140b0      31d2           xor edx, edx
0x000140b2      4c89f7         mov rdi, r14
0x000140b5      e8f63effff     call sym.postorder
0x000140ba      4531f6         xor r14d, r14d
0x000140bd      ebb1           jmp 0x14070
0x000140bf      90             nop
0x000140c0      488d35894dff.  lea rsi, sym.free_tree                  ; 0x8e50 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000140c7      4c89cf         mov rdi, r9
0x000140ca      31d2           xor edx, edx
0x000140cc      e8df3effff     call sym.postorder
0x000140d1      488d35784dff.  lea rsi, sym.free_tree                  ; 0x8e50 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000140d8      4c89f7         mov rdi, r14
0x000140db      31d2           xor edx, edx
0x000140dd      4531f6         xor r14d, r14d
0x000140e0      e8cb3effff     call sym.postorder
0x000140e5      c7030c000000   mov dword [rbx], 0xc                    ; [0xc:4]=0
0x000140eb      eb83           jmp 0x14070
0x000140ed      e82edbfeff     call sym.imp.__stack_chk_fail
0x000140f2      0f1f4000       nop dword [rax]
0x000140f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_reg_exp:
0x00014100      4157           push r15
0x00014102      4156           push r14
0x00014104      4989ce         mov r14, rcx
0x00014107      4155           push r13
0x00014109      4154           push r12
0x0001410b      4d89cd         mov r13, r9
0x0001410e      55             push rbp
0x0001410f      53             push rbx
0x00014110      4889d5         mov rbp, rdx
0x00014113      4989fc         mov r12, rdi
0x00014116      4883ec58       sub rsp, 0x58
0x0001411a      488b1e         mov rbx, qword [rsi]
0x0001411d      64488b042528.  mov rax, qword fs:[0x28]
0x00014126      4889442448     mov qword [rsp + 0x48], rax
0x0001412b      31c0           xor eax, eax
0x0001412d      4889742428     mov qword [rsp + 0x28], rsi
0x00014132      4c89442410     mov qword [rsp + 0x10], r8
0x00014137      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x0001413e      4889442420     mov qword [rsp + 0x20], rax
0x00014143      e828feffff     call sym.parse_branch
0x00014148      418b5500       mov edx, dword [r13]
0x0001414c      4989c7         mov r15, rax
0x0001414f      85d2           test edx, edx
0x00014151      7409           je 0x1415c
0x00014153      4885c0         test rax, rax
0x00014156      0f84e6000000   je 0x14242
0x0001415c      488d442430     lea rax, [rsp + 0x30]
0x00014161      4889442408     mov qword [rsp + 8], rax
0x00014166      e989000000     jmp 0x141f4
0x0001416b      0f1f440000     nop dword [rax + rax]
0x00014170      3c09           cmp al, 9
0x00014172      750c           jne 0x14180
0x00014174      48837c241000   cmp qword [rsp + 0x10], 0
0x0001417a      0f85a8000000   jne 0x14228
0x00014180      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x00014187      4c8b442410     mov r8, qword [rsp + 0x10]
0x0001418c      4c89f1         mov rcx, r14
0x0001418f      488b742428     mov rsi, qword [rsp + 0x28]
0x00014194      4d89e9         mov r9, r13
0x00014197      4889ea         mov rdx, rbp
0x0001419a      4c89e7         mov rdi, r12
0x0001419d      4889442418     mov qword [rsp + 0x18], rax
0x000141a2      488b442420     mov rax, qword [rsp + 0x20]
0x000141a7      488983a80000.  mov qword [rbx + 0xa8], rax
0x000141ae      e8bdfdffff     call sym.parse_branch
0x000141b3      4889c1         mov rcx, rax
0x000141b6      418b4500       mov eax, dword [r13]
0x000141ba      85c0           test eax, eax
0x000141bc      7405           je 0x141c3
0x000141be      4885c9         test rcx, rcx
0x000141c1      7469           je 0x1422c
0x000141c3      488b442418     mov rax, qword [rsp + 0x18]
0x000141c8      480983a80000.  or qword [rbx + 0xa8], rax
0x000141cf      4c8b442408     mov r8, qword [rsp + 8]
0x000141d4      488db3800000.  lea rsi, [rbx + 0x80]
0x000141db      488d7b70       lea rdi, [rbx + 0x70]
0x000141df      4c89fa         mov rdx, r15
0x000141e2      c64424380a     mov byte [rsp + 0x38], 0xa
0x000141e7      e8a461ffff     call sym.create_token_tree.isra.16
0x000141ec      4885c0         test rax, rax
0x000141ef      4989c7         mov r15, rax
0x000141f2      747c           je 0x14270
0x000141f4      807d080a       cmp byte [rbp + 8], 0xa
0x000141f8      754e           jne 0x14248
0x000141fa      4c89f2         mov rdx, r14
0x000141fd      4c89e6         mov rsi, r12
0x00014200      4889ef         mov rdi, rbp
0x00014203      4881ca000080.  or rdx, 0x800000
0x0001420a      e8c1e0ffff     call sym.peek_token
0x0001420f      4898           cdqe
0x00014211      4901442448     add qword [r12 + 0x48], rax
0x00014216      0fb64508       movzx eax, byte [rbp + 8]
0x0001421a      89c2           mov edx, eax
0x0001421c      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001421f      80fa02         cmp dl, 2
0x00014222      0f8548ffffff   jne 0x14170
0x00014228      31c9           xor ecx, ecx
0x0001422a      eba3           jmp 0x141cf
0x0001422c      4d85ff         test r15, r15
0x0001422f      7411           je 0x14242
0x00014231      488d35184cff.  lea rsi, sym.free_tree                  ; 0x8e50 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00014238      31d2           xor edx, edx
0x0001423a      4c89ff         mov rdi, r15
0x0001423d      e86e3dffff     call sym.postorder
0x00014242      4531ff         xor r15d, r15d
0x00014245      0f1f00         nop dword [rax]
0x00014248      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0001424d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00014256      4c89f8         mov rax, r15
0x00014259      751f           jne 0x1427a
0x0001425b      4883c458       add rsp, 0x58
0x0001425f      5b             pop rbx
0x00014260      5d             pop rbp
0x00014261      415c           pop r12
0x00014263      415d           pop r13
0x00014265      415e           pop r14
0x00014267      415f           pop r15
0x00014269      c3             ret
0x0001426a      660f1f440000   nop word [rax + rax]
0x00014270      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x00014278      ebce           jmp 0x14248
0x0001427a      e8a1d9feff     call sym.imp.__stack_chk_fail
0x0001427f      90             nop
;-- re_compile_internal:
0x00014280      4157           push r15
0x00014282      4156           push r14
0x00014284      4155           push r13
0x00014286      4154           push r12
0x00014288      55             push rbp
0x00014289      53             push rbx
0x0001428a      4881ec280100.  sub rsp, 0x128
0x00014291      48894f18       mov qword [rdi + 0x18], rcx
0x00014295      48c747100000.  mov qword [rdi + 0x10], 0
0x0001429d      64488b042528.  mov rax, qword fs:[0x28]
0x000142a6      488984241801.  mov qword [rsp + 0x118], rax
0x000142ae      31c0           xor eax, eax
0x000142b0      0fb64738       movzx eax, byte [rdi + 0x38]
0x000142b4      48897c2408     mov qword [rsp + 8], rdi
0x000142b9      4889742410     mov qword [rsp + 0x10], rsi
0x000142be      48891424       mov qword [rsp], rdx
0x000142c2      48894c2418     mov qword [rsp + 0x18], rcx
0x000142c7      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000142cf      48c747300000.  mov qword [rdi + 0x30], 0
0x000142d7      488b1f         mov rbx, qword [rdi]
0x000142da      88442420       mov byte [rsp + 0x20], al
0x000142de      83e090         and eax, 0xffffff90                     ; 4294967184
0x000142e1      48817f08e700.  cmp qword [rdi + 8], 0xe7
0x000142e9      884738         mov byte [rdi + 0x38], al
0x000142ec      0f86f40d0000   jbe 0x150e6
0x000142f2      488d7b08       lea rdi, [rbx + 8]
0x000142f6      488b442408     mov rax, qword [rsp + 8]
0x000142fb      4889d9         mov rcx, rbx
0x000142fe      4883e7f8       and rdi, 0xfffffffffffffff8
0x00014302      4829f9         sub rcx, rdi
0x00014305      48c74010e800.  mov qword [rax + 0x10], 0xe8            ; [0xe8:8]=0x600000001
0x0001430d      31c0           xor eax, eax
0x0001430f      81c1e8000000   add ecx, 0xe8
0x00014315      48c703000000.  mov qword [rbx], 0
0x0001431c      48c783e00000.  mov qword [rbx + 0xe0], 0
0x00014327      c1e903         shr ecx, 3
0x0001432a      f348ab         rep stosq qword [rdi], rax
0x0001432d      48b854555555.  movabs rax, 0x555555555555554
0x00014337      c78380000000.  mov dword [rbx + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x00014341      48390424       cmp qword [rsp], rax
0x00014345      0f873b060000   ja 0x14986
0x0001434b      4c8b3424       mov r14, qword [rsp]
0x0001434f      498d4601       lea rax, [r14 + 1]
0x00014353      4889c7         mov rdi, rax
0x00014356      48894308       mov qword [rbx + 8], rax
0x0001435a      4889442428     mov qword [rsp + 0x28], rax
0x0001435f      48c1e704       shl rdi, 4
0x00014363      e838dafeff     call sym.imp.malloc
0x00014368      4d85f6         test r14, r14
0x0001436b      488903         mov qword [rbx], rax
0x0001436e      0f84e10c0000   je 0x15055
0x00014374      be01000000     mov esi, 1
0x00014379      0f1f80000000.  nop dword [rax]
0x00014380      4801f6         add rsi, rsi
0x00014383      48393424       cmp qword [rsp], rsi
0x00014387      73f7           jae 0x14380
0x00014389      488d6eff       lea rbp, [rsi - 1]
0x0001438d      bf18000000     mov edi, 0x18
0x00014392      e899d9feff     call sym.imp.calloc
0x00014397      4889ab880000.  mov qword [rbx + 0x88], rbp
0x0001439e      48894340       mov qword [rbx + 0x40], rax
0x000143a2      e859d8feff     call sym.imp.__ctype_get_mb_cur_max
0x000143a7      bf0e000000     mov edi, 0xe
0x000143ac      8983b4000000   mov dword [rbx + 0xb4], eax
0x000143b2      e819dafeff     call sym.imp.nl_langinfo
0x000143b7      0fb610         movzx edx, byte [rax]
0x000143ba      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000143bd      80fa55         cmp dl, 0x55
0x000143c0      754e           jne 0x14410
0x000143c2      0fb65001       movzx edx, byte [rax + 1]
0x000143c6      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000143c9      80fa54         cmp dl, 0x54
0x000143cc      7542           jne 0x14410
0x000143ce      0fb65002       movzx edx, byte [rax + 2]
0x000143d2      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000143d5      80fa46         cmp dl, 0x46
0x000143d8      7536           jne 0x14410
0x000143da      31d2           xor edx, edx
0x000143dc      8078032d       cmp byte [rax + 3], 0x2d
0x000143e0      488d3de73200.  lea rdi, [0x000176ce]                   ; "8"
0x000143e7      b902000000     mov ecx, 2
0x000143ec      0f94c2         sete dl
0x000143ef      488d741003     lea rsi, [rax + rdx + 3]
0x000143f4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000143f6      0f97c0         seta al
0x000143f9      1c00           sbb al, 0
0x000143fb      84c0           test al, al
0x000143fd      7511           jne 0x14410
0x000143ff      808bb0000000.  or byte [rbx + 0xb0], 4
0x00014406      662e0f1f8400.  nop word cs:[rax + rax]
0x00014410      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00014417      89c2           mov edx, eax
0x00014419      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001441c      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00014423      8893b0000000   mov byte [rbx + 0xb0], dl
0x00014429      7e13           jle 0x1443e
0x0001442b      a804           test al, 4
0x0001442d      0f8460050000   je 0x14993
0x00014433      488d05063800.  lea rax, obj.utf8_sb_map                ; 0x17c40
0x0001443a      48894378       mov qword [rbx + 0x78], rax
0x0001443e      48833b00       cmp qword [rbx], 0
0x00014442      0f843e050000   je 0x14986
0x00014448      48837b4000     cmp qword [rbx + 0x40], 0
0x0001444d      0f8433050000   je 0x14986
0x00014453      488b442418     mov rax, qword [rsp + 0x18]
0x00014458      488dac248000.  lea rbp, [rsp + 0x80]
0x00014460      b912000000     mov ecx, 0x12
0x00014465      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001446d      4c8d4508       lea r8, [rbp + 8]
0x00014471      2500004000     and eax, 0x400000
0x00014476      4889442420     mov qword [rsp + 0x20], rax
0x0001447b      488b442408     mov rax, qword [rsp + 8]
0x00014480      0f95c2         setne dl
0x00014483      4c89c7         mov rdi, r8
0x00014486      488b7028       mov rsi, qword [rax + 0x28]
0x0001448a      31c0           xor eax, eax
0x0001448c      f348ab         rep stosq qword [rdi], rax
0x0001448f      488b442410     mov rax, qword [rsp + 0x10]
0x00014494      488b3c24       mov rdi, qword [rsp]
0x00014498      4885f6         test rsi, rsi
0x0001449b      889424080100.  mov byte [rsp + 0x108], dl
0x000144a2      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x000144a8      410f95c4       setne r12b
0x000144ac      4889b424f800.  mov qword [rsp + 0xf8], rsi
0x000144b4      488984248000.  mov qword [rsp + 0x80], rax
0x000144bc      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x000144c3      4109d4         or r12d, edx
0x000144c6      4889bc24d800.  mov qword [rsp + 0xd8], rdi
0x000144ce      4889bc24d000.  mov qword [rsp + 0xd0], rdi
0x000144d6      4489e6         mov esi, r12d
0x000144d9      4488a4240b01.  mov byte [rsp + 0x10b], r12b
0x000144e1      898c24100100.  mov dword [rsp + 0x110], ecx
0x000144e8      4889bc24e800.  mov qword [rsp + 0xe8], rdi
0x000144f0      4889bc24e000.  mov qword [rsp + 0xe0], rdi
0x000144f8      89c2           mov edx, eax
0x000144fa      c0e803         shr al, 3
0x000144fd      c0ea02         shr dl, 2
0x00014500      83e001         and eax, 1
0x00014503      83e201         and edx, 1
0x00014506      4885ff         test rdi, rdi
0x00014509      8884240a0100.  mov byte [rsp + 0x10a], al
0x00014510      889424090100.  mov byte [rsp + 0x109], dl
0x00014517      0f8538040000   jne 0x14955
0x0001451d      4084f6         test sil, sil
0x00014520      740d           je 0x1452f
0x00014522      488b84248800.  mov rax, qword [rsp + 0x88]
0x0001452a      4889442410     mov qword [rsp + 0x10], rax
0x0001452f      48837c242000   cmp qword [rsp + 0x20], 0
0x00014535      488b442410     mov rax, qword [rsp + 0x10]
0x0001453a      488984248800.  mov qword [rsp + 0x88], rax
0x00014542      0f84fd000000   je 0x14645
0x00014548      83f901         cmp ecx, 1
0x0001454b      0f8eec0b0000   jle 0x1513d
0x00014551      4889ef         mov rdi, rbp
0x00014554      e89740ffff     call sym.build_wcs_upper_buffer
0x00014559      85c0           test eax, eax
0x0001455b      7543           jne 0x145a0
0x0001455d      488b0424       mov rax, qword [rsp]
0x00014561      483b8424b800.  cmp rax, qword [rsp + 0xb8]
0x00014569      0f8eb10b0000   jle 0x15120
0x0001456f      486383b40000.  movsxd rax, dword [rbx + 0xb4]
0x00014576      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x0001457e      48038424b000.  add rax, qword [rsp + 0xb0]
0x00014586      4839c6         cmp rsi, rax
0x00014589      0f8f910b0000   jg 0x15120
0x0001458f      4801f6         add rsi, rsi
0x00014592      4889ef         mov rdi, rbp
0x00014595      e8e63affff     call sym.re_string_realloc_buffers
0x0001459a      85c0           test eax, eax
0x0001459c      74b3           je 0x14551
0x0001459e      6690           nop
0x000145a0      8944244c       mov dword [rsp + 0x4c], eax
0x000145a4      488b442408     mov rax, qword [rsp + 8]
0x000145a9      4c8b28         mov r13, qword [rax]
0x000145ac      498b7d70       mov rdi, qword [r13 + 0x70]
0x000145b0      4885ff         test rdi, rdi
0x000145b3      7413           je 0x145c8
0x000145b5      0f1f00         nop dword [rax]
0x000145b8      4c8b27         mov r12, qword [rdi]
0x000145bb      e840d5feff     call sym.imp.free
0x000145c0      4d85e4         test r12, r12
0x000145c3      4c89e7         mov rdi, r12
0x000145c6      75f0           jne 0x145b8
0x000145c8      498b7d20       mov rdi, qword [r13 + 0x20]
0x000145cc      49c745700000.  mov qword [r13 + 0x70], 0
0x000145d4      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x000145df      49c745680000.  mov qword [r13 + 0x68], 0
0x000145e7      e814d5feff     call sym.imp.free
0x000145ec      49c745200000.  mov qword [r13 + 0x20], 0
0x000145f4      4889ef         mov rdi, rbp
0x000145f7      e8c44dffff     call sym.re_string_destruct
0x000145fc      4889df         mov rdi, rbx
0x000145ff      e8fc4dffff     call sym.free_dfa_content
0x00014604      488b442408     mov rax, qword [rsp + 8]
0x00014609      48c700000000.  mov qword [rax], 0
0x00014610      48c740080000.  mov qword [rax + 8], 0
0x00014618      8b44244c       mov eax, dword [rsp + 0x4c]
0x0001461c      488b9c241801.  mov rbx, qword [rsp + 0x118]
0x00014624      6448331c2528.  xor rbx, qword fs:[0x28]
0x0001462d      0f853d0d0000   jne 0x15370
0x00014633      4881c4280100.  add rsp, 0x128
0x0001463a      5b             pop rbx
0x0001463b      5d             pop rbp
0x0001463c      415c           pop r12
0x0001463e      415d           pop r13
0x00014640      415e           pop r14
0x00014642      415f           pop r15
0x00014644      c3             ret
0x00014645      83f901         cmp ecx, 1
0x00014648      0f8fac090000   jg 0x14ffa
0x0001464e      4584e4         test r12b, r12b
0x00014651      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x00014659      0f8415060000   je 0x14c74
0x0001465f      4839b424d800.  cmp qword [rsp + 0xd8], rsi
0x00014667      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x0001466f      480f4eb424d8.  cmovle rsi, qword [rsp + 0xd8]
0x00014678      4839c6         cmp rsi, rax
0x0001467b      7f10           jg 0x1468d
0x0001467d      eb41           jmp 0x146c0
0x0001467f      90             nop
0x00014680      488b94248800.  mov rdx, qword [rsp + 0x88]
0x00014688      4889542410     mov qword [rsp + 0x10], rdx
0x0001468d      488b94248000.  mov rdx, qword [rsp + 0x80]
0x00014695      488b8c24f800.  mov rcx, qword [rsp + 0xf8]
0x0001469d      4801c2         add rdx, rax
0x000146a0      48039424a800.  add rdx, qword [rsp + 0xa8]
0x000146a8      0fb612         movzx edx, byte [rdx]
0x000146ab      0fb61411       movzx edx, byte [rcx + rdx]
0x000146af      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000146b4      881401         mov byte [rcx + rax], dl
0x000146b7      4883c001       add rax, 1
0x000146bb      4839c6         cmp rsi, rax
0x000146be      75c0           jne 0x14680
0x000146c0      48898424b000.  mov qword [rsp + 0xb0], rax
0x000146c8      48898424b800.  mov qword [rsp + 0xb8], rax
0x000146d0      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000146d8      4c8b642408     mov r12, qword [rsp + 8]
0x000146dd      4c8b742418     mov r14, qword [rsp + 0x18]
0x000146e2      4c8d6c2450     lea r13, [rsp + 0x50]
0x000146e7      4889ee         mov rsi, rbp
0x000146ea      4c89ef         mov rdi, r13
0x000146ed      4c896c2428     mov qword [rsp + 0x28], r13
0x000146f2      4d8b3c24       mov r15, qword [r12]
0x000146f6      4c89f2         mov rdx, r14
0x000146f9      49c744243000.  mov qword [r12 + 0x30], 0
0x00014702      4881ca000080.  or rdx, 0x800000
0x00014709      4d89b7d80000.  mov qword [r15 + 0xd8], r14
0x00014710      e8bbdbffff     call sym.peek_token
0x00014715      4c8d4c244c     lea r9, [rsp + 0x4c]
0x0001471a      4531c0         xor r8d, r8d
0x0001471d      4c89f1         mov rcx, r14
0x00014720      4c89ea         mov rdx, r13
0x00014723      4c89e6         mov rsi, r12
0x00014726      4889ef         mov rdi, rbp
0x00014729      4898           cdqe
0x0001472b      48018424c800.  add qword [rsp + 0xc8], rax
0x00014733      e8c8f9ffff     call sym.parse_reg_exp
0x00014738      8b4c244c       mov ecx, dword [rsp + 0x4c]
0x0001473c      85c9           test ecx, ecx
0x0001473e      0f85230a0000   jne 0x15167
0x00014744      4d8d6f70       lea r13, [r15 + 0x70]
0x00014748      4c8d642460     lea r12, [rsp + 0x60]
0x0001474d      4983ef80       sub r15, 0xffffffffffffff80
0x00014751      31d2           xor edx, edx
0x00014753      31c9           xor ecx, ecx
0x00014755      4c89fe         mov rsi, r15
0x00014758      4d89e0         mov r8, r12
0x0001475b      4c89ef         mov rdi, r13
0x0001475e      48890424       mov qword [rsp], rax
0x00014762      c644246802     mov byte [rsp + 0x68], 2
0x00014767      e8245cffff     call sym.create_token_tree.isra.16
0x0001476c      4c8b0c24       mov r9, qword [rsp]
0x00014770      4989c3         mov r11, rax
0x00014773      4889c2         mov rdx, rax
0x00014776      4d85c9         test r9, r9
0x00014779      7427           je 0x147a2
0x0001477b      4c89d9         mov rcx, r11
0x0001477e      4c89ca         mov rdx, r9
0x00014781      4d89e0         mov r8, r12
0x00014784      4c89fe         mov rsi, r15
0x00014787      4c89ef         mov rdi, r13
0x0001478a      4c891c24       mov qword [rsp], r11
0x0001478e      c644246810     mov byte [rsp + 0x68], 0x10             ; [0x10:1]=3
0x00014793      e8f85bffff     call sym.create_token_tree.isra.16
0x00014798      4c8b1c24       mov r11, qword [rsp]
0x0001479c      4c89da         mov rdx, r11
0x0001479f      4989c3         mov r11, rax
0x000147a2      4885d2         test rdx, rdx
0x000147a5      488b4c2408     mov rcx, qword [rsp + 8]
0x000147aa      0f94c2         sete dl
0x000147ad      4d85db         test r11, r11
0x000147b0      0f94c0         sete al
0x000147b3      08c2           or dl, al
0x000147b5      4c8b29         mov r13, qword [rcx]
0x000147b8      0f8594090000   jne 0x15152
0x000147be      4d8b7d08       mov r15, qword [r13 + 8]
0x000147c2      4c895b68       mov qword [rbx + 0x68], r11
0x000147c6      4a8d0cfd0000.  lea rcx, [r15*8]
0x000147ce      4f8d3c7f       lea r15, [r15 + r15*2]
0x000147d2      4889cf         mov rdi, rcx
0x000147d5      48890c24       mov qword [rsp], rcx
0x000147d9      49c1e703       shl r15, 3
0x000147dd      e8bed5feff     call sym.imp.malloc
0x000147e2      488b0c24       mov rcx, qword [rsp]
0x000147e6      49894518       mov qword [r13 + 0x18], rax
0x000147ea      4889442418     mov qword [rsp + 0x18], rax
0x000147ef      4889cf         mov rdi, rcx
0x000147f2      e8a9d5feff     call sym.imp.malloc
0x000147f7      4c89ff         mov rdi, r15
0x000147fa      49894520       mov qword [r13 + 0x20], rax
0x000147fe      4889442410     mov qword [rsp + 0x10], rax
0x00014803      e898d5feff     call sym.imp.malloc
0x00014808      4c89ff         mov rdi, r15
0x0001480b      49894528       mov qword [r13 + 0x28], rax
0x0001480f      48890424       mov qword [rsp], rax
0x00014813      e888d5feff     call sym.imp.malloc
0x00014818      488b542418     mov rdx, qword [rsp + 0x18]
0x0001481d      49894530       mov qword [r13 + 0x30], rax
0x00014821      488b3424       mov rsi, qword [rsp]
0x00014825      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001482a      4885d2         test rdx, rdx
0x0001482d      0f84ba070000   je 0x14fed
0x00014833      4885c9         test rcx, rcx
0x00014836      0f84b1070000   je 0x14fed
0x0001483c      4885f6         test rsi, rsi
0x0001483f      0f84a8070000   je 0x14fed
0x00014845      4885c0         test rax, rax
0x00014848      0f849f070000   je 0x14fed
0x0001484e      488b442408     mov rax, qword [rsp + 8]
0x00014853      4c8b7830       mov r15, qword [rax + 0x30]
0x00014857      4a8d3cfd0000.  lea rdi, [r15*8]
0x0001485f      e83cd5feff     call sym.imp.malloc
0x00014864      4885c0         test rax, rax
0x00014867      498985e00000.  mov qword [r13 + 0xe0], rax
0x0001486e      746d           je 0x148dd
0x00014870      4d85ff         test r15, r15
0x00014873      7418           je 0x1488d
0x00014875      31d2           xor edx, edx
0x00014877      660f1f840000.  nop word [rax + rax]
0x00014880      488914d0       mov qword [rax + rdx*8], rdx
0x00014884      4883c201       add rdx, 1
0x00014888      4c39fa         cmp rdx, r15
0x0001488b      75f3           jne 0x14880
0x0001488d      498b7d68       mov rdi, qword [r13 + 0x68]
0x00014891      488d35f84fff.  lea rsi, sym.optimize_subexps           ; 0x9890
0x00014898      4c89ea         mov rdx, r13
0x0001489b      e88037ffff     call sym.preorder
0x000148a0      488b442408     mov rax, qword [rsp + 8]
0x000148a5      498bbde00000.  mov rdi, qword [r13 + 0xe0]
0x000148ac      488b5030       mov rdx, qword [rax + 0x30]
0x000148b0      4885d2         test rdx, rdx
0x000148b3      0f84eb080000   je 0x151a4
0x000148b9      488b07         mov rax, qword [rdi]
0x000148bc      4885c0         test rax, rax
0x000148bf      740d           je 0x148ce
0x000148c1      eb1a           jmp 0x148dd
0x000148c3      0f1f440000     nop dword [rax + rax]
0x000148c8      483904c7       cmp qword [rdi + rax*8], rax
0x000148cc      750f           jne 0x148dd
0x000148ce      4883c001       add rax, 1
0x000148d2      4839c2         cmp rdx, rax
0x000148d5      77f1           ja 0x148c8
0x000148d7      0f84c7080000   je 0x151a4
0x000148dd      498b7d68       mov rdi, qword [r13 + 0x68]
0x000148e1      488b542408     mov rdx, qword [rsp + 8]
0x000148e6      488d35a35eff.  lea rsi, sym.lower_subexps              ; 0xa790 ; "USH\x89\xfdH\x89\xf3H\x83\xec\x18H\x8bV\bdH\x8b\x04%("
0x000148ed      e8be36ffff     call sym.postorder
0x000148f2      85c0           test eax, eax
0x000148f4      0f85a6fcffff   jne 0x145a0
0x000148fa      498b7d68       mov rdi, qword [r13 + 0x68]
0x000148fe      488d35fb83ff.  lea rsi, sym.calc_first                 ; 0xcd00
0x00014905      4c89ea         mov rdx, r13
0x00014908      e8a336ffff     call sym.postorder
0x0001490d      85c0           test eax, eax
0x0001490f      0f858bfcffff   jne 0x145a0
0x00014915      498b7d68       mov rdi, qword [r13 + 0x68]
0x00014919      488d350050ff.  lea rsi, sym.calc_next                  ; 0x9920
0x00014920      4c89ea         mov rdx, r13
0x00014923      e8f836ffff     call sym.preorder
0x00014928      498b5568       mov rdx, qword [r13 + 0x68]
0x0001492c      488d35153200.  lea rsi, [0x00017b48]
0x00014933      0f1f440000     nop dword [rax + rax]
0x00014938      0fb64a30       movzx ecx, byte [rdx + 0x30]
0x0001493c      488b7a38       mov rdi, qword [rdx + 0x38]
0x00014940      80f910         cmp cl, 0x10
0x00014943      0f87cf000000   ja 0x14a18
0x00014949      0fb6c1         movzx eax, cl
0x0001494c      48630486       movsxd rax, dword [rsi + rax*4]
0x00014950      4801f0         add rax, rsi
0x00014953      ffe0           jmp rax
0x00014955      488b742428     mov rsi, qword [rsp + 0x28]
0x0001495a      4889ef         mov rdi, rbp
0x0001495d      e81e37ffff     call sym.re_string_realloc_buffers
0x00014962      85c0           test eax, eax
0x00014964      0f8536fcffff   jne 0x145a0
0x0001496a      0fb6b4240b01.  movzx esi, byte [rsp + 0x10b]
0x00014972      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x00014978      4084f6         test sil, sil
0x0001497b      0f84aefbffff   je 0x1452f
0x00014981      e99cfbffff     jmp 0x14522
0x00014986      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x0001498e      e969fcffff     jmp 0x145fc
0x00014993      be01000000     mov esi, 1
0x00014998      bf20000000     mov edi, 0x20                           ; "@"
0x0001499d      e88ed3feff     call sym.imp.calloc
0x000149a2      4885c0         test rax, rax
0x000149a5      48894378       mov qword [rbx + 0x78], rax
0x000149a9      74db           je 0x14986
0x000149ab      4531e4         xor r12d, r12d
0x000149ae      31ed           xor ebp, ebp
0x000149b0      41bd01000000   mov r13d, 1
0x000149b6      4531ff         xor r15d, r15d
0x000149b9      0f1f80000000.  nop dword [rax]
0x000149c0      468d743d00     lea r14d, [rbp + r15]
0x000149c5      4489f7         mov edi, r14d
0x000149c8      e873d4feff     call sym.imp.btowc
0x000149cd      83f8ff         cmp eax, 0xffffffff
0x000149d0      7413           je 0x149e5
0x000149d2      488b7378       mov rsi, qword [rbx + 0x78]
0x000149d6      4c89ef         mov rdi, r13
0x000149d9      4489f9         mov ecx, r15d
0x000149dc      48d3e7         shl rdi, cl
0x000149df      4c01e6         add rsi, r12
0x000149e2      48093e         or qword [rsi], rdi
0x000149e5      41f7c680ffff.  test r14d, 0xffffff80                   ; 4294967168
0x000149ec      750c           jne 0x149fa
0x000149ee      4439f0         cmp eax, r14d
0x000149f1      7407           je 0x149fa
0x000149f3      808bb0000000.  or byte [rbx + 0xb0], 8
0x000149fa      4983c701       add r15, 1
0x000149fe      4983ff40       cmp r15, 0x40                           ; segment.PHDR
0x00014a02      75bc           jne 0x149c0
0x00014a04      83c540         add ebp, 0x40                           ; segment.PHDR
0x00014a07      4983c408       add r12, 8
0x00014a0b      81fd00010000   cmp ebp, 0x100
0x00014a11      75a3           jne 0x149b6
0x00014a13      e926faffff     jmp 0x1443e
0x00014a18      83e108         and ecx, 8
0x00014a1b      0f8511090000   jne 0x15332
0x00014a21      488b4220       mov rax, qword [rdx + 0x20]
0x00014a25      488b4838       mov rcx, qword [rax + 0x38]
0x00014a29      498b4518       mov rax, qword [r13 + 0x18]
0x00014a2d      48890cf8       mov qword [rax + rdi*8], rcx
0x00014a31      4c8b7a08       mov r15, qword [rdx + 8]
0x00014a35      31ff           xor edi, edi
0x00014a37      4d85ff         test r15, r15
0x00014a3a      740f           je 0x14a4b
0x00014a3c      4c89fa         mov rdx, r15
0x00014a3f      e9f4feffff     jmp 0x14938
0x00014a44      0f1f4000       nop dword [rax]
0x00014a48      4889c2         mov rdx, rax
0x00014a4b      4c8b7a10       mov r15, qword [rdx + 0x10]
0x00014a4f      4d85ff         test r15, r15
0x00014a52      0f94c1         sete cl
0x00014a55      4939ff         cmp r15, rdi
0x00014a58      0f94c0         sete al
0x00014a5b      08c1           or cl, al
0x00014a5d      884c2410       mov byte [rsp + 0x10], cl
0x00014a61      74d9           je 0x14a3c
0x00014a63      488b02         mov rax, qword [rdx]
0x00014a66      4889d7         mov rdi, rdx
0x00014a69      4885c0         test rax, rax
0x00014a6c      75da           jne 0x14a48
0x00014a6e      4531f6         xor r14d, r14d
0x00014a71      4531ff         xor r15d, r15d
0x00014a74      0f1f4000       nop dword [rax]
0x00014a78      498b5510       mov rdx, qword [r13 + 0x10]
0x00014a7c      4c39fa         cmp rdx, r15
0x00014a7f      7425           je 0x14aa6
0x00014a81      4f8d147f       lea r10, [r15 + r15*2]
0x00014a85      498b4530       mov rax, qword [r13 + 0x30]
0x00014a89      49c1e203       shl r10, 3
0x00014a8d      4a837c100800   cmp qword [rax + r10 + 8], 0
0x00014a93      0f84ff010000   je 0x14c98
0x00014a99      498b5510       mov rdx, qword [r13 + 0x10]
0x00014a9d      4983c701       add r15, 1
0x00014aa1      4c39fa         cmp rdx, r15
0x00014aa4      75db           jne 0x14a81
0x00014aa6      4584f6         test r14b, r14b
0x00014aa9      0f843f020000   je 0x14cee
0x00014aaf      4531f6         xor r14d, r14d
0x00014ab2      4531ff         xor r15d, r15d
0x00014ab5      ebca           jmp 0x14a81
0x00014ab7      41808db00000.  or byte [r13 + 0xb0], 1
0x00014abf      4c8b7a08       mov r15, qword [rdx + 8]
0x00014ac3      4d85ff         test r15, r15
0x00014ac6      0f840d060000   je 0x150d9
0x00014acc      498b4718       mov rax, qword [r15 + 0x18]
0x00014ad0      488b4838       mov rcx, qword [rax + 0x38]
0x00014ad4      488b4210       mov rax, qword [rdx + 0x10]
0x00014ad8      4885c0         test rax, rax
0x00014adb      0f84eb050000   je 0x150cc
0x00014ae1      488b4018       mov rax, qword [rax + 0x18]
0x00014ae5      4c8b4838       mov r9, qword [rax + 0x38]
0x00014ae9      4885c9         test rcx, rcx
0x00014aec      0f885f080000   js 0x15351
0x00014af2      4d85c9         test r9, r9
0x00014af5      0f8818080000   js 0x15313
0x00014afb      498b4528       mov rax, qword [r13 + 0x28]
0x00014aff      488d3c7f       lea rdi, [rdi + rdi*2]
0x00014b03      4889742438     mov qword [rsp + 0x38], rsi
0x00014b08      4c894c2430     mov qword [rsp + 0x30], r9
0x00014b0d      48894c2418     mov qword [rsp + 0x18], rcx
0x00014b12      4889542410     mov qword [rsp + 0x10], rdx
0x00014b17      4c8d14f8       lea r10, [rax + rdi*8]
0x00014b1b      bf10000000     mov edi, 0x10
0x00014b20      49c702020000.  mov qword [r10], 2
0x00014b27      4c891424       mov qword [rsp], r10
0x00014b2b      e870d2feff     call sym.imp.malloc
0x00014b30      4c8b1424       mov r10, qword [rsp]
0x00014b34      4885c0         test rax, rax
0x00014b37      488b542410     mov rdx, qword [rsp + 0x10]
0x00014b3c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00014b41      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00014b46      488b742438     mov rsi, qword [rsp + 0x38]
0x00014b4b      49894210       mov qword [r10 + 0x10], rax
0x00014b4f      0f8495020000   je 0x14dea
0x00014b55      4c39c9         cmp rcx, r9
0x00014b58      0f84cf050000   je 0x1512d
0x00014b5e      49c742080200.  mov qword [r10 + 8], 2
0x00014b66      0f8ca8050000   jl 0x15114
0x00014b6c      4c8908         mov qword [rax], r9
0x00014b6f      48894808       mov qword [rax + 8], rcx
0x00014b73      e9bdfeffff     jmp 0x14a35
0x00014b78      488b4220       mov rax, qword [rdx + 0x20]
0x00014b7c      488d0c7f       lea rcx, [rdi + rdi*2]
0x00014b80      bf08000000     mov edi, 8
0x00014b85      4889742410     mov qword [rsp + 0x10], rsi
0x00014b8a      48891424       mov qword [rsp], rdx
0x00014b8e      4c8b7038       mov r14, qword [rax + 0x38]
0x00014b92      498b4528       mov rax, qword [r13 + 0x28]
0x00014b96      4c8d3cc8       lea r15, [rax + rcx*8]
0x00014b9a      49c707010000.  mov qword [r15], 1
0x00014ba1      49c747080100.  mov qword [r15 + 8], 1
0x00014ba9      e8f2d1feff     call sym.imp.malloc
0x00014bae      4885c0         test rax, rax
0x00014bb1      49894710       mov qword [r15 + 0x10], rax
0x00014bb5      488b1424       mov rdx, qword [rsp]
0x00014bb9      488b742410     mov rsi, qword [rsp + 0x10]
0x00014bbe      0f84a4060000   je 0x15268
0x00014bc4      4c8930         mov qword [rax], r14
0x00014bc7      4c8b7a08       mov r15, qword [rdx + 8]
0x00014bcb      e965feffff     jmp 0x14a35
0x00014bd0      48837a2000     cmp qword [rdx + 0x20], 0
0x00014bd5      0f8456feffff   je 0x14a31
0x00014bdb      488d0d1e3000.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x17c00 ; "link_nfa_nodes"
0x00014be2      488d353f2a00.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x17628 ; "../coreutils-8.31/lib/regcomp.c"
0x00014be9      488d3de02a00.  lea rdi, str.node__next____NULL         ; 0x176d0 ; "node->next == NULL"
0x00014bf0      ba9f050000     mov edx, 0x59f
0x00014bf5      e896d0feff     call sym.imp.__assert_fail
0x00014bfa      660f1f440000   nop word [rax + rax]
0x00014c00      488b4220       mov rax, qword [rdx + 0x20]
0x00014c04      4c8b7838       mov r15, qword [rax + 0x38]
0x00014c08      498b4518       mov rax, qword [r13 + 0x18]
0x00014c0c      4c893cf8       mov qword [rax + rdi*8], r15
0x00014c10      807a3004       cmp byte [rdx + 0x30], 4
0x00014c14      0f8517feffff   jne 0x14a31
0x00014c1a      498b4528       mov rax, qword [r13 + 0x28]
0x00014c1e      488d0c7f       lea rcx, [rdi + rdi*2]
0x00014c22      bf08000000     mov edi, 8
0x00014c27      4889742418     mov qword [rsp + 0x18], rsi
0x00014c2c      4889542410     mov qword [rsp + 0x10], rdx
0x00014c31      488d0cc8       lea rcx, [rax + rcx*8]
0x00014c35      48c701010000.  mov qword [rcx], 1
0x00014c3c      48c741080100.  mov qword [rcx + 8], 1
0x00014c44      48890c24       mov qword [rsp], rcx
0x00014c48      e853d1feff     call sym.imp.malloc
0x00014c4d      488b0c24       mov rcx, qword [rsp]
0x00014c51      4885c0         test rax, rax
0x00014c54      488b542410     mov rdx, qword [rsp + 0x10]
0x00014c59      488b742418     mov rsi, qword [rsp + 0x18]
0x00014c5e      48894110       mov qword [rcx + 0x10], rax
0x00014c62      0f8448060000   je 0x152b0
0x00014c68      4c8938         mov qword [rax], r15
0x00014c6b      4c8b7a08       mov r15, qword [rdx + 8]
0x00014c6f      e9c1fdffff     jmp 0x14a35
0x00014c74      4889b424b000.  mov qword [rsp + 0xb0], rsi
0x00014c7c      4889b424b800.  mov qword [rsp + 0xb8], rsi
0x00014c84      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00014c8c      e947faffff     jmp 0x146d8
0x00014c91      0f1f80000000.  nop dword [rax]
0x00014c98      b901000000     mov ecx, 1
0x00014c9d      4c89fa         mov rdx, r15
0x00014ca0      4c89ee         mov rsi, r13
0x00014ca3      4c89e7         mov rdi, r12
0x00014ca6      4c891424       mov qword [rsp], r10
0x00014caa      e82151ffff     call sym.calc_eclosure_iter
0x00014caf      85c0           test eax, eax
0x00014cb1      0f85e9f8ffff   jne 0x145a0
0x00014cb7      498b4530       mov rax, qword [r13 + 0x30]
0x00014cbb      4c8b1424       mov r10, qword [rsp]
0x00014cbf      4983c701       add r15, 1
0x00014cc3      4a837c100800   cmp qword [rax + r10 + 8], 0
0x00014cc9      0f85a9fdffff   jne 0x14a78
0x00014ccf      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00014cd4      e827cefeff     call sym.imp.free
0x00014cd9      4d397d10       cmp qword [r13 + 0x10], r15
0x00014cdd      0f84ccfdffff   je 0x14aaf
0x00014ce3      440fb6742410   movzx r14d, byte [rsp + 0x10]
0x00014ce9      e993fdffff     jmp 0x14a81
0x00014cee      488b442408     mov rax, qword [rsp + 8]
0x00014cf3      f6403810       test byte [rax + 0x38], 0x10
0x00014cf7      7511           jne 0x14d0a
0x00014cf9      4883783000     cmp qword [rax + 0x30], 0
0x00014cfe      740a           je 0x14d0a
0x00014d00      41f685b00000.  test byte [r13 + 0xb0], 1
0x00014d08      750e           jne 0x14d18
0x00014d0a      4983bd980000.  cmp qword [r13 + 0x98], 0
0x00014d12      0f84f3000000   je 0x14e0b
0x00014d18      488d3c52       lea rdi, [rdx + rdx*2]
0x00014d1c      48891424       mov qword [rsp], rdx
0x00014d20      48c1e703       shl rdi, 3
0x00014d24      e877d0feff     call sym.imp.malloc
0x00014d29      4885c0         test rax, rax
0x00014d2c      49894538       mov qword [r13 + 0x38], rax
0x00014d30      0f8446050000   je 0x1527c
0x00014d36      488b1424       mov rdx, qword [rsp]
0x00014d3a      31f6           xor esi, esi
0x00014d3c      31c9           xor ecx, ecx
0x00014d3e      4885d2         test rdx, rdx
0x00014d41      7511           jne 0x14d54
0x00014d43      e9c3000000     jmp 0x14e0b
0x00014d48      0f1f84000000.  nop dword [rax + rax]
0x00014d50      498b4538       mov rax, qword [r13 + 0x38]
0x00014d54      660fefc0       pxor xmm0, xmm0
0x00014d58      4801f0         add rax, rsi
0x00014d5b      4883c101       add rcx, 1
0x00014d5f      48c740100000.  mov qword [rax + 0x10], 0
0x00014d67      4883c618       add rsi, 0x18
0x00014d6b      0f1100         movups xmmword [rax], xmm0
0x00014d6e      498b4510       mov rax, qword [r13 + 0x10]
0x00014d72      4839c1         cmp rcx, rax
0x00014d75      72d9           jb 0x14d50
0x00014d77      4885c0         test rax, rax
0x00014d7a      0f848b000000   je 0x14e0b
0x00014d80      498b4530       mov rax, qword [r13 + 0x30]
0x00014d84      48c744241800.  mov qword [rsp + 0x18], 0
0x00014d8d      48c744241000.  mov qword [rsp + 0x10], 0
0x00014d96      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00014d9b      488d1408       lea rdx, [rax + rcx]
0x00014d9f      48837a0800     cmp qword [rdx + 8], 0
0x00014da4      488b4a10       mov rcx, qword [rdx + 0x10]
0x00014da8      7e4a           jle 0x14df4
0x00014daa      4531ff         xor r15d, r15d
0x00014dad      eb19           jmp 0x14dc8
0x00014daf      90             nop
0x00014db0      498b4530       mov rax, qword [r13 + 0x30]
0x00014db4      488b542418     mov rdx, qword [rsp + 0x18]
0x00014db9      4983c701       add r15, 1
0x00014dbd      488b0c24       mov rcx, qword [rsp]
0x00014dc1      4c3b7c1008     cmp r15, qword [rax + rdx + 8]
0x00014dc6      7d2c           jge 0x14df4
0x00014dc8      4a8b04f9       mov rax, qword [rcx + r15*8]
0x00014dcc      48890c24       mov qword [rsp], rcx
0x00014dd0      488d3440       lea rsi, [rax + rax*2]
0x00014dd4      498b4538       mov rax, qword [r13 + 0x38]
0x00014dd8      488d3cf0       lea rdi, [rax + rsi*8]
0x00014ddc      488b742410     mov rsi, qword [rsp + 0x10]
0x00014de1      e83a33ffff     call sym.re_node_set_insert_last
0x00014de6      84c0           test al, al
0x00014de8      75c6           jne 0x14db0
0x00014dea      b80c000000     mov eax, 0xc
0x00014def      e9acf7ffff     jmp 0x145a0
0x00014df4      488344241001   add qword [rsp + 0x10], 1
0x00014dfa      488344241818   add qword [rsp + 0x18], 0x18            ; [0x18:8]=0x2f90 rip
0x00014e00      488b542410     mov rdx, qword [rsp + 0x10]
0x00014e05      493b5510       cmp rdx, qword [r13 + 0x10]
0x00014e09      728b           jb 0x14d96
0x00014e0b      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00014e12      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00014e1a      c0e802         shr al, 2
0x00014e1d      48837c242000   cmp qword [rsp + 0x20], 0
0x00014e23      0f94c2         sete dl
0x00014e26      20d0           and al, dl
0x00014e28      0f85e1010000   jne 0x1500f
0x00014e2e      488b4368       mov rax, qword [rbx + 0x68]
0x00014e32      4c89e7         mov rdi, r12
0x00014e35      488b4018       mov rax, qword [rax + 0x18]
0x00014e39      488b4038       mov rax, qword [rax + 0x38]
0x00014e3d      488d1440       lea rdx, [rax + rax*2]
0x00014e41      488983900000.  mov qword [rbx + 0x90], rax
0x00014e48      488b4330       mov rax, qword [rbx + 0x30]
0x00014e4c      488d34d0       lea rsi, [rax + rdx*8]
0x00014e50      e8db59ffff     call sym.re_node_set_init_copy
0x00014e55      85c0           test eax, eax
0x00014e57      4189c7         mov r15d, eax
0x00014e5a      89442450       mov dword [rsp + 0x50], eax
0x00014e5e      0f851b010000   jne 0x14f7f
0x00014e64      4883bb980000.  cmp qword [rbx + 0x98], 0
0x00014e6c      0f8ece000000   jle 0x14f40
0x00014e72      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x00014e77      4d85c9         test r9, r9
0x00014e7a      0f8ec0000000   jle 0x14f40
0x00014e80      4531d2         xor r10d, r10d
0x00014e83      4d8d6c2410     lea r13, [r12 + 0x10]
0x00014e88      eb13           jmp 0x14e9d
0x00014e8a      660f1f440000   nop word [rax + rax]
0x00014e90      4983c201       add r10, 1
0x00014e94      4d39d1         cmp r9, r10
0x00014e97      0f8ea3000000   jle 0x14f40
0x00014e9d      488b4c2470     mov rcx, qword [rsp + 0x70]
0x00014ea2      488b33         mov rsi, qword [rbx]
0x00014ea5      4e8b04d1       mov r8, qword [rcx + r10*8]
0x00014ea9      4c89c7         mov rdi, r8
0x00014eac      48c1e704       shl rdi, 4
0x00014eb0      4801f7         add rdi, rsi
0x00014eb3      807f0804       cmp byte [rdi + 8], 4
0x00014eb7      75d7           jne 0x14e90
0x00014eb9      31d2           xor edx, edx
0x00014ebb      eb0c           jmp 0x14ec9
0x00014ebd      0f1f00         nop dword [rax]
0x00014ec0      4883c201       add rdx, 1
0x00014ec4      4939d1         cmp r9, rdx
0x00014ec7      74c7           je 0x14e90
0x00014ec9      488b04d1       mov rax, qword [rcx + rdx*8]
0x00014ecd      48c1e004       shl rax, 4
0x00014ed1      4801f0         add rax, rsi
0x00014ed4      80780809       cmp byte [rax + 8], 9
0x00014ed8      75e6           jne 0x14ec0
0x00014eda      4c8b1f         mov r11, qword [rdi]
0x00014edd      4c3918         cmp qword [rax], r11
0x00014ee0      75de           jne 0x14ec0
0x00014ee2      488b5328       mov rdx, qword [rbx + 0x28]
0x00014ee6      4b8d0440       lea rax, [r8 + r8*2]
0x00014eea      4c89ee         mov rsi, r13
0x00014eed      4c89cf         mov rdi, r9
0x00014ef0      488d04c2       lea rax, [rdx + rax*8]
0x00014ef4      488b4010       mov rax, qword [rax + 0x10]
0x00014ef8      4c8b18         mov r11, qword [rax]
0x00014efb      4c89da         mov rdx, r11
0x00014efe      e8cd47ffff     call sym.re_node_set_contains.isra.3
0x00014f03      4885c0         test rax, rax
0x00014f06      7588           jne 0x14e90
0x00014f08      488b4330       mov rax, qword [rbx + 0x30]
0x00014f0c      4b8d145b       lea rdx, [r11 + r11*2]
0x00014f10      4c89e7         mov rdi, r12
0x00014f13      488d34d0       lea rsi, [rax + rdx*8]
0x00014f17      e8d44cffff     call sym.re_node_set_merge
0x00014f1c      85c0           test eax, eax
0x00014f1e      0f853c030000   jne 0x15260
0x00014f24      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x00014f29      41ba01000000   mov r10d, 1
0x00014f2f      4d39d1         cmp r9, r10
0x00014f32      0f8f65ffffff   jg 0x14e9d
0x00014f38      0f1f84000000.  nop dword [rax + rax]
0x00014f40      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00014f45      31c9           xor ecx, ecx
0x00014f47      4c89e2         mov rdx, r12
0x00014f4a      4889de         mov rsi, rbx
0x00014f4d      e8ce5affff     call sym.re_acquire_state_context
0x00014f52      4885c0         test rax, rax
0x00014f55      48894348       mov qword [rbx + 0x48], rax
0x00014f59      0f8463010000   je 0x150c2
0x00014f5f      80786800       cmp byte [rax + 0x68], 0
0x00014f63      0f88f8000000   js 0x15061
0x00014f69      48894360       mov qword [rbx + 0x60], rax
0x00014f6d      48894358       mov qword [rbx + 0x58], rax
0x00014f71      48894350       mov qword [rbx + 0x50], rax
0x00014f75      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00014f7a      e881cbfeff     call sym.imp.free
0x00014f7f      488b442408     mov rax, qword [rsp + 8]
0x00014f84      44897c244c     mov dword [rsp + 0x4c], r15d
0x00014f89      4c8b28         mov r13, qword [rax]
0x00014f8c      498b7d70       mov rdi, qword [r13 + 0x70]
0x00014f90      4885ff         test rdi, rdi
0x00014f93      7413           je 0x14fa8
0x00014f95      0f1f00         nop dword [rax]
0x00014f98      4c8b27         mov r12, qword [rdi]
0x00014f9b      e860cbfeff     call sym.imp.free
0x00014fa0      4d85e4         test r12, r12
0x00014fa3      4c89e7         mov rdi, r12
0x00014fa6      75f0           jne 0x14f98
0x00014fa8      498b7d20       mov rdi, qword [r13 + 0x20]
0x00014fac      49c745700000.  mov qword [r13 + 0x70], 0
0x00014fb4      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x00014fbf      49c745680000.  mov qword [r13 + 0x68], 0
0x00014fc7      e834cbfeff     call sym.imp.free
0x00014fcc      49c745200000.  mov qword [r13 + 0x20], 0
0x00014fd4      4889ef         mov rdi, rbp
0x00014fd7      e8e443ffff     call sym.re_string_destruct
0x00014fdc      8b44244c       mov eax, dword [rsp + 0x4c]
0x00014fe0      85c0           test eax, eax
0x00014fe2      0f8434f6ffff   je 0x1461c
0x00014fe8      e90ff6ffff     jmp 0x145fc
0x00014fed      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00014ff5      e9b2f5ffff     jmp 0x145ac
0x00014ffa      4889ef         mov rdi, rbp
0x00014ffd      e81e34ffff     call sym.build_wcs_buffer
0x00015002      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001500a      e9c9f6ffff     jmp 0x146d8
0x0001500f      488b4c2408     mov rcx, qword [rsp + 8]
0x00015014      4883792800     cmp qword [rcx + 0x28], 0
0x00015019      0f850ffeffff   jne 0x14e2e
0x0001501f      4c8b5310       mov r10, qword [rbx + 0x10]
0x00015023      4d85d2         test r10, r10
0x00015026      0f84ae020000   je 0x152da
0x0001502c      488b33         mov rsi, qword [rbx]
0x0001502f      4c8d0d562b00.  lea r9, [0x00017b8c]
0x00015036      4531c0         xor r8d, r8d
0x00015039      31d2           xor edx, edx
0x0001503b      4889f1         mov rcx, rsi
0x0001503e      8079080c       cmp byte [rcx + 8], 0xc
0x00015042      0f87c6020000   ja 0x1530e
0x00015048      0fb67908       movzx edi, byte [rcx + 8]
0x0001504c      49633cb9       movsxd rdi, dword [r9 + rdi*4]
0x00015050      4c01cf         add rdi, r9
0x00015053      ffe7           jmp rdi
0x00015055      31ed           xor ebp, ebp
0x00015057      be01000000     mov esi, 1
0x0001505c      e92cf3ffff     jmp 0x1438d
0x00015061      4c8b742428     mov r14, qword [rsp + 0x28]
0x00015066      b901000000     mov ecx, 1
0x0001506b      4c89e2         mov rdx, r12
0x0001506e      4889de         mov rsi, rbx
0x00015071      4c89f7         mov rdi, r14
0x00015074      e8a759ffff     call sym.re_acquire_state_context
0x00015079      b902000000     mov ecx, 2
0x0001507e      4c89e2         mov rdx, r12
0x00015081      4889de         mov rsi, rbx
0x00015084      4c89f7         mov rdi, r14
0x00015087      48894350       mov qword [rbx + 0x50], rax
0x0001508b      e89059ffff     call sym.re_acquire_state_context
0x00015090      b906000000     mov ecx, 6
0x00015095      48894358       mov qword [rbx + 0x58], rax
0x00015099      4c89e2         mov rdx, r12
0x0001509c      4889de         mov rsi, rbx
0x0001509f      4c89f7         mov rdi, r14
0x000150a2      e87959ffff     call sym.re_acquire_state_context
0x000150a7      48837b5000     cmp qword [rbx + 0x50], 0
0x000150ac      48894360       mov qword [rbx + 0x60], rax
0x000150b0      7410           je 0x150c2
0x000150b2      48837b5800     cmp qword [rbx + 0x58], 0
0x000150b7      7409           je 0x150c2
0x000150b9      4885c0         test rax, rax
0x000150bc      0f85b3feffff   jne 0x14f75
0x000150c2      448b7c2450     mov r15d, dword [rsp + 0x50]
0x000150c7      e9b3feffff     jmp 0x14f7f
0x000150cc      488b4220       mov rax, qword [rdx + 0x20]
0x000150d0      4c8b4838       mov r9, qword [rax + 0x38]
0x000150d4      e910faffff     jmp 0x14ae9
0x000150d9      488b4220       mov rax, qword [rdx + 0x20]
0x000150dd      488b4838       mov rcx, qword [rax + 0x38]
0x000150e1      e9eef9ffff     jmp 0x14ad4
0x000150e6      4889df         mov rdi, rbx
0x000150e9      bee8000000     mov esi, 0xe8
0x000150ee      e80dcdfeff     call sym.imp.realloc
0x000150f3      4885c0         test rax, rax
0x000150f6      4889c3         mov rbx, rax
0x000150f9      0f8492010000   je 0x15291
0x000150ff      488b442408     mov rax, qword [rsp + 8]
0x00015104      48c74008e800.  mov qword [rax + 8], 0xe8               ; [0xe8:8]=0x600000001
0x0001510c      488918         mov qword [rax], rbx
0x0001510f      e9def1ffff     jmp 0x142f2
0x00015114      488908         mov qword [rax], rcx
0x00015117      4c894808       mov qword [rax + 8], r9
0x0001511b      e915f9ffff     jmp 0x14a35
0x00015120      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00015128      e9abf5ffff     jmp 0x146d8
0x0001512d      49c742080100.  mov qword [r10 + 8], 1
0x00015135      488908         mov qword [rax], rcx
0x00015138      e9f8f8ffff     jmp 0x14a35
0x0001513d      4889ef         mov rdi, rbp
0x00015140      e86b32ffff     call sym.build_upper_buffer
0x00015145      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001514d      e986f5ffff     jmp 0x146d8
0x00015152      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x0001515a      48c743680000.  mov qword [rbx + 0x68], 0
0x00015162      e945f4ffff     jmp 0x145ac
0x00015167      4885c0         test rax, rax
0x0001516a      0f842b010000   je 0x1529b
0x00015170      4d8d6f70       lea r13, [r15 + 0x70]
0x00015174      4c8d642460     lea r12, [rsp + 0x60]
0x00015179      4983ef80       sub r15, 0xffffffffffffff80
0x0001517d      31c9           xor ecx, ecx
0x0001517f      31d2           xor edx, edx
0x00015181      4c89fe         mov rsi, r15
0x00015184      4d89e0         mov r8, r12
0x00015187      4c89ef         mov rdi, r13
0x0001518a      48890424       mov qword [rsp], rax
0x0001518e      c644246802     mov byte [rsp + 0x68], 2
0x00015193      e8f851ffff     call sym.create_token_tree.isra.16
0x00015198      4c8b0c24       mov r9, qword [rsp]
0x0001519c      4989c3         mov r11, rax
0x0001519f      e9d7f5ffff     jmp 0x1477b
0x000151a4      e857c9feff     call sym.imp.free
0x000151a9      49c785e00000.  mov qword [r13 + 0xe0], 0
0x000151b4      e924f7ffff     jmp 0x148dd
0x000151b9      4189c0         mov r8d, eax
0x000151bc      4883c201       add rdx, 1
0x000151c0      4883c110       add rcx, 0x10
0x000151c4      4c39d2         cmp rdx, r10
0x000151c7      0f8571feffff   jne 0x1503e
0x000151cd      4508c6         or r14b, r8b
0x000151d0      0f8404010000   je 0x152da
0x000151d6      4889d0         mov rax, rdx
0x000151d9      48c1e004       shl rax, 4
0x000151dd      4801f0         add rax, rsi
0x000151e0      eb16           jmp 0x151f8
0x000151e2      80fa05         cmp dl, 5
0x000151e5      7504           jne 0x151eb
0x000151e7      c6460807       mov byte [rsi + 8], 7
0x000151eb      4883c610       add rsi, 0x10
0x000151ef      4839f0         cmp rax, rsi
0x000151f2      0f84df000000   je 0x152d7
0x000151f8      0fb65608       movzx edx, byte [rsi + 8]
0x000151fc      80fa01         cmp dl, 1
0x000151ff      75e1           jne 0x151e2
0x00015201      803e00         cmp byte [rsi], 0
0x00015204      79e5           jns 0x151eb
0x00015206      80660adf       and byte [rsi + 0xa], 0xdf              ; [0xdf:1]=0
0x0001520a      ebdf           jmp 0x151eb
0x0001520c      0f1f4000       nop dword [rax]
0x00015210      803900         cmp byte [rcx], 0
0x00015213      440f48f0       cmovs r14d, eax
0x00015217      eba3           jmp 0x151bc
0x00015219      8b39           mov edi, dword [rcx]
0x0001521b      83ff20         cmp edi, 0x20                           ; "@"
0x0001521e      749c           je 0x151bc
0x00015220      0f86a3000000   jbe 0x152c9
0x00015226      83ff40         cmp edi, 0x40                           ; segment.PHDR
0x00015229      7491           je 0x151bc
0x0001522b      83c780         add edi, 0xffffff80
0x0001522e      748c           je 0x151bc
0x00015230      e9f9fbffff     jmp 0x14e2e
0x00015235      0f1f00         nop dword [rax]
0x00015238      488b39         mov rdi, qword [rcx]
0x0001523b      48837f1000     cmp qword [rdi + 0x10], 0
0x00015240      0f85e8fbffff   jne 0x14e2e
0x00015246      48837f1800     cmp qword [rdi + 0x18], 0
0x0001524b      0f846bffffff   je 0x151bc
0x00015251      e9d8fbffff     jmp 0x14e2e
0x00015256      662e0f1f8400.  nop word cs:[rax + rax]
0x00015260      4189c7         mov r15d, eax
0x00015263      e917fdffff     jmp 0x14f7f
0x00015268      49c747080000.  mov qword [r15 + 8], 0
0x00015270      49c707000000.  mov qword [r15], 0
0x00015277      e96efbffff     jmp 0x14dea
0x0001527c      488b442408     mov rax, qword [rsp + 8]
0x00015281      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00015289      4c8b28         mov r13, qword [rax]
0x0001528c      e91bf3ffff     jmp 0x145ac
0x00015291      b80c000000     mov eax, 0xc
0x00015296      e981f3ffff     jmp 0x1461c
0x0001529b      488b442408     mov rax, qword [rsp + 8]
0x000152a0      48c743680000.  mov qword [rbx + 0x68], 0
0x000152a8      4c8b28         mov r13, qword [rax]
0x000152ab      e9fcf2ffff     jmp 0x145ac
0x000152b0      48c741080000.  mov qword [rcx + 8], 0
0x000152b8      48c701000000.  mov qword [rcx], 0
0x000152bf      b80c000000     mov eax, 0xc
0x000152c4      e9d7f2ffff     jmp 0x145a0
0x000152c9      83ff10         cmp edi, 0x10
0x000152cc      0f84eafeffff   je 0x151bc
0x000152d2      e957fbffff     jmp 0x14e2e
0x000152d7      4589c6         mov r14d, r8d
0x000152da      4883bb980000.  cmp qword [rbx + 0x98], 0
0x000152e2      0fb693b00000.  movzx edx, byte [rbx + 0xb0]
0x000152e9      c783b4000000.  mov dword [rbx + 0xb4], 1
0x000152f3      0f9fc0         setg al
0x000152f6      83e2f9         and edx, 0xfffffff9                     ; 4294967289
0x000152f9      4409f0         or eax, r14d
0x000152fc      83e001         and eax, 1
0x000152ff      01c0           add eax, eax
0x00015301      09d0           or eax, edx
0x00015303      8883b0000000   mov byte [rbx + 0xb0], al
0x00015309      e920fbffff     jmp 0x14e2e
0x0001530e      e8fdc7feff     call sym.imp.abort
0x00015313      488d0de62800.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x17c00 ; "link_nfa_nodes"
0x0001531a      488d35072300.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x17628 ; "../coreutils-8.31/lib/regcomp.c"
0x00015321      488d3dc52300.  lea rdi, str.right____1                 ; 0x176ed ; "right > -1"
0x00015328      bab0050000     mov edx, 0x5b0
0x0001532d      e85ec9feff     call sym.imp.__assert_fail
0x00015332      488d0dc72800.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x17c00 ; "link_nfa_nodes"
0x00015339      488d35e82200.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x17628 ; "../coreutils-8.31/lib/regcomp.c"
0x00015340      488d3d012300.  lea rdi, str.IS_EPSILON_NODE__node__token.type ; 0x17648 ; "!IS_EPSILON_NODE (node->token.type)"
0x00015347      bac2050000     mov edx, 0x5c2
0x0001534c      e83fc9feff     call sym.imp.__assert_fail
0x00015351      488d0da82800.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x17c00 ; "link_nfa_nodes"
0x00015358      488d35c92200.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x17628 ; "../coreutils-8.31/lib/regcomp.c"
0x0001535f      488d3d7d2300.  lea rdi, str.left____1                  ; 0x176e3 ; "left > -1"
0x00015366      baaf050000     mov edx, 0x5af
0x0001536b      e820c9feff     call sym.imp.__assert_fail
0x00015370      e8abc8feff     call sym.imp.__stack_chk_fail
0x00015375      90             nop
0x00015376      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_compile_pattern:
0x00015380      4883ec08       sub rsp, 8
0x00015384      488b0df56f20.  mov rcx, qword [obj.rpl_re_syntax_options] ; [0x21c380:8]=0
0x0001538b      4989f8         mov r8, rdi
0x0001538e      4889d7         mov rdi, rdx
0x00015391      4889c8         mov rax, rcx
0x00015394      48c1e819       shr rax, 0x19
0x00015398      83e001         and eax, 1
0x0001539b      c1e004         shl eax, 4
0x0001539e      89c2           mov edx, eax
0x000153a0      0fb64738       movzx eax, byte [rdi + 0x38]
0x000153a4      83e0ef         and eax, 0xffffffef                     ; 4294967279
0x000153a7      09d0           or eax, edx
0x000153a9      4889f2         mov rdx, rsi
0x000153ac      4c89c6         mov rsi, r8
0x000153af      83c880         or eax, 0xffffff80                      ; 4294967168
0x000153b2      884738         mov byte [rdi + 0x38], al
0x000153b5      e8c6eeffff     call sym.re_compile_internal
0x000153ba      85c0           test eax, eax
0x000153bc      742a           je 0x153e8
0x000153be      488d159b2800.  lea rdx, obj.__re_error_msgid_idx       ; 0x17c60
0x000153c5      4898           cdqe
0x000153c7      488d35322900.  lea rsi, obj.__re_error_msgid           ; 0x17d00 ; "Success"
0x000153ce      31ff           xor edi, edi
0x000153d0      480334c2       add rsi, qword [rdx + rax*8]
0x000153d4      ba05000000     mov edx, 5
0x000153d9      4883c408       add rsp, 8
0x000153dd      e90ec8feff     jmp sym.imp.dcgettext
0x000153e2      660f1f440000   nop word [rax + rax]
0x000153e8      31c0           xor eax, eax
0x000153ea      4883c408       add rsp, 8
0x000153ee      c3             ret
0x000153ef      90             nop
;-- rpl_re_set_syntax:
0x000153f0      488b05896f20.  mov rax, qword [obj.rpl_re_syntax_options] ; [0x21c380:8]=0
0x000153f7      48893d826f20.  mov qword [obj.rpl_re_syntax_options], rdi ; [0x21c380:8]=0
0x000153fe      c3             ret
0x000153ff      90             nop
;-- rpl_re_compile_fastmap:
0x00015400      4154           push r12
0x00015402      55             push rbp
0x00015403      31c0           xor eax, eax
0x00015405      53             push rbx
0x00015406      488b6f20       mov rbp, qword [rdi + 0x20]
0x0001540a      4889fb         mov rbx, rdi
0x0001540d      4c8b27         mov r12, qword [rdi]
0x00015410      488d7d08       lea rdi, [rbp + 8]
0x00015414      4889e9         mov rcx, rbp
0x00015417      48c745000000.  mov qword [rbp], 0
0x0001541f      48c785f80000.  mov qword [rbp + 0xf8], 0
0x0001542a      4883e7f8       and rdi, 0xfffffffffffffff8
0x0001542e      4829f9         sub rcx, rdi
0x00015431      81c100010000   add ecx, 0x100
0x00015437      c1e903         shr ecx, 3
0x0001543a      f348ab         rep stosq qword [rdi], rax
0x0001543d      4889e9         mov rcx, rbp
0x00015440      4889df         mov rdi, rbx
0x00015443      498b742448     mov rsi, qword [r12 + 0x48]
0x00015448      488d5618       lea rdx, [rsi + 0x18]
0x0001544c      4883c610       add rsi, 0x10
0x00015450      e8fb84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00015455      498b442450     mov rax, qword [r12 + 0x50]
0x0001545a      4939442448     cmp qword [r12 + 0x48], rax
0x0001545f      7418           je 0x15479
0x00015461      488d5018       lea rdx, [rax + 0x18]
0x00015465      488d7010       lea rsi, [rax + 0x10]
0x00015469      4889e9         mov rcx, rbp
0x0001546c      4889df         mov rdi, rbx
0x0001546f      e8dc84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00015474      498b442448     mov rax, qword [r12 + 0x48]
0x00015479      498b742458     mov rsi, qword [r12 + 0x58]
0x0001547e      4839c6         cmp rsi, rax
0x00015481      7418           je 0x1549b
0x00015483      488d5618       lea rdx, [rsi + 0x18]
0x00015487      4889e9         mov rcx, rbp
0x0001548a      4883c610       add rsi, 0x10
0x0001548e      4889df         mov rdi, rbx
0x00015491      e8ba84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00015496      498b442448     mov rax, qword [r12 + 0x48]
0x0001549b      498b742460     mov rsi, qword [r12 + 0x60]
0x000154a0      4839c6         cmp rsi, rax
0x000154a3      7413           je 0x154b8
0x000154a5      488d5618       lea rdx, [rsi + 0x18]
0x000154a9      4889e9         mov rcx, rbp
0x000154ac      4883c610       add rsi, 0x10
0x000154b0      4889df         mov rdi, rbx
0x000154b3      e89884ffff     call sym.re_compile_fastmap_iter.isra.30
0x000154b8      804b3808       or byte [rbx + 0x38], 8
0x000154bc      31c0           xor eax, eax
0x000154be      5b             pop rbx
0x000154bf      5d             pop rbp
0x000154c0      415c           pop r12
0x000154c2      c3             ret
0x000154c3      0f1f00         nop dword [rax]
0x000154c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_search_stub:
0x000154d0      4157           push r15
0x000154d2      4156           push r14
0x000154d4      4c89c0         mov rax, r8
0x000154d7      4155           push r13
0x000154d9      4154           push r12
0x000154db      4901c8         add r8, rcx
0x000154de      55             push rbp
0x000154df      53             push rbx
0x000154e0      4883ec38       sub rsp, 0x38
0x000154e4      4885c9         test rcx, rcx
0x000154e7      8b5c2478       mov ebx, dword [rsp + 0x78]
0x000154eb      4c8b642470     mov r12, qword [rsp + 0x70]
0x000154f0      895c2428       mov dword [rsp + 0x28], ebx
0x000154f4      0f8836030000   js 0x15830
0x000154fa      4839d1         cmp rcx, rdx
0x000154fd      0f8f2d030000   jg 0x15830
0x00015503      4939d0         cmp r8, rdx
0x00015506      4889cb         mov rbx, rcx
0x00015509      4989ff         mov r15, rdi
0x0001550c      0f8f7e020000   jg 0x15790
0x00015512      4885c0         test rax, rax
0x00015515      7809           js 0x15520
0x00015517      4c39c1         cmp rcx, r8
0x0001551a      0f8f70020000   jg 0x15790
0x00015520      4d85c0         test r8, r8
0x00015523      0f88df020000   js 0x15808
0x00015529      4885c0         test rax, rax
0x0001552c      7909           jns 0x15537
0x0001552e      4c39c3         cmp rbx, r8
0x00015531      0f8ed1020000   jle 0x15808
0x00015537      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001553c      4189c5         mov r13d, eax
0x0001553f      41c0ed05       shr r13b, 5
0x00015543      4489ef         mov edi, r13d
0x00015546      83e703         and edi, 3
0x00015549      4939d8         cmp r8, rbx
0x0001554c      897c242c       mov dword [rsp + 0x2c], edi
0x00015550      7e0f           jle 0x15561
0x00015552      49837f2000     cmp qword [r15 + 0x20], 0
0x00015557      7408           je 0x15561
0x00015559      a808           test al, 8
0x0001555b      0f84ef010000   je 0x15750
0x00015561      a810           test al, 0x10
0x00015563      0f85c7010000   jne 0x15730
0x00015569      4d85e4         test r12, r12
0x0001556c      0f84be010000   je 0x15730
0x00015572      83e006         and eax, 6
0x00015575      498b4f30       mov rcx, qword [r15 + 0x30]
0x00015579      3c04           cmp al, 4
0x0001557b      0f848f010000   je 0x15710
0x00015581      4c8d7101       lea r14, [rcx + 1]
0x00015585      4d89f5         mov r13, r14
0x00015588      4c89f7         mov rdi, r14
0x0001558b      48c1e704       shl rdi, 4
0x0001558f      4c894c2420     mov qword [rsp + 0x20], r9
0x00015594      4889542418     mov qword [rsp + 0x18], rdx
0x00015599      4889742410     mov qword [rsp + 0x10], rsi
0x0001559e      4c89442408     mov qword [rsp + 8], r8
0x000155a3      e8f8c7feff     call sym.imp.malloc
0x000155a8      4885c0         test rax, rax
0x000155ab      4889c5         mov rbp, rax
0x000155ae      0f848c020000   je 0x15840
0x000155b4      4883ec08       sub rsp, 8
0x000155b8      4889d9         mov rcx, rbx
0x000155bb      4c89ff         mov rdi, r15
0x000155be      8b442434       mov eax, dword [rsp + 0x34]
0x000155c2      50             push rax
0x000155c3      55             push rbp
0x000155c4      4156           push r14
0x000155c6      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000155cb      4c8b442428     mov r8, qword [rsp + 0x28]
0x000155d0      488b542438     mov rdx, qword [rsp + 0x38]
0x000155d5      488b742430     mov rsi, qword [rsp + 0x30]
0x000155da      e811abffff     call sym.re_search_internal
0x000155df      4883c420       add rsp, 0x20
0x000155e3      85c0           test eax, eax
0x000155e5      7431           je 0x15618
0x000155e7      83f801         cmp eax, 1
0x000155ea      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x000155f1      7407           je 0x155fa
0x000155f3      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x000155fa      4889ef         mov rdi, rbp
0x000155fd      e8fec4feff     call sym.imp.free
0x00015602      4883c438       add rsp, 0x38
0x00015606      4c89e0         mov rax, r12
0x00015609      5b             pop rbx
0x0001560a      5d             pop rbp
0x0001560b      415c           pop r12
0x0001560d      415d           pop r13
0x0001560f      415e           pop r14
0x00015611      415f           pop r15
0x00015613      c3             ret
0x00015614      0f1f4000       nop dword [rax]
0x00015618      4d85e4         test r12, r12
0x0001561b      0f84c7000000   je 0x156e8
0x00015621      410fb64738     movzx eax, byte [r15 + 0x38]
0x00015626      498d5501       lea rdx, [r13 + 1]
0x0001562a      d0e8           shr al, 1
0x0001562c      83e003         and eax, 3
0x0001562f      0f846b010000   je 0x157a0
0x00015635      83f801         cmp eax, 1
0x00015638      0f8412020000   je 0x15850
0x0001563e      83f802         cmp eax, 2
0x00015641      0f85e9020000   jne 0x15930
0x00015647      4d3b3424       cmp r14, qword [r12]
0x0001564b      0f87c0020000   ja 0x15911
0x00015651      41b902000000   mov r9d, 2
0x00015657      4d85ed         test r13, r13
0x0001565a      0f8e68020000   jle 0x158c8
0x00015660      4d8b442408     mov r8, qword [r12 + 8]
0x00015665      498b7c2410     mov rdi, qword [r12 + 0x10]
0x0001566a      4a8d34ed0000.  lea rsi, [r13*8]
0x00015672      4c89ea         mov rdx, r13
0x00015675      31c0           xor eax, eax
0x00015677      660f1f840000.  nop word [rax + rax]
0x00015680      488b4c4500     mov rcx, qword [rbp + rax*2]
0x00015685      49890c00       mov qword [r8 + rax], rcx
0x00015689      488b4c4508     mov rcx, qword [rbp + rax*2 + 8]
0x0001568e      48890c07       mov qword [rdi + rax], rcx
0x00015692      4883c008       add rax, 8
0x00015696      4839c6         cmp rsi, rax
0x00015699      75e5           jne 0x15680
0x0001569b      49391424       cmp qword [r12], rdx
0x0001569f      762c           jbe 0x156cd
0x000156a1      498b742410     mov rsi, qword [r12 + 0x10]
0x000156a6      498b4c2408     mov rcx, qword [r12 + 8]
0x000156ab      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x000156b2      660f1f440000   nop word [rax + rax]
0x000156b8      488904d6       mov qword [rsi + rdx*8], rax
0x000156bc      4983c501       add r13, 1
0x000156c0      488904d1       mov qword [rcx + rdx*8], rax
0x000156c4      4d3b2c24       cmp r13, qword [r12]
0x000156c8      4c89ea         mov rdx, r13
0x000156cb      72eb           jb 0x156b8
0x000156cd      410fb64738     movzx eax, byte [r15 + 0x38]
0x000156d2      478d2c09       lea r13d, [r9 + r9]
0x000156d6      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x000156d9      4409e8         or eax, r13d
0x000156dc      a806           test al, 6
0x000156de      41884738       mov byte [r15 + 0x38], al
0x000156e2      0f840bffffff   je 0x155f3
0x000156e8      807c242800     cmp byte [rsp + 0x28], 0
0x000156ed      4c8b6500       mov r12, qword [rbp]
0x000156f1      0f8403ffffff   je 0x155fa
0x000156f7      4939dc         cmp r12, rbx
0x000156fa      0f85f2010000   jne 0x158f2
0x00015700      4c8b6508       mov r12, qword [rbp + 8]
0x00015704      4929dc         sub r12, rbx
0x00015707      e9eefeffff     jmp 0x155fa
0x0001570c      0f1f4000       nop dword [rax]
0x00015710      4d8b3424       mov r14, qword [r12]
0x00015714      4939ce         cmp r14, rcx
0x00015717      0f8764feffff   ja 0x15581
0x0001571d      4d85f6         test r14, r14
0x00015720      4d89f5         mov r13, r14
0x00015723      0f8f5ffeffff   jg 0x15588
0x00015729      0f1f80000000.  nop dword [rax]
0x00015730      bf10000000     mov edi, 0x10
0x00015735      41be01000000   mov r14d, 1
0x0001573b      41bd01000000   mov r13d, 1
0x00015741      4531e4         xor r12d, r12d
0x00015744      e946feffff     jmp 0x1558f
0x00015749      0f1f80000000.  nop dword [rax]
0x00015750      4c89ff         mov rdi, r15
0x00015753      4c894c2420     mov qword [rsp + 0x20], r9
0x00015758      4889542418     mov qword [rsp + 0x18], rdx
0x0001575d      4889742410     mov qword [rsp + 0x10], rsi
0x00015762      4c89442408     mov qword [rsp + 8], r8
0x00015767      e894fcffff     call sym.rpl_re_compile_fastmap
0x0001576c      410fb64738     movzx eax, byte [r15 + 0x38]
0x00015771      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00015776      488b542418     mov rdx, qword [rsp + 0x18]
0x0001577b      488b742410     mov rsi, qword [rsp + 0x10]
0x00015780      4c8b442408     mov r8, qword [rsp + 8]
0x00015785      e9d7fdffff     jmp 0x15561
0x0001578a      660f1f440000   nop word [rax + rax]
0x00015790      4989d0         mov r8, rdx
0x00015793      e99ffdffff     jmp 0x15537
0x00015798      0f1f84000000.  nop dword [rax + rax]
0x000157a0      4c8d34d50000.  lea r14, [rdx*8]
0x000157a8      4889542408     mov qword [rsp + 8], rdx
0x000157ad      4c89f7         mov rdi, r14
0x000157b0      e8ebc5feff     call sym.imp.malloc
0x000157b5      4885c0         test rax, rax
0x000157b8      4989442408     mov qword [r12 + 8], rax
0x000157bd      488b542408     mov rdx, qword [rsp + 8]
0x000157c2      0f8412010000   je 0x158da
0x000157c8      4c89f7         mov rdi, r14
0x000157cb      4889542408     mov qword [rsp + 8], rdx
0x000157d0      4889442410     mov qword [rsp + 0x10], rax
0x000157d5      e8c6c5feff     call sym.imp.malloc
0x000157da      4885c0         test rax, rax
0x000157dd      4989442410     mov qword [r12 + 0x10], rax
0x000157e2      488b542408     mov rdx, qword [rsp + 8]
0x000157e7      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000157ec      0f84e0000000   je 0x158d2
0x000157f2      49891424       mov qword [r12], rdx
0x000157f6      41b901000000   mov r9d, 1
0x000157fc      e956feffff     jmp 0x15657
0x00015801      0f1f80000000.  nop dword [rax]
0x00015808      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001580d      4531c0         xor r8d, r8d
0x00015810      4189c5         mov r13d, eax
0x00015813      41c0ed05       shr r13b, 5
0x00015817      4489ef         mov edi, r13d
0x0001581a      83e703         and edi, 3
0x0001581d      897c242c       mov dword [rsp + 0x2c], edi
0x00015821      e93bfdffff     jmp 0x15561
0x00015826      662e0f1f8400.  nop word cs:[rax + rax]
0x00015830      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00015837      e9c6fdffff     jmp 0x15602
0x0001583c      0f1f4000       nop dword [rax]
0x00015840      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00015847      e9b6fdffff     jmp 0x15602
0x0001584c      0f1f4000       nop dword [rax]
0x00015850      49391424       cmp qword [r12], rdx
0x00015854      41b901000000   mov r9d, 1
0x0001585a      0f83f7fdffff   jae 0x15657
0x00015860      488d0cd50000.  lea rcx, [rdx*8]
0x00015868      498b7c2408     mov rdi, qword [r12 + 8]
0x0001586d      44884c2418     mov byte [rsp + 0x18], r9b
0x00015872      4889542410     mov qword [rsp + 0x10], rdx
0x00015877      4889ce         mov rsi, rcx
0x0001587a      48894c2408     mov qword [rsp + 8], rcx
0x0001587f      e87cc5feff     call sym.imp.realloc
0x00015884      4885c0         test rax, rax
0x00015887      4989c6         mov r14, rax
0x0001588a      744e           je 0x158da
0x0001588c      488b4c2408     mov rcx, qword [rsp + 8]
0x00015891      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00015896      4889ce         mov rsi, rcx
0x00015899      e862c5feff     call sym.imp.realloc
0x0001589e      4885c0         test rax, rax
0x000158a1      488b542410     mov rdx, qword [rsp + 0x10]
0x000158a6      440fb64c2418   movzx r9d, byte [rsp + 0x18]
0x000158ac      7434           je 0x158e2
0x000158ae      4d89742408     mov qword [r12 + 8], r14
0x000158b3      4989442410     mov qword [r12 + 0x10], rax
0x000158b8      49891424       mov qword [r12], rdx
0x000158bc      e996fdffff     jmp 0x15657
0x000158c1      0f1f80000000.  nop dword [rax]
0x000158c8      31d2           xor edx, edx
0x000158ca      4531ed         xor r13d, r13d
0x000158cd      e9c9fdffff     jmp 0x1569b
0x000158d2      4889cf         mov rdi, rcx
0x000158d5      e826c2feff     call sym.imp.free
0x000158da      4531c9         xor r9d, r9d
0x000158dd      e9ebfdffff     jmp 0x156cd
0x000158e2      4c89f7         mov rdi, r14
0x000158e5      e816c2feff     call sym.imp.free
0x000158ea      4531c9         xor r9d, r9d
0x000158ed      e9dbfdffff     jmp 0x156cd
0x000158f2      488d0dd72200.  lea rcx, obj.__PRETTY_FUNCTION__.7847   ; 0x17bd0 ; "re_search_stub"
0x000158f9      488d35081d00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x17608 ; "../coreutils-8.31/lib/regexec.c"
0x00015900      488d3d261e00.  lea rdi, str.pmatch_0_.rm_so____start   ; 0x1772d ; "pmatch[0].rm_so == start"
0x00015907      babe010000     mov edx, 0x1be
0x0001590c      e87fc3feff     call sym.imp.__assert_fail
0x00015911      488d0da82200.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x17bc0 ; "re_copy_regs"
0x00015918      488d35e91c00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x17608 ; "../coreutils-8.31/lib/regexec.c"
0x0001591f      488d3def1d00.  lea rdi, str.regs__num_regs____nregs    ; 0x17715 ; "regs->num_regs >= nregs"
0x00015926      bafb010000     mov edx, 0x1fb
0x0001592b      e860c3feff     call sym.imp.__assert_fail
0x00015930      488d0d892200.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x17bc0 ; "re_copy_regs"
0x00015937      488d35ca1c00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x17608 ; "../coreutils-8.31/lib/regexec.c"
0x0001593e      488d3db31d00.  lea rdi, str.regs_allocated____REGS_FIXED ; 0x176f8 ; "regs_allocated == REGS_FIXED"
0x00015945      baf9010000     mov edx, 0x1f9
0x0001594a      e841c3feff     call sym.imp.__assert_fail
0x0001594f      90             nop
;-- re_search_2_stub:
0x00015950      4157           push r15
0x00015952      4156           push r14
0x00015954      4155           push r13
0x00015956      4154           push r12
0x00015958      4989fc         mov r12, rdi
0x0001595b      55             push rbp
0x0001595c      53             push rbx
0x0001595d      4c89c5         mov rbp, r8
0x00015960      4889d3         mov rbx, rdx
0x00015963      4889ea         mov rdx, rbp
0x00015966      4883ec28       sub rsp, 0x28
0x0001596a      48c1ea3f       shr rdx, 0x3f
0x0001596e      488b442470     mov rax, qword [rsp + 0x70]
0x00015973      89d7           mov edi, edx
0x00015975      448b442478     mov r8d, dword [rsp + 0x78]
0x0001597a      48c1e83f       shr rax, 0x3f
0x0001597e      4008c7         or dil, al
0x00015981      0f85c9000000   jne 0x15a50
0x00015987      4885db         test rbx, rbx
0x0001598a      0f88c0000000   js 0x15a50
0x00015990      4989df         mov r15, rbx
0x00015993      4901ef         add r15, rbp
0x00015996      0f80b4000000   jo 0x15a50
0x0001599c      4885ed         test rbp, rbp
0x0001599f      4989ce         mov r14, rcx
0x000159a2      4c89c9         mov rcx, r9
0x000159a5      0f84b5000000   je 0x15a60
0x000159ab      4531ed         xor r13d, r13d
0x000159ae      4885db         test rbx, rbx
0x000159b1      4889742408     mov qword [rsp + 8], rsi
0x000159b6      7548           jne 0x15a00
0x000159b8      450fb6c0       movzx r8d, r8b
0x000159bc      4c89fa         mov rdx, r15
0x000159bf      4c89f6         mov rsi, r14
0x000159c2      4150           push r8
0x000159c4      ff742470       push qword [rsp + 0x70]
0x000159c8      4c89e7         mov rdi, r12
0x000159cb      4c8b8c248000.  mov r9, qword [rsp + 0x80]
0x000159d3      4c8b442470     mov r8, qword [rsp + 0x70]
0x000159d8      e8f3faffff     call sym.re_search_stub
0x000159dd      4c89ef         mov rdi, r13
0x000159e0      4889c3         mov rbx, rax
0x000159e3      e818c1feff     call sym.imp.free
0x000159e8      58             pop rax
0x000159e9      5a             pop rdx
0x000159ea      4883c428       add rsp, 0x28
0x000159ee      4889d8         mov rax, rbx
0x000159f1      5b             pop rbx
0x000159f2      5d             pop rbp
0x000159f3      415c           pop r12
0x000159f5      415d           pop r13
0x000159f7      415e           pop r14
0x000159f9      415f           pop r15
0x000159fb      c3             ret
0x000159fc      0f1f4000       nop dword [rax]
0x00015a00      4c89ff         mov rdi, r15
0x00015a03      448944241c     mov dword [rsp + 0x1c], r8d
0x00015a08      4c894c2410     mov qword [rsp + 0x10], r9
0x00015a0d      e88ec3feff     call sym.imp.malloc
0x00015a12      4885c0         test rax, rax
0x00015a15      4989c5         mov r13, rax
0x00015a18      7436           je 0x15a50
0x00015a1a      488b742408     mov rsi, qword [rsp + 8]
0x00015a1f      4889da         mov rdx, rbx
0x00015a22      4889c7         mov rdi, rax
0x00015a25      e846c3feff     call sym.imp.memcpy
0x00015a2a      498d7c1d00     lea rdi, [r13 + rbx]
0x00015a2f      4c89f6         mov rsi, r14
0x00015a32      4889ea         mov rdx, rbp
0x00015a35      4d89ee         mov r14, r13
0x00015a38      e833c3feff     call sym.imp.memcpy
0x00015a3d      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00015a42      448b44241c     mov r8d, dword [rsp + 0x1c]
0x00015a47      e96cffffff     jmp 0x159b8
0x00015a4c      0f1f4000       nop dword [rax]
0x00015a50      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x00015a57      eb91           jmp 0x159ea
0x00015a59      0f1f80000000.  nop dword [rax]
0x00015a60      4989f6         mov r14, rsi
0x00015a63      4531ed         xor r13d, r13d
0x00015a66      e94dffffff     jmp 0x159b8
0x00015a6b      0f1f440000     nop dword [rax + rax]
;-- rpl_regcomp:
0x00015a70      89d0           mov eax, edx
0x00015a72      4156           push r14
0x00015a74      4155           push r13
0x00015a76      83e001         and eax, 1
0x00015a79      4154           push r12
0x00015a7b      55             push rbp
0x00015a7c      83f801         cmp eax, 1
0x00015a7f      53             push rbx
0x00015a80      4889fb         mov rbx, rdi
0x00015a83      4d19f6         sbb r14, r14
0x00015a86      48c707000000.  mov qword [rdi], 0
0x00015a8d      48c747080000.  mov qword [rdi + 8], 0
0x00015a95      4181e6ca4ffd.  and r14d, 0xfd4fca
0x00015a9c      48c747100000.  mov qword [rdi + 0x10], 0
0x00015aa4      bf00010000     mov edi, 0x100
0x00015aa9      4989f4         mov r12, rsi
0x00015aac      89d5           mov ebp, edx
0x00015aae      4981c6fcb203.  add r14, 0x3b2fc
0x00015ab5      e8e6c2feff     call sym.imp.malloc
0x00015aba      4885c0         test rax, rax
0x00015abd      48894320       mov qword [rbx + 0x20], rax
0x00015ac1      0f84a9000000   je 0x15b70
0x00015ac7      4989ed         mov r13, rbp
0x00015aca      49c1e515       shl r13, 0x15
0x00015ace      4181e5000040.  and r13d, 0x400000
0x00015ad5      4d09f5         or r13, r14
0x00015ad8      40f6c504       test bpl, 4
0x00015adc      7562           jne 0x15b40
0x00015ade      8063387f       and byte [rbx + 0x38], 0x7f             ; [0x7f:1]=0
0x00015ae2      0fb65338       movzx edx, byte [rbx + 0x38]
0x00015ae6      c1ed03         shr ebp, 3
0x00015ae9      4c89e7         mov rdi, r12
0x00015aec      83e501         and ebp, 1
0x00015aef      48c743280000.  mov qword [rbx + 0x28], 0
0x00015af7      c1e504         shl ebp, 4
0x00015afa      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x00015afd      09d5           or ebp, edx
0x00015aff      40886b38       mov byte [rbx + 0x38], bpl
0x00015b03      e808c1feff     call sym.imp.strlen
0x00015b08      4c89e9         mov rcx, r13
0x00015b0b      4889c2         mov rdx, rax
0x00015b0e      4c89e6         mov rsi, r12
0x00015b11      4889df         mov rdi, rbx
0x00015b14      e867e7ffff     call sym.re_compile_internal
0x00015b19      83f810         cmp eax, 0x10
0x00015b1c      89c5           mov ebp, eax
0x00015b1e      7438           je 0x15b58
0x00015b20      85c0           test eax, eax
0x00015b22      7539           jne 0x15b5d
0x00015b24      4889df         mov rdi, rbx
0x00015b27      e8d4f8ffff     call sym.rpl_re_compile_fastmap
0x00015b2c      5b             pop rbx
0x00015b2d      89e8           mov eax, ebp
0x00015b2f      5d             pop rbp
0x00015b30      415c           pop r12
0x00015b32      415d           pop r13
0x00015b34      415e           pop r14
0x00015b36      c3             ret
0x00015b37      660f1f840000.  nop word [rax + rax]
0x00015b40      4983e5bf       and r13, 0xffffffffffffffbf
0x00015b44      804b3880       or byte [rbx + 0x38], 0x80              ; [0x80:1]=56
0x00015b48      4981cd000100.  or r13, 0x100
0x00015b4f      eb91           jmp 0x15ae2
0x00015b51      0f1f80000000.  nop dword [rax]
0x00015b58      bd08000000     mov ebp, 8
0x00015b5d      488b7b20       mov rdi, qword [rbx + 0x20]
0x00015b61      e89abffeff     call sym.imp.free
0x00015b66      48c743200000.  mov qword [rbx + 0x20], 0
0x00015b6e      ebbc           jmp 0x15b2c
0x00015b70      bd0c000000     mov ebp, 0xc
0x00015b75      5b             pop rbx
0x00015b76      89e8           mov eax, ebp
0x00015b78      5d             pop rbp
0x00015b79      415c           pop r12
0x00015b7b      415d           pop r13
0x00015b7d      415e           pop r14
0x00015b7f      c3             ret
;-- rpl_regerror:
0x00015b80      4155           push r13
0x00015b82      4154           push r12
0x00015b84      55             push rbp
0x00015b85      53             push rbx
0x00015b86      4883ec08       sub rsp, 8
0x00015b8a      83ff10         cmp edi, 0x10
0x00015b8d      7761           ja 0x15bf0
0x00015b8f      488d05ca2000.  lea rax, obj.__re_error_msgid_idx       ; 0x17c60
0x00015b96      4863ff         movsxd rdi, edi
0x00015b99      488d35602100.  lea rsi, obj.__re_error_msgid           ; 0x17d00 ; "Success"
0x00015ba0      4889d5         mov rbp, rdx
0x00015ba3      ba05000000     mov edx, 5
0x00015ba8      4989cc         mov r12, rcx
0x00015bab      480334f8       add rsi, qword [rax + rdi*8]
0x00015baf      31ff           xor edi, edi
0x00015bb1      e83ac0feff     call sym.imp.dcgettext
0x00015bb6      4889c7         mov rdi, rax
0x00015bb9      4989c5         mov r13, rax
0x00015bbc      e84fc0feff     call sym.imp.strlen
0x00015bc1      4d85e4         test r12, r12
0x00015bc4      488d5801       lea rbx, [rax + 1]
0x00015bc8      7413           je 0x15bdd
0x00015bca      4c39e3         cmp rbx, r12
0x00015bcd      4889da         mov rdx, rbx
0x00015bd0      7726           ja 0x15bf8
0x00015bd2      4c89ee         mov rsi, r13
0x00015bd5      4889ef         mov rdi, rbp
0x00015bd8      e893c1feff     call sym.imp.memcpy
0x00015bdd      4883c408       add rsp, 8
0x00015be1      4889d8         mov rax, rbx
0x00015be4      5b             pop rbx
0x00015be5      5d             pop rbp
0x00015be6      415c           pop r12
0x00015be8      415d           pop r13
0x00015bea      c3             ret
0x00015beb      0f1f440000     nop dword [rax + rax]
0x00015bf0      e81bbffeff     call sym.imp.abort
0x00015bf5      0f1f00         nop dword [rax]
0x00015bf8      498d5424ff     lea rdx, [r12 - 1]
0x00015bfd      42c64425ff00   mov byte [rbp + r12 - 1], 0
0x00015c03      ebcd           jmp 0x15bd2
0x00015c05      90             nop
0x00015c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regfree:
0x00015c10      53             push rbx
0x00015c11      4889fb         mov rbx, rdi
0x00015c14      488b3f         mov rdi, qword [rdi]
0x00015c17      4885ff         test rdi, rdi
0x00015c1a      7405           je 0x15c21
0x00015c1c      e8df37ffff     call sym.free_dfa_content
0x00015c21      488b7b20       mov rdi, qword [rbx + 0x20]
0x00015c25      48c703000000.  mov qword [rbx], 0
0x00015c2c      48c743080000.  mov qword [rbx + 8], 0
0x00015c34      e8c7befeff     call sym.imp.free
0x00015c39      488b7b28       mov rdi, qword [rbx + 0x28]
0x00015c3d      48c743200000.  mov qword [rbx + 0x20], 0
0x00015c45      e8b6befeff     call sym.imp.free
0x00015c4a      48c743280000.  mov qword [rbx + 0x28], 0
0x00015c52      5b             pop rbx
0x00015c53      c3             ret
0x00015c54      6690           nop
0x00015c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regexec:
0x00015c60      41f7c0f8ffff.  test r8d, 0xfffffff8                    ; 4294967288
0x00015c67      0f858b000000   jne 0x15cf8
0x00015c6d      4155           push r13
0x00015c6f      4154           push r12
0x00015c71      4989d5         mov r13, rdx
0x00015c74      55             push rbp
0x00015c75      53             push rbx
0x00015c76      4989cc         mov r12, rcx
0x00015c79      4489c3         mov ebx, r8d
0x00015c7c      4889fd         mov rbp, rdi
0x00015c7f      4883ec18       sub rsp, 0x18
0x00015c83      41f6c004       test r8b, 4
0x00015c87      754f           jne 0x15cd8
0x00015c89      4889f7         mov rdi, rsi
0x00015c8c      4889742408     mov qword [rsp + 8], rsi
0x00015c91      e87abffeff     call sym.imp.strlen
0x00015c96      31c9           xor ecx, ecx
0x00015c98      f6453810       test byte [rbp + 0x38], 0x10
0x00015c9c      4889c2         mov rdx, rax
0x00015c9f      488b742408     mov rsi, qword [rsp + 8]
0x00015ca4      7440           je 0x15ce6
0x00015ca6      4883ec08       sub rsp, 8
0x00015caa      53             push rbx
0x00015cab      6a00           push 0
0x00015cad      6a00           push 0
0x00015caf      4889ef         mov rdi, rbp
0x00015cb2      4989d1         mov r9, rdx
0x00015cb5      4989d0         mov r8, rdx
0x00015cb8      e833a4ffff     call sym.re_search_internal
0x00015cbd      4883c420       add rsp, 0x20
0x00015cc1      85c0           test eax, eax
0x00015cc3      0f95c0         setne al
0x00015cc6      4883c418       add rsp, 0x18
0x00015cca      5b             pop rbx
0x00015ccb      0fb6c0         movzx eax, al
0x00015cce      5d             pop rbp
0x00015ccf      415c           pop r12
0x00015cd1      415d           pop r13
0x00015cd3      c3             ret
0x00015cd4      0f1f4000       nop dword [rax]
0x00015cd8      f6453810       test byte [rbp + 0x38], 0x10
0x00015cdc      488b09         mov rcx, qword [rcx]
0x00015cdf      498b542408     mov rdx, qword [r12 + 8]
0x00015ce4      75c0           jne 0x15ca6
0x00015ce6      4883ec08       sub rsp, 8
0x00015cea      53             push rbx
0x00015ceb      4154           push r12
0x00015ced      4155           push r13
0x00015cef      ebbe           jmp 0x15caf
0x00015cf1      0f1f80000000.  nop dword [rax]
0x00015cf8      b802000000     mov eax, 2
0x00015cfd      c3             ret
0x00015cfe      6690           nop
;-- rpl_re_match:
0x00015d00      4883ec08       sub rsp, 8
0x00015d04      4989d1         mov r9, rdx
0x00015d07      6a01           push 1
0x00015d09      4150           push r8
0x00015d0b      4531c0         xor r8d, r8d
0x00015d0e      e8bdf7ffff     call sym.re_search_stub
0x00015d13      4883c418       add rsp, 0x18
0x00015d17      c3             ret
0x00015d18      0f1f84000000.  nop dword [rax + rax]
;-- rpl_re_search:
0x00015d20      4883ec08       sub rsp, 8
0x00015d24      6a00           push 0
0x00015d26      4151           push r9
0x00015d28      4989d1         mov r9, rdx
0x00015d2b      e8a0f7ffff     call sym.re_search_stub
0x00015d30      4883c418       add rsp, 0x18
0x00015d34      c3             ret
0x00015d35      90             nop
0x00015d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_match_2:
0x00015d40      4883ec08       sub rsp, 8
0x00015d44      6a01           push 1
0x00015d46      ff742420       push qword [rsp + 0x20]
0x00015d4a      ff742420       push qword [rsp + 0x20]
0x00015d4e      6a00           push 0
0x00015d50      e8fbfbffff     call sym.re_search_2_stub
0x00015d55      4883c428       add rsp, 0x28
0x00015d59      c3             ret
0x00015d5a      660f1f440000   nop word [rax + rax]
;-- rpl_re_search_2:
0x00015d60      4883ec08       sub rsp, 8
0x00015d64      6a00           push 0
0x00015d66      ff742428       push qword [rsp + 0x28]
0x00015d6a      ff742428       push qword [rsp + 0x28]
0x00015d6e      ff742428       push qword [rsp + 0x28]
0x00015d72      e8d9fbffff     call sym.re_search_2_stub
0x00015d77      4883c428       add rsp, 0x28
0x00015d7b      c3             ret
0x00015d7c      0f1f4000       nop dword [rax]
;-- rpl_re_set_registers:
0x00015d80      4885d2         test rdx, rdx
0x00015d83      7523           jne 0x15da8
0x00015d85      806738f9       and byte [rdi + 0x38], 0xf9             ; [0xf9:1]=185
0x00015d89      48c706000000.  mov qword [rsi], 0
0x00015d90      48c746100000.  mov qword [rsi + 0x10], 0
0x00015d98      48c746080000.  mov qword [rsi + 8], 0
0x00015da0      c3             ret
0x00015da1      0f1f80000000.  nop dword [rax]
0x00015da8      0fb64738       movzx eax, byte [rdi + 0x38]
0x00015dac      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x00015daf      83c802         or eax, 2
0x00015db2      884738         mov byte [rdi + 0x38], al
0x00015db5      488916         mov qword [rsi], rdx
0x00015db8      48894e08       mov qword [rsi + 8], rcx
0x00015dbc      4c894610       mov qword [rsi + 0x10], r8
0x00015dc0      c3             ret
0x00015dc1      662e0f1f8400.  nop word cs:[rax + rax]
0x00015dcb      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x00015dd0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00015dd2      55             push rbp
0x00015dd3      4889fd         mov rbp, rdi
0x00015dd6      53             push rbx
0x00015dd7      e894bdfeff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00015ddc      8b5d00         mov ebx, dword [rbp]
0x00015ddf      4889ef         mov rdi, rbp
0x00015de2      4989c4         mov r12, rax
0x00015de5      e8a619ffff     call sym.rpl_fclose
0x00015dea      83e320         and ebx, 0x20                           ; "@"
0x00015ded      85db           test ebx, ebx
0x00015def      7517           jne 0x15e08
0x00015df1      85c0           test eax, eax
0x00015df3      740a           je 0x15dff                              ; stdio.h:-186
0x00015df5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00015df8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00015dfd      7439           je 0x15e38
0x00015dff      5b             pop rbx
0x00015e00      5d             pop rbp
0x00015e01      415c           pop r12
0x00015e03      c3             ret
0x00015e04      0f1f4000       nop dword [rax]
0x00015e08      85c0           test eax, eax
0x00015e0a      751c           jne 0x15e28
0x00015e0c      e80fbdfeff     call sym.imp.__errno_location
0x00015e11      c70000000000   mov dword [rax], 0
0x00015e17      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00015e1c      5b             pop rbx
0x00015e1d      5d             pop rbp
0x00015e1e      415c           pop r12
0x00015e20      c3             ret
0x00015e21      0f1f80000000.  nop dword [rax]
0x00015e28      5b             pop rbx
0x00015e29      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00015e2e      5d             pop rbp                                 ; stdio.h:-186
0x00015e2f      415c           pop r12
0x00015e31      c3             ret
0x00015e32      660f1f440000   nop word [rax + rax]
0x00015e38      e8e3bcfeff     call sym.imp.__errno_location
0x00015e3d      833809         cmp dword [rax], 9
0x00015e40      5b             pop rbx
0x00015e41      5d             pop rbp
0x00015e42      415c           pop r12                                 ; stdio.h:-178
0x00015e44      0f95c0         setne al
0x00015e47      0fb6c0         movzx eax, al
0x00015e4a      f7d8           neg eax
0x00015e4c      c3             ret
0x00015e4d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00015e50      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00015e54      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00015e56      e8c5bffeff     call sym.imp.setlocale
0x00015e5b      4889c2         mov rdx, rax
0x00015e5e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00015e63      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00015e66      741d           je 0x15e85
0x00015e68      488d3d212000.  lea rdi, [0x00017e90]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00015e6f      b902000000     mov ecx, 2
0x00015e74      4889d6         mov rsi, rdx
0x00015e77      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00015e79      0f97c1         seta cl
0x00015e7c      80d900         sbb cl, 0
0x00015e7f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00015e81      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00015e83      750b           jne 0x15e90
0x00015e85      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00015e89      c3             ret
0x00015e8a      660f1f440000   nop word [rax + rax]
0x00015e90      488d3dfb1f00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x17e92 ; "POSIX"
0x00015e97      b906000000     mov ecx, 6
0x00015e9c      4889d6         mov rsi, rdx
0x00015e9f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00015ea1      0f97c0         seta al
0x00015ea4      1c00           sbb al, 0
0x00015ea6      84c0           test al, al
0x00015ea8      0f95c0         setne al
0x00015eab      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00015eaf      c3             ret
;-- locale_charset:
0x00015eb0      4883ec08       sub rsp, 8
0x00015eb4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00015eb9      e812bffeff     call sym.imp.nl_langinfo
0x00015ebe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00015ec1      741d           je 0x15ee0
0x00015ec3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00015ec6      488d15cb1f00.  lea rdx, str.ASCII                      ; 0x17e98 ; "ASCII"
0x00015ecd      480f44c2       cmove rax, rdx
0x00015ed1      4883c408       add rsp, 8
0x00015ed5      c3             ret
0x00015ed6      662e0f1f8400.  nop word cs:[rax + rax]
0x00015ee0      488d05b11f00.  lea rax, str.ASCII                      ; 0x17e98 ; "ASCII"
0x00015ee7      4883c408       add rsp, 8
0x00015eeb      c3             ret
0x00015eec      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00015ef0      4157           push r15
0x00015ef2      4156           push r14
0x00015ef4      4989d7         mov r15, rdx
0x00015ef7      4155           push r13
0x00015ef9      4154           push r12
0x00015efb      4c8d25ae5a20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x21b9b0
0x00015f02      55             push rbp
0x00015f03      488d2dae5a20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x21b9b8 ; "P0"
0x00015f0a      53             push rbx
0x00015f0b      4189fd         mov r13d, edi
0x00015f0e      4989f6         mov r14, rsi
0x00015f11      4c29e5         sub rbp, r12
0x00015f14      4883ec08       sub rsp, 8
0x00015f18      48c1fd03       sar rbp, 3
0x00015f1c      e877bbfeff     call sym._init
0x00015f21      4885ed         test rbp, rbp
0x00015f24      7420           je 0x15f46
0x00015f26      31db           xor ebx, ebx
0x00015f28      0f1f84000000.  nop dword [rax + rax]
0x00015f30      4c89fa         mov rdx, r15
0x00015f33      4c89f6         mov rsi, r14
0x00015f36      4489ef         mov edi, r13d
0x00015f39      41ff14dc       call qword [r12 + rbx*8]
0x00015f3d      4883c301       add rbx, 1
0x00015f41      4839dd         cmp rbp, rbx
0x00015f44      75ea           jne 0x15f30
0x00015f46      4883c408       add rsp, 8
0x00015f4a      5b             pop rbx
0x00015f4b      5d             pop rbp
0x00015f4c      415c           pop r12
0x00015f4e      415d           pop r13
0x00015f50      415e           pop r14
0x00015f52      415f           pop r15
0x00015f54      c3             ret
0x00015f55      90             nop
0x00015f56      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00015f60      f3c3           ret
0x00015f62      662e0f1f8400.  nop word cs:[rax + rax]
0x00015f6c      0f1f4000       nop dword [rax]
;-- atexit:
0x00015f70      488b15916020.  mov rdx, qword [obj.__dso_handle]       ; [0x21c008:8]=0x21c008 obj.__dso_handle
0x00015f77      31f6           xor esi, esi
0x00015f79      e942bffeff     jmp sym.imp.__cxa_atexit
0x00015f7e      0000           add byte [rax], al
