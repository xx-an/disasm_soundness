;-- section..plt:
;-- .plt:
0x00001900      ff35aac42000   push qword [0x0020ddb0]                 ; [12] -r-x section size 1072 named .plt
0x00001906      ff25acc42000   jmp qword [0x0020ddb8]                  ; [0x20ddb8:8]=0
0x0000190c      0f1f4000       nop dword [rax]
;-- imp.endgrent:
0x00001910      ff25aac42000   jmp qword [reloc.endgrent]              ; [0x20ddc0:8]=0x1916
0x00001916      6800000000     push 0
0x0000191b      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x00001920      ff25a2c42000   jmp qword [reloc.abort]                 ; [0x20ddc8:8]=0x1926 ; "&\x19"
0x00001926      6801000000     push 1
0x0000192b      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001930      ff259ac42000   jmp qword [reloc.__errno_location]      ; [0x20ddd0:8]=0x1936 ; "6\x19"
0x00001936      6802000000     push 2
0x0000193b      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001940      ff2592c42000   jmp qword [reloc.strncmp]               ; [0x20ddd8:8]=0x1946 ; "F\x19"
0x00001946      6803000000     push 3
0x0000194b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001950      ff258ac42000   jmp qword [reloc._exit]                 ; [0x20dde0:8]=0x1956 ; "V\x19"
0x00001956      6804000000     push 4
0x0000195b      e9a0ffffff     jmp sym..plt
;-- imp.strcpy:
0x00001960      ff2582c42000   jmp qword [reloc.strcpy]                ; [0x20dde8:8]=0x1966 ; "f\x19"
0x00001966      6805000000     push 5
0x0000196b      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001970      ff257ac42000   jmp qword [reloc.__fpending]            ; [0x20ddf0:8]=0x1976 ; "v\x19"
0x00001976      6806000000     push 6
0x0000197b      e980ffffff     jmp sym..plt
;-- imp.qsort:
0x00001980      ff2572c42000   jmp qword [reloc.qsort]                 ; [0x20ddf8:8]=0x1986
0x00001986      6807000000     push 7
0x0000198b      e970ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001990      ff256ac42000   jmp qword [reloc.fcntl]                 ; [0x20de00:8]=0x1996
0x00001996      6808000000     push 8
0x0000199b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x000019a0      ff2562c42000   jmp qword [reloc.textdomain]            ; [0x20de08:8]=0x19a6
0x000019a6      6809000000     push 9
0x000019ab      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x000019b0      ff255ac42000   jmp qword [reloc.fclose]                ; [0x20de10:8]=0x19b6
0x000019b6      680a000000     push 0xa
0x000019bb      e940ffffff     jmp sym..plt
;-- imp.getpwuid:
0x000019c0      ff2552c42000   jmp qword [reloc.getpwuid]              ; [0x20de18:8]=0x19c6
0x000019c6      680b000000     push 0xb
0x000019cb      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000019d0      ff254ac42000   jmp qword [reloc.bindtextdomain]        ; [0x20de20:8]=0x19d6
0x000019d6      680c000000     push 0xc
0x000019db      e920ffffff     jmp sym..plt
;-- imp.stpcpy:
0x000019e0      ff2542c42000   jmp qword [reloc.stpcpy]                ; [0x20de28:8]=0x19e6
0x000019e6      680d000000     push 0xd
0x000019eb      e910ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000019f0      ff253ac42000   jmp qword [reloc.dcgettext]             ; [0x20de30:8]=0x19f6
0x000019f6      680e000000     push 0xe
0x000019fb      e900ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001a00      ff2532c42000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20de38:8]=0x1a06
0x00001a06      680f000000     push 0xf
0x00001a0b      e9f0feffff     jmp sym..plt
;-- imp.strlen:
0x00001a10      ff252ac42000   jmp qword [reloc.strlen]                ; [0x20de40:8]=0x1a16
0x00001a16      6810000000     push 0x10
0x00001a1b      e9e0feffff     jmp sym..plt
;-- imp.__lxstat:
0x00001a20      ff2522c42000   jmp qword [reloc.__lxstat]              ; [0x20de48:8]=0x1a26 ; "&\x1a"
0x00001a26      6811000000     push 0x11
0x00001a2b      e9d0feffff     jmp sym..plt
;-- imp.openat:
0x00001a30      ff251ac42000   jmp qword [reloc.openat]                ; [0x20de50:8]=0x1a36 ; "6\x1a"
0x00001a36      6812000000     push 0x12
0x00001a3b      e9c0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001a40      ff2512c42000   jmp qword [reloc.__stack_chk_fail]      ; [0x20de58:8]=0x1a46 ; "F\x1a"
0x00001a46      6813000000     push 0x13
0x00001a4b      e9b0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001a50      ff250ac42000   jmp qword [reloc.getopt_long]           ; [0x20de60:8]=0x1a56 ; "V\x1a"
0x00001a56      6814000000     push 0x14
0x00001a5b      e9a0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001a60      ff2502c42000   jmp qword [reloc.mbrtowc]               ; [0x20de68:8]=0x1a66 ; "f\x1a"
0x00001a66      6815000000     push 0x15
0x00001a6b      e990feffff     jmp sym..plt
;-- imp.strchr:
0x00001a70      ff25fac32000   jmp qword [reloc.strchr]                ; [0x20de70:8]=0x1a76 ; "v\x1a"
0x00001a76      6816000000     push 0x16
0x00001a7b      e980feffff     jmp sym..plt
;-- imp.getgrgid:
0x00001a80      ff25f2c32000   jmp qword [reloc.getgrgid]              ; [0x20de78:8]=0x1a86
0x00001a86      6817000000     push 0x17
0x00001a8b      e970feffff     jmp sym..plt
;-- imp.__fxstatat:
0x00001a90      ff25eac32000   jmp qword [reloc.__fxstatat]            ; [0x20de80:8]=0x1a96
0x00001a96      6818000000     push 0x18
0x00001a9b      e960feffff     jmp sym..plt
;-- imp.strrchr:
0x00001aa0      ff25e2c32000   jmp qword [reloc.strrchr]               ; [0x20de88:8]=0x1aa6
0x00001aa6      6819000000     push 0x19
0x00001aab      e950feffff     jmp sym..plt
;-- imp.lseek:
0x00001ab0      ff25dac32000   jmp qword [reloc.lseek]                 ; [0x20de90:8]=0x1ab6
0x00001ab6      681a000000     push 0x1a
0x00001abb      e940feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001ac0      ff25d2c32000   jmp qword [reloc.__assert_fail]         ; [0x20de98:8]=0x1ac6
0x00001ac6      681b000000     push 0x1b
0x00001acb      e930feffff     jmp sym..plt
;-- imp.memset:
0x00001ad0      ff25cac32000   jmp qword [reloc.memset]                ; [0x20dea0:8]=0x1ad6
0x00001ad6      681c000000     push 0x1c
0x00001adb      e920feffff     jmp sym..plt
;-- imp.close:
0x00001ae0      ff25c2c32000   jmp qword [reloc.close]                 ; [0x20dea8:8]=0x1ae6
0x00001ae6      681d000000     push 0x1d
0x00001aeb      e910feffff     jmp sym..plt
;-- imp.__openat_2:
0x00001af0      ff25bac32000   jmp qword [reloc.__openat_2]            ; [0x20deb0:8]=0x1af6
0x00001af6      681e000000     push 0x1e
0x00001afb      e900feffff     jmp sym..plt
;-- imp.closedir:
0x00001b00      ff25b2c32000   jmp qword [reloc.closedir]              ; [0x20deb8:8]=0x1b06
0x00001b06      681f000000     push 0x1f
0x00001b0b      e9f0fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001b10      ff25aac32000   jmp qword [reloc.memcmp]                ; [0x20dec0:8]=0x1b16
0x00001b16      6820000000     push 0x20                               ; "@"
0x00001b1b      e9e0fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001b20      ff25a2c32000   jmp qword [reloc.fputs_unlocked]        ; [0x20dec8:8]=0x1b26 ; "&\x1b"
0x00001b26      6821000000     push 0x21                               ; '!'
0x00001b2b      e9d0fdffff     jmp sym..plt
;-- imp.calloc:
0x00001b30      ff259ac32000   jmp qword [reloc.calloc]                ; [0x20ded0:8]=0x1b36 ; "6\x1b"
0x00001b36      6822000000     push 0x22                               ; '"'
0x00001b3b      e9c0fdffff     jmp sym..plt
;-- imp.dirfd:
0x00001b40      ff2592c32000   jmp qword [reloc.dirfd]                 ; [0x20ded8:8]=0x1b46 ; "F\x1b"
0x00001b46      6823000000     push 0x23                               ; '#'
0x00001b4b      e9b0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001b50      ff258ac32000   jmp qword [reloc.memcpy]                ; [0x20dee0:8]=0x1b56 ; "V\x1b"
0x00001b56      6824000000     push 0x24                               ; '$'
0x00001b5b      e9a0fdffff     jmp sym..plt
;-- imp.getgrnam:
0x00001b60      ff2582c32000   jmp qword [reloc.getgrnam]              ; [0x20dee8:8]=0x1b66 ; "f\x1b"
0x00001b66      6825000000     push 0x25                               ; '%'
0x00001b6b      e990fdffff     jmp sym..plt
;-- imp.fileno:
0x00001b70      ff257ac32000   jmp qword [reloc.fileno]                ; [0x20def0:8]=0x1b76 ; "v\x1b"
0x00001b76      6826000000     push 0x26                               ; '&'
0x00001b7b      e980fdffff     jmp sym..plt
;-- imp.__xstat:
0x00001b80      ff2572c32000   jmp qword [reloc.__xstat]               ; [0x20def8:8]=0x1b86
0x00001b86      6827000000     push 0x27                               ; '''
0x00001b8b      e970fdffff     jmp sym..plt
;-- imp.readdir:
0x00001b90      ff256ac32000   jmp qword [reloc.readdir]               ; [0x20df00:8]=0x1b96
0x00001b96      6828000000     push 0x28                               ; '('
0x00001b9b      e960fdffff     jmp sym..plt
;-- imp.malloc:
0x00001ba0      ff2562c32000   jmp qword [reloc.malloc]                ; [0x20df08:8]=0x1ba6
0x00001ba6      6829000000     push 0x29                               ; ')'
0x00001bab      e950fdffff     jmp sym..plt
;-- imp.fflush:
0x00001bb0      ff255ac32000   jmp qword [reloc.fflush]                ; [0x20df10:8]=0x1bb6
0x00001bb6      682a000000     push 0x2a                               ; '*'
0x00001bbb      e940fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001bc0      ff2552c32000   jmp qword [reloc.nl_langinfo]           ; [0x20df18:8]=0x1bc6
0x00001bc6      682b000000     push 0x2b                               ; '+'
0x00001bcb      e930fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001bd0      ff254ac32000   jmp qword [reloc.__fxstat]              ; [0x20df20:8]=0x1bd6
0x00001bd6      682c000000     push 0x2c                               ; ','
0x00001bdb      e920fdffff     jmp sym..plt
;-- imp.__freading:
0x00001be0      ff2542c32000   jmp qword [reloc.__freading]            ; [0x20df28:8]=0x1be6
0x00001be6      682d000000     push 0x2d                               ; '-'
0x00001beb      e910fdffff     jmp sym..plt
;-- imp.fchdir:
0x00001bf0      ff253ac32000   jmp qword [reloc.fchdir]                ; [0x20df30:8]=0x1bf6
0x00001bf6      682e000000     push 0x2e                               ; '.'
0x00001bfb      e900fdffff     jmp sym..plt
;-- imp.realloc:
0x00001c00      ff2532c32000   jmp qword [reloc.realloc]               ; [0x20df38:8]=0x1c06
0x00001c06      682f000000     push 0x2f                               ; '/'
0x00001c0b      e9f0fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001c10      ff252ac32000   jmp qword [reloc.setlocale]             ; [0x20df40:8]=0x1c16
0x00001c16      6830000000     push 0x30                               ; '0'
0x00001c1b      e9e0fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001c20      ff2522c32000   jmp qword [reloc.__printf_chk]          ; [0x20df48:8]=0x1c26 ; "&\x1c"
0x00001c26      6831000000     push 0x31                               ; '1'
0x00001c2b      e9d0fcffff     jmp sym..plt
;-- imp.memmove:
0x00001c30      ff251ac32000   jmp qword [reloc.memmove]               ; [0x20df50:8]=0x1c36 ; "6\x1c"
0x00001c36      6832000000     push 0x32                               ; '2'
0x00001c3b      e9c0fcffff     jmp sym..plt
;-- imp.error:
0x00001c40      ff2512c32000   jmp qword [reloc.error]                 ; [0x20df58:8]=0x1c46 ; "F\x1c"
0x00001c46      6833000000     push 0x33                               ; '3'
0x00001c4b      e9b0fcffff     jmp sym..plt
;-- imp.open:
0x00001c50      ff250ac32000   jmp qword [reloc.open]                  ; [0x20df60:8]=0x1c56 ; "V\x1c"
0x00001c56      6834000000     push 0x34                               ; '4'
0x00001c5b      e9a0fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001c60      ff2502c32000   jmp qword [reloc.fseeko]                ; [0x20df68:8]=0x1c66 ; "f\x1c"
0x00001c66      6835000000     push 0x35                               ; '5'
0x00001c6b      e990fcffff     jmp sym..plt
;-- imp.fchown:
0x00001c70      ff25fac22000   jmp qword [reloc.fchown]                ; [0x20df70:8]=0x1c76 ; "v\x1c"
0x00001c76      6836000000     push 0x36                               ; '6'
0x00001c7b      e980fcffff     jmp sym..plt
;-- imp.fdopendir:
0x00001c80      ff25f2c22000   jmp qword [reloc.fdopendir]             ; [0x20df78:8]=0x1c86
0x00001c86      6837000000     push 0x37                               ; '7'
0x00001c8b      e970fcffff     jmp sym..plt
;-- imp.strtoul:
0x00001c90      ff25eac22000   jmp qword [reloc.strtoul]               ; [0x20df80:8]=0x1c96
0x00001c96      6838000000     push 0x38                               ; '8'
0x00001c9b      e960fcffff     jmp sym..plt
;-- imp.fstatfs:
0x00001ca0      ff25e2c22000   jmp qword [reloc.fstatfs]               ; [0x20df88:8]=0x1ca6
0x00001ca6      6839000000     push 0x39                               ; '9'
0x00001cab      e950fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001cb0      ff25dac22000   jmp qword [reloc.__cxa_atexit]          ; [0x20df90:8]=0x1cb6
0x00001cb6      683a000000     push 0x3a                               ; ':'
0x00001cbb      e940fcffff     jmp sym..plt
;-- imp.fchownat:
0x00001cc0      ff25d2c22000   jmp qword [reloc.fchownat]              ; [0x20df98:8]=0x1cc6
0x00001cc6      683b000000     push 0x3b                               ; ';'
0x00001ccb      e930fcffff     jmp sym..plt
;-- imp.exit:
0x00001cd0      ff25cac22000   jmp qword [reloc.exit]                  ; [0x20dfa0:8]=0x1cd6
0x00001cd6      683c000000     push 0x3c                               ; '<'
0x00001cdb      e920fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001ce0      ff25c2c22000   jmp qword [reloc.fwrite]                ; [0x20dfa8:8]=0x1ce6
0x00001ce6      683d000000     push 0x3d                               ; '='
0x00001ceb      e910fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001cf0      ff25bac22000   jmp qword [reloc.__fprintf_chk]         ; [0x20dfb0:8]=0x1cf6
0x00001cf6      683e000000     push 0x3e                               ; '>'
0x00001cfb      e900fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001d00      ff25b2c22000   jmp qword [reloc.mbsinit]               ; [0x20dfb8:8]=0x1d06
0x00001d06      683f000000     push 0x3f                               ; '?'
0x00001d0b      e9f0fbffff     jmp sym..plt
;-- imp.iswprint:
0x00001d10      ff25aac22000   jmp qword [reloc.iswprint]              ; [0x20dfc0:8]=0x1d16
0x00001d16      6840000000     push 0x40                               ; segment.PHDR
0x00001d1b      e9e0fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001d20      ff25a2c22000   jmp qword [reloc.__ctype_b_loc]         ; [0x20dfc8:8]=0x1d26 ; "&\x1d"
0x00001d26      6841000000     push 0x41                               ; 'A'
0x00001d2b      e9d0fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001d30      .qword 0x90660020c29a25ff                              ; [13] -r-x section size 16 named .plt.got
0x00001d38      .qword 0x90660020c2ba25ff
;-- main:
;-- section..text:
;-- .text:
0x00001d40      4157           push r15                                ; [14] -r-x section size 34510 named .text
0x00001d42      4156           push r14
0x00001d44      41bf01000000   mov r15d, 1
0x00001d4a      4155           push r13
0x00001d4c      4154           push r12
0x00001d4e      41bdffffffff   mov r13d, 0xffffffff                    ; -1
0x00001d54      55             push rbp
0x00001d55      53             push rbx
0x00001d56      4863ef         movsxd rbp, edi
0x00001d59      4889f3         mov rbx, rsi
0x00001d5c      41bc10000000   mov r12d, 0x10
0x00001d62      4531f6         xor r14d, r14d
0x00001d65      4881ecf80000.  sub rsp, 0xf8
0x00001d6c      488b3e         mov rdi, qword [rsi]
0x00001d6f      64488b042528.  mov rax, qword fs:[0x28]
0x00001d78      48898424e800.  mov qword [rsp + 0xe8], rax
0x00001d80      31c0           xor eax, eax
0x00001d82      e8a91b0000     call sym.set_program_name
0x00001d87      488d35b39900.  lea rsi, [0x0000b741]
0x00001d8e      bf06000000     mov edi, 6
0x00001d93      e878feffff     call sym.imp.setlocale
0x00001d98      488d352e8700.  lea rsi, str.usr_local_share_locale     ; 0xa4cd ; "/usr/local/share/locale"
0x00001d9f      488d3dfe8600.  lea rdi, [0x0000a4a4]                   ; "coreutils"
0x00001da6      e825fcffff     call sym.imp.bindtextdomain
0x00001dab      488d3df28600.  lea rdi, [0x0000a4a4]                   ; "coreutils"
0x00001db2      e8e9fbffff     call sym.imp.textdomain
0x00001db7      488d3d721a00.  lea rdi, sym.close_stdout               ; 0x3830 ; "USH\x83\xec\bH\x8b=K\xa8 "
0x00001dbe      e83d860000     call sym.atexit
0x00001dc3      488d442420     lea rax, [rsp + 0x20]
0x00001dc8      4889c7         mov rdi, rax
0x00001dcb      4889442408     mov qword [rsp + 8], rax
0x00001dd0      e87b0a0000     call sym.chopt_init
0x00001dd5      0f1f00         nop dword [rax]
0x00001dd8      488d0de1bb20.  lea rcx, obj.long_options               ; 0x20d9c0 ; "F\xa5"
0x00001ddf      488d151c8700.  lea rdx, str.HLPRcfhv                   ; 0xa502 ; "HLPRcfhv"
0x00001de6      4531c0         xor r8d, r8d
0x00001de9      4889de         mov rsi, rbx
0x00001dec      89ef           mov edi, ebp
0x00001dee      e85dfcffff     call sym.imp.getopt_long
0x00001df3      83f8ff         cmp eax, 0xffffffff
0x00001df6      0f844d010000   je 0x1f49
0x00001dfc      83f863         cmp eax, 0x63
0x00001dff      0f8424010000   je 0x1f29
0x00001e05      7e39           jle 0x1e40
0x00001e07      3d80000000     cmp eax, 0x80
0x00001e0c      0f84ec000000   je 0x1efe
0x00001e12      7f5c           jg 0x1e70
0x00001e14      83f868         cmp eax, 0x68
0x00001e17      0f84f9000000   je 0x1f16
0x00001e1d      83f876         cmp eax, 0x76
0x00001e20      0f84e3000000   je 0x1f09
0x00001e26      83f866         cmp eax, 0x66
0x00001e29      740a           je 0x1e35
0x00001e2b      bf01000000     mov edi, 1
0x00001e30      e81b050000     call sym.usage
0x00001e35      44887c2431     mov byte [rsp + 0x31], r15b
0x00001e3a      eb9c           jmp 0x1dd8
0x00001e3c      0f1f4000       nop dword [rax]
0x00001e40      83f848         cmp eax, 0x48
0x00001e43      0f84d5000000   je 0x1f1e
0x00001e49      7e55           jle 0x1ea0
0x00001e4b      83f850         cmp eax, 0x50
0x00001e4e      0f8495000000   je 0x1ee9
0x00001e54      83f852         cmp eax, 0x52
0x00001e57      0f8497000000   je 0x1ef4
0x00001e5d      83f84c         cmp eax, 0x4c
0x00001e60      75c9           jne 0x1e2b
0x00001e62      41bc02000000   mov r12d, 2
0x00001e68      e96bffffff     jmp 0x1dd8
0x00001e6d      0f1f00         nop dword [rax]
0x00001e70      3d82000000     cmp eax, 0x82
0x00001e75      0f84c3000000   je 0x1f3e
0x00001e7b      0f8cb5000000   jl 0x1f36
0x00001e81      3d83000000     cmp eax, 0x83
0x00001e86      75a3           jne 0x1e2b
0x00001e88      488b0509c220.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e098:8]=0
0x00001e8f      4889054ac220.  mov qword [obj.reference_file], rax     ; [0x20e0e0:8]=0
0x00001e96      e93dffffff     jmp 0x1dd8
0x00001e9b      0f1f440000     nop dword [rax + rax]
0x00001ea0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001ea5      0f85b2020000   jne 0x215d
0x00001eab      4883ec08       sub rsp, 8
0x00001eaf      488b3dd2c120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00001eb6      488b0d53c120.  mov rcx, qword [obj.Version]            ; [0x20e010:8]=0xb1b4 str.8.31
0x00001ebd      6a00           push 0
0x00001ebf      4c8d0d1f8600.  lea r9, str.Jim_Meyering                ; 0xa4e5 ; "Jim Meyering"
0x00001ec6      4c8d05258600.  lea r8, str.David_MacKenzie             ; 0xa4f2 ; "David MacKenzie"
0x00001ecd      488d15cc8500.  lea rdx, str.GNU_coreutils              ; 0xa4a0 ; "GNU coreutils"
0x00001ed4      488d35498500.  lea rsi, str.chgrp                      ; 0xa424 ; "chgrp"
0x00001edb      31c0           xor eax, eax
0x00001edd      e8be3c0000     call sym.version_etc
0x00001ee2      31ff           xor edi, edi
0x00001ee4      e8e7fdffff     call sym.imp.exit
0x00001ee9      41bc10000000   mov r12d, 0x10
0x00001eef      e9e4feffff     jmp 0x1dd8
0x00001ef4      44887c2424     mov byte [rsp + 0x24], r15b
0x00001ef9      e9dafeffff     jmp 0x1dd8
0x00001efe      41bd01000000   mov r13d, 1
0x00001f04      e9cffeffff     jmp 0x1dd8
0x00001f09      c74424200000.  mov dword [rsp + 0x20], 0
0x00001f11      e9c2feffff     jmp 0x1dd8
0x00001f16      4531ed         xor r13d, r13d
0x00001f19      e9bafeffff     jmp 0x1dd8
0x00001f1e      41bc11000000   mov r12d, 0x11
0x00001f24      e9affeffff     jmp 0x1dd8
0x00001f29      c74424200100.  mov dword [rsp + 0x20], 1
0x00001f31      e9a2feffff     jmp 0x1dd8
0x00001f36      4531f6         xor r14d, r14d
0x00001f39      e99afeffff     jmp 0x1dd8
0x00001f3e      41be01000000   mov r14d, 1
0x00001f44      e98ffeffff     jmp 0x1dd8
0x00001f49      807c242400     cmp byte [rsp + 0x24], 0
0x00001f4e      0f85c9000000   jne 0x201d
0x00001f54      41bc10000000   mov r12d, 0x10
0x00001f5a      4863052fc120.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e090:4]=0
0x00001f61      4585ed         test r13d, r13d
0x00001f64      4c8b2d75c120.  mov r13, qword [obj.reference_file]     ; [0x20e0e0:8]=0
0x00001f6b      89ea           mov edx, ebp
0x00001f6d      0f95442430     setne byte [rsp + 0x30]
0x00001f72      29c2           sub edx, eax
0x00001f74      4d85ed         test r13, r13
0x00001f77      0f84bc000000   je 0x2039
0x00001f7d      85d2           test edx, edx
0x00001f7f      0f8eea010000   jle 0x216f
0x00001f85      488d542450     lea rdx, [rsp + 0x50]
0x00001f8a      4c89ee         mov rsi, r13
0x00001f8d      bf01000000     mov edi, 1
0x00001f92      e8e9fbffff     call sym.imp.__xstat
0x00001f97      85c0           test eax, eax
0x00001f99      0f8559020000   jne 0x21f8
0x00001f9f      8b6c2470       mov ebp, dword [rsp + 0x70]
0x00001fa3      89ef           mov edi, ebp
0x00001fa5      e8f6080000     call sym.gid_to_name
0x00001faa      4889442440     mov qword [rsp + 0x40], rax
0x00001faf      807c242400     cmp byte [rsp + 0x24], 0
0x00001fb4      7409           je 0x1fbf
0x00001fb6      4584f6         test r14b, r14b
0x00001fb9      0f85c3000000   jne 0x2082
0x00001fbf      486305cac020.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e090:4]=0
0x00001fc6      4883ec08       sub rsp, 8
0x00001fca      4183c9ff       or r9d, 0xffffffff                      ; -1
0x00001fce      ff742410       push qword [rsp + 0x10]
0x00001fd2      4489e6         mov esi, r12d
0x00001fd5      89e9           mov ecx, ebp
0x00001fd7      81ce00040000   or esi, 0x400
0x00001fdd      4489ca         mov edx, r9d
0x00001fe0      4589c8         mov r8d, r9d
0x00001fe3      488d3cc3       lea rdi, [rbx + rax*8]
0x00001fe7      e804170000     call sym.chown_files
0x00001fec      5a             pop rdx
0x00001fed      59             pop rcx
0x00001fee      83f001         xor eax, 1
0x00001ff1      0fb6c0         movzx eax, al
0x00001ff4      488b8c24e800.  mov rcx, qword [rsp + 0xe8]
0x00001ffc      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002005      0f85e8010000   jne 0x21f3
0x0000200b      4881c4f80000.  add rsp, 0xf8
0x00002012      5b             pop rbx
0x00002013      5d             pop rbp
0x00002014      415c           pop r12
0x00002016      415d           pop r13
0x00002018      415e           pop r14
0x0000201a      415f           pop r15
0x0000201c      c3             ret
0x0000201d      4183fc10       cmp r12d, 0x10
0x00002021      0f8533ffffff   jne 0x1f5a
0x00002027      4183ed01       sub r13d, 1
0x0000202b      0f8468010000   je 0x2199
0x00002031      4531ed         xor r13d, r13d
0x00002034      e921ffffff     jmp 0x1f5a
0x00002039      83ea01         sub edx, 1
0x0000203c      0f8e2d010000   jle 0x216f
0x00002042      4c8b3cc3       mov r15, qword [rbx + rax*8]
0x00002046      8d5001         lea edx, [rax + 1]
0x00002049      891541c02000   mov dword [obj.optind], edx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e090:4]=0
0x0000204f      41803f00       cmp byte [r15], 0
0x00002053      0f858e000000   jne 0x20e7
0x00002059      4c896c2440     mov qword [rsp + 0x40], r13
0x0000205e      41803f00       cmp byte [r15], 0
0x00002062      747b           je 0x20df
0x00002064      4c89ff         mov rdi, r15
0x00002067      e8f4faffff     call sym.imp.getgrnam
0x0000206c      4885c0         test rax, rax
0x0000206f      0f8482000000   je 0x20f7
0x00002075      8b6810         mov ebp, dword [rax + 0x10]
0x00002078      e893f8ffff     call sym.imp.endgrent
0x0000207d      e92dffffff     jmp 0x1faf
0x00002082      488d3d47c020.  lea rdi, obj.dev_ino_buf.7117           ; 0x20e0d0
0x00002089      e8d2350000     call sym.get_root_dev_ino
0x0000208e      4885c0         test rax, rax
0x00002091      4889442428     mov qword [rsp + 0x28], rax
0x00002096      0f8523ffffff   jne 0x1fbf
0x0000209c      488d356b9100.  lea rsi, [0x0000b20e]                   ; "/"
0x000020a3      bf04000000     mov edi, 4
0x000020a8      e8c3320000     call sym.quotearg_style
0x000020ad      488d35e48c00.  lea rsi, str.failed_to_get_attributes_of__s ; 0xad98 ; "failed to get attributes of %s"
0x000020b4      ba05000000     mov edx, 5
0x000020b9      31ff           xor edi, edi
0x000020bb      4889c5         mov rbp, rax
0x000020be      e82df9ffff     call sym.imp.dcgettext
0x000020c3      4889c3         mov rbx, rax
0x000020c6      e865f8ffff     call sym.imp.__errno_location
0x000020cb      8b30           mov esi, dword [rax]
0x000020cd      4889e9         mov rcx, rbp
0x000020d0      4889da         mov rdx, rbx
0x000020d3      bf01000000     mov edi, 1
0x000020d8      31c0           xor eax, eax
0x000020da      e861fbffff     call sym.imp.error
0x000020df      83cdff         or ebp, 0xffffffff                      ; -1
0x000020e2      e9c8feffff     jmp 0x1faf
0x000020e7      4c89ff         mov rdi, r15
0x000020ea      e8413e0000     call sym.xstrdup
0x000020ef      4989c5         mov r13, rax
0x000020f2      e962ffffff     jmp 0x2059
0x000020f7      488d4c2418     lea rcx, [rsp + 0x18]
0x000020fc      4c8d053e9600.  lea r8, [0x0000b741]
0x00002103      31f6           xor esi, esi
0x00002105      ba0a000000     mov edx, 0xa
0x0000210a      4c89ff         mov rdi, r15
0x0000210d      e8fe3e0000     call sym.xstrtoul
0x00002112      85c0           test eax, eax
0x00002114      7515           jne 0x212b
0x00002116      488b442418     mov rax, qword [rsp + 0x18]
0x0000211b      baffffffff     mov edx, 0xffffffff                     ; -1
0x00002120      4839d0         cmp rax, rdx
0x00002123      89c5           mov ebp, eax
0x00002125      0f864dffffff   jbe 0x2078
0x0000212b      4c89ff         mov rdi, r15
0x0000212e      e80d350000     call sym.quote
0x00002133      488d35fa8300.  lea rsi, str.invalid_group:__s          ; 0xa534 ; "invalid group: %s"
0x0000213a      4889c3         mov rbx, rax
0x0000213d      ba05000000     mov edx, 5
0x00002142      31ff           xor edi, edi
0x00002144      e8a7f8ffff     call sym.imp.dcgettext
0x00002149      4889d9         mov rcx, rbx
0x0000214c      4889c2         mov rdx, rax
0x0000214f      31f6           xor esi, esi
0x00002151      bf01000000     mov edi, 1
0x00002156      31c0           xor eax, eax
0x00002158      e8e3faffff     call sym.imp.error
0x0000215d      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00002162      0f85c3fcffff   jne 0x1e2b
0x00002168      31ff           xor edi, edi
0x0000216a      e8e1010000     call sym.usage
0x0000216f      39e8           cmp eax, ebp
0x00002171      7c4a           jl 0x21bd
0x00002173      488d35918300.  lea rsi, str.missing_operand            ; 0xa50b ; "missing operand"
0x0000217a      31ff           xor edi, edi
0x0000217c      ba05000000     mov edx, 5
0x00002181      e86af8ffff     call sym.imp.dcgettext
0x00002186      31f6           xor esi, esi
0x00002188      4889c2         mov rdx, rax
0x0000218b      31ff           xor edi, edi
0x0000218d      31c0           xor eax, eax
0x0000218f      e8acfaffff     call sym.imp.error
0x00002194      e992fcffff     jmp 0x1e2b
0x00002199      488d35c88b00.  lea rsi, str.R___dereference_requires_either__H_or__L ; 0xad68 ; "-R --dereference requires either -H or -L"
0x000021a0      ba05000000     mov edx, 5
0x000021a5      31ff           xor edi, edi
0x000021a7      e844f8ffff     call sym.imp.dcgettext
0x000021ac      31f6           xor esi, esi
0x000021ae      4889c2         mov rdx, rax
0x000021b1      bf01000000     mov edi, 1
0x000021b6      31c0           xor eax, eax
0x000021b8      e883faffff     call sym.imp.error
0x000021bd      488b7cebf8     mov rdi, qword [rbx + rbp*8 - 8]
0x000021c2      e879340000     call sym.quote
0x000021c7      488d354d8300.  lea rsi, str.missing_operand_after__s   ; 0xa51b ; "missing operand after %s"
0x000021ce      4889c3         mov rbx, rax
0x000021d1      31ff           xor edi, edi
0x000021d3      ba05000000     mov edx, 5
0x000021d8      e813f8ffff     call sym.imp.dcgettext
0x000021dd      4889d9         mov rcx, rbx
0x000021e0      4889c2         mov rdx, rax
0x000021e3      31f6           xor esi, esi
0x000021e5      31ff           xor edi, edi
0x000021e7      31c0           xor eax, eax
0x000021e9      e852faffff     call sym.imp.error
0x000021ee      e938fcffff     jmp 0x1e2b
0x000021f3      e848f8ffff     call sym.imp.__stack_chk_fail
0x000021f8      4c89ee         mov rsi, r13
0x000021fb      bf04000000     mov edi, 4
0x00002200      e86b310000     call sym.quotearg_style
0x00002205      488d358c8b00.  lea rsi, str.failed_to_get_attributes_of__s ; 0xad98 ; "failed to get attributes of %s"
0x0000220c      ba05000000     mov edx, 5
0x00002211      31ff           xor edi, edi
0x00002213      4889c5         mov rbp, rax
0x00002216      e8d5f7ffff     call sym.imp.dcgettext
0x0000221b      4889c3         mov rbx, rax
0x0000221e      e80df7ffff     call sym.imp.__errno_location
0x00002223      8b30           mov esi, dword [rax]
0x00002225      4889e9         mov rcx, rbp
0x00002228      4889da         mov rdx, rbx
0x0000222b      bf01000000     mov edi, 1
0x00002230      31c0           xor eax, eax
0x00002232      e809faffff     call sym.imp.error
0x00002237      660f1f840000.  nop word [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002240      31ed           xor ebp, ebp
0x00002242      4989d1         mov r9, rdx
0x00002245      5e             pop rsi
0x00002246      4889e2         mov rdx, rsp
0x00002249      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000224d      50             push rax
0x0000224e      54             push rsp
0x0000224f      4c8d059a8100.  lea r8, sym.__libc_csu_fini             ; 0xa3f0
0x00002256      488d0d238100.  lea rcx, sym.__libc_csu_init            ; 0xa380 ; "AWAVI\x89\xd7AUATL\x8d%\x1e6 "
0x0000225d      488d3ddcfaff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1d40 ; "AWAVA\xbf\x01"
0x00002264      ff1576bd2000   call qword [reloc.__libc_start_main]    ; [0x20dfe0:8]=0
0x0000226a      f4             hlt
0x0000226b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002270      488d3d09be20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e080
0x00002277      55             push rbp
0x00002278      488d0501be20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e080
0x0000227f      4839f8         cmp rax, rdi
0x00002282      4889e5         mov rbp, rsp
0x00002285      7419           je 0x22a0
0x00002287      488b054abd20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20dfd8:8]=0
0x0000228e      4885c0         test rax, rax
0x00002291      740d           je 0x22a0
0x00002293      5d             pop rbp
0x00002294      ffe0           jmp rax
0x00002296      662e0f1f8400.  nop word cs:[rax + rax]
0x000022a0      5d             pop rbp
0x000022a1      c3             ret
0x000022a2      0f1f4000       nop dword [rax]
0x000022a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000022b0      488d3dc9bd20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e080
0x000022b7      488d35c2bd20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e080
0x000022be      55             push rbp
0x000022bf      4829fe         sub rsi, rdi
0x000022c2      4889e5         mov rbp, rsp
0x000022c5      48c1fe03       sar rsi, 3
0x000022c9      4889f0         mov rax, rsi
0x000022cc      48c1e83f       shr rax, 0x3f
0x000022d0      4801c6         add rsi, rax
0x000022d3      48d1fe         sar rsi, 1
0x000022d6      7418           je 0x22f0
0x000022d8      488b0511bd20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20dff0:8]=0
0x000022df      4885c0         test rax, rax
0x000022e2      740c           je 0x22f0
0x000022e4      5d             pop rbp
0x000022e5      ffe0           jmp rax
0x000022e7      660f1f840000.  nop word [rax + rax]
0x000022f0      5d             pop rbp
0x000022f1      c3             ret
0x000022f2      0f1f4000       nop dword [rax]
0x000022f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002300      803dc1bd2000.  cmp byte [obj.completed.7697], 0        ; [0x20e0c8:1]=0
0x00002307      752f           jne 0x2338
0x00002309      48833de7bc20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20dff8:8]=0
0x00002311      55             push rbp
0x00002312      4889e5         mov rbp, rsp
0x00002315      740c           je 0x2323
0x00002317      488b3deabc20.  mov rdi, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x0000231e      e815faffff     call 0x1d38
0x00002323      e848ffffff     call sym.deregister_tm_clones
0x00002328      c60599bd2000.  mov byte [obj.completed.7697], 1        ; [0x20e0c8:1]=0
0x0000232f      5d             pop rbp
0x00002330      c3             ret
0x00002331      0f1f80000000.  nop dword [rax]
0x00002338      f3c3           ret
0x0000233a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002340      55             push rbp
0x00002341      4889e5         mov rbp, rsp
0x00002344      5d             pop rbp
0x00002345      e966ffffff     jmp sym.register_tm_clones
0x0000234a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00002350      4155           push r13
0x00002352      4154           push r12
0x00002354      ba05000000     mov edx, 5
0x00002359      55             push rbp
0x0000235a      53             push rbx
0x0000235b      89fd           mov ebp, edi
0x0000235d      4881ec880000.  sub rsp, 0x88
0x00002364      488b1d8dbd20.  mov rbx, qword [obj.program_name]       ; [0x20e0f8:8]=0
0x0000236b      64488b042528.  mov rax, qword fs:[0x28]
0x00002374      4889442478     mov qword [rsp + 0x78], rax
0x00002379      31c0           xor eax, eax
0x0000237b      85ff           test edi, edi
0x0000237d      742e           je 0x23ad
0x0000237f      488d351a8200.  lea rsi, str.Try___s___help__for_more_information. ; 0xa5a0 ; "Try '%s --help' for more information.\n"
0x00002386      31ff           xor edi, edi
0x00002388      e863f6ffff     call sym.imp.dcgettext
0x0000238d      488b3d2cbd20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x00002394      4889c2         mov rdx, rax
0x00002397      4889d9         mov rcx, rbx
0x0000239a      be01000000     mov esi, 1
0x0000239f      31c0           xor eax, eax
0x000023a1      e84af9ffff     call sym.imp.__fprintf_chk
0x000023a6      89ef           mov edi, ebp
0x000023a8      e823f9ffff     call sym.imp.exit
0x000023ad      488d35148200.  lea rsi, str.Usage:__s__OPTION_..._GROUP_FILE...____or:___s__OPTION_...___reference_RFILE_FILE... ; 0xa5c8 ; "Usage: %s [OPTION]... GROUP FILE...\n  or:  %s [OPTION]... --reference=RFILE FILE...\n"
0x000023b4      31ff           xor edi, edi
0x000023b6      e835f6ffff     call sym.imp.dcgettext
0x000023bb      4889d9         mov rcx, rbx
0x000023be      4889da         mov rdx, rbx
0x000023c1      4889c6         mov rsi, rax
0x000023c4      bf01000000     mov edi, 1
0x000023c9      31c0           xor eax, eax
0x000023cb      e850f8ffff     call sym.imp.__printf_chk
0x000023d0      488b1db1bc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x000023d7      488d35428200.  lea rsi, str.Change_the_group_of_each_FILE_to_GROUP.__With___reference__change_the_group_of_each_FILE_to_that_of_RFILE. ; 0xa620 ; "Change the group of each FILE to GROUP.\nWith --reference, change the group of each FILE to that of RFILE.\n\n"
0x000023de      ba05000000     mov edx, 5
0x000023e3      31ff           xor edi, edi
0x000023e5      e806f6ffff     call sym.imp.dcgettext
0x000023ea      4889de         mov rsi, rbx
0x000023ed      4889c7         mov rdi, rax
0x000023f0      e82bf7ffff     call sym.imp.fputs_unlocked
0x000023f5      488b1d8cbc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x000023fc      488d358d8200.  lea rsi, str.c____changes__________like_verbose_but_report_only_when_a_change_is_made_____f____silent____quiet__suppress_most_error_messages_____v____verbose__________output_a_diagnostic_for_every_file_processed ; 0xa690 ; "  -c, --changes          like verbose but report only when a change is made\n  -f, --silent, --quiet  suppress most error messages\n  -v, --verbose          output a diagnostic for every file processed\n"
0x00002403      ba05000000     mov edx, 5
0x00002408      31ff           xor edi, edi
0x0000240a      e8e1f5ffff     call sym.imp.dcgettext
0x0000240f      4889de         mov rsi, rbx
0x00002412      4889c7         mov rdi, rax
0x00002415      e806f7ffff     call sym.imp.fputs_unlocked
0x0000241a      488b1d67bc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002421      488d35388300.  lea rsi, str.dereference______affect_the_referent_of_each_symbolic_link__this_is___________________________the_default___rather_than_the_symbolic_link_itself_____h____no_dereference___affect_symbolic_links_instead_of_any_referenced_file ; 0xa760 ; "      --dereference      affect the referent of each symbolic link (this is\n                         the default), rather than the symbolic link itself\n  -h, --no-dereference   affect symbolic links instead of any referenced file\n"
0x00002428      ba05000000     mov edx, 5
0x0000242d      31ff           xor edi, edi
0x0000242f      e8bcf5ffff     call sym.imp.dcgettext
0x00002434      4889de         mov rsi, rbx
0x00002437      4889c7         mov rdi, rax
0x0000243a      e8e1f6ffff     call sym.imp.fputs_unlocked
0x0000243f      488b1d42bc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002446      488d35fb8300.  lea rsi, str.useful_only_on_systems_that_can_change_the___________________________ownership_of_a_symlink ; 0xa848 ; "                         (useful only on systems that can change the\n                         ownership of a symlink)\n"
0x0000244d      ba05000000     mov edx, 5
0x00002452      31ff           xor edi, edi
0x00002454      e897f5ffff     call sym.imp.dcgettext
0x00002459      4889de         mov rsi, rbx
0x0000245c      4889c7         mov rdi, rax
0x0000245f      e8bcf6ffff     call sym.imp.fputs_unlocked
0x00002464      488b1d1dbc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x0000246b      488d354e8400.  lea rsi, str.no_preserve_root__do_not_treat_____specially__the_default___________preserve_root____fail_to_operate_recursively_on ; 0xa8c0 ; "      --no-preserve-root  do not treat '/' specially (the default)\n      --preserve-root    fail to operate recursively on '/'\n"
0x00002472      ba05000000     mov edx, 5
0x00002477      31ff           xor edi, edi
0x00002479      e872f5ffff     call sym.imp.dcgettext
0x0000247e      4889de         mov rsi, rbx
0x00002481      4889c7         mov rdi, rax
0x00002484      e897f6ffff     call sym.imp.fputs_unlocked
0x00002489      488b1df8bb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002490      488d35a98400.  lea rsi, str.reference_RFILE__use_RFILE_s_group_rather_than_specifying_a___________________________GROUP_value ; 0xa940 ; "      --reference=RFILE  use RFILE's group rather than specifying a\n                         GROUP value\n"
0x00002497      ba05000000     mov edx, 5
0x0000249c      31ff           xor edi, edi
0x0000249e      e84df5ffff     call sym.imp.dcgettext
0x000024a3      4889de         mov rsi, rbx
0x000024a6      4889c7         mov rdi, rax
0x000024a9      e872f6ffff     call sym.imp.fputs_unlocked
0x000024ae      488b1dd3bb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x000024b5      488d35f48400.  lea rsi, str.R____recursive________operate_on_files_and_directories_recursively ; 0xa9b0 ; "  -R, --recursive        operate on files and directories recursively\n"
0x000024bc      ba05000000     mov edx, 5
0x000024c1      31ff           xor edi, edi
0x000024c3      e828f5ffff     call sym.imp.dcgettext
0x000024c8      4889de         mov rsi, rbx
0x000024cb      4889c7         mov rdi, rax
0x000024ce      e84df6ffff     call sym.imp.fputs_unlocked
0x000024d3      488b1daebb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x000024da      488d35178500.  lea rsi, str.The_following_options_modify_how_a_hierarchy_is_traversed_when_the__R__option_is_also_specified.__If_more_than_one_is_specified__only_the_final__one_takes_effect._______H_____________________if_a_command_line_argument_is_a_symbolic_link___________________________to_a_directory__traverse_it_____L_____________________traverse_every_symbolic_link_to_a_directory___________________________encountered_____P_____________________do_not_traverse_any_symbolic_links__default ; 0xa9f8 ; "\nThe following options modify how a hierarchy is traversed when the -R\noption is also specified.  If more than one is specified, only the final\none takes effect.\n\n  -H                     if a command line argument is a symbolic link\n                         to a directory, traverse it\n  -L                     traverse every symbolic link to a directory\n                         encountered\n  -P                     do not traverse any symbolic links (default)\n\n"
0x000024e1      ba05000000     mov edx, 5
0x000024e6      31ff           xor edi, edi
0x000024e8      e803f5ffff     call sym.imp.dcgettext
0x000024ed      4889de         mov rsi, rbx
0x000024f0      4889c7         mov rdi, rax
0x000024f3      e828f6ffff     call sym.imp.fputs_unlocked
0x000024f8      488b1d89bb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x000024ff      488d35ca8600.  lea rsi, str.help_____display_this_help_and_exit ; 0xabd0 ; "      --help     display this help and exit\n"
0x00002506      ba05000000     mov edx, 5
0x0000250b      31ff           xor edi, edi
0x0000250d      e8def4ffff     call sym.imp.dcgettext
0x00002512      4889de         mov rsi, rbx
0x00002515      4889c7         mov rdi, rax
0x00002518      e803f6ffff     call sym.imp.fputs_unlocked
0x0000251d      488b1d64bb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00002524      488d35d58600.  lea rsi, str.version__output_version_information_and_exit ; 0xac00 ; "      --version  output version information and exit\n"
0x0000252b      ba05000000     mov edx, 5
0x00002530      31ff           xor edi, edi
0x00002532      e8b9f4ffff     call sym.imp.dcgettext
0x00002537      4889de         mov rsi, rbx
0x0000253a      4889c7         mov rdi, rax
0x0000253d      e8def5ffff     call sym.imp.fputs_unlocked
0x00002542      488b1dafbb20.  mov rbx, qword [obj.program_name]       ; [0x20e0f8:8]=0
0x00002549      488d35e88600.  lea rsi, str.Examples:_____s_staff__u______Change_the_group_of__u_to__staff_._____s__hR_staff__u__Change_the_group_of__u_and_subfiles_to__staff_. ; 0xac38 ; "\nExamples:\n  %s staff /u      Change the group of /u to \"staff\".\n  %s -hR staff /u  Change the group of /u and subfiles to \"staff\".\n"
0x00002550      ba05000000     mov edx, 5
0x00002555      31ff           xor edi, edi
0x00002557      e894f4ffff     call sym.imp.dcgettext
0x0000255c      4889d9         mov rcx, rbx
0x0000255f      4889da         mov rdx, rbx
0x00002562      4889c6         mov rsi, rax
0x00002565      bf01000000     mov edi, 1
0x0000256a      31c0           xor eax, eax
0x0000256c      488d1db17e00.  lea rbx, str.chgrp                      ; 0xa424 ; "chgrp"
0x00002573      e8a8f6ffff     call sym.imp.__printf_chk
0x00002578      488d05ab7e00.  lea rax, [0x0000a42a]                   ; "["
0x0000257f      488d0de57e00.  lea rcx, str.sha256sum                  ; 0xa46b ; "sha256sum"
0x00002586      48c744246000.  mov qword [rsp + 0x60], 0
0x0000258f      48c744246800.  mov qword [rsp + 0x68], 0
0x00002598      4889e2         mov rdx, rsp
0x0000259b      48890424       mov qword [rsp], rax
0x0000259f      488d05867e00.  lea rax, str.test_invocation            ; 0xa42c ; "test invocation"
0x000025a6      48894c2430     mov qword [rsp + 0x30], rcx
0x000025ab      488d0dc37e00.  lea rcx, str.sha384sum                  ; 0xa475 ; "sha384sum"
0x000025b2      4889442408     mov qword [rsp + 8], rax
0x000025b7      488d05e67e00.  lea rax, [0x0000a4a4]                   ; "coreutils"
0x000025be      48894c2440     mov qword [rsp + 0x40], rcx
0x000025c3      488d0db57e00.  lea rcx, str.sha512sum                  ; 0xa47f ; "sha512sum"
0x000025ca      4889442410     mov qword [rsp + 0x10], rax
0x000025cf      488d05667e00.  lea rax, str.Multi_call_invocation      ; 0xa43c ; "Multi-call invocation"
0x000025d6      48894c2450     mov qword [rsp + 0x50], rcx
0x000025db      4889442418     mov qword [rsp + 0x18], rax
0x000025e0      488d056b7e00.  lea rax, str.sha224sum                  ; 0xa452 ; "sha224sum"
0x000025e7      4889442420     mov qword [rsp + 0x20], rax
0x000025ec      488d05697e00.  lea rax, str.sha2_utilities             ; 0xa45c ; "sha2 utilities"
0x000025f3      4889442428     mov qword [rsp + 0x28], rax
0x000025f8      4889442438     mov qword [rsp + 0x38], rax
0x000025fd      4889442448     mov qword [rsp + 0x48], rax
0x00002602      4889442458     mov qword [rsp + 0x58], rax
0x00002607      660f1f840000.  nop word [rax + rax]
0x00002610      4883c210       add rdx, 0x10
0x00002614      488b3a         mov rdi, qword [rdx]
0x00002617      4885ff         test rdi, rdi
0x0000261a      7413           je 0x262f
0x0000261c      b906000000     mov ecx, 6
0x00002621      4889de         mov rsi, rbx
0x00002624      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002626      0f97c0         seta al
0x00002629      1c00           sbb al, 0
0x0000262b      84c0           test al, al
0x0000262d      75e1           jne 0x2610
0x0000262f      4c8b6208       mov r12, qword [rdx + 8]
0x00002633      31ff           xor edi, edi
0x00002635      ba05000000     mov edx, 5
0x0000263a      488d35487e00.  lea rsi, str.s_online_help:___s         ; 0xa489 ; "\n%s online help: <%s>\n"
0x00002641      4d85e4         test r12, r12
0x00002644      0f84c1000000   je 0x270b
0x0000264a      e8a1f3ffff     call sym.imp.dcgettext
0x0000264f      488d0d6a8600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xacc0 ; "https://www.gnu.org/software/coreutils/"
0x00002656      488d15437e00.  lea rdx, str.GNU_coreutils              ; 0xa4a0 ; "GNU coreutils"
0x0000265d      4889c6         mov rsi, rax
0x00002660      bf01000000     mov edi, 1
0x00002665      31c0           xor eax, eax
0x00002667      e8b4f5ffff     call sym.imp.__printf_chk
0x0000266c      31f6           xor esi, esi
0x0000266e      bf05000000     mov edi, 5
0x00002673      e898f5ffff     call sym.imp.setlocale
0x00002678      4885c0         test rax, rax
0x0000267b      741c           je 0x2699
0x0000267d      488d352a7e00.  lea rsi, [0x0000a4ae]                   ; "en_"
0x00002684      ba03000000     mov edx, 3
0x00002689      4889c7         mov rdi, rax
0x0000268c      e8aff2ffff     call sym.imp.strncmp
0x00002691      85c0           test eax, eax
0x00002693      0f8507010000   jne 0x27a0
0x00002699      488d35127e00.  lea rsi, str.Full_documentation___s_s   ; 0xa4b2 ; "Full documentation <%s%s>\n"
0x000026a0      31ff           xor edi, edi
0x000026a2      ba05000000     mov edx, 5
0x000026a7      e844f3ffff     call sym.imp.dcgettext
0x000026ac      488d0d717d00.  lea rcx, str.chgrp                      ; 0xa424 ; "chgrp"
0x000026b3      488d15068600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xacc0 ; "https://www.gnu.org/software/coreutils/"
0x000026ba      4889c6         mov rsi, rax
0x000026bd      bf01000000     mov edi, 1
0x000026c2      31c0           xor eax, eax
0x000026c4      e857f5ffff     call sym.imp.__printf_chk
0x000026c9      4939dc         cmp r12, rbx
0x000026cc      488d0d737d00.  lea rcx, [0x0000a446]                   ; " invocation"
0x000026d3      488d1d679000.  lea rbx, [0x0000b741]
0x000026da      480f44d9       cmove rbx, rcx
0x000026de      488d354b8600.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xad30 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000026e5      31ff           xor edi, edi
0x000026e7      ba05000000     mov edx, 5
0x000026ec      e8fff2ffff     call sym.imp.dcgettext
0x000026f1      4889d9         mov rcx, rbx
0x000026f4      4889c6         mov rsi, rax
0x000026f7      4c89e2         mov rdx, r12
0x000026fa      bf01000000     mov edi, 1
0x000026ff      31c0           xor eax, eax
0x00002701      e81af5ffff     call sym.imp.__printf_chk
0x00002706      e99bfcffff     jmp 0x23a6
0x0000270b      e8e0f2ffff     call sym.imp.dcgettext
0x00002710      488d0da98500.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xacc0 ; "https://www.gnu.org/software/coreutils/"
0x00002717      488d15827d00.  lea rdx, str.GNU_coreutils              ; 0xa4a0 ; "GNU coreutils"
0x0000271e      4889c6         mov rsi, rax
0x00002721      bf01000000     mov edi, 1
0x00002726      31c0           xor eax, eax
0x00002728      e8f3f4ffff     call sym.imp.__printf_chk
0x0000272d      31f6           xor esi, esi
0x0000272f      bf05000000     mov edi, 5
0x00002734      e8d7f4ffff     call sym.imp.setlocale
0x00002739      4885c0         test rax, rax
0x0000273c      7418           je 0x2756
0x0000273e      488d35697d00.  lea rsi, [0x0000a4ae]                   ; "en_"
0x00002745      ba03000000     mov edx, 3
0x0000274a      4889c7         mov rdi, rax
0x0000274d      e8eef1ffff     call sym.imp.strncmp
0x00002752      85c0           test eax, eax
0x00002754      7543           jne 0x2799
0x00002756      488d35557d00.  lea rsi, str.Full_documentation___s_s   ; 0xa4b2 ; "Full documentation <%s%s>\n"
0x0000275d      ba05000000     mov edx, 5
0x00002762      31ff           xor edi, edi
0x00002764      4c8d25b97c00.  lea r12, str.chgrp                      ; 0xa424 ; "chgrp"
0x0000276b      488d1dd47c00.  lea rbx, [0x0000a446]                   ; " invocation"
0x00002772      e879f2ffff     call sym.imp.dcgettext
0x00002777      488d0da67c00.  lea rcx, str.chgrp                      ; 0xa424 ; "chgrp"
0x0000277e      488d153b8500.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xacc0 ; "https://www.gnu.org/software/coreutils/"
0x00002785      4889c6         mov rsi, rax
0x00002788      bf01000000     mov edi, 1
0x0000278d      31c0           xor eax, eax
0x0000278f      e88cf4ffff     call sym.imp.__printf_chk
0x00002794      e945ffffff     jmp 0x26de
0x00002799      4c8d25847c00.  lea r12, str.chgrp                      ; 0xa424 ; "chgrp"
0x000027a0      4c8b2de1b820.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x000027a7      488d353a8500.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xace8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000027ae      31ff           xor edi, edi
0x000027b0      ba05000000     mov edx, 5
0x000027b5      e836f2ffff     call sym.imp.dcgettext
0x000027ba      4c89ee         mov rsi, r13
0x000027bd      4889c7         mov rdi, rax
0x000027c0      e85bf3ffff     call sym.imp.fputs_unlocked
0x000027c5      e9cffeffff     jmp 0x2699
0x000027ca      660f1f440000   nop word [rax + rax]
;-- user_group_str:
0x000027d0      4885ff         test rdi, rdi
0x000027d3      4154           push r12
0x000027d5      55             push rbp
0x000027d6      53             push rbx
0x000027d7      744f           je 0x2828
0x000027d9      4885f6         test rsi, rsi
0x000027dc      7452           je 0x2830
0x000027de      4889f3         mov rbx, rsi
0x000027e1      4889fd         mov rbp, rdi
0x000027e4      e827f2ffff     call sym.imp.strlen
0x000027e9      4889df         mov rdi, rbx
0x000027ec      4989c4         mov r12, rax
0x000027ef      e81cf2ffff     call sym.imp.strlen
0x000027f4      498d7c0402     lea rdi, [r12 + rax + 2]
0x000027f9      e802350000     call sym.xmalloc
0x000027fe      4889ee         mov rsi, rbp
0x00002801      4889c7         mov rdi, rax
0x00002804      4989c4         mov r12, rax
0x00002807      e8d4f1ffff     call sym.imp.stpcpy
0x0000280c      488d7801       lea rdi, [rax + 1]
0x00002810      c6003a         mov byte [rax], 0x3a                    ; ':'
                                                                       ; [0x3a:1]=64
0x00002813      4889de         mov rsi, rbx
0x00002816      e845f1ffff     call sym.imp.strcpy
0x0000281b      4c89e0         mov rax, r12
0x0000281e      5b             pop rbx
0x0000281f      5d             pop rbp
0x00002820      415c           pop r12
0x00002822      c3             ret
0x00002823      0f1f440000     nop dword [rax + rax]
0x00002828      4885f6         test rsi, rsi
0x0000282b      7413           je 0x2840
0x0000282d      4889f7         mov rdi, rsi
0x00002830      5b             pop rbx
0x00002831      5d             pop rbp
0x00002832      415c           pop r12
0x00002834      e9f7360000     jmp sym.xstrdup
0x00002839      0f1f80000000.  nop dword [rax]
0x00002840      4531e4         xor r12d, r12d
0x00002843      ebd6           jmp 0x281b
0x00002845      90             nop
0x00002846      662e0f1f8400.  nop word cs:[rax + rax]
;-- chopt_init:
0x00002850      c70702000000   mov dword [rdi], 2
0x00002856      48c747080000.  mov qword [rdi + 8], 0
0x0000285e      c6471001       mov byte [rdi + 0x10], 1
0x00002862      c6470400       mov byte [rdi + 4], 0
0x00002866      c6471100       mov byte [rdi + 0x11], 0
0x0000286a      48c747180000.  mov qword [rdi + 0x18], 0
0x00002872      48c747200000.  mov qword [rdi + 0x20], 0
0x0000287a      c3             ret
0x0000287b      0f1f440000     nop dword [rax + rax]
;-- chopt_free:
0x00002880      53             push rbx
0x00002881      4889fb         mov rbx, rdi
0x00002884      488b7f18       mov rdi, qword [rdi + 0x18]
0x00002888      e8a3f4ffff     call sym..plt.got
0x0000288d      488b7b20       mov rdi, qword [rbx + 0x20]
0x00002891      5b             pop rbx
0x00002892      e999f4ffff     jmp sym..plt.got
0x00002897      660f1f840000.  nop word [rax + rax]
;-- gid_to_name:
0x000028a0      53             push rbx
0x000028a1      89fb           mov ebx, edi
0x000028a3      4883ec20       sub rsp, 0x20
0x000028a7      64488b042528.  mov rax, qword fs:[0x28]
0x000028b0      4889442418     mov qword [rsp + 0x18], rax
0x000028b5      31c0           xor eax, eax
0x000028b7      e8c4f1ffff     call sym.imp.getgrgid
0x000028bc      4885c0         test rax, rax
0x000028bf      741f           je 0x28e0
0x000028c1      488b38         mov rdi, qword [rax]
0x000028c4      e867360000     call sym.xstrdup
0x000028c9      488b542418     mov rdx, qword [rsp + 0x18]
0x000028ce      644833142528.  xor rdx, qword fs:[0x28]
0x000028d7      7516           jne 0x28ef
0x000028d9      4883c420       add rsp, 0x20
0x000028dd      5b             pop rbx
0x000028de      c3             ret
0x000028df      90             nop
0x000028e0      89df           mov edi, ebx
0x000028e2      4889e6         mov rsi, rsp
0x000028e5      e8f60f0000     call sym.umaxtostr
0x000028ea      4889c7         mov rdi, rax
0x000028ed      ebd5           jmp 0x28c4
0x000028ef      e84cf1ffff     call sym.imp.__stack_chk_fail
0x000028f4      6690           nop
0x000028f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- uid_to_name:
0x00002900      53             push rbx
0x00002901      89fb           mov ebx, edi
0x00002903      4883ec20       sub rsp, 0x20
0x00002907      64488b042528.  mov rax, qword fs:[0x28]
0x00002910      4889442418     mov qword [rsp + 0x18], rax
0x00002915      31c0           xor eax, eax
0x00002917      e8a4f0ffff     call sym.imp.getpwuid
0x0000291c      4885c0         test rax, rax
0x0000291f      741f           je 0x2940
0x00002921      488b38         mov rdi, qword [rax]
0x00002924      e807360000     call sym.xstrdup
0x00002929      488b542418     mov rdx, qword [rsp + 0x18]
0x0000292e      644833142528.  xor rdx, qword fs:[0x28]
0x00002937      7516           jne 0x294f
0x00002939      4883c420       add rsp, 0x20
0x0000293d      5b             pop rbx
0x0000293e      c3             ret
0x0000293f      90             nop
0x00002940      89df           mov edi, ebx
0x00002942      4889e6         mov rsi, rsp
0x00002945      e8960f0000     call sym.umaxtostr
0x0000294a      4889c7         mov rdi, rax
0x0000294d      ebd5           jmp 0x2924
0x0000294f      e8ecf0ffff     call sym.imp.__stack_chk_fail
0x00002954      6690           nop
0x00002956      662e0f1f8400.  nop word cs:[rax + rax]
;-- change_file_owner:
0x00002960      4157           push r15
0x00002962      4156           push r14
0x00002964      4155           push r13
0x00002966      4154           push r12
0x00002968      4589c4         mov r12d, r8d
0x0000296b      55             push rbp
0x0000296c      53             push rbx
0x0000296d      4889f5         mov rbp, rsi
0x00002970      4881ec780100.  sub rsp, 0x178
0x00002977      440fb77670     movzx r14d, word [rsi + 0x70]
0x0000297c      64488b042528.  mov rax, qword fs:[0x28]
0x00002985      488984246801.  mov qword [rsp + 0x168], rax
0x0000298d      31c0           xor eax, eax
0x0000298f      488b4638       mov rax, qword [rsi + 0x38]
0x00002993      48893c24       mov qword [rsp], rdi
0x00002997      89542410       mov dword [rsp + 0x10], edx
0x0000299b      894c2418       mov dword [rsp + 0x18], ecx
0x0000299f      664183fe0a     cmp r14w, 0xa
0x000029a4      488b9c24b001.  mov rbx, qword [rsp + 0x1b0]
0x000029ac      4889442408     mov qword [rsp + 8], rax
0x000029b1      7738           ja 0x29eb
0x000029b3      488d0dce8700.  lea rcx, [0x0000b188]
0x000029ba      410fb7d6       movzx edx, r14w
0x000029be      48630491       movsxd rax, dword [rcx + rdx*4]
0x000029c2      4801c8         add rax, rcx
0x000029c5      ffe0           jmp rax
0x000029c7      660f1f840000.  nop word [rax + rax]
0x000029d0      488b3c24       mov rdi, qword [rsp]
0x000029d4      44894c2420     mov dword [rsp + 0x20], r9d
0x000029d9      e802360000     call sym.cycle_warning_required
0x000029de      84c0           test al, al
0x000029e0      448b4c2420     mov r9d, dword [rsp + 0x20]
0x000029e5      0f85dd070000   jne 0x31c8
0x000029eb      4183fcff       cmp r12d, 0xffffffff
0x000029ef      4c8b5d30       mov r11, qword [rbp + 0x30]
0x000029f3      0fb64b10       movzx ecx, byte [rbx + 0x10]
0x000029f7      0f94c2         sete dl
0x000029fa      4183f9ff       cmp r9d, 0xffffffff
0x000029fe      4c8d6d78       lea r13, [rbp + 0x78]
0x00002a02      0f94c0         sete al
0x00002a05      20c2           and dl, al
0x00002a07      4189d7         mov r15d, edx
0x00002a0a      7414           je 0x2a20
0x00002a0c      833b02         cmp dword [rbx], 2
0x00002a0f      750f           jne 0x2a20
0x00002a11      48837b0800     cmp qword [rbx + 8], 0
0x00002a16      0f8474080000   je 0x3290
0x00002a1c      0f1f4000       nop dword [rax]
0x00002a20      84c9           test cl, cl
0x00002a22      0f8500020000   jne 0x2c28
0x00002a28      4489f0         mov eax, r14d
0x00002a2b      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00002a2e      6683f804       cmp ax, 4
0x00002a32      0f94c0         sete al
0x00002a35      4183ee01       sub r14d, 1
0x00002a39      664183fe01     cmp r14w, 1
0x00002a3e      0f96c2         setbe dl
0x00002a41      09d0           or eax, edx
0x00002a43      4183fcff       cmp r12d, 0xffffffff
0x00002a47      0f84ab010000   je 0x2bf8
0x00002a4d      4539651c       cmp dword [r13 + 0x1c], r12d
0x00002a51      0f84a1010000   je 0x2bf8
0x00002a57      84c0           test al, al
0x00002a59      0f84370a0000   je 0x3496
0x00002a5f      488b5308       mov rdx, qword [rbx + 8]
0x00002a63      4885d2         test rdx, rdx
0x00002a66      0f84330c0000   je 0x369f
0x00002a6c      31c9           xor ecx, ecx
0x00002a6e      488b02         mov rax, qword [rdx]
0x00002a71      49394508       cmp qword [r13 + 8], rax
0x00002a75      0f842d040000   je 0x2ea8
0x00002a7b      84c9           test cl, cl
0x00002a7d      0f841c0c0000   je 0x369f
0x00002a83      0fb64b10       movzx ecx, byte [rbx + 0x10]
0x00002a87      488b0424       mov rax, qword [rsp]
0x00002a8b      84c9           test cl, cl
0x00002a8d      448b702c       mov r14d, dword [rax + 0x2c]
0x00002a91      0f85a9040000   jne 0x2f40
0x00002a97      8b4c2418       mov ecx, dword [rsp + 0x18]
0x00002a9b      8b542410       mov edx, dword [rsp + 0x10]
0x00002a9f      41b800010000   mov r8d, 0x100
0x00002aa5      4c89de         mov rsi, r11
0x00002aa8      4489f7         mov edi, r14d
0x00002aab      e810f2ffff     call sym.imp.fchownat
0x00002ab0      85c0           test eax, eax
0x00002ab2      410f94c7       sete r15b
0x00002ab6      740e           je 0x2ac6
0x00002ab8      e873eeffff     call sym.imp.__errno_location
0x00002abd      83385f         cmp dword [rax], 0x5f
0x00002ac0      0f8452080000   je 0x3318
0x00002ac6      4584ff         test r15b, r15b
0x00002ac9      0f8539050000   jne 0x3008
0x00002acf      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x00002ad4      4584ff         test r15b, r15b
0x00002ad7      0f840b060000   je 0x30e8
0x00002add      8b03           mov eax, dword [rbx]
0x00002adf      4531ff         xor r15d, r15d
0x00002ae2      83f802         cmp eax, 2
0x00002ae5      0f84e7000000   je 0x2bd2
0x00002aeb      85c0           test eax, eax
0x00002aed      0f85df000000   jne 0x2bd2
0x00002af3      c744242c0300.  mov dword [rsp + 0x2c], 3
0x00002afb      418b7d1c       mov edi, dword [r13 + 0x1c]
0x00002aff      e8fcfdffff     call sym.uid_to_name
0x00002b04      418b7d20       mov edi, dword [r13 + 0x20]
0x00002b08      4889442410     mov qword [rsp + 0x10], rax
0x00002b0d      e88efdffff     call sym.gid_to_name
0x00002b12      4c8b6320       mov r12, qword [rbx + 0x20]
0x00002b16      4c8b7318       mov r14, qword [rbx + 0x18]
0x00002b1a      4989c5         mov r13, rax
0x00002b1d      4c89e6         mov rsi, r12
0x00002b20      4c89f7         mov rdi, r14
0x00002b23      e8a8fcffff     call sym.user_group_str
0x00002b28      4d85e4         test r12, r12
0x00002b2b      be00000000     mov esi, 0
0x00002b30      4889442418     mov qword [rsp + 0x18], rax
0x00002b35      490f45f5       cmovne rsi, r13
0x00002b39      4d85f6         test r14, r14
0x00002b3c      0f845e050000   je 0x30a0
0x00002b42      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002b47      e884fcffff     call sym.user_group_str
0x00002b4c      4889442420     mov qword [rsp + 0x20], rax
0x00002b51      8b44242c       mov eax, dword [rsp + 0x2c]
0x00002b55      83f803         cmp eax, 3
0x00002b58      0f8412050000   je 0x3070
0x00002b5e      83f804         cmp eax, 4
0x00002b61      0f8559070000   jne 0x32c0
0x00002b67      488d35c28500.  lea rsi, str.ownership_of__s_retained_as__s ; 0xb130 ; "ownership of %s retained as %s\n"
0x00002b6e      ba05000000     mov edx, 5
0x00002b73      31ff           xor edi, edi
0x00002b75      e876eeffff     call sym.imp.dcgettext
0x00002b7a      4989c4         mov r12, rax
0x00002b7d      0f1f00         nop dword [rax]
0x00002b80      488b742408     mov rsi, qword [rsp + 8]
0x00002b85      bf04000000     mov edi, 4
0x00002b8a      e8e1270000     call sym.quotearg_style
0x00002b8f      4c8b742420     mov r14, qword [rsp + 0x20]
0x00002b94      4c8b442418     mov r8, qword [rsp + 0x18]
0x00002b99      4889c2         mov rdx, rax
0x00002b9c      4c89e6         mov rsi, r12
0x00002b9f      bf01000000     mov edi, 1
0x00002ba4      31c0           xor eax, eax
0x00002ba6      4c89f1         mov rcx, r14
0x00002ba9      e872f0ffff     call sym.imp.__printf_chk
0x00002bae      4c89f7         mov rdi, r14
0x00002bb1      e87af1ffff     call sym..plt.got
0x00002bb6      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00002bbb      e870f1ffff     call sym..plt.got
0x00002bc0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002bc5      e866f1ffff     call sym..plt.got
0x00002bca      4c89ef         mov rdi, r13
0x00002bcd      e85ef1ffff     call sym..plt.got
0x00002bd2      807b0400       cmp byte [rbx + 4], 0
0x00002bd6      0f8574020000   jne 0x2e50
0x00002bdc      488b3c24       mov rdi, qword [rsp]
0x00002be0      ba04000000     mov edx, 4
0x00002be5      4889ee         mov rsi, rbp
0x00002be8      e8e35a0000     call sym.rpl_fts_set
0x00002bed      e95e020000     jmp 0x2e50
0x00002bf2      660f1f440000   nop word [rax + rax]
0x00002bf8      4183f9ff       cmp r9d, 0xffffffff
0x00002bfc      0f847e020000   je 0x2e80
0x00002c02      45394d20       cmp dword [r13 + 0x20], r9d
0x00002c06      0f94c1         sete cl
0x00002c09      84c0           test al, al
0x00002c0b      0f846afeffff   je 0x2a7b
0x00002c11      488b5308       mov rdx, qword [rbx + 8]
0x00002c15      4885d2         test rdx, rdx
0x00002c18      0f845dfeffff   je 0x2a7b
0x00002c1e      e94bfeffff     jmp 0x2a6e
0x00002c23      0f1f440000     nop dword [rax + rax]
0x00002c28      8b8590000000   mov eax, dword [rbp + 0x90]
0x00002c2e      2500f00000     and eax, 0xf000
0x00002c33      3d00a00000     cmp eax, 0xa000
0x00002c38      0f85eafdffff   jne 0x2a28
0x00002c3e      488b0424       mov rax, qword [rsp]
0x00002c42      4c8d6c2440     lea r13, [rsp + 0x40]
0x00002c47      4531c0         xor r8d, r8d
0x00002c4a      4c89da         mov rdx, r11
0x00002c4d      bf01000000     mov edi, 1
0x00002c52      44894c242c     mov dword [rsp + 0x2c], r9d
0x00002c57      4c89e9         mov rcx, r13
0x00002c5a      4c895c2420     mov qword [rsp + 0x20], r11
0x00002c5f      8b702c         mov esi, dword [rax + 0x2c]
0x00002c62      e829eeffff     call sym.imp.__fxstatat
0x00002c67      85c0           test eax, eax
0x00002c69      0f8579070000   jne 0x33e8
0x00002c6f      440fb77570     movzx r14d, word [rbp + 0x70]
0x00002c74      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x00002c79      448b4c242c     mov r9d, dword [rsp + 0x2c]
0x00002c7e      e9a5fdffff     jmp 0x2a28
0x00002c83      0f1f440000     nop dword [rax + rax]
0x00002c88      440fb67b04     movzx r15d, byte [rbx + 4]
0x00002c8d      4584ff         test r15b, r15b
0x00002c90      0f8455fdffff   je 0x29eb
0x00002c96      488b4308       mov rax, qword [rbx + 8]
0x00002c9a      4885c0         test rax, rax
0x00002c9d      0f84ad010000   je 0x2e50
0x00002ca3      488b18         mov rbx, qword [rax]
0x00002ca6      48399e800000.  cmp qword [rsi + 0x80], rbx
0x00002cad      0f859d010000   jne 0x2e50
0x00002cb3      488b4008       mov rax, qword [rax + 8]
0x00002cb7      48394678       cmp qword [rsi + 0x78], rax
0x00002cbb      0f858f010000   jne 0x2e50
0x00002cc1      488d15468500.  lea rdx, [0x0000b20e]                   ; "/"
0x00002cc8      488b742408     mov rsi, qword [rsp + 8]
0x00002ccd      b902000000     mov ecx, 2
0x00002cd2      4889d7         mov rdi, rdx
0x00002cd5      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002cd7      0f97c0         seta al
0x00002cda      1c00           sbb al, 0
0x00002cdc      84c0           test al, al
0x00002cde      0f850c090000   jne 0x35f0
0x00002ce4      488b742408     mov rsi, qword [rsp + 8]
0x00002ce9      bf04000000     mov edi, 4
0x00002cee      e87d260000     call sym.quotearg_style
0x00002cf3      488d35a68100.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xaea0 ; "it is dangerous to operate recursively on %s"
0x00002cfa      4889c3         mov rbx, rax
0x00002cfd      ba05000000     mov edx, 5
0x00002d02      31ff           xor edi, edi
0x00002d04      e8e7ecffff     call sym.imp.dcgettext
0x00002d09      4889d9         mov rcx, rbx
0x00002d0c      4889c2         mov rdx, rax
0x00002d0f      31f6           xor esi, esi
0x00002d11      31ff           xor edi, edi
0x00002d13      31c0           xor eax, eax
0x00002d15      e826efffff     call sym.imp.error
0x00002d1a      488d35ef8100.  lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xaf10 ; "use --no-preserve-root to override this failsafe"
0x00002d21      ba05000000     mov edx, 5
0x00002d26      31ff           xor edi, edi
0x00002d28      4531ff         xor r15d, r15d
0x00002d2b      e8c0ecffff     call sym.imp.dcgettext
0x00002d30      31f6           xor esi, esi
0x00002d32      4889c2         mov rdx, rax
0x00002d35      31ff           xor edi, edi
0x00002d37      31c0           xor eax, eax
0x00002d39      e802efffff     call sym.imp.error
0x00002d3e      488b1c24       mov rbx, qword [rsp]
0x00002d42      ba04000000     mov edx, 4
0x00002d47      4889ee         mov rsi, rbp
0x00002d4a      4889df         mov rdi, rbx
0x00002d4d      e87e590000     call sym.rpl_fts_set
0x00002d52      4889df         mov rdi, rbx
0x00002d55      e8f6510000     call sym.rpl_fts_read
0x00002d5a      e9f1000000     jmp 0x2e50
0x00002d5f      90             nop
0x00002d60      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x00002d65      4584ff         test r15b, r15b
0x00002d68      0f8472050000   je 0x32e0
0x00002d6e      8b03           mov eax, dword [rbx]
0x00002d70      4531ff         xor r15d, r15d
0x00002d73      83f802         cmp eax, 2
0x00002d76      0f8456feffff   je 0x2bd2
0x00002d7c      85c0           test eax, eax
0x00002d7e      0f854efeffff   jne 0x2bd2
0x00002d84      4531ff         xor r15d, r15d
0x00002d87      c744242c0300.  mov dword [rsp + 0x2c], 3
0x00002d8f      4c8b6320       mov r12, qword [rbx + 0x20]
0x00002d93      4c8b7318       mov r14, qword [rbx + 0x18]
0x00002d97      4531ed         xor r13d, r13d
0x00002d9a      48c744241000.  mov qword [rsp + 0x10], 0
0x00002da3      e975fdffff     jmp 0x2b1d
0x00002da8      0f1f84000000.  nop dword [rax + rax]
0x00002db0      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x00002db5      4584ff         test r15b, r15b
0x00002db8      75b4           jne 0x2d6e
0x00002dba      488b542408     mov rdx, qword [rsp + 8]
0x00002dbf      be03000000     mov esi, 3
0x00002dc4      31ff           xor edi, edi
0x00002dc6      e8a5260000     call sym.quotearg_n_style_colon
0x00002dcb      8b7540         mov esi, dword [rbp + 0x40]
0x00002dce      488d156e7700.  lea rdx, [0x0000a543]                   ; "%s"
0x00002dd5      4889c1         mov rcx, rax
0x00002dd8      31c0           xor eax, eax
0x00002dda      31ff           xor edi, edi
0x00002ddc      e85feeffff     call sym.imp.error
0x00002de1      8b03           mov eax, dword [rbx]
0x00002de3      83f802         cmp eax, 2
0x00002de6      7594           jne 0x2d7c
0x00002de8      e9e5fdffff     jmp 0x2bd2
0x00002ded      0f1f00         nop dword [rax]
0x00002df0      48837e5800     cmp qword [rsi + 0x58], 0
0x00002df5      750b           jne 0x2e02
0x00002df7      48837e2000     cmp qword [rsi + 0x20], 0
0x00002dfc      0f84c6050000   je 0x33c8
0x00002e02      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x00002e07      4584ff         test r15b, r15b
0x00002e0a      0f855effffff   jne 0x2d6e
0x00002e10      488b742408     mov rsi, qword [rsp + 8]
0x00002e15      bf04000000     mov edi, 4
0x00002e1a      e851250000     call sym.quotearg_style
0x00002e1f      488d35917f00.  lea rsi, str.cannot_access__s           ; 0xadb7 ; "cannot access %s"
0x00002e26      4989c4         mov r12, rax
0x00002e29      ba05000000     mov edx, 5
0x00002e2e      31ff           xor edi, edi
0x00002e30      e8bbebffff     call sym.imp.dcgettext
0x00002e35      8b7540         mov esi, dword [rbp + 0x40]
0x00002e38      4c89e1         mov rcx, r12
0x00002e3b      4889c2         mov rdx, rax
0x00002e3e      eb98           jmp 0x2dd8
0x00002e40      807b0400       cmp byte [rbx + 4], 0
0x00002e44      0f85a1fbffff   jne 0x29eb
0x00002e4a      41bf01000000   mov r15d, 1
0x00002e50      488b9c246801.  mov rbx, qword [rsp + 0x168]
0x00002e58      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002e61      4489f8         mov eax, r15d
0x00002e64      0f8530080000   jne 0x369a
0x00002e6a      4881c4780100.  add rsp, 0x178
0x00002e71      5b             pop rbx
0x00002e72      5d             pop rbp
0x00002e73      415c           pop r12
0x00002e75      415d           pop r13
0x00002e77      415e           pop r14
0x00002e79      415f           pop r15
0x00002e7b      c3             ret
0x00002e7c      0f1f4000       nop dword [rax]
0x00002e80      84c0           test al, al
0x00002e82      0f84fbfbffff   je 0x2a83
0x00002e88      488b5308       mov rdx, qword [rbx + 8]
0x00002e8c      4885d2         test rdx, rdx
0x00002e8f      0f84eefbffff   je 0x2a83
0x00002e95      488b3a         mov rdi, qword [rdx]
0x00002e98      49397d08       cmp qword [r13 + 8], rdi
0x00002e9c      0f85e1fbffff   jne 0x2a83
0x00002ea2      89c1           mov ecx, eax
0x00002ea4      0f1f4000       nop dword [rax]
0x00002ea8      488b4208       mov rax, qword [rdx + 8]
0x00002eac      49394500       cmp qword [r13], rax
0x00002eb0      0f85c5fbffff   jne 0x2a7b
0x00002eb6      488d15518300.  lea rdx, [0x0000b20e]                   ; "/"
0x00002ebd      488b742408     mov rsi, qword [rsp + 8]
0x00002ec2      b902000000     mov ecx, 2
0x00002ec7      4889d7         mov rdi, rdx
0x00002eca      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002ecc      0f97c0         seta al
0x00002ecf      1c00           sbb al, 0
0x00002ed1      84c0           test al, al
0x00002ed3      0f85df050000   jne 0x34b8
0x00002ed9      488b742408     mov rsi, qword [rsp + 8]
0x00002ede      bf04000000     mov edi, 4
0x00002ee3      e888240000     call sym.quotearg_style
0x00002ee8      488d35b17f00.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xaea0 ; "it is dangerous to operate recursively on %s"
0x00002eef      4889c3         mov rbx, rax
0x00002ef2      ba05000000     mov edx, 5
0x00002ef7      31ff           xor edi, edi
0x00002ef9      e8f2eaffff     call sym.imp.dcgettext
0x00002efe      4889d9         mov rcx, rbx
0x00002f01      4889c2         mov rdx, rax
0x00002f04      31f6           xor esi, esi
0x00002f06      31ff           xor edi, edi
0x00002f08      31c0           xor eax, eax
0x00002f0a      e831edffff     call sym.imp.error
0x00002f0f      488d35fa7f00.  lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xaf10 ; "use --no-preserve-root to override this failsafe"
0x00002f16      ba05000000     mov edx, 5
0x00002f1b      31ff           xor edi, edi
0x00002f1d      4531ff         xor r15d, r15d
0x00002f20      e8cbeaffff     call sym.imp.dcgettext
0x00002f25      31f6           xor esi, esi
0x00002f27      4889c2         mov rdx, rax
0x00002f2a      31ff           xor edi, edi
0x00002f2c      31c0           xor eax, eax
0x00002f2e      e80dedffff     call sym.imp.error
0x00002f33      e918ffffff     jmp 0x2e50
0x00002f38      0f1f84000000.  nop dword [rax + rax]
0x00002f40      4584ff         test r15b, r15b
0x00002f43      0f8597000000   jne 0x2fe0
0x00002f49      418b4518       mov eax, dword [r13 + 0x18]
0x00002f4d      2500f00000     and eax, 0xf000
0x00002f52      3d00800000     cmp eax, 0x8000
0x00002f57      0f84ab030000   je 0x3308
0x00002f5d      3d00400000     cmp eax, 0x4000
0x00002f62      c74424200009.  mov dword [rsp + 0x20], 0x10900         ; [0x10900:4]=-1
0x00002f6a      7574           jne 0x2fe0
0x00002f6c      8b542420       mov edx, dword [rsp + 0x20]
0x00002f70      4c89de         mov rsi, r11
0x00002f73      4489f7         mov edi, r14d
0x00002f76      44894c2430     mov dword [rsp + 0x30], r9d
0x00002f7b      884c242c       mov byte [rsp + 0x2c], cl
0x00002f7f      4c895c2438     mov qword [rsp + 0x38], r11
0x00002f84      e867ebffff     call sym.imp.__openat_2
0x00002f89      85c0           test eax, eax
0x00002f8b      4189c0         mov r8d, eax
0x00002f8e      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x00002f93      448b4c2430     mov r9d, dword [rsp + 0x30]
0x00002f98      0f89aa010000   jns 0x3148
0x00002f9e      e88de9ffff     call sym.imp.__errno_location
0x00002fa3      83380d         cmp dword [rax], 0xd
0x00002fa6      4989c2         mov r10, rax
0x00002fa9      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x00002fae      448b4c2430     mov r9d, dword [rsp + 0x30]
0x00002fb3      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002fb8      0f8511fbffff   jne 0x2acf
0x00002fbe      418b4518       mov eax, dword [r13 + 0x18]
0x00002fc2      2500f00000     and eax, 0xf000
0x00002fc7      3d00800000     cmp eax, 0x8000
0x00002fcc      0f84c4050000   je 0x3596
0x00002fd2      488b0424       mov rax, qword [rsp]
0x00002fd6      448b702c       mov r14d, dword [rax + 0x2c]
0x00002fda      660f1f440000   nop word [rax + rax]
0x00002fe0      8b4c2418       mov ecx, dword [rsp + 0x18]
0x00002fe4      8b542410       mov edx, dword [rsp + 0x10]
0x00002fe8      4531c0         xor r8d, r8d
0x00002feb      4c89de         mov rsi, r11
0x00002fee      4489f7         mov edi, r14d
0x00002ff1      e8caecffff     call sym.imp.fchownat
0x00002ff6      85c0           test eax, eax
0x00002ff8      410f94c7       sete r15b
0x00002ffc      e9c5faffff     jmp 0x2ac6
0x00003001      0f1f80000000.  nop dword [rax]
0x00003008      8b03           mov eax, dword [rbx]
0x0000300a      83f802         cmp eax, 2
0x0000300d      0f84bffbffff   je 0x2bd2
0x00003013      8b742410       mov esi, dword [rsp + 0x10]
0x00003017      83feff         cmp esi, 0xffffffff
0x0000301a      7418           je 0x3034
0x0000301c      4139751c       cmp dword [r13 + 0x1c], esi
0x00003020      41bf01000000   mov r15d, 1
0x00003026      c744242c0200.  mov dword [rsp + 0x2c], 2
0x0000302e      0f85c7faffff   jne 0x2afb
0x00003034      8b742418       mov esi, dword [rsp + 0x18]
0x00003038      83feff         cmp esi, 0xffffffff
0x0000303b      0f841f020000   je 0x3260
0x00003041      41397520       cmp dword [r13 + 0x20], esi
0x00003045      41bf01000000   mov r15d, 1
0x0000304b      c744242c0200.  mov dword [rsp + 0x2c], 2
0x00003053      0f85a2faffff   jne 0x2afb
0x00003059      85c0           test eax, eax
0x0000305b      0f8571fbffff   jne 0x2bd2
0x00003061      c744242c0400.  mov dword [rsp + 0x2c], 4
0x00003069      e98dfaffff     jmp 0x2afb
0x0000306e      6690           nop
0x00003070      48837c242000   cmp qword [rsp + 0x20], 0
0x00003076      ba05000000     mov edx, 5
0x0000307b      0f840f030000   je 0x3390
0x00003081      4d85f6         test r14, r14
0x00003084      0f84ae010000   je 0x3238
0x0000308a      488d35c77f00.  lea rsi, str.failed_to_change_ownership_of__s_from__s_to__s ; 0xb058 ; "failed to change ownership of %s from %s to %s\n"
0x00003091      31ff           xor edi, edi
0x00003093      e858e9ffff     call sym.imp.dcgettext
0x00003098      4989c4         mov r12, rax
0x0000309b      e9e0faffff     jmp 0x2b80
0x000030a0      31ff           xor edi, edi
0x000030a2      e829f7ffff     call sym.user_group_str
0x000030a7      4889442420     mov qword [rsp + 0x20], rax
0x000030ac      8b44242c       mov eax, dword [rsp + 0x2c]
0x000030b0      83f803         cmp eax, 3
0x000030b3      74bb           je 0x3070
0x000030b5      83f804         cmp eax, 4
0x000030b8      0f8552010000   jne 0x3210
0x000030be      4d85e4         test r12, r12
0x000030c1      ba05000000     mov edx, 5
0x000030c6      0f847c030000   je 0x3448
0x000030cc      488d35707d00.  lea rsi, str.group_of__s_retained_as__s ; 0xae43 ; "group of %s retained as %s\n"
0x000030d3      31ff           xor edi, edi
0x000030d5      e816e9ffff     call sym.imp.dcgettext
0x000030da      4989c4         mov r12, rax
0x000030dd      e99efaffff     jmp 0x2b80
0x000030e2      660f1f440000   nop word [rax + rax]
0x000030e8      488b742408     mov rsi, qword [rsp + 8]
0x000030ed      bf04000000     mov edi, 4
0x000030f2      e879220000     call sym.quotearg_style
0x000030f7      837c2410ff     cmp dword [rsp + 0x10], 0xffffffff
0x000030fc      4989c6         mov r14, rax
0x000030ff      ba05000000     mov edx, 5
0x00003104      0f846e010000   je 0x3278
0x0000310a      488d35e67c00.  lea rsi, str.changing_ownership_of__s   ; 0xadf7 ; "changing ownership of %s"
0x00003111      31ff           xor edi, edi
0x00003113      e8d8e8ffff     call sym.imp.dcgettext
0x00003118      4989c4         mov r12, rax
0x0000311b      e810e8ffff     call sym.imp.__errno_location
0x00003120      8b30           mov esi, dword [rax]
0x00003122      31ff           xor edi, edi
0x00003124      31c0           xor eax, eax
0x00003126      4c89f1         mov rcx, r14
0x00003129      4c89e2         mov rdx, r12
0x0000312c      e80febffff     call sym.imp.error
0x00003131      8b03           mov eax, dword [rbx]
0x00003133      83f802         cmp eax, 2
0x00003136      0f85aff9ffff   jne 0x2aeb
0x0000313c      e991faffff     jmp 0x2bd2
0x00003141      0f1f80000000.  nop dword [rax]
0x00003148      488d9424d000.  lea rdx, [rsp + 0xd0]
0x00003150      4489c6         mov esi, r8d
0x00003153      bf01000000     mov edi, 1
0x00003158      4489442420     mov dword [rsp + 0x20], r8d
0x0000315d      44894c2430     mov dword [rsp + 0x30], r9d
0x00003162      884c242c       mov byte [rsp + 0x2c], cl
0x00003166      e865eaffff     call sym.imp.__fxstat
0x0000316b      85c0           test eax, eax
0x0000316d      448b442420     mov r8d, dword [rsp + 0x20]
0x00003172      0f85a8020000   jne 0x3420
0x00003178      488b8424d800.  mov rax, qword [rsp + 0xd8]
0x00003180      49394508       cmp qword [r13 + 8], rax
0x00003184      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x00003189      448b4c2430     mov r9d, dword [rsp + 0x30]
0x0000318e      0f847c030000   je 0x3510
0x00003194      4489442410     mov dword [rsp + 0x10], r8d
0x00003199      e892e7ffff     call sym.imp.__errno_location
0x0000319e      448b442410     mov r8d, dword [rsp + 0x10]
0x000031a3      4989c4         mov r12, rax
0x000031a6      448b30         mov r14d, dword [rax]
0x000031a9      4489c7         mov edi, r8d
0x000031ac      e82fe9ffff     call sym.imp.close
0x000031b1      8b03           mov eax, dword [rbx]
0x000031b3      45893424       mov dword [r12], r14d
0x000031b7      83f802         cmp eax, 2
0x000031ba      0f852bf9ffff   jne 0x2aeb
0x000031c0      e90dfaffff     jmp 0x2bd2
0x000031c5      0f1f00         nop dword [rax]
0x000031c8      488b542408     mov rdx, qword [rsp + 8]
0x000031cd      be03000000     mov esi, 3
0x000031d2      31ff           xor edi, edi
0x000031d4      4531ff         xor r15d, r15d
0x000031d7      e894220000     call sym.quotearg_n_style_colon
0x000031dc      488d35657d00.  lea rsi, str.WARNING:_Circular_directory_structure.__This_almost_certainly_means_that_you_have_a_corrupted_file_system.__NOTIFY_YOUR_SYSTEM_MANAGER.__The_following_directory_is_part_of_the_cycle:_____s ; 0xaf48 ; "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n"
0x000031e3      4889c3         mov rbx, rax
0x000031e6      ba05000000     mov edx, 5
0x000031eb      31ff           xor edi, edi
0x000031ed      e8fee7ffff     call sym.imp.dcgettext
0x000031f2      4889d9         mov rcx, rbx
0x000031f5      4889c2         mov rdx, rax
0x000031f8      31f6           xor esi, esi
0x000031fa      31ff           xor edi, edi
0x000031fc      31c0           xor eax, eax
0x000031fe      e83deaffff     call sym.imp.error
0x00003203      e948fcffff     jmp 0x2e50
0x00003208      0f1f84000000.  nop dword [rax + rax]
0x00003210      4d85e4         test r12, r12
0x00003213      ba05000000     mov edx, 5
0x00003218      0f8462020000   je 0x3480
0x0000321e      488d350b7e00.  lea rsi, str.changed_group_of__s_from__s_to__s ; 0xb030 ; "changed group of %s from %s to %s\n"
0x00003225      31ff           xor edi, edi
0x00003227      e8c4e7ffff     call sym.imp.dcgettext
0x0000322c      4989c4         mov r12, rax
0x0000322f      e94cf9ffff     jmp 0x2b80
0x00003234      0f1f4000       nop dword [rax]
0x00003238      4d85e4         test r12, r12
0x0000323b      0f843f030000   je 0x3580
0x00003241      488d35407e00.  lea rsi, str.failed_to_change_group_of__s_from__s_to__s ; 0xb088 ; "failed to change group of %s from %s to %s\n"
0x00003248      31ff           xor edi, edi
0x0000324a      e8a1e7ffff     call sym.imp.dcgettext
0x0000324f      4989c4         mov r12, rax
0x00003252      e929f9ffff     jmp 0x2b80
0x00003257      660f1f840000.  nop word [rax + rax]
0x00003260      85c0           test eax, eax
0x00003262      0f8540020000   jne 0x34a8
0x00003268      41bf01000000   mov r15d, 1
0x0000326e      e9eefdffff     jmp 0x3061
0x00003273      0f1f440000     nop dword [rax + rax]
0x00003278      488d35917b00.  lea rsi, str.changing_group_of__s       ; 0xae10 ; "changing group of %s"
0x0000327f      31ff           xor edi, edi
0x00003281      e86ae7ffff     call sym.imp.dcgettext
0x00003286      4989c4         mov r12, rax
0x00003289      e98dfeffff     jmp 0x311b
0x0000328e      6690           nop
0x00003290      84c9           test cl, cl
0x00003292      0f8590f9ffff   jne 0x2c28
0x00003298      4489f0         mov eax, r14d
0x0000329b      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x0000329e      6683f804       cmp ax, 4
0x000032a2      740f           je 0x32b3
0x000032a4      4183ee01       sub r14d, 1
0x000032a8      664183fe01     cmp r14w, 1
0x000032ad      0f87d4f7ffff   ja 0x2a87
0x000032b3      488b0424       mov rax, qword [rsp]
0x000032b7      448b702c       mov r14d, dword [rax + 0x2c]
0x000032bb      e9d7f7ffff     jmp 0x2a97
0x000032c0      488d35417d00.  lea rsi, str.changed_ownership_of__s_from__s_to__s ; 0xb008 ; "changed ownership of %s from %s to %s\n"
0x000032c7      ba05000000     mov edx, 5
0x000032cc      31ff           xor edi, edi
0x000032ce      e81de7ffff     call sym.imp.dcgettext
0x000032d3      4989c4         mov r12, rax
0x000032d6      e9a5f8ffff     jmp 0x2b80
0x000032db      0f1f440000     nop dword [rax + rax]
0x000032e0      488b742408     mov rsi, qword [rsp + 8]
0x000032e5      bf04000000     mov edi, 4
0x000032ea      e881200000     call sym.quotearg_style
0x000032ef      ba05000000     mov edx, 5
0x000032f4      4989c4         mov r12, rax
0x000032f7      488d35ca7a00.  lea rsi, str.cannot_read_directory__s   ; 0xadc8 ; "cannot read directory %s"
0x000032fe      e92bfbffff     jmp 0x2e2e
0x00003303      0f1f440000     nop dword [rax + rax]
0x00003308      c74424200009.  mov dword [rsp + 0x20], 0x900           ; [0x900:4]=0
0x00003310      e957fcffff     jmp 0x2f6c
0x00003315      0f1f00         nop dword [rax]
0x00003318      8b03           mov eax, dword [rbx]
0x0000331a      41bf01000000   mov r15d, 1
0x00003320      83f802         cmp eax, 2
0x00003323      0f84a9f8ffff   je 0x2bd2
0x00003329      85c0           test eax, eax
0x0000332b      0f85a1f8ffff   jne 0x2bd2
0x00003331      418b7d1c       mov edi, dword [r13 + 0x1c]
0x00003335      e8c6f5ffff     call sym.uid_to_name
0x0000333a      418b7d20       mov edi, dword [r13 + 0x20]
0x0000333e      4889442410     mov qword [rsp + 0x10], rax
0x00003343      e858f5ffff     call sym.gid_to_name
0x00003348      488b742408     mov rsi, qword [rsp + 8]
0x0000334d      bf04000000     mov edi, 4
0x00003352      4989c5         mov r13, rax
0x00003355      e816200000     call sym.quotearg_style
0x0000335a      488d35ef7d00.  lea rsi, str.neither_symbolic_link__s_nor_referent_has_been_changed ; 0xb150 ; "neither symbolic link %s nor referent has been changed\n"
0x00003361      4989c4         mov r12, rax
0x00003364      31ff           xor edi, edi
0x00003366      ba05000000     mov edx, 5
0x0000336b      e880e6ffff     call sym.imp.dcgettext
0x00003370      4c89e2         mov rdx, r12
0x00003373      4889c6         mov rsi, rax
0x00003376      bf01000000     mov edi, 1
0x0000337b      31c0           xor eax, eax
0x0000337d      e89ee8ffff     call sym.imp.__printf_chk
0x00003382      e939f8ffff     jmp 0x2bc0
0x00003387      660f1f840000.  nop word [rax + rax]
0x00003390      4d85f6         test r14, r14
0x00003393      488d35467d00.  lea rsi, str.failed_to_change_ownership_of__s_to__s ; 0xb0e0 ; "failed to change ownership of %s to %s\n"
0x0000339a      0f84c0000000   je 0x3460
0x000033a0      31ff           xor edi, edi
0x000033a2      e849e6ffff     call sym.imp.dcgettext
0x000033a7      4989c4         mov r12, rax
0x000033aa      488b442418     mov rax, qword [rsp + 0x18]
0x000033af      48c744241800.  mov qword [rsp + 0x18], 0
0x000033b8      4889442420     mov qword [rsp + 0x20], rax
0x000033bd      e9bef7ffff     jmp 0x2b80
0x000033c2      660f1f440000   nop word [rax + rax]
0x000033c8      488b3c24       mov rdi, qword [rsp]
0x000033cc      48c746200100.  mov qword [rsi + 0x20], 1
0x000033d4      ba01000000     mov edx, 1
0x000033d9      e8f2520000     call sym.rpl_fts_set
0x000033de      e967faffff     jmp 0x2e4a
0x000033e3      0f1f440000     nop dword [rax + rax]
0x000033e8      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x000033ed      4584ff         test r15b, r15b
0x000033f0      0f85e7f6ffff   jne 0x2add
0x000033f6      488b742408     mov rsi, qword [rsp + 8]
0x000033fb      bf04000000     mov edi, 4
0x00003400      e86b1f0000     call sym.quotearg_style
0x00003405      ba05000000     mov edx, 5
0x0000340a      4989c6         mov r14, rax
0x0000340d      488d35cd7900.  lea rsi, str.cannot_dereference__s      ; 0xade1 ; "cannot dereference %s"
0x00003414      e966feffff     jmp 0x327f
0x00003419      0f1f80000000.  nop dword [rax]
0x00003420      4489442418     mov dword [rsp + 0x18], r8d
0x00003425      e806e5ffff     call sym.imp.__errno_location
0x0000342a      448b442418     mov r8d, dword [rsp + 0x18]
0x0000342f      448b20         mov r12d, dword [rax]
0x00003432      4989c6         mov r14, rax
0x00003435      4489c7         mov edi, r8d
0x00003438      e8a3e6ffff     call sym.imp.close
0x0000343d      458926         mov dword [r14], r12d
0x00003440      e98af6ffff     jmp 0x2acf
0x00003445      0f1f00         nop dword [rax]
0x00003448      488d35107a00.  lea rsi, str.ownership_of__s_retained   ; 0xae5f ; "ownership of %s retained\n"
0x0000344f      31ff           xor edi, edi
0x00003451      e89ae5ffff     call sym.imp.dcgettext
0x00003456      4989c4         mov r12, rax
0x00003459      e922f7ffff     jmp 0x2b80
0x0000345e      6690           nop
0x00003460      4d85e4         test r12, r12
0x00003463      488d359e7c00.  lea rsi, str.failed_to_change_group_of__s_to__s ; 0xb108 ; "failed to change group of %s to %s\n"
0x0000346a      0f8530ffffff   jne 0x33a0
0x00003470      488d35417c00.  lea rsi, str.failed_to_change_ownership_of__s ; 0xb0b8 ; "failed to change ownership of %s\n"
0x00003477      e924ffffff     jmp 0x33a0
0x0000347c      0f1f4000       nop dword [rax]
0x00003480      488d359e7900.  lea rsi, str.no_change_to_ownership_of__s ; 0xae25 ; "no change to ownership of %s\n"
0x00003487      31ff           xor edi, edi
0x00003489      e862e5ffff     call sym.imp.dcgettext
0x0000348e      4989c4         mov r12, rax
0x00003491      e9eaf6ffff     jmp 0x2b80
0x00003496      8b03           mov eax, dword [rbx]
0x00003498      83f802         cmp eax, 2
0x0000349b      740b           je 0x34a8
0x0000349d      85c0           test eax, eax
0x0000349f      0f8413020000   je 0x36b8
0x000034a5      0f1f00         nop dword [rax]
0x000034a8      41bf01000000   mov r15d, 1
0x000034ae      e91ff7ffff     jmp 0x2bd2
0x000034b3      0f1f440000     nop dword [rax + rax]
0x000034b8      be04000000     mov esi, 4
0x000034bd      bf01000000     mov edi, 1
0x000034c2      e8891d0000     call sym.quotearg_n_style
0x000034c7      488b542408     mov rdx, qword [rsp + 8]
0x000034cc      31ff           xor edi, edi
0x000034ce      be04000000     mov esi, 4
0x000034d3      4889c5         mov rbp, rax
0x000034d6      e8751d0000     call sym.quotearg_n_style
0x000034db      488d35ee7900.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s ; 0xaed0 ; "it is dangerous to operate recursively on %s (same as %s)"
0x000034e2      4889c3         mov rbx, rax
0x000034e5      31ff           xor edi, edi
0x000034e7      ba05000000     mov edx, 5
0x000034ec      e8ffe4ffff     call sym.imp.dcgettext
0x000034f1      4989e8         mov r8, rbp
0x000034f4      4889c2         mov rdx, rax
0x000034f7      4889d9         mov rcx, rbx
0x000034fa      31f6           xor esi, esi
0x000034fc      31ff           xor edi, edi
0x000034fe      31c0           xor eax, eax
0x00003500      e83be7ffff     call sym.imp.error
0x00003505      e905faffff     jmp 0x2f0f
0x0000350a      660f1f440000   nop word [rax + rax]
0x00003510      488b8424d000.  mov rax, qword [rsp + 0xd0]
0x00003518      49394500       cmp qword [r13], rax
0x0000351c      0f8572fcffff   jne 0x3194
0x00003522      4183fcff       cmp r12d, 0xffffffff
0x00003526      0f841c010000   je 0x3648
0x0000352c      443ba424ec00.  cmp r12d, dword [rsp + 0xec]
0x00003534      0f8408010000   je 0x3642
0x0000353a      448944242c     mov dword [rsp + 0x2c], r8d
0x0000353f      884c2420       mov byte [rsp + 0x20], cl
0x00003543      e8e8e3ffff     call sym.imp.__errno_location
0x00003548      448b44242c     mov r8d, dword [rsp + 0x2c]
0x0000354d      448b30         mov r14d, dword [rax]
0x00003550      4989c4         mov r12, rax
0x00003553      4489c7         mov edi, r8d
0x00003556      e885e5ffff     call sym.imp.close
0x0000355b      45893424       mov dword [r12], r14d
0x0000355f      8b03           mov eax, dword [rbx]
0x00003561      0fb64c2420     movzx ecx, byte [rsp + 0x20]
0x00003566      83f802         cmp eax, 2
0x00003569      0f85a4faffff   jne 0x3013
0x0000356f      4189cf         mov r15d, ecx
0x00003572      e95bf6ffff     jmp 0x2bd2
0x00003577      660f1f840000.  nop word [rax + rax]
0x00003580      488d35317b00.  lea rsi, str.failed_to_change_ownership_of__s ; 0xb0b8 ; "failed to change ownership of %s\n"
0x00003587      31ff           xor edi, edi
0x00003589      e862e4ffff     call sym.imp.dcgettext
0x0000358e      4989c4         mov r12, rax
0x00003591      e9eaf5ffff     jmp 0x2b80
0x00003596      8b542420       mov edx, dword [rsp + 0x20]
0x0000359a      4c89de         mov rsi, r11
0x0000359d      4489f7         mov edi, r14d
0x000035a0      44894c2438     mov dword [rsp + 0x38], r9d
0x000035a5      4c89542430     mov qword [rsp + 0x30], r10
0x000035aa      884c242c       mov byte [rsp + 0x2c], cl
0x000035ae      4c895c2420     mov qword [rsp + 0x20], r11
0x000035b3      83ca01         or edx, 1
0x000035b6      e835e5ffff     call sym.imp.__openat_2
0x000035bb      85c0           test eax, eax
0x000035bd      4189c0         mov r8d, eax
0x000035c0      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x000035c5      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x000035ca      4c8b542430     mov r10, qword [rsp + 0x30]
0x000035cf      448b4c2438     mov r9d, dword [rsp + 0x38]
0x000035d4      0f896efbffff   jns 0x3148
0x000035da      41833a0d       cmp dword [r10], 0xd
0x000035de      0f84eef9ffff   je 0x2fd2
0x000035e4      e9e6f4ffff     jmp 0x2acf
0x000035e9      0f1f80000000.  nop dword [rax]
0x000035f0      be04000000     mov esi, 4
0x000035f5      bf01000000     mov edi, 1
0x000035fa      e8511c0000     call sym.quotearg_n_style
0x000035ff      488b542408     mov rdx, qword [rsp + 8]
0x00003604      31ff           xor edi, edi
0x00003606      be04000000     mov esi, 4
0x0000360b      4989c4         mov r12, rax
0x0000360e      e83d1c0000     call sym.quotearg_n_style
0x00003613      488d35b67800.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s ; 0xaed0 ; "it is dangerous to operate recursively on %s (same as %s)"
0x0000361a      4889c3         mov rbx, rax
0x0000361d      31ff           xor edi, edi
0x0000361f      ba05000000     mov edx, 5
0x00003624      e8c7e3ffff     call sym.imp.dcgettext
0x00003629      4d89e0         mov r8, r12
0x0000362c      4889c2         mov rdx, rax
0x0000362f      4889d9         mov rcx, rbx
0x00003632      31f6           xor esi, esi
0x00003634      31ff           xor edi, edi
0x00003636      31c0           xor eax, eax
0x00003638      e803e6ffff     call sym.imp.error
0x0000363d      e9d8f6ffff     jmp 0x2d1a
0x00003642      4183f9ff       cmp r9d, 0xffffffff
0x00003646      740e           je 0x3656
0x00003648      443b8c24f000.  cmp r9d, dword [rsp + 0xf0]
0x00003650      0f85e4feffff   jne 0x353a
0x00003656      8b542418       mov edx, dword [rsp + 0x18]
0x0000365a      8b742410       mov esi, dword [rsp + 0x10]
0x0000365e      4489c7         mov edi, r8d
0x00003661      884c242c       mov byte [rsp + 0x2c], cl
0x00003665      4489442420     mov dword [rsp + 0x20], r8d
0x0000366a      e801e6ffff     call sym.imp.fchown
0x0000366f      85c0           test eax, eax
0x00003671      448b442420     mov r8d, dword [rsp + 0x20]
0x00003676      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x0000367b      0f859ffdffff   jne 0x3420
0x00003681      4489c7         mov edi, r8d
0x00003684      884c2420       mov byte [rsp + 0x20], cl
0x00003688      e853e4ffff     call sym.imp.close
0x0000368d      85c0           test eax, eax
0x0000368f      0f853af4ffff   jne 0x2acf
0x00003695      e9c5feffff     jmp 0x355f
0x0000369a      e8a1e3ffff     call sym.imp.__stack_chk_fail
0x0000369f      8b03           mov eax, dword [rbx]
0x000036a1      41bf01000000   mov r15d, 1
0x000036a7      83f802         cmp eax, 2
0x000036aa      0f8422f5ffff   je 0x2bd2
0x000036b0      85c0           test eax, eax
0x000036b2      0f851af5ffff   jne 0x2bd2
0x000036b8      4d85ed         test r13, r13
0x000036bb      7513           jne 0x36d0
0x000036bd      41bf01000000   mov r15d, 1
0x000036c3      c744242c0400.  mov dword [rsp + 0x2c], 4
0x000036cb      e9bff6ffff     jmp 0x2d8f
0x000036d0      c744242c0400.  mov dword [rsp + 0x2c], 4
0x000036d8      41bf01000000   mov r15d, 1
0x000036de      e918f4ffff     jmp 0x2afb
0x000036e3      0f1f00         nop dword [rax]
0x000036e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- chown_files:
0x000036f0      4157           push r15
0x000036f2      4156           push r14
0x000036f4      4189cf         mov r15d, ecx
0x000036f7      4155           push r13
0x000036f9      4154           push r12
0x000036fb      4589c5         mov r13d, r8d
0x000036fe      55             push rbp
0x000036ff      53             push rbx
0x00003700      4589ce         mov r14d, r9d
0x00003703      4883ec18       sub rsp, 0x18
0x00003707      4183f8ff       cmp r8d, 0xffffffff
0x0000370b      8954240c       mov dword [rsp + 0xc], edx
0x0000370f      4c8b642450     mov r12, qword [rsp + 0x50]
0x00003714      7512           jne 0x3728
0x00003716      4183f9ff       cmp r9d, 0xffffffff
0x0000371a      750c           jne 0x3728
0x0000371c      41807c241000   cmp byte [r12 + 0x10], 0
0x00003722      0f84a8000000   je 0x37d0
0x00003728      31d2           xor edx, edx
0x0000372a      bb01000000     mov ebx, 1
0x0000372f      e85c280000     call sym.xfts_open
0x00003734      4889c5         mov rbp, rax
0x00003737      eb29           jmp 0x3762
0x00003739      0f1f80000000.  nop dword [rax]
0x00003740      4883ec08       sub rsp, 8
0x00003744      4589f1         mov r9d, r14d
0x00003747      4589e8         mov r8d, r13d
0x0000374a      4154           push r12
0x0000374c      8b54241c       mov edx, dword [rsp + 0x1c]
0x00003750      4489f9         mov ecx, r15d
0x00003753      4889c6         mov rsi, rax
0x00003756      4889ef         mov rdi, rbp
0x00003759      e802f2ffff     call sym.change_file_owner
0x0000375e      21c3           and ebx, eax
0x00003760      58             pop rax
0x00003761      5a             pop rdx
0x00003762      4889ef         mov rdi, rbp
0x00003765      e8e6470000     call sym.rpl_fts_read
0x0000376a      4885c0         test rax, rax
0x0000376d      75d1           jne 0x3740
0x0000376f      e8bce1ffff     call sym.imp.__errno_location
0x00003774      8b08           mov ecx, dword [rax]
0x00003776      4989c5         mov r13, rax
0x00003779      85c9           test ecx, ecx
0x0000377b      740c           je 0x3789
0x0000377d      410fb65c2411   movzx ebx, byte [r12 + 0x11]
0x00003783      84db           test bl, bl
0x00003785      7461           je 0x37e8
0x00003787      31db           xor ebx, ebx
0x00003789      4889ef         mov rdi, rbp
0x0000378c      e82f460000     call sym.rpl_fts_close
0x00003791      85c0           test eax, eax
0x00003793      7425           je 0x37ba
0x00003795      488d35ed7600.  lea rsi, str.fts_close_failed           ; 0xae89 ; "fts_close failed"
0x0000379c      ba05000000     mov edx, 5
0x000037a1      31ff           xor edi, edi
0x000037a3      31db           xor ebx, ebx
0x000037a5      e846e2ffff     call sym.imp.dcgettext
0x000037aa      418b7500       mov esi, dword [r13]
0x000037ae      4889c2         mov rdx, rax
0x000037b1      31ff           xor edi, edi
0x000037b3      31c0           xor eax, eax
0x000037b5      e886e4ffff     call sym.imp.error
0x000037ba      4883c418       add rsp, 0x18
0x000037be      89d8           mov eax, ebx
0x000037c0      5b             pop rbx
0x000037c1      5d             pop rbp
0x000037c2      415c           pop r12
0x000037c4      415d           pop r13
0x000037c6      415e           pop r14
0x000037c8      415f           pop r15
0x000037ca      c3             ret
0x000037cb      0f1f440000     nop dword [rax + rax]
0x000037d0      89f0           mov eax, esi
0x000037d2      83c808         or eax, 8
0x000037d5      41833c2402     cmp dword [r12], 2
0x000037da      0f44f0         cmove esi, eax
0x000037dd      e946ffffff     jmp 0x3728
0x000037e2      660f1f440000   nop word [rax + rax]
0x000037e8      488d358a7600.  lea rsi, str.fts_read_failed            ; 0xae79 ; "fts_read failed"
0x000037ef      31ff           xor edi, edi
0x000037f1      ba05000000     mov edx, 5
0x000037f6      e8f5e1ffff     call sym.imp.dcgettext
0x000037fb      418b7500       mov esi, dword [r13]
0x000037ff      4889c2         mov rdx, rax
0x00003802      31ff           xor edi, edi
0x00003804      31c0           xor eax, eax
0x00003806      e835e4ffff     call sym.imp.error
0x0000380b      e979ffffff     jmp 0x3789
;-- close_stdout_set_file_name:
0x00003810      48893dd9a820.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20e0f0:8]=0
0x00003817      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003818      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003820      40883dc1a820.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20e0e8:1]=0
0x00003827      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003828      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003830      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003831      53             push rbx
0x00003832      4883ec08       sub rsp, 8
0x00003836      488b3d4ba820.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x0000383d      e89e500000     call sym.close_stream
0x00003842      85c0           test eax, eax
0x00003844      7416           je 0x385c
0x00003846      e8e5e0ffff     call sym.imp.__errno_location
0x0000384b      803d96a82000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20e0e8:1]=0
0x00003852      4889c3         mov rbx, rax
0x00003855      741c           je 0x3873
0x00003857      833820         cmp dword [rax], 0x20
0x0000385a      7517           jne 0x3873
0x0000385c      488b3d5da820.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x00003863      e878500000     call sym.close_stream
0x00003868      85c0           test eax, eax
0x0000386a      7546           jne 0x38b2
0x0000386c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003870      5b             pop rbx
0x00003871      5d             pop rbp
0x00003872      c3             ret
0x00003873      488d353f7900.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xb1b9 ; "write error"
0x0000387a      31ff           xor edi, edi
0x0000387c      ba05000000     mov edx, 5
0x00003881      e86ae1ffff     call sym.imp.dcgettext
0x00003886      488b3d63a820.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20e0f0:8]=0
0x0000388d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003890      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003893      7428           je 0x38bd
0x00003895      e8a61b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000389a      8b33           mov esi, dword [rbx]
0x0000389c      488d15227900.  lea rdx, str.s:__s                      ; 0xb1c5 ; "%s: %s"
0x000038a3      4889c1         mov rcx, rax
0x000038a6      4989e8         mov r8, rbp
0x000038a9      31ff           xor edi, edi
0x000038ab      31c0           xor eax, eax
0x000038ad      e88ee3ffff     call sym.imp.error
0x000038b2      8b3d60a72000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20e018:4]=1
0x000038b8      e893e0ffff     call sym.imp._exit
0x000038bd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000038bf      488d157d6c00.  lea rdx, [0x0000a543]                   ; "%s"
0x000038c6      4889c1         mov rcx, rax
0x000038c9      31ff           xor edi, edi
0x000038cb      31c0           xor eax, eax
0x000038cd      e86ee3ffff     call sym.imp.error
0x000038d2      ebde           jmp 0x38b2
0x000038d4      662e0f1f8400.  nop word cs:[rax + rax]
0x000038de      6690           nop
;-- umaxtostr:
0x000038e0      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x000038e4      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x000038e8      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x000038f2      660f1f440000   nop word [rax + rax]
0x000038f8      4889f8         mov rax, rdi
0x000038fb      4883e901       sub rcx, 1
0x000038ff      48f7e6         mul rsi
0x00003902      48c1ea03       shr rdx, 3
0x00003906      488d0492       lea rax, [rdx + rdx*4]
0x0000390a      4801c0         add rax, rax
0x0000390d      4829c7         sub rdi, rax
0x00003910      83c730         add edi, 0x30
0x00003913      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00003916      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00003919      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000391c      75da           jne 0x38f8
0x0000391e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00003921      c3             ret
0x00003922      662e0f1f8400.  nop word cs:[rax + rax]
0x0000392c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00003930      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003933      53             push rbx
0x00003934      7477           je 0x39ad                               ; ../coreutils-8.31/lib/progname.c:51
0x00003936      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000393b      4889fb         mov rbx, rdi
0x0000393e      e85de1ffff     call sym.imp.strrchr
0x00003943      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003946      7455           je 0x399d
0x00003948      4c8d4001       lea r8, [rax + 1]
0x0000394c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000394f      4829da         sub rdx, rbx
0x00003952      4883fa06       cmp rdx, 6
0x00003956      7e45           jle 0x399d
0x00003958      488d70fa       lea rsi, [rax - 6]
0x0000395c      488d3da57800.  lea rdi, str..libs                      ; 0xb208 ; "/.libs/"
0x00003963      b907000000     mov ecx, 7
0x00003968      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000396a      0f97c2         seta dl
0x0000396d      80da00         sbb dl, 0
0x00003970      84d2           test dl, dl
0x00003972      7529           jne 0x399d
0x00003974      488d3d957800.  lea rdi, [0x0000b210]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000397b      b903000000     mov ecx, 3
0x00003980      4c89c6         mov rsi, r8
0x00003983      4c89c3         mov rbx, r8
0x00003986      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003988      0f97c2         seta dl
0x0000398b      80da00         sbb dl, 0
0x0000398e      84d2           test dl, dl
0x00003990      750b           jne 0x399d
0x00003992      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003996      48891de3a620.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20e080:8]=0
0x0000399d      48891d54a720.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20e0f8:8]=0
0x000039a4      48891df5a620.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20e0a0:8]=0
0x000039ab      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000039ac      c3             ret
0x000039ad      488b0d0ca720.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x000039b4      488d3d157800.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xb1d0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000039bb      ba37000000     mov edx, 0x37                           ; '7'
0x000039c0      be01000000     mov esi, 1
0x000039c5      e816e3ffff     call sym.imp.fwrite
0x000039ca      e851dfffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000039cf      90             nop
;-- gettext_quote.part.1:
0x000039d0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000039d1      53             push rbx
0x000039d2      4889fd         mov rbp, rdi
0x000039d5      89f3           mov ebx, esi
0x000039d7      4883ec08       sub rsp, 8
0x000039db      e880640000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000039e0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000039e3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000039e6      80fa55         cmp dl, 0x55
0x000039e9      7475           je 0x3a60
0x000039eb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000039ee      7420           je 0x3a10
0x000039f0      488d052c7800.  lea rax, str.l______l                   ; 0xb223 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000039f7      488d15277800.  lea rdx, [0x0000b225]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000039fe      83fb09         cmp ebx, 9
0x00003a01      480f45c2       cmovne rax, rdx
0x00003a05      4883c408       add rsp, 8
0x00003a09      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00003a0a      5d             pop rbp
0x00003a0b      c3             ret
0x00003a0c      0f1f4000       nop dword [rax]
0x00003a10      0fb65001       movzx edx, byte [rax + 1]
0x00003a14      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003a17      80fa42         cmp dl, 0x42
0x00003a1a      75d4           jne 0x39f0
0x00003a1c      80780231       cmp byte [rax + 2], 0x31
0x00003a20      75ce           jne 0x39f0
0x00003a22      80780338       cmp byte [rax + 3], 0x38
0x00003a26      75c8           jne 0x39f0
0x00003a28      80780430       cmp byte [rax + 4], 0x30
0x00003a2c      75c2           jne 0x39f0
0x00003a2e      80780533       cmp byte [rax + 5], 0x33
0x00003a32      75bc           jne 0x39f0
0x00003a34      80780630       cmp byte [rax + 6], 0x30
0x00003a38      75b6           jne 0x39f0
0x00003a3a      80780700       cmp byte [rax + 7], 0
0x00003a3e      75b0           jne 0x39f0
0x00003a40      807d0060       cmp byte [rbp], 0x60
0x00003a44      488d05d17700.  lea rax, [0x0000b21c]
0x00003a4b      488d15ce7700.  lea rdx, [0x0000b220]
0x00003a52      480f45c2       cmovne rax, rdx
0x00003a56      4883c408       add rsp, 8
0x00003a5a      5b             pop rbx
0x00003a5b      5d             pop rbp
0x00003a5c      c3             ret
0x00003a5d      0f1f00         nop dword [rax]
0x00003a60      0fb65001       movzx edx, byte [rax + 1]
0x00003a64      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003a67      80fa54         cmp dl, 0x54
0x00003a6a      7584           jne 0x39f0
0x00003a6c      0fb65002       movzx edx, byte [rax + 2]
0x00003a70      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003a73      80fa46         cmp dl, 0x46
0x00003a76      0f8574ffffff   jne 0x39f0
0x00003a7c      8078032d       cmp byte [rax + 3], 0x2d
0x00003a80      0f856affffff   jne 0x39f0
0x00003a86      80780438       cmp byte [rax + 4], 0x38
0x00003a8a      0f8560ffffff   jne 0x39f0
0x00003a90      80780500       cmp byte [rax + 5], 0
0x00003a94      0f8556ffffff   jne 0x39f0
0x00003a9a      807d0060       cmp byte [rbp], 0x60
0x00003a9e      488d056f7700.  lea rax, [0x0000b214]                   ; "\u2018"
0x00003aa5      488d156c7700.  lea rdx, [0x0000b218]                   ; "\u2019"
0x00003aac      480f45c2       cmovne rax, rdx
0x00003ab0      4883c408       add rsp, 8
0x00003ab4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003ab5      5d             pop rbp
0x00003ab6      c3             ret
0x00003ab7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003ac0      4157           push r15
0x00003ac2      4156           push r14
0x00003ac4      4589c7         mov r15d, r8d
0x00003ac7      4155           push r13
0x00003ac9      4154           push r12
0x00003acb      4989fe         mov r14, rdi
0x00003ace      55             push rbp
0x00003acf      53             push rbx
0x00003ad0      4489cb         mov ebx, r9d
0x00003ad3      4989f5         mov r13, rsi
0x00003ad6      4889cd         mov rbp, rcx
0x00003ad9      83e302         and ebx, 2
0x00003adc      4881ecb80000.  sub rsp, 0xb8
0x00003ae3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00003aeb      4889542410     mov qword [rsp + 0x10], rdx
0x00003af0      4489442408     mov dword [rsp + 8], r8d
0x00003af5      44894c2478     mov dword [rsp + 0x78], r9d
0x00003afa      4889442420     mov qword [rsp + 0x20], rax
0x00003aff      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003b07      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00003b0c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003b14      4889442460     mov qword [rsp + 0x60], rax
0x00003b19      64488b042528.  mov rax, qword fs:[0x28]
0x00003b22      48898424a800.  mov qword [rsp + 0xa8], rax
0x00003b2a      31c0           xor eax, eax
0x00003b2c      e8cfdeffff     call sym.imp.__ctype_get_mb_cur_max
0x00003b31      4183ff0a       cmp r15d, 0xa
0x00003b35      4889442458     mov qword [rsp + 0x58], rax
0x00003b3a      0f87af110000   ja 0x4cef
0x00003b40      488d0d397700.  lea rcx, [0x0000b280]
0x00003b47      4489fa         mov edx, r15d
0x00003b4a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003b4e      4801c8         add rax, rcx
0x00003b51      ffe0           jmp rax
0x00003b53      c644240e01     mov byte [rsp + 0xe], 1
0x00003b58      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b5d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003b60      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b69      c644240f01     mov byte [rsp + 0xf], 1
0x00003b6e      c644240d00     mov byte [rsp + 0xd], 0
0x00003b73      488d05ab7600.  lea rax, [0x0000b225]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b7a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b83      4531ff         xor r15d, r15d
0x00003b86      c74424080200.  mov dword [rsp + 8], 2
0x00003b8e      4889442448     mov qword [rsp + 0x48], rax
0x00003b93      4531db         xor r11d, r11d
0x00003b96      4889e8         mov rax, rbp
0x00003b99      4589e0         mov r8d, r12d
0x00003b9c      4c89dd         mov rbp, r11
0x00003b9f      4989c3         mov r11, rax
0x00003ba2      660f1f440000   nop word [rax + rax]
0x00003ba8      4939eb         cmp r11, rbp
0x00003bab      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00003baf      4983fbff       cmp r11, 0xffffffffffffffff
0x00003bb3      750d           jne 0x3bc2
0x00003bb5      488b442410     mov rax, qword [rsp + 0x10]
0x00003bba      803c2800       cmp byte [rax + rbp], 0
0x00003bbe      410f95c4       setne r12b
0x00003bc2      4584e4         test r12b, r12b
0x00003bc5      0f8455060000   je 0x4220
0x00003bcb      837c240802     cmp dword [rsp + 8], 2
0x00003bd0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003bd5      4c8d0c2f       lea r9, [rdi + rbp]
0x00003bd9      0f95c0         setne al
0x00003bdc      2244240d       and al, byte [rsp + 0xd]
0x00003be0      4189c2         mov r10d, eax
0x00003be3      0f84a7000000   je 0x3c90
0x00003be9      488b442418     mov rax, qword [rsp + 0x18]
0x00003bee      4885c0         test rax, rax
0x00003bf1      0f8429040000   je 0x4020
0x00003bf7      4983fbff       cmp r11, 0xffffffffffffffff
0x00003bfb      488d5c0500     lea rbx, [rbp + rax]
0x00003c00      752e           jne 0x3c30
0x00003c02      4883f801       cmp rax, 1
0x00003c06      7628           jbe 0x3c30
0x00003c08      4488442438     mov byte [rsp + 0x38], r8b
0x00003c0d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003c12      4c894c2428     mov qword [rsp + 0x28], r9
0x00003c17      e8f4ddffff     call sym.imp.strlen
0x00003c1c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003c22      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003c28      4989c3         mov r11, rax
0x00003c2b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003c30      4c39db         cmp rbx, r11
0x00003c33      4488542428     mov byte [rsp + 0x28], r10b
0x00003c38      0f87b2050000   ja 0x41f0
0x00003c3e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003c43      488b742448     mov rsi, qword [rsp + 0x48]
0x00003c48      4c89cf         mov rdi, r9
0x00003c4b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003c50      4488442438     mov byte [rsp + 0x38], r8b
0x00003c55      4c894c2430     mov qword [rsp + 0x30], r9
0x00003c5a      e8b1deffff     call sym.imp.memcmp
0x00003c5f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003c61      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003c66      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003c6c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003c71      0f8579050000   jne 0x41f0
0x00003c77      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c7c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003c82      0f857d0f0000   jne 0x4c05
0x00003c88      0f1f84000000.  nop dword [rax + rax]
0x00003c90      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003c94      80fb7e         cmp bl, 0x7e
0x00003c97      0f871b030000   ja 0x3fb8
0x00003c9d      488d0d087600.  lea rcx, [0x0000b2ac]
0x00003ca4      0fb6d3         movzx edx, bl
0x00003ca7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003cab      4801c8         add rax, rcx
0x00003cae      ffe0           jmp rax
0x00003cb0      4531d2         xor r10d, r10d
0x00003cb3      4983fb01       cmp r11, 1
0x00003cb7      0f95c0         setne al
0x00003cba      4983fbff       cmp r11, 0xffffffffffffffff
0x00003cbe      750c           jne 0x3ccc
0x00003cc0      488b442410     mov rax, qword [rsp + 0x10]
0x00003cc5      80780100       cmp byte [rax + 1], 0
0x00003cc9      0f95c0         setne al
0x00003ccc      837c240802     cmp dword [rsp + 8], 2
0x00003cd1      0f94c2         sete dl
0x00003cd4      84c0           test al, al
0x00003cd6      0f844c020000   je 0x3f28
0x00003cdc      4531e4         xor r12d, r12d
0x00003cdf      31c0           xor eax, eax
0x00003ce1      0f1f80000000.  nop dword [rax]
0x00003ce8      807c240d01     cmp byte [rsp + 0xd], 1
0x00003ced      0f850f010000   jne 0x3e02
0x00003cf3      84d2           test dl, dl
0x00003cf5      0f8507010000   jne 0x3e02
0x00003cfb      488b742420     mov rsi, qword [rsp + 0x20]
0x00003d00      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003d03      7414           je 0x3d19
0x00003d05      89da           mov edx, ebx
0x00003d07      c0ea05         shr dl, 5
0x00003d0a      0fb6d2         movzx edx, dl
0x00003d0d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003d10      0fa3da         bt edx, ebx
0x00003d13      0f824a010000   jb 0x3e63
0x00003d19      4584d2         test r10b, r10b
0x00003d1c      0f8541010000   jne 0x3e63
0x00003d22      83f001         xor eax, 1
0x00003d25      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003d29      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00003d2c      84c0           test al, al
0x00003d2e      7420           je 0x3d50                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003d30      4d39fd         cmp r13, r15
0x00003d33      7605           jbe 0x3d3a
0x00003d35      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003d3a      498d4701       lea rax, [r15 + 1]
0x00003d3e      4939c5         cmp r13, rax
0x00003d41      7606           jbe 0x3d49
0x00003d43      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003d49      4983c702       add r15, 2
0x00003d4d      4531c0         xor r8d, r8d
0x00003d50      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003d53      7304           jae 0x3d59                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003d55      43881c3e       mov byte [r14 + r15], bl
0x00003d59      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00003d5e      4983c701       add r15, 1
0x00003d62      b800000000     mov eax, 0
0x00003d67      4584e4         test r12b, r12b
0x00003d6a      0f44f8         cmove edi, eax
0x00003d6d      40887c240e     mov byte [rsp + 0xe], dil
0x00003d72      e931feffff     jmp 0x3ba8
0x00003d77      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003d80      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003d83      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003d87      83f802         cmp eax, 2
0x00003d8a      0f84b8050000   je 0x4348
0x00003d90      83f805         cmp eax, 5
0x00003d93      0f846f050000   je 0x4308
0x00003d99      83f802         cmp eax, 2
0x00003d9c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003da1      0f94c2         sete dl
0x00003da4      4531e4         xor r12d, r12d
0x00003da7      31c0           xor eax, eax
0x00003da9      e93affffff     jmp 0x3ce8
0x00003dae      6690           nop
0x00003db0      4531d2         xor r10d, r10d
0x00003db3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003db8      0f8402050000   je 0x42c0
0x00003dbe      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003dc3      31d2           xor edx, edx
0x00003dc5      31c0           xor eax, eax
0x00003dc7      bb27000000     mov ebx, 0x27                           ; '''
0x00003dcc      e917ffffff     jmp 0x3ce8
0x00003dd1      0f1f80000000.  nop dword [rax]
0x00003dd8      ba09000000     mov edx, 9
0x00003ddd      bb74000000     mov ebx, 0x74                           ; 't'
0x00003de2      837c240802     cmp dword [rsp + 8], 2
0x00003de7      0f94c0         sete al
0x00003dea      2244240f       and al, byte [rsp + 0xf]
0x00003dee      0f854a010000   jne 0x3f3e
0x00003df4      807c240d00     cmp byte [rsp + 0xd], 0
0x00003df9      7565           jne 0x3e60
0x00003dfb      89d3           mov ebx, edx
0x00003dfd      4531e4         xor r12d, r12d
0x00003e00      31c0           xor eax, eax
0x00003e02      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e07      0f85eefeffff   jne 0x3cfb
0x00003e0d      e907ffffff     jmp 0x3d19                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003e12      660f1f440000   nop word [rax + rax]
0x00003e18      ba08000000     mov edx, 8
0x00003e1d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003e22      ebd0           jmp 0x3df4
0x00003e24      0f1f4000       nop dword [rax]
0x00003e28      837c240802     cmp dword [rsp + 8], 2
0x00003e2d      0f84cd030000   je 0x4200
0x00003e33      807c240d00     cmp byte [rsp + 0xd], 0
0x00003e38      0f8412020000   je 0x4050
0x00003e3e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e43      0f8407020000   je 0x4050
0x00003e49      48837c241800   cmp qword [rsp + 0x18], 0
0x00003e4f      0f85b6030000   jne 0x420b
0x00003e55      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003e5a      660f1f440000   nop word [rax + rax]
0x00003e60      4531e4         xor r12d, r12d
0x00003e63      837c240802     cmp dword [rsp + 8], 2
0x00003e68      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00003e6b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e70      89d0           mov eax, edx
0x00003e72      0f8550080000   jne 0x46c8
0x00003e78      4489c0         mov eax, r8d
0x00003e7b      83f001         xor eax, 1
0x00003e7e      20d0           and al, dl
0x00003e80      742f           je 0x3eb1
0x00003e82      4d39fd         cmp r13, r15
0x00003e85      7605           jbe 0x3e8c
0x00003e87      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003e8c      498d5701       lea rdx, [r15 + 1]
0x00003e90      4939d5         cmp r13, rdx
0x00003e93      7606           jbe 0x3e9b
0x00003e95      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003e9b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00003e9f      4939d5         cmp r13, rdx
0x00003ea2      7606           jbe 0x3eaa
0x00003ea4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003eaa      4983c703       add r15, 3
0x00003eae      4189c0         mov r8d, eax
0x00003eb1      4d39fd         cmp r13, r15
0x00003eb4      7605           jbe 0x3ebb
0x00003eb6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003ebb      4983c701       add r15, 1
0x00003ebf      4883c501       add rbp, 1
0x00003ec3      e988feffff     jmp 0x3d50
0x00003ec8      0f1f84000000.  nop dword [rax + rax]
0x00003ed0      807c240d00     cmp byte [rsp + 0xd], 0
0x00003ed5      0f85c8010000   jne 0x40a3
0x00003edb      31d2           xor edx, edx
0x00003edd      f644247801     test byte [rsp + 0x78], 1
0x00003ee2      0f8413ffffff   je 0x3dfb
0x00003ee8      4883c501       add rbp, 1
0x00003eec      e9b7fcffff     jmp 0x3ba8
0x00003ef1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003ef8      837c240802     cmp dword [rsp + 8], 2
0x00003efd      0f94c2         sete dl
0x00003f00      31c0           xor eax, eax
0x00003f02      e9e1fdffff     jmp 0x3ce8
0x00003f07      660f1f840000.  nop word [rax + rax]
0x00003f10      ba07000000     mov edx, 7
0x00003f15      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003f1a      e9d5feffff     jmp 0x3df4
0x00003f1f      90             nop
0x00003f20      837c240802     cmp dword [rsp + 8], 2
0x00003f25      0f94c2         sete dl
0x00003f28      4885ed         test rbp, rbp
0x00003f2b      0f85abfdffff   jne 0x3cdc
0x00003f31      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003f36      20d0           and al, dl
0x00003f38      0f84aafdffff   je 0x3ce8
0x00003f3e      4c89dd         mov rbp, r11
0x00003f41      c74424080200.  mov dword [rsp + 8], 2
0x00003f49      e9fb060000     jmp 0x4649
0x00003f4e      6690           nop
0x00003f50      837c240802     cmp dword [rsp + 8], 2
0x00003f55      0f94c2         sete dl
0x00003f58      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00003f5b      ebd4           jmp 0x3f31
0x00003f5d      0f1f00         nop dword [rax]
0x00003f60      837c240802     cmp dword [rsp + 8], 2
0x00003f65      bb20000000     mov ebx, 0x20                           ; "@"
0x00003f6a      0f94c2         sete dl
0x00003f6d      ebc2           jmp 0x3f31
0x00003f6f      90             nop
0x00003f70      ba0d000000     mov edx, 0xd
0x00003f75      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003f7a      e963feffff     jmp 0x3de2
0x00003f7f      90             nop
0x00003f80      ba0c000000     mov edx, 0xc
0x00003f85      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003f8a      e965feffff     jmp 0x3df4
0x00003f8f      90             nop
0x00003f90      ba0b000000     mov edx, 0xb
0x00003f95      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003f9a      e955feffff     jmp 0x3df4
0x00003f9f      90             nop
0x00003fa0      ba0a000000     mov edx, 0xa
0x00003fa5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003faa      e933feffff     jmp 0x3de2
0x00003faf      90             nop
0x00003fb0      4531d2         xor r10d, r10d
0x00003fb3      0f1f440000     nop dword [rax + rax]
0x00003fb8      48837c245801   cmp qword [rsp + 0x58], 1
0x00003fbe      0f85a4030000   jne 0x4368
0x00003fc4      4c895c2438     mov qword [rsp + 0x38], r11
0x00003fc9      4488442430     mov byte [rsp + 0x30], r8b
0x00003fce      4488542428     mov byte [rsp + 0x28], r10b
0x00003fd3      e848ddffff     call sym.imp.__ctype_b_loc
0x00003fd8      488b08         mov rcx, qword [rax]
0x00003fdb      0fb6d3         movzx edx, bl
0x00003fde      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003fe4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003fea      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003fef      bf01000000     mov edi, 1
0x00003ff4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003ff8      66250040       and ax, 0x4000
0x00003ffc      410f95c4       setne r12b
0x00004000      0f94c0         sete al
0x00004003      2244240d       and al, byte [rsp + 0xd]
0x00004007      84c0           test al, al
0x00004009      0f8592090000   jne 0x49a1
0x0000400f      837c240802     cmp dword [rsp + 8], 2
0x00004014      0f94c2         sete dl
0x00004017      e9ccfcffff     jmp 0x3ce8
0x0000401c      0f1f4000       nop dword [rax]
0x00004020      410fb619       movzx ebx, byte [r9]
0x00004024      80fb7e         cmp bl, 0x7e
0x00004027      7787           ja 0x3fb0
0x00004029      488d0d787400.  lea rcx, [0x0000b4a8]
0x00004030      0fb6d3         movzx edx, bl
0x00004033      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004037      4801c8         add rax, rcx
0x0000403a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000403c      0f1f4000       nop dword [rax]
0x00004040      4531d2         xor r10d, r10d
0x00004043      807c240d00     cmp byte [rsp + 0xd], 0
0x00004048      0f85f0fdffff   jne 0x3e3e
0x0000404e      6690           nop
0x00004050      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004055      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000405a      e995fdffff     jmp 0x3df4
0x0000405f      90             nop
0x00004060      ba0c000000     mov edx, 0xc
0x00004065      4531d2         xor r10d, r10d
0x00004068      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000406d      e982fdffff     jmp 0x3df4
0x00004072      660f1f440000   nop word [rax + rax]
0x00004078      ba0a000000     mov edx, 0xa
0x0000407d      4531d2         xor r10d, r10d
0x00004080      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004085      e958fdffff     jmp 0x3de2
0x0000408a      660f1f440000   nop word [rax + rax]
0x00004090      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004095      e9c6fdffff     jmp 0x3e60
0x0000409a      660f1f440000   nop word [rax + rax]
0x000040a0      4531d2         xor r10d, r10d
0x000040a3      837c240802     cmp dword [rsp + 8], 2
0x000040a8      0f94c2         sete dl
0x000040ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000040b0      0f85940b0000   jne 0x4c4a
0x000040b6      4489c0         mov eax, r8d
0x000040b9      4c89f9         mov rcx, r15
0x000040bc      83f001         xor eax, 1
0x000040bf      20d0           and al, dl
0x000040c1      742d           je 0x40f0
0x000040c3      4d39fd         cmp r13, r15
0x000040c6      7605           jbe 0x40cd
0x000040c8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000040cd      498d4f01       lea rcx, [r15 + 1]
0x000040d1      4939cd         cmp r13, rcx
0x000040d4      7606           jbe 0x40dc
0x000040d6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000040dc      498d4f02       lea rcx, [r15 + 2]
0x000040e0      4939cd         cmp r13, rcx
0x000040e3      0f8730060000   ja 0x4719
0x000040e9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000040ed      4189c0         mov r8d, eax
0x000040f0      4939cd         cmp r13, rcx
0x000040f3      7605           jbe 0x40fa
0x000040f5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000040fa      837c240802     cmp dword [rsp + 8], 2
0x000040ff      4c8d7901       lea r15, [rcx + 1]
0x00004103      0f8400060000   je 0x4709
0x00004109      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000410d      4c39d8         cmp rax, r11
0x00004110      7319           jae 0x412b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004112      488b442410     mov rax, qword [rsp + 0x10]
0x00004117      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000411c      88442428       mov byte [rsp + 0x28], al
0x00004120      83e830         sub eax, 0x30
0x00004123      3c09           cmp al, 9
0x00004125      0f862e080000   jbe 0x4959
0x0000412b      4489e0         mov eax, r12d
0x0000412e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004133      4531e4         xor r12d, r12d
0x00004136      e9adfbffff     jmp 0x3ce8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000413b      0f1f440000     nop dword [rax + rax]
0x00004140      837c240802     cmp dword [rsp + 8], 2
0x00004145      4589d4         mov r12d, r10d
0x00004148      0f94c2         sete dl
0x0000414b      4531d2         xor r10d, r10d
0x0000414e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004150      e993fbffff     jmp 0x3ce8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004155      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004158      837c240802     cmp dword [rsp + 8], 2
0x0000415d      0f94c2         sete dl
0x00004160      4531d2         xor r10d, r10d
0x00004163      e9c0fdffff     jmp 0x3f28
0x00004168      0f1f84000000.  nop dword [rax + rax]
0x00004170      837c240802     cmp dword [rsp + 8], 2
0x00004175      0f94c2         sete dl
0x00004178      4531d2         xor r10d, r10d
0x0000417b      4531e4         xor r12d, r12d
0x0000417e      e9aefdffff     jmp 0x3f31
0x00004183      0f1f440000     nop dword [rax + rax]
0x00004188      837c240802     cmp dword [rsp + 8], 2
0x0000418d      4589d4         mov r12d, r10d
0x00004190      bb20000000     mov ebx, 0x20                           ; "@"
0x00004195      0f94c2         sete dl
0x00004198      4531d2         xor r10d, r10d
0x0000419b      e991fdffff     jmp 0x3f31
0x000041a0      ba0d000000     mov edx, 0xd
0x000041a5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000041a8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000041ad      e930fcffff     jmp 0x3de2
0x000041b2      660f1f440000   nop word [rax + rax]
0x000041b8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000041bd      e99efcffff     jmp 0x3e60
0x000041c2      660f1f440000   nop word [rax + rax]
0x000041c8      ba09000000     mov edx, 9
0x000041cd      4531d2         xor r10d, r10d
0x000041d0      bb74000000     mov ebx, 0x74                           ; 't'
0x000041d5      e908fcffff     jmp 0x3de2
0x000041da      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000041e0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000041e5      e976fcffff     jmp 0x3e60
0x000041ea      660f1f440000   nop word [rax + rax]
0x000041f0      4531d2         xor r10d, r10d
0x000041f3      e998faffff     jmp 0x3c90
0x000041f8      0f1f84000000.  nop dword [rax + rax]
0x00004200      807c240f00     cmp byte [rsp + 0xf], 0
0x00004205      0f8565090000   jne 0x4b70
0x0000420b      4883c501       add rbp, 1
0x0000420f      4489c0         mov eax, r8d
0x00004212      4531e4         xor r12d, r12d
0x00004215      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000421a      e90dfbffff     jmp 0x3d2c
0x0000421f      90             nop
0x00004220      837c240802     cmp dword [rsp + 8], 2
0x00004225      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000422a      4589c4         mov r12d, r8d
0x0000422d      4c89dd         mov rbp, r11
0x00004230      0f94c2         sete dl
0x00004233      89d8           mov eax, ebx
0x00004235      4d85ff         test r15, r15
0x00004238      0f94c1         sete cl
0x0000423b      21d0           and eax, edx
0x0000423d      20c8           and al, cl
0x0000423f      0f85610a0000   jne 0x4ca6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004245      89d8           mov eax, ebx
0x00004247      83f001         xor eax, 1
0x0000424a      20c2           and dl, al
0x0000424c      0f846a090000   je 0x4bbc
0x00004252      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004257      0f845d090000   je 0x4bba
0x0000425d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004262      0f85f5090000   jne 0x4c5d
0x00004268      4d85ed         test r13, r13
0x0000426b      0f94c0         sete al
0x0000426e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004274      0f95c2         setne dl
0x00004277      20d0           and al, dl
0x00004279      0f841d0a0000   je 0x4c9c
0x0000427f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004284      488d1d9a6f00.  lea rbx, [0x0000b225]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000428b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000428f      c74424080200.  mov dword [rsp + 8], 2
0x00004297      41bf01000000   mov r15d, 1
0x0000429d      48c744241801.  mov qword [rsp + 0x18], 1
0x000042a6      c644240f00     mov byte [rsp + 0xf], 0
0x000042ab      48895c2448     mov qword [rsp + 0x48], rbx
0x000042b0      8844247c       mov byte [rsp + 0x7c], al
0x000042b4      e9daf8ffff     jmp 0x3b93
0x000042b9      0f1f80000000.  nop dword [rax]
0x000042c0      807c240f00     cmp byte [rsp + 0xf], 0
0x000042c5      0f85a5080000   jne 0x4b70
0x000042cb      4d85ed         test r13, r13
0x000042ce      0f84fc030000   je 0x46d0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000042d4      31d2           xor edx, edx
0x000042d6      48837c245000   cmp qword [rsp + 0x50], 0
0x000042dc      0f85ee030000   jne 0x46d0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000042e2      4c896c2450     mov qword [rsp + 0x50], r13
0x000042e7      4983c703       add r15, 3
0x000042eb      31c0           xor eax, eax
0x000042ed      448864247c     mov byte [rsp + 0x7c], r12b
0x000042f2      4531c0         xor r8d, r8d
0x000042f5      4989d5         mov r13, rdx
0x000042f8      bb27000000     mov ebx, 0x27                           ; '''
0x000042fd      e917faffff     jmp 0x3d19
0x00004302      660f1f440000   nop word [rax + rax]
0x00004308      f644247804     test byte [rsp + 0x78], 4
0x0000430d      7421           je 0x4330
0x0000430f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004313      4c39d9         cmp rcx, r11
0x00004316      7318           jae 0x4330
0x00004318      488b442410     mov rax, qword [rsp + 0x10]
0x0000431d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004322      0f848a070000   je 0x4ab2
0x00004328      0f1f84000000.  nop dword [rax + rax]
0x00004330      31d2           xor edx, edx
0x00004332      4531e4         xor r12d, r12d
0x00004335      31c0           xor eax, eax
0x00004337      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000433c      e9a7f9ffff     jmp 0x3ce8
0x00004341      0f1f80000000.  nop dword [rax]
0x00004348      807c240f00     cmp byte [rsp + 0xf], 0
0x0000434d      0f851d080000   jne 0x4b70
0x00004353      4531e4         xor r12d, r12d
0x00004356      31c0           xor eax, eax
0x00004358      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000435d      e9b7f9ffff     jmp 0x3d19                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004362      660f1f440000   nop word [rax + rax]
0x00004368      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004370      4983fbff       cmp r11, 0xffffffffffffffff
0x00004374      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004380      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004385      752d           jne 0x43b4
0x00004387      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000438c      4488442440     mov byte [rsp + 0x40], r8b
0x00004391      4488542438     mov byte [rsp + 0x38], r10b
0x00004396      4c894c2430     mov qword [rsp + 0x30], r9
0x0000439b      e870d6ffff     call sym.imp.strlen
0x000043a0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000043a6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000043ac      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000043af      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000043b4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000043bc      31c9           xor ecx, ecx
0x000043be      885c247e       mov byte [rsp + 0x7e], bl
0x000043c2      448844247d     mov byte [rsp + 0x7d], r8b
0x000043c7      4889cb         mov rbx, rcx
0x000043ca      4c898c248800.  mov qword [rsp + 0x88], r9
0x000043d2      4889442438     mov qword [rsp + 0x38], rax
0x000043d7      448854247f     mov byte [rsp + 0x7f], r10b
0x000043dc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000043e4      4c89742440     mov qword [rsp + 0x40], r14
0x000043e9      4c896c2470     mov qword [rsp + 0x70], r13
0x000043ee      4c895c2430     mov qword [rsp + 0x30], r11
0x000043f3      488b442410     mov rax, qword [rsp + 0x10]
0x000043f8      4c8d741d00     lea r14, [rbp + rbx]
0x000043fd      488b542430     mov rdx, qword [rsp + 0x30]
0x00004402      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004407      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000440c      4e8d2c30       lea r13, [rax + r14]
0x00004410      4c29f2         sub rdx, r14
0x00004413      4c89ee         mov rsi, r13
0x00004416      e835440000     call sym.rpl_mbrtowc
0x0000441b      4885c0         test rax, rax
0x0000441e      4989c7         mov r15, rax
0x00004421      744e           je 0x4471
0x00004423      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004427      0f8418060000   je 0x4a45
0x0000442d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004431      0f849a050000   je 0x49d1
0x00004437      837c240802     cmp dword [rsp + 8], 2
0x0000443c      0f94c0         sete al
0x0000443f      2244240f       and al, byte [rsp + 0xf]
0x00004443      0f8597010000   jne 0x45e0
0x00004449      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004450      e8bbd8ffff     call sym.imp.iswprint
0x00004455      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000445a      85c0           test eax, eax
0x0000445c      b800000000     mov eax, 0
0x00004461      440f44e0       cmove r12d, eax
0x00004465      4c01fb         add rbx, r15
0x00004468      e893d8ffff     call sym.imp.mbsinit
0x0000446d      85c0           test eax, eax
0x0000446f      7482           je 0x43f3
0x00004471      4489e2         mov edx, r12d
0x00004474      4889df         mov rdi, rbx
0x00004477      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000447d      83f201         xor edx, 1
0x00004480      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004485      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000448b      2254240d       and dl, byte [rsp + 0xd]
0x0000448f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004497      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000449c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000044a1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000044a6      4883ff01       cmp rdi, 1
0x000044aa      0f86fb050000   jbe 0x4aab
0x000044b0      4889f9         mov rcx, rdi
0x000044b3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000044b5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000044bb      4801e9         add rcx, rbp
0x000044be      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000044c3      e9b6000000     jmp 0x457e
0x000044c8      0f1f84000000.  nop dword [rax + rax]
0x000044d0      837c240802     cmp dword [rsp + 8], 2
0x000044d5      0f94c0         sete al
0x000044d8      4584c9         test r9b, r9b
0x000044db      0f85af040000   jne 0x4990
0x000044e1      4489c6         mov esi, r8d
0x000044e4      83f601         xor esi, 1
0x000044e7      4020f0         and al, sil
0x000044ea      742f           je 0x451b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000044ec      4d39fd         cmp r13, r15
0x000044ef      7605           jbe 0x44f6
0x000044f1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000044f6      498d7701       lea rsi, [r15 + 1]
0x000044fa      4939f5         cmp r13, rsi
0x000044fd      7606           jbe 0x4505                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000044ff      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004505      498d7702       lea rsi, [r15 + 2]
0x00004509      4939f5         cmp r13, rsi
0x0000450c      7606           jbe 0x4514
0x0000450e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004514      4983c703       add r15, 3
0x00004518      4189c0         mov r8d, eax
0x0000451b      4d39fd         cmp r13, r15
0x0000451e      7605           jbe 0x4525
0x00004520      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004525      498d4701       lea rax, [r15 + 1]
0x00004529      4939c5         cmp r13, rax
0x0000452c      760d           jbe 0x453b
0x0000452e      89d8           mov eax, ebx
0x00004530      c0e806         shr al, 6
0x00004533      83c030         add eax, 0x30
0x00004536      4388443e01     mov byte [r14 + r15 + 1], al
0x0000453b      498d4702       lea rax, [r15 + 2]
0x0000453f      4939c5         cmp r13, rax
0x00004542      7610           jbe 0x4554
0x00004544      89d8           mov eax, ebx
0x00004546      c0e803         shr al, 3
0x00004549      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000454c      83c030         add eax, 0x30
0x0000454f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004554      83e307         and ebx, 7
0x00004557      4883c501       add rbp, 1
0x0000455b      4983c703       add r15, 3
0x0000455f      83c330         add ebx, 0x30
0x00004562      4839cd         cmp rbp, rcx
0x00004565      0f83e5f7ffff   jae 0x3d50
0x0000456b      89d6           mov esi, edx
0x0000456d      4d39fd         cmp r13, r15
0x00004570      7604           jbe 0x4576
0x00004572      43881c3e       mov byte [r14 + r15], bl
0x00004576      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000457a      4983c701       add r15, 1
0x0000457e      84d2           test dl, dl
0x00004580      0f854affffff   jne 0x44d0
0x00004586      89f0           mov eax, esi
0x00004588      83f001         xor eax, 1
0x0000458b      4421c0         and eax, r8d
0x0000458e      4584d2         test r10b, r10b
0x00004591      740e           je 0x45a1
0x00004593      4d39fd         cmp r13, r15
0x00004596      7605           jbe 0x459d
0x00004598      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000459d      4983c701       add r15, 1
0x000045a1      4883c501       add rbp, 1
0x000045a5      4839cd         cmp rbp, rcx
0x000045a8      0f837ef7ffff   jae 0x3d2c
0x000045ae      84c0           test al, al
0x000045b0      0f84f8030000   je 0x49ae
0x000045b6      4d39fd         cmp r13, r15
0x000045b9      7605           jbe 0x45c0
0x000045bb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000045c0      498d4701       lea rax, [r15 + 1]
0x000045c4      4939c5         cmp r13, rax
0x000045c7      7606           jbe 0x45cf
0x000045c9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000045cf      4983c702       add r15, 2
0x000045d3      4531d2         xor r10d, r10d
0x000045d6      4531c0         xor r8d, r8d
0x000045d9      eb92           jmp 0x456d
0x000045db      0f1f440000     nop dword [rax + rax]
0x000045e0      4983ff01       cmp r15, 1
0x000045e4      0f845ffeffff   je 0x4449
0x000045ea      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000045ef      4a8d0c3f       lea rcx, [rdi + r15]
0x000045f3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000045f8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000045fc      eb0f           jmp 0x460d
0x000045fe      6690           nop
0x00004600      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004604      4939d0         cmp r8, rdx
0x00004607      0f843cfeffff   je 0x4449
0x0000460d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004610      83e95b         sub ecx, 0x5b
0x00004613      80f921         cmp cl, 0x21
0x00004616      77e8           ja 0x4600                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004618      be01000000     mov esi, 1
0x0000461d      48d3e6         shl rsi, cl
0x00004620      4889f1         mov rcx, rsi
0x00004623      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000462d      4885f1         test rcx, rsi
0x00004630      74ce           je 0x4600
0x00004632      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004637      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000463c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004641      c74424080200.  mov dword [rsp + 8], 2
0x00004649      807c240d00     cmp byte [rsp + 0xd], 0
0x0000464e      7410           je 0x4660
0x00004650      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004652      b804000000     mov eax, 4
0x00004657      0f44442408     cmove eax, dword [rsp + 8]
0x0000465c      89442408       mov dword [rsp + 8], eax
0x00004660      4883ec08       sub rsp, 8
0x00004664      4889e9         mov rcx, rbp
0x00004667      4c89ee         mov rsi, r13
0x0000466a      ff742468       push qword [rsp + 0x68]
0x0000466e      ff742478       push qword [rsp + 0x78]
0x00004672      4c89f7         mov rdi, r14
0x00004675      6a00           push 0
0x00004677      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000467f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004684      488b542430     mov rdx, qword [rsp + 0x30]
0x00004689      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000468d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004692      4883c420       add rsp, 0x20
0x00004696      4989c7         mov r15, rax
0x00004699      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000046a1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000046aa      4c89f8         mov rax, r15
0x000046ad      0f8500060000   jne 0x4cb3
0x000046b3      4881c4b80000.  add rsp, 0xb8
0x000046ba      5b             pop rbx
0x000046bb      5d             pop rbp
0x000046bc      415c           pop r12
0x000046be      415d           pop r13
0x000046c0      415e           pop r14
0x000046c2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000046c4      c3             ret
0x000046c5      0f1f00         nop dword [rax]
0x000046c8      4c89dd         mov rbp, r11
0x000046cb      e979ffffff     jmp 0x4649
0x000046d0      4d39fd         cmp r13, r15
0x000046d3      7605           jbe 0x46da
0x000046d5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000046da      498d4701       lea rax, [r15 + 1]
0x000046de      4939c5         cmp r13, rax
0x000046e1      7606           jbe 0x46e9
0x000046e3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000046e9      498d4702       lea rax, [r15 + 2]
0x000046ed      4939c5         cmp r13, rax
0x000046f0      0f86ec050000   jbe 0x4ce2
0x000046f6      4c89ea         mov rdx, r13
0x000046f9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000046ff      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004704      e9d9fbffff     jmp 0x42e2
0x00004709      4489e0         mov eax, r12d
0x0000470c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004711      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004714      e900f6ffff     jmp 0x3d19                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004719      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000471f      e9c5f9ffff     jmp 0x40e9
0x00004724      85db           test ebx, ebx
0x00004726      0f8527f4ffff   jne 0x3b53
0x0000472c      c644240d01     mov byte [rsp + 0xd], 1
0x00004731      4d85ed         test r13, r13
0x00004734      0f8590050000   jne 0x4cca
0x0000473a      488d05e46a00.  lea rax, [0x0000b225]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004741      48c744245000.  mov qword [rsp + 0x50], 0
0x0000474a      c644240e01     mov byte [rsp + 0xe], 1
0x0000474f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004754      4531e4         xor r12d, r12d
0x00004757      c644240f00     mov byte [rsp + 0xf], 0
0x0000475c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004765      4889442448     mov qword [rsp + 0x48], rax
0x0000476a      41bf01000000   mov r15d, 1
0x00004770      c74424080200.  mov dword [rsp + 8], 2
0x00004778      e916f4ffff     jmp 0x3b93                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000477d      0f1f00         nop dword [rax]
0x00004780      85db           test ebx, ebx
0x00004782      0f85f5030000   jne 0x4b7d
0x00004788      4d85ed         test r13, r13
0x0000478b      0f8425020000   je 0x49b6
0x00004791      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004795      c644240e01     mov byte [rsp + 0xe], 1
0x0000479a      4531e4         xor r12d, r12d
0x0000479d      c644247c00     mov byte [rsp + 0x7c], 0
0x000047a2      48c744245000.  mov qword [rsp + 0x50], 0
0x000047ab      488d05716a00.  lea rax, str.l______l                   ; 0xb223 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000047b2      c644240f00     mov byte [rsp + 0xf], 0
0x000047b7      c644240d01     mov byte [rsp + 0xd], 1
0x000047bc      48c744241801.  mov qword [rsp + 0x18], 1
0x000047c5      41bf01000000   mov r15d, 1
0x000047cb      4889442448     mov qword [rsp + 0x48], rax
0x000047d0      e9bef3ffff     jmp 0x3b93
0x000047d5      488d05476a00.  lea rax, str.l______l                   ; 0xb223 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000047dc      c644240e01     mov byte [rsp + 0xe], 1
0x000047e1      c644247c00     mov byte [rsp + 0x7c], 0
0x000047e6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000047e9      48c744245000.  mov qword [rsp + 0x50], 0
0x000047f2      c644240f01     mov byte [rsp + 0xf], 1
0x000047f7      c644240d01     mov byte [rsp + 0xd], 1
0x000047fc      48c744241801.  mov qword [rsp + 0x18], 1
0x00004805      4531ff         xor r15d, r15d
0x00004808      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000480d      c74424080500.  mov dword [rsp + 8], 5
0x00004815      e979f3ffff     jmp 0x3b93
0x0000481a      c644240e01     mov byte [rsp + 0xe], 1
0x0000481f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004824      4531e4         xor r12d, r12d
0x00004827      48c744245000.  mov qword [rsp + 0x50], 0
0x00004830      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004835      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004838      c644240d01     mov byte [rsp + 0xd], 1
0x0000483d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004846      48c744244800.  mov qword [rsp + 0x48], 0
0x0000484f      e93ff3ffff     jmp 0x3b93
0x00004854      837c24080a     cmp dword [rsp + 8], 0xa
0x00004859      7456           je 0x48b1
0x0000485b      488d35c56900.  lea rsi, [0x0000b227]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004862      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004864      ba05000000     mov edx, 5
0x00004869      e882d1ffff     call sym.imp.dcgettext
0x0000486e      4889c1         mov rcx, rax
0x00004871      4889442468     mov qword [rsp + 0x68], rax
0x00004876      488d05aa6900.  lea rax, [0x0000b227]                   ; "`"
0x0000487d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004880      0f8498030000   je 0x4c1e
0x00004886      488d35986900.  lea rsi, [0x0000b225]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000488d      31ff           xor edi, edi
0x0000488f      ba05000000     mov edx, 5
0x00004894      e857d1ffff     call sym.imp.dcgettext
0x00004899      4889c1         mov rcx, rax
0x0000489c      4889442460     mov qword [rsp + 0x60], rax
0x000048a1      488d057d6900.  lea rax, [0x0000b225]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000048a8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000048ab      0f8483030000   je 0x4c34
0x000048b1      4531ff         xor r15d, r15d
0x000048b4      85db           test ebx, ebx
0x000048b6      0f84c1010000   je 0x4a7d
0x000048bc      85db           test ebx, ebx
0x000048be      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000048c3      0f9544240f     setne byte [rsp + 0xf]
0x000048c8      4531e4         xor r12d, r12d
0x000048cb      4889df         mov rdi, rbx
0x000048ce      e83dd1ffff     call sym.imp.strlen
0x000048d3      48895c2448     mov qword [rsp + 0x48], rbx
0x000048d8      4889442418     mov qword [rsp + 0x18], rax
0x000048dd      c644240e01     mov byte [rsp + 0xe], 1
0x000048e2      c644247c00     mov byte [rsp + 0x7c], 0
0x000048e7      48c744245000.  mov qword [rsp + 0x50], 0
0x000048f0      c644240d01     mov byte [rsp + 0xd], 1
0x000048f5      e999f2ffff     jmp 0x3b93
0x000048fa      c644240e01     mov byte [rsp + 0xe], 1
0x000048ff      c644247c00     mov byte [rsp + 0x7c], 0
0x00004904      4531e4         xor r12d, r12d
0x00004907      48c744245000.  mov qword [rsp + 0x50], 0
0x00004910      c644240f00     mov byte [rsp + 0xf], 0
0x00004915      4531ff         xor r15d, r15d
0x00004918      c644240d00     mov byte [rsp + 0xd], 0
0x0000491d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004926      48c744244800.  mov qword [rsp + 0x48], 0
0x0000492f      e95ff2ffff     jmp 0x3b93
0x00004934      c644240e01     mov byte [rsp + 0xe], 1
0x00004939      c644247c00     mov byte [rsp + 0x7c], 0
0x0000493e      4531e4         xor r12d, r12d
0x00004941      48c744245000.  mov qword [rsp + 0x50], 0
0x0000494a      c644240f01     mov byte [rsp + 0xf], 1
0x0000494f      c644240d01     mov byte [rsp + 0xd], 1
0x00004954      e91af2ffff     jmp 0x3b73
0x00004959      4d39fd         cmp r13, r15
0x0000495c      7605           jbe 0x4963
0x0000495e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004963      488d4102       lea rax, [rcx + 2]
0x00004967      4939c5         cmp r13, rax
0x0000496a      7606           jbe 0x4972
0x0000496c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004972      4489e0         mov eax, r12d
0x00004975      4c8d7903       lea r15, [rcx + 3]
0x00004979      4531e4         xor r12d, r12d
0x0000497c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004981      e962f3ffff     jmp 0x3ce8
0x00004986      662e0f1f8400.  nop word cs:[rax + rax]
0x00004990      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004995      4c89dd         mov rbp, r11
0x00004998      885c240d       mov byte [rsp + 0xd], bl
0x0000499c      e9a8fcffff     jmp 0x4649
0x000049a1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000049a6      4531e4         xor r12d, r12d
0x000049a9      e902fbffff     jmp 0x44b0
0x000049ae      4531d2         xor r10d, r10d
0x000049b1      e9b7fbffff     jmp 0x456d
0x000049b6      48c744245000.  mov qword [rsp + 0x50], 0
0x000049bf      c644240e01     mov byte [rsp + 0xe], 1
0x000049c4      4531e4         xor r12d, r12d
0x000049c7      c644247c00     mov byte [rsp + 0x7c], 0
0x000049cc      e9dafdffff     jmp 0x47ab
0x000049d1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000049d6      4c89f6         mov rsi, r14
0x000049d9      4c89e9         mov rcx, r13
0x000049dc      4889d8         mov rax, rbx
0x000049df      4889df         mov rdi, rbx
0x000049e2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000049e8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000049ed      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000049f5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000049f8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000049fe      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004a06      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004a0b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004a10      7326           jae 0x4a38
0x00004a12      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004a15      7510           jne 0x4a27
0x00004a17      eb1f           jmp 0x4a38
0x00004a19      0f1f80000000.  nop dword [rax]
0x00004a20      41803c0100     cmp byte [r9 + rax], 0
0x00004a25      740e           je 0x4a35
0x00004a27      4883c001       add rax, 1
0x00004a2b      488d540500     lea rdx, [rbp + rax]
0x00004a30      4939d3         cmp r11, rdx
0x00004a33      77eb           ja 0x4a20
0x00004a35      4889c7         mov rdi, rax
0x00004a38      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004a3d      4531e4         xor r12d, r12d
0x00004a40      e961faffff     jmp 0x44a6
0x00004a45      4889df         mov rdi, rbx
0x00004a48      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004a4e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004a53      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004a59      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004a61      4531e4         xor r12d, r12d
0x00004a64      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004a69      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004a6e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004a73      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004a78      e929faffff     jmp 0x44a6
0x00004a7d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004a82      0fb602         movzx eax, byte [rdx]
0x00004a85      84c0           test al, al
0x00004a87      0f842ffeffff   je 0x48bc
0x00004a8d      0f1f00         nop dword [rax]
0x00004a90      4d39fd         cmp r13, r15
0x00004a93      7604           jbe 0x4a99
0x00004a95      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004a99      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00004a9d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004aa2      84c0           test al, al
0x00004aa4      75ea           jne 0x4a90
0x00004aa6      e911feffff     jmp 0x48bc
0x00004aab      89d0           mov eax, edx
0x00004aad      e955f5ffff     jmp 0x4007
0x00004ab2      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004ab6      80fb3e         cmp bl, 0x3e
0x00004ab9      0f8771f8ffff   ja 0x4330
0x00004abf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004ac9      480fa3d8       bt rax, rbx
0x00004acd      0f835df8ffff   jae 0x4330
0x00004ad3      807c240f00     cmp byte [rsp + 0xf], 0
0x00004ad8      0f85e4010000   jne 0x4cc2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00004ade      4d39fd         cmp r13, r15
0x00004ae1      7605           jbe 0x4ae8
0x00004ae3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004ae8      498d4701       lea rax, [r15 + 1]
0x00004aec      4939c5         cmp r13, rax
0x00004aef      7606           jbe 0x4af7
0x00004af1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004af7      498d4702       lea rax, [r15 + 2]
0x00004afb      4939c5         cmp r13, rax
0x00004afe      7606           jbe 0x4b06
0x00004b00      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004b06      498d4703       lea rax, [r15 + 3]
0x00004b0a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00004b0d      7606           jbe 0x4b15
0x00004b0f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004b15      4983c704       add r15, 4
0x00004b19      31d2           xor edx, edx
0x00004b1b      4531e4         xor r12d, r12d
0x00004b1e      31c0           xor eax, eax
0x00004b20      4889cd         mov rbp, rcx
0x00004b23      e9c0f1ffff     jmp 0x3ce8
0x00004b28      85db           test ebx, ebx
0x00004b2a      0f8488010000   je 0x4cb8
0x00004b30      488d05ee6600.  lea rax, [0x0000b225]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004b37      c644240e01     mov byte [rsp + 0xe], 1
0x00004b3c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004b41      4531e4         xor r12d, r12d
0x00004b44      48c744245000.  mov qword [rsp + 0x50], 0
0x00004b4d      c644240f01     mov byte [rsp + 0xf], 1
0x00004b52      c644240d00     mov byte [rsp + 0xd], 0
0x00004b57      48c744241801.  mov qword [rsp + 0x18], 1
0x00004b60      4531ff         xor r15d, r15d
0x00004b63      4889442448     mov qword [rsp + 0x48], rax
0x00004b68      e926f0ffff     jmp 0x3b93
0x00004b6d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004b70      4c89dd         mov rbp, r11
0x00004b73      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004b78      e9ccfaffff     jmp 0x4649
0x00004b7d      488d059f6600.  lea rax, str.l______l                   ; 0xb223 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004b84      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004b89      c644247c00     mov byte [rsp + 0x7c], 0
0x00004b8e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004b91      48c744245000.  mov qword [rsp + 0x50], 0
0x00004b9a      c644240f01     mov byte [rsp + 0xf], 1
0x00004b9f      c644240d01     mov byte [rsp + 0xd], 1
0x00004ba4      48c744241801.  mov qword [rsp + 0x18], 1
0x00004bad      4531ff         xor r15d, r15d
0x00004bb0      4889442448     mov qword [rsp + 0x48], rax
0x00004bb5      e9d9efffff     jmp 0x3b93
0x00004bba      89d0           mov eax, edx
0x00004bbc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004bc1      4885db         test rbx, rbx
0x00004bc4      742c           je 0x4bf2
0x00004bc6      84c0           test al, al
0x00004bc8      7428           je 0x4bf2
0x00004bca      0fb60b         movzx ecx, byte [rbx]
0x00004bcd      4889d8         mov rax, rbx
0x00004bd0      84c9           test cl, cl
0x00004bd2      741e           je 0x4bf2
0x00004bd4      4c89fa         mov rdx, r15
0x00004bd7      4c29f8         sub rax, r15
0x00004bda      4939d5         cmp r13, rdx
0x00004bdd      7604           jbe 0x4be3
0x00004bdf      41880c16       mov byte [r14 + rdx], cl
0x00004be3      4883c201       add rdx, 1
0x00004be7      0fb60c10       movzx ecx, byte [rax + rdx]
0x00004beb      84c9           test cl, cl
0x00004bed      75eb           jne 0x4bda
0x00004bef      4989d7         mov r15, rdx
0x00004bf2      4d39fd         cmp r13, r15
0x00004bf5      0f869efaffff   jbe 0x4699
0x00004bfb      43c6043e00     mov byte [r14 + r15], 0
0x00004c00      e994faffff     jmp 0x4699
0x00004c05      837c240802     cmp dword [rsp + 8], 2
0x00004c0a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004c0f      4c89dd         mov rbp, r11
0x00004c12      0f94c0         sete al
0x00004c15      885c240d       mov byte [rsp + 0xd], bl
0x00004c19      e92bfaffff     jmp 0x4649
0x00004c1e      8b742408       mov esi, dword [rsp + 8]
0x00004c22      4889cf         mov rdi, rcx
0x00004c25      e8a6edffff     call sym.gettext_quote.part.1
0x00004c2a      4889442468     mov qword [rsp + 0x68], rax
0x00004c2f      e952fcffff     jmp 0x4886
0x00004c34      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004c38      4889cf         mov rdi, rcx
0x00004c3b      e890edffff     call sym.gettext_quote.part.1
0x00004c40      4889442460     mov qword [rsp + 0x60], rax
0x00004c45      e967fcffff     jmp 0x48b1
0x00004c4a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004c4f      4c89dd         mov rbp, r11
0x00004c52      89d0           mov eax, edx
0x00004c54      885c240d       mov byte [rsp + 0xd], bl
0x00004c58      e9ecf9ffff     jmp 0x4649
0x00004c5d      4883ec08       sub rsp, 8
0x00004c61      41b805000000   mov r8d, 5
0x00004c67      4c89d9         mov rcx, r11
0x00004c6a      ff742468       push qword [rsp + 0x68]
0x00004c6e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004c72      4c89f7         mov rdi, r14
0x00004c75      ff742438       push qword [rsp + 0x38]
0x00004c79      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004c81      488b542430     mov rdx, qword [rsp + 0x30]
0x00004c86      488b742470     mov rsi, qword [rsp + 0x70]
0x00004c8b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004c90      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004c94      4989c7         mov r15, rax
0x00004c97      e9fdf9ffff     jmp 0x4699
0x00004c9c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004ca1      e916ffffff     jmp 0x4bbc
0x00004ca6      c74424080200.  mov dword [rsp + 8], 2
0x00004cae      e996f9ffff     jmp 0x4649
0x00004cb3      e888cdffff     call sym.imp.__stack_chk_fail
0x00004cb8      c644240d00     mov byte [rsp + 0xd], 0
0x00004cbd      e96ffaffff     jmp 0x4731
0x00004cc2      4c89dd         mov rbp, r11
0x00004cc5      e996f9ffff     jmp 0x4660
0x00004cca      c644240e01     mov byte [rsp + 0xe], 1
0x00004ccf      31c0           xor eax, eax
0x00004cd1      4531e4         xor r12d, r12d
0x00004cd4      48c744245000.  mov qword [rsp + 0x50], 0
0x00004cdd      e9a2f5ffff     jmp 0x4284
0x00004ce2      4c89ea         mov rdx, r13
0x00004ce5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004cea      e9f3f5ffff     jmp 0x42e2
0x00004cef      e82cccffff     call sym.imp.abort
0x00004cf4      6690           nop
0x00004cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004d00      4157           push r15
0x00004d02      4156           push r14
0x00004d04      4c63ff         movsxd r15, edi
0x00004d07      4155           push r13
0x00004d09      4154           push r12
0x00004d0b      4989d6         mov r14, rdx
0x00004d0e      55             push rbp
0x00004d0f      53             push rbx
0x00004d10      4889cd         mov rbp, rcx
0x00004d13      4883ec28       sub rsp, 0x28
0x00004d17      4889742408     mov qword [rsp + 8], rsi
0x00004d1c      e80fccffff     call sym.imp.__errno_location
0x00004d21      4989c5         mov r13, rax
0x00004d24      8b00           mov eax, dword [rax]
0x00004d26      4585ff         test r15d, r15d
0x00004d29      488b1d309320.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x00004d30      89442418       mov dword [rsp + 0x18], eax
0x00004d34      0f8867010000   js 0x4ea1
0x00004d3a      44393d179320.  cmp dword [obj.nslots], r15d            ; [0x20e058:4]=1
0x00004d41      7f62           jg 0x4da5
0x00004d43      4181ffffffff.  cmp r15d, 0x7fffffff
0x00004d4a      0f8456010000   je 0x4ea6
0x00004d50      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004d54      488d05159320.  lea rax, obj.slotvec0                   ; 0x20e070
0x00004d5b      4963f4         movsxd rsi, r12d
0x00004d5e      48c1e604       shl rsi, 4
0x00004d62      4839c3         cmp rbx, rax
0x00004d65      0f8415010000   je 0x4e80
0x00004d6b      4889df         mov rdi, rbx
0x00004d6e      e8ed0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004d73      4889c3         mov rbx, rax
0x00004d76      488905e39220.  mov qword [obj.slotvec], rax            ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x00004d7d      48633dd49220.  movsxd rdi, dword [obj.nslots]          ; [0x20e058:4]=1
0x00004d84      4489e2         mov edx, r12d
0x00004d87      31f6           xor esi, esi
0x00004d89      29fa           sub edx, edi
0x00004d8b      48c1e704       shl rdi, 4
0x00004d8f      4863d2         movsxd rdx, edx
0x00004d92      4801df         add rdi, rbx
0x00004d95      48c1e204       shl rdx, 4
0x00004d99      e832cdffff     call sym.imp.memset
0x00004d9e      448925b39220.  mov dword [obj.nslots], r12d            ; [0x20e058:4]=1
0x00004da5      8b4504         mov eax, dword [rbp + 4]
0x00004da8      49c1e704       shl r15, 4
0x00004dac      4883ec08       sub rsp, 8
0x00004db0      4c01fb         add rbx, r15
0x00004db3      4c8d7d08       lea r15, [rbp + 8]
0x00004db7      448b4500       mov r8d, dword [rbp]
0x00004dbb      4c8b1b         mov r11, qword [rbx]
0x00004dbe      4c8b6308       mov r12, qword [rbx + 8]
0x00004dc2      4c89f1         mov rcx, r14
0x00004dc5      83c801         or eax, 1
0x00004dc8      89442424       mov dword [rsp + 0x24], eax
0x00004dcc      ff7530         push qword [rbp + 0x30]
0x00004dcf      4189c1         mov r9d, eax
0x00004dd2      ff7528         push qword [rbp + 0x28]
0x00004dd5      4157           push r15
0x00004dd7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004dda      488b542428     mov rdx, qword [rsp + 0x28]
0x00004ddf      4c89e7         mov rdi, r12
0x00004de2      4c895c2430     mov qword [rsp + 0x30], r11
0x00004de7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00004dec      4883c420       add rsp, 0x20
0x00004df0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004df5      4939c3         cmp r11, rax
0x00004df8      7767           ja 0x4e61
0x00004dfa      488d7001       lea rsi, [rax + 1]
0x00004dfe      488d05fb9220.  lea rax, obj.slot0                      ; 0x20e100
0x00004e05      4939c4         cmp r12, rax
0x00004e08      488933         mov qword [rbx], rsi
0x00004e0b      7412           je 0x4e1f
0x00004e0d      4c89e7         mov rdi, r12
0x00004e10      4889742410     mov qword [rsp + 0x10], rsi
0x00004e15      e816cfffff     call sym..plt.got
0x00004e1a      488b742410     mov rsi, qword [rsp + 0x10]
0x00004e1f      4889f7         mov rdi, rsi
0x00004e22      4889742410     mov qword [rsp + 0x10], rsi
0x00004e27      e8d40e0000     call sym.xmalloc
0x00004e2c      4883ec08       sub rsp, 8
0x00004e30      48894308       mov qword [rbx + 8], rax
0x00004e34      448b4500       mov r8d, dword [rbp]
0x00004e38      ff7530         push qword [rbp + 0x30]
0x00004e3b      ff7528         push qword [rbp + 0x28]
0x00004e3e      4c89f1         mov rcx, r14
0x00004e41      4157           push r15
0x00004e43      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004e48      4889c7         mov rdi, rax
0x00004e4b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004e50      488b742430     mov rsi, qword [rsp + 0x30]
0x00004e55      4989c4         mov r12, rax
0x00004e58      e863ecffff     call sym.quotearg_buffer_restyled
0x00004e5d      4883c420       add rsp, 0x20
0x00004e61      8b442418       mov eax, dword [rsp + 0x18]
0x00004e65      41894500       mov dword [r13], eax
0x00004e69      4883c428       add rsp, 0x28
0x00004e6d      4c89e0         mov rax, r12
0x00004e70      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004e71      5d             pop rbp
0x00004e72      415c           pop r12
0x00004e74      415d           pop r13
0x00004e76      415e           pop r14
0x00004e78      415f           pop r15
0x00004e7a      c3             ret
0x00004e7b      0f1f440000     nop dword [rax + rax]
0x00004e80      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004e82      e8d90e0000     call sym.xrealloc
0x00004e87      660f6f05e191.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00004e8f      4889c3         mov rbx, rax
0x00004e92      488905c79120.  mov qword [obj.slotvec], rax            ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x00004e99      0f1100         movups xmmword [rax], xmm0
0x00004e9c      e9dcfeffff     jmp 0x4d7d
0x00004ea1      e87acaffff     call sym.imp.abort
0x00004ea6      e8a5100000     call sym.xalloc_die
0x00004eab      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004eb0      4154           push r12
0x00004eb2      55             push rbp
0x00004eb3      53             push rbx
0x00004eb4      4889fb         mov rbx, rdi
0x00004eb7      e874caffff     call sym.imp.__errno_location
0x00004ebc      448b20         mov r12d, dword [rax]
0x00004ebf      4889c5         mov rbp, rax
0x00004ec2      488d05379320.  lea rax, obj.default_quoting_options    ; 0x20e200
0x00004ec9      4885db         test rbx, rbx
0x00004ecc      be38000000     mov esi, 0x38                           ; '8'
0x00004ed1      480f44d8       cmove rbx, rax
0x00004ed5      4889df         mov rdi, rbx
0x00004ed8      e823100000     call sym.xmemdup
0x00004edd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004ee1      5b             pop rbx
0x00004ee2      5d             pop rbp
0x00004ee3      415c           pop r12
0x00004ee5      c3             ret
0x00004ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004ef0      488d05099320.  lea rax, obj.default_quoting_options    ; 0x20e200
0x00004ef7      4885ff         test rdi, rdi
0x00004efa      480f44f8       cmove rdi, rax
0x00004efe      8b07           mov eax, dword [rdi]
0x00004f00      c3             ret
0x00004f01      0f1f440000     nop dword [rax + rax]
0x00004f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004f10      488d05e99220.  lea rax, obj.default_quoting_options    ; 0x20e200
0x00004f17      4885ff         test rdi, rdi
0x00004f1a      480f44f8       cmove rdi, rax
0x00004f1e      8937           mov dword [rdi], esi
0x00004f20      c3             ret
0x00004f21      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004f30      488d05c99220.  lea rax, obj.default_quoting_options    ; 0x20e200
0x00004f37      4885ff         test rdi, rdi
0x00004f3a      89f1           mov ecx, esi
0x00004f3c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004f40      89f0           mov eax, esi
0x00004f42      83e11f         and ecx, 0x1f
0x00004f45      c0e805         shr al, 5
0x00004f48      0fb6c0         movzx eax, al
0x00004f4b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004f50      8b37           mov esi, dword [rdi]
0x00004f52      89f0           mov eax, esi
0x00004f54      d3e8           shr eax, cl
0x00004f56      31c2           xor edx, eax
0x00004f58      83e001         and eax, 1
0x00004f5b      83e201         and edx, 1
0x00004f5e      d3e2           shl edx, cl
0x00004f60      31f2           xor edx, esi
0x00004f62      8917           mov dword [rdi], edx
0x00004f64      c3             ret
0x00004f65      90             nop
0x00004f66      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004f70      488d05899220.  lea rax, obj.default_quoting_options    ; 0x20e200
0x00004f77      4885ff         test rdi, rdi
0x00004f7a      480f44f8       cmove rdi, rax
0x00004f7e      8b4704         mov eax, dword [rdi + 4]
0x00004f81      897704         mov dword [rdi + 4], esi
0x00004f84      c3             ret
0x00004f85      90             nop
0x00004f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004f90      488d05699220.  lea rax, obj.default_quoting_options    ; 0x20e200
0x00004f97      4885ff         test rdi, rdi
0x00004f9a      480f44f8       cmove rdi, rax
0x00004f9e      4885f6         test rsi, rsi
0x00004fa1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004fa7      740e           je 0x4fb7
0x00004fa9      4885d2         test rdx, rdx
0x00004fac      7409           je 0x4fb7
0x00004fae      48897728       mov qword [rdi + 0x28], rsi
0x00004fb2      48895730       mov qword [rdi + 0x30], rdx
0x00004fb6      c3             ret
0x00004fb7      4883ec08       sub rsp, 8
0x00004fbb      e860c9ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004fc0      4157           push r15
0x00004fc2      4156           push r14
0x00004fc4      488d05359220.  lea rax, obj.default_quoting_options    ; 0x20e200
0x00004fcb      4155           push r13
0x00004fcd      4154           push r12
0x00004fcf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004fd2      55             push rbp
0x00004fd3      53             push rbx
0x00004fd4      4c89c3         mov rbx, r8
0x00004fd7      4989f6         mov r14, rsi
0x00004fda      4989d7         mov r15, rdx
0x00004fdd      4883ec18       sub rsp, 0x18
0x00004fe1      4d85c0         test r8, r8
0x00004fe4      480f44d8       cmove rbx, rax
0x00004fe8      48894c2408     mov qword [rsp + 8], rcx
0x00004fed      e83ec9ffff     call sym.imp.__errno_location
0x00004ff2      448b20         mov r12d, dword [rax]
0x00004ff5      4889c5         mov rbp, rax
0x00004ff8      488d4308       lea rax, [rbx + 8]
0x00004ffc      4883ec08       sub rsp, 8
0x00005000      448b4b04       mov r9d, dword [rbx + 4]
0x00005004      ff7330         push qword [rbx + 0x30]
0x00005007      448b03         mov r8d, dword [rbx]
0x0000500a      ff7328         push qword [rbx + 0x28]
0x0000500d      4c89fa         mov rdx, r15
0x00005010      50             push rax
0x00005011      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005016      4c89f6         mov rsi, r14
0x00005019      4c89ef         mov rdi, r13
0x0000501c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005021      44896500       mov dword [rbp], r12d
0x00005025      4883c438       add rsp, 0x38
0x00005029      5b             pop rbx
0x0000502a      5d             pop rbp
0x0000502b      415c           pop r12
0x0000502d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000502f      415e           pop r14
0x00005031      415f           pop r15
0x00005033      c3             ret
0x00005034      6690           nop
0x00005036      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005040      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005042      4156           push r14
0x00005044      488d05b59120.  lea rax, obj.default_quoting_options    ; 0x20e200
0x0000504b      4155           push r13
0x0000504d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000504f      4989d4         mov r12, rdx
0x00005052      55             push rbp
0x00005053      53             push rbx
0x00005054      4889cb         mov rbx, rcx
0x00005057      4989fe         mov r14, rdi
0x0000505a      4989f7         mov r15, rsi
0x0000505d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005061      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005064      480f44d8       cmove rbx, rax
0x00005068      31ed           xor ebp, ebp
0x0000506a      e8c1c8ffff     call sym.imp.__errno_location
0x0000506f      4d85e4         test r12, r12
0x00005072      4989c5         mov r13, rax
0x00005075      8b00           mov eax, dword [rax]
0x00005077      400f94c5       sete bpl
0x0000507b      0b6b04         or ebp, dword [rbx + 4]
0x0000507e      4c8d5308       lea r10, [rbx + 8]
0x00005082      4883ec08       sub rsp, 8
0x00005086      448b03         mov r8d, dword [rbx]
0x00005089      4c89f9         mov rcx, r15
0x0000508c      89442414       mov dword [rsp + 0x14], eax
0x00005090      ff7330         push qword [rbx + 0x30]
0x00005093      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005096      ff7328         push qword [rbx + 0x28]
0x00005099      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000509b      31f6           xor esi, esi
0x0000509d      4189e9         mov r9d, ebp
0x000050a0      31ff           xor edi, edi
0x000050a2      4c89542440     mov qword [rsp + 0x40], r10
0x000050a7      e814eaffff     call sym.quotearg_buffer_restyled
0x000050ac      488d7001       lea rsi, [rax + 1]
0x000050b0      4889442448     mov qword [rsp + 0x48], rax
0x000050b5      4883c420       add rsp, 0x20
0x000050b9      4889f7         mov rdi, rsi
0x000050bc      4889742418     mov qword [rsp + 0x18], rsi
0x000050c1      e83a0c0000     call sym.xmalloc
0x000050c6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000050cb      4883ec08       sub rsp, 8
0x000050cf      ff7330         push qword [rbx + 0x30]
0x000050d2      ff7328         push qword [rbx + 0x28]
0x000050d5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000050da      4189e9         mov r9d, ebp
0x000050dd      448b03         mov r8d, dword [rbx]
0x000050e0      4c89f9         mov rcx, r15
0x000050e3      4c89f2         mov rdx, r14
0x000050e6      4889c7         mov rdi, rax
0x000050e9      4152           push r10
0x000050eb      488b742438     mov rsi, qword [rsp + 0x38]
0x000050f0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000050f5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000050f9      4883c420       add rsp, 0x20
0x000050fd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005100      41894500       mov dword [r13], eax
0x00005104      7409           je 0x510f
0x00005106      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000510b      4d891c24       mov qword [r12], r11
0x0000510f      488b442410     mov rax, qword [rsp + 0x10]
0x00005114      4883c438       add rsp, 0x38
0x00005118      5b             pop rbx
0x00005119      5d             pop rbp
0x0000511a      415c           pop r12
0x0000511c      415d           pop r13
0x0000511e      415e           pop r14
0x00005120      415f           pop r15
0x00005122      c3             ret
0x00005123      0f1f00         nop dword [rax]
0x00005126      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005130      4889d1         mov rcx, rdx
0x00005133      31d2           xor edx, edx
0x00005135      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000513a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005140      8b05128f2000   mov eax, dword [obj.nslots]             ; [0x20e058:4]=1
0x00005146      4154           push r12
0x00005148      4c8b25118f20.  mov r12, qword [obj.slotvec]            ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x0000514f      55             push rbp
0x00005150      53             push rbx
0x00005151      83f801         cmp eax, 1
0x00005154      7e2b           jle 0x5181                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005156      83e802         sub eax, 2
0x00005159      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000515e      48c1e004       shl rax, 4
0x00005162      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005167      660f1f840000.  nop word [rax + rax]
0x00005170      488b3b         mov rdi, qword [rbx]
0x00005173      4883c310       add rbx, 0x10
0x00005177      e8b4cbffff     call sym..plt.got
0x0000517c      4839eb         cmp rbx, rbp
0x0000517f      75ef           jne 0x5170
0x00005181      498b7c2408     mov rdi, qword [r12 + 8]
0x00005186      488d1d738f20.  lea rbx, obj.slot0                      ; 0x20e100
0x0000518d      4839df         cmp rdi, rbx
0x00005190      7417           je 0x51a9
0x00005192      e899cbffff     call sym..plt.got
0x00005197      48c705ce8e20.  mov qword [obj.slotvec0], 0x100         ; [0x20e070:8]=256
0x000051a2      48891dcf8e20.  mov qword [0x0020e078], rbx             ; [0x20e078:8]=0x20e100 obj.slot0
0x000051a9      488d1dc08e20.  lea rbx, obj.slotvec0                   ; 0x20e070
0x000051b0      4939dc         cmp r12, rbx
0x000051b3      740f           je 0x51c4
0x000051b5      4c89e7         mov rdi, r12
0x000051b8      e873cbffff     call sym..plt.got
0x000051bd      48891d9c8e20.  mov qword [obj.slotvec], rbx            ; [0x20e060:8]=0x20e070 obj.slotvec0 ; "p\xe0 "
0x000051c4      5b             pop rbx
0x000051c5      c705898e2000.  mov dword [obj.nslots], 1               ; [0x20e058:4]=1
0x000051cf      5d             pop rbp
0x000051d0      415c           pop r12
0x000051d2      c3             ret
0x000051d3      0f1f00         nop dword [rax]
0x000051d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000051e0      488d0d199020.  lea rcx, obj.default_quoting_options    ; 0x20e200
0x000051e7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000051ee      e90dfbffff     jmp sym.quotearg_n_options
0x000051f3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000051f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005200      488d0df98f20.  lea rcx, obj.default_quoting_options    ; 0x20e200
0x00005207      e9f4faffff     jmp sym.quotearg_n_options
0x0000520c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005210      488d0de98f20.  lea rcx, obj.default_quoting_options    ; 0x20e200
0x00005217      4889fe         mov rsi, rdi
0x0000521a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005221      31ff           xor edi, edi
0x00005223      e9d8faffff     jmp sym.quotearg_n_options
0x00005228      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005230      488d0dc98f20.  lea rcx, obj.default_quoting_options    ; 0x20e200
0x00005237      4889f2         mov rdx, rsi
0x0000523a      4889fe         mov rsi, rdi
0x0000523d      31ff           xor edi, edi
0x0000523f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005244      6690           nop
0x00005246      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005250      4883ec48       sub rsp, 0x48
0x00005254      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005257      64488b142528.  mov rdx, qword fs:[0x28]
0x00005260      4889542438     mov qword [rsp + 0x38], rdx
0x00005265      31d2           xor edx, edx
0x00005267      83fe0a         cmp esi, 0xa
0x0000526a      7468           je 0x52d4
0x0000526c      893424         mov dword [rsp], esi
0x0000526f      4889e1         mov rcx, rsp
0x00005272      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005279      4889c6         mov rsi, rax
0x0000527c      48c744240400.  mov qword [rsp + 4], 0
0x00005285      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000528e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005297      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000052a0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000052a9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000052b2      c74424340000.  mov dword [rsp + 0x34], 0
0x000052ba      e841faffff     call sym.quotearg_n_options
0x000052bf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000052c4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000052cd      750a           jne 0x52d9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000052cf      4883c448       add rsp, 0x48
0x000052d3      c3             ret
0x000052d4      e847c6ffff     call sym.imp.abort
0x000052d9      e862c7ffff     call sym.imp.__stack_chk_fail
0x000052de      6690           nop
;-- quotearg_n_style_mem:
0x000052e0      4883ec48       sub rsp, 0x48
0x000052e4      4889d0         mov rax, rdx
0x000052e7      4889ca         mov rdx, rcx
0x000052ea      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000052f3      48894c2438     mov qword [rsp + 0x38], rcx
0x000052f8      31c9           xor ecx, ecx
0x000052fa      83fe0a         cmp esi, 0xa
0x000052fd      7461           je 0x5360
0x000052ff      893424         mov dword [rsp], esi
0x00005302      4889e1         mov rcx, rsp
0x00005305      4889c6         mov rsi, rax
0x00005308      48c744240400.  mov qword [rsp + 4], 0
0x00005311      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000531a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005323      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000532c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005335      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000533e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005346      e8b5f9ffff     call sym.quotearg_n_options
0x0000534b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005350      644833142528.  xor rdx, qword fs:[0x28]
0x00005359      750a           jne 0x5365
0x0000535b      4883c448       add rsp, 0x48
0x0000535f      c3             ret
0x00005360      e8bbc5ffff     call sym.imp.abort
0x00005365      e8d6c6ffff     call sym.imp.__stack_chk_fail
0x0000536a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005370      4889f2         mov rdx, rsi
0x00005373      89fe           mov esi, edi
0x00005375      31ff           xor edi, edi
0x00005377      e9d4feffff     jmp sym.quotearg_n_style
0x0000537c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005380      4889d1         mov rcx, rdx
0x00005383      4889f2         mov rdx, rsi
0x00005386      89fe           mov esi, edi
0x00005388      31ff           xor edi, edi
0x0000538a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000538f      90             nop
;-- quotearg_char_mem:
0x00005390      4883ec48       sub rsp, 0x48
0x00005394      89d1           mov ecx, edx
0x00005396      64488b042528.  mov rax, qword fs:[0x28]
0x0000539f      4889442438     mov qword [rsp + 0x38], rax
0x000053a4      31c0           xor eax, eax
0x000053a6      488b05838e20.  mov rax, qword [0x0020e230]             ; [0x20e230:8]=0
0x000053ad      4989e0         mov r8, rsp
0x000053b0      83e11f         and ecx, 0x1f
0x000053b3      660f6f05458e.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000053bb      4889442430     mov qword [rsp + 0x30], rax
0x000053c0      89d0           mov eax, edx
0x000053c2      0f290424       movaps xmmword [rsp], xmm0
0x000053c6      c0e805         shr al, 5
0x000053c9      0fb6c0         movzx eax, al
0x000053cc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000053d1      660f6f05378e.  movdqa xmm0, xmmword [0x0020e210]
0x000053d9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000053de      660f6f053a8e.  movdqa xmm0, xmmword [0x0020e220]
0x000053e6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000053eb      418b11         mov edx, dword [r9]
0x000053ee      89d0           mov eax, edx
0x000053f0      d3e8           shr eax, cl
0x000053f2      f7d0           not eax
0x000053f4      83e001         and eax, 1
0x000053f7      d3e0           shl eax, cl
0x000053f9      4c89c1         mov rcx, r8
0x000053fc      31d0           xor eax, edx
0x000053fe      4889f2         mov rdx, rsi
0x00005401      4889fe         mov rsi, rdi
0x00005404      418901         mov dword [r9], eax
0x00005407      31ff           xor edi, edi
0x00005409      e8f2f8ffff     call sym.quotearg_n_options
0x0000540e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005413      644833342528.  xor rsi, qword fs:[0x28]
0x0000541c      7505           jne 0x5423
0x0000541e      4883c448       add rsp, 0x48
0x00005422      c3             ret
0x00005423      e818c6ffff     call sym.imp.__stack_chk_fail
0x00005428      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005430      400fbed6       movsx edx, sil
0x00005434      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000543b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005440      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005445      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000544c      e93fffffff     jmp sym.quotearg_char_mem
0x00005451      0f1f440000     nop dword [rax + rax]
0x00005456      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005460      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005465      e926ffffff     jmp sym.quotearg_char_mem
0x0000546a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005470      4883ec48       sub rsp, 0x48
0x00005474      4889d0         mov rax, rdx
0x00005477      64488b142528.  mov rdx, qword fs:[0x28]
0x00005480      4889542438     mov qword [rsp + 0x38], rdx
0x00005485      31d2           xor edx, edx
0x00005487      83fe0a         cmp esi, 0xa
0x0000548a      7468           je 0x54f4
0x0000548c      893424         mov dword [rsp], esi
0x0000548f      4889e1         mov rcx, rsp
0x00005492      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005499      4889c6         mov rsi, rax
0x0000549c      48c744240400.  mov qword [rsp + 4], 0
0x000054a5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000054ae      48c744241400.  mov qword [rsp + 0x14], 0
0x000054b7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000054c0      48c744242400.  mov qword [rsp + 0x24], 0
0x000054c9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000054d2      c74424340000.  mov dword [rsp + 0x34], 0
0x000054da      e821f8ffff     call sym.quotearg_n_options
0x000054df      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000054e4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000054ed      750a           jne 0x54f9
0x000054ef      4883c448       add rsp, 0x48
0x000054f3      c3             ret
0x000054f4      e827c4ffff     call sym.imp.abort
0x000054f9      e842c5ffff     call sym.imp.__stack_chk_fail
0x000054fe      6690           nop
;-- quotearg_n_custom_mem:
0x00005500      4883ec48       sub rsp, 0x48
0x00005504      4989c9         mov r9, rcx
0x00005507      488b0d228d20.  mov rcx, qword [0x0020e230]             ; [0x20e230:8]=0
0x0000550e      660f6f05ea8c.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005516      64488b042528.  mov rax, qword fs:[0x28]
0x0000551f      4889442438     mov qword [rsp + 0x38], rax
0x00005524      31c0           xor eax, eax
0x00005526      0f290424       movaps xmmword [rsp], xmm0
0x0000552a      4885f6         test rsi, rsi
0x0000552d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005532      c704240a0000.  mov dword [rsp], 0xa
0x00005539      660f6f05cf8c.  movdqa xmm0, xmmword [0x0020e210]
0x00005541      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005546      660f6f05d28c.  movdqa xmm0, xmmword [0x0020e220]
0x0000554e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005553      7432           je 0x5587
0x00005555      4885d2         test rdx, rdx
0x00005558      742d           je 0x5587
0x0000555a      4889742428     mov qword [rsp + 0x28], rsi
0x0000555f      4889542430     mov qword [rsp + 0x30], rdx
0x00005564      4889e1         mov rcx, rsp
0x00005567      4c89c2         mov rdx, r8
0x0000556a      4c89ce         mov rsi, r9
0x0000556d      e88ef7ffff     call sym.quotearg_n_options
0x00005572      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005577      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005580      750a           jne 0x558c
0x00005582      4883c448       add rsp, 0x48
0x00005586      c3             ret
0x00005587      e894c3ffff     call sym.imp.abort
0x0000558c      e8afc4ffff     call sym.imp.__stack_chk_fail
0x00005591      0f1f440000     nop dword [rax + rax]
0x00005596      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000055a0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000055a7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000055ac      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000055b0      4889d1         mov rcx, rdx
0x000055b3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000055ba      4889f2         mov rdx, rsi
0x000055bd      4889fe         mov rsi, rdi
0x000055c0      31ff           xor edi, edi
0x000055c2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000055c7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000055d0      4989c8         mov r8, rcx
0x000055d3      4889d1         mov rcx, rdx
0x000055d6      4889f2         mov rdx, rsi
0x000055d9      4889fe         mov rsi, rdi
0x000055dc      31ff           xor edi, edi
0x000055de      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000055e3      0f1f00         nop dword [rax]
0x000055e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000055f0      488d0d298a20.  lea rcx, obj.quote_quoting_options      ; 0x20e020
0x000055f7      e904f7ffff     jmp sym.quotearg_n_options
0x000055fc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005600      488d0d198a20.  lea rcx, obj.quote_quoting_options      ; 0x20e020
0x00005607      4889f2         mov rdx, rsi
0x0000560a      4889fe         mov rsi, rdi
0x0000560d      31ff           xor edi, edi
0x0000560f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005614      6690           nop
0x00005616      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005620      488d0df98920.  lea rcx, obj.quote_quoting_options      ; 0x20e020
0x00005627      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000562e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005633      0f1f00         nop dword [rax]
0x00005636      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005640      488d0dd98920.  lea rcx, obj.quote_quoting_options      ; 0x20e020
0x00005647      4889fe         mov rsi, rdi
0x0000564a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005651      31ff           xor edi, edi
0x00005653      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005658      0f1f84000000.  nop dword [rax + rax]
;-- get_root_dev_ino:
0x00005660      53             push rbx                                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005661      488d35a65b00.  lea rsi, [0x0000b20e]                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf); ; "/"
0x00005668      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x0000566b      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005670      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005677      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000567a      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005683      488984249800.  mov qword [rsp + 0x98], rax
0x0000568b      31c0           xor eax, eax
0x0000568d      e88ec3ffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005692      85c0           test eax, eax                           ; ../coreutils-8.31/lib/root-dev-ino.c:32
0x00005694      7532           jne 0x56c8
0x00005696      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/root-dev-ino.c:34
0x0000569b      488903         mov qword [rbx], rax
0x0000569e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/root-dev-ino.c:35
0x000056a2      48894308       mov qword [rbx + 8], rax
0x000056a6      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/root-dev-ino.c:36
0x000056a9      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x000056b1      6448330c2528.  xor rcx, qword fs:[0x28]
0x000056ba      7510           jne 0x56cc
0x000056bc      4881c4a00000.  add rsp, 0xa0
0x000056c3      5b             pop rbx
0x000056c4      c3             ret
0x000056c5      0f1f00         nop dword [rax]
0x000056c8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/root-dev-ino.c:33
0x000056ca      ebdd           jmp 0x56a9
0x000056cc      e86fc3ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x000056d1      662e0f1f8400.  nop word cs:[rax + rax]
0x000056db      0f1f440000     nop dword [rax + rax]
;-- version_etc_arn:
0x000056e0      4157           push r15
0x000056e2      4156           push r14
0x000056e4      4155           push r13
0x000056e6      4154           push r12
0x000056e8      4d89cc         mov r12, r9
0x000056eb      55             push rbp
0x000056ec      53             push rbx
0x000056ed      4889fd         mov rbp, rdi
0x000056f0      4c89c3         mov rbx, r8
0x000056f3      4883ec28       sub rsp, 0x28
0x000056f7      4885f6         test rsi, rsi
0x000056fa      0f8418010000   je 0x5818
0x00005700      4989d0         mov r8, rdx
0x00005703      488d15de5f00.  lea rdx, [0x0000b6e8]                   ; "%s (%s) %s\n"
0x0000570a      4989c9         mov r9, rcx
0x0000570d      31c0           xor eax, eax
0x0000570f      4889f1         mov rcx, rsi
0x00005712      be01000000     mov esi, 1
0x00005717      e8d4c5ffff     call sym.imp.__fprintf_chk
0x0000571c      488d35d85f00.  lea rsi, [0x0000b6fb]                   ; "(C)"
0x00005723      31ff           xor edi, edi
0x00005725      ba05000000     mov edx, 5
0x0000572a      e8c1c2ffff     call sym.imp.dcgettext
0x0000572f      488d15ea6200.  lea rdx, obj.version_etc_copyright      ; 0xba20 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005736      4889c1         mov rcx, rax
0x00005739      41b8e3070000   mov r8d, 0x7e3
0x0000573f      be01000000     mov esi, 1
0x00005744      4889ef         mov rdi, rbp
0x00005747      31c0           xor eax, eax
0x00005749      e8a2c5ffff     call sym.imp.__fprintf_chk
0x0000574e      488d35336000.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xb788 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005755      31ff           xor edi, edi
0x00005757      ba05000000     mov edx, 5
0x0000575c      e88fc2ffff     call sym.imp.dcgettext
0x00005761      4889ee         mov rsi, rbp
0x00005764      4889c7         mov rdi, rax
0x00005767      e8b4c3ffff     call sym.imp.fputs_unlocked
0x0000576c      4983fc09       cmp r12, 9
0x00005770      0f873a030000   ja 0x5ab0
0x00005776      488d15676200.  lea rdx, [0x0000b9e4]
0x0000577d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005781      4801d0         add rax, rdx
0x00005784      ffe0           jmp rax
0x00005786      662e0f1f8400.  nop word cs:[rax + rax]
0x00005790      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005794      488b4310       mov rax, qword [rbx + 0x10]
0x00005798      488d35596100.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xb8f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000579f      4c8b4308       mov r8, qword [rbx + 8]
0x000057a3      ba05000000     mov edx, 5
0x000057a8      31ff           xor edi, edi
0x000057aa      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000057ae      4c8b6328       mov r12, qword [rbx + 0x28]
0x000057b2      4c894c2410     mov qword [rsp + 0x10], r9
0x000057b7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000057bb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000057bf      48890424       mov qword [rsp], rax
0x000057c3      4c89442408     mov qword [rsp + 8], r8
0x000057c8      488b1b         mov rbx, qword [rbx]
0x000057cb      e820c2ffff     call sym.imp.dcgettext
0x000057d0      4883ec08       sub rsp, 8
0x000057d4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000057d9      4889c2         mov rdx, rax
0x000057dc      4889d9         mov rcx, rbx
0x000057df      be01000000     mov esi, 1
0x000057e4      4889ef         mov rdi, rbp
0x000057e7      31c0           xor eax, eax
0x000057e9      4151           push r9
0x000057eb      4155           push r13
0x000057ed      4154           push r12
0x000057ef      4157           push r15
0x000057f1      4156           push r14
0x000057f3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000057f8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000057fd      e8eec4ffff     call sym.imp.__fprintf_chk
0x00005802      4883c430       add rsp, 0x30
0x00005806      4883c428       add rsp, 0x28
0x0000580a      5b             pop rbx
0x0000580b      5d             pop rbp
0x0000580c      415c           pop r12
0x0000580e      415d           pop r13
0x00005810      415e           pop r14
0x00005812      415f           pop r15
0x00005814      c3             ret
0x00005815      0f1f00         nop dword [rax]
0x00005818      4989c8         mov r8, rcx
0x0000581b      4889d1         mov rcx, rdx
0x0000581e      488d15cf5e00.  lea rdx, str.s__s                       ; 0xb6f4 ; "%s %s\n"
0x00005825      be01000000     mov esi, 1
0x0000582a      31c0           xor eax, eax
0x0000582c      e8bfc4ffff     call sym.imp.__fprintf_chk
0x00005831      e9e6feffff     jmp 0x571c
0x00005836      662e0f1f8400.  nop word cs:[rax + rax]
0x00005840      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005844      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005848      488d35d96000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xb928 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000584f      488b4310       mov rax, qword [rbx + 0x10]
0x00005853      4c8b4308       mov r8, qword [rbx + 8]
0x00005857      ba05000000     mov edx, 5
0x0000585c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005860      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005864      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005868      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000586c      488b1b         mov rbx, qword [rbx]
0x0000586f      4c89542418     mov qword [rsp + 0x18], r10
0x00005874      4c894c2410     mov qword [rsp + 0x10], r9
0x00005879      48890424       mov qword [rsp], rax
0x0000587d      4c89442408     mov qword [rsp + 8], r8
0x00005882      31ff           xor edi, edi
0x00005884      e867c1ffff     call sym.imp.dcgettext
0x00005889      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000588e      4152           push r10
0x00005890      e93fffffff     jmp 0x57d4
0x00005895      0f1f00         nop dword [rax]
0x00005898      488b1b         mov rbx, qword [rbx]
0x0000589b      488d355d5e00.  lea rsi, str.Written_by__s.             ; 0xb6ff ; "Written by %s.\n"
0x000058a2      ba05000000     mov edx, 5
0x000058a7      31ff           xor edi, edi
0x000058a9      e842c1ffff     call sym.imp.dcgettext
0x000058ae      4883c428       add rsp, 0x28
0x000058b2      4889d9         mov rcx, rbx
0x000058b5      4889ef         mov rdi, rbp
0x000058b8      5b             pop rbx
0x000058b9      5d             pop rbp
0x000058ba      415c           pop r12
0x000058bc      415d           pop r13
0x000058be      415e           pop r14
0x000058c0      415f           pop r15
0x000058c2      4889c2         mov rdx, rax
0x000058c5      be01000000     mov esi, 1
0x000058ca      31c0           xor eax, eax
0x000058cc      e91fc4ffff     jmp sym.imp.__fprintf_chk
0x000058d1      0f1f80000000.  nop dword [rax]
0x000058d8      4c8b6308       mov r12, qword [rbx + 8]
0x000058dc      488d352c5e00.  lea rsi, str.Written_by__s_and__s.      ; 0xb70f ; "Written by %s and %s.\n"
0x000058e3      488b1b         mov rbx, qword [rbx]
0x000058e6      ba05000000     mov edx, 5
0x000058eb      31ff           xor edi, edi
0x000058ed      e8fec0ffff     call sym.imp.dcgettext
0x000058f2      4883c428       add rsp, 0x28
0x000058f6      4d89e0         mov r8, r12
0x000058f9      4889d9         mov rcx, rbx
0x000058fc      4889ef         mov rdi, rbp
0x000058ff      4889c2         mov rdx, rax
0x00005902      be01000000     mov esi, 1
0x00005907      5b             pop rbx
0x00005908      5d             pop rbp
0x00005909      415c           pop r12
0x0000590b      415d           pop r13
0x0000590d      415e           pop r14
0x0000590f      415f           pop r15
0x00005911      31c0           xor eax, eax
0x00005913      e9d8c3ffff     jmp sym.imp.__fprintf_chk
0x00005918      0f1f84000000.  nop dword [rax + rax]
0x00005920      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005924      4c8b6308       mov r12, qword [rbx + 8]
0x00005928      488d35f75d00.  lea rsi, str.Written_by__s___s__and__s. ; 0xb726 ; "Written by %s, %s, and %s.\n"
0x0000592f      488b1b         mov rbx, qword [rbx]
0x00005932      ba05000000     mov edx, 5
0x00005937      31ff           xor edi, edi
0x00005939      e8b2c0ffff     call sym.imp.dcgettext
0x0000593e      4883c428       add rsp, 0x28
0x00005942      4d89e9         mov r9, r13
0x00005945      4d89e0         mov r8, r12
0x00005948      4889d9         mov rcx, rbx
0x0000594b      4889ef         mov rdi, rbp
0x0000594e      4889c2         mov rdx, rax
0x00005951      5b             pop rbx
0x00005952      5d             pop rbp
0x00005953      415c           pop r12
0x00005955      415d           pop r13
0x00005957      415e           pop r14
0x00005959      415f           pop r15
0x0000595b      be01000000     mov esi, 1
0x00005960      31c0           xor eax, eax
0x00005962      e989c3ffff     jmp sym.imp.__fprintf_chk
0x00005967      660f1f840000.  nop word [rax + rax]
0x00005970      488d35e15e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xb858 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005977      ba05000000     mov edx, 5
0x0000597c      31ff           xor edi, edi
0x0000597e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005982      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005986      4c8b6308       mov r12, qword [rbx + 8]
0x0000598a      488b1b         mov rbx, qword [rbx]
0x0000598d      e85ec0ffff     call sym.imp.dcgettext
0x00005992      4883ec08       sub rsp, 8
0x00005996      4156           push r14
0x00005998      4889c2         mov rdx, rax
0x0000599b      4d89e9         mov r9, r13
0x0000599e      4d89e0         mov r8, r12
0x000059a1      4889d9         mov rcx, rbx
0x000059a4      4889ef         mov rdi, rbp
0x000059a7      be01000000     mov esi, 1
0x000059ac      31c0           xor eax, eax
0x000059ae      e83dc3ffff     call sym.imp.__fprintf_chk
0x000059b3      58             pop rax
0x000059b4      5a             pop rdx
0x000059b5      4883c428       add rsp, 0x28
0x000059b9      5b             pop rbx
0x000059ba      5d             pop rbp
0x000059bb      415c           pop r12
0x000059bd      415d           pop r13
0x000059bf      415e           pop r14
0x000059c1      415f           pop r15
0x000059c3      c3             ret
0x000059c4      0f1f4000       nop dword [rax]
0x000059c8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000059cc      488d35a55e00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xb878 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000059d3      ba05000000     mov edx, 5
0x000059d8      31ff           xor edi, edi
0x000059da      4c8b7318       mov r14, qword [rbx + 0x18]
0x000059de      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000059e2      4c8b6308       mov r12, qword [rbx + 8]
0x000059e6      488b1b         mov rbx, qword [rbx]
0x000059e9      e802c0ffff     call sym.imp.dcgettext
0x000059ee      4157           push r15
0x000059f0      eba4           jmp 0x5996
0x000059f2      660f1f440000   nop word [rax + rax]
0x000059f8      4c8b4308       mov r8, qword [rbx + 8]
0x000059fc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005a00      488d35995e00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xb8a0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005a07      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005a0b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005a0f      ba05000000     mov edx, 5
0x00005a14      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005a18      31ff           xor edi, edi
0x00005a1a      488b1b         mov rbx, qword [rbx]
0x00005a1d      4c890424       mov qword [rsp], r8
0x00005a21      e8cabfffff     call sym.imp.dcgettext
0x00005a26      4883ec08       sub rsp, 8
0x00005a2a      4d89e9         mov r9, r13
0x00005a2d      4154           push r12
0x00005a2f      4157           push r15
0x00005a31      4156           push r14
0x00005a33      4c8b442420     mov r8, qword [rsp + 0x20]
0x00005a38      4889d9         mov rcx, rbx
0x00005a3b      4889c2         mov rdx, rax
0x00005a3e      4889ef         mov rdi, rbp
0x00005a41      be01000000     mov esi, 1
0x00005a46      31c0           xor eax, eax
0x00005a48      e8a3c2ffff     call sym.imp.__fprintf_chk
0x00005a4d      4883c420       add rsp, 0x20
0x00005a51      4883c428       add rsp, 0x28
0x00005a55      5b             pop rbx
0x00005a56      5d             pop rbp
0x00005a57      415c           pop r12
0x00005a59      415d           pop r13
0x00005a5b      415e           pop r14
0x00005a5d      415f           pop r15
0x00005a5f      c3             ret
0x00005a60      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00005a64      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005a68      488d35595e00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xb8c8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00005a6f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005a73      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005a77      ba05000000     mov edx, 5
0x00005a7c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005a80      4c8b4308       mov r8, qword [rbx + 8]
0x00005a84      31ff           xor edi, edi
0x00005a86      4c894c2408     mov qword [rsp + 8], r9
0x00005a8b      488b1b         mov rbx, qword [rbx]
0x00005a8e      4c890424       mov qword [rsp], r8
0x00005a92      e859bfffff     call sym.imp.dcgettext
0x00005a97      4155           push r13
0x00005a99      4154           push r12
0x00005a9b      4157           push r15
0x00005a9d      4156           push r14
0x00005a9f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005aa4      eb8d           jmp 0x5a33
0x00005aa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ab0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005ab4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005ab8      ba05000000     mov edx, 5
0x00005abd      488b4310       mov rax, qword [rbx + 0x10]
0x00005ac1      4c8b4308       mov r8, qword [rbx + 8]
0x00005ac5      488d35945e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xb960 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00005acc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005ad0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005ad4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005ad8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005adc      4c89542418     mov qword [rsp + 0x18], r10
0x00005ae1      4c894c2410     mov qword [rsp + 0x10], r9
0x00005ae6      48890424       mov qword [rsp], rax
0x00005aea      4c89442408     mov qword [rsp + 8], r8
0x00005aef      488b1b         mov rbx, qword [rbx]
0x00005af2      e98bfdffff     jmp 0x5882
0x00005af7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005b00      4531c9         xor r9d, r9d
0x00005b03      49833800       cmp qword [r8], 0
0x00005b07      7412           je 0x5b1b
0x00005b09      0f1f80000000.  nop dword [rax]
0x00005b10      4983c101       add r9, 1
0x00005b14      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005b19      75f5           jne 0x5b10
0x00005b1b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005b20      4883ec68       sub rsp, 0x68
0x00005b24      4d89c2         mov r10, r8
0x00005b27      4531c9         xor r9d, r9d
0x00005b2a      64488b042528.  mov rax, qword fs:[0x28]
0x00005b33      4889442458     mov qword [rsp + 0x58], rax
0x00005b38      31c0           xor eax, eax
0x00005b3a      4989e0         mov r8, rsp
0x00005b3d      0f1f00         nop dword [rax]
0x00005b40      418b02         mov eax, dword [r10]
0x00005b43      83f82f         cmp eax, 0x2f
0x00005b46      7742           ja 0x5b8a
0x00005b48      4189c3         mov r11d, eax
0x00005b4b      4d035a10       add r11, qword [r10 + 0x10]
0x00005b4f      83c008         add eax, 8
0x00005b52      418902         mov dword [r10], eax
0x00005b55      498b03         mov rax, qword [r11]
0x00005b58      4885c0         test rax, rax
0x00005b5b      4b8904c8       mov qword [r8 + r9*8], rax
0x00005b5f      740a           je 0x5b6b
0x00005b61      4983c101       add r9, 1
0x00005b65      4983f90a       cmp r9, 0xa
0x00005b69      75d5           jne 0x5b40
0x00005b6b      e870fbffff     call sym.version_etc_arn
0x00005b70      488b442458     mov rax, qword [rsp + 0x58]
0x00005b75      644833042528.  xor rax, qword fs:[0x28]
0x00005b7e      7505           jne 0x5b85
0x00005b80      4883c468       add rsp, 0x68
0x00005b84      c3             ret
0x00005b85      e8b6beffff     call sym.imp.__stack_chk_fail
0x00005b8a      4d8b5a08       mov r11, qword [r10 + 8]
0x00005b8e      498d4308       lea rax, [r11 + 8]
0x00005b92      49894208       mov qword [r10 + 8], rax
0x00005b96      ebbd           jmp 0x5b55
0x00005b98      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005ba0      55             push rbp
0x00005ba1      53             push rbx
0x00005ba2      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005ba8      4531db         xor r11d, r11d
0x00005bab      4881ecb80000.  sub rsp, 0xb8
0x00005bb2      64488b042528.  mov rax, qword fs:[0x28]
0x00005bbb      4889442478     mov qword [rsp + 0x78], rax
0x00005bc0      31c0           xor eax, eax
0x00005bc2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00005bca      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005bd2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00005bda      4c8d442420     lea r8, [rsp + 0x20]
0x00005bdf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005be7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00005bef      4889442410     mov qword [rsp + 0x10], rax
0x00005bf4      488d84248000.  lea rax, [rsp + 0x80]
0x00005bfc      4531c9         xor r9d, r9d
0x00005bff      4889442418     mov qword [rsp + 0x18], rax
0x00005c04      4889c5         mov rbp, rax
0x00005c07      660f1f840000.  nop word [rax + rax]
0x00005c10      4183fa2f       cmp r10d, 0x2f
0x00005c14      7756           ja 0x5c6c
0x00005c16      4489d0         mov eax, r10d
0x00005c19      41bb01000000   mov r11d, 1
0x00005c1f      4183c208       add r10d, 8
0x00005c23      4801e8         add rax, rbp
0x00005c26      488b00         mov rax, qword [rax]
0x00005c29      4885c0         test rax, rax
0x00005c2c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005c30      740a           je 0x5c3c
0x00005c32      4983c101       add r9, 1
0x00005c36      4983f90a       cmp r9, 0xa
0x00005c3a      75d4           jne 0x5c10
0x00005c3c      4584db         test r11b, r11b
0x00005c3f      7524           jne 0x5c65
0x00005c41      e89afaffff     call sym.version_etc_arn
0x00005c46      488b442478     mov rax, qword [rsp + 0x78]
0x00005c4b      644833042528.  xor rax, qword fs:[0x28]
0x00005c54      750a           jne 0x5c60
0x00005c56      4881c4b80000.  add rsp, 0xb8
0x00005c5d      5b             pop rbx
0x00005c5e      5d             pop rbp
0x00005c5f      c3             ret
0x00005c60      e8dbbdffff     call sym.imp.__stack_chk_fail
0x00005c65      4489542408     mov dword [rsp + 8], r10d
0x00005c6a      ebd5           jmp 0x5c41
0x00005c6c      4889d8         mov rax, rbx
0x00005c6f      4883c308       add rbx, 8
0x00005c73      ebb1           jmp 0x5c26
0x00005c75      90             nop
0x00005c76      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005c80      53             push rbx
0x00005c81      488d35ba5a00.  lea rsi, str.Report_bugs_to:__s         ; 0xb742 ; "\nReport bugs to: %s\n"
0x00005c88      ba05000000     mov edx, 5
0x00005c8d      31ff           xor edi, edi
0x00005c8f      e85cbdffff     call sym.imp.dcgettext
0x00005c94      488d15bc5a00.  lea rdx, str.bug_coreutils_gnu.org      ; 0xb757 ; "bug-coreutils@gnu.org"
0x00005c9b      4889c6         mov rsi, rax
0x00005c9e      bf01000000     mov edi, 1
0x00005ca3      31c0           xor eax, eax
0x00005ca5      e876bfffff     call sym.imp.__printf_chk
0x00005caa      488d35bc5a00.  lea rsi, str.s_home_page:___s           ; 0xb76d ; "%s home page: <%s>\n"
0x00005cb1      ba05000000     mov edx, 5
0x00005cb6      31ff           xor edi, edi
0x00005cb8      e833bdffff     call sym.imp.dcgettext
0x00005cbd      488d0dfc4f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xacc0 ; "https://www.gnu.org/software/coreutils/"
0x00005cc4      488d15d54700.  lea rdx, str.GNU_coreutils              ; 0xa4a0 ; "GNU coreutils"
0x00005ccb      4889c6         mov rsi, rax
0x00005cce      bf01000000     mov edi, 1
0x00005cd3      31c0           xor eax, eax
0x00005cd5      e846bfffff     call sym.imp.__printf_chk
0x00005cda      488b1da78320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e088:8]=0
0x00005ce1      488d35b85c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xb9a0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005ce8      31ff           xor edi, edi
0x00005cea      ba05000000     mov edx, 5
0x00005cef      e8fcbcffff     call sym.imp.dcgettext
0x00005cf4      4889de         mov rsi, rbx
0x00005cf7      4889c7         mov rdi, rax
0x00005cfa      5b             pop rbx
0x00005cfb      e920beffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005d00      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005d01      4889fb         mov rbx, rdi
0x00005d04      e897beffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005d09      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00005d0c      7505           jne 0x5d13
0x00005d0e      4885db         test rbx, rbx
0x00005d11      7502           jne 0x5d15
0x00005d13      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005d14      c3             ret
0x00005d15      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00005d1a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005d20      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005d23      48f7e6         mul rsi
0x00005d26      4889c7         mov rdi, rax
0x00005d29      0f90c0         seto al
0x00005d2c      4885ff         test rdi, rdi
0x00005d2f      780a           js 0x5d3b
0x00005d31      0fb6c0         movzx eax, al
0x00005d34      4885c0         test rax, rax
0x00005d37      7502           jne 0x5d3b
0x00005d39      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00005d3b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00005d3f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005d44      6690           nop
0x00005d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005d50      ebae           jmp sym.xmalloc
0x00005d52      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005d56      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005d60      4885f6         test rsi, rsi
0x00005d63      53             push rbx
0x00005d64      4889f3         mov rbx, rsi
0x00005d67      7505           jne 0x5d6e
0x00005d69      4885ff         test rdi, rdi
0x00005d6c      751a           jne 0x5d88
0x00005d6e      4889de         mov rsi, rbx
0x00005d71      e88abeffff     call sym.imp.realloc
0x00005d76      4885c0         test rax, rax
0x00005d79      7505           jne 0x5d80
0x00005d7b      4885db         test rbx, rbx
0x00005d7e      7511           jne 0x5d91                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005d80      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005d81      c3             ret
0x00005d82      660f1f440000   nop word [rax + rax]
0x00005d88      e8a3bfffff     call sym..plt.got
0x00005d8d      31c0           xor eax, eax
0x00005d8f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005d90      c3             ret
0x00005d91      e8ba010000     call sym.xalloc_die
0x00005d96      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005da0      4889f0         mov rax, rsi
0x00005da3      48f7e2         mul rdx
0x00005da6      4889c6         mov rsi, rax
0x00005da9      0f90c0         seto al
0x00005dac      4885f6         test rsi, rsi
0x00005daf      780a           js 0x5dbb
0x00005db1      0fb6c0         movzx eax, al
0x00005db4      4885c0         test rax, rax
0x00005db7      7502           jne 0x5dbb
0x00005db9      eba5           jmp sym.xrealloc
0x00005dbb      4883ec08       sub rsp, 8
0x00005dbf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005dc4      6690           nop
0x00005dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005dd0      4885ff         test rdi, rdi
0x00005dd3      4989d1         mov r9, rdx
0x00005dd6      488b0e         mov rcx, qword [rsi]
0x00005dd9      7435           je 0x5e10
0x00005ddb      31d2           xor edx, edx
0x00005ddd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005de7      49f7f1         div r9
0x00005dea      4839c8         cmp rax, rcx
0x00005ded      763c           jbe 0x5e2b
0x00005def      4889c8         mov rax, rcx
0x00005df2      48d1e8         shr rax, 1
0x00005df5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00005dfa      48890e         mov qword [rsi], rcx
0x00005dfd      490fafc9       imul rcx, r9
0x00005e01      4889ce         mov rsi, rcx
0x00005e04      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005e09      0f1f80000000.  nop dword [rax]
0x00005e10      4885c9         test rcx, rcx
0x00005e13      7423           je 0x5e38
0x00005e15      4889c8         mov rax, rcx
0x00005e18      49f7e1         mul r9
0x00005e1b      0f90c2         seto dl
0x00005e1e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005e21      0fb6d2         movzx edx, dl
0x00005e24      7805           js 0x5e2b
0x00005e26      4885d2         test rdx, rdx
0x00005e29      74cf           je 0x5dfa
0x00005e2b      4883ec08       sub rsp, 8
0x00005e2f      e81c010000     call sym.xalloc_die
0x00005e34      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005e38      31d2           xor edx, edx
0x00005e3a      b880000000     mov eax, 0x80
0x00005e3f      4531c0         xor r8d, r8d
0x00005e42      49f7f1         div r9
0x00005e45      4885c0         test rax, rax
0x00005e48      410f94c0       sete r8b
0x00005e4c      498d0c00       lea rcx, [r8 + rax]
0x00005e50      ebc3           jmp 0x5e15
0x00005e52      0f1f4000       nop dword [rax]
0x00005e56      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005e60      4885ff         test rdi, rdi
0x00005e63      488b06         mov rax, qword [rsi]
0x00005e66      7428           je 0x5e90
0x00005e68      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005e72      4839d0         cmp rax, rdx
0x00005e75      772a           ja 0x5ea1
0x00005e77      4889c2         mov rdx, rax
0x00005e7a      48d1ea         shr rdx, 1
0x00005e7d      488d440201     lea rax, [rdx + rax + 1]
0x00005e82      488906         mov qword [rsi], rax
0x00005e85      4889c6         mov rsi, rax
0x00005e88      e9d3feffff     jmp sym.xrealloc
0x00005e8d      0f1f00         nop dword [rax]
0x00005e90      4885c0         test rax, rax
0x00005e93      ba80000000     mov edx, 0x80
0x00005e98      480f44c2       cmove rax, rdx
0x00005e9c      4885c0         test rax, rax
0x00005e9f      79e1           jns 0x5e82
0x00005ea1      4883ec08       sub rsp, 8
0x00005ea5      e8a6000000     call sym.xalloc_die
0x00005eaa      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005eb0      53             push rbx
0x00005eb1      4889fb         mov rbx, rdi
0x00005eb4      e847feffff     call sym.xmalloc
0x00005eb9      4889da         mov rdx, rbx
0x00005ebc      31f6           xor esi, esi
0x00005ebe      4889c7         mov rdi, rax
0x00005ec1      5b             pop rbx
0x00005ec2      e909bcffff     jmp sym.imp.memset
0x00005ec7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005ed0      4889f8         mov rax, rdi
0x00005ed3      4883ec08       sub rsp, 8
0x00005ed7      48f7e6         mul rsi
0x00005eda      0f90c2         seto dl
0x00005edd      4885c0         test rax, rax
0x00005ee0      7817           js 0x5ef9
0x00005ee2      0fb6d2         movzx edx, dl
0x00005ee5      4885d2         test rdx, rdx
0x00005ee8      750f           jne 0x5ef9
0x00005eea      e841bcffff     call sym.imp.calloc
0x00005eef      4885c0         test rax, rax
0x00005ef2      7405           je 0x5ef9
0x00005ef4      4883c408       add rsp, 8
0x00005ef8      c3             ret
0x00005ef9      e852000000     call sym.xalloc_die
0x00005efe      6690           nop
;-- xmemdup:
0x00005f00      55             push rbp
0x00005f01      53             push rbx
0x00005f02      4889fd         mov rbp, rdi
0x00005f05      4889f7         mov rdi, rsi
0x00005f08      4889f3         mov rbx, rsi
0x00005f0b      4883ec08       sub rsp, 8
0x00005f0f      e8ecfdffff     call sym.xmalloc
0x00005f14      4883c408       add rsp, 8
0x00005f18      4889da         mov rdx, rbx
0x00005f1b      4889ee         mov rsi, rbp
0x00005f1e      5b             pop rbx
0x00005f1f      5d             pop rbp
0x00005f20      4889c7         mov rdi, rax
0x00005f23      e928bcffff     jmp sym.imp.memcpy
0x00005f28      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005f30      53             push rbx
0x00005f31      4889fb         mov rbx, rdi
0x00005f34      e8d7baffff     call sym.imp.strlen
0x00005f39      4889df         mov rdi, rbx
0x00005f3c      488d7001       lea rsi, [rax + 1]
0x00005f40      5b             pop rbx
0x00005f41      ebbd           jmp sym.xmemdup
0x00005f43      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f4d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005f50      488d35f85a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xba4f ; "memory exhausted"
0x00005f57      4883ec08       sub rsp, 8
0x00005f5b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005f60      31ff           xor edi, edi
0x00005f62      e889baffff     call sym.imp.dcgettext
0x00005f67      8b3dab802000   mov edi, dword [obj.exit_failure]       ; [0x20e018:4]=1
0x00005f6d      488d15cf4500.  lea rdx, [0x0000a543]                   ; "%s"
0x00005f74      4889c1         mov rcx, rax
0x00005f77      31f6           xor esi, esi
0x00005f79      31c0           xor eax, eax
0x00005f7b      e8c0bcffff     call sym.imp.error
0x00005f80      e89bb9ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005f85      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f8f      90             nop
;-- xfts_open:
0x00005f90      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:35
0x00005f94      81ce00020000   or esi, 0x200                           ; ../coreutils-8.31/lib/xfts.c:36
0x00005f9a      e8711a0000     call sym.rpl_fts_open
0x00005f9f      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xfts.c:37
0x00005fa2      740c           je 0x5fb0
0x00005fa4      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:46
0x00005fa8      c3             ret
0x00005fa9      0f1f80000000.  nop dword [rax]
0x00005fb0      e87bb9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xfts.c:41
0x00005fb5      833816         cmp dword [rax], 0x16
0x00005fb8      7406           je 0x5fc0
0x00005fba      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xfts.c:42
0x00005fbf      90             nop
0x00005fc0      488d0dc95a00.  lea rcx, obj.__PRETTY_FUNCTION__.3434   ; ../coreutils-8.31/lib/xfts.c:41 ; 0xba90 ; "xfts_open"
0x00005fc7      488d35925a00.  lea rsi, str..._coreutils_8.31_lib_xfts.c ; 0xba60 ; "../coreutils-8.31/lib/xfts.c"
0x00005fce      488d3da85a00.  lea rdi, str.errno____EINVAL            ; 0xba7d ; "errno != EINVAL"
0x00005fd5      ba29000000     mov edx, 0x29                           ; ')'
0x00005fda      e8e1baffff     call sym.imp.__assert_fail
0x00005fdf      90             nop
;-- cycle_warning_required:
0x00005fe0      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/xfts.c:57
0x00005fe3      b801000000     mov eax, 1
0x00005fe8      83e211         and edx, 0x11
0x00005feb      83fa10         cmp edx, 0x10                           ; ../coreutils-8.31/lib/xfts.c:63
0x00005fee      7407           je 0x5ff7
0x00005ff0      31c0           xor eax, eax
0x00005ff2      83fa11         cmp edx, 0x11
0x00005ff5      7409           je 0x6000
0x00005ff7      f3c3           ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00005ff9      0f1f80000000.  nop dword [rax]
0x00006000      48837e5800     cmp qword [rsi + 0x58], 0               ; ../coreutils-8.31/lib/xfts.c:64
0x00006005      0f95c0         setne al
0x00006008      c3             ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00006009      0f1f80000000.  nop dword [rax]
;-- xstrtoul:
0x00006010      4157           push r15
0x00006012      4156           push r14
0x00006014      4155           push r13
0x00006016      4154           push r12
0x00006018      55             push rbp
0x00006019      53             push rbx
0x0000601a      4883ec28       sub rsp, 0x28
0x0000601e      64488b042528.  mov rax, qword fs:[0x28]
0x00006027      4889442418     mov qword [rsp + 0x18], rax
0x0000602c      31c0           xor eax, eax
0x0000602e      83fa24         cmp edx, 0x24
0x00006031      0f875e030000   ja 0x6395
0x00006037      488d442410     lea rax, [rsp + 0x10]
0x0000603c      4989f7         mov r15, rsi
0x0000603f      4885f6         test rsi, rsi
0x00006042      4889fd         mov rbp, rdi
0x00006045      89542408       mov dword [rsp + 8], edx
0x00006049      4989ce         mov r14, rcx
0x0000604c      4d89c5         mov r13, r8
0x0000604f      4c0f44f8       cmove r15, rax
0x00006053      e8d8b8ffff     call sym.imp.__errno_location
0x00006058      c70000000000   mov dword [rax], 0
0x0000605e      4989c4         mov r12, rax
0x00006061      0fb65d00       movzx ebx, byte [rbp]
0x00006065      e8b6bcffff     call sym.imp.__ctype_b_loc
0x0000606a      8b542408       mov edx, dword [rsp + 8]
0x0000606e      488b30         mov rsi, qword [rax]
0x00006071      4889e8         mov rax, rbp
0x00006074      eb11           jmp 0x6087
0x00006076      662e0f1f8400.  nop word cs:[rax + rax]
0x00006080      4883c001       add rax, 1
0x00006084      0fb618         movzx ebx, byte [rax]
0x00006087      0fb6cb         movzx ecx, bl
0x0000608a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000608f      75ef           jne 0x6080
0x00006091      80fb2d         cmp bl, 0x2d
0x00006094      7452           je 0x60e8
0x00006096      4c89fe         mov rsi, r15
0x00006099      4889ef         mov rdi, rbp
0x0000609c      e8efbbffff     call sym.imp.strtoul
0x000060a1      498b0f         mov rcx, qword [r15]
0x000060a4      4889c3         mov rbx, rax
0x000060a7      4839e9         cmp rcx, rbp
0x000060aa      742c           je 0x60d8
0x000060ac      418b0424       mov eax, dword [r12]
0x000060b0      85c0           test eax, eax
0x000060b2      7464           je 0x6118
0x000060b4      83f822         cmp eax, 0x22
0x000060b7      bd01000000     mov ebp, 1
0x000060bc      752a           jne 0x60e8
0x000060be      4d85ed         test r13, r13
0x000060c1      7409           je 0x60cc
0x000060c3      440fb621       movzx r12d, byte [rcx]
0x000060c7      4584e4         test r12b, r12b
0x000060ca      757b           jne 0x6147
0x000060cc      49891e         mov qword [r14], rbx
0x000060cf      eb1c           jmp 0x60ed
0x000060d1      0f1f80000000.  nop dword [rax]
0x000060d8      4d85ed         test r13, r13
0x000060db      48894c2408     mov qword [rsp + 8], rcx
0x000060e0      753e           jne 0x6120
0x000060e2      660f1f440000   nop word [rax + rax]
0x000060e8      bd04000000     mov ebp, 4
0x000060ed      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000060f2      6448333c2528.  xor rdi, qword fs:[0x28]
0x000060fb      89e8           mov eax, ebp
0x000060fd      0f858d020000   jne 0x6390
0x00006103      4883c428       add rsp, 0x28
0x00006107      5b             pop rbx
0x00006108      5d             pop rbp
0x00006109      415c           pop r12
0x0000610b      415d           pop r13
0x0000610d      415e           pop r14
0x0000610f      415f           pop r15
0x00006111      c3             ret
0x00006112      660f1f440000   nop word [rax + rax]
0x00006118      31ed           xor ebp, ebp
0x0000611a      eba2           jmp 0x60be
0x0000611c      0f1f4000       nop dword [rax]
0x00006120      440fb66500     movzx r12d, byte [rbp]
0x00006125      4584e4         test r12b, r12b
0x00006128      74be           je 0x60e8
0x0000612a      410fbef4       movsx esi, r12b
0x0000612e      4c89ef         mov rdi, r13
0x00006131      31ed           xor ebp, ebp
0x00006133      e838b9ffff     call sym.imp.strchr
0x00006138      4885c0         test rax, rax
0x0000613b      bb01000000     mov ebx, 1
0x00006140      488b4c2408     mov rcx, qword [rsp + 8]
0x00006145      74a1           je 0x60e8
0x00006147      410fbef4       movsx esi, r12b
0x0000614b      4c89ef         mov rdi, r13
0x0000614e      48894c2408     mov qword [rsp + 8], rcx
0x00006153      e818b9ffff     call sym.imp.strchr
0x00006158      4885c0         test rax, rax
0x0000615b      488b4c2408     mov rcx, qword [rsp + 8]
0x00006160      0f84c6000000   je 0x622c
0x00006166      418d4424bb     lea eax, [r12 - 0x45]
0x0000616b      3c2f           cmp al, 0x2f
0x0000616d      7751           ja 0x61c0
0x0000616f      48ba45893000.  movabs rdx, 0x814400308945
0x00006179      480fa3c2       bt rdx, rax
0x0000617d      7341           jae 0x61c0
0x0000617f      be30000000     mov esi, 0x30                           ; '0'
0x00006184      4c89ef         mov rdi, r13
0x00006187      48894c2408     mov qword [rsp + 8], rcx
0x0000618c      e8dfb8ffff     call sym.imp.strchr
0x00006191      4885c0         test rax, rax
0x00006194      488b4c2408     mov rcx, qword [rsp + 8]
0x00006199      7425           je 0x61c0
0x0000619b      0fb64101       movzx eax, byte [rcx + 1]
0x0000619f      3c44           cmp al, 0x44
0x000061a1      740c           je 0x61af
0x000061a3      3c69           cmp al, 0x69
0x000061a5      0f84cd010000   je 0x6378
0x000061ab      3c42           cmp al, 0x42
0x000061ad      7511           jne 0x61c0
0x000061af      bf02000000     mov edi, 2
0x000061b4      bee8030000     mov esi, 0x3e8
0x000061b9      eb0f           jmp 0x61ca
0x000061bb      0f1f440000     nop dword [rax + rax]
0x000061c0      bf01000000     mov edi, 1
0x000061c5      be00040000     mov esi, 0x400
0x000061ca      4183ec42       sub r12d, 0x42
0x000061ce      4180fc35       cmp r12b, 0x35
0x000061d2      7758           ja 0x622c
0x000061d4      488d150d5900.  lea rdx, [0x0000bae8]
0x000061db      450fb6e4       movzx r12d, r12b
0x000061df      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000061e3      4801d0         add rax, rdx
0x000061e6      ffe0           jmp rax
0x000061e8      4889d8         mov rax, rbx
0x000061eb      48f7e6         mul rsi
0x000061ee      0f80ed010000   jo 0x63e1
0x000061f4      4531c0         xor r8d, r8d
0x000061f7      48f7e6         mul rsi
0x000061fa      0f80d2010000   jo 0x63d2
0x00006200      4889c3         mov rbx, rax
0x00006203      4409c5         or ebp, r8d
0x00006206      662e0f1f8400.  nop word cs:[rax + rax]
0x00006210      4863ff         movsxd rdi, edi
0x00006213      89e8           mov eax, ebp
0x00006215      4801f9         add rcx, rdi
0x00006218      83c802         or eax, 2
0x0000621b      49890f         mov qword [r15], rcx
0x0000621e      803900         cmp byte [rcx], 0
0x00006221      49891e         mov qword [r14], rbx
0x00006224      0f45e8         cmovne ebp, eax
0x00006227      e9c1feffff     jmp 0x60ed
0x0000622c      49891e         mov qword [r14], rbx
0x0000622f      83cd02         or ebp, 2
0x00006232      e9b6feffff     jmp 0x60ed
0x00006237      ba02000000     mov edx, 2
0x0000623c      4889d0         mov rax, rdx
0x0000623f      48f7e3         mul rbx
0x00006242      0f8096000000   jo 0x62de
0x00006248      4801db         add rbx, rbx
0x0000624b      ebc3           jmp 0x6210
0x0000624d      ba00020000     mov edx, 0x200
0x00006252      4889d0         mov rax, rdx
0x00006255      48f7e3         mul rbx
0x00006258      0f8080000000   jo 0x62de
0x0000625e      48c1e309       shl rbx, 9
0x00006262      ebac           jmp 0x6210
0x00006264      41b807000000   mov r8d, 7
0x0000626a      4531c9         xor r9d, r9d
0x0000626d      0f1f00         nop dword [rax]
0x00006270      4889d8         mov rax, rbx
0x00006273      48f7e6         mul rsi
0x00006276      4889c3         mov rbx, rax
0x00006279      0f808f010000   jo 0x640e
0x0000627f      4183e801       sub r8d, 1
0x00006283      75eb           jne 0x6270
0x00006285      4409cd         or ebp, r9d
0x00006288      eb86           jmp 0x6210
0x0000628a      41b808000000   mov r8d, 8
0x00006290      4531c9         xor r9d, r9d
0x00006293      0f1f440000     nop dword [rax + rax]
0x00006298      4889d8         mov rax, rbx
0x0000629b      48f7e6         mul rsi
0x0000629e      4889c3         mov rbx, rax
0x000062a1      0f8049010000   jo 0x63f0
0x000062a7      4183e801       sub r8d, 1
0x000062ab      75eb           jne 0x6298
0x000062ad      ebd6           jmp 0x6285
0x000062af      41b804000000   mov r8d, 4
0x000062b5      4531c9         xor r9d, r9d
0x000062b8      4889d8         mov rax, rbx
0x000062bb      48f7e6         mul rsi
0x000062be      4889c3         mov rbx, rax
0x000062c1      0f80fc000000   jo 0x63c3
0x000062c7      4183e801       sub r8d, 1
0x000062cb      75eb           jne 0x62b8
0x000062cd      ebb6           jmp 0x6285
0x000062cf      4889d8         mov rax, rbx
0x000062d2      48f7e6         mul rsi
0x000062d5      4889c3         mov rbx, rax
0x000062d8      0f8132ffffff   jno 0x6210
0x000062de      bd01000000     mov ebp, 1
0x000062e3      4883cbff       or rbx, 0xffffffffffffffff
0x000062e7      e924ffffff     jmp 0x6210
0x000062ec      0f1f4000       nop dword [rax]
0x000062f0      41b805000000   mov r8d, 5
0x000062f6      4531c9         xor r9d, r9d
0x000062f9      4889d8         mov rax, rbx
0x000062fc      48f7e6         mul rsi
0x000062ff      4889c3         mov rbx, rax
0x00006302      0f80f7000000   jo 0x63ff
0x00006308      4183e801       sub r8d, 1
0x0000630c      75eb           jne 0x62f9
0x0000630e      e972ffffff     jmp 0x6285
0x00006313      41b806000000   mov r8d, 6
0x00006319      4531c9         xor r9d, r9d
0x0000631c      4889d8         mov rax, rbx
0x0000631f      48f7e6         mul rsi
0x00006322      4889c3         mov rbx, rax
0x00006325      0f8089000000   jo 0x63b4
0x0000632b      4183e801       sub r8d, 1
0x0000632f      75eb           jne 0x631c
0x00006331      e94fffffff     jmp 0x6285
0x00006336      ba00040000     mov edx, 0x400
0x0000633b      4889d0         mov rax, rdx
0x0000633e      48f7e3         mul rbx
0x00006341      709b           jo 0x62de
0x00006343      48c1e30a       shl rbx, 0xa
0x00006347      e9c4feffff     jmp 0x6210
0x0000634c      4889d8         mov rax, rbx
0x0000634f      48f7e6         mul rsi
0x00006352      0f80c5000000   jo 0x641d
0x00006358      4531c0         xor r8d, r8d
0x0000635b      48f7e6         mul rsi
0x0000635e      0f8193feffff   jno 0x61f7
0x00006364      41b801000000   mov r8d, 1
0x0000636a      4883c8ff       or rax, 0xffffffffffffffff
0x0000636e      e984feffff     jmp 0x61f7
0x00006373      0f1f440000     nop dword [rax + rax]
0x00006378      31ff           xor edi, edi
0x0000637a      80790242       cmp byte [rcx + 2], 0x42
0x0000637e      be00040000     mov esi, 0x400
0x00006383      400f94c7       sete dil
0x00006387      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000638b      e93afeffff     jmp 0x61ca
0x00006390      e8abb6ffff     call sym.imp.__stack_chk_fail
0x00006395      488d0d245800.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xbbc0 ; "xstrtoul"
0x0000639c      488d35fd5600.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xbaa0 ; "../coreutils-8.31/lib/xstrtol.c"
0x000063a3      488d3d165700.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xbac0 ; "0 <= strtol_base && strtol_base <= 36"
0x000063aa      ba54000000     mov edx, 0x54                           ; 'T'
0x000063af      e80cb7ffff     call sym.imp.__assert_fail
0x000063b4      41b901000000   mov r9d, 1
0x000063ba      4883cbff       or rbx, 0xffffffffffffffff
0x000063be      e968ffffff     jmp 0x632b
0x000063c3      41b901000000   mov r9d, 1
0x000063c9      4883cbff       or rbx, 0xffffffffffffffff
0x000063cd      e9f5feffff     jmp 0x62c7
0x000063d2      41b801000000   mov r8d, 1
0x000063d8      4883cbff       or rbx, 0xffffffffffffffff
0x000063dc      e922feffff     jmp 0x6203
0x000063e1      4883c8ff       or rax, 0xffffffffffffffff
0x000063e5      41b801000000   mov r8d, 1
0x000063eb      e907feffff     jmp 0x61f7
0x000063f0      41b901000000   mov r9d, 1
0x000063f6      4883cbff       or rbx, 0xffffffffffffffff
0x000063fa      e9a8feffff     jmp 0x62a7
0x000063ff      41b901000000   mov r9d, 1
0x00006405      4883cbff       or rbx, 0xffffffffffffffff
0x00006409      e9fafeffff     jmp 0x6308
0x0000640e      41b901000000   mov r9d, 1
0x00006414      4883cbff       or rbx, 0xffffffffffffffff
0x00006418      e962feffff     jmp 0x627f
0x0000641d      41b801000000   mov r8d, 1
0x00006423      4883c8ff       or rax, 0xffffffffffffffff
0x00006427      e92fffffff     jmp 0x635b
0x0000642c      0f1f4000       nop dword [rax]
;-- AD_compare:
0x00006430      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:33
0x00006432      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:37
0x00006436      48395708       cmp qword [rdi + 8], rdx
0x0000643a      7404           je 0x6440
0x0000643c      f3c3           ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0000643e      6690           nop
0x00006440      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts-cycle.c:37
0x00006443      483907         cmp qword [rdi], rax
0x00006446      0f94c0         sete al
0x00006449      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0000644a      660f1f440000   nop word [rax + rax]
;-- AD_hash:
0x00006450      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:42
0x00006454      31d2           xor edx, edx
0x00006456      48f7f6         div rsi
0x00006459      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts-cycle.c:45
0x0000645c      c3             ret
0x0000645d      0f1f00         nop dword [rax]
;-- dev_type_hash:
0x00006460      488b07         mov rax, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:690
0x00006463      31d2           xor edx, edx
0x00006465      48f7f6         div rsi
0x00006468      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:694
0x0000646b      c3             ret
0x0000646c      0f1f4000       nop dword [rax]
;-- dev_type_compare:
0x00006470      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:698
0x00006473      483907         cmp qword [rdi], rax
0x00006476      0f94c0         sete al
0x00006479      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:702
0x0000647a      660f1f440000   nop word [rax + rax]
;-- fts_compare_ino:
0x00006480      488b17         mov rdx, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:1226
0x00006483      488b06         mov rax, qword [rsi]
0x00006486      488b80800000.  mov rax, qword [rax + 0x80]             ; ../coreutils-8.31/lib/fts.c:1228
0x0000648d      483982800000.  cmp qword [rdx + 0x80], rax
0x00006494      720a           jb 0x64a0
0x00006496      0f97c0         seta al
0x00006499      0fb6c0         movzx eax, al
0x0000649c      c3             ret
0x0000649d      0f1f00         nop dword [rax]
0x000064a0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000064a5      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1229
0x000064a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_stat:
0x000064b0      4154           push r12                                ; ../coreutils-8.31/lib/fts.c:1800
0x000064b2      55             push rbp
0x000064b3      4889f5         mov rbp, rsi
0x000064b6      53             push rbx
0x000064b7      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1803
0x000064bc      488d5e78       lea rbx, [rsi + 0x78]                   ; ../coreutils-8.31/lib/fts.c:1801
0x000064c0      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/fts.c:1800
0x000064c3      8b4748         mov eax, dword [rdi + 0x48]
0x000064c6      488b7630       mov rsi, qword [rsi + 0x30]
0x000064ca      7564           jne 0x6530                              ; ../coreutils-8.31/lib/fts.c:1803
0x000064cc      a801           test al, 1
0x000064ce      7460           je 0x6530
0x000064d0      4889da         mov rdx, rbx                            ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x000064d3      bf01000000     mov edi, 1
0x000064d8      e8a3b6ffff     call sym.imp.__xstat
0x000064dd      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1812
0x000064df      747a           je 0x655b
0x000064e1      e84ab4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1813
0x000064e6      4989c4         mov r12, rax
0x000064e9      8b00           mov eax, dword [rax]
0x000064eb      83f802         cmp eax, 2
0x000064ee      0f840c010000   je 0x6600
0x000064f4      488d7b08       lea rdi, [rbx + 8]                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x000064f8      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:1823
0x000064fb      48c745780000.  mov qword [rbp + 0x78], 0               ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00006503      48c783880000.  mov qword [rbx + 0x88], 0
0x0000650e      31c0           xor eax, eax
0x00006510      4883e7f8       and rdi, 0xfffffffffffffff8
0x00006514      4829fb         sub rbx, rdi
0x00006517      8d8b90000000   lea ecx, [rbx + 0x90]
0x0000651d      c1e903         shr ecx, 3
0x00006520      f348ab         rep stosq qword [rdi], rax
0x00006523      b80a000000     mov eax, 0xa                            ; ../coreutils-8.31/lib/fts.c:1825
0x00006528      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00006529      5d             pop rbp
0x0000652a      415c           pop r12
0x0000652c      c3             ret
0x0000652d      0f1f00         nop dword [rax]
0x00006530      a802           test al, 2                              ; ../coreutils-8.31/lib/fts.c:1811
0x00006532      759c           jne 0x64d0
0x00006534      84d2           test dl, dl
0x00006536      7598           jne 0x64d0
0x00006538      4889f2         mov rdx, rsi                            ; stat.h:473   return __fxstatat (_STAT_VER, __fd, __filename, __statbuf, __flag);
0x0000653b      418b74242c     mov esi, dword [r12 + 0x2c]
0x00006540      41b800010000   mov r8d, 0x100
0x00006546      4889d9         mov rcx, rbx
0x00006549      bf01000000     mov edi, 1
0x0000654e      e83db5ffff     call sym.imp.__fxstatat
0x00006553      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1821
0x00006555      0f8595000000   jne 0x65f0
0x0000655b      8b8590000000   mov eax, dword [rbp + 0x90]             ; ../coreutils-8.31/lib/fts.c:1828
0x00006561      2500f00000     and eax, 0xf000
0x00006566      3d00400000     cmp eax, 0x4000
0x0000656b      7423           je 0x6590
0x0000656d      3d00a00000     cmp eax, 0xa000                         ; ../coreutils-8.31/lib/fts.c:1841
0x00006572      0f84d0000000   je 0x6648
0x00006578      3d00800000     cmp eax, 0x8000                         ; ../coreutils-8.31/lib/fts.c:1844
0x0000657d      0f94c0         sete al
0x00006580      0fb6c0         movzx eax, al
0x00006583      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00006584      8d448003       lea eax, [rax + rax*4 + 3]              ; ../coreutils-8.31/lib/fts.c:1844
0x00006588      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00006589      415c           pop r12
0x0000658b      c3             ret
0x0000658c      0f1f4000       nop dword [rax]
0x00006590      488b85880000.  mov rax, qword [rbp + 0x88]             ; ../coreutils-8.31/lib/fts.c:1830
0x00006597      4883f801       cmp rax, 1                              ; ../coreutils-8.31/lib/fts.c:1833
0x0000659b      0f867f000000   jbe 0x6620
0x000065a1      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1831
0x000065a6      7e78           jle 0x6620
0x000065a8      41f644244820   test byte [r12 + 0x48], 0x20
0x000065ae      488d50fe       lea rdx, [rax - 2]
0x000065b2      480f44c2       cmove rax, rdx
0x000065b6      80bd08010000.  cmp byte [rbp + 0x108], 0x2e            ; ../coreutils-8.31/lib/fts.c:1834
0x000065bd      48894568       mov qword [rbp + 0x68], rax             ; ../coreutils-8.31/lib/fts.c:1830
0x000065c1      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1839
0x000065c6      0f855cffffff   jne 0x6528                              ; ../coreutils-8.31/lib/fts.c:1834
0x000065cc      80bd09010000.  cmp byte [rbp + 0x109], 0
0x000065d3      0f857f000000   jne 0x6658
0x000065d9      48837d5801     cmp qword [rbp + 0x58], 1               ; ../coreutils-8.31/lib/fts.c:1839
0x000065de      19c0           sbb eax, eax
0x000065e0      83e0fc         and eax, 0xfffffffc                     ; 4294967292
0x000065e3      83c005         add eax, 5
0x000065e6      e93dffffff     jmp 0x6528
0x000065eb      0f1f440000     nop dword [rax + rax]
0x000065f0      e83bb3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1823
0x000065f5      8b00           mov eax, dword [rax]
0x000065f7      e9f8feffff     jmp 0x64f4
0x000065fc      0f1f4000       nop dword [rax]
0x00006600      488b7530       mov rsi, qword [rbp + 0x30]             ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00006604      4889da         mov rdx, rbx
0x00006607      bf01000000     mov edi, 1
0x0000660c      e80fb4ffff     call sym.imp.__lxstat
0x00006611      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1814
0x00006613      741b           je 0x6630
0x00006615      418b0424       mov eax, dword [r12]
0x00006619      e9d6feffff     jmp 0x64f4
0x0000661e      6690           nop
0x00006620      48c7c0ffffff.  mov rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/fts.c:1833
0x00006627      eb8d           jmp 0x65b6
0x00006629      0f1f80000000.  nop dword [rax]
0x00006630      41c704240000.  mov dword [r12], 0                      ; ../coreutils-8.31/lib/fts.c:1815
0x00006638      b80d000000     mov eax, 0xd                            ; ../coreutils-8.31/lib/fts.c:1816
0x0000663d      e9e6feffff     jmp 0x6528
0x00006642      660f1f440000   nop word [rax + rax]
0x00006648      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/fts.c:1842
0x0000664d      e9d6feffff     jmp 0x6528
0x00006652      660f1f440000   nop word [rax + rax]
0x00006658      8b9508010000   mov edx, dword [rbp + 0x108]            ; ../coreutils-8.31/lib/fts.c:1834
0x0000665e      81e200ffff00   and edx, 0xffff00
0x00006664      81fa002e0000   cmp edx, 0x2e00
0x0000666a      0f85b8feffff   jne 0x6528
0x00006670      e964ffffff     jmp 0x65d9
0x00006675      90             nop
0x00006676      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_sort:
0x00006680      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1864
0x00006682      4154           push r12
0x00006684      4989d4         mov r12, rdx
0x00006687      55             push rbp
0x00006688      53             push rbx
0x00006689      4889fd         mov rbp, rdi
0x0000668c      4889f3         mov rbx, rsi
0x0000668f      4883ec08       sub rsp, 8
0x00006693      48395538       cmp qword [rbp + 0x38], rdx             ; ../coreutils-8.31/lib/fts.c:1888
0x00006697      4c8b6f40       mov r13, qword [rdi + 0x40]             ; ../coreutils-8.31/lib/fts.c:1875
0x0000669b      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000669f      7334           jae 0x66d5                              ; ../coreutils-8.31/lib/fts.c:1888
0x000066a1      488d7228       lea rsi, [rdx + 0x28]                   ; ../coreutils-8.31/lib/fts.c:1891
0x000066a5      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; ../coreutils-8.31/lib/fts.c:1892 ; 2305843009213693951
0x000066af      4839c6         cmp rsi, rax
0x000066b2      48897538       mov qword [rbp + 0x38], rsi             ; ../coreutils-8.31/lib/fts.c:1891
0x000066b6      0f8798000000   ja 0x6754                               ; ../coreutils-8.31/lib/fts.c:1892
0x000066bc      48c1e603       shl rsi, 3                              ; ../coreutils-8.31/lib/fts.c:1893
0x000066c0      e83bb5ffff     call sym.imp.realloc
0x000066c5      4885c0         test rax, rax
0x000066c8      4889c7         mov rdi, rax
0x000066cb      0f847f000000   je 0x6750
0x000066d1      48894510       mov qword [rbp + 0x10], rax             ; ../coreutils-8.31/lib/fts.c:1900
0x000066d5      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:1902
0x000066d8      7417           je 0x66f1
0x000066da      4889fa         mov rdx, rdi
0x000066dd      0f1f00         nop dword [rax]
0x000066e0      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1903
0x000066e4      48895af8       mov qword [rdx - 8], rbx
0x000066e8      488b5b10       mov rbx, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1902
0x000066ec      4885db         test rbx, rbx
0x000066ef      75ef           jne 0x66e0
0x000066f1      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/fts.c:1904
0x000066f4      ba08000000     mov edx, 8
0x000066f9      4c89e6         mov rsi, r12
0x000066fc      e87fb2ffff     call sym.imp.qsort
0x00006701      4c8b4510       mov r8, qword [rbp + 0x10]              ; ../coreutils-8.31/lib/fts.c:1905
0x00006705      4c89e1         mov rcx, r12
0x00006708      4883e901       sub rcx, 1
0x0000670c      498b00         mov rax, qword [r8]
0x0000670f      746f           je 0x6780
0x00006711      4889c7         mov rdi, rax
0x00006714      4c89c2         mov rdx, r8
0x00006717      eb0a           jmp 0x6723
0x00006719      0f1f80000000.  nop dword [rax]
0x00006720      488b3a         mov rdi, qword [rdx]
0x00006723      488b7208       mov rsi, qword [rdx + 8]                ; ../coreutils-8.31/lib/fts.c:1906
0x00006727      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1905
0x0000672b      4883e901       sub rcx, 1
0x0000672f      48897710       mov qword [rdi + 0x10], rsi             ; ../coreutils-8.31/lib/fts.c:1906
0x00006733      75eb           jne 0x6720                              ; ../coreutils-8.31/lib/fts.c:1905
0x00006735      4b8b54e0f8     mov rdx, qword [r8 + r12*8 - 8]
0x0000673a      48c742100000.  mov qword [rdx + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1907
0x00006742      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x00006746      5b             pop rbx
0x00006747      5d             pop rbp
0x00006748      415c           pop r12
0x0000674a      415d           pop r13
0x0000674c      c3             ret
0x0000674d      0f1f00         nop dword [rax]
0x00006750      488b7d10       mov rdi, qword [rbp + 0x10]
0x00006754      e8d7b5ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1895
0x00006759      48c745100000.  mov qword [rbp + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1896
0x00006761      48c745380000.  mov qword [rbp + 0x38], 0               ; ../coreutils-8.31/lib/fts.c:1897
0x00006769      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x0000676d      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fts.c:1898
0x00006770      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1909
0x00006771      5d             pop rbp
0x00006772      415c           pop r12
0x00006774      415d           pop r13
0x00006776      c3             ret
0x00006777      660f1f840000.  nop word [rax + rax]
0x00006780      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/fts.c:1905
0x00006783      ebb5           jmp 0x673a
0x00006785      90             nop
0x00006786      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_alloc:
0x00006790      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1914
0x00006792      4154           push r12
0x00006794      4989fc         mov r12, rdi
0x00006797      55             push rbp
0x00006798      488dba100100.  lea rdi, [rdx + 0x110]                  ; ../coreutils-8.31/lib/fts.c:1922
0x0000679f      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1914
0x000067a0      4989f5         mov r13, rsi
0x000067a3      4889d5         mov rbp, rdx
0x000067a6      4883ec08       sub rsp, 8
0x000067aa      4883e7f8       and rdi, 0xfffffffffffffff8             ; ../coreutils-8.31/lib/fts.c:1922
0x000067ae      e8edb3ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/fts.c:1923
0x000067b3      4885c0         test rax, rax
0x000067b6      4889c3         mov rbx, rax
0x000067b9      7451           je 0x680c
0x000067bb      488db8080100.  lea rdi, [rax + 0x108]                  ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000067c2      4889ea         mov rdx, rbp
0x000067c5      4c89ee         mov rsi, r13
0x000067c8      e883b3ffff     call sym.imp.memcpy
0x000067cd      498b442420     mov rax, qword [r12 + 0x20]             ; ../coreutils-8.31/lib/fts.c:1932
0x000067d2      c6842b080100.  mov byte [rbx + rbp + 0x108], 0         ; ../coreutils-8.31/lib/fts.c:1928
0x000067da      48896b60       mov qword [rbx + 0x60], rbp             ; ../coreutils-8.31/lib/fts.c:1930
0x000067de      4c896350       mov qword [rbx + 0x50], r12             ; ../coreutils-8.31/lib/fts.c:1931
0x000067e2      c74340000000.  mov dword [rbx + 0x40], 0               ; ../coreutils-8.31/lib/fts.c:1933
0x000067e9      48c743180000.  mov qword [rbx + 0x18], 0               ; ../coreutils-8.31/lib/fts.c:1934
0x000067f1      48894338       mov qword [rbx + 0x38], rax             ; ../coreutils-8.31/lib/fts.c:1932
0x000067f5      c74372000003.  mov dword [rbx + 0x72], 0x30000         ; ../coreutils-8.31/lib/fts.c:1935 ; [0x30000:4]=-1
0x000067fc      48c743200000.  mov qword [rbx + 0x20], 0               ; ../coreutils-8.31/lib/fts.c:1937
0x00006804      48c743280000.  mov qword [rbx + 0x28], 0               ; ../coreutils-8.31/lib/fts.c:1938
0x0000680c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1940
0x00006810      4889d8         mov rax, rbx
0x00006813      5b             pop rbx
0x00006814      5d             pop rbp
0x00006815      415c           pop r12
0x00006817      415d           pop r13
0x00006819      c3             ret
0x0000681a      660f1f440000   nop word [rax + rax]
;-- fts_lfree:
0x00006820      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1945
0x00006823      743b           je 0x6860
0x00006825      55             push rbp
0x00006826      53             push rbx
0x00006827      4889fb         mov rbx, rdi
0x0000682a      4883ec08       sub rsp, 8
0x0000682e      6690           nop
0x00006830      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/fts.c:1951
0x00006834      488b6b10       mov rbp, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1950
0x00006838      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1951
0x0000683b      7405           je 0x6842
0x0000683d      e8beb2ffff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/fts.c:1952
0x00006842      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:1953
0x00006845      4889eb         mov rbx, rbp
0x00006848      e8e3b4ffff     call sym..plt.got
0x0000684d      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/fts.c:1949
0x00006850      75de           jne 0x6830
0x00006852      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1955
0x00006856      5b             pop rbx
0x00006857      5d             pop rbp
0x00006858      c3             ret
0x00006859      0f1f80000000.  nop dword [rax]
0x00006860      f3c3           ret
0x00006862      0f1f4000       nop dword [rax]
0x00006866      662e0f1f8400.  nop word cs:[rax + rax]
;-- fd_ring_clear:
0x00006870      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:277
0x00006871      4889fb         mov rbx, rdi
0x00006874      eb16           jmp 0x688c                              ; ../coreutils-8.31/lib/fts.c:278
0x00006876      662e0f1f8400.  nop word cs:[rax + rax]
0x00006880      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:280
0x00006883      e898350000     call sym.i_ring_pop
0x00006888      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:281
0x0000688a      7914           jns 0x68a0
0x0000688c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:278
0x0000688f      e83c350000     call sym.i_ring_empty
0x00006894      84c0           test al, al
0x00006896      74e8           je 0x6880
0x00006898      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:284
0x00006899      c3             ret
0x0000689a      660f1f440000   nop word [rax + rax]
0x000068a0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:282
0x000068a2      e839b2ffff     call sym.imp.close
0x000068a7      ebe3           jmp 0x688c
0x000068a9      0f1f80000000.  nop dword [rax]
;-- filesystem_type:
0x000068b0      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:710
0x000068b2      4154           push r12
0x000068b4      55             push rbp
0x000068b5      53             push rbx
0x000068b6      4881ec980000.  sub rsp, 0x98
0x000068bd      488b5f50       mov rbx, qword [rdi + 0x50]             ; ../coreutils-8.31/lib/fts.c:711
0x000068c1      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/fts.c:710
0x000068ca      488984248800.  mov qword [rsp + 0x88], rax
0x000068d2      31c0           xor eax, eax
0x000068d4      f6434902       test byte [rbx + 0x49], 2               ; ../coreutils-8.31/lib/fts.c:718
0x000068d8      7468           je 0x6942
0x000068da      4c8b6350       mov r12, qword [rbx + 0x50]             ; ../coreutils-8.31/lib/fts.c:712
0x000068de      4889fd         mov rbp, rdi
0x000068e1      4189f5         mov r13d, esi
0x000068e4      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:721
0x000068e7      7427           je 0x6910
0x000068e9      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:728
0x000068ed      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts.c:729
0x000068f0      4c89e7         mov rdi, r12
0x000068f3      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/fts.c:728
0x000068f7      e8d4270000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/fts.c:729
0x000068fc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:730
0x000068ff      743c           je 0x693d
0x00006901      488b5808       mov rbx, qword [rax + 8]                ; ../coreutils-8.31/lib/fts.c:731
0x00006905      eb3d           jmp 0x6944
0x00006907      660f1f840000.  nop word [rax + rax]
0x00006910      4c8b05b97620.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts.c:723 ; [0x20dfd0:8]=0
0x00006917      488d0d52fbff.  lea rcx, sym.dev_type_compare           ; 0x6470 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x0000691e      488d153bfbff.  lea rdx, sym.dev_type_hash              ; 0x6460 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00006925      31f6           xor esi, esi
0x00006927      bf0d000000     mov edi, 0xd
0x0000692c      e80f2a0000     call sym.hash_initialize
0x00006931      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:725
0x00006934      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:723
0x00006937      48894350       mov qword [rbx + 0x50], rax
0x0000693b      75ac           jne 0x68e9                              ; ../coreutils-8.31/lib/fts.c:725
0x0000693d      4585ed         test r13d, r13d                         ; ../coreutils-8.31/lib/fts.c:735
0x00006940      792e           jns 0x6970
0x00006942      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:719
0x00006944      488b94248800.  mov rdx, qword [rsp + 0x88]             ; ../coreutils-8.31/lib/fts.c:755
0x0000694c      644833142528.  xor rdx, qword fs:[0x28]
0x00006955      4889d8         mov rax, rbx
0x00006958      7578           jne 0x69d2
0x0000695a      4881c4980000.  add rsp, 0x98
0x00006961      5b             pop rbx
0x00006962      5d             pop rbp
0x00006963      415c           pop r12
0x00006965      415d           pop r13
0x00006967      c3             ret
0x00006968      0f1f84000000.  nop dword [rax + rax]
0x00006970      488d742410     lea rsi, [rsp + 0x10]                   ; ../coreutils-8.31/lib/fts.c:735
0x00006975      4489ef         mov edi, r13d
0x00006978      e823b3ffff     call sym.imp.fstatfs
0x0000697d      85c0           test eax, eax
0x0000697f      75c1           jne 0x6942
0x00006981      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:738
0x00006984      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00006989      74b9           je 0x6944
0x0000698b      bf10000000     mov edi, 0x10                           ; ../coreutils-8.31/lib/fts.c:740
0x00006990      e80bb2ffff     call sym.imp.malloc
0x00006995      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:741
0x00006998      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:740
0x0000699b      74a7           je 0x6944                               ; ../coreutils-8.31/lib/fts.c:741
0x0000699d      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:743
0x000069a1      49895d08       mov qword [r13 + 8], rbx                ; ../coreutils-8.31/lib/fts.c:744
0x000069a5      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/fts.c:746
0x000069a8      4c89e7         mov rdi, r12
0x000069ab      49894500       mov qword [r13], rax                    ; ../coreutils-8.31/lib/fts.c:743
0x000069af      e88c310000     call sym.hash_insert                    ; ../coreutils-8.31/lib/fts.c:746
0x000069b4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:747
0x000069b7      740f           je 0x69c8
0x000069b9      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/fts.c:748
0x000069bc      7519           jne 0x69d7
0x000069be      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000069c3      e97cffffff     jmp 0x6944                              ; ../coreutils-8.31/lib/fts.c:754
0x000069c8      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/fts.c:750
0x000069cb      e860b3ffff     call sym..plt.got
0x000069d0      ebec           jmp 0x69be
0x000069d2      e869b0ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts.c:755
0x000069d7      e844afffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:748
0x000069dc      0f1f4000       nop dword [rax]
;-- leaf_optimization:
0x000069e0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/fts.c:793
0x000069e4      e8c7feffff     call sym.filesystem_type                ; ../coreutils-8.31/lib/fts.c:794
0x000069e9      483d73496552   cmp rax, 0x52654973
0x000069ef      744f           je 0x6a40
0x000069f1      7e2d           jle 0x6a20
0x000069f3      483d42534658   cmp rax, 0x58465342
0x000069f9      7445           je 0x6a40
0x000069fb      ba424d53ff     mov edx, 0xff534d42
0x00006a00      4839d0         cmp rax, rdx
0x00006a03      7430           je 0x6a35
0x00006a05      483d4f414653   cmp rax, 0x5346414f
0x00006a0b      7428           je 0x6a35
0x00006a0d      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:825
0x00006a12      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00006a16      c3             ret
0x00006a17      660f1f840000.  nop word [rax + rax]
0x00006a20      483d69690000   cmp rax, 0x6969                         ; ../coreutils-8.31/lib/fts.c:794
0x00006a26      740d           je 0x6a35
0x00006a28      483da09f0000   cmp rax, 0x9fa0
0x00006a2e      7405           je 0x6a35
0x00006a30      4885c0         test rax, rax
0x00006a33      75d8           jne 0x6a0d
0x00006a35      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:822
0x00006a37      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00006a3b      c3             ret
0x00006a3c      0f1f4000       nop dword [rax]
0x00006a40      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/fts.c:800
0x00006a45      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00006a49      c3             ret
0x00006a4a      660f1f440000   nop word [rax + rax]
;-- cwd_advance_fd:
0x00006a50      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:306
0x00006a51      53             push rbx
0x00006a52      89f5           mov ebp, esi
0x00006a54      4889fb         mov rbx, rdi
0x00006a57      4883ec08       sub rsp, 8
0x00006a5b      8b772c         mov esi, dword [rdi + 0x2c]             ; ../coreutils-8.31/lib/fts.c:307
0x00006a5e      39ee           cmp esi, ebp                            ; ../coreutils-8.31/lib/fts.c:308
0x00006a60      7505           jne 0x6a67
0x00006a62      83fe9c         cmp esi, 0xffffff9c
0x00006a65      754a           jne 0x6ab1
0x00006a67      84d2           test dl, dl                             ; ../coreutils-8.31/lib/fts.c:310
0x00006a69      7515           jne 0x6a80
0x00006a6b      f6434804       test byte [rbx + 0x48], 4               ; ../coreutils-8.31/lib/fts.c:321
0x00006a6f      7504           jne 0x6a75
0x00006a71      85f6           test esi, esi
0x00006a73      792b           jns 0x6aa0
0x00006a75      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00006a78      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x00006a7c      5b             pop rbx
0x00006a7d      5d             pop rbp
0x00006a7e      c3             ret
0x00006a7f      90             nop
0x00006a80      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:314
0x00006a84      e857330000     call sym.i_ring_push
0x00006a89      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:316
0x00006a8b      78e8           js 0x6a75
0x00006a8d      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:317
0x00006a8f      e84cb0ffff     call sym.imp.close
0x00006a94      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00006a97      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x00006a9b      5b             pop rbx
0x00006a9c      5d             pop rbp
0x00006a9d      c3             ret
0x00006a9e      6690           nop
0x00006aa0      89f7           mov edi, esi                            ; ../coreutils-8.31/lib/fts.c:322
0x00006aa2      e839b0ffff     call sym.imp.close
0x00006aa7      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00006aaa      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x00006aae      5b             pop rbx
0x00006aaf      5d             pop rbp
0x00006ab0      c3             ret
0x00006ab1      e86aaeffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:308
0x00006ab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- restore_initial_cwd:
0x00006ac0      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:334
0x00006ac1      53             push rbx
0x00006ac2      4889fb         mov rbx, rdi
0x00006ac5      4883ec08       sub rsp, 8
0x00006ac9      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/fts.c:335
0x00006acc      89d5           mov ebp, edx
0x00006ace      83e504         and ebp, 4
0x00006ad1      7545           jne 0x6b18
0x00006ad3      80e602         and dh, 2
0x00006ad6      7528           jne 0x6b00
0x00006ad8      8b7f28         mov edi, dword [rdi + 0x28]
0x00006adb      31ed           xor ebp, ebp
0x00006add      e80eb1ffff     call sym.imp.fchdir
0x00006ae2      85c0           test eax, eax
0x00006ae4      400f95c5       setne bpl
0x00006ae8      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:336
0x00006aec      e87ffdffff     call sym.fd_ring_clear
0x00006af1      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:338
0x00006af5      89e8           mov eax, ebp
0x00006af7      5b             pop rbx
0x00006af8      5d             pop rbp
0x00006af9      c3             ret
0x00006afa      660f1f440000   nop word [rax + rax]
0x00006b00      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:335
0x00006b05      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00006b0a      e841ffffff     call sym.cwd_advance_fd
0x00006b0f      ebd7           jmp 0x6ae8
0x00006b11      0f1f80000000.  nop dword [rax]
0x00006b18      31ed           xor ebp, ebp
0x00006b1a      ebcc           jmp 0x6ae8
0x00006b1c      0f1f4000       nop dword [rax]
;-- fts_palloc.isra.2:
0x00006b20      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1966
0x00006b21      488b0e         mov rcx, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:1969
0x00006b24      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/fts.c:1966
0x00006b27      488b3f         mov rdi, qword [rdi]
0x00006b2a      488d84110001.  lea rax, [rcx + rdx + 0x100]            ; ../coreutils-8.31/lib/fts.c:1969
0x00006b32      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/fts.c:1974
0x00006b35      7721           ja 0x6b58
0x00006b37      488906         mov qword [rsi], rax                    ; ../coreutils-8.31/lib/fts.c:1980
0x00006b3a      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/fts.c:1981
0x00006b3d      e8beb0ffff     call sym.imp.realloc
0x00006b42      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1982
0x00006b45      7431           je 0x6b78
0x00006b47      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts.c:1987
0x00006b4a      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1988
0x00006b4f      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00006b50      c3             ret
0x00006b51      0f1f80000000.  nop dword [rax]
0x00006b58      e8d3b1ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1975
0x00006b5d      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1976
0x00006b64      e8c7adffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1977
0x00006b69      c70024000000   mov dword [rax], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x00006b6f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:1978
0x00006b71      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00006b72      c3             ret
0x00006b73      0f1f440000     nop dword [rax + rax]
0x00006b78      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/fts.c:1983
0x00006b7b      e8b0b1ffff     call sym..plt.got
0x00006b80      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1984
0x00006b87      31c0           xor eax, eax
0x00006b89      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00006b8a      c3             ret
0x00006b8b      0f1f440000     nop dword [rax + rax]
;-- setup_dir.isra.4:
0x00006b90      81e702010000   and edi, 0x102                          ; ../coreutils-8.31/lib/fts-cycle.c:50
0x00006b96      53             push rbx
0x00006b97      4889f3         mov rbx, rsi
0x00006b9a      7434           je 0x6bd0                               ; ../coreutils-8.31/lib/fts-cycle.c:52
0x00006b9c      4c8b052d7420.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts-cycle.c:55 ; [0x20dfd0:8]=0
0x00006ba3      488d0d86f8ff.  lea rcx, sym.AD_compare                 ; 0x6430 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x00006baa      488d159ff8ff.  lea rdx, sym.AD_hash                    ; 0x6450 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x00006bb1      31f6           xor esi, esi
0x00006bb3      bf1f000000     mov edi, 0x1f
0x00006bb8      e883270000     call sym.hash_initialize
0x00006bbd      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:57
0x00006bc0      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts-cycle.c:55
0x00006bc3      0f95c0         setne al                                ; ../coreutils-8.31/lib/fts-cycle.c:57
0x00006bc6      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x00006bc7      c3             ret
0x00006bc8      0f1f84000000.  nop dword [rax + rax]
0x00006bd0      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/fts-cycle.c:62 ; "@"
0x00006bd5      e8c6afffff     call sym.imp.malloc
0x00006bda      4889c7         mov rdi, rax
0x00006bdd      488903         mov qword [rbx], rax
0x00006be0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:64
0x00006be2      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts-cycle.c:63
0x00006be5      74df           je 0x6bc6
0x00006be7      e8741d0000     call sym.cycle_check_init               ; ../coreutils-8.31/lib/fts-cycle.c:65
0x00006bec      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts-cycle.c:68
0x00006bf1      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x00006bf2      c3             ret
0x00006bf3      0f1f00         nop dword [rax]
0x00006bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- diropen.isra.6:
0x00006c00      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:346
0x00006c03      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/fts.c:349
0x00006c05      c1e20d         shl edx, 0xd
0x00006c08      81e200000200   and edx, 0x20000
0x00006c0e      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/fts.c:348
0x00006c14      81e600020000   and esi, 0x200                          ; ../coreutils-8.31/lib/fts.c:353
0x00006c1a      7514           jne 0x6c30
0x00006c1c      4889c7         mov rdi, rax
0x00006c1f      89d6           mov esi, edx
0x00006c21      31c0           xor eax, eax
0x00006c23      e9d81d0000     jmp sym.open_safer
0x00006c28      0f1f84000000.  nop dword [rax + rax]
0x00006c30      4889c6         mov rsi, rax
0x00006c33      31c0           xor eax, eax
0x00006c35      e966320000     jmp sym.openat_safer
0x00006c3a      660f1f440000   nop word [rax + rax]
;-- fts_safe_changedir:
0x00006c40      4157           push r15                                ; ../coreutils-8.31/lib/fts.c:2044
0x00006c42      4156           push r14
0x00006c44      4989f6         mov r14, rsi
0x00006c47      4155           push r13
0x00006c49      4154           push r12
0x00006c4b      4989fd         mov r13, rdi
0x00006c4e      55             push rbp
0x00006c4f      53             push rbx
0x00006c50      4189d4         mov r12d, edx
0x00006c53      4889cd         mov rbp, rcx
0x00006c56      4881ecb80000.  sub rsp, 0xb8
0x00006c5d      8b5f48         mov ebx, dword [rdi + 0x48]
0x00006c60      64488b042528.  mov rax, qword fs:[0x28]
0x00006c69      48898424a800.  mov qword [rsp + 0xa8], rax
0x00006c71      31c0           xor eax, eax
0x00006c73      4189d9         mov r9d, ebx
0x00006c76      4183e104       and r9d, 4
0x00006c7a      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/fts.c:2046
0x00006c7d      0f84ad000000   je 0x6d30
0x00006c83      488d153f4f00.  lea rdx, [0x0000bbc9]                   ; ".."
0x00006c8a      b903000000     mov ecx, 3
0x00006c8f      4889ee         mov rsi, rbp
0x00006c92      4889d7         mov rdi, rdx
0x00006c95      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006c97      0f97c0         seta al
0x00006c9a      1c00           sbb al, 0
0x00006c9c      84c0           test al, al
0x00006c9e      0f858c000000   jne 0x6d30
0x00006ca4      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x00006ca7      0f8588000000   jne 0x6d35
0x00006cad      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2060
0x00006cb0      0f89e4010000   jns 0x6e9a
0x00006cb6      f6c702         test bh, 2
0x00006cb9      0f8541010000   jne 0x6e00
0x00006cbf      c644240f01     mov byte [rsp + 0xf], 1
0x00006cc4      418b7d2c       mov edi, dword [r13 + 0x2c]             ; ../coreutils-8.31/lib/fts.c:2082
0x00006cc8      4889ea         mov rdx, rbp
0x00006ccb      89de           mov esi, ebx
0x00006ccd      e82effffff     call sym.diropen.isra.6
0x00006cd2      85c0           test eax, eax
0x00006cd4      4189c7         mov r15d, eax
0x00006cd7      0f88ae010000   js 0x6e8b
0x00006cdd      418b5d48       mov ebx, dword [r13 + 0x48]
0x00006ce1      f6c302         test bl, 2                              ; ../coreutils-8.31/lib/fts.c:2092
0x00006ce4      0f84a0000000   je 0x6d8a
0x00006cea      660f1f440000   nop word [rax + rax]
0x00006cf0      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x00006cf5      4489fe         mov esi, r15d
0x00006cf8      bf01000000     mov edi, 1
0x00006cfd      e8ceaeffff     call sym.imp.__fxstat
0x00006d02      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:2096
0x00006d04      0f84c6000000   je 0x6dd0
0x00006d0a      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:2099 ; -1
0x00006d0f      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2118
0x00006d12      7931           jns 0x6d45
0x00006d14      e817acffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:2120
0x00006d19      448b20         mov r12d, dword [rax]
0x00006d1c      4889c5         mov rbp, rax
0x00006d1f      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts.c:2121
0x00006d22      e8b9adffff     call sym.imp.close
0x00006d27      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fts.c:2122
0x00006d2b      eb18           jmp 0x6d45
0x00006d2d      0f1f00         nop dword [rax]
0x00006d30      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x00006d33      743b           je 0x6d70
0x00006d35      80e702         and bh, 2                               ; ../coreutils-8.31/lib/fts.c:2055
0x00006d38      7409           je 0x6d43
0x00006d3a      4585e4         test r12d, r12d
0x00006d3d      0f89ad000000   jns 0x6df0
0x00006d43      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:2057
0x00006d45      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x00006d4d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006d56      89d8           mov eax, ebx
0x00006d58      0f8537010000   jne 0x6e95
0x00006d5e      4881c4b80000.  add rsp, 0xb8
0x00006d65      5b             pop rbx
0x00006d66      5d             pop rbp
0x00006d67      415c           pop r12
0x00006d69      415d           pop r13                                 ; ../coreutils-8.31/lib/fts-cycle.c:2014
0x00006d6b      415e           pop r14
0x00006d6d      415f           pop r15
0x00006d6f      c3             ret
0x00006d70      4585e4         test r12d, r12d
0x00006d73      0f8837010000   js 0x6eb0
0x00006d79      f6c302         test bl, 2
0x00006d7c      4589e7         mov r15d, r12d
0x00006d7f      c644240f00     mov byte [rsp + 0xf], 0
0x00006d84      0f8566ffffff   jne 0x6cf0
0x00006d8a      4885ed         test rbp, rbp
0x00006d8d      7421           je 0x6db0
0x00006d8f      488d15334e00.  lea rdx, [0x0000bbc9]                   ; ".."
0x00006d96      b903000000     mov ecx, 3
0x00006d9b      4889ee         mov rsi, rbp
0x00006d9e      4889d7         mov rdi, rdx
0x00006da1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006da3      0f97c0         seta al                                 ; ../coreutils-8.31/lib/fts-cycle.c:2010
0x00006da6      1c00           sbb al, 0
0x00006da8      84c0           test al, al
0x00006daa      0f8440ffffff   je 0x6cf0
0x00006db0      80e702         and bh, 2
0x00006db3      0f858f000000   jne 0x6e48
0x00006db9      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:1971
0x00006dbc      e82faeffff     call sym.imp.fchdir
0x00006dc1      89c3           mov ebx, eax
0x00006dc3      e947ffffff     jmp 0x6d0f
0x00006dc8      0f1f84000000.  nop dword [rax + rax]
0x00006dd0      488b442410     mov rax, qword [rsp + 0x10]
0x00006dd5      49394678       cmp qword [r14 + 0x78], rax
0x00006dd9      0f8491000000   je 0x6e70                               ; ../coreutils-8.31/lib/fts-cycle.c:1977
0x00006ddf      e84cabffff     call sym.imp.__errno_location
0x00006de4      c70002000000   mov dword [rax], 2
0x00006dea      e91bffffff     jmp 0x6d0a
0x00006def      90             nop
0x00006df0      4489e7         mov edi, r12d
0x00006df3      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00006df5      e8e6acffff     call sym.imp.close
0x00006dfa      e946ffffff     jmp 0x6d45
0x00006dff      90             nop
0x00006e00      4d8d7d60       lea r15, [r13 + 0x60]
0x00006e04      4c89ff         mov rdi, r15
0x00006e07      e8c42f0000     call sym.i_ring_empty
0x00006e0c      84c0           test al, al
0x00006e0e      8844240f       mov byte [rsp + 0xf], al
0x00006e12      0f85acfeffff   jne 0x6cc4
0x00006e18      4c89ff         mov rdi, r15
0x00006e1b      e800300000     call sym.i_ring_pop
0x00006e20      85c0           test eax, eax
0x00006e22      4189c7         mov r15d, eax
0x00006e25      418b5d48       mov ebx, dword [r13 + 0x48]
0x00006e29      0f8890feffff   js 0x6cbf                               ; ../coreutils-8.31/lib/fts-cycle.c:2006
0x00006e2f      f6c302         test bl, 2
0x00006e32      4189c4         mov r12d, eax
0x00006e35      c644240f01     mov byte [rsp + 0xf], 1
0x00006e3a      0f8470ffffff   je 0x6db0
0x00006e40      e9abfeffff     jmp 0x6cf0
0x00006e45      0f1f00         nop dword [rax]
0x00006e48      440fb674240f   movzx r14d, byte [rsp + 0xf]
0x00006e4e      4489fe         mov esi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:2029
0x00006e51      4c89ef         mov rdi, r13
0x00006e54      31db           xor ebx, ebx
0x00006e56      4183f601       xor r14d, 1
0x00006e5a      410fb6d6       movzx edx, r14b
0x00006e5e      e8edfbffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00006e63      e9ddfeffff     jmp 0x6d45
0x00006e68      0f1f84000000.  nop dword [rax + rax]
0x00006e70      488b442418     mov rax, qword [rsp + 0x18]
0x00006e75      493986800000.  cmp qword [r14 + 0x80], rax
0x00006e7c      0f855dffffff   jne 0x6ddf
0x00006e82      418b5d48       mov ebx, dword [r13 + 0x48]
0x00006e86      e925ffffff     jmp 0x6db0                              ; ../coreutils-8.31/lib/fts-cycle.c:-22
0x00006e8b      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts-cycle.c:-17 ; -1
0x00006e90      e9b0feffff     jmp 0x6d45
0x00006e95      e8a6abffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts-cycle.c:-14
0x00006e9a      f6c302         test bl, 2
0x00006e9d      4589e7         mov r15d, r12d
0x00006ea0      c644240f01     mov byte [rsp + 0xf], 1
0x00006ea5      0f84ebfeffff   je 0x6d96                               ; ../coreutils-8.31/lib/fts-cycle.c:-4
0x00006eab      e940feffff     jmp 0x6cf0
0x00006eb0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/fts-cycle.c:-11
0x00006eb5      e90afeffff     jmp 0x6cc4
0x00006eba      660f1f440000   nop word [rax + rax]
;-- enter_dir.isra.10:
0x00006ec0      81e702010000   and edi, 0x102
0x00006ec6      4154           push r12
0x00006ec8      4989f4         mov r12, rsi
0x00006ecb      55             push rbp
0x00006ecc      53             push rbx                                ; ../coreutils-8.31/lib/fts-cycle.c:0
0x00006ecd      4889d3         mov rbx, rdx
0x00006ed0      746e           je 0x6f40
0x00006ed2      bf18000000     mov edi, 0x18
0x00006ed7      e8c4acffff     call sym.imp.malloc
0x00006edc      4885c0         test rax, rax
0x00006edf      4889c5         mov rbp, rax
0x00006ee2      0f8480000000   je 0x6f68
0x00006ee8      488b4378       mov rax, qword [rbx + 0x78]
0x00006eec      498b3c24       mov rdi, qword [r12]
0x00006ef0      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts-cycle.c:24
0x00006ef3      48895d10       mov qword [rbp + 0x10], rbx
0x00006ef7      48894500       mov qword [rbp], rax
0x00006efb      488b83800000.  mov rax, qword [rbx + 0x80]
0x00006f02      48894508       mov qword [rbp + 8], rax
0x00006f06      e8352c0000     call sym.hash_insert
0x00006f0b      4839c5         cmp rbp, rax
0x00006f0e      4989c4         mov r12, rax
0x00006f11      741e           je 0x6f31
0x00006f13      4889ef         mov rdi, rbp
0x00006f16      e815aeffff     call sym..plt.got
0x00006f1b      4d85e4         test r12, r12
0x00006f1e      7448           je 0x6f68
0x00006f20      498b442410     mov rax, qword [r12 + 0x10]
0x00006f25      b902000000     mov ecx, 2
0x00006f2a      66894b70       mov word [rbx + 0x70], cx
0x00006f2e      488903         mov qword [rbx], rax
0x00006f31      5b             pop rbx
0x00006f32      b801000000     mov eax, 1
0x00006f37      5d             pop rbp
0x00006f38      415c           pop r12
0x00006f3a      c3             ret
0x00006f3b      0f1f440000     nop dword [rax + rax]
0x00006f40      498b3c24       mov rdi, qword [r12]                    ; ../coreutils-8.31/lib/fts-cycle.c:32
0x00006f44      488d7278       lea rsi, [rdx + 0x78]
0x00006f48      e8231a0000     call sym.cycle_check                    ; ../coreutils-8.31/lib/fts-cycle.c:45
0x00006f4d      84c0           test al, al
0x00006f4f      74e0           je 0x6f31
0x00006f51      ba02000000     mov edx, 2
0x00006f56      48891b         mov qword [rbx], rbx
0x00006f59      66895370       mov word [rbx + 0x70], dx
0x00006f5d      5b             pop rbx
0x00006f5e      5d             pop rbp
0x00006f5f      415c           pop r12
0x00006f61      c3             ret
0x00006f62      660f1f440000   nop word [rax + rax]
0x00006f68      5b             pop rbx
0x00006f69      31c0           xor eax, eax
0x00006f6b      5d             pop rbp
0x00006f6c      415c           pop r12
0x00006f6e      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:50
0x00006f6f      90             nop
;-- leave_dir.isra.12:
0x00006f70      4883ec28       sub rsp, 0x28
0x00006f74      4889f1         mov rcx, rsi
0x00006f77      64488b042528.  mov rax, qword fs:[0x28]
0x00006f80      4889442418     mov qword [rsp + 0x18], rax
0x00006f85      31c0           xor eax, eax
0x00006f87      81e702010000   and edi, 0x102
0x00006f8d      7541           jne 0x6fd0                              ; ../coreutils-8.31/lib/fts-cycle.c:38
0x00006f8f      488b4208       mov rax, qword [rdx + 8]
0x00006f93      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:36
0x00006f96      741d           je 0x6fb5
0x00006f98      4883785800     cmp qword [rax + 0x58], 0
0x00006f9d      7816           js 0x6fb5
0x00006f9f      488b0e         mov rcx, qword [rsi]
0x00006fa2      4883791000     cmp qword [rcx + 0x10], 0
0x00006fa7      747a           je 0x7023
0x00006fa9      488bb2800000.  mov rsi, qword [rdx + 0x80]
0x00006fb0      483931         cmp qword [rcx], rsi
0x00006fb3      744b           je 0x7000
0x00006fb5      488b442418     mov rax, qword [rsp + 0x18]
0x00006fba      644833042528.  xor rax, qword fs:[0x28]
0x00006fc3      7559           jne 0x701e
0x00006fc5      4883c428       add rsp, 0x28
0x00006fc9      c3             ret
0x00006fca      660f1f440000   nop word [rax + rax]
0x00006fd0      488b4278       mov rax, qword [rdx + 0x78]
0x00006fd4      488b39         mov rdi, qword [rcx]
0x00006fd7      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts-cycle.c:50
0x00006fda      48890424       mov qword [rsp], rax
0x00006fde      488b82800000.  mov rax, qword [rdx + 0x80]
0x00006fe5      4889442408     mov qword [rsp + 8], rax
0x00006fea      e8b12b0000     call sym.hash_delete
0x00006fef      4885c0         test rax, rax
0x00006ff2      742f           je 0x7023
0x00006ff4      4889c7         mov rdi, rax
0x00006ff7      e834adffff     call sym..plt.got
0x00006ffc      ebb7           jmp 0x6fb5
0x00006ffe      6690           nop
0x00007000      488b7278       mov rsi, qword [rdx + 0x78]
0x00007004      48397108       cmp qword [rcx + 8], rsi
0x00007008      75ab           jne 0x6fb5
0x0000700a      488b5078       mov rdx, qword [rax + 0x78]
0x0000700e      488b80800000.  mov rax, qword [rax + 0x80]
0x00007015      48895108       mov qword [rcx + 8], rdx                ; ../coreutils-8.31/lib/fts.c:1225
0x00007019      488901         mov qword [rcx], rax
0x0000701c      eb97           jmp 0x6fb5
0x0000701e      e81daaffff     call sym.imp.__stack_chk_fail
0x00007023      e8f8a8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:1228
0x00007028      0f1f84000000.  nop dword [rax + rax]
;-- fts_build:
0x00007030      4157           push r15
0x00007032      4156           push r14
0x00007034      4989ff         mov r15, rdi
0x00007037      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1282
0x00007039      4154           push r12
0x0000703b      55             push rbp
0x0000703c      53             push rbx
0x0000703d      4883ec78       sub rsp, 0x78
0x00007041      488b2f         mov rbp, qword [rdi]
0x00007044      64488b042528.  mov rax, qword fs:[0x28]
0x0000704d      4889442468     mov qword [rsp + 0x68], rax
0x00007052      31c0           xor eax, eax
0x00007054      89742458       mov dword [rsp + 0x58], esi             ; ../coreutils-8.31/lib/fts.c:1343
0x00007058      488b4518       mov rax, qword [rbp + 0x18]
0x0000705c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1349
0x0000705f      4889442450     mov qword [rsp + 0x50], rax
0x00007064      0f8436040000   je 0x74a0
0x0000706a      4889c7         mov rdi, rax
0x0000706d      e8ceaaffff     call sym.imp.dirfd
0x00007072      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1344
0x00007074      89442464       mov dword [rsp + 0x64], eax
0x00007078      0f8852050000   js 0x75d0
0x0000707e      49837f4000     cmp qword [r15 + 0x40], 0
0x00007083      0f84cf070000   je 0x7858
0x00007089      48c7442438ff.  mov qword [rsp + 0x38], 0xffffffffffffffff
0x00007092      418b7f48       mov edi, dword [r15 + 0x48]
0x00007096      c644245f01     mov byte [rsp + 0x5f], 1
0x0000709b      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000709f      488b5538       mov rdx, qword [rbp + 0x38]             ; ../coreutils-8.31/lib/fts.c:1359
0x000070a3      48c744244000.  mov qword [rsp + 0x40], 0
0x000070ac      807c0aff2f     cmp byte [rdx + rcx - 1], 0x2f
0x000070b1      488d41ff       lea rax, [rcx - 1]                      ; ../coreutils-8.31/lib/fts.c:1351
0x000070b5      480f45c1       cmovne rax, rcx
0x000070b9      83e704         and edi, 4
0x000070bc      4889442448     mov qword [rsp + 0x48], rax
0x000070c1      7410           je 0x70d3
0x000070c3      49034720       add rax, qword [r15 + 0x20]
0x000070c7      488d5801       lea rbx, [rax + 1]
0x000070cb      c6002f         mov byte [rax], 0x2f                    ; ../coreutils-8.31/lib/fts.c:1360 ; '/'
                                                                       ; [0x2f:1]=0
0x000070ce      48895c2440     mov qword [rsp + 0x40], rbx
0x000070d3      488b442448     mov rax, qword [rsp + 0x48]
0x000070d8      498b5f30       mov rbx, qword [r15 + 0x30]
0x000070dc      c644245e00     mov byte [rsp + 0x5e], 0
0x000070e1      c644245d00     mov byte [rsp + 0x5d], 0
0x000070e6      48c744240800.  mov qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/fts.c:1298
0x000070ef      48c744241000.  mov qword [rsp + 0x10], 0
0x000070f8      4883c001       add rax, 1
0x000070fc      48896c2420     mov qword [rsp + 0x20], rbp             ; ../coreutils-8.31/lib/fts.c:1306
0x00007101      4829c3         sub rbx, rax
0x00007104      4889442418     mov qword [rsp + 0x18], rax
0x00007109      488b4558       mov rax, qword [rbp + 0x58]
0x0000710d      48895c2428     mov qword [rsp + 0x28], rbx
0x00007112      31db           xor ebx, ebx
0x00007114      4883c001       add rax, 1
0x00007118      4889442430     mov qword [rsp + 0x30], rax
0x0000711d      e9dd000000     jmp 0x71ff
0x00007122      660f1f440000   nop word [rax + rax]
0x00007128      4d89f1         mov r9, r14                             ; ../coreutils-8.31/lib/fts.c:1328
0x0000712b      4c034c2418     add r9, qword [rsp + 0x18]
0x00007130      0f825a080000   jb 0x7990
0x00007136      488b442430     mov rax, qword [rsp + 0x30]
0x0000713b      498db5080100.  lea rsi, [r13 + 0x108]
0x00007142      49894558       mov qword [r13 + 0x58], rax
0x00007146      498b07         mov rax, qword [r15]
0x00007149      4d894d48       mov qword [r13 + 0x48], r9
0x0000714d      49894508       mov qword [r13 + 8], rax
0x00007151      488b4500       mov rax, qword [rbp]
0x00007155      498985800000.  mov qword [r13 + 0x80], rax             ; ../coreutils-8.31/lib/fts.c:71
0x0000715c      418b4748       mov eax, dword [r15 + 0x48]
0x00007160      a804           test al, 4
0x00007162      0f8568020000   jne 0x73d0
0x00007168      49897530       mov qword [r13 + 0x30], rsi
0x0000716c      49837f4000     cmp qword [r15 + 0x40], 0
0x00007171      7409           je 0x717c
0x00007173      f6c404         test ah, 4
0x00007176      0f84fc020000   je 0x7478
0x0000717c      0fb65512       movzx edx, byte [rbp + 0x12]
0x00007180      83e018         and eax, 0x18
0x00007183      89d6           mov esi, edx
0x00007185      83ea01         sub edx, 1
0x00007188      83f818         cmp eax, 0x18
0x0000718b      0f84af020000   je 0x7440                               ; ../coreutils-8.31/lib/fts.c:1359
0x00007191      b90b000000     mov ecx, 0xb
0x00007196      83fa0b         cmp edx, 0xb
0x00007199      6641894d70     mov word [r13 + 0x70], cx
0x0000719e      0f8764020000   ja 0x7408
0x000071a4      488d05354a00.  lea rax, obj.CSWTCH.53                  ; 0xbbe0
0x000071ab      8b0490         mov eax, dword [rax + rdx*4]
0x000071ae      418985900000.  mov dword [r13 + 0x90], eax
0x000071b5      b802000000     mov eax, 2
0x000071ba      498985a80000.  mov qword [r13 + 0xa8], rax
0x000071c1      48837c241000   cmp qword [rsp + 0x10], 0
0x000071c7      49c745100000.  mov qword [r13 + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1237
0x000071cf      0f8423020000   je 0x73f8
0x000071d5      488b442408     mov rax, qword [rsp + 8]
0x000071da      4c896810       mov qword [rax + 0x10], r13             ; ../coreutils-8.31/lib/fts.c:1247
0x000071de      4881fb102700.  cmp rbx, 0x2710
0x000071e5      0f84f5000000   je 0x72e0
0x000071eb      4883c301       add rbx, 1
0x000071ef      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x000071f4      0f833e010000   jae 0x7338
0x000071fa      4c896c2408     mov qword [rsp + 8], r13
0x000071ff      488b442420     mov rax, qword [rsp + 0x20]
0x00007204      4c8b6818       mov r13, qword [rax + 0x18]             ; ../coreutils-8.31/lib/fts.c:1251
0x00007208      4d85ed         test r13, r13
0x0000720b      0f84c7040000   je 0x76d8
0x00007211      e81aa7ffff     call sym.imp.__errno_location
0x00007216      4c89ef         mov rdi, r13
0x00007219      c70000000000   mov dword [rax], 0
0x0000721f      4989c4         mov r12, rax
0x00007222      e869a9ffff     call sym.imp.readdir
0x00007227      4885c0         test rax, rax
0x0000722a      4889c5         mov rbp, rax
0x0000722d      0f847d050000   je 0x77b0
0x00007233      41f6474820     test byte [r15 + 0x48], 0x20
0x00007238      750a           jne 0x7244
0x0000723a      8078132e       cmp byte [rax + 0x13], 0x2e
0x0000723e      0f84dc010000   je 0x7420
0x00007244      4c8d6d13       lea r13, [rbp + 0x13]
0x00007248      4c89ef         mov rdi, r13
0x0000724b      e8c0a7ffff     call sym.imp.strlen
0x00007250      4c89ee         mov rsi, r13
0x00007253      4889c2         mov rdx, rax
0x00007256      4c89ff         mov rdi, r15
0x00007259      4989c6         mov r14, rax
0x0000725c      e82ff5ffff     call sym.fts_alloc
0x00007261      4885c0         test rax, rax
0x00007264      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:1278
0x00007267      0f8413040000   je 0x7680
0x0000726d      4c39742428     cmp qword [rsp + 0x28], r14
0x00007272      0f87b0feffff   ja 0x7128
0x00007278      498b4720       mov rax, qword [r15 + 0x20]
0x0000727c      498d7730       lea rsi, [r15 + 0x30]
0x00007280      498d7f20       lea rdi, [r15 + 0x20]
0x00007284      4889442428     mov qword [rsp + 0x28], rax
0x00007289      488b442448     mov rax, qword [rsp + 0x48]
0x0000728e      4a8d543002     lea rdx, [rax + r14 + 2]
0x00007293      e888f8ffff     call sym.fts_palloc.isra.2
0x00007298      84c0           test al, al
0x0000729a      0f84e0030000   je 0x7680
0x000072a0      498b5720       mov rdx, qword [r15 + 0x20]
0x000072a4      483b542428     cmp rdx, qword [rsp + 0x28]
0x000072a9      0f84e1010000   je 0x7490
0x000072af      4803542418     add rdx, qword [rsp + 0x18]
0x000072b4      41f6474804     test byte [r15 + 0x48], 4
0x000072b9      480f44542440   cmove rdx, qword [rsp + 0x40]
0x000072bf      4889542440     mov qword [rsp + 0x40], rdx
0x000072c4      498b4f30       mov rcx, qword [r15 + 0x30]
0x000072c8      482b4c2418     sub rcx, qword [rsp + 0x18]
0x000072cd      8844245d       mov byte [rsp + 0x5d], al
0x000072d1      48894c2428     mov qword [rsp + 0x28], rcx
0x000072d6      e94dfeffff     jmp 0x7128
0x000072db      0f1f440000     nop dword [rax + rax]
0x000072e0      49837f4000     cmp qword [r15 + 0x40], 0
0x000072e5      0f8500ffffff   jne 0x71eb
0x000072eb      8b742464       mov esi, dword [rsp + 0x64]
0x000072ef      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000072f4      e8b7f5ffff     call sym.filesystem_type
0x000072f9      483d94190201   cmp rax, 0x1021994
0x000072ff      0f846b030000   je 0x7670
0x00007305      b9424d53ff     mov ecx, 0xff534d42
0x0000730a      4839c8         cmp rax, rcx
0x0000730d      0f845d030000   je 0x7670
0x00007313      483d69690000   cmp rax, 0x6969
0x00007319      0f8451030000   je 0x7670
0x0000731f      4883c301       add rbx, 1
0x00007323      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x00007328      c644245e01     mov byte [rsp + 0x5e], 1
0x0000732d      0f82c7feffff   jb 0x71fa
0x00007333      0f1f440000     nop dword [rax + rax]
0x00007338      807c245d00     cmp byte [rsp + 0x5d], 0
0x0000733d      488b6c2420     mov rbp, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/fts.c:1664
0x00007342      0f849e030000   je 0x76e6
0x00007348      498b4708       mov rax, qword [r15 + 8]
0x0000734c      498b4f20       mov rcx, qword [r15 + 0x20]
0x00007350      4885c0         test rax, rax
0x00007353      742b           je 0x7380
0x00007355      0f1f00         nop dword [rax]
0x00007358      488b5030       mov rdx, qword [rax + 0x30]             ; string_fortified.h:-312
0x0000735c      488db0080100.  lea rsi, [rax + 0x108]
0x00007363      4839f2         cmp rdx, rsi
0x00007366      740b           je 0x7373
0x00007368      482b5038       sub rdx, qword [rax + 0x38]
0x0000736c      4801ca         add rdx, rcx
0x0000736f      48895030       mov qword [rax + 0x30], rdx
0x00007373      48894838       mov qword [rax + 0x38], rcx
0x00007377      488b4010       mov rax, qword [rax + 0x10]
0x0000737b      4885c0         test rax, rax
0x0000737e      75d8           jne 0x7358
0x00007380      488b442410     mov rax, qword [rsp + 0x10]
0x00007385      eb0c           jmp 0x7393
0x00007387      660f1f840000.  nop word [rax + rax]
0x00007390      4889d0         mov rax, rdx
0x00007393      4883785800     cmp qword [rax + 0x58], 0
0x00007398      0f8848030000   js 0x76e6
0x0000739e      488b5030       mov rdx, qword [rax + 0x30]
0x000073a2      488db0080100.  lea rsi, [rax + 0x108]
0x000073a9      4839f2         cmp rdx, rsi
0x000073ac      740b           je 0x73b9
0x000073ae      482b5038       sub rdx, qword [rax + 0x38]
0x000073b2      4801ca         add rdx, rcx
0x000073b5      48895030       mov qword [rax + 0x30], rdx
0x000073b9      488b5010       mov rdx, qword [rax + 0x10]
0x000073bd      48894838       mov qword [rax + 0x38], rcx
0x000073c1      4885d2         test rdx, rdx
0x000073c4      75ca           jne 0x7390
0x000073c6      488b5008       mov rdx, qword [rax + 8]
0x000073ca      ebc4           jmp 0x7390
0x000073cc      0f1f4000       nop dword [rax]
0x000073d0      498b4538       mov rax, qword [r13 + 0x38]
0x000073d4      488b7c2440     mov rdi, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/fts.c:-185
0x000073d9      49894530       mov qword [r13 + 0x30], rax
0x000073dd      498b4560       mov rax, qword [r13 + 0x60]
0x000073e1      488d5001       lea rdx, [rax + 1]
0x000073e5      e846a8ffff     call sym.imp.memmove
0x000073ea      418b4748       mov eax, dword [r15 + 0x48]
0x000073ee      e979fdffff     jmp 0x716c
0x000073f3      0f1f440000     nop dword [rax + rax]
0x000073f8      4c896c2410     mov qword [rsp + 0x10], r13
0x000073fd      e9dcfdffff     jmp 0x71de
0x00007402      660f1f440000   nop word [rax + rax]
0x00007408      41c785900000.  mov dword [r13 + 0x90], 0
0x00007413      b802000000     mov eax, 2
0x00007418      e99dfdffff     jmp 0x71ba
0x0000741d      0f1f00         nop dword [rax]
0x00007420      80781400       cmp byte [rax + 0x14], 0
0x00007424      740b           je 0x7431
0x00007426      668378142e     cmp word [rax + 0x14], 0x2e
0x0000742b      0f8513feffff   jne 0x7244
0x00007431      4c8b6c2408     mov r13, qword [rsp + 8]
0x00007436      e9bffdffff     jmp 0x71fa                              ; ../coreutils-8.31/lib/fts.c:860
0x0000743b      0f1f440000     nop dword [rax + rax]
0x00007440      81e6fb000000   and esi, 0xfb
0x00007446      0f8445fdffff   je 0x7191
0x0000744c      b80b000000     mov eax, 0xb
0x00007451      83fa0b         cmp edx, 0xb                            ; ../coreutils-8.31/lib/fts.c:872
0x00007454      6641894570     mov word [r13 + 0x70], ax
0x00007459      0f8687050000   jbe 0x79e6
0x0000745f      41c785900000.  mov dword [r13 + 0x90], 0
0x0000746a      b801000000     mov eax, 1
0x0000746f      e946fdffff     jmp 0x71ba
0x00007474      0f1f4000       nop dword [rax]
0x00007478      31d2           xor edx, edx
0x0000747a      4c89ee         mov rsi, r13
0x0000747d      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:926
0x00007480      e82bf0ffff     call sym.fts_stat
0x00007485      6641894570     mov word [r13 + 0x70], ax
0x0000748a      e932fdffff     jmp 0x71c1
0x0000748f      90             nop
0x00007490      0fb644245d     movzx eax, byte [rsp + 0x5d]
0x00007495      e92afeffff     jmp 0x72c4
0x0000749a      660f1f440000   nop word [rax + rax]
0x000074a0      8b4748         mov eax, dword [rdi + 0x48]
0x000074a3      89c2           mov edx, eax
0x000074a5      83e210         and edx, 0x10
0x000074a8      740d           je 0x74b7
0x000074aa      a801           test al, 1
0x000074ac      ba00000200     mov edx, 0x20000                        ; ../coreutils-8.31/lib/fts.c:931
0x000074b1      0f8501010000   jne 0x75b8
0x000074b7      2504020000     and eax, 0x204
0x000074bc      488b7530       mov rsi, qword [rbp + 0x30]
0x000074c0      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000074c5      3d00020000     cmp eax, 0x200
0x000074ca      7504           jne 0x74d0
0x000074cc      418b7f2c       mov edi, dword [r15 + 0x2c]
0x000074d0      488d4c2464     lea rcx, [rsp + 0x64]
0x000074d5      e8362a0000     call sym.opendirat                      ; ../coreutils-8.31/lib/fts.c:938
0x000074da      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:940
0x000074dd      48894518       mov qword [rbp + 0x18], rax
0x000074e1      0f8419030000   je 0x7800
0x000074e7      66837d700b     cmp word [rbp + 0x70], 0xb
0x000074ec      0f848e030000   je 0x7880
0x000074f2      418b7f48       mov edi, dword [r15 + 0x48]
0x000074f6      f7c700010000   test edi, 0x100
0x000074fc      0f851e010000   jne 0x7620
0x00007502      49837f4001     cmp qword [r15 + 0x40], 1
0x00007507      4819c0         sbb rax, rax
0x0000750a      25a1860100     and eax, 0x186a1                        ; ../coreutils-8.31/lib/fts.c:943
0x0000750f      4883e801       sub rax, 1
0x00007513      837c245802     cmp dword [rsp + 0x58], 2
0x00007518      4889442438     mov qword [rsp + 0x38], rax
0x0000751d      0f844d030000   je 0x7870
0x00007523      418b5748       mov edx, dword [r15 + 0x48]
0x00007527      8b442464       mov eax, dword [rsp + 0x64]
0x0000752b      83e238         and edx, 0x38
0x0000752e      83fa18         cmp edx, 0x18
0x00007531      0f849d030000   je 0x78d4
0x00007537      837c245803     cmp dword [rsp + 0x58], 3
0x0000753c      41bc01000000   mov r12d, 1
0x00007542      0f94c3         sete bl
0x00007545      41f6474902     test byte [r15 + 0x49], 2
0x0000754a      0f85dc030000   jne 0x792c
0x00007550      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:848
0x00007552      0f8960030000   jns 0x78b8
0x00007558      84db           test bl, bl
0x0000755a      740f           je 0x756b
0x0000755c      4584e4         test r12b, r12b
0x0000755f      740a           je 0x756b                               ; ../coreutils-8.31/lib/fts.c:1170
0x00007561      e8caa3ffff     call sym.imp.__errno_location
0x00007566      8b00           mov eax, dword [rax]
0x00007568      894540         mov dword [rbp + 0x40], eax
0x0000756b      66834d7201     or word [rbp + 0x72], 1
0x00007570      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007574      e887a5ffff     call sym.imp.closedir
0x00007579      418b7f48       mov edi, dword [r15 + 0x48]
0x0000757d      48c745180000.  mov qword [rbp + 0x18], 0
0x00007585      f7c700020000   test edi, 0x200
0x0000758b      7413           je 0x75a0
0x0000758d      8b442464       mov eax, dword [rsp + 0x64]
0x00007591      85c0           test eax, eax
0x00007593      780b           js 0x75a0
0x00007595      89c7           mov edi, eax
0x00007597      e844a5ffff     call sym.imp.close
0x0000759c      418b7f48       mov edi, dword [r15 + 0x48]
0x000075a0      48c745180000.  mov qword [rbp + 0x18], 0
0x000075a8      c644245f00     mov byte [rsp + 0x5f], 0
0x000075ad      e9e9faffff     jmp 0x709b
0x000075b2      660f1f440000   nop word [rax + rax]
0x000075b8      31d2           xor edx, edx
0x000075ba      48837d5800     cmp qword [rbp + 0x58], 0
0x000075bf      0f95c2         setne dl
0x000075c2      c1e211         shl edx, 0x11                           ; ../coreutils-8.31/lib/fts.c:886
0x000075c5      e9edfeffff     jmp 0x74b7
0x000075ca      660f1f440000   nop word [rax + rax]
0x000075d0      488b7d18       mov rdi, qword [rbp + 0x18]
0x000075d4      e827a5ffff     call sym.imp.closedir
0x000075d9      837c245803     cmp dword [rsp + 0x58], 3
0x000075de      48c745180000.  mov qword [rbp + 0x18], 0
0x000075e6      0f841f020000   je 0x780b
0x000075ec      48c744241000.  mov qword [rsp + 0x10], 0
0x000075f5      488b5c2468     mov rbx, qword [rsp + 0x68]
0x000075fa      6448331c2528.  xor rbx, qword fs:[0x28]
0x00007603      488b442410     mov rax, qword [rsp + 0x10]
0x00007608      0f85d3030000   jne 0x79e1
0x0000760e      4883c478       add rsp, 0x78                           ; ../coreutils-8.31/lib/fts.c:1011
0x00007612      5b             pop rbx
0x00007613      5d             pop rbp
0x00007614      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:1010
0x00007616      415d           pop r13
0x00007618      415e           pop r14
0x0000761a      415f           pop r15
0x0000761c      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1014
0x0000761d      0f1f00         nop dword [rax]
0x00007620      498d5f58       lea rbx, [r15 + 0x58]
0x00007624      4889ea         mov rdx, rbp
0x00007627      4889de         mov rsi, rbx
0x0000762a      e841f9ffff     call sym.leave_dir.isra.12              ; ../coreutils-8.31/lib/fts.c:1012
0x0000762f      31d2           xor edx, edx
0x00007631      4889ee         mov rsi, rbp
0x00007634      4c89ff         mov rdi, r15
0x00007637      e874eeffff     call sym.fts_stat
0x0000763c      418b7f48       mov edi, dword [r15 + 0x48]             ; ../coreutils-8.31/lib/fts.c:994
0x00007640      4889ea         mov rdx, rbp
0x00007643      4889de         mov rsi, rbx
0x00007646      e875f8ffff     call sym.enter_dir.isra.10
0x0000764b      84c0           test al, al
0x0000764d      0f85affeffff   jne 0x7502
0x00007653      e8d8a2ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1004
0x00007658      48c744241000.  mov qword [rsp + 0x10], 0
0x00007661      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00007667      eb8c           jmp 0x75f5
0x00007669      0f1f80000000.  nop dword [rax]
0x00007670      c644245e00     mov byte [rsp + 0x5e], 0
0x00007675      e971fbffff     jmp 0x71eb
0x0000767a      660f1f440000   nop word [rax + rax]
0x00007680      4c89ef         mov rdi, r13
0x00007683      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00007688      418b1c24       mov ebx, dword [r12]
0x0000768c      e89fa6ffff     call sym..plt.got
0x00007691      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007696      e885f1ffff     call sym.fts_lfree
0x0000769b      488b7d18       mov rdi, qword [rbp + 0x18]
0x0000769f      e85ca4ffff     call sym.imp.closedir
0x000076a4      41b907000000   mov r9d, 7                              ; ../coreutils-8.31/lib/fts.c:1006
0x000076aa      48c745180000.  mov qword [rbp + 0x18], 0
0x000076b2      48c744241000.  mov qword [rsp + 0x10], 0
0x000076bb      6644894d70     mov word [rbp + 0x70], r9w
0x000076c0      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0x2825 ; "%("
0x000076c8      41891c24       mov dword [r12], ebx
0x000076cc      e924ffffff     jmp 0x75f5
0x000076d1      0f1f80000000.  nop dword [rax]
0x000076d8      4889c5         mov rbp, rax
0x000076db      807c245d00     cmp byte [rsp + 0x5d], 0
0x000076e0      0f8562fcffff   jne 0x7348
0x000076e6      41f6474804     test byte [r15 + 0x48], 4
0x000076eb      741e           je 0x770b
0x000076ed      488b442418     mov rax, qword [rsp + 0x18]
0x000076f2      49394730       cmp qword [r15 + 0x30], rax
0x000076f6      7405           je 0x76fd                               ; ../coreutils-8.31/lib/fts.c:849
0x000076f8      4885db         test rbx, rbx
0x000076fb      7506           jne 0x7703
0x000076fd      48836c244001   sub qword [rsp + 0x40], 1
0x00007703      488b442440     mov rax, qword [rsp + 0x40]
0x00007708      c60000         mov byte [rax], 0
0x0000770b      48837c245000   cmp qword [rsp + 0x50], 0
0x00007711      756d           jne 0x7780
0x00007713      807c245f00     cmp byte [rsp + 0x5f], 0
0x00007718      7466           je 0x7780
0x0000771a      837c245801     cmp dword [rsp + 0x58], 1
0x0000771f      743f           je 0x7760
0x00007721      4885db         test rbx, rbx
0x00007724      743a           je 0x7760
0x00007726      807c245e00     cmp byte [rsp + 0x5e], 0
0x0000772b      0f85f7000000   jne 0x7828
0x00007731      49837f4000     cmp qword [r15 + 0x40], 0
0x00007736      0f84b9feffff   je 0x75f5
0x0000773c      4883fb01       cmp rbx, 1
0x00007740      0f84affeffff   je 0x75f5
0x00007746      488b742410     mov rsi, qword [rsp + 0x10]
0x0000774b      4889da         mov rdx, rbx
0x0000774e      4c89ff         mov rdi, r15
0x00007751      e82aefffff     call sym.fts_sort
0x00007756      4889442410     mov qword [rsp + 0x10], rax
0x0000775b      e995feffff     jmp 0x75f5
0x00007760      48837d5800     cmp qword [rbp + 0x58], 0
0x00007765      0f852b010000   jne 0x7896
0x0000776b      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:897
0x0000776e      e84df3ffff     call sym.restore_initial_cwd
0x00007773      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:896
0x00007775      0f95c0         setne al
0x00007778      84c0           test al, al
0x0000777a      0f8583010000   jne 0x7903
0x00007780      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:632
0x00007783      75a1           jne 0x7726
0x00007785      837c245803     cmp dword [rsp + 0x58], 3
0x0000778a      0f84b8010000   je 0x7948
0x00007790      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007795      e886f0ffff     call sym.fts_lfree
0x0000779a      48c744241000.  mov qword [rsp + 0x10], 0
0x000077a3      e94dfeffff     jmp 0x75f5
0x000077a8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fts.c:607
0x000077b0      418b0424       mov eax, dword [r12]
0x000077b4      488b6c2420     mov rbp, qword [rsp + 0x20]
0x000077b9      85c0           test eax, eax
0x000077bb      7421           je 0x77de
0x000077bd      4885db         test rbx, rbx
0x000077c0      894540         mov dword [rbp + 0x40], eax
0x000077c3      0f8530010000   jne 0x78f9
0x000077c9      48837c245000   cmp qword [rsp + 0x50], 0
0x000077cf      b804000000     mov eax, 4
0x000077d4      0f851f010000   jne 0x78f9
0x000077da      66894570       mov word [rbp + 0x70], ax
0x000077de      488b7d18       mov rdi, qword [rbp + 0x18]
0x000077e2      4885ff         test rdi, rdi
0x000077e5      0f84f0feffff   je 0x76db
0x000077eb      e810a3ffff     call sym.imp.closedir
0x000077f0      48c745180000.  mov qword [rbp + 0x18], 0
0x000077f8      e9defeffff     jmp 0x76db
0x000077fd      0f1f00         nop dword [rax]
0x00007800      837c245803     cmp dword [rsp + 0x58], 3
0x00007805      0f85e1fdffff   jne 0x75ec
0x0000780b      41ba04000000   mov r10d, 4
0x00007811      6644895570     mov word [rbp + 0x70], r10w
0x00007816      e815a1ffff     call sym.imp.__errno_location
0x0000781b      8b00           mov eax, dword [rax]
0x0000781d      894540         mov dword [rbp + 0x40], eax
0x00007820      e9c7fdffff     jmp 0x75ec
0x00007825      0f1f00         nop dword [rax]
0x00007828      488d0551ecff.  lea rax, sym.fts_compare_ino            ; 0x6480 ; "H\x8b\x17H\x8b\x06H\x8b\x80\x80"
0x0000782f      488b742410     mov rsi, qword [rsp + 0x10]
0x00007834      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/fts.c:880
0x00007837      4c89ff         mov rdi, r15
0x0000783a      49894740       mov qword [r15 + 0x40], rax
0x0000783e      e83deeffff     call sym.fts_sort
0x00007843      49c747400000.  mov qword [r15 + 0x40], 0
0x0000784b      4889442410     mov qword [rsp + 0x10], rax
0x00007850      e9a0fdffff     jmp 0x75f5
0x00007855      0f1f00         nop dword [rax]
0x00007858      48c7442438a0.  mov qword [rsp + 0x38], 0x186a0         ; [0x186a0:8]=-1
0x00007861      c644245f01     mov byte [rsp + 0x5f], 1
0x00007866      418b7f48       mov edi, dword [r15 + 0x48]
0x0000786a      e92cf8ffff     jmp 0x709b
0x0000786f      90             nop
0x00007870      c644245f00     mov byte [rsp + 0x5f], 0                ; ../coreutils-8.31/lib/fts.c:888
0x00007875      418b7f48       mov edi, dword [r15 + 0x48]
0x00007879      e91df8ffff     jmp 0x709b
0x0000787e      6690           nop
0x00007880      31d2           xor edx, edx
0x00007882      4889ee         mov rsi, rbp
0x00007885      4c89ff         mov rdi, r15
0x00007888      e823ecffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:889
0x0000788d      66894570       mov word [rbp + 0x70], ax
0x00007891      e96cfcffff     jmp 0x7502
0x00007896      488b7508       mov rsi, qword [rbp + 8]                ; ../coreutils-8.31/lib/fts.c:665
0x0000789a      488d0d284300.  lea rcx, [0x0000bbc9]                   ; ".."
0x000078a1      baffffffff     mov edx, 0xffffffff                     ; -1
0x000078a6      4c89ff         mov rdi, r15
0x000078a9      e892f3ffff     call sym.fts_safe_changedir
0x000078ae      85c0           test eax, eax
0x000078b0      0f95c0         setne al
0x000078b3      e9c0feffff     jmp 0x7778
0x000078b8      31c9           xor ecx, ecx
0x000078ba      89c2           mov edx, eax
0x000078bc      4889ee         mov rsi, rbp
0x000078bf      4c89ff         mov rdi, r15
0x000078c2      e879f3ffff     call sym.fts_safe_changedir
0x000078c7      85c0           test eax, eax
0x000078c9      0f8589fcffff   jne 0x7558
0x000078cf      e9bef7ffff     jmp 0x7092
0x000078d4      4883bd880000.  cmp qword [rbp + 0x88], 2
0x000078dc      0f8555fcffff   jne 0x7537
0x000078e2      89c6           mov esi, eax
0x000078e4      4889ef         mov rdi, rbp
0x000078e7      e8f4f0ffff     call sym.leaf_optimization
0x000078ec      85c0           test eax, eax
0x000078ee      757e           jne 0x796e
0x000078f0      8b442464       mov eax, dword [rsp + 0x64]
0x000078f4      e93efcffff     jmp 0x7537
0x000078f9      b807000000     mov eax, 7
0x000078fe      e9d7feffff     jmp 0x77da
0x00007903      bf07000000     mov edi, 7
0x00007908      66897d70       mov word [rbp + 0x70], di
0x0000790c      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0x2825 ; "%("
0x00007914      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007919      e802efffff     call sym.fts_lfree
0x0000791e      48c744241000.  mov qword [rsp + 0x10], 0
0x00007927      e9c9fcffff     jmp 0x75f5
0x0000792c      89c7           mov edi, eax
0x0000792e      ba03000000     mov edx, 3
0x00007933      be06040000     mov esi, 0x406
0x00007938      31c0           xor eax, eax
0x0000793a      e811270000     call sym.rpl_fcntl                      ; ../coreutils-8.31/lib/fts.c:-617
0x0000793f      89442464       mov dword [rsp + 0x64], eax
0x00007943      e908fcffff     jmp 0x7550
0x00007948      0fb74570       movzx eax, word [rbp + 0x70]            ; ../coreutils-8.31/lib/fts.c:1018
0x0000794c      6683f807       cmp ax, 7                               ; ../coreutils-8.31/lib/fts.c:-620
0x00007950      0f843afeffff   je 0x7790
0x00007956      6683f804       cmp ax, 4                               ; ../coreutils-8.31/lib/fts.c:1018
0x0000795a      0f8430feffff   je 0x7790
0x00007960      be06000000     mov esi, 6
0x00007965      66897570       mov word [rbp + 0x70], si
0x00007969      e922feffff     jmp 0x7790                              ; ../coreutils-8.31/lib/fts.c:1019
0x0000796e      837c245803     cmp dword [rsp + 0x58], 3
0x00007973      0f85f7feffff   jne 0x7870
0x00007979      8b442464       mov eax, dword [rsp + 0x64]
0x0000797d      4531e4         xor r12d, r12d
0x00007980      bb01000000     mov ebx, 1
0x00007985      e9bbfbffff     jmp 0x7545
0x0000798a      660f1f440000   nop word [rax + rax]
0x00007990      4c89ef         mov rdi, r13
0x00007993      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00007998      e893a3ffff     call sym..plt.got
0x0000799d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000079a2      e879eeffff     call sym.fts_lfree
0x000079a7      488b7d18       mov rdi, qword [rbp + 0x18]
0x000079ab      e850a1ffff     call sym.imp.closedir
0x000079b0      41b807000000   mov r8d, 7
0x000079b6      48c745180000.  mov qword [rbp + 0x18], 0
0x000079be      48c744241000.  mov qword [rsp + 0x10], 0
0x000079c7      6644894570     mov word [rbp + 0x70], r8w
0x000079cc      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0x2825 ; "%("
0x000079d4      41c704242400.  mov dword [r12], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x000079dc      e914fcffff     jmp 0x75f5
0x000079e1      e85aa0ffff     call sym.imp.__stack_chk_fail
0x000079e6      488d05f34100.  lea rax, obj.CSWTCH.53                  ; 0xbbe0
0x000079ed      8b0490         mov eax, dword [rax + rdx*4]
0x000079f0      418985900000.  mov dword [r13 + 0x90], eax
0x000079f7      b801000000     mov eax, 1
0x000079fc      e9b9f7ffff     jmp 0x71ba
0x00007a01      0f1f440000     nop dword [rax + rax]
0x00007a06      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_open:
0x00007a10      4157           push r15
0x00007a12      4156           push r14
0x00007a14      4155           push r13
0x00007a16      4154           push r12
0x00007a18      55             push rbp
0x00007a19      53             push rbx
0x00007a1a      4883ec28       sub rsp, 0x28
0x00007a1e      f7c600f0ffff   test esi, 0xfffff000
0x00007a24      0f857e030000   jne 0x7da8
0x00007a2a      89f0           mov eax, esi
0x00007a2c      89f5           mov ebp, esi
0x00007a2e      2504020000     and eax, 0x204
0x00007a33      3d04020000     cmp eax, 0x204
0x00007a38      0f846a030000   je 0x7da8
0x00007a3e      40f6c612       test sil, 0x12
0x00007a42      0f8460030000   je 0x7da8
0x00007a48      4989fd         mov r13, rdi
0x00007a4b      be01000000     mov esi, 1
0x00007a50      bf80000000     mov edi, 0x80
0x00007a55      4989d6         mov r14, rdx
0x00007a58      e8d3a0ffff     call sym.imp.calloc
0x00007a5d      4885c0         test rax, rax
0x00007a60      4889c3         mov rbx, rax
0x00007a63      0f8455020000   je 0x7cbe
0x00007a69      40f6c502       test bpl, 2
0x00007a6d      4c897040       mov qword [rax + 0x40], r14
0x00007a71      0f8559020000   jne 0x7cd0
0x00007a77      498b7d00       mov rdi, qword [r13]
0x00007a7b      896848         mov dword [rax + 0x48], ebp
0x00007a7e      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x00007a85      4885ff         test rdi, rdi
0x00007a88      0f8461020000   je 0x7cef
0x00007a8e      4d89ef         mov r15, r13
0x00007a91      4531e4         xor r12d, r12d
0x00007a94      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-683
0x00007a98      e8739fffff     call sym.imp.strlen
0x00007a9d      4939c4         cmp r12, rax
0x00007aa0      4c0f42e0       cmovb r12, rax
0x00007aa4      4983c708       add r15, 8
0x00007aa8      498b3f         mov rdi, qword [r15]
0x00007aab      4885ff         test rdi, rdi
0x00007aae      75e8           jne 0x7a98
0x00007ab0      498d542401     lea rdx, [r12 + 1]
0x00007ab5      b800100000     mov eax, 0x1000
0x00007aba      4881fa001000.  cmp rdx, 0x1000
0x00007ac1      480f42d0       cmovb rdx, rax
0x00007ac5      488d7330       lea rsi, [rbx + 0x30]
0x00007ac9      488d7b20       lea rdi, [rbx + 0x20]
0x00007acd      e84ef0ffff     call sym.fts_palloc.isra.2
0x00007ad2      84c0           test al, al
0x00007ad4      88442416       mov byte [rsp + 0x16], al
0x00007ad8      0f849b020000   je 0x7d79
0x00007ade      498b7500       mov rsi, qword [r13]
0x00007ae2      4885f6         test rsi, rsi
0x00007ae5      0f84a5020000   je 0x7d90
0x00007aeb      488d354f3c00.  lea rsi, [0x0000b741]
0x00007af2      31d2           xor edx, edx
0x00007af4      4889df         mov rdi, rbx
0x00007af7      e894ecffff     call sym.fts_alloc
0x00007afc      4885c0         test rax, rax
0x00007aff      4989c7         mov r15, rax
0x00007b02      0f8468020000   je 0x7d70
0x00007b08      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00007b0f      4d85f6         test r14, r14
0x00007b12      498b7500       mov rsi, qword [r13]
0x00007b16      49894758       mov qword [r15 + 0x58], rax
0x00007b1a      49894768       mov qword [r15 + 0x68], rax
0x00007b1e      740d           je 0x7b2d
0x00007b20      8b4348         mov eax, dword [rbx + 0x48]
0x00007b23      c1e80a         shr eax, 0xa
0x00007b26      83e001         and eax, 1
0x00007b29      88442416       mov byte [rsp + 0x16], al               ; ../coreutils-8.31/lib/fts.c:-626
0x00007b2d      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/fts.c:-629
0x00007b30      0f8466020000   je 0x7d9c
0x00007b36      c1ed0b         shr ebp, 0xb
0x00007b39      48c744241800.  mov qword [rsp + 0x18], 0
0x00007b42      4531e4         xor r12d, r12d
0x00007b45      83f501         xor ebp, 1
0x00007b48      89e8           mov eax, ebp
0x00007b4a      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/fts.c:-616
0x00007b4c      83e001         and eax, 1
0x00007b4f      88442417       mov byte [rsp + 0x17], al
0x00007b53      eb77           jmp 0x7bcc
0x00007b55      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-615
0x00007b58      4889c2         mov rdx, rax
0x00007b5b      4889df         mov rdi, rbx
0x00007b5e      e82decffff     call sym.fts_alloc
0x00007b63      4885c0         test rax, rax
0x00007b66      4889c1         mov rcx, rax
0x00007b69      0f84f1010000   je 0x7d60
0x00007b6f      48c740580000.  mov qword [rax + 0x58], 0
0x00007b77      4c897808       mov qword [rax + 8], r15
0x00007b7b      488d80080100.  lea rax, [rax + 0x108]
0x00007b82      4d85e4         test r12, r12
0x00007b85      48894130       mov qword [rcx + 0x30], rax
0x00007b89      0f8471010000   je 0x7d00
0x00007b8f      807c241600     cmp byte [rsp + 0x16], 0
0x00007b94      0f8466010000   je 0x7d00
0x00007b9a      be0b000000     mov esi, 0xb
0x00007b9f      4d85f6         test r14, r14
0x00007ba2      48c781a80000.  mov qword [rcx + 0xa8], 2
0x00007bad      66897170       mov word [rcx + 0x70], si
0x00007bb1      0f8489010000   je 0x7d40                               ; ../coreutils-8.31/lib/fts.c:876
0x00007bb7      4c896110       mov qword [rcx + 0x10], r12
0x00007bbb      4989cc         mov r12, rcx
0x00007bbe      4883c501       add rbp, 1
0x00007bc2      498b74ed00     mov rsi, qword [r13 + rbp*8]
0x00007bc7      4885f6         test rsi, rsi
0x00007bca      7454           je 0x7c20
0x00007bcc      4889f7         mov rdi, rsi
0x00007bcf      4889742408     mov qword [rsp + 8], rsi
0x00007bd4      e8379effff     call sym.imp.strlen
0x00007bd9      4883f802       cmp rax, 2
0x00007bdd      488b742408     mov rsi, qword [rsp + 8]
0x00007be2      0f8670ffffff   jbe 0x7b58                              ; ../coreutils-8.31/lib/fts.c:-659
0x00007be8      807c241700     cmp byte [rsp + 0x17], 0
0x00007bed      0f8465ffffff   je 0x7b58
0x00007bf3      807c06ff2f     cmp byte [rsi + rax - 1], 0x2f
0x00007bf8      0f855affffff   jne 0x7b58
0x00007bfe      6690           nop
0x00007c00      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x00007c05      0f854dffffff   jne 0x7b58
0x00007c0b      4883e801       sub rax, 1
0x00007c0f      4883f801       cmp rax, 1
0x00007c13      75eb           jne 0x7c00
0x00007c15      e93effffff     jmp 0x7b58
0x00007c1a      660f1f440000   nop word [rax + rax]
0x00007c20      4d85f6         test r14, r14
0x00007c23      7417           je 0x7c3c
0x00007c25      4883fd01       cmp rbp, 1
0x00007c29      7611           jbe 0x7c3c
0x00007c2b      4c89e6         mov rsi, r12
0x00007c2e      4889ea         mov rdx, rbp
0x00007c31      4889df         mov rdi, rbx
0x00007c34      e847eaffff     call sym.fts_sort
0x00007c39      4989c4         mov r12, rax
0x00007c3c      488d35fe3a00.  lea rsi, [0x0000b741]
0x00007c43      31d2           xor edx, edx
0x00007c45      4889df         mov rdi, rbx
0x00007c48      e843ebffff     call sym.fts_alloc
0x00007c4d      4885c0         test rax, rax
0x00007c50      488903         mov qword [rbx], rax
0x00007c53      0f8407010000   je 0x7d60
0x00007c59      8b7b48         mov edi, dword [rbx + 0x48]
0x00007c5c      ba09000000     mov edx, 9
0x00007c61      488d7358       lea rsi, [rbx + 0x58]
0x00007c65      4c896010       mov qword [rax + 0x10], r12
0x00007c69      66895070       mov word [rax + 0x70], dx               ; ../coreutils-8.31/lib/fts.c:-901
0x00007c6d      48c740580100.  mov qword [rax + 0x58], 1
0x00007c75      e816efffff     call sym.setup_dir.isra.4
0x00007c7a      84c0           test al, al
0x00007c7c      0f84de000000   je 0x7d60                               ; ../coreutils-8.31/lib/fts.c:-707
0x00007c82      8b7348         mov esi, dword [rbx + 0x48]
0x00007c85      f7c604020000   test esi, 0x204
0x00007c8b      7523           jne 0x7cb0                              ; ../coreutils-8.31/lib/fts.c:-697
0x00007c8d      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00007c90      488d15333f00.  lea rdx, [0x0000bbca]                   ; "."
0x00007c97      e864efffff     call sym.diropen.isra.6
0x00007c9c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:-694
0x00007c9e      894328         mov dword [rbx + 0x28], eax
0x00007ca1      790d           jns 0x7cb0                              ; ../coreutils-8.31/lib/fts.c:-697
0x00007ca3      834b4804       or dword [rbx + 0x48], 4
0x00007ca7      660f1f840000.  nop word [rax + rax]
0x00007cb0      488d7b60       lea rdi, [rbx + 0x60]
0x00007cb4      beffffffff     mov esi, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:-695 ; -1
0x00007cb9      e8f2200000     call sym.i_ring_init
0x00007cbe      4883c428       add rsp, 0x28
0x00007cc2      4889d8         mov rax, rbx
0x00007cc5      5b             pop rbx
0x00007cc6      5d             pop rbp
0x00007cc7      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-692
0x00007cc9      415d           pop r13
0x00007ccb      415e           pop r14
0x00007ccd      415f           pop r15
0x00007ccf      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:-688
0x00007cd0      498b7d00       mov rdi, qword [r13]
0x00007cd4      89e8           mov eax, ebp
0x00007cd6      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x00007cdd      80e4fd         and ah, 0xfd                            ; ../coreutils-8.31/lib/fts.c:-686
0x00007ce0      83c804         or eax, 4
0x00007ce3      4885ff         test rdi, rdi
0x00007ce6      894348         mov dword [rbx + 0x48], eax             ; ../coreutils-8.31/lib/fts.c:-685
0x00007ce9      0f859ffdffff   jne 0x7a8e
0x00007cef      ba00100000     mov edx, 0x1000                         ; ../coreutils-8.31/lib/fts.c:-683
0x00007cf4      e9ccfdffff     jmp 0x7ac5
0x00007cf9      0f1f80000000.  nop dword [rax]
0x00007d00      31d2           xor edx, edx
0x00007d02      4889ce         mov rsi, rcx                            ; ../coreutils-8.31/lib/fts.c:-705
0x00007d05      4889df         mov rdi, rbx
0x00007d08      48894c2408     mov qword [rsp + 8], rcx
0x00007d0d      e89ee7ffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:-662
0x00007d12      488b4c2408     mov rcx, qword [rsp + 8]
0x00007d17      4d85f6         test r14, r14
0x00007d1a      66894170       mov word [rcx + 0x70], ax
0x00007d1e      0f8593feffff   jne 0x7bb7
0x00007d24      4d85e4         test r12, r12
0x00007d27      48c741100000.  mov qword [rcx + 0x10], 0
0x00007d2f      7517           jne 0x7d48
0x00007d31      48894c2418     mov qword [rsp + 0x18], rcx
0x00007d36      4989cc         mov r12, rcx
0x00007d39      e980feffff     jmp 0x7bbe
0x00007d3e      6690           nop
0x00007d40      48c741100000.  mov qword [rcx + 0x10], 0
0x00007d48      488b442418     mov rax, qword [rsp + 0x18]
0x00007d4d      48894c2418     mov qword [rsp + 0x18], rcx
0x00007d52      48894810       mov qword [rax + 0x10], rcx
0x00007d56      e963feffff     jmp 0x7bbe
0x00007d5b      0f1f440000     nop dword [rax + rax]
0x00007d60      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-674
0x00007d63      e8b8eaffff     call sym.fts_lfree
0x00007d68      4c89ff         mov rdi, r15
0x00007d6b      e8c09fffff     call sym..plt.got
0x00007d70      488b7b20       mov rdi, qword [rbx + 0x20]
0x00007d74      e8b79fffff     call sym..plt.got
0x00007d79      4889df         mov rdi, rbx
0x00007d7c      31db           xor ebx, ebx
0x00007d7e      e8ad9fffff     call sym..plt.got
0x00007d83      e936ffffff     jmp 0x7cbe
0x00007d88      0f1f84000000.  nop dword [rax + rax]
0x00007d90      4531ff         xor r15d, r15d
0x00007d93      4d85f6         test r14, r14
0x00007d96      0f8584fdffff   jne 0x7b20
0x00007d9c      4531e4         xor r12d, r12d
0x00007d9f      e998feffff     jmp 0x7c3c
0x00007da4      0f1f4000       nop dword [rax]
0x00007da8      e8839bffff     call sym.imp.__errno_location
0x00007dad      31db           xor ebx, ebx
0x00007daf      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/fts.c:-692 ; [0x16:4]=0x22400000
0x00007db5      e904ffffff     jmp 0x7cbe
0x00007dba      660f1f440000   nop word [rax + rax]
;-- rpl_fts_close:
0x00007dc0      4154           push r12
0x00007dc2      55             push rbp
0x00007dc3      4889fd         mov rbp, rdi
0x00007dc6      53             push rbx
0x00007dc7      488b3f         mov rdi, qword [rdi]
0x00007dca      4885ff         test rdi, rdi
0x00007dcd      7444           je 0x7e13
0x00007dcf      48837f5800     cmp qword [rdi + 0x58], 0
0x00007dd4      7919           jns 0x7def
0x00007dd6      e915010000     jmp 0x7ef0
0x00007ddb      0f1f440000     nop dword [rax + rax]
0x00007de0      e84b9fffff     call sym..plt.got
0x00007de5      48837b5800     cmp qword [rbx + 0x58], 0
0x00007dea      4889df         mov rdi, rbx
0x00007ded      781c           js 0x7e0b                               ; ../coreutils-8.31/lib/fts.c:-652
0x00007def      488b5f10       mov rbx, qword [rdi + 0x10]
0x00007df3      4885db         test rbx, rbx
0x00007df6      75e8           jne 0x7de0
0x00007df8      488b5f08       mov rbx, qword [rdi + 8]
0x00007dfc      e82f9fffff     call sym..plt.got
0x00007e01      48837b5800     cmp qword [rbx + 0x58], 0
0x00007e06      4889df         mov rdi, rbx
0x00007e09      79e4           jns 0x7def
0x00007e0b      4889df         mov rdi, rbx
0x00007e0e      e81d9fffff     call sym..plt.got
0x00007e13      488b7d08       mov rdi, qword [rbp + 8]
0x00007e17      4885ff         test rdi, rdi
0x00007e1a      7405           je 0x7e21
0x00007e1c      e8ffe9ffff     call sym.fts_lfree
0x00007e21      488b7d10       mov rdi, qword [rbp + 0x10]
0x00007e25      e8069fffff     call sym..plt.got
0x00007e2a      488b7d20       mov rdi, qword [rbp + 0x20]
0x00007e2e      e8fd9effff     call sym..plt.got
0x00007e33      8b4548         mov eax, dword [rbp + 0x48]
0x00007e36      f6c402         test ah, 2
0x00007e39      7465           je 0x7ea0
0x00007e3b      8b7d2c         mov edi, dword [rbp + 0x2c]
0x00007e3e      85ff           test edi, edi
0x00007e40      0f898a000000   jns 0x7ed0
0x00007e46      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:-398
0x00007e48      488d7d60       lea rdi, [rbp + 0x60]
0x00007e4c      e81feaffff     call sym.fd_ring_clear
0x00007e51      488b7d50       mov rdi, qword [rbp + 0x50]
0x00007e55      4885ff         test rdi, rdi
0x00007e58      7405           je 0x7e5f
0x00007e5a      e831170000     call sym.hash_free
0x00007e5f      f74548020100.  test dword [rbp + 0x48], 0x102          ; ../coreutils-8.31/lib/fts.c:-413
0x00007e66      488b7d58       mov rdi, qword [rbp + 0x58]
0x00007e6a      7424           je 0x7e90
0x00007e6c      4885ff         test rdi, rdi
0x00007e6f      7405           je 0x7e76
0x00007e71      e81a170000     call sym.hash_free
0x00007e76      4889ef         mov rdi, rbp
0x00007e79      e8b29effff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:-455
0x00007e7e      85db           test ebx, ebx
0x00007e80      0f85ab000000   jne 0x7f31
0x00007e86      89d8           mov eax, ebx
0x00007e88      5b             pop rbx
0x00007e89      5d             pop rbp
0x00007e8a      415c           pop r12
0x00007e8c      c3             ret
0x00007e8d      0f1f00         nop dword [rax]
0x00007e90      e89b9effff     call sym..plt.got
0x00007e95      ebdf           jmp 0x7e76
0x00007e97      660f1f840000.  nop word [rax + rax]
0x00007ea0      a804           test al, 4
0x00007ea2      75a2           jne 0x7e46
0x00007ea4      8b7d28         mov edi, dword [rbp + 0x28]
0x00007ea7      e8449dffff     call sym.imp.fchdir                     ; ../coreutils-8.31/lib/fts.c:-449
0x00007eac      85c0           test eax, eax
0x00007eae      7550           jne 0x7f00
0x00007eb0      8b7d28         mov edi, dword [rbp + 0x28]
0x00007eb3      e8289cffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fts.c:-448
0x00007eb8      85c0           test eax, eax
0x00007eba      748a           je 0x7e46
0x00007ebc      e86f9affff     call sym.imp.__errno_location
0x00007ec1      4989c4         mov r12, rax
0x00007ec4      eb62           jmp 0x7f28
0x00007ec6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007ed0      e80b9cffff     call sym.imp.close
0x00007ed5      85c0           test eax, eax
0x00007ed7      0f8469ffffff   je 0x7e46
0x00007edd      e84e9affff     call sym.imp.__errno_location
0x00007ee2      8b18           mov ebx, dword [rax]
0x00007ee4      e95fffffff     jmp 0x7e48
0x00007ee9      0f1f80000000.  nop dword [rax]
0x00007ef0      4889fb         mov rbx, rdi
0x00007ef3      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:-429
0x00007ef6      e8359effff     call sym..plt.got
0x00007efb      e913ffffff     jmp 0x7e13
0x00007f00      e82b9affff     call sym.imp.__errno_location
0x00007f05      8b7d28         mov edi, dword [rbp + 0x28]             ; ../coreutils-8.31/lib/fts.c:-664
0x00007f08      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:-665
0x00007f0b      8b18           mov ebx, dword [rax]
0x00007f0d      e8ce9bffff     call sym.imp.close
0x00007f12      85c0           test eax, eax
0x00007f14      0f842effffff   je 0x7e48
0x00007f1a      85db           test ebx, ebx
0x00007f1c      0f8526ffffff   jne 0x7e48
0x00007f22      660f1f440000   nop word [rax + rax]
0x00007f28      418b1c24       mov ebx, dword [r12]
0x00007f2c      e917ffffff     jmp 0x7e48
0x00007f31      e8fa99ffff     call sym.imp.__errno_location
0x00007f36      8918           mov dword [rax], ebx
0x00007f38      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00007f3d      e944ffffff     jmp 0x7e86
0x00007f42      0f1f4000       nop dword [rax]
0x00007f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_read:
0x00007f50      4156           push r14
0x00007f52      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:-640
0x00007f54      4154           push r12
0x00007f56      55             push rbp
0x00007f57      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:-641
0x00007f58      488b2f         mov rbp, qword [rdi]
0x00007f5b      4885ed         test rbp, rbp
0x00007f5e      0f840a010000   je 0x806e
0x00007f64      8b5748         mov edx, dword [rdi + 0x48]
0x00007f67      f6c620         test dh, 0x20                           ; ../coreutils-8.31/lib/fts.c:-640 ; "@"
0x00007f6a      0f85fe000000   jne 0x806e
0x00007f70      0fb74574       movzx eax, word [rbp + 0x74]
0x00007f74      bb03000000     mov ebx, 3
0x00007f79      4989fc         mov r12, rdi
0x00007f7c      66895d74       mov word [rbp + 0x74], bx
0x00007f80      6683f801       cmp ax, 1
0x00007f84      0f8446020000   je 0x81d0
0x00007f8a      6683f802       cmp ax, 2
0x00007f8e      0fb74d70       movzx ecx, word [rbp + 0x70]
0x00007f92      0f84e8000000   je 0x8080                               ; ../coreutils-8.31/lib/fts.c:-662
0x00007f98      6683f901       cmp cx, 1
0x00007f9c      7532           jne 0x7fd0
0x00007f9e      e91d020000     jmp 0x81c0
0x00007fa3      0f1f440000     nop dword [rax + rax]
0x00007fa8      49891c24       mov qword [r12], rbx                    ; ../coreutils-8.31/lib/fts.c:-525
0x00007fac      4889ef         mov rdi, rbp
0x00007faf      e87c9dffff     call sym..plt.got
0x00007fb4      48837b5800     cmp qword [rbx + 0x58], 0
0x00007fb9      0f8431020000   je 0x81f0
0x00007fbf      0fb74374       movzx eax, word [rbx + 0x74]
0x00007fc3      4889dd         mov rbp, rbx
0x00007fc6      6683f804       cmp ax, 4
0x00007fca      0f8528030000   jne 0x82f8
0x00007fd0      488b5d10       mov rbx, qword [rbp + 0x10]
0x00007fd4      4885db         test rbx, rbx
0x00007fd7      75cf           jne 0x7fa8
0x00007fd9      488b5d08       mov rbx, qword [rbp + 8]
0x00007fdd      48837b1800     cmp qword [rbx + 0x18], 0
0x00007fe2      0f8568050000   jne 0x8550
0x00007fe8      49891c24       mov qword [r12], rbx
0x00007fec      4889ef         mov rdi, rbp
0x00007fef      e83c9dffff     call sym..plt.got
0x00007ff4      48837b58ff     cmp qword [rbx + 0x58], 0xffffffffffffffff
0x00007ff9      0f84b3040000   je 0x84b2
0x00007fff      66837b700b     cmp word [rbx + 0x70], 0xb
0x00008004      0f8435010000   je 0x813f
0x0000800a      498b542420     mov rdx, qword [r12 + 0x20]
0x0000800f      488b4348       mov rax, qword [rbx + 0x48]             ; ../coreutils-8.31/lib/fts.c:-613
0x00008013      c6040200       mov byte [rdx + rax], 0
0x00008017      48837b5800     cmp qword [rbx + 0x58], 0
0x0000801c      0f84be030000   je 0x83e0
0x00008022      0fb74372       movzx eax, word [rbx + 0x72]
0x00008026      a802           test al, 2
0x00008028      0f846a030000   je 0x8398
0x0000802e      418b442448     mov eax, dword [r12 + 0x48]
0x00008033      8b7b44         mov edi, dword [rbx + 0x44]
0x00008036      a804           test al, 4
0x00008038      0f84fe030000   je 0x843c
0x0000803e      e89d9affff     call sym.imp.close
0x00008043      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008048      66837b7002     cmp word [rbx + 0x70], 2
0x0000804d      7414           je 0x8063
0x0000804f      8b4b40         mov ecx, dword [rbx + 0x40]
0x00008052      85c9           test ecx, ecx
0x00008054      0f849e030000   je 0x83f8
0x0000805a      ba07000000     mov edx, 7
0x0000805f      66895370       mov word [rbx + 0x70], dx
0x00008063      81e700200000   and edi, 0x2000                         ; ../coreutils-8.31/lib/fts.c:-428 ; "%("
0x00008069      4889dd         mov rbp, rbx
0x0000806c      747c           je 0x80ea
0x0000806e      31ed           xor ebp, ebp
0x00008070      5b             pop rbx
0x00008071      4889e8         mov rax, rbp
0x00008074      5d             pop rbp
0x00008075      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-559
0x00008077      415d           pop r13
0x00008079      415e           pop r14
0x0000807b      c3             ret
0x0000807c      0f1f4000       nop dword [rax]
0x00008080      8d41f4         lea eax, [rcx - 0xc]
0x00008083      6683f801       cmp ax, 1
0x00008087      7677           jbe 0x8100
0x00008089      6683f901       cmp cx, 1
0x0000808d      0f853dffffff   jne 0x7fd0
0x00008093      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/fts-cycle.c:-1395 ; segment.PHDR
0x00008096      0f84ac000000   je 0x8148
0x0000809c      498b442418     mov rax, qword [r12 + 0x18]
0x000080a1      48394578       cmp qword [rbp + 0x78], rax
0x000080a5      0f849d000000   je 0x8148
0x000080ab      f6457202       test byte [rbp + 0x72], 2
0x000080af      0f85db040000   jne 0x8590
0x000080b5      498b7c2408     mov rdi, qword [r12 + 8]
0x000080ba      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:-985
0x000080bd      740e           je 0x80cd
0x000080bf      e85ce7ffff     call sym.fts_lfree
0x000080c4      49c744240800.  mov qword [r12 + 8], 0
0x000080cd      418b7c2448     mov edi, dword [r12 + 0x48]
0x000080d2      41ba06000000   mov r10d, 6
0x000080d8      498d742458     lea rsi, [r12 + 0x58]
0x000080dd      6644895570     mov word [rbp + 0x70], r10w
0x000080e2      4889ea         mov rdx, rbp
0x000080e5      e886eeffff     call sym.leave_dir.isra.12
0x000080ea      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:-982
0x000080eb      4889e8         mov rax, rbp
0x000080ee      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:-983
0x000080ef      415c           pop r12
0x000080f1      415d           pop r13                                 ; string_fortified.h:-1508
0x000080f3      415e           pop r14
0x000080f5      c3             ret
0x000080f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008100      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:-979
0x00008105      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts.c:-553
0x00008108      e8a3e3ffff     call sym.fts_stat
0x0000810d      6683f801       cmp ax, 1
0x00008111      66894570       mov word [rbp + 0x70], ax
0x00008115      0f8441030000   je 0x845c
0x0000811b      6683f80b       cmp ax, 0xb
0x0000811f      49892c24       mov qword [r12], rbp
0x00008123      75c5           jne 0x80ea                              ; ../coreutils-8.31/lib/fts.c:-525
0x00008125      0f1f00         nop dword [rax]
0x00008128      488b85a80000.  mov rax, qword [rbp + 0xa8]
0x0000812f      4883f802       cmp rax, 2
0x00008133      0f849f030000   je 0x84d8
0x00008139      4883f801       cmp rax, 1
0x0000813d      74ab           je 0x80ea
0x0000813f      e8dc97ffff     call sym.imp.abort
0x00008144      0f1f4000       nop dword [rax]
0x00008148      498b7c2408     mov rdi, qword [r12 + 8]
0x0000814d      4885ff         test rdi, rdi
0x00008150      0f8412020000   je 0x8368
0x00008156      f6c610         test dh, 0x10
0x00008159      0f85f3010000   jne 0x8352
0x0000815f      488b4d30       mov rcx, qword [rbp + 0x30]
0x00008163      baffffffff     mov edx, 0xffffffff                     ; -1
0x00008168      4889ee         mov rsi, rbp
0x0000816b      4c89e7         mov rdi, r12
0x0000816e      e8cdeaffff     call sym.fts_safe_changedir
0x00008173      85c0           test eax, eax
0x00008175      0f84b7020000   je 0x8432
0x0000817b      e8b097ffff     call sym.imp.__errno_location
0x00008180      8b00           mov eax, dword [rax]
0x00008182      66834d7201     or word [rbp + 0x72], 1
0x00008187      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:-530
0x0000818a      498b6c2408     mov rbp, qword [r12 + 8]
0x0000818f      4885ed         test rbp, rbp
0x00008192      0f84ee010000   je 0x8386
0x00008198      4889e8         mov rax, rbp
0x0000819b      0f1f440000     nop dword [rax + rax]
0x000081a0      488b5008       mov rdx, qword [rax + 8]
0x000081a4      488b5230       mov rdx, qword [rdx + 0x30]
0x000081a8      48895030       mov qword [rax + 0x30], rdx
0x000081ac      488b4010       mov rax, qword [rax + 0x10]             ; ../coreutils-8.31/lib/fts.c:-529
0x000081b0      4885c0         test rax, rax
0x000081b3      75eb           jne 0x81a0
0x000081b5      e9cc010000     jmp 0x8386
0x000081ba      660f1f440000   nop word [rax + rax]
0x000081c0      6683f804       cmp ax, 4
0x000081c4      0f85c9feffff   jne 0x8093
0x000081ca      e9dcfeffff     jmp 0x80ab
0x000081cf      90             nop
0x000081d0      4889ee         mov rsi, rbp
0x000081d3      31d2           xor edx, edx
0x000081d5      e8d6e2ffff     call sym.fts_stat
0x000081da      66894570       mov word [rbp + 0x70], ax
0x000081de      4889e8         mov rax, rbp
0x000081e1      5b             pop rbx
0x000081e2      5d             pop rbp
0x000081e3      415c           pop r12
0x000081e5      415d           pop r13
0x000081e7      415e           pop r14
0x000081e9      c3             ret
0x000081ea      660f1f440000   nop word [rax + rax]
0x000081f0      4c89e7         mov rdi, r12
0x000081f3      e8c8e8ffff     call sym.restore_initial_cwd
0x000081f8      85c0           test eax, eax
0x000081fa      0f8501040000   jne 0x8601
0x00008200      41f744244802.  test dword [r12 + 0x48], 0x102
0x00008209      498b7c2458     mov rdi, qword [r12 + 0x58]
0x0000820e      0f8434010000   je 0x8348
0x00008214      4885ff         test rdi, rdi
0x00008217      7405           je 0x821e
0x00008219      e872130000     call sym.hash_free
0x0000821e      488b5360       mov rdx, qword [rbx + 0x60]
0x00008222      488dab080100.  lea rbp, [rbx + 0x108]
0x00008229      498b7c2420     mov rdi, qword [r12 + 0x20]
0x0000822e      4889ee         mov rsi, rbp
0x00008231      48895348       mov qword [rbx + 0x48], rdx
0x00008235      4883c201       add rdx, 1
0x00008239      e8f299ffff     call sym.imp.memmove
0x0000823e      be2f000000     mov esi, 0x2f                           ; '/'
0x00008243      4889ef         mov rdi, rbp
0x00008246      e85598ffff     call sym.imp.strrchr
0x0000824b      4885c0         test rax, rax
0x0000824e      742b           je 0x827b
0x00008250      4839c5         cmp rbp, rax
0x00008253      0f84c7010000   je 0x8420                               ; ../coreutils-8.31/lib/fts.c:-581
0x00008259      4c8d6801       lea r13, [rax + 1]
0x0000825d      4c89ef         mov rdi, r13
0x00008260      e8ab97ffff     call sym.imp.strlen
0x00008265      488d5001       lea rdx, [rax + 1]
0x00008269      4989c6         mov r14, rax
0x0000826c      4c89ee         mov rsi, r13
0x0000826f      4889ef         mov rdi, rbp
0x00008272      e8b999ffff     call sym.imp.memmove
0x00008277      4c897360       mov qword [rbx + 0x60], r14
0x0000827b      498b442420     mov rax, qword [r12 + 0x20]
0x00008280      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008285      498d742458     lea rsi, [r12 + 0x58]
0x0000828a      4889dd         mov rbp, rbx
0x0000828d      48894338       mov qword [rbx + 0x38], rax
0x00008291      48894330       mov qword [rbx + 0x30], rax
0x00008295      e8f6e8ffff     call sym.setup_dir.isra.4
0x0000829a      0fb74370       movzx eax, word [rbx + 0x70]
0x0000829e      6683f80b       cmp ax, 0xb
0x000082a2      49892c24       mov qword [r12], rbp
0x000082a6      0f847cfeffff   je 0x8128
0x000082ac      6683f801       cmp ax, 1
0x000082b0      0f8534feffff   jne 0x80ea
0x000082b6      48837d5800     cmp qword [rbp + 0x58], 0
0x000082bb      7509           jne 0x82c6
0x000082bd      488b4578       mov rax, qword [rbp + 0x78]
0x000082c1      4989442418     mov qword [r12 + 0x18], rax
0x000082c6      418b7c2448     mov edi, dword [r12 + 0x48]
0x000082cb      498d742458     lea rsi, [r12 + 0x58]
0x000082d0      4889ea         mov rdx, rbp
0x000082d3      e8e8ebffff     call sym.enter_dir.isra.10
0x000082d8      84c0           test al, al
0x000082da      0f850afeffff   jne 0x80ea
0x000082e0      e84b96ffff     call sym.imp.__errno_location
0x000082e5      31ed           xor ebp, ebp
0x000082e7      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/fts.c:-735 ; [0xc:4]=0
0x000082ed      e9f8fdffff     jmp 0x80ea
0x000082f2      660f1f440000   nop word [rax + rax]
0x000082f8      6683f802       cmp ax, 2                               ; ../coreutils-8.31/lib/fts.c:-730
0x000082fc      0f849b020000   je 0x859d
0x00008302      488b4508       mov rax, qword [rbp + 8]
0x00008306      488db5080100.  lea rsi, [rbp + 0x108]
0x0000830d      488b7848       mov rdi, qword [rax + 0x48]
0x00008311      488b4038       mov rax, qword [rax + 0x38]
0x00008315      807c38ff2f     cmp byte [rax + rdi - 1], 0x2f
0x0000831a      488d57ff       lea rdx, [rdi - 1]
0x0000831e      480f44fa       cmove rdi, rdx
0x00008322      49037c2420     add rdi, qword [r12 + 0x20]
0x00008327      c6072f         mov byte [rdi], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000832a      488b4560       mov rax, qword [rbp + 0x60]             ; ../coreutils-8.31/lib/fts.c:-598
0x0000832e      4883c701       add rdi, 1
0x00008332      488d5001       lea rdx, [rax + 1]
0x00008336      e8f598ffff     call sym.imp.memmove
0x0000833b      0fb74570       movzx eax, word [rbp + 0x70]
0x0000833f      e95affffff     jmp 0x829e
0x00008344      0f1f4000       nop dword [rax]
0x00008348      e8e399ffff     call sym..plt.got
0x0000834d      e9ccfeffff     jmp 0x821e
0x00008352      80e6ef         and dh, 0xef
0x00008355      4189542448     mov dword [r12 + 0x48], edx
0x0000835a      e8c1e4ffff     call sym.fts_lfree
0x0000835f      49c744240800.  mov qword [r12 + 8], 0
0x00008368      be03000000     mov esi, 3
0x0000836d      4c89e7         mov rdi, r12
0x00008370      e8bbecffff     call sym.fts_build
0x00008375      4885c0         test rax, rax
0x00008378      4989442408     mov qword [r12 + 8], rax
0x0000837d      0f84f1000000   je 0x8474
0x00008383      4889c5         mov rbp, rax
0x00008386      49c744240800.  mov qword [r12 + 8], 0
0x0000838f      e96effffff     jmp 0x8302
0x00008394      0f1f4000       nop dword [rax]
0x00008398      a801           test al, 1
0x0000839a      0f85a3fcffff   jne 0x8043
0x000083a0      488b7308       mov rsi, qword [rbx + 8]
0x000083a4      488d0d1e3800.  lea rcx, [0x0000bbc9]                   ; ".."
0x000083ab      baffffffff     mov edx, 0xffffffff                     ; -1
0x000083b0      4c89e7         mov rdi, r12
0x000083b3      e888e8ffff     call sym.fts_safe_changedir
0x000083b8      85c0           test eax, eax
0x000083ba      0f8483fcffff   je 0x8043
0x000083c0      e86b95ffff     call sym.imp.__errno_location
0x000083c5      418b7c2448     mov edi, dword [r12 + 0x48]
0x000083ca      8b00           mov eax, dword [rax]
0x000083cc      81cf00200000   or edi, 0x2000                          ; ../coreutils-8.31/lib/fts.c:-708 ; "%("
0x000083d2      894340         mov dword [rbx + 0x40], eax
0x000083d5      41897c2448     mov dword [r12 + 0x48], edi
0x000083da      e969fcffff     jmp 0x8048
0x000083df      90             nop
0x000083e0      4c89e7         mov rdi, r12
0x000083e3      e8d8e6ffff     call sym.restore_initial_cwd
0x000083e8      85c0           test eax, eax
0x000083ea      75d4           jne 0x83c0
0x000083ec      e952fcffff     jmp 0x8043                              ; ../coreutils-8.31/lib/fts.c:-700
0x000083f1      0f1f80000000.  nop dword [rax]
0x000083f8      b806000000     mov eax, 6
0x000083fd      498d742458     lea rsi, [r12 + 0x58]
0x00008402      4889da         mov rdx, rbx
0x00008405      66894370       mov word [rbx + 0x70], ax               ; ../coreutils-8.31/lib/fts.c:-790
0x00008409      e862ebffff     call sym.leave_dir.isra.12
0x0000840e      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008413      e94bfcffff     jmp 0x8063
0x00008418      0f1f84000000.  nop dword [rax + rax]
0x00008420      80bb09010000.  cmp byte [rbx + 0x109], 0
0x00008427      0f852cfeffff   jne 0x8259
0x0000842d      e949feffff     jmp 0x827b
0x00008432      498b6c2408     mov rbp, qword [r12 + 8]
0x00008437      e94affffff     jmp 0x8386
0x0000843c      f6c402         test ah, 2
0x0000843f      0f8498010000   je 0x85dd
0x00008445      89fe           mov esi, edi
0x00008447      ba01000000     mov edx, 1
0x0000844c      4c89e7         mov rdi, r12
0x0000844f      e8fce5ffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts.c:-815
0x00008454      8b7b44         mov edi, dword [rbx + 0x44]
0x00008457      e9e2fbffff     jmp 0x803e
0x0000845c      418b742448     mov esi, dword [r12 + 0x48]
0x00008461      40f6c604       test sil, 4
0x00008465      0f8401020000   je 0x866c
0x0000846b      49892c24       mov qword [r12], rbp
0x0000846f      e942feffff     jmp 0x82b6
0x00008474      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008479      f7c700200000   test edi, 0x2000                        ; "%("
0x0000847f      0f85e9fbffff   jne 0x806e
0x00008485      448b4d40       mov r9d, dword [rbp + 0x40]
0x00008489      4585c9         test r9d, r9d
0x0000848c      7412           je 0x84a0                               ; ../coreutils-8.31/lib/fts.c:-755
0x0000848e      66837d7004     cmp word [rbp + 0x70], 4
0x00008493      740b           je 0x84a0
0x00008495      41b807000000   mov r8d, 7
0x0000849b      6644894570     mov word [rbp + 0x70], r8w              ; ../coreutils-8.31/lib/fts.c:-774
0x000084a0      498d742458     lea rsi, [r12 + 0x58]
0x000084a5      4889ea         mov rdx, rbp
0x000084a8      e8c3eaffff     call sym.leave_dir.isra.12
0x000084ad      e938fcffff     jmp 0x80ea
0x000084b2      4889df         mov rdi, rbx
0x000084b5      31ed           xor ebp, ebp
0x000084b7      e87498ffff     call sym..plt.got
0x000084bc      e86f94ffff     call sym.imp.__errno_location
0x000084c1      c70000000000   mov dword [rax], 0
0x000084c7      49c704240000.  mov qword [r12], 0
0x000084cf      e916fcffff     jmp 0x80ea
0x000084d4      0f1f4000       nop dword [rax]
0x000084d8      488b5d08       mov rbx, qword [rbp + 8]
0x000084dc      48837b6800     cmp qword [rbx + 0x68], 0
0x000084e1      7511           jne 0x84f4
0x000084e3      418b442448     mov eax, dword [r12 + 0x48]
0x000084e8      83e018         and eax, 0x18
0x000084eb      83f818         cmp eax, 0x18
0x000084ee      0f8459010000   je 0x864d
0x000084f4      31d2           xor edx, edx
0x000084f6      4889ee         mov rsi, rbp
0x000084f9      4c89e7         mov rdi, r12
0x000084fc      e8afdfffff     call sym.fts_stat
0x00008501      8b9590000000   mov edx, dword [rbp + 0x90]
0x00008507      66894570       mov word [rbp + 0x70], ax
0x0000850b      81e200f00000   and edx, 0xf000
0x00008511      81fa00400000   cmp edx, 0x4000
0x00008517      0f858ffdffff   jne 0x82ac
0x0000851d      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:-805
0x00008522      0f8416010000   je 0x863e
0x00008528      488b4b68       mov rcx, qword [rbx + 0x68]             ; ../coreutils-8.31/lib/fts.c:-804
0x0000852c      488d51ff       lea rdx, [rcx - 1]
0x00008530      4883fafd       cmp rdx, 0xfffffffffffffffd
0x00008534      7704           ja 0x853a
0x00008536      48895368       mov qword [rbx + 0x68], rdx
0x0000853a      6683f801       cmp ax, 1
0x0000853e      0f85a6fbffff   jne 0x80ea
0x00008544      e97dfdffff     jmp 0x82c6                              ; ../coreutils-8.31/lib/fts.c:-796
0x00008549      0f1f80000000.  nop dword [rax]
0x00008550      488b4348       mov rax, qword [rbx + 0x48]
0x00008554      498b542420     mov rdx, qword [r12 + 0x20]
0x00008559      be03000000     mov esi, 3
0x0000855e      49891c24       mov qword [r12], rbx
0x00008562      4c89e7         mov rdi, r12
0x00008565      c6040200       mov byte [rdx + rax], 0                 ; ../coreutils-8.31/lib/fts.c:-777
0x00008569      e8c2eaffff     call sym.fts_build
0x0000856e      4885c0         test rax, rax
0x00008571      4889c3         mov rbx, rax
0x00008574      7452           je 0x85c8
0x00008576      4889ef         mov rdi, rbp
0x00008579      4889dd         mov rbp, rbx
0x0000857c      e8af97ffff     call sym..plt.got
0x00008581      e97cfdffff     jmp 0x8302
0x00008586      662e0f1f8400.  nop word cs:[rax + rax]
0x00008590      8b7d44         mov edi, dword [rbp + 0x44]             ; ../coreutils-8.31/lib/fts.c:-754
0x00008593      e84895ffff     call sym.imp.close
0x00008598      e918fbffff     jmp 0x80b5                              ; ../coreutils-8.31/lib/fts.c:-757
0x0000859d      ba01000000     mov edx, 1
0x000085a2      4889de         mov rsi, rbx
0x000085a5      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-745
0x000085a8      e803dfffff     call sym.fts_stat
0x000085ad      6683f801       cmp ax, 1
0x000085b1      66894370       mov word [rbx + 0x70], ax
0x000085b5      745a           je 0x8611                               ; ../coreutils-8.31/lib/fts.c:-744
0x000085b7      be03000000     mov esi, 3
0x000085bc      4889dd         mov rbp, rbx
0x000085bf      66897374       mov word [rbx + 0x74], si
0x000085c3      e93afdffff     jmp 0x8302
0x000085c8      41f644244920   test byte [r12 + 0x49], 0x20
0x000085ce      0f859afaffff   jne 0x806e
0x000085d4      488b5d08       mov rbx, qword [rbp + 8]
0x000085d8      e90bfaffff     jmp 0x7fe8
0x000085dd      e80e96ffff     call sym.imp.fchdir
0x000085e2      85c0           test eax, eax
0x000085e4      7413           je 0x85f9
0x000085e6      e84593ffff     call sym.imp.__errno_location
0x000085eb      8b00           mov eax, dword [rax]
0x000085ed      894340         mov dword [rbx + 0x40], eax
0x000085f0      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0x2825 ; "%("
0x000085f9      8b7b44         mov edi, dword [rbx + 0x44]             ; ../coreutils-8.31/lib/fts.c:-741
0x000085fc      e93dfaffff     jmp 0x803e
0x00008601      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0x2825 ; "%("
0x0000860a      31ed           xor ebp, ebp
0x0000860c      e9d9faffff     jmp 0x80ea
0x00008611      418b742448     mov esi, dword [r12 + 0x48]
0x00008616      40f6c604       test sil, 4
0x0000861a      759b           jne 0x85b7
0x0000861c      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00008621      488d15a23500.  lea rdx, [0x0000bbca]                   ; ../coreutils-8.31/lib/fts.c:-738 ; "."
0x00008628      e8d3e5ffff     call sym.diropen.isra.6
0x0000862d      85c0           test eax, eax
0x0000862f      894344         mov dword [rbx + 0x44], eax
0x00008632      787c           js 0x86b0
0x00008634      66834b7202     or word [rbx + 0x72], 2
0x00008639      e979ffffff     jmp 0x85b7
0x0000863e      6683f801       cmp ax, 1
0x00008642      0f85a2faffff   jne 0x80ea
0x00008648      e970fcffff     jmp 0x82bd
0x0000864d      418b74242c     mov esi, dword [r12 + 0x2c]
0x00008652      4889df         mov rdi, rbx
0x00008655      e886e3ffff     call sym.leaf_optimization
0x0000865a      83f802         cmp eax, 2
0x0000865d      0f8591feffff   jne 0x84f4
0x00008663      0fb74570       movzx eax, word [rbp + 0x70]
0x00008667      e940fcffff     jmp 0x82ac
0x0000866c      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00008671      488d15523500.  lea rdx, [0x0000bbca]                   ; ../coreutils-8.31/lib/fts.c:-730 ; "."
0x00008678      e883e5ffff     call sym.diropen.isra.6
0x0000867d      85c0           test eax, eax
0x0000867f      894544         mov dword [rbp + 0x44], eax
0x00008682      780e           js 0x8692                               ; ../coreutils-8.31/lib/fts.c:-727
0x00008684      66834d7202     or word [rbp + 0x72], 2
0x00008689      0fb74570       movzx eax, word [rbp + 0x70]
0x0000868d      e90cfcffff     jmp 0x829e
0x00008692      e89992ffff     call sym.imp.__errno_location
0x00008697      8b00           mov eax, dword [rax]
0x00008699      41bb07000000   mov r11d, 7
0x0000869f      6644895d70     mov word [rbp + 0x70], r11w
0x000086a4      894540         mov dword [rbp + 0x40], eax
0x000086a7      49892c24       mov qword [r12], rbp
0x000086ab      e93afaffff     jmp 0x80ea
0x000086b0      e87b92ffff     call sym.imp.__errno_location
0x000086b5      8b00           mov eax, dword [rax]
0x000086b7      bf07000000     mov edi, 7
0x000086bc      66897b70       mov word [rbx + 0x70], di
0x000086c0      894340         mov dword [rbx + 0x40], eax
0x000086c3      e9effeffff     jmp 0x85b7
0x000086c8      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fts_set:
0x000086d0      83fa04         cmp edx, 4
0x000086d3      770b           ja 0x86e0
0x000086d5      66895674       mov word [rsi + 0x74], dx
0x000086d9      31c0           xor eax, eax
0x000086db      c3             ret
0x000086dc      0f1f4000       nop dword [rax]
0x000086e0      4883ec08       sub rsp, 8
0x000086e4      e84792ffff     call sym.imp.__errno_location
0x000086e9      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x22400000
0x000086ef      b801000000     mov eax, 1
0x000086f4      4883c408       add rsp, 8
0x000086f8      c3             ret
0x000086f9      0f1f80000000.  nop dword [rax]
;-- rpl_fts_children:
0x00008700      4156           push r14
0x00008702      4155           push r13
0x00008704      4154           push r12
0x00008706      55             push rbp
0x00008707      4189f4         mov r12d, esi
0x0000870a      53             push rbx
0x0000870b      4889fb         mov rbx, rdi
0x0000870e      e81d92ffff     call sym.imp.__errno_location
0x00008713      41f7c4ffefff.  test r12d, 0xffffefff
0x0000871a      4989c5         mov r13, rax
0x0000871d      0f85e5000000   jne 0x8808
0x00008723      488b2b         mov rbp, qword [rbx]
0x00008726      c70000000000   mov dword [rax], 0
0x0000872c      f6434920       test byte [rbx + 0x49], 0x20
0x00008730      757e           jne 0x87b0
0x00008732      0fb74570       movzx eax, word [rbp + 0x70]
0x00008736      6683f809       cmp ax, 9
0x0000873a      7464           je 0x87a0
0x0000873c      6683f801       cmp ax, 1
0x00008740      756e           jne 0x87b0
0x00008742      488b7b08       mov rdi, qword [rbx + 8]
0x00008746      4885ff         test rdi, rdi
0x00008749      7405           je 0x8750
0x0000874b      e8d0e0ffff     call sym.fts_lfree
0x00008750      4181fc001000.  cmp r12d, 0x1000
0x00008757      41be01000000   mov r14d, 1
0x0000875d      750d           jne 0x876c
0x0000875f      814b48001000.  or dword [rbx + 0x48], 0x1000           ; [0x1000:4]=0x20dae0
0x00008766      41be02000000   mov r14d, 2
0x0000876c      48837d5800     cmp qword [rbp + 0x58], 0
0x00008771      7512           jne 0x8785
0x00008773      488b4530       mov rax, qword [rbp + 0x30]
0x00008777      80382f         cmp byte [rax], 0x2f
0x0000877a      7409           je 0x8785
0x0000877c      8b7348         mov esi, dword [rbx + 0x48]
0x0000877f      40f6c604       test sil, 4
0x00008783      743b           je 0x87c0
0x00008785      4489f6         mov esi, r14d
0x00008788      4889df         mov rdi, rbx
0x0000878b      e8a0e8ffff     call sym.fts_build
0x00008790      48894308       mov qword [rbx + 8], rax
0x00008794      5b             pop rbx
0x00008795      5d             pop rbp
0x00008796      415c           pop r12
0x00008798      415d           pop r13
0x0000879a      415e           pop r14
0x0000879c      c3             ret
0x0000879d      0f1f00         nop dword [rax]
0x000087a0      5b             pop rbx
0x000087a1      488b4510       mov rax, qword [rbp + 0x10]
0x000087a5      5d             pop rbp
0x000087a6      415c           pop r12
0x000087a8      415d           pop r13
0x000087aa      415e           pop r14
0x000087ac      c3             ret
0x000087ad      0f1f00         nop dword [rax]
0x000087b0      5b             pop rbx
0x000087b1      31c0           xor eax, eax
0x000087b3      5d             pop rbp
0x000087b4      415c           pop r12
0x000087b6      415d           pop r13
0x000087b8      415e           pop r14
0x000087ba      c3             ret
0x000087bb      0f1f440000     nop dword [rax + rax]
0x000087c0      8b7b2c         mov edi, dword [rbx + 0x2c]
0x000087c3      488d15003400.  lea rdx, [0x0000bbca]                   ; "."
0x000087ca      e831e4ffff     call sym.diropen.isra.6
0x000087cf      85c0           test eax, eax
0x000087d1      89c5           mov ebp, eax
0x000087d3      7854           js 0x8829
0x000087d5      4489f6         mov esi, r14d
0x000087d8      4889df         mov rdi, rbx
0x000087db      e850e8ffff     call sym.fts_build
0x000087e0      f6434902       test byte [rbx + 0x49], 2
0x000087e4      48894308       mov qword [rbx + 8], rax
0x000087e8      752e           jne 0x8818
0x000087ea      89ef           mov edi, ebp
0x000087ec      e8ff93ffff     call sym.imp.fchdir
0x000087f1      85c0           test eax, eax
0x000087f3      7543           jne 0x8838
0x000087f5      89ef           mov edi, ebp
0x000087f7      e8e492ffff     call sym.imp.close
0x000087fc      488b4308       mov rax, qword [rbx + 8]
0x00008800      eb92           jmp 0x8794
0x00008802      660f1f440000   nop word [rax + rax]
0x00008808      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x22400000
0x0000880e      31c0           xor eax, eax
0x00008810      e97fffffff     jmp 0x8794
0x00008815      0f1f00         nop dword [rax]
0x00008818      ba01000000     mov edx, 1
0x0000881d      89ee           mov esi, ebp
0x0000881f      4889df         mov rdi, rbx
0x00008822      e829e2ffff     call sym.cwd_advance_fd
0x00008827      ebd3           jmp 0x87fc
0x00008829      48c743080000.  mov qword [rbx + 8], 0
0x00008831      31c0           xor eax, eax
0x00008833      e95cffffff     jmp 0x8794
0x00008838      418b5d00       mov ebx, dword [r13]
0x0000883c      89ef           mov edi, ebp
0x0000883e      e89d92ffff     call sym.imp.close
0x00008843      31c0           xor eax, eax
0x00008845      41895d00       mov dword [r13], ebx
0x00008849      e946ffffff     jmp 0x8794
0x0000884e      6690           nop
;-- rpl_mbrtowc:
0x00008850      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00008852      4154           push r12
0x00008854      4989f5         mov r13, rsi
0x00008857      55             push rbp
0x00008858      53             push rbx
0x00008859      4889fb         mov rbx, rdi
0x0000885c      4989d4         mov r12, rdx
0x0000885f      4883ec18       sub rsp, 0x18
0x00008863      64488b042528.  mov rax, qword fs:[0x28]
0x0000886c      4889442408     mov qword [rsp + 8], rax
0x00008871      31c0           xor eax, eax
0x00008873      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00008878      4885ff         test rdi, rdi
0x0000887b      480f44d8       cmove rbx, rax
0x0000887f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008882      e8d991ffff     call sym.imp.mbrtowc
0x00008887      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000888b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000888e      7620           jbe 0x88b0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008890      4d85e4         test r12, r12
0x00008893      741b           je 0x88b0
0x00008895      31ff           xor edi, edi
0x00008897      e8d4010000     call sym.hard_locale
0x0000889c      84c0           test al, al
0x0000889e      7510           jne 0x88b0
0x000088a0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000088a5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000088aa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000088ac      0f1f4000       nop dword [rax]
0x000088b0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000088b5      644833142528.  xor rdx, qword fs:[0x28]
0x000088be      4889e8         mov rax, rbp
0x000088c1      750b           jne 0x88ce
0x000088c3      4883c418       add rsp, 0x18
0x000088c7      5b             pop rbx
0x000088c8      5d             pop rbp
0x000088c9      415c           pop r12
0x000088cb      415d           pop r13
0x000088cd      c3             ret
0x000088ce      e86d91ffff     call sym.imp.__stack_chk_fail
0x000088d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000088dd      0f1f00         nop dword [rax]
;-- close_stream:
0x000088e0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000088e2      55             push rbp
0x000088e3      4889fd         mov rbp, rdi
0x000088e6      53             push rbx
0x000088e7      e88490ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000088ec      8b5d00         mov ebx, dword [rbp]
0x000088ef      4889ef         mov rdi, rbp
0x000088f2      4989c4         mov r12, rax
0x000088f5      e8d6160000     call sym.rpl_fclose
0x000088fa      83e320         and ebx, 0x20                           ; "@"
0x000088fd      85db           test ebx, ebx
0x000088ff      7517           jne 0x8918
0x00008901      85c0           test eax, eax
0x00008903      740a           je 0x890f                               ; stdio.h:-186
0x00008905      4d85e4         test r12, r12                           ; stdio.h:-178
0x00008908      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000890d      7439           je 0x8948
0x0000890f      5b             pop rbx
0x00008910      5d             pop rbp
0x00008911      415c           pop r12
0x00008913      c3             ret
0x00008914      0f1f4000       nop dword [rax]
0x00008918      85c0           test eax, eax
0x0000891a      751c           jne 0x8938
0x0000891c      e80f90ffff     call sym.imp.__errno_location
0x00008921      c70000000000   mov dword [rax], 0
0x00008927      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000892c      5b             pop rbx
0x0000892d      5d             pop rbp
0x0000892e      415c           pop r12
0x00008930      c3             ret
0x00008931      0f1f80000000.  nop dword [rax]
0x00008938      5b             pop rbx
0x00008939      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000893e      5d             pop rbp                                 ; stdio.h:-186
0x0000893f      415c           pop r12
0x00008941      c3             ret
0x00008942      660f1f440000   nop word [rax + rax]
0x00008948      e8e38fffff     call sym.imp.__errno_location
0x0000894d      833809         cmp dword [rax], 9
0x00008950      5b             pop rbx
0x00008951      5d             pop rbp
0x00008952      415c           pop r12                                 ; stdio.h:-178
0x00008954      0f95c0         setne al
0x00008957      0fb6c0         movzx eax, al
0x0000895a      f7d8           neg eax
0x0000895c      c3             ret
0x0000895d      0f1f00         nop dword [rax]
;-- cycle_check_init:
0x00008960      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/cycle-check.c:44
0x00008968      c7471816f695.  mov dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:46 ; [0x95f616:4]=-1
0x0000896f      c3             ret                                     ; ../coreutils-8.31/lib/cycle-check.c:47
;-- cycle_check:
0x00008970      817f1816f695.  cmp dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:59
0x00008977      755e           jne 0x89d7
0x00008979      488b5710       mov rdx, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/cycle-check.c:65
0x0000897d      488b4e08       mov rcx, qword [rsi + 8]
0x00008981      4885d2         test rdx, rdx
0x00008984      741a           je 0x89a0
0x00008986      48390f         cmp qword [rdi], rcx
0x00008989      742d           je 0x89b8
0x0000898b      4c8d4201       lea r8, [rdx + 1]                       ; ../coreutils-8.31/lib/cycle-check.c:70
0x0000898f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00008991      4c85c2         test rdx, r8                            ; ../coreutils-8.31/lib/cycle-check.c:70
0x00008994      4c894710       mov qword [rdi + 0x10], r8
0x00008998      7436           je 0x89d0
0x0000899a      f3c3           ret                                     ; ../coreutils-8.31/lib/cycle-check.c:85
0x0000899c      0f1f4000       nop dword [rax]
0x000089a0      48c747100100.  mov qword [rdi + 0x10], 1               ; ../coreutils-8.31/lib/cycle-check.c:70
0x000089a8      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/cycle-check.c:80
0x000089ab      48890f         mov qword [rdi], rcx                    ; ../coreutils-8.31/lib/cycle-check.c:81
0x000089ae      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/cycle-check.c:80
0x000089b2      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x000089b4      c3             ret
0x000089b5      0f1f00         nop dword [rax]
0x000089b8      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/cycle-check.c:65
0x000089bc      483906         cmp qword [rsi], rax
0x000089bf      75ca           jne 0x898b
0x000089c1      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/cycle-check.c:66
0x000089c6      c3             ret
0x000089c7      660f1f840000.  nop word [rax + rax]
0x000089d0      4d85c0         test r8, r8                             ; ../coreutils-8.31/lib/cycle-check.c:77
0x000089d3      74ec           je 0x89c1
0x000089d5      ebd1           jmp 0x89a8
0x000089d7      488d0d723200.  lea rcx, obj.__PRETTY_FUNCTION__.3994   ; ../coreutils-8.31/lib/cycle-check.c:60 ; 0xbc50 ; "cycle_check"
0x000089de      488d352b3200.  lea rsi, str..._coreutils_8.31_lib_cycle_check.c ; 0xbc10 ; "../coreutils-8.31/lib/cycle-check.c"
0x000089e5      488d3d483200.  lea rdi, str.state__magic____9827862    ; 0xbc34 ; "state->magic == 9827862"
0x000089ec      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/cycle-check.c:59
0x000089f0      ba3c000000     mov edx, 0x3c                           ; ../coreutils-8.31/lib/cycle-check.c:60 ; '<'
0x000089f5      e8c690ffff     call sym.imp.__assert_fail
0x000089fa      660f1f440000   nop word [rax + rax]
;-- open_safer:
0x00008a00      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x00008a04      4889542430     mov qword [rsp + 0x30], rdx
0x00008a09      31d2           xor edx, edx
0x00008a0b      64488b042528.  mov rax, qword fs:[0x28]
0x00008a14      4889442418     mov qword [rsp + 0x18], rax
0x00008a19      31c0           xor eax, eax
0x00008a1b      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x00008a1f      7527           jne 0x8a48
0x00008a21      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00008a23      e82892ffff     call sym.imp.open
0x00008a28      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x00008a2a      e861150000     call sym.fd_safer
0x00008a2f      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x00008a34      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008a3d      752a           jne 0x8a69
0x00008a3f      4883c458       add rsp, 0x58
0x00008a43      c3             ret
0x00008a44      0f1f4000       nop dword [rax]
0x00008a48      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x00008a4d      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00008a54      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x00008a58      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x00008a5d      488d442420     lea rax, [rsp + 0x20]
0x00008a62      4889442410     mov qword [rsp + 0x10], rax
0x00008a67      ebb8           jmp 0x8a21
0x00008a69      e8d28fffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x00008a6e      6690           nop
;-- hard_locale:
0x00008a70      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00008a74      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00008a76      e89591ffff     call sym.imp.setlocale
0x00008a7b      4889c2         mov rdx, rax
0x00008a7e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00008a83      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00008a86      741d           je 0x8aa5
0x00008a88      488d3dcd3100.  lea rdi, [0x0000bc5c]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00008a8f      b902000000     mov ecx, 2
0x00008a94      4889d6         mov rsi, rdx
0x00008a97      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008a99      0f97c1         seta cl
0x00008a9c      80d900         sbb cl, 0
0x00008a9f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00008aa1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00008aa3      750b           jne 0x8ab0
0x00008aa5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00008aa9      c3             ret
0x00008aaa      660f1f440000   nop word [rax + rax]
0x00008ab0      488d3da73100.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xbc5e ; "POSIX"
0x00008ab7      b906000000     mov ecx, 6
0x00008abc      4889d6         mov rsi, rdx
0x00008abf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008ac1      0f97c0         seta al
0x00008ac4      1c00           sbb al, 0
0x00008ac6      84c0           test al, al
0x00008ac8      0f95c0         setne al
0x00008acb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00008acf      c3             ret
;-- next_prime:
0x00008ad0      4883ff0a       cmp rdi, 0xa
0x00008ad4      b80a000000     mov eax, 0xa
0x00008ad9      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x00008ae3      480f42f8       cmovb rdi, rax
0x00008ae7      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x00008aeb      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00008aef      746e           je 0x8b5f
0x00008af1      0f1f80000000.  nop dword [rax]
0x00008af8      4889f8         mov rax, rdi
0x00008afb      4889f9         mov rcx, rdi
0x00008afe      49f7e1         mul r9
0x00008b01      4889d0         mov rax, rdx
0x00008b04      48d1e8         shr rax, 1
0x00008b07      488d0440       lea rax, [rax + rax*2]
0x00008b0b      4829c1         sub rcx, rax
0x00008b0e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x00008b12      4889c8         mov rax, rcx
0x00008b15      7639           jbe 0x8b50
0x00008b17      4885c9         test rcx, rcx
0x00008b1a      7439           je 0x8b55
0x00008b1c      41b810000000   mov r8d, 0x10
0x00008b22      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x00008b27      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x00008b2c      eb0b           jmp 0x8b39
0x00008b2e      6690           nop
0x00008b30      4983c008       add r8, 8
0x00008b34      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00008b37      741c           je 0x8b55
0x00008b39      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x00008b3d      31d2           xor edx, edx
0x00008b3f      4889f8         mov rax, rdi
0x00008b42      48f7f1         div rcx
0x00008b45      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00008b48      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x00008b4b      4889d0         mov rax, rdx
0x00008b4e      72e0           jb 0x8b30
0x00008b50      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00008b53      750a           jne 0x8b5f
0x00008b55      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00008b59      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00008b5d      7599           jne 0x8af8
0x00008b5f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00008b62      c3             ret
0x00008b63      0f1f00         nop dword [rax]
0x00008b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00008b70      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00008b73      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00008b75      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00008b79      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x00008b7c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x00008b7f      c3             ret
;-- raw_comparator:
0x00008b80      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00008b83      0f94c0         sete al
0x00008b86      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00008b87      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00008b90      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00008b91      4889fb         mov rbx, rdi
0x00008b94      4889f7         mov rdi, rsi
0x00008b97      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x00008b9b      ff5330         call qword [rbx + 0x30]
0x00008b9e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x00008ba2      7609           jbe 0x8bad
0x00008ba4      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x00008ba8      480303         add rax, qword [rbx]
0x00008bab      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x00008bac      c3             ret
0x00008bad      e86e8dffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x00008bb2      0f1f4000       nop dword [rax]
0x00008bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x00008bc0      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x00008bc2      4155           push r13
0x00008bc4      4989d6         mov r14, rdx
0x00008bc7      4154           push r12
0x00008bc9      55             push rbp
0x00008bca      4989fc         mov r12, rdi
0x00008bcd      53             push rbx
0x00008bce      4889f5         mov rbp, rsi
0x00008bd1      4189cd         mov r13d, ecx
0x00008bd4      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x00008bd9      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x00008bdc      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x00008bdf      4885f6         test rsi, rsi
0x00008be2      0f84e8000000   je 0x8cd0
0x00008be8      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x00008beb      4889c3         mov rbx, rax
0x00008bee      0f848f000000   je 0x8c83
0x00008bf4      4889ef         mov rdi, rbp
0x00008bf7      41ff542438     call qword [r12 + 0x38]
0x00008bfc      84c0           test al, al
0x00008bfe      0f857c000000   jne 0x8c80
0x00008c04      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00008c08      4885c0         test rax, rax
0x00008c0b      0f84bf000000   je 0x8cd0
0x00008c11      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00008c14      4839f5         cmp rbp, rsi
0x00008c17      7520           jne 0x8c39
0x00008c19      eb31           jmp 0x8c4c
0x00008c1b      0f1f440000     nop dword [rax + rax]
0x00008c20      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00008c24      488b4308       mov rax, qword [rbx + 8]
0x00008c28      4885c0         test rax, rax
0x00008c2b      0f849f000000   je 0x8cd0
0x00008c31      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00008c34      4839ee         cmp rsi, rbp
0x00008c37      7413           je 0x8c4c
0x00008c39      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x00008c3c      41ff542438     call qword [r12 + 0x38]
0x00008c41      84c0           test al, al
0x00008c43      74db           je 0x8c20
0x00008c45      488b4308       mov rax, qword [rbx + 8]
0x00008c49      488b30         mov rsi, qword [rax]
0x00008c4c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x00008c4f      741d           je 0x8c6e
0x00008c51      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00008c55      48895308       mov qword [rbx + 8], rdx
0x00008c59      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00008c60      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00008c65      48895008       mov qword [rax + 8], rdx
0x00008c69      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x00008c6e      5b             pop rbx
0x00008c6f      4889f0         mov rax, rsi
0x00008c72      5d             pop rbp
0x00008c73      415c           pop r12
0x00008c75      415d           pop r13
0x00008c77      415e           pop r14
0x00008c79      c3             ret
0x00008c7a      660f1f440000   nop word [rax + rax]
0x00008c80      488b33         mov rsi, qword [rbx]
0x00008c83      4584ed         test r13b, r13b
0x00008c86      74e6           je 0x8c6e
0x00008c88      488b4308       mov rax, qword [rbx + 8]
0x00008c8c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x00008c8f      742f           je 0x8cc0
0x00008c91      f30f6f00       movdqu xmm0, xmmword [rax]
0x00008c95      0f1103         movups xmmword [rbx], xmm0
0x00008c98      48c700000000.  mov qword [rax], 0
0x00008c9f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x00008ca4      48895008       mov qword [rax + 8], rdx
0x00008ca8      4989442448     mov qword [r12 + 0x48], rax
0x00008cad      4889f0         mov rax, rsi
0x00008cb0      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x00008cb1      5d             pop rbp
0x00008cb2      415c           pop r12
0x00008cb4      415d           pop r13
0x00008cb6      415e           pop r14
0x00008cb8      c3             ret
0x00008cb9      0f1f80000000.  nop dword [rax]
0x00008cc0      48c703000000.  mov qword [rbx], 0
0x00008cc7      eba5           jmp 0x8c6e
0x00008cc9      0f1f80000000.  nop dword [rax]
0x00008cd0      31f6           xor esi, esi
0x00008cd2      5b             pop rbx
0x00008cd3      4889f0         mov rax, rsi
0x00008cd6      5d             pop rbp
0x00008cd7      415c           pop r12
0x00008cd9      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x00008cdb      415e           pop r14
0x00008cdd      c3             ret
0x00008cde      6690           nop
;-- check_tuning.isra.0:
0x00008ce0      488b17         mov rdx, qword [rdi]
0x00008ce3      488d0df62f00.  lea rcx, obj.default_tuning             ; 0xbce0
0x00008cea      b801000000     mov eax, 1
0x00008cef      4839ca         cmp rdx, rcx
0x00008cf2      7461           je 0x8d55
0x00008cf4      f30f104208     movss xmm0, dword [rdx + 8]
0x00008cf9      0f2e05f42f00.  ucomiss xmm0, dword [0x0000bcf4]
0x00008d00      764e           jbe 0x8d50
0x00008d02      f30f100dee2f.  movss xmm1, dword [0x0000bcf8]          ; [0xbcf8:4]=0x3f666666
0x00008d0a      0f2ec8         ucomiss xmm1, xmm0
0x00008d0d      7641           jbe 0x8d50
0x00008d0f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x00008d14      0f2e0de12f00.  ucomiss xmm1, dword [0x0000bcfc]
0x00008d1b      7633           jbe 0x8d50
0x00008d1d      f30f100a       movss xmm1, dword [rdx]
0x00008d21      0f2e0dd82f00.  ucomiss xmm1, dword [0x0000bd00]
0x00008d28      7226           jb 0x8d50
0x00008d2a      f30f580dc22f.  addss xmm1, dword [0x0000bcf4]          ; ../coreutils-8.31/lib/hash.c:737
0x00008d32      f30f105204     movss xmm2, dword [rdx + 4]
0x00008d37      0f2ed1         ucomiss xmm2, xmm1
0x00008d3a      7614           jbe 0x8d50
0x00008d3c      f30f101dc02f.  movss xmm3, dword [0x0000bd04]          ; [0xbd04:4]=0x3f800000
0x00008d44      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00008d47      7207           jb 0x8d50
0x00008d49      0f2ec1         ucomiss xmm0, xmm1
0x00008d4c      7707           ja 0x8d55
0x00008d4e      6690           nop
0x00008d50      48890f         mov qword [rdi], rcx
0x00008d53      31c0           xor eax, eax
0x00008d55      f3c3           ret
0x00008d57      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00008d60      4157           push r15
0x00008d62      4156           push r14
0x00008d64      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00008d66      4154           push r12
0x00008d68      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00008d69      53             push rbx
0x00008d6a      4883ec08       sub rsp, 8
0x00008d6e      4c8b26         mov r12, qword [rsi]
0x00008d71      4c3b6608       cmp r12, qword [rsi + 8]
0x00008d75      0f83dd000000   jae 0x8e58
0x00008d7b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x00008d7e      4989f5         mov r13, rsi
0x00008d81      4189d6         mov r14d, edx
0x00008d84      0f1f4000       nop dword [rax]
0x00008d88      4d8b3c24       mov r15, qword [r12]
0x00008d8c      4d85ff         test r15, r15
0x00008d8f      0f84b5000000   je 0x8e4a
0x00008d95      498b5c2408     mov rbx, qword [r12 + 8]
0x00008d9a      4885db         test rbx, rbx
0x00008d9d      751d           jne 0x8dbc
0x00008d9f      eb5a           jmp 0x8dfb
0x00008da1      0f1f80000000.  nop dword [rax]
0x00008da8      488b4808       mov rcx, qword [rax + 8]
0x00008dac      4885d2         test rdx, rdx
0x00008daf      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x00008db3      48895808       mov qword [rax + 8], rbx
0x00008db7      4889d3         mov rbx, rdx
0x00008dba      743b           je 0x8df7
0x00008dbc      4c8b3b         mov r15, qword [rbx]
0x00008dbf      4889ef         mov rdi, rbp
0x00008dc2      4c89fe         mov rsi, r15
0x00008dc5      e8c6fdffff     call sym.safe_hasher
0x00008dca      48833800       cmp qword [rax], 0
0x00008dce      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x00008dd2      75d4           jne 0x8da8
0x00008dd4      4c8938         mov qword [rax], r15
0x00008dd7      4883451801     add qword [rbp + 0x18], 1
0x00008ddc      4885d2         test rdx, rdx
0x00008ddf      48c703000000.  mov qword [rbx], 0
0x00008de6      488b4548       mov rax, qword [rbp + 0x48]
0x00008dea      48894308       mov qword [rbx + 8], rax
0x00008dee      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x00008df2      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x00008df5      75c5           jne 0x8dbc
0x00008df7      4d8b3c24       mov r15, qword [r12]
0x00008dfb      4584f6         test r14b, r14b
0x00008dfe      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x00008e07      7541           jne 0x8e4a
0x00008e09      4c89fe         mov rsi, r15
0x00008e0c      4889ef         mov rdi, rbp
0x00008e0f      e87cfdffff     call sym.safe_hasher
0x00008e14      48833800       cmp qword [rax], 0
0x00008e18      4889c3         mov rbx, rax
0x00008e1b      7453           je 0x8e70
0x00008e1d      488b4548       mov rax, qword [rbp + 0x48]
0x00008e21      4885c0         test rax, rax
0x00008e24      745a           je 0x8e80
0x00008e26      488b5008       mov rdx, qword [rax + 8]
0x00008e2a      48895548       mov qword [rbp + 0x48], rdx
0x00008e2e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x00008e32      4c8938         mov qword [rax], r15
0x00008e35      48895008       mov qword [rax + 8], rdx
0x00008e39      48894308       mov qword [rbx + 8], rax
0x00008e3d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00008e45      49836d1801     sub qword [r13 + 0x18], 1
0x00008e4a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x00008e4e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00008e52      0f8730ffffff   ja 0x8d88
0x00008e58      4883c408       add rsp, 8
0x00008e5c      b801000000     mov eax, 1
0x00008e61      5b             pop rbx
0x00008e62      5d             pop rbp
0x00008e63      415c           pop r12
0x00008e65      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x00008e67      415e           pop r14
0x00008e69      415f           pop r15
0x00008e6b      c3             ret
0x00008e6c      0f1f4000       nop dword [rax]
0x00008e70      4c8938         mov qword [rax], r15
0x00008e73      4883451801     add qword [rbp + 0x18], 1
0x00008e78      ebc3           jmp 0x8e3d
0x00008e7a      660f1f440000   nop word [rax + rax]
0x00008e80      bf10000000     mov edi, 0x10
0x00008e85      e8168dffff     call sym.imp.malloc
0x00008e8a      4885c0         test rax, rax
0x00008e8d      759f           jne 0x8e2e
0x00008e8f      4883c408       add rsp, 8
0x00008e93      31c0           xor eax, eax
0x00008e95      5b             pop rbx
0x00008e96      5d             pop rbp
0x00008e97      415c           pop r12
0x00008e99      415d           pop r13
0x00008e9b      415e           pop r14
0x00008e9d      415f           pop r15
0x00008e9f      c3             ret
;-- hash_get_n_buckets:
0x00008ea0      488b4710       mov rax, qword [rdi + 0x10]
0x00008ea4      c3             ret
0x00008ea5      90             nop
0x00008ea6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x00008eb0      488b4718       mov rax, qword [rdi + 0x18]
0x00008eb4      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x00008eb5      90             nop
0x00008eb6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x00008ec0      488b4720       mov rax, qword [rdi + 0x20]
0x00008ec4      c3             ret
0x00008ec5      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x00008ec6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x00008ed0      488b37         mov rsi, qword [rdi]
0x00008ed3      488b7f08       mov rdi, qword [rdi + 8]
0x00008ed7      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x00008ed9      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x00008edc      7339           jae 0x8f17
0x00008ede      6690           nop
0x00008ee0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x00008ee4      7426           je 0x8f0c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x00008ee6      488b5608       mov rdx, qword [rsi + 8]
0x00008eea      b901000000     mov ecx, 1
0x00008eef      4885d2         test rdx, rdx
0x00008ef2      7411           je 0x8f05
0x00008ef4      0f1f4000       nop dword [rax]
0x00008ef8      488b5208       mov rdx, qword [rdx + 8]
0x00008efc      4883c101       add rcx, 1
0x00008f00      4885d2         test rdx, rdx
0x00008f03      75f3           jne 0x8ef8
0x00008f05      4839c8         cmp rax, rcx
0x00008f08      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x00008f0c      4883c610       add rsi, 0x10
0x00008f10      4839fe         cmp rsi, rdi
0x00008f13      72cb           jb 0x8ee0
0x00008f15      f3c3           ret
0x00008f17      f3c3           ret
0x00008f19      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x00008f20      488b0f         mov rcx, qword [rdi]
0x00008f23      4c8b4708       mov r8, qword [rdi + 8]
0x00008f27      31d2           xor edx, edx
0x00008f29      31f6           xor esi, esi
0x00008f2b      4c39c1         cmp rcx, r8
0x00008f2e      7336           jae 0x8f66
0x00008f30      48833900       cmp qword [rcx], 0
0x00008f34      7427           je 0x8f5d
0x00008f36      488b4108       mov rax, qword [rcx + 8]
0x00008f3a      4883c601       add rsi, 1
0x00008f3e      4883c201       add rdx, 1
0x00008f42      4885c0         test rax, rax
0x00008f45      7416           je 0x8f5d
0x00008f47      660f1f840000.  nop word [rax + rax]
0x00008f50      488b4008       mov rax, qword [rax + 8]
0x00008f54      4883c201       add rdx, 1
0x00008f58      4885c0         test rax, rax
0x00008f5b      75f3           jne 0x8f50
0x00008f5d      4883c110       add rcx, 0x10
0x00008f61      4c39c1         cmp rcx, r8
0x00008f64      72ca           jb 0x8f30
0x00008f66      31c0           xor eax, eax
0x00008f68      48397718       cmp qword [rdi + 0x18], rsi
0x00008f6c      7402           je 0x8f70
0x00008f6e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00008f70      48395720       cmp qword [rdi + 0x20], rdx
0x00008f74      0f94c0         sete al
0x00008f77      c3             ret
0x00008f78      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x00008f80      4155           push r13
0x00008f82      4154           push r12
0x00008f84      4989f4         mov r12, rsi
0x00008f87      55             push rbp
0x00008f88      53             push rbx
0x00008f89      31db           xor ebx, ebx
0x00008f8b      4883ec08       sub rsp, 8
0x00008f8f      488b37         mov rsi, qword [rdi]
0x00008f92      488b4f20       mov rcx, qword [rdi + 0x20]
0x00008f96      488b6f10       mov rbp, qword [rdi + 0x10]
0x00008f9a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x00008f9e      488b7f08       mov rdi, qword [rdi + 8]
0x00008fa2      4839fe         cmp rsi, rdi
0x00008fa5      733e           jae 0x8fe5
0x00008fa7      660f1f840000.  nop word [rax + rax]
0x00008fb0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x00008fb4      7426           je 0x8fdc
0x00008fb6      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x00008fba      ba01000000     mov edx, 1
0x00008fbf      4885c0         test rax, rax
0x00008fc2      7411           je 0x8fd5
0x00008fc4      0f1f4000       nop dword [rax]
0x00008fc8      488b4008       mov rax, qword [rax + 8]
0x00008fcc      4883c201       add rdx, 1
0x00008fd0      4885c0         test rax, rax
0x00008fd3      75f3           jne 0x8fc8
0x00008fd5      4839d3         cmp rbx, rdx
0x00008fd8      480f42da       cmovb rbx, rdx
0x00008fdc      4883c610       add rsi, 0x10
0x00008fe0      4839fe         cmp rsi, rdi
0x00008fe3      72cb           jb 0x8fb0
0x00008fe5      488d15782c00.  lea rdx, str.entries:__________lu       ; 0xbc64 ; "# entries:         %lu\n"
0x00008fec      be01000000     mov esi, 1
0x00008ff1      4c89e7         mov rdi, r12
0x00008ff4      31c0           xor eax, eax
0x00008ff6      e8f58cffff     call sym.imp.__fprintf_chk
0x00008ffb      488d157a2c00.  lea rdx, str.buckets:__________lu       ; 0xbc7c ; "# buckets:         %lu\n"
0x00009002      31c0           xor eax, eax
0x00009004      4889e9         mov rcx, rbp
0x00009007      be01000000     mov esi, 1
0x0000900c      4c89e7         mov rdi, r12
0x0000900f      e8dc8cffff     call sym.imp.__fprintf_chk
0x00009014      4d85ed         test r13, r13
0x00009017      7867           js 0x9080
0x00009019      660fefc0       pxor xmm0, xmm0
0x0000901d      4885ed         test rbp, rbp
0x00009020      f2490f2ac5     cvtsi2sd xmm0, r13
0x00009025      f20f5905eb2c.  mulsd xmm0, qword [0x0000bd18]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000902d      787a           js 0x90a9                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000902f      660fefc9       pxor xmm1, xmm1
0x00009033      f2480f2acd     cvtsi2sd xmm1, rbp
0x00009038      f20f5ec1       divsd xmm0, xmm1
0x0000903c      488d156d2c00.  lea rdx, str.buckets_used:_____lu___.2f ; 0xbcb0 ; "# buckets used:    %lu (%.2f%%)\n"
0x00009043      4c89e9         mov rcx, r13
0x00009046      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x00009049      be01000000     mov esi, 1
0x0000904e      b801000000     mov eax, 1
0x00009053      e8988cffff     call sym.imp.__fprintf_chk
0x00009058      4883c408       add rsp, 8
0x0000905c      4889d9         mov rcx, rbx
0x0000905f      4c89e7         mov rdi, r12
0x00009062      5b             pop rbx
0x00009063      5d             pop rbp
0x00009064      415c           pop r12
0x00009066      415d           pop r13
0x00009068      488d15252c00.  lea rdx, str.max_bucket_length:__lu     ; 0xbc94 ; "max bucket length: %lu\n"
0x0000906f      be01000000     mov esi, 1
0x00009074      31c0           xor eax, eax
0x00009076      e9758cffff     jmp sym.imp.__fprintf_chk
0x0000907b      0f1f440000     nop dword [rax + rax]
0x00009080      4c89e8         mov rax, r13
0x00009083      4c89ea         mov rdx, r13
0x00009086      660fefc0       pxor xmm0, xmm0
0x0000908a      48d1e8         shr rax, 1
0x0000908d      83e201         and edx, 1
0x00009090      4809d0         or rax, rdx
0x00009093      4885ed         test rbp, rbp
0x00009096      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000909b      f20f58c0       addsd xmm0, xmm0
0x0000909f      f20f5905712c.  mulsd xmm0, qword [0x0000bd18]
0x000090a7      7986           jns 0x902f                              ; ../coreutils-8.31/lib/hash.c:-138
0x000090a9      4889e8         mov rax, rbp
0x000090ac      660fefc9       pxor xmm1, xmm1
0x000090b0      48d1e8         shr rax, 1
0x000090b3      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x000090b6      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x000090b9      f2480f2ac8     cvtsi2sd xmm1, rax
0x000090be      f20f58c9       addsd xmm1, xmm1
0x000090c2      e971ffffff     jmp 0x9038
0x000090c7      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x000090d0      4154           push r12
0x000090d2      55             push rbp
0x000090d3      4989fc         mov r12, rdi
0x000090d6      53             push rbx
0x000090d7      4889f5         mov rbp, rsi
0x000090da      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x000090df      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x000090e2      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x000090e5      7426           je 0x910d                               ; ../coreutils-8.31/lib/hash.c:-120
0x000090e7      4889c3         mov rbx, rax
0x000090ea      eb07           jmp 0x90f3
0x000090ec      0f1f4000       nop dword [rax]
0x000090f0      488b33         mov rsi, qword [rbx]
0x000090f3      4839ee         cmp rsi, rbp
0x000090f6      7417           je 0x910f                               ; ../coreutils-8.31/lib/hash.c:-116
0x000090f8      4889ef         mov rdi, rbp
0x000090fb      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x00009100      84c0           test al, al
0x00009102      751c           jne 0x9120
0x00009104      488b5b08       mov rbx, qword [rbx + 8]
0x00009108      4885db         test rbx, rbx
0x0000910b      75e3           jne 0x90f0
0x0000910d      31f6           xor esi, esi
0x0000910f      5b             pop rbx
0x00009110      4889f0         mov rax, rsi
0x00009113      5d             pop rbp
0x00009114      415c           pop r12
0x00009116      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x00009117      660f1f840000.  nop word [rax + rax]
0x00009120      488b33         mov rsi, qword [rbx]
0x00009123      5b             pop rbx
0x00009124      5d             pop rbp
0x00009125      4889f0         mov rax, rsi
0x00009128      415c           pop r12
0x0000912a      c3             ret
0x0000912b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x00009130      48837f2000     cmp qword [rdi + 0x20], 0
0x00009135      742c           je 0x9163
0x00009137      488b17         mov rdx, qword [rdi]
0x0000913a      488b4f08       mov rcx, qword [rdi + 8]
0x0000913e      4839ca         cmp rdx, rcx
0x00009141      7325           jae 0x9168
0x00009143      488b02         mov rax, qword [rdx]
0x00009146      4885c0         test rax, rax
0x00009149      751b           jne 0x9166
0x0000914b      0f1f440000     nop dword [rax + rax]
0x00009150      4883c210       add rdx, 0x10
0x00009154      4839ca         cmp rdx, rcx
0x00009157      730f           jae 0x9168                              ; ../coreutils-8.31/lib/hash.c:-97
0x00009159      488b02         mov rax, qword [rdx]
0x0000915c      4885c0         test rax, rax
0x0000915f      74ef           je 0x9150
0x00009161      f3c3           ret
0x00009163      31c0           xor eax, eax
0x00009165      c3             ret
0x00009166      f3c3           ret
0x00009168      4883ec08       sub rsp, 8
0x0000916c      e8af87ffff     call sym.imp.abort
0x00009171      0f1f440000     nop dword [rax + rax]
0x00009176      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x00009180      55             push rbp
0x00009181      53             push rbx
0x00009182      4889fd         mov rbp, rdi
0x00009185      4889f3         mov rbx, rsi
0x00009188      4883ec08       sub rsp, 8
0x0000918c      e8fff9ffff     call sym.safe_hasher
0x00009191      4889c2         mov rdx, rax
0x00009194      4889c1         mov rcx, rax
0x00009197      488b02         mov rax, qword [rdx]
0x0000919a      488b5208       mov rdx, qword [rdx + 8]
0x0000919e      4839d8         cmp rax, rbx
0x000091a1      7416           je 0x91b9
0x000091a3      0f1f440000     nop dword [rax + rax]
0x000091a8      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x000091ab      7411           je 0x91be
0x000091ad      488b02         mov rax, qword [rdx]
0x000091b0      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x000091b4      4839d8         cmp rax, rbx
0x000091b7      75ef           jne 0x91a8
0x000091b9      4885d2         test rdx, rdx
0x000091bc      752a           jne 0x91e8
0x000091be      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x000091c2      eb0c           jmp 0x91d0
0x000091c4      0f1f4000       nop dword [rax]
0x000091c8      488b01         mov rax, qword [rcx]
0x000091cb      4885c0         test rax, rax
0x000091ce      750b           jne 0x91db
0x000091d0      4883c110       add rcx, 0x10
0x000091d4      4839ca         cmp rdx, rcx
0x000091d7      77ef           ja 0x91c8
0x000091d9      31c0           xor eax, eax
0x000091db      4883c408       add rsp, 8
0x000091df      5b             pop rbx
0x000091e0      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x000091e1      c3             ret
0x000091e2      660f1f440000   nop word [rax + rax]
0x000091e8      488b02         mov rax, qword [rdx]
0x000091eb      4883c408       add rsp, 8
0x000091ef      5b             pop rbx
0x000091f0      5d             pop rbp
0x000091f1      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x000091f2      0f1f4000       nop dword [rax]
0x000091f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x00009200      4c8b0f         mov r9, qword [rdi]
0x00009203      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x00009207      7659           jbe 0x9262
0x00009209      4531c0         xor r8d, r8d
0x0000920c      498b09         mov rcx, qword [r9]
0x0000920f      4885c9         test rcx, rcx
0x00009212      7439           je 0x924d                               ; ../coreutils-8.31/lib/hash.c:-47
0x00009214      4c39c2         cmp rdx, r8
0x00009217      763e           jbe 0x9257
0x00009219      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000921d      498b4908       mov rcx, qword [r9 + 8]
0x00009221      498d4001       lea rax, [r8 + 1]
0x00009225      4885c9         test rcx, rcx
0x00009228      7420           je 0x924a
0x0000922a      660f1f440000   nop word [rax + rax]
0x00009230      4839c2         cmp rdx, rax
0x00009233      742b           je 0x9260                               ; ../coreutils-8.31/lib/hash.c:-3
0x00009235      4c8b01         mov r8, qword [rcx]
0x00009238      4883c001       add rax, 1
0x0000923c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x00009241      488b4908       mov rcx, qword [rcx + 8]
0x00009245      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x00009248      75e6           jne 0x9230
0x0000924a      4989c0         mov r8, rax
0x0000924d      4983c110       add r9, 0x10
0x00009251      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x00009255      77b5           ja 0x920c
0x00009257      4c89c0         mov rax, r8
0x0000925a      c3             ret
0x0000925b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x00009260      f3c3           ret
0x00009262      31c0           xor eax, eax
0x00009264      c3             ret
0x00009265      90             nop
0x00009266      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00009270      4157           push r15
0x00009272      4156           push r14
0x00009274      4155           push r13
0x00009276      4154           push r12
0x00009278      55             push rbp
0x00009279      53             push rbx
0x0000927a      4883ec08       sub rsp, 8
0x0000927e      4c8b37         mov r14, qword [rdi]
0x00009281      4c397708       cmp qword [rdi + 8], r14
0x00009285      764f           jbe 0x92d6
0x00009287      4989d5         mov r13, rdx
0x0000928a      4989f4         mov r12, rsi
0x0000928d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x00009290      31ed           xor ebp, ebp
0x00009292      498b3e         mov rdi, qword [r14]
0x00009295      4885ff         test rdi, rdi
0x00009298      7420           je 0x92ba
0x0000929a      4c89f3         mov rbx, r14
0x0000929d      eb04           jmp 0x92a3
0x0000929f      90             nop
0x000092a0      488b3b         mov rdi, qword [rbx]
0x000092a3      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x000092a6      41ffd4         call r12
0x000092a9      84c0           test al, al
0x000092ab      7417           je 0x92c4
0x000092ad      488b5b08       mov rbx, qword [rbx + 8]
0x000092b1      4883c501       add rbp, 1
0x000092b5      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x000092b8      75e6           jne 0x92a0
0x000092ba      4983c610       add r14, 0x10
0x000092be      4d397708       cmp qword [r15 + 8], r14
0x000092c2      77ce           ja 0x9292
0x000092c4      4883c408       add rsp, 8
0x000092c8      4889e8         mov rax, rbp
0x000092cb      5b             pop rbx
0x000092cc      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x000092cd      415c           pop r12
0x000092cf      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x000092d1      415e           pop r14
0x000092d3      415f           pop r15
0x000092d5      c3             ret
0x000092d6      31ed           xor ebp, ebp
0x000092d8      ebea           jmp 0x92c4                              ; ../coreutils-8.31/lib/hash.c:41
0x000092da      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x000092e0      0fb60f         movzx ecx, byte [rdi]
0x000092e3      31d2           xor edx, edx
0x000092e5      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x000092e7      7424           je 0x930d
0x000092e9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x000092f0      4889d0         mov rax, rdx
0x000092f3      4883c701       add rdi, 1
0x000092f7      48c1e005       shl rax, 5
0x000092fb      4829d0         sub rax, rdx
0x000092fe      31d2           xor edx, edx
0x00009300      4801c8         add rax, rcx
0x00009303      0fb60f         movzx ecx, byte [rdi]
0x00009306      48f7f6         div rsi
0x00009309      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000930b      75e3           jne 0x92f0
0x0000930d      4889d0         mov rax, rdx
0x00009310      c3             ret
0x00009311      0f1f440000     nop dword [rax + rax]
0x00009316      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x00009320      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000932a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000932e      488907         mov qword [rdi], rax
0x00009331      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000933b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000933f      c3             ret
;-- hash_initialize:
0x00009340      4157           push r15
0x00009342      4156           push r14
0x00009344      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x8b70 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000934b      4155           push r13
0x0000934d      4154           push r12
0x0000934f      4989d4         mov r12, rdx
0x00009352      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x00009353      53             push rbx
0x00009354      4989cd         mov r13, rcx
0x00009357      4889fd         mov rbp, rdi
0x0000935a      bf50000000     mov edi, 0x50                           ; 'P'
0x0000935f      4989f7         mov r15, rsi
0x00009362      4883ec08       sub rsp, 8
0x00009366      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x00009369      4d89c6         mov r14, r8
0x0000936c      4c0f44e0       cmove r12, rax
0x00009370      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x8b80 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00009377      4885c9         test rcx, rcx
0x0000937a      4c0f44e8       cmove r13, rax
0x0000937e      e81d88ffff     call sym.imp.malloc
0x00009383      4885c0         test rax, rax
0x00009386      4889c3         mov rbx, rax
0x00009389      0f84ab000000   je 0x943a
0x0000938f      4d85ff         test r15, r15
0x00009392      488d7828       lea rdi, [rax + 0x28]
0x00009396      0f84b4000000   je 0x9450
0x0000939c      4c897828       mov qword [rax + 0x28], r15
0x000093a0      e83bf9ffff     call sym.check_tuning.isra.0
0x000093a5      84c0           test al, al
0x000093a7      0f8483000000   je 0x9430
0x000093ad      41807f1000     cmp byte [r15 + 0x10], 0
0x000093b2      0f84f8000000   je 0x94b0
0x000093b8      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x000093bb      e810f7ffff     call sym.next_prime
0x000093c0      ba08000000     mov edx, 8
0x000093c5      4889c5         mov rbp, rax
0x000093c8      31c9           xor ecx, ecx
0x000093ca      4889d0         mov rax, rdx
0x000093cd      48f7e5         mul rbp
0x000093d0      0f8014010000   jo 0x94ea
0x000093d6      4885c0         test rax, rax
0x000093d9      7855           js 0x9430
0x000093db      4885c9         test rcx, rcx
0x000093de      7550           jne 0x9430
0x000093e0      4885ed         test rbp, rbp
0x000093e3      48896b10       mov qword [rbx + 0x10], rbp
0x000093e7      7447           je 0x9430
0x000093e9      be10000000     mov esi, 0x10
0x000093ee      4889ef         mov rdi, rbp
0x000093f1      e83a87ffff     call sym.imp.calloc
0x000093f6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x000093f9      488903         mov qword [rbx], rax
0x000093fc      7432           je 0x9430
0x000093fe      48c1e504       shl rbp, 4
0x00009402      48c743180000.  mov qword [rbx + 0x18], 0
0x0000940a      48c743200000.  mov qword [rbx + 0x20], 0
0x00009412      4801c5         add rbp, rax
0x00009415      4c896330       mov qword [rbx + 0x30], r12
0x00009419      4c896b38       mov qword [rbx + 0x38], r13
0x0000941d      48896b08       mov qword [rbx + 8], rbp
0x00009421      4c897340       mov qword [rbx + 0x40], r14
0x00009425      48c743480000.  mov qword [rbx + 0x48], 0
0x0000942d      eb0b           jmp 0x943a
0x0000942f      90             nop
0x00009430      4889df         mov rdi, rbx
0x00009433      31db           xor ebx, ebx
0x00009435      e8f688ffff     call sym..plt.got
0x0000943a      4883c408       add rsp, 8
0x0000943e      4889d8         mov rax, rbx
0x00009441      5b             pop rbx
0x00009442      5d             pop rbp
0x00009443      415c           pop r12
0x00009445      415d           pop r13
0x00009447      415e           pop r14
0x00009449      415f           pop r15
0x0000944b      c3             ret
0x0000944c      0f1f4000       nop dword [rax]
0x00009450      488d05892800.  lea rax, obj.default_tuning             ; 0xbce0
0x00009457      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000945b      e880f8ffff     call sym.check_tuning.isra.0
0x00009460      84c0           test al, al
0x00009462      f30f100d9e28.  movss xmm1, dword [0x0000bd08]          ; [0xbd08:4]=0x3f4ccccd
0x0000946a      74c4           je 0x9430
0x0000946c      4885ed         test rbp, rbp
0x0000946f      784a           js 0x94bb
0x00009471      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00009475      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000947a      f30f5ec1       divss xmm0, xmm1
0x0000947e      0f2e05872800.  ucomiss xmm0, dword [0x0000bd0c]
0x00009485      73a9           jae 0x9430
0x00009487      0f2e05822800.  ucomiss xmm0, dword [0x0000bd10]
0x0000948e      7250           jb 0x94e0
0x00009490      f30f5c057828.  subss xmm0, dword [0x0000bd10]
0x00009498      48b800000000.  movabs rax, 0x8000000000000000
0x000094a2      f3480f2ce8     cvttss2si rbp, xmm0
0x000094a7      4831c5         xor rbp, rax
0x000094aa      e909ffffff     jmp 0x93b8
0x000094af      90             nop
0x000094b0      4885ed         test rbp, rbp
0x000094b3      f3410f104f08   movss xmm1, dword [r15 + 8]
0x000094b9      79b6           jns 0x9471                              ; ../coreutils-8.31/lib/hash.c:-146
0x000094bb      4889e8         mov rax, rbp
0x000094be      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x000094c2      48d1e8         shr rax, 1
0x000094c5      83e501         and ebp, 1
0x000094c8      4809e8         or rax, rbp
0x000094cb      f3480f2ac0     cvtsi2ss xmm0, rax
0x000094d0      f30f58c0       addss xmm0, xmm0
0x000094d4      eba4           jmp 0x947a
0x000094d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000094e0      f3480f2ce8     cvttss2si rbp, xmm0
0x000094e5      e9cefeffff     jmp 0x93b8
0x000094ea      b901000000     mov ecx, 1
0x000094ef      e9e2feffff     jmp 0x93d6
0x000094f4      6690           nop
0x000094f6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x00009500      4154           push r12
0x00009502      55             push rbp
0x00009503      4889fd         mov rbp, rdi
0x00009506      53             push rbx
0x00009507      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x0000950a      4c3b6708       cmp r12, qword [rdi + 8]
0x0000950e      736b           jae 0x957b
0x00009510      49833c2400     cmp qword [r12], 0
0x00009515      745a           je 0x9571
0x00009517      498b5c2408     mov rbx, qword [r12 + 8]
0x0000951c      488b4540       mov rax, qword [rbp + 0x40]
0x00009520      4885db         test rbx, rbx
0x00009523      7430           je 0x9555
0x00009525      0f1f00         nop dword [rax]
0x00009528      4885c0         test rax, rax
0x0000952b      7409           je 0x9536
0x0000952d      488b3b         mov rdi, qword [rbx]
0x00009530      ffd0           call rax
0x00009532      488b4540       mov rax, qword [rbp + 0x40]
0x00009536      488b5308       mov rdx, qword [rbx + 8]
0x0000953a      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000953e      48c703000000.  mov qword [rbx], 0
0x00009545      4885d2         test rdx, rdx
0x00009548      48894b08       mov qword [rbx + 8], rcx
0x0000954c      48895d48       mov qword [rbp + 0x48], rbx
0x00009550      4889d3         mov rbx, rdx
0x00009553      75d3           jne 0x9528
0x00009555      4885c0         test rax, rax
0x00009558      7406           je 0x9560
0x0000955a      498b3c24       mov rdi, qword [r12]
0x0000955e      ffd0           call rax
0x00009560      49c704240000.  mov qword [r12], 0
0x00009568      49c744240800.  mov qword [r12 + 8], 0
0x00009571      4983c410       add r12, 0x10
0x00009575      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00009579      7795           ja 0x9510
0x0000957b      48c745180000.  mov qword [rbp + 0x18], 0
0x00009583      48c745200000.  mov qword [rbp + 0x20], 0
0x0000958b      5b             pop rbx
0x0000958c      5d             pop rbp
0x0000958d      415c           pop r12
0x0000958f      c3             ret
;-- hash_free:
0x00009590      4154           push r12
0x00009592      55             push rbp
0x00009593      4989fc         mov r12, rdi
0x00009596      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00009597      48837f4000     cmp qword [rdi + 0x40], 0
0x0000959c      488b2f         mov rbp, qword [rdi]
0x0000959f      488b4708       mov rax, qword [rdi + 8]
0x000095a3      744e           je 0x95f3                               ; ../coreutils-8.31/lib/hash.c:-305
0x000095a5      48837f2000     cmp qword [rdi + 0x20], 0
0x000095aa      7447           je 0x95f3
0x000095ac      4839c5         cmp rbp, rax
0x000095af      737b           jae 0x962c
0x000095b1      0f1f80000000.  nop dword [rax]
0x000095b8      488b7d00       mov rdi, qword [rbp]
0x000095bc      4885ff         test rdi, rdi
0x000095bf      7425           je 0x95e6
0x000095c1      4889eb         mov rbx, rbp
0x000095c4      eb0d           jmp 0x95d3
0x000095c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000095d0      488b3b         mov rdi, qword [rbx]
0x000095d3      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x000095d8      488b5b08       mov rbx, qword [rbx + 8]
0x000095dc      4885db         test rbx, rbx
0x000095df      75ef           jne 0x95d0
0x000095e1      498b442408     mov rax, qword [r12 + 8]
0x000095e6      4883c510       add rbp, 0x10
0x000095ea      4839e8         cmp rax, rbp
0x000095ed      77c9           ja 0x95b8
0x000095ef      498b2c24       mov rbp, qword [r12]
0x000095f3      4839c5         cmp rbp, rax
0x000095f6      7334           jae 0x962c
0x000095f8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x00009600      488b7d08       mov rdi, qword [rbp + 8]
0x00009604      4885ff         test rdi, rdi
0x00009607      7418           je 0x9621
0x00009609      0f1f80000000.  nop dword [rax]
0x00009610      488b5f08       mov rbx, qword [rdi + 8]
0x00009614      e81787ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x00009619      4885db         test rbx, rbx
0x0000961c      4889df         mov rdi, rbx
0x0000961f      75ef           jne 0x9610
0x00009621      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00009625      49396c2408     cmp qword [r12 + 8], rbp
0x0000962a      77d4           ja 0x9600
0x0000962c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00009631      4885ff         test rdi, rdi
0x00009634      741b           je 0x9651
0x00009636      662e0f1f8400.  nop word cs:[rax + rax]
0x00009640      488b5f08       mov rbx, qword [rdi + 8]
0x00009644      e8e786ffff     call sym..plt.got
0x00009649      4885db         test rbx, rbx
0x0000964c      4889df         mov rdi, rbx
0x0000964f      75ef           jne 0x9640
0x00009651      498b3c24       mov rdi, qword [r12]
0x00009655      e8d686ffff     call sym..plt.got
0x0000965a      5b             pop rbx
0x0000965b      4c89e7         mov rdi, r12
0x0000965e      5d             pop rbp
0x0000965f      415c           pop r12
0x00009661      e9ca86ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x00009666      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00009670      4154           push r12
0x00009672      55             push rbp
0x00009673      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00009676      53             push rbx
0x00009677      4883ec60       sub rsp, 0x60
0x0000967b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000967f      64488b042528.  mov rax, qword fs:[0x28]
0x00009688      4889442458     mov qword [rsp + 0x58], rax
0x0000968d      31c0           xor eax, eax
0x0000968f      41807c241000   cmp byte [r12 + 0x10], 0
0x00009695      7551           jne 0x96e8
0x00009697      4885f6         test rsi, rsi
0x0000969a      0f8878010000   js 0x9818
0x000096a0      660fefc0       pxor xmm0, xmm0
0x000096a4      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x000096a9      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x000096b0      0f2e05552600.  ucomiss xmm0, dword [0x0000bd0c]
0x000096b7      0f8333010000   jae 0x97f0
0x000096bd      0f2e054c2600.  ucomiss xmm0, dword [0x0000bd10]
0x000096c4      0f8276010000   jb 0x9840
0x000096ca      f30f5c053e26.  subss xmm0, dword [0x0000bd10]          ; ../coreutils-8.31/lib/hash.c:161
0x000096d2      48b800000000.  movabs rax, 0x8000000000000000
0x000096dc      f3480f2cf0     cvttss2si rsi, xmm0
0x000096e1      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x000096e4      0f1f4000       nop dword [rax]
0x000096e8      4889f7         mov rdi, rsi
0x000096eb      e8e0f3ffff     call sym.next_prime
0x000096f0      ba08000000     mov edx, 8
0x000096f5      4889c3         mov rbx, rax
0x000096f8      31c9           xor ecx, ecx
0x000096fa      4889d0         mov rax, rdx
0x000096fd      48f7e3         mul rbx
0x00009700      0f8099010000   jo 0x989f
0x00009706      4885c0         test rax, rax
0x00009709      b801000000     mov eax, 1
0x0000970e      480f48c8       cmovs rcx, rax
0x00009712      4885db         test rbx, rbx
0x00009715      0f84d5000000   je 0x97f0
0x0000971b      83e101         and ecx, 1
0x0000971e      0f85cc000000   jne 0x97f0
0x00009724      48395d10       cmp qword [rbp + 0x10], rbx
0x00009728      0f8422010000   je 0x9850
0x0000972e      be10000000     mov esi, 0x10
0x00009733      4889df         mov rdi, rbx
0x00009736      e8f583ffff     call sym.imp.calloc
0x0000973b      4885c0         test rax, rax
0x0000973e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00009742      0f84a8000000   je 0x97f0
0x00009748      48895c2410     mov qword [rsp + 0x10], rbx
0x0000974d      48c1e304       shl rbx, 4
0x00009751      4c89642428     mov qword [rsp + 0x28], r12
0x00009756      4801c3         add rbx, rax
0x00009759      488b4530       mov rax, qword [rbp + 0x30]
0x0000975d      4989e4         mov r12, rsp
0x00009760      31d2           xor edx, edx
0x00009762      4889ee         mov rsi, rbp
0x00009765      4c89e7         mov rdi, r12
0x00009768      48895c2408     mov qword [rsp + 8], rbx
0x0000976d      48c744241800.  mov qword [rsp + 0x18], 0
0x00009776      4889442430     mov qword [rsp + 0x30], rax
0x0000977b      488b4538       mov rax, qword [rbp + 0x38]
0x0000977f      48c744242000.  mov qword [rsp + 0x20], 0
0x00009788      4889442438     mov qword [rsp + 0x38], rax
0x0000978d      488b4540       mov rax, qword [rbp + 0x40]
0x00009791      4889442440     mov qword [rsp + 0x40], rax
0x00009796      488b4548       mov rax, qword [rbp + 0x48]
0x0000979a      4889442448     mov qword [rsp + 0x48], rax
0x0000979f      e8bcf5ffff     call sym.transfer_entries
0x000097a4      84c0           test al, al
0x000097a6      89c3           mov ebx, eax
0x000097a8      0f85b2000000   jne 0x9860
0x000097ae      488b442448     mov rax, qword [rsp + 0x48]
0x000097b3      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x000097b8      4c89e6         mov rsi, r12
0x000097bb      4889ef         mov rdi, rbp
0x000097be      48894548       mov qword [rbp + 0x48], rax
0x000097c2      e899f5ffff     call sym.transfer_entries
0x000097c7      84c0           test al, al
0x000097c9      0f84da000000   je 0x98a9
0x000097cf      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x000097d1      4c89e6         mov rsi, r12
0x000097d4      4889ef         mov rdi, rbp
0x000097d7      e884f5ffff     call sym.transfer_entries
0x000097dc      84c0           test al, al
0x000097de      0f84c5000000   je 0x98a9
0x000097e4      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x000097e8      e84385ffff     call sym..plt.got
0x000097ed      eb03           jmp 0x97f2
0x000097ef      90             nop
0x000097f0      31db           xor ebx, ebx
0x000097f2      488b4c2458     mov rcx, qword [rsp + 0x58]
0x000097f7      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009800      89d8           mov eax, ebx
0x00009802      0f8592000000   jne 0x989a
0x00009808      4883c460       add rsp, 0x60
0x0000980c      5b             pop rbx
0x0000980d      5d             pop rbp
0x0000980e      415c           pop r12
0x00009810      c3             ret
0x00009811      0f1f80000000.  nop dword [rax]
0x00009818      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x0000981b      660fefc0       pxor xmm0, xmm0
0x0000981f      48d1e8         shr rax, 1
0x00009822      83e601         and esi, 1
0x00009825      4809f0         or rax, rsi
0x00009828      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000982d      f30f58c0       addss xmm0, xmm0
0x00009831      e973feffff     jmp 0x96a9
0x00009836      662e0f1f8400.  nop word cs:[rax + rax]
0x00009840      f3480f2cf0     cvttss2si rsi, xmm0
0x00009845      e99efeffff     jmp 0x96e8
0x0000984a      660f1f440000   nop word [rax + rax]
0x00009850      bb01000000     mov ebx, 1
0x00009855      eb9b           jmp 0x97f2
0x00009857      660f1f840000.  nop word [rax + rax]
0x00009860      488b7d00       mov rdi, qword [rbp]
0x00009864      e8c784ffff     call sym..plt.got
0x00009869      488b0424       mov rax, qword [rsp]
0x0000986d      48894500       mov qword [rbp], rax
0x00009871      488b442408     mov rax, qword [rsp + 8]
0x00009876      48894508       mov qword [rbp + 8], rax
0x0000987a      488b442410     mov rax, qword [rsp + 0x10]
0x0000987f      48894510       mov qword [rbp + 0x10], rax
0x00009883      488b442418     mov rax, qword [rsp + 0x18]
0x00009888      48894518       mov qword [rbp + 0x18], rax
0x0000988c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00009891      48894548       mov qword [rbp + 0x48], rax
0x00009895      e958ffffff     jmp 0x97f2
0x0000989a      e8a181ffff     call sym.imp.__stack_chk_fail
0x0000989f      b901000000     mov ecx, 1
0x000098a4      e95dfeffff     jmp 0x9706
0x000098a9      e87280ffff     call sym.imp.abort
0x000098ae      6690           nop
;-- hash_insert_if_absent:
0x000098b0      4155           push r13
0x000098b2      4154           push r12
0x000098b4      55             push rbp
0x000098b5      53             push rbx
0x000098b6      4883ec18       sub rsp, 0x18
0x000098ba      64488b042528.  mov rax, qword fs:[0x28]
0x000098c3      4889442408     mov qword [rsp + 8], rax
0x000098c8      31c0           xor eax, eax
0x000098ca      4885f6         test rsi, rsi
0x000098cd      0f84ba010000   je 0x9a8d
0x000098d3      4989e4         mov r12, rsp
0x000098d6      31c9           xor ecx, ecx
0x000098d8      4989d5         mov r13, rdx
0x000098db      4c89e2         mov rdx, r12
0x000098de      4889fb         mov rbx, rdi
0x000098e1      4889f5         mov rbp, rsi
0x000098e4      e8d7f2ffff     call sym.hash_find_entry
0x000098e9      4885c0         test rax, rax
0x000098ec      4889c2         mov rdx, rax
0x000098ef      742f           je 0x9920
0x000098f1      31c0           xor eax, eax
0x000098f3      4d85ed         test r13, r13
0x000098f6      7404           je 0x98fc
0x000098f8      49895500       mov qword [r13], rdx
0x000098fc      488b4c2408     mov rcx, qword [rsp + 8]
0x00009901      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000990a      0f851f020000   jne 0x9b2f
0x00009910      4883c418       add rsp, 0x18
0x00009914      5b             pop rbx
0x00009915      5d             pop rbp
0x00009916      415c           pop r12
0x00009918      415d           pop r13
0x0000991a      c3             ret
0x0000991b      0f1f440000     nop dword [rax + rax]
0x00009920      488b4318       mov rax, qword [rbx + 0x18]
0x00009924      4885c0         test rax, rax
0x00009927      7877           js 0x99a0
0x00009929      660fefc9       pxor xmm1, xmm1
0x0000992d      488b5328       mov rdx, qword [rbx + 0x28]
0x00009931      f3480f2ac8     cvtsi2ss xmm1, rax
0x00009936      488b4310       mov rax, qword [rbx + 0x10]
0x0000993a      4885c0         test rax, rax
0x0000993d      0f8887000000   js 0x99ca
0x00009943      660fefc0       pxor xmm0, xmm0
0x00009947      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000994c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00009951      0f2ec8         ucomiss xmm1, xmm0
0x00009954      0f8796000000   ja 0x99f0
0x0000995a      4c8b2424       mov r12, qword [rsp]
0x0000995e      49833c2400     cmp qword [r12], 0
0x00009963      0f842f010000   je 0x9a98
0x00009969      488b4348       mov rax, qword [rbx + 0x48]
0x0000996d      4885c0         test rax, rax
0x00009970      0f843a010000   je 0x9ab0
0x00009976      488b5008       mov rdx, qword [rax + 8]
0x0000997a      48895348       mov qword [rbx + 0x48], rdx
0x0000997e      498b542408     mov rdx, qword [r12 + 8]
0x00009983      488928         mov qword [rax], rbp
0x00009986      48895008       mov qword [rax + 8], rdx
0x0000998a      4989442408     mov qword [r12 + 8], rax
0x0000998f      b801000000     mov eax, 1
0x00009994      4883432001     add qword [rbx + 0x20], 1
0x00009999      e95effffff     jmp 0x98fc
0x0000999e      6690           nop
0x000099a0      4889c2         mov rdx, rax
0x000099a3      660fefc9       pxor xmm1, xmm1
0x000099a7      83e001         and eax, 1
0x000099aa      48d1ea         shr rdx, 1
0x000099ad      4809c2         or rdx, rax
0x000099b0      488b4310       mov rax, qword [rbx + 0x10]
0x000099b4      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x000099b9      488b5328       mov rdx, qword [rbx + 0x28]
0x000099bd      4885c0         test rax, rax
0x000099c0      f30f58c9       addss xmm1, xmm1
0x000099c4      0f8979ffffff   jns 0x9943
0x000099ca      4889c1         mov rcx, rax
0x000099cd      660fefc0       pxor xmm0, xmm0
0x000099d1      48d1e9         shr rcx, 1
0x000099d4      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x000099d7      4809c1         or rcx, rax
0x000099da      f3480f2ac1     cvtsi2ss xmm0, rcx
0x000099df      f30f58c0       addss xmm0, xmm0
0x000099e3      e964ffffff     jmp 0x994c
0x000099e8      0f1f84000000.  nop dword [rax + rax]
0x000099f0      488d7b28       lea rdi, [rbx + 0x28]
0x000099f4      e8e7f2ffff     call sym.check_tuning.isra.0
0x000099f9      488b4310       mov rax, qword [rbx + 0x10]
0x000099fd      488b5328       mov rdx, qword [rbx + 0x28]
0x00009a01      4885c0         test rax, rax
0x00009a04      f30f105208     movss xmm2, dword [rdx + 8]
0x00009a09      0f88c1000000   js 0x9ad0
0x00009a0f      660fefc0       pxor xmm0, xmm0
0x00009a13      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009a18      488b4318       mov rax, qword [rbx + 0x18]
0x00009a1c      4885c0         test rax, rax
0x00009a1f      0f88cb000000   js 0x9af0
0x00009a25      660fefc9       pxor xmm1, xmm1
0x00009a29      f3480f2ac8     cvtsi2ss xmm1, rax
0x00009a2e      0f28da         movaps xmm3, xmm2
0x00009a31      f30f59d8       mulss xmm3, xmm0
0x00009a35      0f2ecb         ucomiss xmm1, xmm3
0x00009a38      0f861cffffff   jbe 0x995a
0x00009a3e      807a1000       cmp byte [rdx + 0x10], 0
0x00009a42      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00009a47      7504           jne 0x9a4d
0x00009a49      f30f59c2       mulss xmm0, xmm2
0x00009a4d      0f2e05b82200.  ucomiss xmm0, dword [0x0000bd0c]
0x00009a54      736d           jae 0x9ac3
0x00009a56      0f2e05b32200.  ucomiss xmm0, dword [0x0000bd10]
0x00009a5d      0f83ad000000   jae 0x9b10
0x00009a63      f3480f2cf0     cvttss2si rsi, xmm0
0x00009a68      4889df         mov rdi, rbx
0x00009a6b      e800fcffff     call sym.hash_rehash
0x00009a70      84c0           test al, al
0x00009a72      744f           je 0x9ac3
0x00009a74      31c9           xor ecx, ecx
0x00009a76      4c89e2         mov rdx, r12
0x00009a79      4889ee         mov rsi, rbp
0x00009a7c      4889df         mov rdi, rbx
0x00009a7f      e83cf1ffff     call sym.hash_find_entry
0x00009a84      4885c0         test rax, rax
0x00009a87      0f84cdfeffff   je 0x995a
0x00009a8d      e88e7effff     call sym.imp.abort
0x00009a92      660f1f440000   nop word [rax + rax]
0x00009a98      49892c24       mov qword [r12], rbp
0x00009a9c      b801000000     mov eax, 1
0x00009aa1      4883432001     add qword [rbx + 0x20], 1
0x00009aa6      4883431801     add qword [rbx + 0x18], 1
0x00009aab      e94cfeffff     jmp 0x98fc
0x00009ab0      bf10000000     mov edi, 0x10
0x00009ab5      e8e680ffff     call sym.imp.malloc
0x00009aba      4885c0         test rax, rax
0x00009abd      0f85bbfeffff   jne 0x997e
0x00009ac3      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00009ac8      e92ffeffff     jmp 0x98fc
0x00009acd      0f1f00         nop dword [rax]
0x00009ad0      4889c1         mov rcx, rax
0x00009ad3      660fefc0       pxor xmm0, xmm0
0x00009ad7      48d1e9         shr rcx, 1
0x00009ada      83e001         and eax, 1
0x00009add      4809c1         or rcx, rax
0x00009ae0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00009ae5      f30f58c0       addss xmm0, xmm0
0x00009ae9      e92affffff     jmp 0x9a18
0x00009aee      6690           nop
0x00009af0      4889c1         mov rcx, rax
0x00009af3      660fefc9       pxor xmm1, xmm1
0x00009af7      48d1e9         shr rcx, 1
0x00009afa      83e001         and eax, 1
0x00009afd      4809c1         or rcx, rax
0x00009b00      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00009b05      f30f58c9       addss xmm1, xmm1
0x00009b09      e920ffffff     jmp 0x9a2e
0x00009b0e      6690           nop
0x00009b10      f30f5c05f821.  subss xmm0, dword [0x0000bd10]
0x00009b18      48b800000000.  movabs rax, 0x8000000000000000
0x00009b22      f3480f2cf0     cvttss2si rsi, xmm0
0x00009b27      4831c6         xor rsi, rax
0x00009b2a      e939ffffff     jmp 0x9a68
0x00009b2f      e80c7fffff     call sym.imp.__stack_chk_fail
0x00009b34      6690           nop
0x00009b36      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x00009b40      53             push rbx
0x00009b41      4889f3         mov rbx, rsi
0x00009b44      4883ec10       sub rsp, 0x10
0x00009b48      4889e2         mov rdx, rsp
0x00009b4b      64488b042528.  mov rax, qword fs:[0x28]
0x00009b54      4889442408     mov qword [rsp + 8], rax
0x00009b59      31c0           xor eax, eax
0x00009b5b      e850fdffff     call sym.hash_insert_if_absent
0x00009b60      83f8ff         cmp eax, 0xffffffff
0x00009b63      742b           je 0x9b90
0x00009b65      85c0           test eax, eax
0x00009b67      7504           jne 0x9b6d
0x00009b69      488b1c24       mov rbx, qword [rsp]
0x00009b6d      488b4c2408     mov rcx, qword [rsp + 8]
0x00009b72      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009b7b      4889d8         mov rax, rbx
0x00009b7e      7514           jne 0x9b94
0x00009b80      4883c410       add rsp, 0x10
0x00009b84      5b             pop rbx
0x00009b85      c3             ret
0x00009b86      662e0f1f8400.  nop word cs:[rax + rax]
0x00009b90      31db           xor ebx, ebx
0x00009b92      ebd9           jmp 0x9b6d
0x00009b94      e8a77effff     call sym.imp.__stack_chk_fail
0x00009b99      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x00009ba0      4154           push r12
0x00009ba2      55             push rbp
0x00009ba3      b901000000     mov ecx, 1
0x00009ba8      53             push rbx
0x00009ba9      4889fb         mov rbx, rdi
0x00009bac      4883ec10       sub rsp, 0x10
0x00009bb0      4889e2         mov rdx, rsp
0x00009bb3      64488b042528.  mov rax, qword fs:[0x28]
0x00009bbc      4889442408     mov qword [rsp + 8], rax
0x00009bc1      31c0           xor eax, eax
0x00009bc3      e8f8efffff     call sym.hash_find_entry
0x00009bc8      4885c0         test rax, rax
0x00009bcb      4889c5         mov rbp, rax
0x00009bce      740f           je 0x9bdf
0x00009bd0      488b0424       mov rax, qword [rsp]
0x00009bd4      48836b2001     sub qword [rbx + 0x20], 1
0x00009bd9      48833800       cmp qword [rax], 0
0x00009bdd      7421           je 0x9c00
0x00009bdf      488b4c2408     mov rcx, qword [rsp + 8]
0x00009be4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009bed      4889e8         mov rax, rbp
0x00009bf0      0f85a8010000   jne 0x9d9e
0x00009bf6      4883c410       add rsp, 0x10
0x00009bfa      5b             pop rbx
0x00009bfb      5d             pop rbp
0x00009bfc      415c           pop r12
0x00009bfe      c3             ret
0x00009bff      90             nop
0x00009c00      488b4318       mov rax, qword [rbx + 0x18]
0x00009c04      4883e801       sub rax, 1
0x00009c08      4885c0         test rax, rax
0x00009c0b      48894318       mov qword [rbx + 0x18], rax
0x00009c0f      0f88fb000000   js 0x9d10
0x00009c15      660fefc0       pxor xmm0, xmm0
0x00009c19      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009c1e      488b4310       mov rax, qword [rbx + 0x10]
0x00009c22      488b5328       mov rdx, qword [rbx + 0x28]
0x00009c26      4885c0         test rax, rax
0x00009c29      0f88c1000000   js 0x9cf0
0x00009c2f      660fefc9       pxor xmm1, xmm1
0x00009c33      f3480f2ac8     cvtsi2ss xmm1, rax
0x00009c38      f30f590a       mulss xmm1, dword [rdx]
0x00009c3c      0f2ec8         ucomiss xmm1, xmm0
0x00009c3f      769e           jbe 0x9bdf
0x00009c41      488d7b28       lea rdi, [rbx + 0x28]
0x00009c45      e896f0ffff     call sym.check_tuning.isra.0
0x00009c4a      488b4310       mov rax, qword [rbx + 0x10]
0x00009c4e      488b5328       mov rdx, qword [rbx + 0x28]
0x00009c52      4885c0         test rax, rax
0x00009c55      0f8825010000   js 0x9d80
0x00009c5b      660fefc0       pxor xmm0, xmm0
0x00009c5f      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009c64      488b4318       mov rax, qword [rbx + 0x18]
0x00009c68      4885c0         test rax, rax
0x00009c6b      0f88ef000000   js 0x9d60
0x00009c71      660fefc9       pxor xmm1, xmm1
0x00009c75      f3480f2ac8     cvtsi2ss xmm1, rax
0x00009c7a      f30f1012       movss xmm2, dword [rdx]
0x00009c7e      f30f59d0       mulss xmm2, xmm0
0x00009c82      0f2ed1         ucomiss xmm2, xmm1
0x00009c85      0f8654ffffff   jbe 0x9bdf
0x00009c8b      807a1000       cmp byte [rdx + 0x10], 0
0x00009c8f      f30f594204     mulss xmm0, dword [rdx + 4]
0x00009c94      0f84b6000000   je 0x9d50
0x00009c9a      0f2e056f2000.  ucomiss xmm0, dword [0x0000bd10]
0x00009ca1      0f8389000000   jae 0x9d30
0x00009ca7      f3480f2cf0     cvttss2si rsi, xmm0
0x00009cac      4889df         mov rdi, rbx
0x00009caf      e8bcf9ffff     call sym.hash_rehash
0x00009cb4      84c0           test al, al
0x00009cb6      0f8523ffffff   jne 0x9bdf
0x00009cbc      488b7b48       mov rdi, qword [rbx + 0x48]
0x00009cc0      4885ff         test rdi, rdi
0x00009cc3      7414           je 0x9cd9
0x00009cc5      0f1f00         nop dword [rax]
0x00009cc8      4c8b6708       mov r12, qword [rdi + 8]
0x00009ccc      e85f80ffff     call sym..plt.got
0x00009cd1      4d85e4         test r12, r12
0x00009cd4      4c89e7         mov rdi, r12
0x00009cd7      75ef           jne 0x9cc8
0x00009cd9      48c743480000.  mov qword [rbx + 0x48], 0
0x00009ce1      e9f9feffff     jmp 0x9bdf
0x00009ce6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009cf0      4889c1         mov rcx, rax
0x00009cf3      660fefc9       pxor xmm1, xmm1
0x00009cf7      48d1e9         shr rcx, 1
0x00009cfa      83e001         and eax, 1
0x00009cfd      4809c1         or rcx, rax
0x00009d00      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00009d05      f30f58c9       addss xmm1, xmm1
0x00009d09      e92affffff     jmp 0x9c38
0x00009d0e      6690           nop
0x00009d10      4889c2         mov rdx, rax
0x00009d13      660fefc0       pxor xmm0, xmm0
0x00009d17      48d1ea         shr rdx, 1
0x00009d1a      83e001         and eax, 1
0x00009d1d      4809c2         or rdx, rax
0x00009d20      f3480f2ac2     cvtsi2ss xmm0, rdx
0x00009d25      f30f58c0       addss xmm0, xmm0
0x00009d29      e9f0feffff     jmp 0x9c1e
0x00009d2e      6690           nop
0x00009d30      f30f5c05d81f.  subss xmm0, dword [0x0000bd10]
0x00009d38      48b800000000.  movabs rax, 0x8000000000000000
0x00009d42      f3480f2cf0     cvttss2si rsi, xmm0
0x00009d47      4831c6         xor rsi, rax
0x00009d4a      e95dffffff     jmp 0x9cac
0x00009d4f      90             nop
0x00009d50      f30f594208     mulss xmm0, dword [rdx + 8]
0x00009d55      e940ffffff     jmp 0x9c9a
0x00009d5a      660f1f440000   nop word [rax + rax]
0x00009d60      4889c1         mov rcx, rax
0x00009d63      660fefc9       pxor xmm1, xmm1
0x00009d67      48d1e9         shr rcx, 1
0x00009d6a      83e001         and eax, 1
0x00009d6d      4809c1         or rcx, rax
0x00009d70      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00009d75      f30f58c9       addss xmm1, xmm1
0x00009d79      e9fcfeffff     jmp 0x9c7a
0x00009d7e      6690           nop
0x00009d80      4889c1         mov rcx, rax
0x00009d83      660fefc0       pxor xmm0, xmm0
0x00009d87      48d1e9         shr rcx, 1
0x00009d8a      83e001         and eax, 1
0x00009d8d      4809c1         or rcx, rax
0x00009d90      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00009d95      f30f58c0       addss xmm0, xmm0
0x00009d99      e9c6feffff     jmp 0x9c64
0x00009d9e      e89d7cffff     call sym.imp.__stack_chk_fail
0x00009da3      662e0f1f8400.  nop word cs:[rax + rax]
0x00009dad      0f1f00         nop dword [rax]
;-- i_ring_init:
0x00009db0      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:26
0x00009db4      48c747140000.  mov qword [rdi + 0x14], 0               ; ../coreutils-8.31/lib/i-ring.c:29
0x00009dbc      8937           mov dword [rdi], esi                    ; ../coreutils-8.31/lib/i-ring.c:32
0x00009dbe      897704         mov dword [rdi + 4], esi
0x00009dc1      897708         mov dword [rdi + 8], esi
0x00009dc4      89770c         mov dword [rdi + 0xc], esi
0x00009dc7      897710         mov dword [rdi + 0x10], esi             ; ../coreutils-8.31/lib/i-ring.c:33
0x00009dca      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:34
0x00009dcb      0f1f440000     nop dword [rax + rax]
;-- i_ring_empty:
0x00009dd0      0fb6471c       movzx eax, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:38
0x00009dd4      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:40
0x00009dd5      90             nop
0x00009dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_push:
0x00009de0      0fb6571c       movzx edx, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:44
0x00009de4      8b4f14         mov ecx, dword [rdi + 0x14]
0x00009de7      83f201         xor edx, 1
0x00009dea      0fb6d2         movzx edx, dl
0x00009ded      01d1           add ecx, edx
0x00009def      83e103         and ecx, 3
0x00009df2      89c8           mov eax, ecx
0x00009df4      4c8d0487       lea r8, [rdi + rax*4]
0x00009df8      418b00         mov eax, dword [r8]                     ; ../coreutils-8.31/lib/i-ring.c:46
0x00009dfb      418930         mov dword [r8], esi                     ; ../coreutils-8.31/lib/i-ring.c:47
0x00009dfe      8b7718         mov esi, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:49
0x00009e01      894f14         mov dword [rdi + 0x14], ecx             ; ../coreutils-8.31/lib/i-ring.c:48
0x00009e04      39ce           cmp esi, ecx                            ; ../coreutils-8.31/lib/i-ring.c:49
0x00009e06      7508           jne 0x9e10
0x00009e08      01f2           add edx, esi                            ; ../coreutils-8.31/lib/i-ring.c:50
0x00009e0a      83e203         and edx, 3
0x00009e0d      895718         mov dword [rdi + 0x18], edx
0x00009e10      c6471c00       mov byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:51
0x00009e14      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:53
0x00009e15      90             nop
0x00009e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_pop:
0x00009e20      807f1c00       cmp byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:57
0x00009e24      752f           jne 0x9e55
0x00009e26      8b4714         mov eax, dword [rdi + 0x14]             ; ../coreutils-8.31/lib/i-ring.c:61
0x00009e29      8b7710         mov esi, dword [rdi + 0x10]             ; ../coreutils-8.31/lib/i-ring.c:62
0x00009e2c      488d0c87       lea rcx, [rdi + rax*4]
0x00009e30      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/i-ring.c:61
0x00009e33      8b01           mov eax, dword [rcx]
0x00009e35      8931           mov dword [rcx], esi                    ; ../coreutils-8.31/lib/i-ring.c:62
0x00009e37      3b5718         cmp edx, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:63
0x00009e3a      7414           je 0x9e50
0x00009e3c      83c203         add edx, 3                              ; ../coreutils-8.31/lib/i-ring.c:66
0x00009e3f      83e203         and edx, 3
0x00009e42      895714         mov dword [rdi + 0x14], edx
0x00009e45      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:68
0x00009e46      662e0f1f8400.  nop word cs:[rax + rax]
0x00009e50      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:64
0x00009e54      c3             ret
0x00009e55      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/i-ring.c:57
0x00009e59      e8c27affff     call sym.imp.abort                      ; ../coreutils-8.31/lib/i-ring.c:60
0x00009e5e      6690           nop
;-- locale_charset:
0x00009e60      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00009e64      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00009e69      e8527dffff     call sym.imp.nl_langinfo
0x00009e6e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00009e71      741d           je 0x9e90
0x00009e73      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00009e76      488d15a31e00.  lea rdx, [0x0000bd20]                   ; "ASCII"
0x00009e7d      480f44c2       cmove rax, rdx
0x00009e81      4883c408       add rsp, 8
0x00009e85      c3             ret
0x00009e86      662e0f1f8400.  nop word cs:[rax + rax]
0x00009e90      488d05891e00.  lea rax, [0x0000bd20]                   ; "ASCII"
0x00009e97      4883c408       add rsp, 8
0x00009e9b      c3             ret
0x00009e9c      0f1f4000       nop dword [rax]
;-- openat_safer:
0x00009ea0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x00009ea4      48894c2438     mov qword [rsp + 0x38], rcx
0x00009ea9      31c9           xor ecx, ecx
0x00009eab      64488b042528.  mov rax, qword fs:[0x28]
0x00009eb4      4889442418     mov qword [rsp + 0x18], rax
0x00009eb9      31c0           xor eax, eax
0x00009ebb      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x00009ebe      7528           jne 0x9ee8
0x00009ec0      31c0           xor eax, eax
0x00009ec2      e8697bffff     call sym.imp.openat                     ; fcntl2.h:-83
0x00009ec7      89c7           mov edi, eax
0x00009ec9      e8c2000000     call sym.fd_safer                       ; fcntl2.h:-82
0x00009ece      488b742418     mov rsi, qword [rsp + 0x18]
0x00009ed3      644833342528.  xor rsi, qword fs:[0x28]
0x00009edc      752b           jne 0x9f09
0x00009ede      4883c458       add rsp, 0x58
0x00009ee2      c3             ret
0x00009ee3      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x00009ee8      488d442460     lea rax, [rsp + 0x60]
0x00009eed      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x2240 rip
0x00009ef4      8b4c2438       mov ecx, dword [rsp + 0x38]
0x00009ef8      4889442408     mov qword [rsp + 8], rax
0x00009efd      488d442420     lea rax, [rsp + 0x20]
0x00009f02      4889442410     mov qword [rsp + 0x10], rax
0x00009f07      ebb7           jmp 0x9ec0
0x00009f09      e8327bffff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x00009f0e      6690           nop
;-- opendirat:
0x00009f10      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x00009f12      4154           push r12
0x00009f14      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x00009f1a      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x00009f1b      53             push rbx
0x00009f1c      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x00009f1e      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x00009f21      4883ec08       sub rsp, 8
0x00009f25      e876ffffff     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x00009f2a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x00009f2c      7852           js 0x9f80
0x00009f2e      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x00009f30      89c3           mov ebx, eax
0x00009f32      e8497dffff     call sym.imp.fdopendir
0x00009f37      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x00009f3a      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x00009f3d      7419           je 0x9f58                               ; ../coreutils-8.31/lib/opendirat.c:45
0x00009f3f      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x00009f43      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x00009f47      4889e8         mov rax, rbp
0x00009f4a      5b             pop rbx
0x00009f4b      5d             pop rbp
0x00009f4c      415c           pop r12
0x00009f4e      415d           pop r13
0x00009f50      c3             ret
0x00009f51      0f1f80000000.  nop dword [rax]
0x00009f58      e8d379ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x00009f5d      448b28         mov r13d, dword [rax]
0x00009f60      4989c4         mov r12, rax
0x00009f63      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x00009f65      e8767bffff     call sym.imp.close
0x00009f6a      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x00009f6d      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x00009f71      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x00009f75      5b             pop rbx
0x00009f76      5d             pop rbp
0x00009f77      415c           pop r12
0x00009f79      415d           pop r13
0x00009f7b      c3             ret
0x00009f7c      0f1f4000       nop dword [rax]
0x00009f80      4883c408       add rsp, 8
0x00009f84      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x00009f86      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x00009f87      4889e8         mov rax, rbp
0x00009f8a      5d             pop rbp
0x00009f8b      415c           pop r12
0x00009f8d      415d           pop r13
0x00009f8f      c3             ret
;-- fd_safer:
0x00009f90      4155           push r13
0x00009f92      4154           push r12
0x00009f94      55             push rbp
0x00009f95      53             push rbx
0x00009f96      89fb           mov ebx, edi
0x00009f98      4883ec08       sub rsp, 8
0x00009f9c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x00009f9f      7721           ja 0x9fc2
0x00009fa1      e8ca030000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x00009fa6      4189c4         mov r12d, eax
0x00009fa9      e88279ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x00009fae      448b28         mov r13d, dword [rax]
0x00009fb1      4889c5         mov rbp, rax
0x00009fb4      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x00009fb6      e8257bffff     call sym.imp.close
0x00009fbb      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x00009fbe      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x00009fc2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x00009fc6      89d8           mov eax, ebx
0x00009fc8      5b             pop rbx
0x00009fc9      5d             pop rbp
0x00009fca      415c           pop r12
0x00009fcc      415d           pop r13
0x00009fce      c3             ret
0x00009fcf      90             nop
;-- rpl_fclose:
0x00009fd0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00009fd2      55             push rbp
0x00009fd3      53             push rbx
0x00009fd4      4889fb         mov rbx, rdi
0x00009fd7      e8947bffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00009fdc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00009fde      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00009fe1      7854           js 0xa037                               ; ../coreutils-8.31/lib/fclose.c:66
0x00009fe3      e8f87bffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00009fe8      85c0           test eax, eax
0x00009fea      752c           jne 0xa018
0x00009fec      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00009fef      e8dc020000     call sym.rpl_fflush
0x00009ff4      85c0           test eax, eax
0x00009ff6      743c           je 0xa034
0x00009ff8      e83379ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00009ffd      448b20         mov r12d, dword [rax]
0x0000a000      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a003      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000a006      e8a579ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000a00b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000a00e      7530           jne 0xa040
0x0000a010      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a011      5d             pop rbp
0x0000a012      415c           pop r12
0x0000a014      c3             ret
0x0000a015      0f1f00         nop dword [rax]
0x0000a018      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000a01b      e8507bffff     call sym.imp.fileno
0x0000a020      31f6           xor esi, esi
0x0000a022      ba01000000     mov edx, 1
0x0000a027      89c7           mov edi, eax
0x0000a029      e8827affff     call sym.imp.lseek
0x0000a02e      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a032      75b8           jne 0x9fec
0x0000a034      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a037      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a038      5d             pop rbp
0x0000a039      415c           pop r12
0x0000a03b      e97079ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000a040      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000a044      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000a049      ebc5           jmp 0xa010
0x0000a04b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x0000a050      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a052      55             push rbp
0x0000a053      89fd           mov ebp, edi
0x0000a055      53             push rbx
0x0000a056      4883ec50       sub rsp, 0x50
0x0000a05a      64488b042528.  mov rax, qword fs:[0x28]
0x0000a063      4889442418     mov qword [rsp + 0x18], rax
0x0000a068      31c0           xor eax, eax
0x0000a06a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000a06f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x0000a071      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a076      48894c2438     mov qword [rsp + 0x38], rcx
0x0000a07b      4c89442440     mov qword [rsp + 0x40], r8
0x0000a080      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x0000a085      488d442420     lea rax, [rsp + 0x20]
0x0000a08a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a08f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x0000a096      4889442410     mov qword [rsp + 0x10], rax
0x0000a09b      0f8401020000   je 0xa2a2                               ; ../coreutils-8.31/lib/fcntl.c:210
0x0000a0a1      81fe06040000   cmp esi, 0x406
0x0000a0a7      7547           jne 0xa0f0
0x0000a0a9      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000a0ae      833d83412000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20e238:4]=0
0x0000a0b5      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2240 rip
0x0000a0bc      448b6010       mov r12d, dword [rax + 0x10]
0x0000a0c0      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a0c3      0f882a010000   js 0xa1f3                               ; ../coreutils-8.31/lib/fcntl.c:507
0x0000a0c9      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a0cb      be06040000     mov esi, 0x406
0x0000a0d0      e8bb78ffff     call sym.imp.fcntl
0x0000a0d5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x0000a0d7      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a0d9      0f8889010000   js 0xa268                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000a0df      c7054f412000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20e238:4]=0
0x0000a0e9      eb45           jmp 0xa130
0x0000a0eb      0f1f440000     nop dword [rax + rax]
0x0000a0f0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x0000a0f3      742b           je 0xa120
0x0000a0f5      7f59           jg 0xa150
0x0000a0f7      83fe04         cmp esi, 4
0x0000a0fa      0f84d0000000   je 0xa1d0
0x0000a100      0f8fba000000   jg 0xa1c0
0x0000a106      83fe02         cmp esi, 2
0x0000a109      0f84c1000000   je 0xa1d0
0x0000a10f      7f0f           jg 0xa120
0x0000a111      83fe01         cmp esi, 1
0x0000a114      7562           jne 0xa178
0x0000a116      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a120      89ef           mov edi, ebp
0x0000a122      31c0           xor eax, eax
0x0000a124      e86778ffff     call sym.imp.fcntl
0x0000a129      89c3           mov ebx, eax
0x0000a12b      0f1f440000     nop dword [rax + rax]
0x0000a130      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000a135      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a13e      89d8           mov eax, ebx
0x0000a140      0f8557010000   jne 0xa29d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x0000a146      4883c450       add rsp, 0x50
0x0000a14a      5b             pop rbx
0x0000a14b      5d             pop rbp
0x0000a14c      415c           pop r12
0x0000a14e      c3             ret
0x0000a14f      90             nop
0x0000a150      81fe07040000   cmp esi, 0x407
0x0000a156      7f48           jg 0xa1a0
0x0000a158      81fe06040000   cmp esi, 0x406
0x0000a15e      7d70           jge 0xa1d0
0x0000a160      81fe01040000   cmp esi, 0x401
0x0000a166      74b8           je 0xa120
0x0000a168      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000a16e      7460           je 0xa1d0
0x0000a170      81fe00040000   cmp esi, 0x400
0x0000a176      7458           je 0xa1d0
0x0000a178      8b0424         mov eax, dword [rsp]
0x0000a17b      83f82f         cmp eax, 0x2f
0x0000a17e      0f8736010000   ja 0xa2ba
0x0000a184      4803442410     add rax, qword [rsp + 0x10]
0x0000a189      488b10         mov rdx, qword [rax]
0x0000a18c      89ef           mov edi, ebp
0x0000a18e      31c0           xor eax, eax
0x0000a190      e8fb77ffff     call sym.imp.fcntl
0x0000a195      89c3           mov ebx, eax
0x0000a197      eb97           jmp 0xa130
0x0000a199      0f1f80000000.  nop dword [rax]
0x0000a1a0      81fe09040000   cmp esi, 0x409
0x0000a1a6      7428           je 0xa1d0
0x0000a1a8      0f8c72ffffff   jl 0xa120
0x0000a1ae      81fe0a040000   cmp esi, 0x40a
0x0000a1b4      75c2           jne 0xa178
0x0000a1b6      e965ffffff     jmp 0xa120                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000a1bb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x0000a1c0      83fe09         cmp esi, 9
0x0000a1c3      0f8457ffffff   je 0xa120
0x0000a1c9      7f05           jg 0xa1d0
0x0000a1cb      83fe08         cmp esi, 8
0x0000a1ce      75a8           jne 0xa178
0x0000a1d0      8b0424         mov eax, dword [rsp]
0x0000a1d3      83f82f         cmp eax, 0x2f
0x0000a1d6      0f87e8000000   ja 0xa2c4
0x0000a1dc      4803442410     add rax, qword [rsp + 0x10]
0x0000a1e1      8b10           mov edx, dword [rax]
0x0000a1e3      89ef           mov edi, ebp
0x0000a1e5      31c0           xor eax, eax
0x0000a1e7      e8a477ffff     call sym.imp.fcntl
0x0000a1ec      89c3           mov ebx, eax
0x0000a1ee      e93dffffff     jmp 0xa130
0x0000a1f3      31f6           xor esi, esi
0x0000a1f5      31c0           xor eax, eax
0x0000a1f7      e89477ffff     call sym.imp.fcntl
0x0000a1fc      85c0           test eax, eax
0x0000a1fe      89c3           mov ebx, eax
0x0000a200      0f882affffff   js 0xa130
0x0000a206      833d2b402000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e238:4]=0
0x0000a20d      0f851dffffff   jne 0xa130
0x0000a213      31c0           xor eax, eax
0x0000a215      be01000000     mov esi, 1
0x0000a21a      89df           mov edi, ebx
0x0000a21c      e86f77ffff     call sym.imp.fcntl
0x0000a221      85c0           test eax, eax
0x0000a223      781c           js 0xa241
0x0000a225      83c801         or eax, 1
0x0000a228      be02000000     mov esi, 2
0x0000a22d      89df           mov edi, ebx
0x0000a22f      89c2           mov edx, eax
0x0000a231      31c0           xor eax, eax
0x0000a233      e85877ffff     call sym.imp.fcntl
0x0000a238      83f8ff         cmp eax, 0xffffffff
0x0000a23b      0f85effeffff   jne 0xa130
0x0000a241      e8ea76ffff     call sym.imp.__errno_location
0x0000a246      448b20         mov r12d, dword [rax]
0x0000a249      4889c5         mov rbp, rax
0x0000a24c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000a24e      e88d78ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x0000a253      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000a258      44896500       mov dword [rbp], r12d
0x0000a25c      e9cffeffff     jmp 0xa130
0x0000a261      0f1f80000000.  nop dword [rax]
0x0000a268      e8c376ffff     call sym.imp.__errno_location
0x0000a26d      833816         cmp dword [rax], 0x16
0x0000a270      0f8569feffff   jne 0xa0df
0x0000a276      31f6           xor esi, esi
0x0000a278      31c0           xor eax, eax
0x0000a27a      4489e2         mov edx, r12d
0x0000a27d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000a27f      e80c77ffff     call sym.imp.fcntl
0x0000a284      85c0           test eax, eax
0x0000a286      89c3           mov ebx, eax
0x0000a288      0f88a2feffff   js 0xa130
0x0000a28e      c705a03f2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e238:4]=0
0x0000a298      e976ffffff     jmp 0xa213
0x0000a29d      e89e77ffff     call sym.imp.__stack_chk_fail
0x0000a2a2      488b442410     mov rax, qword [rsp + 0x10]
0x0000a2a7      31f6           xor esi, esi
0x0000a2a9      8b5010         mov edx, dword [rax + 0x10]
0x0000a2ac      31c0           xor eax, eax
0x0000a2ae      e8dd76ffff     call sym.imp.fcntl
0x0000a2b3      89c3           mov ebx, eax
0x0000a2b5      e976feffff     jmp 0xa130
0x0000a2ba      488b442408     mov rax, qword [rsp + 8]
0x0000a2bf      e9c5feffff     jmp 0xa189
0x0000a2c4      488b442408     mov rax, qword [rsp + 8]
0x0000a2c9      e913ffffff     jmp 0xa1e1
0x0000a2ce      6690           nop
;-- rpl_fflush:
0x0000a2d0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x0000a2d3      53             push rbx
0x0000a2d4      4889fb         mov rbx, rdi
0x0000a2d7      7411           je 0xa2ea                               ; ../coreutils-8.31/lib/fflush.c:150
0x0000a2d9      e80279ffff     call sym.imp.__freading
0x0000a2de      85c0           test eax, eax
0x0000a2e0      7408           je 0xa2ea
0x0000a2e2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x0000a2e8      750e           jne 0xa2f8
0x0000a2ea      4889df         mov rdi, rbx
0x0000a2ed      5b             pop rbx
0x0000a2ee      e9bd78ffff     jmp sym.imp.fflush
0x0000a2f3      0f1f440000     nop dword [rax + rax]
0x0000a2f8      4889df         mov rdi, rbx
0x0000a2fb      ba01000000     mov edx, 1
0x0000a300      31f6           xor esi, esi
0x0000a302      e809000000     call sym.rpl_fseeko
0x0000a307      4889df         mov rdi, rbx
0x0000a30a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000a30b      e9a078ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x0000a310      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x0000a314      48394710       cmp qword [rdi + 0x10], rax
0x0000a318      7406           je 0xa320                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000a31a      e94179ffff     jmp sym.imp.fseeko
0x0000a31f      90             nop
0x0000a320      488b4720       mov rax, qword [rdi + 0x20]
0x0000a324      48394728       cmp qword [rdi + 0x28], rax
0x0000a328      75f0           jne 0xa31a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000a32a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000a32f      75e9           jne 0xa31a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x0000a331      4154           push r12
0x0000a333      55             push rbp
0x0000a334      4189d4         mov r12d, edx
0x0000a337      53             push rbx
0x0000a338      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000a33b      4889fb         mov rbx, rdi
0x0000a33e      e82d78ffff     call sym.imp.fileno
0x0000a343      4489e2         mov edx, r12d
0x0000a346      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x0000a349      89c7           mov edi, eax
0x0000a34b      e86077ffff     call sym.imp.lseek
0x0000a350      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a354      740c           je 0xa362
0x0000a356      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x0000a359      488983900000.  mov qword [rbx + 0x90], rax
0x0000a360      31c0           xor eax, eax
0x0000a362      5b             pop rbx
0x0000a363      5d             pop rbp
0x0000a364      415c           pop r12
0x0000a366      c3             ret
0x0000a367      660f1f840000.  nop word [rax + rax]
;-- dup_safer:
0x0000a370      ba03000000     mov edx, 3                              ; /istd.h:32
0x0000a375      31f6           xor esi, esi
0x0000a377      31c0           xor eax, eax
0x0000a379      e9d2fcffff     jmp sym.rpl_fcntl
0x0000a37e      6690           nop
;-- __libc_csu_init:
0x0000a380      4157           push r15
0x0000a382      4156           push r14
0x0000a384      4989d7         mov r15, rdx
0x0000a387      4155           push r13
0x0000a389      4154           push r12
0x0000a38b      4c8d251e3620.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20d9b0 ; "@#"
0x0000a392      55             push rbp
0x0000a393      488d2d1e3620.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20d9b8
0x0000a39a      53             push rbx
0x0000a39b      4189fd         mov r13d, edi
0x0000a39e      4989f6         mov r14, rsi
0x0000a3a1      4c29e5         sub rbp, r12
0x0000a3a4      4883ec08       sub rsp, 8
0x0000a3a8      48c1fd03       sar rbp, 3
0x0000a3ac      e83775ffff     call sym._init
0x0000a3b1      4885ed         test rbp, rbp
0x0000a3b4      7420           je 0xa3d6
0x0000a3b6      31db           xor ebx, ebx
0x0000a3b8      0f1f84000000.  nop dword [rax + rax]
0x0000a3c0      4c89fa         mov rdx, r15
0x0000a3c3      4c89f6         mov rsi, r14
0x0000a3c6      4489ef         mov edi, r13d
0x0000a3c9      41ff14dc       call qword [r12 + rbx*8]
0x0000a3cd      4883c301       add rbx, 1
0x0000a3d1      4839dd         cmp rbp, rbx
0x0000a3d4      75ea           jne 0xa3c0
0x0000a3d6      4883c408       add rsp, 8
0x0000a3da      5b             pop rbx
0x0000a3db      5d             pop rbp
0x0000a3dc      415c           pop r12
0x0000a3de      415d           pop r13
0x0000a3e0      415e           pop r14
0x0000a3e2      415f           pop r15
0x0000a3e4      c3             ret
0x0000a3e5      90             nop
0x0000a3e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000a3f0      f3c3           ret
0x0000a3f2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a3fc      0f1f4000       nop dword [rax]
;-- atexit:
0x0000a400      488b15013c20.  mov rdx, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x0000a407      31f6           xor esi, esi
0x0000a409      e9a278ffff     jmp sym.imp.__cxa_atexit
0x0000a40e      0000           add byte [rax], al
