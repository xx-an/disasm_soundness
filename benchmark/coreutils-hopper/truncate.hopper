
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/truncate
        UUID: 61A9264B-83B9-17DE-9647-B9011EEE7DBD
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x7830[ (30768 bytes)
        ; File offset : [0; 30768[ (30768 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xc0 ; '.'
0000000000000019         db  0x20 ; ' '
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x98 ; '.'
0000000000000029         db  0x80 ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x30 ; '0'
00000000000000d1         db  0x78 ; 'x'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x30 ; '0'
00000000000000d9         db  0x78 ; 'x'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x10 ; '.'
00000000000000f1         db  0x7b ; '{'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x10 ; '.'
00000000000000f9         db  0x7b ; '{'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x10 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x7b ; '{'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x28 ; '('
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x58 ; 'X'
0000000000000129         db  0x7c ; '|'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x58 ; 'X'
0000000000000131         db  0x7c ; '|'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x58 ; 'X'
0000000000000139         db  0x7c ; '|'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x7c ; '|'
0000000000000199         db  0x6a ; 'j'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x7c ; '|'
00000000000001a1         db  0x6a ; 'j'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x7c ; '|'
00000000000001a9         db  0x6a ; 'j'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x54 ; 'T'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'                                         ; DATA XREF=main+1063
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x54 ; 'T'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=main+1652
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x10 ; '.'
0000000000000209         db  0x7b ; '{'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x10 ; '.'
0000000000000211         db  0x7b ; '{'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x10 ; '.'
0000000000000219         db  0x7b ; '{'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xf0 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xf0 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x61 ; 'a'
0000000000000285         db  0xa9 ; '.'
0000000000000286         db  0x26 ; '&'
0000000000000287         db  0x4b ; 'K'
0000000000000288         db  0x83 ; '.'
0000000000000289         db  0xb9 ; '.'
000000000000028a         db  0x17 ; '.'
000000000000028b         db  0xde ; '.'
000000000000028c         db  0x96 ; '.'
000000000000028d         db  0x47 ; 'G'
000000000000028e         db  0xb9 ; '.'
000000000000028f         db  0x01 ; '.'
0000000000000290         db  0x1e ; '.'
0000000000000291         db  0xee ; '.'
0000000000000292         db  0x7d ; '}'
0000000000000293         db  0xbd ; '.'
0000000000000294         db  0xee ; '.'
0000000000000295         db  0xcf ; '.'
0000000000000296         db  0xd2 ; '.'
0000000000000297         db  0x2d ; '-'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x35 ; '5'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x35 ; '5'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x36 ; '6'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3b ; ';'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x898[ (1464 bytes)
        ; File offset : [736; 2200[ (1464 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x1d ; '.'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x84 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xe2 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x31 ; '1'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x81 ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x8a ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x9a ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xea ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x23 ; '#'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x1c ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xe6 ; '.'                                         ; DATA XREF=xstrtoimax+363
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoimax+397, xstrtoimax+1614
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xb6 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xd4 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x62 ; 'b'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x77 ; 'w'
0000000000000461         db  0x01 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x29 ; ')'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xaa ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x4a ; 'J'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x39 ; '9'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x0f ; '.'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xa8 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xdb ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x1d ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xf5 ; '.'
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xf3 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x0e ; '.'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xcd ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x9d ; '.'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x20 ; ' '
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x15 ; '.'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x8c ; '.'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xde ; '.'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x35 ; '5'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x0b ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x44 ; 'D'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x83 ; '.'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x65 ; 'e'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x7c ; '|'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x1f ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x12 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x5c ; '\'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0xa5 ; '.'
00000000000006d1         db  0x01 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x07 ; '.'
00000000000006e9         db  0x02 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x3d ; '='
0000000000000701         db  0x02 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x8b ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x93 ; '.'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xfa ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0xac ; '.'
0000000000000761         db  0x02 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x20 ; ' '
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x3c ; '<'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x73 ; 's'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xcf ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x22 ; '"'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x50 ; 'P'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x08 ; '.'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x11 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x19 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x88 ; '.'
00000000000007e1         db  0x80 ; '.'
00000000000007e2         db  0x20 ; ' '
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x08 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x22 ; '"'
00000000000007f1         db  0x02 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x11 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x80 ; '.'
00000000000007f9         db  0x80 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'                                         ; DATA XREF=main+1019
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x90 ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x21 ; '!'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0xa0 ; '.'
0000000000000811         db  0x80 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x2d ; '-'
0000000000000821         db  0x02 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xa0 ; '.'
0000000000000829         db  0x80 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0xb1 ; '.'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x21 ; '!'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x80 ; '.'
0000000000000841         db  0x80 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x70 ; 'p'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xc0 ; '.'
0000000000000859         db  0x80 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x43 ; 'C'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x11 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x90 ; '.'
0000000000000871         db  0x80 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x04 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x5e ; '^'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x98 ; '.'
0000000000000889         db  0x80 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x898; 0xb5e[ (710 bytes)
        ; File offset : [2200; 2910[ (710 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000898         db  0x00 ; '.'
0000000000000899         db  0x6c ; 'l'
000000000000089a         db  0x69 ; 'i'
000000000000089b         db  0x62 ; 'b'
000000000000089c         db  0x63 ; 'c'
000000000000089d         db  0x2e ; '.'
000000000000089e         db  0x73 ; 's'
000000000000089f         db  0x6f ; 'o'
00000000000008a0         db  0x2e ; '.'
00000000000008a1         db  0x36 ; '6'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x66 ; 'f'
00000000000008a4         db  0x66 ; 'f'
00000000000008a5         db  0x6c ; 'l'
00000000000008a6         db  0x75 ; 'u'
00000000000008a7         db  0x73 ; 's'
00000000000008a8         db  0x68 ; 'h'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x5f ; '_'
00000000000008ab         db  0x5f ; '_'
00000000000008ac         db  0x70 ; 'p'
00000000000008ad         db  0x72 ; 'r'
00000000000008ae         db  0x69 ; 'i'
00000000000008af         db  0x6e ; 'n'
00000000000008b0         db  0x74 ; 't'
00000000000008b1         db  0x66 ; 'f'
00000000000008b2         db  0x5f ; '_'
00000000000008b3         db  0x63 ; 'c'
00000000000008b4         db  0x68 ; 'h'
00000000000008b5         db  0x6b ; 'k'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x73 ; 's'
00000000000008b8         db  0x65 ; 'e'
00000000000008b9         db  0x74 ; 't'
00000000000008ba         db  0x6c ; 'l'
00000000000008bb         db  0x6f ; 'o'
00000000000008bc         db  0x63 ; 'c'
00000000000008bd         db  0x61 ; 'a'
00000000000008be         db  0x6c ; 'l'
00000000000008bf         db  0x65 ; 'e'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x6d ; 'm'
00000000000008c2         db  0x62 ; 'b'
00000000000008c3         db  0x72 ; 'r'
00000000000008c4         db  0x74 ; 't'
00000000000008c5         db  0x6f ; 'o'
00000000000008c6         db  0x77 ; 'w'
00000000000008c7         db  0x63 ; 'c'
00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x73 ; 's'
00000000000008ca         db  0x74 ; 't'
00000000000008cb         db  0x72 ; 'r'
00000000000008cc         db  0x6e ; 'n'
00000000000008cd         db  0x63 ; 'c'
00000000000008ce         db  0x6d ; 'm'
00000000000008cf         db  0x70 ; 'p'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x66 ; 'f'
00000000000008d2         db  0x74 ; 't'
00000000000008d3         db  0x72 ; 'r'
00000000000008d4         db  0x75 ; 'u'
00000000000008d5         db  0x6e ; 'n'
00000000000008d6         db  0x63 ; 'c'
00000000000008d7         db  0x61 ; 'a'
00000000000008d8         db  0x74 ; 't'
00000000000008d9         db  0x65 ; 'e'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x6f ; 'o'
00000000000008dc         db  0x70 ; 'p'
00000000000008dd         db  0x74 ; 't'
00000000000008de         db  0x69 ; 'i'
00000000000008df         db  0x6e ; 'n'
00000000000008e0         db  0x64 ; 'd'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x73 ; 's'
00000000000008e3         db  0x74 ; 't'
00000000000008e4         db  0x72 ; 'r'
00000000000008e5         db  0x72 ; 'r'
00000000000008e6         db  0x63 ; 'c'
00000000000008e7         db  0x68 ; 'h'
00000000000008e8         db  0x72 ; 'r'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x64 ; 'd'
00000000000008eb         db  0x63 ; 'c'
00000000000008ec         db  0x67 ; 'g'
00000000000008ed         db  0x65 ; 'e'
00000000000008ee         db  0x74 ; 't'
00000000000008ef         db  0x74 ; 't'
00000000000008f0         db  0x65 ; 'e'
00000000000008f1         db  0x78 ; 'x'
00000000000008f2         db  0x74 ; 't'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x65 ; 'e'
00000000000008f5         db  0x72 ; 'r'
00000000000008f6         db  0x72 ; 'r'
00000000000008f7         db  0x6f ; 'o'
00000000000008f8         db  0x72 ; 'r'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x5f ; '_'
00000000000008fb         db  0x5f ; '_'
00000000000008fc         db  0x73 ; 's'
00000000000008fd         db  0x74 ; 't'
00000000000008fe         db  0x61 ; 'a'
00000000000008ff         db  0x63 ; 'c'
                     aKchkfail:
0000000000000900         db         "k_chk_fail", 0
000000000000090b         db  0x69 ; 'i'
000000000000090c         db  0x73 ; 's'
000000000000090d         db  0x77 ; 'w'
000000000000090e         db  0x70 ; 'p'
000000000000090f         db  0x72 ; 'r'
0000000000000910         db  0x69 ; 'i'
0000000000000911         db  0x6e ; 'n'
0000000000000912         db  0x74 ; 't'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x72 ; 'r'
0000000000000915         db  0x65 ; 'e'
0000000000000916         db  0x61 ; 'a'
0000000000000917         db  0x6c ; 'l'
0000000000000918         db  0x6c ; 'l'
0000000000000919         db  0x6f ; 'o'
000000000000091a         db  0x63 ; 'c'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x61 ; 'a'
000000000000091d         db  0x62 ; 'b'
000000000000091e         db  0x6f ; 'o'
000000000000091f         db  0x72 ; 'r'
0000000000000920         db  0x74 ; 't'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x5f ; '_'
0000000000000923         db  0x65 ; 'e'
0000000000000924         db  0x78 ; 'x'
0000000000000925         db  0x69 ; 'i'
0000000000000926         db  0x74 ; 't'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x70 ; 'p'
0000000000000929         db  0x72 ; 'r'
000000000000092a         db  0x6f ; 'o'
000000000000092b         db  0x67 ; 'g'
000000000000092c         db  0x72 ; 'r'
000000000000092d         db  0x61 ; 'a'
000000000000092e         db  0x6d ; 'm'
000000000000092f         db  0x5f ; '_'
0000000000000930         db  0x69 ; 'i'
0000000000000931         db  0x6e ; 'n'
0000000000000932         db  0x76 ; 'v'
0000000000000933         db  0x6f ; 'o'
0000000000000934         db  0x63 ; 'c'
0000000000000935         db  0x61 ; 'a'
0000000000000936         db  0x74 ; 't'
0000000000000937         db  0x69 ; 'i'
0000000000000938         db  0x6f ; 'o'
0000000000000939         db  0x6e ; 'n'
000000000000093a         db  0x5f ; '_'
000000000000093b         db  0x6e ; 'n'
000000000000093c         db  0x61 ; 'a'
000000000000093d         db  0x6d ; 'm'
000000000000093e         db  0x65 ; 'e'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x5f ; '_'
0000000000000941         db  0x5f ; '_'
0000000000000942         db  0x61 ; 'a'
0000000000000943         db  0x73 ; 's'
0000000000000944         db  0x73 ; 's'
0000000000000945         db  0x65 ; 'e'
0000000000000946         db  0x72 ; 'r'
0000000000000947         db  0x74 ; 't'
0000000000000948         db  0x5f ; '_'
0000000000000949         db  0x66 ; 'f'
000000000000094a         db  0x61 ; 'a'
000000000000094b         db  0x69 ; 'i'
000000000000094c         db  0x6c ; 'l'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x5f ; '_'
000000000000094f         db  0x5f ; '_'
0000000000000950         db  0x63 ; 'c'
0000000000000951         db  0x74 ; 't'
0000000000000952         db  0x79 ; 'y'
0000000000000953         db  0x70 ; 'p'
0000000000000954         db  0x65 ; 'e'
0000000000000955         db  0x5f ; '_'
0000000000000956         db  0x67 ; 'g'
0000000000000957         db  0x65 ; 'e'
0000000000000958         db  0x74 ; 't'
0000000000000959         db  0x5f ; '_'
000000000000095a         db  0x6d ; 'm'
000000000000095b         db  0x62 ; 'b'
000000000000095c         db  0x5f ; '_'
000000000000095d         db  0x63 ; 'c'
000000000000095e         db  0x75 ; 'u'
000000000000095f         db  0x72 ; 'r'
0000000000000960         db  0x5f ; '_'
0000000000000961         db  0x6d ; 'm'
0000000000000962         db  0x61 ; 'a'
0000000000000963         db  0x78 ; 'x'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x63 ; 'c'
0000000000000966         db  0x61 ; 'a'
0000000000000967         db  0x6c ; 'l'
0000000000000968         db  0x6c ; 'l'
0000000000000969         db  0x6f ; 'o'
000000000000096a         db  0x63 ; 'c'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x73 ; 's'
000000000000096d         db  0x74 ; 't'
000000000000096e         db  0x72 ; 'r'
000000000000096f         db  0x6c ; 'l'
0000000000000970         db  0x65 ; 'e'
0000000000000971         db  0x6e ; 'n'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x6d ; 'm'
0000000000000974         db  0x65 ; 'e'
0000000000000975         db  0x6d ; 'm'
0000000000000976         db  0x73 ; 's'
0000000000000977         db  0x65 ; 'e'
0000000000000978         db  0x74 ; 't'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x5f ; '_'
000000000000097b         db  0x5f ; '_'
000000000000097c         db  0x65 ; 'e'
000000000000097d         db  0x72 ; 'r'
000000000000097e         db  0x72 ; 'r'
000000000000097f         db  0x6e ; 'n'
0000000000000980         db  0x6f ; 'o'
0000000000000981         db  0x5f ; '_'
0000000000000982         db  0x6c ; 'l'
0000000000000983         db  0x6f ; 'o'
0000000000000984         db  0x63 ; 'c'
0000000000000985         db  0x61 ; 'a'
0000000000000986         db  0x74 ; 't'
0000000000000987         db  0x69 ; 'i'
0000000000000988         db  0x6f ; 'o'
0000000000000989         db  0x6e ; 'n'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x6d ; 'm'
000000000000098c         db  0x65 ; 'e'
000000000000098d         db  0x6d ; 'm'
000000000000098e         db  0x63 ; 'c'
000000000000098f         db  0x6d ; 'm'
0000000000000990         db  0x70 ; 'p'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x5f ; '_'
0000000000000993         db  0x5f ; '_'
0000000000000994         db  0x66 ; 'f'
0000000000000995         db  0x70 ; 'p'
0000000000000996         db  0x72 ; 'r'
0000000000000997         db  0x69 ; 'i'
0000000000000998         db  0x6e ; 'n'
0000000000000999         db  0x74 ; 't'
000000000000099a         db  0x66 ; 'f'
000000000000099b         db  0x5f ; '_'
000000000000099c         db  0x63 ; 'c'
000000000000099d         db  0x68 ; 'h'
000000000000099e         db  0x6b ; 'k'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x73 ; 's'
00000000000009a1         db  0x74 ; 't'
00000000000009a2         db  0x64 ; 'd'
00000000000009a3         db  0x6f ; 'o'
00000000000009a4         db  0x75 ; 'u'
00000000000009a5         db  0x74 ; 't'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x6c ; 'l'
00000000000009a8         db  0x73 ; 's'
00000000000009a9         db  0x65 ; 'e'
00000000000009aa         db  0x65 ; 'e'
00000000000009ab         db  0x6b ; 'k'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x6d ; 'm'
00000000000009ae         db  0x65 ; 'e'
00000000000009af         db  0x6d ; 'm'
00000000000009b0         db  0x63 ; 'c'
00000000000009b1         db  0x70 ; 'p'
00000000000009b2         db  0x79 ; 'y'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x66 ; 'f'
00000000000009b5         db  0x63 ; 'c'
00000000000009b6         db  0x6c ; 'l'
00000000000009b7         db  0x6f ; 'o'
00000000000009b8         db  0x73 ; 's'
00000000000009b9         db  0x65 ; 'e'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x5f ; '_'
00000000000009bc         db  0x5f ; '_'
00000000000009bd         db  0x73 ; 's'
00000000000009be         db  0x74 ; 't'
00000000000009bf         db  0x72 ; 'r'
00000000000009c0         db  0x74 ; 't'
00000000000009c1         db  0x6f ; 'o'
00000000000009c2         db  0x6c ; 'l'
00000000000009c3         db  0x5f ; '_'
00000000000009c4         db  0x69 ; 'i'
00000000000009c5         db  0x6e ; 'n'
00000000000009c6         db  0x74 ; 't'
00000000000009c7         db  0x65 ; 'e'
00000000000009c8         db  0x72 ; 'r'
00000000000009c9         db  0x6e ; 'n'
00000000000009ca         db  0x61 ; 'a'
00000000000009cb         db  0x6c ; 'l'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x6d ; 'm'
00000000000009ce         db  0x61 ; 'a'
00000000000009cf         db  0x6c ; 'l'
00000000000009d0         db  0x6c ; 'l'
00000000000009d1         db  0x6f ; 'o'
00000000000009d2         db  0x63 ; 'c'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x6d ; 'm'
00000000000009d5         db  0x62 ; 'b'
00000000000009d6         db  0x73 ; 's'
00000000000009d7         db  0x69 ; 'i'
00000000000009d8         db  0x6e ; 'n'
00000000000009d9         db  0x69 ; 'i'
00000000000009da         db  0x74 ; 't'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x6e ; 'n'
00000000000009dd         db  0x6c ; 'l'
00000000000009de         db  0x5f ; '_'
00000000000009df         db  0x6c ; 'l'
00000000000009e0         db  0x61 ; 'a'
00000000000009e1         db  0x6e ; 'n'
00000000000009e2         db  0x67 ; 'g'
00000000000009e3         db  0x69 ; 'i'
00000000000009e4         db  0x6e ; 'n'
00000000000009e5         db  0x66 ; 'f'
00000000000009e6         db  0x6f ; 'o'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x5f ; '_'
00000000000009e9         db  0x5f ; '_'
00000000000009ea         db  0x63 ; 'c'
00000000000009eb         db  0x74 ; 't'
00000000000009ec         db  0x79 ; 'y'
00000000000009ed         db  0x70 ; 'p'
00000000000009ee         db  0x65 ; 'e'
00000000000009ef         db  0x5f ; '_'
00000000000009f0         db  0x62 ; 'b'
00000000000009f1         db  0x5f ; '_'
00000000000009f2         db  0x6c ; 'l'
00000000000009f3         db  0x6f ; 'o'
00000000000009f4         db  0x63 ; 'c'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x6f ; 'o'
00000000000009f7         db  0x70 ; 'p'
00000000000009f8         db  0x74 ; 't'
00000000000009f9         db  0x61 ; 'a'
00000000000009fa         db  0x72 ; 'r'
00000000000009fb         db  0x67 ; 'g'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x5f ; '_'
00000000000009fe         db  0x5f ; '_'
00000000000009ff         db  0x66 ; 'f'
                     aReading:
0000000000000a00         db         "reading", 0
0000000000000a08         db  0x73 ; 's'
0000000000000a09         db  0x74 ; 't'
0000000000000a0a         db  0x64 ; 'd'
0000000000000a0b         db  0x65 ; 'e'
0000000000000a0c         db  0x72 ; 'r'
0000000000000a0d         db  0x72 ; 'r'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x67 ; 'g'
0000000000000a10         db  0x65 ; 'e'
0000000000000a11         db  0x74 ; 't'
0000000000000a12         db  0x6f ; 'o'
0000000000000a13         db  0x70 ; 'p'
0000000000000a14         db  0x74 ; 't'
0000000000000a15         db  0x5f ; '_'
0000000000000a16         db  0x6c ; 'l'
0000000000000a17         db  0x6f ; 'o'
0000000000000a18         db  0x6e ; 'n'
0000000000000a19         db  0x67 ; 'g'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x5f ; '_'
0000000000000a1c         db  0x5f ; '_'
0000000000000a1d         db  0x66 ; 'f'
0000000000000a1e         db  0x78 ; 'x'
0000000000000a1f         db  0x73 ; 's'
0000000000000a20         db  0x74 ; 't'
0000000000000a21         db  0x61 ; 'a'
0000000000000a22         db  0x74 ; 't'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x66 ; 'f'
0000000000000a25         db  0x69 ; 'i'
0000000000000a26         db  0x6c ; 'l'
0000000000000a27         db  0x65 ; 'e'
0000000000000a28         db  0x6e ; 'n'
0000000000000a29         db  0x6f ; 'o'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x66 ; 'f'
0000000000000a2c         db  0x77 ; 'w'
0000000000000a2d         db  0x72 ; 'r'
0000000000000a2e         db  0x69 ; 'i'
0000000000000a2f         db  0x74 ; 't'
0000000000000a30         db  0x65 ; 'e'
0000000000000a31         db  0x00 ; '.'
0000000000000a32         db  0x5f ; '_'
0000000000000a33         db  0x5f ; '_'
0000000000000a34         db  0x66 ; 'f'
0000000000000a35         db  0x70 ; 'p'
0000000000000a36         db  0x65 ; 'e'
0000000000000a37         db  0x6e ; 'n'
0000000000000a38         db  0x64 ; 'd'
0000000000000a39         db  0x69 ; 'i'
0000000000000a3a         db  0x6e ; 'n'
0000000000000a3b         db  0x67 ; 'g'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x6f ; 'o'
0000000000000a3e         db  0x70 ; 'p'
0000000000000a3f         db  0x65 ; 'e'
0000000000000a40         db  0x6e ; 'n'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x73 ; 's'
0000000000000a43         db  0x74 ; 't'
0000000000000a44         db  0x72 ; 'r'
0000000000000a45         db  0x63 ; 'c'
0000000000000a46         db  0x68 ; 'h'
0000000000000a47         db  0x72 ; 'r'
0000000000000a48         db  0x00 ; '.'
0000000000000a49         db  0x70 ; 'p'
0000000000000a4a         db  0x72 ; 'r'
0000000000000a4b         db  0x6f ; 'o'
0000000000000a4c         db  0x67 ; 'g'
0000000000000a4d         db  0x72 ; 'r'
0000000000000a4e         db  0x61 ; 'a'
0000000000000a4f         db  0x6d ; 'm'
0000000000000a50         db  0x5f ; '_'
0000000000000a51         db  0x69 ; 'i'
0000000000000a52         db  0x6e ; 'n'
0000000000000a53         db  0x76 ; 'v'
0000000000000a54         db  0x6f ; 'o'
0000000000000a55         db  0x63 ; 'c'
0000000000000a56         db  0x61 ; 'a'
0000000000000a57         db  0x74 ; 't'
0000000000000a58         db  0x69 ; 'i'
0000000000000a59         db  0x6f ; 'o'
0000000000000a5a         db  0x6e ; 'n'
0000000000000a5b         db  0x5f ; '_'
0000000000000a5c         db  0x73 ; 's'
0000000000000a5d         db  0x68 ; 'h'
0000000000000a5e         db  0x6f ; 'o'
0000000000000a5f         db  0x72 ; 'r'
0000000000000a60         db  0x74 ; 't'
0000000000000a61         db  0x5f ; '_'
0000000000000a62         db  0x6e ; 'n'
0000000000000a63         db  0x61 ; 'a'
0000000000000a64         db  0x6d ; 'm'
0000000000000a65         db  0x65 ; 'e'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x5f ; '_'
0000000000000a68         db  0x5f ; '_'
0000000000000a69         db  0x63 ; 'c'
0000000000000a6a         db  0x78 ; 'x'
0000000000000a6b         db  0x61 ; 'a'
0000000000000a6c         db  0x5f ; '_'
0000000000000a6d         db  0x66 ; 'f'
0000000000000a6e         db  0x69 ; 'i'
0000000000000a6f         db  0x6e ; 'n'
0000000000000a70         db  0x61 ; 'a'
0000000000000a71         db  0x6c ; 'l'
0000000000000a72         db  0x69 ; 'i'
0000000000000a73         db  0x7a ; 'z'
0000000000000a74         db  0x65 ; 'e'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x5f ; '_'
0000000000000a77         db  0x5f ; '_'
0000000000000a78         db  0x78 ; 'x'
0000000000000a79         db  0x73 ; 's'
0000000000000a7a         db  0x74 ; 't'
0000000000000a7b         db  0x61 ; 'a'
0000000000000a7c         db  0x74 ; 't'
0000000000000a7d         db  0x00 ; '.'
0000000000000a7e         db  0x62 ; 'b'
0000000000000a7f         db  0x69 ; 'i'
0000000000000a80         db  0x6e ; 'n'
0000000000000a81         db  0x64 ; 'd'
0000000000000a82         db  0x74 ; 't'
0000000000000a83         db  0x65 ; 'e'
0000000000000a84         db  0x78 ; 'x'
0000000000000a85         db  0x74 ; 't'
0000000000000a86         db  0x64 ; 'd'
0000000000000a87         db  0x6f ; 'o'
0000000000000a88         db  0x6d ; 'm'
0000000000000a89         db  0x61 ; 'a'
0000000000000a8a         db  0x69 ; 'i'
0000000000000a8b         db  0x6e ; 'n'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x5f ; '_'
0000000000000a8e         db  0x5f ; '_'
0000000000000a8f         db  0x6c ; 'l'
0000000000000a90         db  0x69 ; 'i'
0000000000000a91         db  0x62 ; 'b'
0000000000000a92         db  0x63 ; 'c'
0000000000000a93         db  0x5f ; '_'
0000000000000a94         db  0x73 ; 's'
0000000000000a95         db  0x74 ; 't'
0000000000000a96         db  0x61 ; 'a'
0000000000000a97         db  0x72 ; 'r'
0000000000000a98         db  0x74 ; 't'
0000000000000a99         db  0x5f ; '_'
0000000000000a9a         db  0x6d ; 'm'
0000000000000a9b         db  0x61 ; 'a'
0000000000000a9c         db  0x69 ; 'i'
0000000000000a9d         db  0x6e ; 'n'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x66 ; 'f'
0000000000000aa0         db  0x73 ; 's'
0000000000000aa1         db  0x65 ; 'e'
0000000000000aa2         db  0x65 ; 'e'
0000000000000aa3         db  0x6b ; 'k'
0000000000000aa4         db  0x6f ; 'o'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x66 ; 'f'
0000000000000aa7         db  0x70 ; 'p'
0000000000000aa8         db  0x75 ; 'u'
0000000000000aa9         db  0x74 ; 't'
0000000000000aaa         db  0x73 ; 's'
0000000000000aab         db  0x5f ; '_'
0000000000000aac         db  0x75 ; 'u'
0000000000000aad         db  0x6e ; 'n'
0000000000000aae         db  0x6c ; 'l'
0000000000000aaf         db  0x6f ; 'o'
0000000000000ab0         db  0x63 ; 'c'
0000000000000ab1         db  0x6b ; 'k'
0000000000000ab2         db  0x65 ; 'e'
0000000000000ab3         db  0x64 ; 'd'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x66 ; 'f'
0000000000000ab6         db  0x72 ; 'r'
0000000000000ab7         db  0x65 ; 'e'
0000000000000ab8         db  0x65 ; 'e'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x5f ; '_'
0000000000000abb         db  0x5f ; '_'
0000000000000abc         db  0x70 ; 'p'
0000000000000abd         db  0x72 ; 'r'
0000000000000abe         db  0x6f ; 'o'
0000000000000abf         db  0x67 ; 'g'
0000000000000ac0         db  0x6e ; 'n'
0000000000000ac1         db  0x61 ; 'a'
0000000000000ac2         db  0x6d ; 'm'
0000000000000ac3         db  0x65 ; 'e'
0000000000000ac4         db  0x00 ; '.'
0000000000000ac5         db  0x5f ; '_'
0000000000000ac6         db  0x5f ; '_'
0000000000000ac7         db  0x70 ; 'p'
0000000000000ac8         db  0x72 ; 'r'
0000000000000ac9         db  0x6f ; 'o'
0000000000000aca         db  0x67 ; 'g'
0000000000000acb         db  0x6e ; 'n'
0000000000000acc         db  0x61 ; 'a'
0000000000000acd         db  0x6d ; 'm'
0000000000000ace         db  0x65 ; 'e'
0000000000000acf         db  0x5f ; '_'
0000000000000ad0         db  0x66 ; 'f'
0000000000000ad1         db  0x75 ; 'u'
0000000000000ad2         db  0x6c ; 'l'
0000000000000ad3         db  0x6c ; 'l'
0000000000000ad4         db  0x00 ; '.'
0000000000000ad5         db  0x5f ; '_'
0000000000000ad6         db  0x5f ; '_'
0000000000000ad7         db  0x63 ; 'c'
0000000000000ad8         db  0x78 ; 'x'
0000000000000ad9         db  0x61 ; 'a'
0000000000000ada         db  0x5f ; '_'
0000000000000adb         db  0x61 ; 'a'
0000000000000adc         db  0x74 ; 't'
0000000000000add         db  0x65 ; 'e'
0000000000000ade         db  0x78 ; 'x'
0000000000000adf         db  0x69 ; 'i'
0000000000000ae0         db  0x74 ; 't'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x47 ; 'G'
0000000000000ae3         db  0x4c ; 'L'
0000000000000ae4         db  0x49 ; 'I'
0000000000000ae5         db  0x42 ; 'B'
0000000000000ae6         db  0x43 ; 'C'
0000000000000ae7         db  0x5f ; '_'
0000000000000ae8         db  0x32 ; '2'
0000000000000ae9         db  0x2e ; '.'
0000000000000aea         db  0x33 ; '3'
0000000000000aeb         db  0x00 ; '.'
0000000000000aec         db  0x47 ; 'G'
0000000000000aed         db  0x4c ; 'L'
0000000000000aee         db  0x49 ; 'I'
0000000000000aef         db  0x42 ; 'B'
0000000000000af0         db  0x43 ; 'C'
0000000000000af1         db  0x5f ; '_'
0000000000000af2         db  0x32 ; '2'
0000000000000af3         db  0x2e ; '.'
0000000000000af4         db  0x33 ; '3'
0000000000000af5         db  0x2e ; '.'
0000000000000af6         db  0x34 ; '4'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x47 ; 'G'
0000000000000af9         db  0x4c ; 'L'
0000000000000afa         db  0x49 ; 'I'
0000000000000afb         db  0x42 ; 'B'
0000000000000afc         db  0x43 ; 'C'
0000000000000afd         db  0x5f ; '_'
0000000000000afe         db  0x32 ; '2'
0000000000000aff         db  0x2e ; '.'
0000000000000b00         db  0x31 ; '1'
0000000000000b01         db  0x34 ; '4'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x47 ; 'G'
0000000000000b04         db  0x4c ; 'L'
0000000000000b05         db  0x49 ; 'I'
0000000000000b06         db  0x42 ; 'B'
0000000000000b07         db  0x43 ; 'C'
0000000000000b08         db  0x5f ; '_'
0000000000000b09         db  0x32 ; '2'
0000000000000b0a         db  0x2e ; '.'
0000000000000b0b         db  0x34 ; '4'
0000000000000b0c         db  0x00 ; '.'
0000000000000b0d         db  0x47 ; 'G'
0000000000000b0e         db  0x4c ; 'L'
0000000000000b0f         db  0x49 ; 'I'
0000000000000b10         db  0x42 ; 'B'
0000000000000b11         db  0x43 ; 'C'
0000000000000b12         db  0x5f ; '_'
0000000000000b13         db  0x32 ; '2'
0000000000000b14         db  0x2e ; '.'
0000000000000b15         db  0x32 ; '2'
0000000000000b16         db  0x2e ; '.'
0000000000000b17         db  0x35 ; '5'
0000000000000b18         db  0x00 ; '.'
0000000000000b19         db  0x5f ; '_'
0000000000000b1a         db  0x49 ; 'I'
0000000000000b1b         db  0x54 ; 'T'
0000000000000b1c         db  0x4d ; 'M'
0000000000000b1d         db  0x5f ; '_'
0000000000000b1e         db  0x64 ; 'd'
0000000000000b1f         db  0x65 ; 'e'
0000000000000b20         db  0x72 ; 'r'
0000000000000b21         db  0x65 ; 'e'
0000000000000b22         db  0x67 ; 'g'
0000000000000b23         db  0x69 ; 'i'
0000000000000b24         db  0x73 ; 's'
0000000000000b25         db  0x74 ; 't'
0000000000000b26         db  0x65 ; 'e'
0000000000000b27         db  0x72 ; 'r'
0000000000000b28         db  0x54 ; 'T'
0000000000000b29         db  0x4d ; 'M'
0000000000000b2a         db  0x43 ; 'C'
0000000000000b2b         db  0x6c ; 'l'
0000000000000b2c         db  0x6f ; 'o'
0000000000000b2d         db  0x6e ; 'n'
0000000000000b2e         db  0x65 ; 'e'
0000000000000b2f         db  0x54 ; 'T'
0000000000000b30         db  0x61 ; 'a'
0000000000000b31         db  0x62 ; 'b'
0000000000000b32         db  0x6c ; 'l'
0000000000000b33         db  0x65 ; 'e'
0000000000000b34         db  0x00 ; '.'
0000000000000b35         db  0x5f ; '_'
0000000000000b36         db  0x5f ; '_'
0000000000000b37         db  0x67 ; 'g'
0000000000000b38         db  0x6d ; 'm'
0000000000000b39         db  0x6f ; 'o'
0000000000000b3a         db  0x6e ; 'n'
0000000000000b3b         db  0x5f ; '_'
0000000000000b3c         db  0x73 ; 's'
0000000000000b3d         db  0x74 ; 't'
0000000000000b3e         db  0x61 ; 'a'
0000000000000b3f         db  0x72 ; 'r'
0000000000000b40         db  0x74 ; 't'
0000000000000b41         db  0x5f ; '_'
0000000000000b42         db  0x5f ; '_'
0000000000000b43         db  0x00 ; '.'
0000000000000b44         db  0x5f ; '_'
0000000000000b45         db  0x49 ; 'I'
0000000000000b46         db  0x54 ; 'T'
0000000000000b47         db  0x4d ; 'M'
0000000000000b48         db  0x5f ; '_'
0000000000000b49         db  0x72 ; 'r'
0000000000000b4a         db  0x65 ; 'e'
0000000000000b4b         db  0x67 ; 'g'
0000000000000b4c         db  0x69 ; 'i'
0000000000000b4d         db  0x73 ; 's'
0000000000000b4e         db  0x74 ; 't'
0000000000000b4f         db  0x65 ; 'e'
0000000000000b50         db  0x72 ; 'r'
0000000000000b51         db  0x54 ; 'T'
0000000000000b52         db  0x4d ; 'M'
0000000000000b53         db  0x43 ; 'C'
0000000000000b54         db  0x6c ; 'l'
0000000000000b55         db  0x6f ; 'o'
0000000000000b56         db  0x6e ; 'n'
0000000000000b57         db  0x65 ; 'e'
0000000000000b58         db  0x54 ; 'T'
0000000000000b59         db  0x61 ; 'a'
0000000000000b5a         db  0x62 ; 'b'
0000000000000b5b         db  0x6c ; 'l'
0000000000000b5c         db  0x65 ; 'e'
0000000000000b5d         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xb5e; 0xbd8[ (122 bytes)
        ; File offset : [2910; 3032[ (122 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b5e         db  0x00 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x02 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x02 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x02 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x02 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x00 ; '.'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x02 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x02 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x02 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x02 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x02 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x02 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x02 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x02 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x02 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x03 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x02 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x02 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x02 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x02 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x02 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x02 ; '.'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x02 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x02 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x02 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x02 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x00 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x04 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x02 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x02 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x02 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x02 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x02 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x02 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x02 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x05 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x02 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x02 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x05 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x00 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x02 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x02 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x06 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x02 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x02 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x02 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x02 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x02 ; '.'
0000000000000bd7         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xbd8; 0xc38[ (96 bytes)
        ; File offset : [3032; 3128[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bd8         db  0x01 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x05 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x01 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x10 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x00 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x00 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x13 ; '.'
0000000000000be9         db  0x69 ; 'i'
0000000000000bea         db  0x69 ; 'i'
0000000000000beb         db  0x0d ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x06 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x4a ; 'J'
0000000000000bf1         db  0x02 ; '.'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x10 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x00 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x74 ; 't'
0000000000000bf9         db  0x19 ; '.'
0000000000000bfa         db  0x69 ; 'i'
0000000000000bfb         db  0x09 ; '.'
0000000000000bfc         db  0x00 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x05 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x54 ; 'T'
0000000000000c01         db  0x02 ; '.'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x10 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x00 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x94 ; '.'
0000000000000c09         db  0x91 ; '.'
0000000000000c0a         db  0x96 ; '.'
0000000000000c0b         db  0x06 ; '.'
0000000000000c0c         db  0x00 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x04 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x60 ; '`'
0000000000000c11         db  0x02 ; '.'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x10 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x14 ; '.'
0000000000000c19         db  0x69 ; 'i'
0000000000000c1a         db  0x69 ; 'i'
0000000000000c1b         db  0x0d ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x03 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x6b ; 'k'
0000000000000c21         db  0x02 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x10 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x75 ; 'u'
0000000000000c29         db  0x1a ; '.'
0000000000000c2a         db  0x69 ; 'i'
0000000000000c2b         db  0x09 ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x02 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x75 ; 'u'
0000000000000c31         db  0x02 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc38; 0xf50[ (792 bytes)
        ; File offset : [3128; 3920[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c38         db  0x10 ; '.'
0000000000000c39         db  0x7b ; '{'
0000000000000c3a         db  0x20 ; ' '
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x08 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0xc0 ; '.'
0000000000000c49         db  0x21 ; '!'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x18 ; '.'
0000000000000c51         db  0x7b ; '{'
0000000000000c52         db  0x20 ; ' '
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x08 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x00 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x80 ; '.'
0000000000000c61         db  0x21 ; '!'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x20 ; ' '
0000000000000c69         db  0x7b ; '{'
0000000000000c6a         db  0x20 ; ' '
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x08 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0xe3 ; '.'
0000000000000c79         db  0x59 ; 'Y'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x40 ; '@'
0000000000000c81         db  0x7b ; '{'
0000000000000c82         db  0x20 ; ' '
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x08 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x5d ; ']'
0000000000000c91         db  0x59 ; 'Y'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x60 ; '`'
0000000000000c99         db  0x7b ; '{'
0000000000000c9a         db  0x20 ; ' '
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x08 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x4a ; 'J'
0000000000000ca9         db  0x59 ; 'Y'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x80 ; '.'
0000000000000cb1         db  0x7b ; '{'
0000000000000cb2         db  0x20 ; ' '
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x08 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x56 ; 'V'
0000000000000cc1         db  0x59 ; 'Y'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0xa0 ; '.'
0000000000000cc9         db  0x7b ; '{'
0000000000000cca         db  0x20 ; ' '
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x08 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0xed ; '.'
0000000000000cd9         db  0x59 ; 'Y'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0xc0 ; '.'
0000000000000ce1         db  0x7b ; '{'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0xf2 ; '.'
0000000000000cf1         db  0x59 ; 'Y'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x00 ; '.'
0000000000000cf9         db  0x7c ; '|'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x09 ; '.'
0000000000000d09         db  0x61 ; 'a'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x08 ; '.'
0000000000000d11         db  0x7c ; '|'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x11 ; '.'
0000000000000d21         db  0x61 ; 'a'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x10 ; '.'
0000000000000d29         db  0x7c ; '|'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x17 ; '.'
0000000000000d39         db  0x61 ; 'a'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x18 ; '.'
0000000000000d41         db  0x7c ; '|'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x24 ; '$'
0000000000000d51         db  0x61 ; 'a'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x20 ; ' '
0000000000000d59         db  0x7c ; '|'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x31 ; '1'
0000000000000d69         db  0x61 ; 'a'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x28 ; '('
0000000000000d71         db  0x7c ; '|'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x45 ; 'E'
0000000000000d81         db  0x61 ; 'a'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x30 ; '0'
0000000000000d89         db  0x7c ; '|'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x47 ; 'G'
0000000000000d99         db  0x61 ; 'a'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x38 ; '8'
0000000000000da1         db  0x7c ; '|'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x2a ; '*'
0000000000000db1         db  0x61 ; 'a'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x40 ; '@'
0000000000000db9         db  0x7c ; '|'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0xfe ; '.'
0000000000000dc9         db  0x58 ; 'X'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x48 ; 'H'
0000000000000dd1         db  0x7c ; '|'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x4f ; 'O'
0000000000000de1         db  0x61 ; 'a'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x08 ; '.'
0000000000000de9         db  0x80 ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0x80 ; '.'
0000000000000dfa         db  0x20 ; ' '
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x10 ; '.'
0000000000000e01         db  0x80 ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x93 ; '.'
0000000000000e11         db  0x60 ; '`'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x60 ; '`'
0000000000000e19         db  0x80 ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x70 ; 'p'
0000000000000e29         db  0x80 ; '.'
0000000000000e2a         db  0x20 ; ' '
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x78 ; 'x'
0000000000000e31         db  0x80 ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x00 ; '.'
0000000000000e41         db  0x81 ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0xd8 ; '.'
0000000000000e49         db  0x7f ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x06 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x05 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x00 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xe0 ; '.'
0000000000000e61         db  0x7f ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x06 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x19 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x00 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xe8 ; '.'
0000000000000e79         db  0x7f ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x06 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x1d ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x00 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xf0 ; '.'
0000000000000e91         db  0x7f ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x06 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x30 ; '0'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x00 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xf8 ; '.'
0000000000000ea9         db  0x7f ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x06 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x33 ; '3'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x00 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x80 ; '.'
0000000000000ec1         db  0x80 ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x05 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x36 ; '6'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x88 ; '.'
0000000000000ed9         db  0x80 ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x05 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x35 ; '5'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x90 ; '.'
0000000000000ef1         db  0x80 ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x05 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x3b ; ';'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x98 ; '.'
0000000000000f09         db  0x80 ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x05 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x3c ; '<'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xa0 ; '.'
0000000000000f21         db  0x80 ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x05 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x38 ; '8'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0xc0 ; '.'
0000000000000f39         db  0x80 ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x05 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x3a ; ':'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xf50; 0x13b8[ (1128 bytes)
        ; File offset : [3920; 5048[ (1128 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000f50         db  0x60 ; '`'
0000000000000f51         db  0x7e ; '~'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x07 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x01 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x68 ; 'h'
0000000000000f69         db  0x7e ; '~'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x07 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x02 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x70 ; 'p'
0000000000000f81         db  0x7e ; '~'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x07 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x03 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x78 ; 'x'
0000000000000f99         db  0x7e ; '~'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x07 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x04 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x80 ; '.'
0000000000000fb1         db  0x7e ; '~'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x07 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x06 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x88 ; '.'
0000000000000fc9         db  0x7e ; '~'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x07 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x07 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x90 ; '.'
0000000000000fe1         db  0x7e ; '~'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x07 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x08 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x98 ; '.'
0000000000000ff9         db  0x7e ; '~'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x07 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x09 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0xa0 ; '.'
0000000000001011         db  0x7e ; '~'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x07 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x0a ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0xa8 ; '.'
0000000000001029         db  0x7e ; '~'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x07 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x0b ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0xb0 ; '.'
0000000000001041         db  0x7e ; '~'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x07 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x0c ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0xb8 ; '.'
0000000000001059         db  0x7e ; '~'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x07 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x0d ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0xc0 ; '.'
0000000000001071         db  0x7e ; '~'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x0e ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xc8 ; '.'
0000000000001089         db  0x7e ; '~'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x0f ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0xd0 ; '.'
00000000000010a1         db  0x7e ; '~'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x10 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0xd8 ; '.'
00000000000010b9         db  0x7e ; '~'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x11 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0xe0 ; '.'
00000000000010d1         db  0x7e ; '~'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x12 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0xe8 ; '.'
00000000000010e9         db  0x7e ; '~'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x13 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0xf0 ; '.'
0000000000001101         db  0x7e ; '~'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x14 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xf8 ; '.'
0000000000001119         db  0x7e ; '~'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x15 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x7f ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x16 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x08 ; '.'
0000000000001149         db  0x7f ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x17 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x10 ; '.'
0000000000001161         db  0x7f ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x18 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x18 ; '.'
0000000000001179         db  0x7f ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x1a ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x20 ; ' '
0000000000001191         db  0x7f ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x1b ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x28 ; '('
00000000000011a9         db  0x7f ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x1c ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x30 ; '0'
00000000000011c1         db  0x7f ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x1e ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x38 ; '8'
00000000000011d9         db  0x7f ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x1f ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x40 ; '@'
00000000000011f1         db  0x7f ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x20 ; ' '
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x48 ; 'H'
0000000000001209         db  0x7f ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x21 ; '!'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x50 ; 'P'
0000000000001221         db  0x7f ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x22 ; '"'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x58 ; 'X'
0000000000001239         db  0x7f ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x23 ; '#'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x60 ; '`'
0000000000001251         db  0x7f ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x24 ; '$'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x68 ; 'h'
0000000000001269         db  0x7f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x25 ; '%'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x70 ; 'p'
0000000000001281         db  0x7f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x26 ; '&'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x78 ; 'x'
0000000000001299         db  0x7f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x27 ; '''
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x80 ; '.'
00000000000012b1         db  0x7f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x28 ; '('
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x88 ; '.'
00000000000012c9         db  0x7f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x29 ; ')'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x90 ; '.'
00000000000012e1         db  0x7f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x2a ; '*'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x98 ; '.'
00000000000012f9         db  0x7f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x2b ; '+'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0xa0 ; '.'
0000000000001311         db  0x7f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x2c ; ','
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0xa8 ; '.'
0000000000001329         db  0x7f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x2d ; '-'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0xb0 ; '.'
0000000000001341         db  0x7f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x2e ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0xb8 ; '.'
0000000000001359         db  0x7f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x2f ; '/'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0xc0 ; '.'
0000000000001371         db  0x7f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x31 ; '1'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0xc8 ; '.'
0000000000001389         db  0x7f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x32 ; '2'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0xd0 ; '.'
00000000000013a1         db  0x7f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x34 ; '4'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x13b8; 0x13cf[ (23 bytes)
        ; File offset : [5048; 5071[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000013b8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000013bc         mov        rax, qword [qword_207fe8]                   ; qword_207fe8
00000000000013c3         test       rax, rax
00000000000013c6         je         loc_13ca

00000000000013c8         call       rax

                     loc_13ca:
00000000000013ca         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000013ce         ret
                        ; endp
00000000000013cf         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x13d0; 0x16d0[ (768 bytes)
        ; File offset : [5072; 5840[ (768 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_13d0:
00000000000013d0         push       qword [qword_207e50]                        ; Begin of unwind block (FDE at 0x6d1c), qword_207e50, CODE XREF=sub_13e6+5
00000000000013d6         jmp        qword [qword_207e50+8]                      ; 0x207e58
                        ; endp
00000000000013dc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000013e0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13e6:
00000000000013e6         push       0x0
00000000000013eb         jmp        loc_13d0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000013f0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_2f90+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13f6:
00000000000013f6         push       0x1
00000000000013fb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001400         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1184, main+1254, main+1363, main+1388, main+1569, main+1762, main+2484, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1406:
0000000000001406         push       0x2
000000000000140b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001410         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+732, usage+925
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1416:
0000000000001416         push       0x3
000000000000141b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001420         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1426:
0000000000001426         push       0x4
000000000000142b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001430         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1436:
0000000000001436         push       0x5
000000000000143b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001440         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+98
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1446:
0000000000001446         push       0x6
000000000000144b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtol_internal:        // __strtol_internal
0000000000001450         jmp        qword [__strtol_internal@GOT]               ; __strtol_internal, __strtol_internal@GOT, CODE XREF=xstrtoimax+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1456:
0000000000001456         push       0x7
000000000000145b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001460         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1466:
0000000000001466         push       0x8
000000000000146b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001470         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+86
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0x9
000000000000147b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001480         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+472, main+595, main+809, main+1176, main+1355, main+1444, main+1559, main+1754, main+1956, main+2061, main+2132
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0xa
000000000000148b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001490         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0xb
000000000000149b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000014a0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_2f90+411, sub_2f90+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0xc
00000000000014ab         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000014b0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+2351, sub_2f90+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, xnumtoimax+268, xstrtoimax+1710
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0xd
00000000000014bb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000014c0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+138
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0xe
00000000000014cb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000014d0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0xf
00000000000014db         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
00000000000014e0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoimax+236, xstrtoimax+271, xstrtoimax+323
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x10
00000000000014eb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000014f0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x11
00000000000014fb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ftruncate:        // ftruncate
0000000000001500         jmp        qword [ftruncate@GOT]                       ; ftruncate, ftruncate@GOT, CODE XREF=main+1515
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x12
000000000000150b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001510         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=main+1277, main+2197, rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x13
000000000000151b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001520         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoimax+1705
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x14
000000000000152b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001530         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x15
000000000000153b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001540         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=main+1212, main+1297
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x16
000000000000154b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001550         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x17
000000000000155b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001560         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+416, usage+460, usage+1040, version_etc_arn+135
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x18
000000000000156b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001570         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x19
000000000000157b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001580         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x1a
000000000000158b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001590         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x1b
000000000000159b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
00000000000015a0         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=main+926
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x1c
00000000000015ab         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000015b0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x1d
00000000000015bb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000015c0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x1e
00000000000015cb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000015d0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x1f
00000000000015db         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
00000000000015e0         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=main+1133, main+1616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x20
00000000000015eb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000015f0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x21
00000000000015fb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001600         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x22
000000000000160b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001610         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+67, usage+707, usage+900, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x23
000000000000161b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001620         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+695, usage+788, usage+849, usage+888, usage+991, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x24
000000000000162b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001630         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+829, main+1204, main+1383, main+1463, main+1594, main+1779, main+1984, main+2078, main+2146, main+2441, main+2504
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x25
000000000000163b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001640         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=main+1071, main+1246
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x26
000000000000164b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001650         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x27
000000000000165b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001660         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x28
000000000000166b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001670         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+266, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x29
000000000000167b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001680         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x2a
000000000000168b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001690         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x2b
000000000000169b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000016a0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_2f90+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x2c
00000000000016ab         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000016b0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_2f90+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x2d
00000000000016bb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000016c0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=main+288, sub_2d30+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x2e
00000000000016cb         jmp        0x13d0
                        ; endp


        ; Section .plt.got
        ; Range: [0x16d0; 0x16d8[ (8 bytes)
        ; File offset : [5840; 5848[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_207ff8:        // qword_207ff8
00000000000016d0         jmp        qword [qword_207ff8]                        ; qword, End of unwind block (FDE at 0x6d1c), Begin of unwind block (FDE at 0x6d44), qword_207ff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000016d6         align      8
00000000000016d8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x6d44)
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x16e0; 0x580e[ (16686 bytes)
        ; File offset : [5856; 22542[ (16686 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F4: int32_t, -244
        ;    var_F8: int32_t, -248
        ;    var_100: int64_t, -256


                     main:
00000000000016e0         push       r15                                         ; Begin of unwind block (FDE at 0x6d88), DATA XREF=_start+29
00000000000016e2         push       r14
00000000000016e4         push       r13
00000000000016e6         push       r12
00000000000016e8         mov        r13d, edi
00000000000016eb         push       rbp
00000000000016ec         push       rbx
00000000000016ed         mov        rbp, rsi
00000000000016f0         xor        ebx, ebx
00000000000016f2         xor        r12d, r12d
00000000000016f5         sub        rsp, 0xd8
00000000000016fc         mov        rdi, qword [rsi]
00000000000016ff         mov        rax, qword [fs:0x28]
0000000000001708         mov        qword [rsp+0x108+var_40], rax
0000000000001710         xor        eax, eax
0000000000001712         call       set_program_name                            ; set_program_name
0000000000001717         lea        rsi, qword [aUsageSOptionFi+28]             ; argument "__locale" for method j_setlocale, 0x5849
000000000000171e         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001723         call       j_setlocale                                 ; setlocale
0000000000001728         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000172f         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001736         call       j_bindtextdomain                            ; bindtextdomain
000000000000173b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001742         call       j_textdomain                                ; textdomain
0000000000001747         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
000000000000174e         call       atexit                                      ; atexit

                     loc_1753:
0000000000001753         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+199, main+279, main+525, main+550, main+671
000000000000175a         lea        rdx, qword [aCors]                          ; argument "__shortopts" for method j_getopt_long, "cor:s:"
0000000000001761         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001764         mov        rsi, rbp                                    ; argument "___argv" for method j_getopt_long
0000000000001767         mov        edi, r13d                                   ; argument "___argc" for method j_getopt_long
000000000000176a         call       j_getopt_long                               ; getopt_long
000000000000176f         cmp        eax, 0xffffffff
0000000000001772         je         loc_19ae

0000000000001778         cmp        eax, 0x63
000000000000177b         je         loc_17f0

000000000000177d         jle        loc_17b0

000000000000177f         cmp        eax, 0x72
0000000000001782         je         loc_18f8

0000000000001788         cmp        eax, 0x73
000000000000178b         je         loc_1800

000000000000178d         cmp        eax, 0x6f
0000000000001790         je         loc_17a0

                     loc_1792:
0000000000001792         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+834, main+2338
0000000000001797         call       usage                                       ; usage
000000000000179c         nop        dword [rax]

                     loc_17a0:
00000000000017a0         mov        byte [block_mode], 0x1                      ; block_mode, CODE XREF=main+176
00000000000017a7         jmp        loc_1753
00000000000017a9         align      16

                     loc_17b0:
00000000000017b0         cmp        eax, 0xffffff7d                             ; CODE XREF=main+157
00000000000017b5         jne        loc_1ffd

00000000000017bb         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000017c2         mov        rcx, qword [Version]                        ; Version
00000000000017c9         lea        r8, qword [aPadraigBrady]                   ; "Padraig Brady"
00000000000017d0         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x58c0
00000000000017d7         lea        rsi, qword [aTruncate]                      ; "truncate"
00000000000017de         xor        r9d, r9d
00000000000017e1         xor        eax, eax
00000000000017e3         call       version_etc                                 ; version_etc
00000000000017e8         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000017ea         call       j_exit                                      ; exit
                        ; endp
00000000000017ef         align      16

                     loc_17f0:
00000000000017f0         mov        byte [no_create], 0x1                       ; no_create, CODE XREF=main+155
00000000000017f7         jmp        loc_1753
00000000000017fc         align      2048

                     loc_1800:
0000000000001800         call       j___ctype_b_loc                             ; __ctype_b_loc, CODE XREF=main+171
0000000000001805         mov        rcx, qword [rax]
0000000000001808         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000180f         jmp        loc_181f
0000000000001811         align      8

                     loc_1818:
0000000000001818         mov        qword [optarg@@GLIBC_2.2.5], rax            ; optarg@@GLIBC_2.2.5, CODE XREF=main+334

                     loc_181f:
000000000000181f         movzx      esi, byte [rax]                             ; CODE XREF=main+303
0000000000001822         mov        rdi, rax
0000000000001825         add        rax, 0x1
0000000000001829         test       byte [rcx+rsi*2+1], 0x20
000000000000182e         jne        loc_1818

0000000000001830         cmp        sil, 0x2f
0000000000001834         je         loc_1984

000000000000183a         jle        loc_190b

0000000000001840         cmp        sil, 0x3c
0000000000001844         je         loc_1999

000000000000184a         cmp        sil, 0x3e
000000000000184e         jne        loc_1860

0000000000001850         add        rdi, 0x1
0000000000001854         mov        ebx, 0x2
0000000000001859         mov        qword [optarg@@GLIBC_2.2.5], rdi            ; optarg@@GLIBC_2.2.5

                     loc_1860:
0000000000001860         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+366, main+559, main+581, main+692, main+713
0000000000001867         jmp        loc_1877
0000000000001869         align      16

                     loc_1870:
0000000000001870         mov        qword [optarg@@GLIBC_2.2.5], rax            ; optarg@@GLIBC_2.2.5, CODE XREF=main+422

                     loc_1877:
0000000000001877         movzx      esi, byte [rax]                             ; CODE XREF=main+391
000000000000187a         add        rax, 0x1
000000000000187e         test       byte [rcx+rsi*2+1], 0x20
0000000000001883         mov        rdx, rsi
0000000000001886         jne        loc_1870

0000000000001888         sub        edx, 0x2b
000000000000188b         and        edx, 0xfd
0000000000001891         mov        edx, 0x5
0000000000001896         jne        loc_192a

000000000000189c         test       ebx, ebx
000000000000189e         jne        loc_20ad

00000000000018a4         lea        rsi, qword [aInvalidNumber]                 ; argument "msgid" for method j_dcgettext, "Invalid number"
00000000000018ab         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000018ad         mov        ebx, 0x1
00000000000018b2         mov        r12d, 0x1
00000000000018b8         call       j_dcgettext                                 ; dcgettext
00000000000018bd         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000018c4         lea        rcx, qword [aEggkkmmpttyz0]                 ; "EgGkKmMPtTYZ0"
00000000000018cb         mov        r8, rax
00000000000018ce         xor        r9d, r9d
00000000000018d1         movabs     rdx, 0x7fffffffffffffff
00000000000018db         movabs     rsi, 0x8000000000000000
00000000000018e5         call       xdectoimax                                  ; xdectoimax
00000000000018ea         mov        r15, rax
00000000000018ed         jmp        loc_1753
00000000000018f2         align      8

                     loc_18f8:
00000000000018f8         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+162
00000000000018ff         mov        qword [ref_file], rax                       ; ref_file
0000000000001906         jmp        loc_1753

                     loc_190b:
000000000000190b         cmp        sil, 0x25                                   ; CODE XREF=main+346
000000000000190f         jne        loc_1860

0000000000001915         add        rdi, 0x1
0000000000001919         mov        ebx, 0x5
000000000000191e         mov        qword [optarg@@GLIBC_2.2.5], rdi            ; optarg@@GLIBC_2.2.5
0000000000001925         jmp        loc_1860

                     loc_192a:
000000000000192a         lea        rsi, qword [aInvalidNumber]                 ; argument "msgid" for method j_dcgettext, "Invalid number", CODE XREF=main+438
0000000000001931         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001933         call       j_dcgettext                                 ; dcgettext
0000000000001938         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000193f         lea        rcx, qword [aEggkkmmpttyz0]                 ; "EgGkKmMPtTYZ0"
0000000000001946         xor        r9d, r9d
0000000000001949         mov        r8, rax
000000000000194c         movabs     rdx, 0x7fffffffffffffff
0000000000001956         movabs     rsi, 0x8000000000000000
0000000000001960         call       xdectoimax                                  ; xdectoimax
0000000000001965         mov        r15, rax
0000000000001968         lea        eax, dword [rbx-4]
000000000000196b         cmp        eax, 0x1
000000000000196e         ja         loc_1979

0000000000001970         test       r15, r15
0000000000001973         je         loc_204a

                     loc_1979:
0000000000001979         mov        r12d, 0x1                                   ; CODE XREF=main+654
000000000000197f         jmp        loc_1753

                     loc_1984:
0000000000001984         add        rdi, 0x1                                    ; CODE XREF=main+340
0000000000001988         mov        ebx, 0x4
000000000000198d         mov        qword [optarg@@GLIBC_2.2.5], rdi            ; optarg@@GLIBC_2.2.5
0000000000001994         jmp        loc_1860

                     loc_1999:
0000000000001999         add        rdi, 0x1                                    ; CODE XREF=main+356
000000000000199d         mov        ebx, 0x3
00000000000019a2         mov        qword [optarg@@GLIBC_2.2.5], rdi            ; optarg@@GLIBC_2.2.5
00000000000019a9         jmp        loc_1860

                     loc_19ae:
00000000000019ae         movsxd     rdx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+146
00000000000019b5         mov        r14, qword [ref_file]                       ; ref_file
00000000000019bc         sub        r13d, edx
00000000000019bf         test       r14, r14
00000000000019c2         lea        rbp, qword [rbp+rdx*8]
00000000000019c7         je         loc_1f14

00000000000019cd         test       ebx, ebx
00000000000019cf         jne        loc_1a27

00000000000019d1         test       r12b, r12b
00000000000019d4         je         loc_1a27

00000000000019d6         lea        rsi, qword [aReference]                     ; "--reference"
00000000000019dd         mov        edi, 0x1
00000000000019e2         call       quote_n                                     ; quote_n
00000000000019e7         lea        rsi, qword [aSize]                          ; "--size"
00000000000019ee         xor        edi, edi
00000000000019f0         mov        rbp, rax
00000000000019f3         call       quote_n                                     ; quote_n
00000000000019f8         lea        rsi, qword [aYouMustSpecify]                ; "you must specify a relative %s with %s"
00000000000019ff         mov        rbx, rax
0000000000001a02         mov        edx, 0x5

                     loc_1a07:
0000000000001a07         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+902, main+2405
0000000000001a09         call       j_dcgettext                                 ; dcgettext
0000000000001a0e         mov        r8, rbp
0000000000001a11         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001a14         mov        rcx, rbx
0000000000001a17         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001a19         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001a1b         xor        eax, eax
0000000000001a1d         call       j_error                                     ; error
0000000000001a22         jmp        loc_1792

                     loc_1a27:
0000000000001a27         cmp        byte [block_mode], 0x1                      ; block_mode, CODE XREF=main+751, main+756
0000000000001a2e         jne        loc_1a68

0000000000001a30         test       r12b, r12b
0000000000001a33         jne        loc_1a68

0000000000001a35         lea        rsi, qword [aSize]                          ; "--size"
0000000000001a3c         mov        edi, 0x1
0000000000001a41         call       quote_n                                     ; quote_n
0000000000001a46         lea        rsi, qword [aIoblocks]                      ; "--io-blocks"
0000000000001a4d         xor        edi, edi
0000000000001a4f         mov        rbp, rax
0000000000001a52         call       quote_n                                     ; quote_n
0000000000001a57         mov        edx, 0x5
0000000000001a5c         mov        rbx, rax
0000000000001a5f         lea        rsi, qword [aSWasSpecifiedB]                ; "%s was specified but %s was not"
0000000000001a66         jmp        loc_1a07

                     loc_1a68:
0000000000001a68         test       r13d, r13d                                  ; CODE XREF=main+846, main+851
0000000000001a6b         jle        loc_1f26

0000000000001a71         lea        rdx, qword [rsp+0x108+var_D8]               ; argument "__stat_buf" for method j___xstat
0000000000001a76         mov        rsi, r14                                    ; argument "__filename" for method j___xstat
0000000000001a79         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000001a7e         call       j___xstat                                   ; __xstat
0000000000001a83         test       eax, eax
0000000000001a85         jne        loc_206e

0000000000001a8b         mov        eax, dword [rsp+0x108+var_C0]
0000000000001a8f         and        eax, 0xd000
0000000000001a94         cmp        eax, 0x8000
0000000000001a99         jne        loc_1bb7

0000000000001a9f         mov        rax, qword [rsp+0x108+var_A8]
0000000000001aa4         test       rax, rax
0000000000001aa7         mov        qword [rsp+0x108+var_F0], rax
0000000000001aac         js         loc_1c09

                     loc_1ab2:
0000000000001ab2         test       r12b, r12b                                  ; CODE XREF=main+1308
0000000000001ab5         jne        loc_1ac5

0000000000001ab7         mov        r15, qword [rsp+0x108+var_F0]

                     loc_1abc:
0000000000001abc         mov        qword [rsp+0x108+var_F0], 0xffffffffffffffff ; CODE XREF=main+2112

                     loc_1ac5:
0000000000001ac5         cmp        byte [no_create], 0x1                       ; no_create, CODE XREF=main+981
0000000000001acc         mov        byte [rsp+0x108+var_F8], 0x0
0000000000001ad1         mov        qword [rsp+0x108+var_100], r15
0000000000001ad6         sbb        eax, eax
0000000000001ad8         and        eax, 0x40
0000000000001adb         add        eax, 0x801
0000000000001ae0         mov        dword [rsp+0x108+var_F4], eax
0000000000001ae4         lea        rax, qword [rsp+0x108+var_D8]
0000000000001ae9         mov        qword [rsp+0x108+var_E8], rax
0000000000001aee         nop

                     loc_1af0:
0000000000001af0         add        rbp, 0x8                                    ; CODE XREF=main+1234, main+1408, main+1473, main+1789
0000000000001af4         mov        r13, qword [rbp-8]
0000000000001af8         test       r13, r13
0000000000001afb         je         loc_1e38

0000000000001b01         mov        esi, dword [rsp+0x108+var_F4]               ; argument "__oflag" for method j_open
0000000000001b05         xor        eax, eax
0000000000001b07         mov        edx, 0x1b6
0000000000001b0c         mov        rdi, r13                                    ; argument "__file" for method j_open
0000000000001b0f         call       j_open                                      ; open
0000000000001b14         cmp        eax, 0xffffffff
0000000000001b17         mov        r15d, eax
0000000000001b1a         je         loc_1c4c

0000000000001b20         cmp        byte [block_mode], 0x0                      ; block_mode
0000000000001b27         jne        loc_1d24

0000000000001b2d         test       ebx, ebx
0000000000001b2f         je         loc_1ca6

0000000000001b35         cmp        qword [rsp+0x108+var_F0], 0x0
0000000000001b3b         jns        loc_1ca6

0000000000001b41         mov        rdx, qword [rsp+0x108+var_E8]               ; argument "__stat_buf" for method j___fxstat
0000000000001b46         mov        esi, eax                                    ; argument "__fildes" for method j___fxstat
0000000000001b48         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000001b4d         call       j___fxstat                                  ; __fxstat
0000000000001b52         test       eax, eax
0000000000001b54         je         loc_1de2

                     loc_1b5a:
0000000000001b5a         mov        rsi, r13                                    ; CODE XREF=main+1623
0000000000001b5d         mov        edi, 0x4
0000000000001b62         call       quotearg_style                              ; quotearg_style
0000000000001b67         lea        rsi, qword [aCannotFstatS]                  ; "cannot fstat %s"
0000000000001b6e         mov        r12, rax
0000000000001b71         mov        edx, 0x5

                     loc_1b76:
0000000000001b76         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+2239
0000000000001b78         call       j_dcgettext                                 ; dcgettext
0000000000001b7d         mov        r14, rax
0000000000001b80         call       j___errno_location                          ; __errno_location
0000000000001b85         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001b87         mov        rdx, r14                                    ; argument "__format" for method j_error
0000000000001b8a         mov        rcx, r12
0000000000001b8d         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001b8f         xor        eax, eax
0000000000001b91         xor        r14d, r14d
0000000000001b94         call       j_error                                     ; error

                     loc_1b99:
0000000000001b99         mov        edi, r15d                                   ; argument "__fd" for method j_close, CODE XREF=main+1523, main+1599, main+1989, main+2083
0000000000001b9c         call       j_close                                     ; close
0000000000001ba1         test       eax, eax
0000000000001ba3         jne        loc_1d9c

0000000000001ba9         xor        r14d, 0x1
0000000000001bad         or         byte [rsp+0x108+var_F8], r14b
0000000000001bb2         jmp        loc_1af0

                     loc_1bb7:
0000000000001bb7         xor        esi, esi                                    ; argument "__oflag" for method j_open, CODE XREF=main+953
0000000000001bb9         mov        rdi, r14                                    ; argument "__file" for method j_open
0000000000001bbc         xor        eax, eax
0000000000001bbe         call       j_open                                      ; open
0000000000001bc3         mov        r13d, eax
0000000000001bc6         call       j___errno_location                          ; __errno_location
0000000000001bcb         test       r13d, r13d
0000000000001bce         mov        r14, rax
0000000000001bd1         js         loc_1c09

0000000000001bd3         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000001bd5         mov        edx, 0x2                                    ; argument "__whence" for method j_lseek
0000000000001bda         mov        edi, r13d                                   ; argument "__fd" for method j_lseek
0000000000001bdd         call       j_lseek                                     ; lseek
0000000000001be2         mov        ecx, dword [r14]
0000000000001be5         mov        edi, r13d                                   ; argument "__fd" for method j_close
0000000000001be8         mov        qword [rsp+0x108+var_F0], rax
0000000000001bed         mov        dword [rsp+0x108+var_F8], ecx
0000000000001bf1         call       j_close                                     ; close
0000000000001bf6         cmp        qword [rsp+0x108+var_F0], 0x0
0000000000001bfc         jns        loc_1ab2

0000000000001c02         mov        eax, dword [rsp+0x108+var_F8]
0000000000001c06         mov        dword [r14], eax

                     loc_1c09:
0000000000001c09         mov        rsi, qword [ref_file]                       ; ref_file, CODE XREF=main+972, main+1265
0000000000001c10         mov        edi, 0x4
0000000000001c15         call       quotearg_style                              ; quotearg_style
0000000000001c1a         lea        rsi, qword [aCannotGetTheSi]                ; argument "msgid" for method j_dcgettext, "cannot get the size of %s"
0000000000001c21         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c26         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c28         mov        rbp, rax
0000000000001c2b         call       j_dcgettext                                 ; dcgettext
0000000000001c30         mov        rbx, rax
0000000000001c33         call       j___errno_location                          ; __errno_location
0000000000001c38         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001c3a         mov        rcx, rbp
0000000000001c3d         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001c40         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001c45         xor        eax, eax
0000000000001c47         call       j_error                                     ; error

                     loc_1c4c:
0000000000001c4c         call       j___errno_location                          ; __errno_location, CODE XREF=main+1082
0000000000001c51         cmp        byte [no_create], 0x0                       ; no_create
0000000000001c58         mov        r12, rax
0000000000001c5b         je         loc_1c66

0000000000001c5d         cmp        dword [rax], 0x2
0000000000001c60         je         loc_1af0

                     loc_1c66:
0000000000001c66         mov        rsi, r13                                    ; CODE XREF=main+1403
0000000000001c69         mov        edi, 0x4
0000000000001c6e         call       quotearg_style                              ; quotearg_style
0000000000001c73         lea        rsi, qword [aCannotOpenSFor]                ; argument "msgid" for method j_dcgettext, "cannot open %s for writing"
0000000000001c7a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c7f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c81         mov        r13, rax
0000000000001c84         call       j_dcgettext                                 ; dcgettext
0000000000001c89         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
0000000000001c8d         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001c90         mov        rcx, r13
0000000000001c93         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001c95         xor        eax, eax
0000000000001c97         call       j_error                                     ; error
0000000000001c9c         mov        byte [rsp+0x108+var_F8], 0x1
0000000000001ca1         jmp        loc_1af0

                     loc_1ca6:
0000000000001ca6         mov        r12, qword [rsp+0x108+var_100]              ; CODE XREF=main+1103, main+1115

                     loc_1cab:
0000000000001cab         test       ebx, ebx                                    ; CODE XREF=main+1719
0000000000001cad         jne        loc_1de7

                     loc_1cb3:
0000000000001cb3         test       r12, r12                                    ; CODE XREF=main+1875, main+2095, main+2182
0000000000001cb6         mov        eax, 0x0
0000000000001cbb         cmovs      r12, rax

                     loc_1cbf:
0000000000001cbf         mov        rsi, r12                                    ; argument "__length" for method j_ftruncate, CODE XREF=main+2168, main+2261
0000000000001cc2         mov        edi, r15d                                   ; argument "__fd" for method j_ftruncate
0000000000001cc5         mov        r14d, 0x1
0000000000001ccb         call       j_ftruncate                                 ; ftruncate
0000000000001cd0         add        eax, 0x1
0000000000001cd3         jne        loc_1b99

0000000000001cd9         mov        rsi, r13
0000000000001cdc         mov        edi, 0x4
0000000000001ce1         call       quotearg_style                              ; quotearg_style
0000000000001ce6         lea        rsi, qword [aFailedToTrunca]                ; argument "msgid" for method j_dcgettext, "failed to truncate %s at %ld bytes"
0000000000001ced         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cf2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cf4         mov        r14, rax
0000000000001cf7         call       j_dcgettext                                 ; dcgettext
0000000000001cfc         mov        qword [rsp+0x108+var_E0], rax
0000000000001d01         call       j___errno_location                          ; __errno_location
0000000000001d06         mov        rdx, qword [rsp+0x108+var_E0]               ; argument "__format" for method j_error
0000000000001d0b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001d0d         mov        rcx, r14
0000000000001d10         mov        r8, r12
0000000000001d13         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001d15         xor        eax, eax
0000000000001d17         xor        r14d, r14d
0000000000001d1a         call       j_error                                     ; error
0000000000001d1f         jmp        loc_1b99

                     loc_1d24:
0000000000001d24         mov        rdx, qword [rsp+0x108+var_E8]               ; argument "__stat_buf" for method j___fxstat, CODE XREF=main+1095
0000000000001d29         mov        esi, eax                                    ; argument "__fildes" for method j___fxstat
0000000000001d2b         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000001d30         call       j___fxstat                                  ; __fxstat
0000000000001d35         test       eax, eax
0000000000001d37         jne        loc_1b5a

0000000000001d3d         mov        r12, qword [rsp+0x108+var_A0]
0000000000001d42         movabs     rcx, 0x1fffffffffffffff
0000000000001d4c         lea        rax, qword [r12-1]
0000000000001d51         cmp        rax, rcx
0000000000001d54         mov        eax, 0x200
0000000000001d59         cmova      r12, rax
0000000000001d5d         movabs     rax, 0x8000000000000000
0000000000001d67         cqo
0000000000001d69         idiv       r12
0000000000001d6c         cmp        qword [rsp+0x108+var_100], rax
0000000000001d71         jl         loc_1e66

0000000000001d77         movabs     rax, 0x7fffffffffffffff
0000000000001d81         cqo
0000000000001d83         idiv       r12
0000000000001d86         cmp        qword [rsp+0x108+var_100], rax
0000000000001d8b         jg         loc_1e66

0000000000001d91         imul       r12, qword [rsp+0x108+var_100]
0000000000001d97         jmp        loc_1cab

                     loc_1d9c:
0000000000001d9c         mov        rsi, r13                                    ; CODE XREF=main+1219
0000000000001d9f         mov        edi, 0x4
0000000000001da4         call       quotearg_style                              ; quotearg_style
0000000000001da9         lea        rsi, qword [aFailedToCloseS]                ; argument "msgid" for method j_dcgettext, "failed to close %s"
0000000000001db0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001db5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001db7         mov        r13, rax
0000000000001dba         call       j_dcgettext                                 ; dcgettext
0000000000001dbf         mov        r12, rax
0000000000001dc2         call       j___errno_location                          ; __errno_location
0000000000001dc7         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001dc9         mov        rcx, r13
0000000000001dcc         mov        rdx, r12                                    ; argument "__format" for method j_error
0000000000001dcf         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001dd1         xor        eax, eax
0000000000001dd3         call       j_error                                     ; error
0000000000001dd8         mov        byte [rsp+0x108+var_F8], 0x1
0000000000001ddd         jmp        loc_1af0

                     loc_1de2:
0000000000001de2         mov        r12, qword [rsp+0x108+var_100]              ; CODE XREF=main+1140

                     loc_1de7:
0000000000001de7         mov        rax, qword [rsp+0x108+var_F0]               ; CODE XREF=main+1485
0000000000001dec         cmp        rax, 0xffffffffffffffff
0000000000001df0         je         loc_1eaa

                     loc_1df6:
0000000000001df6         cmp        ebx, 0x2                                    ; CODE XREF=main+2022, main+2205
0000000000001df9         je         loc_1f08

0000000000001dff         cmp        ebx, 0x3
0000000000001e02         je         loc_1f51

0000000000001e08         cmp        ebx, 0x4
0000000000001e0b         je         loc_1f5d

0000000000001e11         cmp        ebx, 0x5
0000000000001e14         je         loc_1fa4

0000000000001e1a         movabs     rdx, 0x7fffffffffffffff
0000000000001e24         sub        rdx, rax
0000000000001e27         cmp        r12, rdx
0000000000001e2a         jg         loc_1fdc

0000000000001e30         add        r12, rax
0000000000001e33         jmp        loc_1cb3

                     loc_1e38:
0000000000001e38         mov        rbx, qword [rsp+0x108+var_40]               ; CODE XREF=main+1051
0000000000001e40         xor        rbx, qword [fs:0x28]
0000000000001e49         movzx      eax, byte [rsp+0x108+var_F8]
0000000000001e4e         jne        loc_200f

0000000000001e54         add        rsp, 0xd8
0000000000001e5b         pop        rbx
0000000000001e5c         pop        rbp
0000000000001e5d         pop        r12
0000000000001e5f         pop        r13
0000000000001e61         pop        r14
0000000000001e63         pop        r15
0000000000001e65         ret
                        ; endp

                     loc_1e66:
0000000000001e66         mov        rsi, r13                                    ; CODE XREF=main+1681, main+1707
0000000000001e69         mov        edi, 0x4
0000000000001e6e         call       quotearg_style                              ; quotearg_style
0000000000001e73         lea        rsi, qword [aOverflowInLdLd]                ; argument "msgid" for method j_dcgettext, "overflow in %ld * %ld byte blocks for file %s"
0000000000001e7a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e7f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e81         mov        r14, rax
0000000000001e84         call       j_dcgettext                                 ; dcgettext
0000000000001e89         mov        rcx, qword [rsp+0x108+var_100]
0000000000001e8e         mov        r9, r14
0000000000001e91         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001e94         mov        r8, r12
0000000000001e97         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001e99         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001e9b         xor        eax, eax
0000000000001e9d         xor        r14d, r14d
0000000000001ea0         call       j_error                                     ; error
0000000000001ea5         jmp        loc_1b99

                     loc_1eaa:
0000000000001eaa         mov        eax, dword [rsp+0x108+var_C0]               ; CODE XREF=main+1808
0000000000001eae         and        eax, 0xd000
0000000000001eb3         cmp        eax, 0x8000
0000000000001eb8         jne        loc_1f6b

0000000000001ebe         mov        rax, qword [rsp+0x108+var_A8]
0000000000001ec3         test       rax, rax
0000000000001ec6         jns        loc_1df6

0000000000001ecc         mov        rsi, r13
0000000000001ecf         mov        edi, 0x4
0000000000001ed4         call       quotearg_style                              ; quotearg_style
0000000000001ed9         lea        rsi, qword [aSHasUnusableAp]                ; "%s has unusable, apparently negative size"
0000000000001ee0         mov        r12, rax
0000000000001ee3         mov        edx, 0x5

                     loc_1ee8:
0000000000001ee8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+2295, main+2328
0000000000001eea         xor        r14d, r14d
0000000000001eed         call       j_dcgettext                                 ; dcgettext
0000000000001ef2         mov        rcx, r12
0000000000001ef5         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001ef8         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001efa         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001efc         xor        eax, eax
0000000000001efe         call       j_error                                     ; error
0000000000001f03         jmp        loc_1b99

                     loc_1f08:
0000000000001f08         cmp        r12, rax                                    ; CODE XREF=main+1817
0000000000001f0b         cmovb      r12, rax
0000000000001f0f         jmp        loc_1cb3

                     loc_1f14:
0000000000001f14         test       r12b, r12b                                  ; CODE XREF=main+743
0000000000001f17         je         loc_2014

0000000000001f1d         test       r13d, r13d
0000000000001f20         jg         loc_1abc

                     loc_1f26:
0000000000001f26         lea        rsi, qword [aMissingFileOpe]                ; "missing file operand", CODE XREF=main+907
0000000000001f2d         mov        edx, 0x5

                     loc_1f32:
0000000000001f32         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+2516
0000000000001f34         call       j_dcgettext                                 ; dcgettext
0000000000001f39         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001f3b         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001f3e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001f40         xor        eax, eax
0000000000001f42         call       j_error                                     ; error
0000000000001f47         mov        edi, 0x1                                    ; argument #1 for method usage
0000000000001f4c         call       usage                                       ; usage

                     loc_1f51:
0000000000001f51         cmp        r12, rax                                    ; CODE XREF=main+1826
0000000000001f54         cmova      r12, rax
0000000000001f58         jmp        loc_1cbf

                     loc_1f5d:
0000000000001f5d         xor        edx, edx                                    ; CODE XREF=main+1835
0000000000001f5f         div        r12
0000000000001f62         imul       r12, rax
0000000000001f66         jmp        loc_1cb3

                     loc_1f6b:
0000000000001f6b         xor        esi, esi                                    ; argument "__offset" for method j_lseek, CODE XREF=main+2008
0000000000001f6d         mov        edx, 0x2                                    ; argument "__whence" for method j_lseek
0000000000001f72         mov        edi, r15d                                   ; argument "__fd" for method j_lseek
0000000000001f75         call       j_lseek                                     ; lseek
0000000000001f7a         test       rax, rax
0000000000001f7d         jns        loc_1df6

0000000000001f83         mov        rsi, r13
0000000000001f86         mov        edi, 0x4
0000000000001f8b         call       quotearg_style                              ; quotearg_style
0000000000001f90         mov        edx, 0x5
0000000000001f95         mov        r12, rax
0000000000001f98         lea        rsi, qword [aCannotGetTheSi]                ; "cannot get the size of %s"
0000000000001f9f         jmp        loc_1b76

                     loc_1fa4:
0000000000001fa4         lea        rax, qword [r12+rax-1]                      ; CODE XREF=main+1844
0000000000001fa9         xor        edx, edx
0000000000001fab         div        r12
0000000000001fae         imul       r12, rax
0000000000001fb2         test       r12, r12
0000000000001fb5         jns        loc_1cbf

0000000000001fbb         mov        rsi, r13
0000000000001fbe         mov        edi, 0x4
0000000000001fc3         call       quotearg_style                              ; quotearg_style
0000000000001fc8         mov        edx, 0x5
0000000000001fcd         mov        r12, rax
0000000000001fd0         lea        rsi, qword [aOverflowRoundi]                ; "overflow rounding up size of file %s"
0000000000001fd7         jmp        loc_1ee8

                     loc_1fdc:
0000000000001fdc         mov        rsi, r13                                    ; CODE XREF=main+1866
0000000000001fdf         mov        edi, 0x4
0000000000001fe4         call       quotearg_style                              ; quotearg_style
0000000000001fe9         mov        edx, 0x5
0000000000001fee         mov        r12, rax
0000000000001ff1         lea        rsi, qword [aOverflowExtend]                ; "overflow extending size of file %s"
0000000000001ff8         jmp        loc_1ee8

                     loc_1ffd:
0000000000001ffd         cmp        eax, 0xffffff7e                             ; CODE XREF=main+213
0000000000002002         jne        loc_1792

0000000000002008         xor        edi, edi                                    ; argument #1 for method usage
000000000000200a         call       usage                                       ; usage

                     loc_200f:
000000000000200f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1902
                        ; endp

                     loc_2014:
0000000000002014         lea        rsi, qword [aReference]                     ; "--reference", CODE XREF=main+2103
000000000000201b         mov        edi, 0x1
0000000000002020         call       quote_n                                     ; quote_n
0000000000002025         lea        rsi, qword [aSize]                          ; "--size"
000000000000202c         xor        edi, edi
000000000000202e         mov        rbp, rax
0000000000002031         call       quote_n                                     ; quote_n
0000000000002036         mov        edx, 0x5
000000000000203b         mov        rbx, rax
000000000000203e         lea        rsi, qword [aYouMustSpecify_5f50]           ; "you must specify either %s or %s"
0000000000002045         jmp        loc_1a07

                     loc_204a:
000000000000204a         lea        rsi, qword [aDivisionByZero]                ; argument "msgid" for method j_dcgettext, "division by zero", CODE XREF=main+659
0000000000002051         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002056         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002058         call       j_dcgettext                                 ; dcgettext
000000000000205d         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000205f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002062         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002067         xor        eax, eax
0000000000002069         call       j_error                                     ; error

                     loc_206e:
000000000000206e         mov        rsi, r14                                    ; CODE XREF=main+933
0000000000002071         mov        edi, 0x4
0000000000002076         call       quotearg_style                              ; quotearg_style
000000000000207b         lea        rsi, qword [aCannotStatS]                   ; argument "msgid" for method j_dcgettext, "cannot stat %s"
0000000000002082         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002087         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002089         mov        rbp, rax
000000000000208c         call       j_dcgettext                                 ; dcgettext
0000000000002091         mov        rbx, rax
0000000000002094         call       j___errno_location                          ; __errno_location
0000000000002099         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000209b         mov        rcx, rbp
000000000000209e         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000020a1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000020a6         xor        eax, eax
00000000000020a8         call       j_error                                     ; error

                     loc_20ad:
00000000000020ad         lea        rsi, qword [aMultipleRelati]                ; "multiple relative modifiers specified", CODE XREF=main+446
00000000000020b4         jmp        loc_1f32
00000000000020b9         align      64                                          ; End of unwind block (FDE at 0x6d88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
00000000000020c0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x6cec)
00000000000020c2         mov        r9, rdx
00000000000020c5         pop        rsi
00000000000020c6         mov        rdx, rsp
00000000000020c9         and        rsp, 0xfffffffffffffff0
00000000000020cd         push       rax
00000000000020ce         push       rsp
00000000000020cf         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000020d6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000020dd         lea        rdi, qword [main]                           ; main
00000000000020e4         call       qword [qword_207fd8+8]                      ; 0x207fe0
00000000000020ea         hlt
                        ; endp
00000000000020eb         align      16                                          ; End of unwind block (FDE at 0x6cec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
00000000000020f0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
00000000000020f7         push       rbp
00000000000020f8         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000020ff         cmp        rax, rdi
0000000000002102         mov        rbp, rsp
0000000000002105         je         loc_2120

0000000000002107         mov        rax, qword [qword_207fd8]                   ; qword_207fd8
000000000000210e         test       rax, rax
0000000000002111         je         loc_2120

0000000000002113         pop        rbp
0000000000002114         jmp        rax
                        ; endp
0000000000002116         align      32

                     loc_2120:
0000000000002120         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002121         ret
                        ; endp
0000000000002122         align      16

                     register_tm_clones:
0000000000002130         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002137         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000213e         push       rbp
000000000000213f         sub        rsi, rdi
0000000000002142         mov        rbp, rsp
0000000000002145         sar        rsi, 0x3
0000000000002149         mov        rax, rsi
000000000000214c         shr        rax, 0x3f
0000000000002150         add        rsi, rax
0000000000002153         sar        rsi, 0x1
0000000000002156         je         loc_2170

0000000000002158         mov        rax, qword [qword_207ff0]                   ; qword_207ff0
000000000000215f         test       rax, rax
0000000000002162         je         loc_2170

0000000000002164         pop        rbp
0000000000002165         jmp        rax
                        ; endp
0000000000002167         align      16

                     loc_2170:
0000000000002170         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002171         ret
                        ; endp
0000000000002172         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002180         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002187         jne        loc_21b8

0000000000002189         cmp        qword [qword_207ff8], 0x0                   ; qword_207ff8
0000000000002191         push       rbp
0000000000002192         mov        rbp, rsp
0000000000002195         je         loc_21a3

0000000000002197         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000219e         call       j_qword_207ff8                              ; qword_207ff8

                     loc_21a3:
00000000000021a3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
00000000000021a8         mov        byte [completed.7697], 0x1                  ; completed.7697
00000000000021af         pop        rbp
00000000000021b0         ret
                        ; endp
00000000000021b1         align      8

                     loc_21b8:
00000000000021b8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
00000000000021ba         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
00000000000021c0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
00000000000021c1         mov        rbp, rsp
00000000000021c4         pop        rbp
00000000000021c5         jmp        register_tm_clones                          ; register_tm_clones
00000000000021ca         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000021d0         push       r13                                         ; Begin of unwind block (FDE at 0x6d5c), CODE XREF=main+183, main+2156, main+2346
00000000000021d2         push       r12
00000000000021d4         mov        edx, 0x5
00000000000021d9         push       rbp
00000000000021da         push       rbx
00000000000021db         mov        ebp, edi
00000000000021dd         sub        rsp, 0x88
00000000000021e4         mov        rbx, qword [program_name]                   ; program_name
00000000000021eb         mov        rax, qword [fs:0x28]
00000000000021f4         mov        qword [rsp+0xa8+var_30], rax
00000000000021f9         xor        eax, eax
00000000000021fb         test       edi, edi
00000000000021fd         je         loc_222d

00000000000021ff         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002206         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002208         call       j_dcgettext                                 ; dcgettext
000000000000220d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002214         mov        rdx, rax
0000000000002217         mov        rcx, rbx
000000000000221a         mov        esi, 0x1
000000000000221f         xor        eax, eax
0000000000002221         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2226:
0000000000002226         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+854
0000000000002228         call       j_exit                                      ; exit
                        ; endp

                     loc_222d:
000000000000222d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s OPTION... FILE...\\n", CODE XREF=usage+45
0000000000002234         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002236         call       j_dcgettext                                 ; dcgettext
000000000000223b         mov        rdx, rbx
000000000000223e         mov        rsi, rax
0000000000002241         mov        edi, 0x1
0000000000002246         xor        eax, eax
0000000000002248         call       j___printf_chk                              ; __printf_chk
000000000000224d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002254         lea        rsi, qword [aShrinkOrExtend]                ; argument "msgid" for method j_dcgettext, "Shrink or extend the size of each FILE to the specified size\\n\\nA FILE argument that does not exist is created.\\n\\nIf a FILE is larger than the specified size, the extra data is lost.\\nIf a FILE is shorter, it is extended and the extended part (hole)\\nreads as z…"
000000000000225b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002260         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002262         call       j_dcgettext                                 ; dcgettext
0000000000002267         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000226a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000226d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002272         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002279         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000002280         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002285         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002287         call       j_dcgettext                                 ; dcgettext
000000000000228c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000228f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002292         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002297         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000229e         lea        rsi, qword [aCNocreateDoNot]                ; argument "msgid" for method j_dcgettext, "  -c, --no-create        do not create any files\\n"
00000000000022a5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022aa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022ac         call       j_dcgettext                                 ; dcgettext
00000000000022b1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000022b4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000022b7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000022bc         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000022c3         lea        rsi, qword [aOIoblocksTreat]                ; argument "msgid" for method j_dcgettext, "  -o, --io-blocks        treat SIZE as number of IO blocks instead of bytes\\n"
00000000000022ca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022cf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022d1         call       j_dcgettext                                 ; dcgettext
00000000000022d6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000022d9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000022dc         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000022e1         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000022e8         lea        rsi, qword [aRReferencerfil]                ; argument "msgid" for method j_dcgettext, "  -r, --reference=RFILE  base size on RFILE\\n  -s, --size=SIZE        set or adjust the file size by SIZE bytes\\n"
00000000000022ef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022f4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022f6         call       j_dcgettext                                 ; dcgettext
00000000000022fb         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000022fe         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002301         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002306         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000230d         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000002314         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002319         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000231b         call       j_dcgettext                                 ; dcgettext
0000000000002320         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002323         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002326         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000232b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002332         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002339         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000233e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002340         call       j_dcgettext                                 ; dcgettext
0000000000002345         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002348         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000234b         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002350         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002357         lea        rsi, qword [aNtheSizeArgume]                ; argument "msgid" for method j_dcgettext, "\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\\n"
000000000000235e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002363         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002365         call       j_dcgettext                                 ; dcgettext
000000000000236a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000236d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002370         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002375         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000237c         lea        rsi, qword [aNsizeMayAlsoBe]                ; argument "msgid" for method j_dcgettext, "\\nSIZE may also be prefixed by one of the following modifying characters:\\n'+' extend by, '-' reduce by, '<' at most, '>' at least,\\n'/' round down to multiple of, '%' round up to multiple of.\\n"
0000000000002383         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002388         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000238a         call       j_dcgettext                                 ; dcgettext
000000000000238f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002392         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002395         lea        rbx, qword [aTruncate]                      ; "truncate"
000000000000239c         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000023a1         lea        rax, qword [aUsageSOptionFi+29]             ; 0x584a
00000000000023a8         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000023af         mov        qword [rsp+0xa8+var_48], 0x0
00000000000023b8         mov        qword [rsp+0xa8+var_40], 0x0
00000000000023c1         mov        rdx, rsp
00000000000023c4         mov        qword [rsp+0xa8+var_A8], rax
00000000000023c8         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000023cf         mov        qword [rsp+0xa8+var_78], rcx
00000000000023d4         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000023db         mov        qword [rsp+0xa8+var_A0], rax
00000000000023e0         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000023e7         mov        qword [rsp+0xa8+var_68], rcx
00000000000023ec         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000023f3         mov        qword [rsp+0xa8+var_98], rax
00000000000023f8         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000023ff         mov        qword [rsp+0xa8+var_58], rcx
0000000000002404         mov        qword [rsp+0xa8+var_90], rax
0000000000002409         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002410         mov        qword [rsp+0xa8+var_88], rax
0000000000002415         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000241c         mov        qword [rsp+0xa8+var_80], rax
0000000000002421         mov        qword [rsp+0xa8+var_70], rax
0000000000002426         mov        qword [rsp+0xa8+var_60], rax
000000000000242b         mov        qword [rsp+0xa8+var_50], rax

                     loc_2430:
0000000000002430         add        rdx, 0x10                                   ; CODE XREF=usage+637
0000000000002434         mov        rdi, qword [rdx]
0000000000002437         test       rdi, rdi
000000000000243a         je         loc_244f

000000000000243c         mov        ecx, 0x9
0000000000002441         mov        rsi, rbx
0000000000002444         rep  cmpsb byte [rsi], byte [rdi]
0000000000002446         seta       al
0000000000002449         sbb        al, 0x0
000000000000244b         test       al, al
000000000000244d         jne        loc_2430

                     loc_244f:
000000000000244f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+618
0000000000002453         xor        edi, edi
0000000000002455         mov        edx, 0x5
000000000000245a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002461         test       r12, r12
0000000000002464         je         loc_252b

000000000000246a         call       j_dcgettext                                 ; dcgettext
000000000000246f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002476         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x58c0
000000000000247d         mov        rsi, rax
0000000000002480         mov        edi, 0x1
0000000000002485         xor        eax, eax
0000000000002487         call       j___printf_chk                              ; __printf_chk
000000000000248c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000248e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002493         call       j_setlocale                                 ; setlocale
0000000000002498         test       rax, rax
000000000000249b         je         loc_24b9

000000000000249d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x58ce
00000000000024a4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000024a9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000024ac         call       j_strncmp                                   ; strncmp
00000000000024b1         test       eax, eax
00000000000024b3         jne        loc_25c0

                     loc_24b9:
00000000000024b9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+715, usage+1045
00000000000024c0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024c2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024c7         call       j_dcgettext                                 ; dcgettext
00000000000024cc         lea        rcx, qword [aTruncate]                      ; "truncate"
00000000000024d3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000024da         mov        rsi, rax
00000000000024dd         mov        edi, 0x1
00000000000024e2         xor        eax, eax
00000000000024e4         call       j___printf_chk                              ; __printf_chk
00000000000024e9         cmp        r12, rbx
00000000000024ec         lea        rcx, qword [aMulticallInvoc+10]             ; 0x5866
00000000000024f3         lea        rbx, qword [aUsageSOptionFi+28]             ; 0x5849
00000000000024fa         cmove      rbx, rcx

                     loc_24fe:
00000000000024fe         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+996
0000000000002505         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002507         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000250c         call       j_dcgettext                                 ; dcgettext
0000000000002511         mov        rcx, rbx
0000000000002514         mov        rsi, rax
0000000000002517         mov        rdx, r12
000000000000251a         mov        edi, 0x1
000000000000251f         xor        eax, eax
0000000000002521         call       j___printf_chk                              ; __printf_chk
0000000000002526         jmp        loc_2226

                     loc_252b:
000000000000252b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+660
0000000000002530         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002537         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x58c0
000000000000253e         mov        rsi, rax
0000000000002541         mov        edi, 0x1
0000000000002546         xor        eax, eax
0000000000002548         call       j___printf_chk                              ; __printf_chk
000000000000254d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000254f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002554         call       j_setlocale                                 ; setlocale
0000000000002559         test       rax, rax
000000000000255c         je         loc_2576

000000000000255e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x58ce
0000000000002565         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000256a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000256d         call       j_strncmp                                   ; strncmp
0000000000002572         test       eax, eax
0000000000002574         jne        loc_25b9

                     loc_2576:
0000000000002576         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+908
000000000000257d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002582         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002584         lea        r12, qword [aTruncate]                      ; "truncate"
000000000000258b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x5866
0000000000002592         call       j_dcgettext                                 ; dcgettext
0000000000002597         lea        rcx, qword [aTruncate]                      ; "truncate"
000000000000259e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000025a5         mov        rsi, rax
00000000000025a8         mov        edi, 0x1
00000000000025ad         xor        eax, eax
00000000000025af         call       j___printf_chk                              ; __printf_chk
00000000000025b4         jmp        loc_24fe

                     loc_25b9:
00000000000025b9         lea        r12, qword [aTruncate]                      ; "truncate", CODE XREF=usage+932

                     loc_25c0:
00000000000025c0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+739
00000000000025c7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000025ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025d0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025d5         call       j_dcgettext                                 ; dcgettext
00000000000025da         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000025dd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000025e0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000025e5         jmp        loc_24b9
00000000000025ea         align      16                                          ; End of unwind block (FDE at 0x6d5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
00000000000025f0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x6ddc), file_name
00000000000025f7         ret
                        ; endp
00000000000025f8         align      512                                         ; End of unwind block (FDE at 0x6ddc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002600         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x6df0), ignore_EPIPE
0000000000002607         ret
                        ; endp
0000000000002608         align      16                                          ; End of unwind block (FDE at 0x6df0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002610         push       rbp                                         ; Begin of unwind block (FDE at 0x6e04), DATA XREF=main+103
0000000000002611         push       rbx
0000000000002612         sub        rsp, 0x8
0000000000002616         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000261d         call       close_stream                                ; close_stream
0000000000002622         test       eax, eax
0000000000002624         je         loc_263c

0000000000002626         call       j___errno_location                          ; __errno_location
000000000000262b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002632         mov        rbx, rax
0000000000002635         je         loc_2653

0000000000002637         cmp        dword [rax], 0x20
000000000000263a         jne        loc_2653

                     loc_263c:
000000000000263c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002643         call       close_stream                                ; close_stream
0000000000002648         test       eax, eax
000000000000264a         jne        loc_2692

000000000000264c         add        rsp, 0x8
0000000000002650         pop        rbx
0000000000002651         pop        rbp
0000000000002652         ret
                        ; endp

                     loc_2653:
0000000000002653         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000265a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000265c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002661         call       j_dcgettext                                 ; dcgettext
0000000000002666         mov        rdi, qword [file_name]                      ; file_name
000000000000266d         mov        rbp, rax
0000000000002670         test       rdi, rdi
0000000000002673         je         loc_269d

0000000000002675         call       quotearg_colon                              ; quotearg_colon
000000000000267a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000267c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002683         mov        rcx, rax
0000000000002686         mov        r8, rbp
0000000000002689         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000268b         xor        eax, eax
000000000000268d         call       j_error                                     ; error

                     loc_2692:
0000000000002692         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002698         call       j__exit                                     ; _exit
                        ; endp

                     loc_269d:
000000000000269d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000269f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x60a8
00000000000026a6         mov        rcx, rax
00000000000026a9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000026ab         xor        eax, eax
00000000000026ad         call       j_error                                     ; error
00000000000026b2         jmp        loc_2692
00000000000026b4         align      64                                          ; End of unwind block (FDE at 0x6e04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
00000000000026c0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6e34), CODE XREF=main+50
00000000000026c3         push       rbx
00000000000026c4         je         loc_273d

00000000000026c6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
00000000000026cb         mov        rbx, rdi
00000000000026ce         call       j_strrchr                                   ; strrchr
00000000000026d3         test       rax, rax
00000000000026d6         je         loc_272d

00000000000026d8         lea        r8, qword [rax+1]
00000000000026dc         mov        rdx, r8
00000000000026df         sub        rdx, rbx
00000000000026e2         cmp        rdx, 0x6
00000000000026e6         jle        loc_272d

00000000000026e8         lea        rsi, qword [rax-6]
00000000000026ec         lea        rdi, qword [aLibs]                          ; "/.libs/"
00000000000026f3         mov        ecx, 0x7
00000000000026f8         rep  cmpsb byte [rsi], byte [rdi]
00000000000026fa         seta       dl
00000000000026fd         sbb        dl, 0x0
0000000000002700         test       dl, dl
0000000000002702         jne        loc_272d

0000000000002704         lea        rdi, qword [aLibs+8]                        ; 0x60f0
000000000000270b         mov        ecx, 0x3
0000000000002710         mov        rsi, r8
0000000000002713         mov        rbx, r8
0000000000002716         rep  cmpsb byte [rsi], byte [rdi]
0000000000002718         seta       dl
000000000000271b         sbb        dl, 0x0
000000000000271e         test       dl, dl
0000000000002720         jne        loc_272d

0000000000002722         lea        rbx, qword [rax+4]
0000000000002726         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_272d:
000000000000272d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002734         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000273b         pop        rbx
000000000000273c         ret
                        ; endp

                     loc_273d:
000000000000273d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002744         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000274b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002750         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002755         call       j_fwrite                                    ; fwrite
000000000000275a         call       j_abort                                     ; abort
                        ; endp
000000000000275f         align      32                                          ; End of unwind block (FDE at 0x6e34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002760         push       rbp                                         ; Begin of unwind block (FDE at 0x6e54), CODE XREF=sub_2f90+2597, sub_2f90+2619
0000000000002761         push       rbx
0000000000002762         mov        rbp, rdi
0000000000002765         mov        ebx, esi
0000000000002767         sub        rsp, 0x8
000000000000276b         call       locale_charset                              ; locale_charset
0000000000002770         movzx      edx, byte [rax]
0000000000002773         and        edx, 0xffffffdf
0000000000002776         cmp        dl, 0x55
0000000000002779         je         loc_27f0

000000000000277b         cmp        dl, 0x47
000000000000277e         je         loc_27a0

                     loc_2780:
0000000000002780         lea        rax, qword [aLibs+27]                       ; 0x6103, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002787         lea        rdx, qword [aLibs+29]                       ; 0x6105
000000000000278e         cmp        ebx, 0x9
0000000000002791         cmovne     rax, rdx
0000000000002795         add        rsp, 0x8
0000000000002799         pop        rbx
000000000000279a         pop        rbp
000000000000279b         ret
                        ; endp
000000000000279c         align      32

                     loc_27a0:
00000000000027a0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
00000000000027a4         and        edx, 0xffffffdf
00000000000027a7         cmp        dl, 0x42
00000000000027aa         jne        loc_2780

00000000000027ac         cmp        byte [rax+2], 0x31
00000000000027b0         jne        loc_2780

00000000000027b2         cmp        byte [rax+3], 0x38
00000000000027b6         jne        loc_2780

00000000000027b8         cmp        byte [rax+4], 0x30
00000000000027bc         jne        loc_2780

00000000000027be         cmp        byte [rax+5], 0x33
00000000000027c2         jne        loc_2780

00000000000027c4         cmp        byte [rax+6], 0x30
00000000000027c8         jne        loc_2780

00000000000027ca         cmp        byte [rax+7], 0x0
00000000000027ce         jne        loc_2780

00000000000027d0         cmp        byte [rbp], 0x60
00000000000027d4         lea        rax, qword [aLibs+20]                       ; 0x60fc
00000000000027db         lea        rdx, qword [aLibs+24]                       ; 0x6100
00000000000027e2         cmovne     rax, rdx
00000000000027e6         add        rsp, 0x8
00000000000027ea         pop        rbx
00000000000027eb         pop        rbp
00000000000027ec         ret
                        ; endp
00000000000027ed         align      16

                     loc_27f0:
00000000000027f0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
00000000000027f4         and        edx, 0xffffffdf
00000000000027f7         cmp        dl, 0x54
00000000000027fa         jne        loc_2780

00000000000027fc         movzx      edx, byte [rax+2]
0000000000002800         and        edx, 0xffffffdf
0000000000002803         cmp        dl, 0x46
0000000000002806         jne        loc_2780

000000000000280c         cmp        byte [rax+3], 0x2d
0000000000002810         jne        loc_2780

0000000000002816         cmp        byte [rax+4], 0x38
000000000000281a         jne        loc_2780

0000000000002820         cmp        byte [rax+5], 0x0
0000000000002824         jne        loc_2780

000000000000282a         cmp        byte [rbp], 0x60
000000000000282e         lea        rax, qword [aLibs+12]                       ; 0x60f4
0000000000002835         lea        rdx, qword [aLibs+16]                       ; 0x60f8
000000000000283c         cmovne     rax, rdx
0000000000002840         add        rsp, 0x8
0000000000002844         pop        rbx
0000000000002845         pop        rbp
0000000000002846         ret
                        ; endp
0000000000002847         align      16                                          ; End of unwind block (FDE at 0x6e54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002850         push       r15                                         ; Begin of unwind block (FDE at 0x6e98), CODE XREF=sub_2f90+1165, sub_2f90+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002852         push       r14
0000000000002854         mov        r15d, r8d
0000000000002857         push       r13
0000000000002859         push       r12
000000000000285b         mov        r14, rdi
000000000000285e         push       rbp
000000000000285f         push       rbx
0000000000002860         mov        ebx, r9d
0000000000002863         mov        r13, rsi
0000000000002866         mov        rbp, rcx
0000000000002869         and        ebx, 0x2
000000000000286c         sub        rsp, 0xb8
0000000000002873         mov        rax, qword [rsp+0xe8+arg_0]
000000000000287b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002880         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002885         mov        dword [rsp+0xe8+var_70], r9d
000000000000288a         mov        qword [rsp+0xe8+var_C8], rax
000000000000288f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002897         mov        qword [rsp+0xe8+var_80], rax
000000000000289c         mov        rax, qword [rsp+0xe8+arg_10]
00000000000028a4         mov        qword [rsp+0xe8+var_88], rax
00000000000028a9         mov        rax, qword [fs:0x28]
00000000000028b2         mov        qword [rsp+0xe8+var_40], rax
00000000000028ba         xor        eax, eax
00000000000028bc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
00000000000028c1         cmp        r15d, 0xa
00000000000028c5         mov        qword [rsp+0xe8+var_90], rax
00000000000028ca         ja         loc_3a7f

00000000000028d0         lea        rcx, qword [switch_table_6160]              ; switch_table_6160
00000000000028d7         mov        edx, r15d
00000000000028da         movsxd     rax, dword [rcx+rdx*4]
00000000000028de         add        rax, rcx
00000000000028e1         jmp        rax                                         ; switch statement using table at 0x6160, with 11 cases, 0x28e3,0x34b4,0x3510,0x3565,0x35aa,0x35e4,0x368a,0x36c4,0x38b8

                     loc_28e3:
00000000000028e3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_2f90+1318
00000000000028e8         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000028ed         xor        r12d, r12d
00000000000028f0         mov        qword [rsp+0xe8+var_98], 0x0
00000000000028f9         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000028fe         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2903:
0000000000002903         lea        rax, qword [aLibs+29]                       ; 0x6105, CODE XREF=sub_2f90+1876
000000000000290a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002913         xor        r15d, r15d
0000000000002916         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000291e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2923:
0000000000002923         xor        r11d, r11d                                  ; CODE XREF=sub_2f90+180, sub_2f90+1400, sub_2f90+1488, sub_2f90+1557, sub_2f90+1615, sub_2f90+1781, sub_2f90+1839, sub_2f90+2408, sub_2f90+2485
0000000000002926         mov        rax, rbp
0000000000002929         mov        r8d, r12d
000000000000292c         mov        rbp, r11
000000000000292f         mov        r11, rax
0000000000002932         nop        word [rax+rax]

                     loc_2938:
0000000000002938         cmp        r11, rbp                                    ; CODE XREF=sub_2a40+194
000000000000293b         setne      r12b
000000000000293f         cmp        r11, 0xffffffffffffffff
0000000000002943         jne        loc_2952

0000000000002945         mov        rax, qword [rsp+0xe8+var_D8]
000000000000294a         cmp        byte [rax+rbp], 0x0
000000000000294e         setne      r12b

                     loc_2952:
0000000000002952         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002955         je         loc_2fb0

000000000000295b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002960         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002965         lea        r9, qword [rdi+rbp]
0000000000002969         setne      al
000000000000296c         and        al, byte [rsp+0xe8+var_DB]
0000000000002970         mov        r10d, eax
0000000000002973         je         loc_2a20

0000000000002979         mov        rax, qword [rsp+0xe8+var_D0]
000000000000297e         test       rax, rax
0000000000002981         je         loc_2db0

0000000000002987         cmp        r11, 0xffffffffffffffff
000000000000298b         lea        rbx, qword [rbp+rax]
0000000000002990         jne        loc_29c0

0000000000002992         cmp        rax, 0x1
0000000000002996         jbe        loc_29c0

0000000000002998         mov        byte [rsp+0xe8+var_B0], r8b
000000000000299d         mov        byte [rsp+0xe8+var_B8], r10b
00000000000029a2         mov        qword [rsp+0xe8+var_C0], r9
00000000000029a7         call       j_strlen                                    ; strlen
00000000000029ac         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000029b2         movzx      r10d, byte [rsp+0xe8+var_B8]
00000000000029b8         mov        r11, rax
00000000000029bb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_29c0:
00000000000029c0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
00000000000029c3         mov        byte [rsp+0xe8+var_C0], r10b
00000000000029c8         ja         loc_2f80

00000000000029ce         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
00000000000029d3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
00000000000029d8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
00000000000029db         mov        qword [rsp+0xe8+var_A8], r11
00000000000029e0         mov        byte [rsp+0xe8+var_B0], r8b
00000000000029e5         mov        qword [rsp+0xe8+var_B8], r9
00000000000029ea         call       j_memcmp                                    ; memcmp
00000000000029ef         test       eax, eax
00000000000029f1         mov        r9, qword [rsp+0xe8+var_B8]
00000000000029f6         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000029fc         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002a01         jne        loc_2f80

0000000000002a07         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002a0c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002a12         jne        loc_3995

0000000000002a18         nop        dword [rax+rax]

                     loc_2a20:
0000000000002a20         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_2f70+19
0000000000002a24         cmp        bl, 0x7e
0000000000002a27         ja         loc_2d48

0000000000002a2d         lea        rcx, qword [switch_table_6160+44]           ; 0x618c
0000000000002a34         movzx      edx, bl
0000000000002a37         movsxd     rax, dword [rcx+rdx*4]
0000000000002a3b         add        rax, rcx
0000000000002a3e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2a40:
0000000000002a40         xor        r10d, r10d
0000000000002a43         cmp        r11, 0x1
0000000000002a47         setne      al
0000000000002a4a         cmp        r11, 0xffffffffffffffff
0000000000002a4e         jne        loc_2a5c

0000000000002a50         mov        rax, qword [rsp+arg_8]
0000000000002a55         cmp        byte [rax+1], 0x0
0000000000002a59         setne      al

                     loc_2a5c:
0000000000002a5c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2a40+14
0000000000002a61         sete       dl
0000000000002a64         test       al, al
0000000000002a66         je         loc_2cb8

                     loc_2a6c:
0000000000002a6c         xor        r12d, r12d                                  ; CODE XREF=sub_2cb0+11
0000000000002a6f         xor        eax, eax
0000000000002a71         nop        dword [rax]
                        ; endp

                     loc_2a78:
0000000000002a78         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_2c60+50, sub_2d30+119
0000000000002a7d         jne        loc_2b92

0000000000002a83         test       dl, dl
0000000000002a85         jne        loc_2b92

                     loc_2a8b:
0000000000002a8b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2b40+87
0000000000002a90         test       rsi, rsi
0000000000002a93         je         loc_2aa9

0000000000002a95         mov        edx, ebx
0000000000002a97         shr        dl, 0x5
0000000000002a9a         movzx      edx, dl
0000000000002a9d         mov        edx, dword [rsi+rdx*4]
0000000000002aa0         bt         edx, ebx
0000000000002aa3         jb         loc_2bf3

                     loc_2aa9:
0000000000002aa9         test       r10b, r10b                                  ; CODE XREF=sub_2a40+83, sub_2b40+93
0000000000002aac         jne        loc_2bf3

0000000000002ab2         xor        eax, 0x1
0000000000002ab5         add        rbp, 0x1
0000000000002ab9         and        eax, r8d

                     loc_2abc:
0000000000002abc         test       al, al                                      ; CODE XREF=sub_2f90+936
0000000000002abe         je         loc_2ae0

0000000000002ac0         cmp        r13, r15
0000000000002ac3         jbe        loc_2aca

0000000000002ac5         mov        byte [r14+r15], 0x27

                     loc_2aca:
0000000000002aca         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2a40+131
0000000000002ace         cmp        r13, rax
0000000000002ad1         jbe        loc_2ad9

0000000000002ad3         mov        byte [r14+r15+1], 0x27

                     loc_2ad9:
0000000000002ad9         add        r15, 0x2                                    ; CODE XREF=sub_2a40+145
0000000000002add         xor        r8d, r8d

                     loc_2ae0:
0000000000002ae0         cmp        r15, r13                                    ; CODE XREF=sub_2a40+126, sub_2b40+275, sub_2f90+869
0000000000002ae3         jae        loc_2ae9

0000000000002ae5         mov        byte [r14+r15], bl

                     loc_2ae9:
0000000000002ae9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2a40+163
0000000000002aee         add        r15, 0x1
0000000000002af2         mov        eax, 0x0
0000000000002af7         test       r12b, r12b
0000000000002afa         cmove      edi, eax
0000000000002afd         mov        byte [rsp+0xe8+var_DA], dil
0000000000002b02         jmp        loc_2938
0000000000002b07         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2b10:
0000000000002b10         xor        r10d, r10d
0000000000002b13         mov        eax, dword [rsp+arg_0]
0000000000002b17         cmp        eax, 0x2
0000000000002b1a         je         loc_30d8

0000000000002b20         cmp        eax, 0x5
0000000000002b23         je         loc_3098

0000000000002b29         cmp        eax, 0x2
0000000000002b2c         mov        ebx, 0x3f
0000000000002b31         sete       dl
0000000000002b34         xor        r12d, r12d
0000000000002b37         xor        eax, eax
0000000000002b39         jmp        sub_2a40+56
                        ; endp
0000000000002b3e         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2b40:
0000000000002b40         xor        r10d, r10d
0000000000002b43         cmp        dword [rsp+arg_0], 0x2
0000000000002b48         je         loc_3050

0000000000002b4e         mov        byte [rsp+arg_74], r12b
0000000000002b53         xor        edx, edx
0000000000002b55         xor        eax, eax
0000000000002b57         mov        ebx, 0x27
0000000000002b5c         jmp        sub_2a40+56
                        ; endp
0000000000002b61         nop        dword [rax]
0000000000002b68         mov        edx, 0x9
0000000000002b6d         mov        ebx, 0x74

                     loc_2b72:
0000000000002b72         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2d00+10, sub_2df0+37, sub_2f30+53
0000000000002b77         sete       al
0000000000002b7a         and        al, byte [rsp+arg_7]
0000000000002b7e         jne        sub_2cb0+30

0000000000002b84         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2b40+114
0000000000002b89         jne        loc_2bf0

                     loc_2b8b:
0000000000002b8b         mov        ebx, edx                                    ; CODE XREF=sub_2c60+18
0000000000002b8d         xor        r12d, r12d
0000000000002b90         xor        eax, eax
                        ; endp

                     loc_2b92:
0000000000002b92         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2a40+61, sub_2a40+69
0000000000002b97         jne        loc_2a8b

0000000000002b9d         jmp        loc_2aa9
0000000000002ba2         nop        word [rax+rax]
0000000000002ba8         mov        edx, 0x8
0000000000002bad         mov        ebx, 0x62
0000000000002bb2         jmp        sub_2b40+68
0000000000002bb4         nop        dword [rax]
0000000000002bb8         cmp        dword [rsp+8], 0x2
0000000000002bbd         je         sub_2f90                                    ; sub_2f90
0000000000002bc3         cmp        byte [rsp+0xd], 0x0
0000000000002bc8         je         sub_2dd0+16

                     loc_2bce:
0000000000002bce         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2dd0+8
0000000000002bd3         je         loc_2de0

0000000000002bd9         cmp        qword [rsp+arg_10], 0x0
0000000000002bdf         jne        loc_2f9b

0000000000002be5         mov        ebx, 0x5c
0000000000002bea         nop        word [rax+rax]
                        ; endp

                     loc_2bf0:
0000000000002bf0         xor        r12d, r12d                                  ; CODE XREF=sub_2b40+73, sub_2f30+29
                        ; endp

                     loc_2bf3:
0000000000002bf3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2a40+99, sub_2a40+108
0000000000002bf8         sete       dl
0000000000002bfb         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002c00         mov        eax, edx
0000000000002c02         jne        loc_3458

0000000000002c08         mov        eax, r8d
0000000000002c0b         xor        eax, 0x1
0000000000002c0e         and        al, dl
0000000000002c10         je         loc_2c41

0000000000002c12         cmp        r13, r15
0000000000002c15         jbe        loc_2c1c

0000000000002c17         mov        byte [r14+r15], 0x27

                     loc_2c1c:
0000000000002c1c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2b40+213
0000000000002c20         cmp        r13, rdx
0000000000002c23         jbe        loc_2c2b

0000000000002c25         mov        byte [r14+r15+1], 0x24

                     loc_2c2b:
0000000000002c2b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2b40+227
0000000000002c2f         cmp        r13, rdx
0000000000002c32         jbe        loc_2c3a

0000000000002c34         mov        byte [r14+r15+2], 0x27

                     loc_2c3a:
0000000000002c3a         add        r15, 0x3                                    ; CODE XREF=sub_2b40+242
0000000000002c3e         mov        r8d, eax

                     loc_2c41:
0000000000002c41         cmp        r13, r15                                    ; CODE XREF=sub_2b40+208
0000000000002c44         jbe        loc_2c4b

0000000000002c46         mov        byte [r14+r15], 0x5c

                     loc_2c4b:
0000000000002c4b         add        r15, 0x1                                    ; CODE XREF=sub_2b40+260
0000000000002c4f         add        rbp, 0x1
0000000000002c53         jmp        loc_2ae0
0000000000002c58         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2c60:
0000000000002c60         cmp        byte [rsp+arg_5], 0x0
0000000000002c65         jne        loc_2e33

0000000000002c6b         xor        edx, edx
0000000000002c6d         test       byte [rsp+arg_70], 0x1
0000000000002c72         je         loc_2b8b

0000000000002c78         add        rbp, 0x1
0000000000002c7c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000002c81         nop        dword [rax]
0000000000002c88         cmp        dword [rsp+8], 0x2
0000000000002c8d         sete       dl
0000000000002c90         xor        eax, eax
0000000000002c92         jmp        sub_2a40+56
0000000000002c97         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ca0:
0000000000002ca0         mov        edx, 0x7
0000000000002ca5         mov        ebx, 0x61
0000000000002caa         jmp        sub_2b40+68
                        ; endp
0000000000002caf         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2cb0:
0000000000002cb0         cmp        dword [rsp+8], 0x2
0000000000002cb5         sete       dl
                        ; endp

                     loc_2cb8:
0000000000002cb8         test       rbp, rbp                                    ; CODE XREF=sub_2a40+38, sub_2ed0+35
0000000000002cbb         jne        loc_2a6c

0000000000002cc1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_2f00+43
0000000000002cc6         and        al, dl
0000000000002cc8         je         sub_2a40+56

0000000000002cce         mov        rbp, r11
0000000000002cd1         mov        dword [rsp+arg_0], 0x2
0000000000002cd9         jmp        sub_2f90+1097
                        ; endp
0000000000002cde         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2ce0:
0000000000002ce0         cmp        dword [rsp+arg_0], 0x2
0000000000002ce5         sete       dl
0000000000002ce8         xor        r12d, r12d
0000000000002ceb         jmp        sub_2cb0+17
                        ; endp
0000000000002ced         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2cf0:
0000000000002cf0         cmp        dword [rsp+arg_0], 0x2
0000000000002cf5         mov        ebx, 0x20
0000000000002cfa         sete       dl
0000000000002cfd         jmp        sub_2cb0+17
                        ; endp
0000000000002cff         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2d00:
0000000000002d00         mov        edx, 0xd
0000000000002d05         mov        ebx, 0x72
0000000000002d0a         jmp        loc_2b72
0000000000002d0f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d10:
0000000000002d10         mov        edx, 0xc
0000000000002d15         mov        ebx, 0x66
0000000000002d1a         jmp        sub_2b40+68
                        ; endp
0000000000002d1f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d20:
0000000000002d20         mov        edx, 0xb
0000000000002d25         mov        ebx, 0x76
0000000000002d2a         jmp        sub_2b40+68
                        ; endp
0000000000002d2f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d30:
0000000000002d30         mov        edx, 0xa
0000000000002d35         mov        ebx, 0x6e
0000000000002d3a         jmp        sub_2b40+50
                        ; endp
0000000000002d3f         align      64

                     loc_2d40:
0000000000002d40         xor        r10d, r10d                                  ; CODE XREF=sub_2d30+135
0000000000002d43         nop        dword [rax+rax]

                     loc_2d48:
0000000000002d48         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000002d4e         jne        loc_30f8

0000000000002d54         mov        qword [rsp+0xe8+var_B0], r11
0000000000002d59         mov        byte [rsp+0xe8+var_B8], r8b
0000000000002d5e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002d63         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000002d68         mov        rcx, qword [rax]
0000000000002d6b         movzx      edx, bl
0000000000002d6e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002d74         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000002d7a         mov        r11, qword [rsp+0xe8+var_B0]
0000000000002d7f         mov        edi, 0x1
0000000000002d84         movzx      eax, word [rcx+rdx*2]
0000000000002d88         and        ax, 0x4000
0000000000002d8c         setne      r12b
0000000000002d90         sete       al
0000000000002d93         and        al, byte [rsp+0xe8+var_DB]

                     loc_2d97:
0000000000002d97         test       al, al                                      ; CODE XREF=sub_2f90+2221
0000000000002d99         jne        loc_3731

0000000000002d9f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002da4         sete       dl
0000000000002da7         jmp        loc_2a78
0000000000002dac         align      16

                     loc_2db0:
0000000000002db0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000002db4         cmp        bl, 0x7e
0000000000002db7         ja         loc_2d40

0000000000002db9         lea        rcx, qword [switch_table_6160+552]          ; 0x6388
0000000000002dc0         movzx      edx, bl
0000000000002dc3         movsxd     rax, dword [rcx+rdx*4]
0000000000002dc7         add        rax, rcx
0000000000002dca         jmp        rax
                        ; endp
0000000000002dcc         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2dd0:
0000000000002dd0         xor        r10d, r10d
0000000000002dd3         cmp        byte [rsp+arg_5], 0x0
0000000000002dd8         jne        loc_2bce

0000000000002dde         nop

                     loc_2de0:
0000000000002de0         mov        edx, 0x5c                                   ; CODE XREF=sub_2b40+136, sub_2b40+147
0000000000002de5         mov        ebx, 0x5c
0000000000002dea         jmp        sub_2b40+68
                        ; endp
0000000000002def         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2df0:
0000000000002df0         mov        edx, 0xc
0000000000002df5         xor        r10d, r10d
0000000000002df8         mov        ebx, 0x66
0000000000002dfd         jmp        sub_2b40+68
                        ; endp
0000000000002e02         nop        word [rax+rax]
0000000000002e08         mov        edx, 0xa
0000000000002e0d         xor        r10d, r10d
0000000000002e10         mov        ebx, 0x6e
0000000000002e15         jmp        sub_2b40+50
0000000000002e1a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e20:
0000000000002e20         mov        ebx, 0x61
0000000000002e25         jmp        sub_2b40+176
                        ; endp
0000000000002e2a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e30:
0000000000002e30         xor        r10d, r10d
                        ; endp

                     loc_2e33:
0000000000002e33         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2c60+5
0000000000002e38         sete       dl
0000000000002e3b         cmp        byte [rsp+arg_7], 0x0
0000000000002e40         jne        loc_39da

0000000000002e46         mov        eax, r8d
0000000000002e49         mov        rcx, r15
0000000000002e4c         xor        eax, 0x1
0000000000002e4f         and        al, dl
0000000000002e51         je         loc_2e80

0000000000002e53         cmp        r13, r15
0000000000002e56         jbe        loc_2e5d

0000000000002e58         mov        byte [r14+r15], 0x27

                     loc_2e5d:
0000000000002e5d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_2e30+38
0000000000002e61         cmp        r13, rcx
0000000000002e64         jbe        loc_2e6c

0000000000002e66         mov        byte [r14+r15+1], 0x24

                     loc_2e6c:
0000000000002e6c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_2e30+52
0000000000002e70         cmp        r13, rcx
0000000000002e73         ja         loc_34a9

                     loc_2e79:
0000000000002e79         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_2f90+1311
0000000000002e7d         mov        r8d, eax

                     loc_2e80:
0000000000002e80         cmp        r13, rcx                                    ; CODE XREF=sub_2e30+33
0000000000002e83         jbe        loc_2e8a

0000000000002e85         mov        byte [r14+rcx], 0x5c

                     loc_2e8a:
0000000000002e8a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2e30+83
0000000000002e8f         lea        r15, qword [rcx+1]
0000000000002e93         je         loc_3499

0000000000002e99         lea        rax, qword [rbp+1]
0000000000002e9d         cmp        rax, r11
0000000000002ea0         jae        loc_2ebb

0000000000002ea2         mov        rax, qword [rsp+arg_8]
0000000000002ea7         movzx      eax, byte [rax+rbp+1]
0000000000002eac         mov        byte [rsp+arg_20], al
0000000000002eb0         sub        eax, 0x30
0000000000002eb3         cmp        al, 0x9
0000000000002eb5         jbe        loc_36e9

                     loc_2ebb:
0000000000002ebb         mov        eax, r12d                                   ; CODE XREF=sub_2e30+112
0000000000002ebe         mov        ebx, 0x30
0000000000002ec3         xor        r12d, r12d
0000000000002ec6         jmp        sub_2a40+56
                        ; endp
0000000000002ecb         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2ed0:
0000000000002ed0         cmp        dword [rsp+arg_0], 0x2
0000000000002ed5         mov        r12d, r10d
0000000000002ed8         sete       dl
0000000000002edb         xor        r10d, r10d
0000000000002ede         xor        eax, eax
0000000000002ee0         jmp        sub_2a40+56
                        ; endp
0000000000002ee5         nop        dword [rax]
0000000000002ee8         cmp        dword [rsp+8], 0x2
0000000000002eed         sete       dl
0000000000002ef0         xor        r10d, r10d
0000000000002ef3         jmp        sub_2cb0+8
0000000000002ef8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f00:
0000000000002f00         cmp        dword [rsp+8], 0x2
0000000000002f05         sete       dl
0000000000002f08         xor        r10d, r10d
0000000000002f0b         xor        r12d, r12d
0000000000002f0e         jmp        sub_2cb0+17
                        ; endp
0000000000002f13         nop        dword [rax+rax]
0000000000002f18         cmp        dword [rsp+8], 0x2
0000000000002f1d         mov        r12d, r10d
0000000000002f20         mov        ebx, 0x20
0000000000002f25         sete       dl
0000000000002f28         xor        r10d, r10d
0000000000002f2b         jmp        sub_2cb0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f30:
0000000000002f30         mov        edx, 0xd
0000000000002f35         xor        r10d, r10d
0000000000002f38         mov        ebx, 0x72
0000000000002f3d         jmp        sub_2b40+50
                        ; endp
0000000000002f42         nop        word [rax+rax]
0000000000002f48         mov        ebx, 0x76
0000000000002f4d         jmp        sub_2b40+176
0000000000002f52         nop        word [rax+rax]
0000000000002f58         mov        edx, 0x9
0000000000002f5d         xor        r10d, r10d
0000000000002f60         mov        ebx, 0x74
0000000000002f65         jmp        sub_2b40+50
0000000000002f6a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f70:
0000000000002f70         mov        ebx, 0x62
0000000000002f75         jmp        sub_2b40+176
                        ; endp
0000000000002f7a         nop        word [rax+rax]

                     loc_2f80:
0000000000002f80         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000002f83         jmp        loc_2a20
0000000000002f88         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_2f90:
0000000000002f90         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2b40+125
0000000000002f95         jne        sub_2f90+2416
                        ; endp

                     loc_2f9b:
0000000000002f9b         add        rbp, 0x1                                    ; CODE XREF=sub_2b40+159
0000000000002f9f         mov        eax, r8d
0000000000002fa2         xor        r12d, r12d
0000000000002fa5         mov        ebx, 0x5c
0000000000002faa         jmp        sub_2a40+124
                        ; endp
0000000000002faf         align      16

                     loc_2fb0:
0000000000002fb0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000002fb5         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000002fba         mov        r12d, r8d
0000000000002fbd         mov        rbp, r11
0000000000002fc0         sete       dl
0000000000002fc3         mov        eax, ebx
0000000000002fc5         test       r15, r15
0000000000002fc8         sete       cl
0000000000002fcb         and        eax, edx
0000000000002fcd         and        al, cl
0000000000002fcf         jne        loc_3a36

0000000000002fd5         mov        eax, ebx
0000000000002fd7         xor        eax, 0x1
0000000000002fda         and        dl, al
0000000000002fdc         je         loc_394c

0000000000002fe2         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000002fe7         je         loc_394a

0000000000002fed         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000002ff2         jne        loc_39ed

0000000000002ff8         test       r13, r13
0000000000002ffb         sete       al
0000000000002ffe         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003004         setne      dl
0000000000003007         and        al, dl
0000000000003009         je         loc_3a2c

000000000000300f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3014:
0000000000003014         lea        rbx, qword [aLibs+29]                       ; 0x6105, CODE XREF=sub_2f90+2781
000000000000301b         mov        byte [r14], 0x27
000000000000301f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003027         mov        r15d, 0x1
000000000000302d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003036         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000303b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003040         mov        byte [rsp+0xe8+var_6C], al
0000000000003044         jmp        loc_2923
0000000000003049         align      16

                     loc_3050:
0000000000003050         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2b40+8
0000000000003055         jne        sub_2f90+2416

000000000000305b         test       r13, r13
000000000000305e         je         loc_3460

0000000000003064         xor        edx, edx
0000000000003066         cmp        qword [rsp+arg_48], 0x0
000000000000306c         jne        loc_3460

                     loc_3072:
0000000000003072         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_2f90+1284, sub_2f90+2794
0000000000003077         add        r15, 0x3
000000000000307b         xor        eax, eax
000000000000307d         mov        byte [rsp+arg_74], r12b
0000000000003082         xor        r8d, r8d
0000000000003085         mov        r13, rdx
0000000000003088         mov        ebx, 0x27
000000000000308d         jmp        sub_2a40+105
                        ; endp
0000000000003092         align      8

                     loc_3098:
0000000000003098         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2b10+19
000000000000309d         je         loc_30c0

000000000000309f         lea        rcx, qword [rbp+2]
00000000000030a3         cmp        rcx, r11
00000000000030a6         jae        loc_30c0

00000000000030a8         mov        rax, qword [rsp+arg_8]
00000000000030ad         cmp        byte [rax+rbp+1], 0x3f
00000000000030b2         je         loc_3842

00000000000030b8         nop        dword [rax+rax]

                     loc_30c0:
00000000000030c0         xor        edx, edx                                    ; CODE XREF=sub_2f90+269, sub_2f90+278, sub_2f90+2233, sub_2f90+2253
00000000000030c2         xor        r12d, r12d
00000000000030c5         xor        eax, eax
00000000000030c7         mov        ebx, 0x3f
00000000000030cc         jmp        sub_2a40+56
                        ; endp
00000000000030d1         align      8

                     loc_30d8:
00000000000030d8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2b10+10
00000000000030dd         jne        loc_3900

00000000000030e3         xor        r12d, r12d
00000000000030e6         xor        eax, eax
00000000000030e8         mov        ebx, 0x3f
00000000000030ed         jmp        sub_2a40+105
                        ; endp
00000000000030f2         align      8

                     loc_30f8:
00000000000030f8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_2d30+30
0000000000003100         cmp        r11, 0xffffffffffffffff
0000000000003104         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003110         mov        qword [rsp+0xe8+var_C0], rax
0000000000003115         jne        loc_3144

0000000000003117         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000311c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003121         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003126         mov        qword [rsp+0xe8+var_B8], r9
000000000000312b         call       j_strlen                                    ; strlen
0000000000003130         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003136         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000313c         mov        r11, rax
000000000000313f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3144:
0000000000003144         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_2f90+389
000000000000314c         xor        ecx, ecx
000000000000314e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003152         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003157         mov        rbx, rcx
000000000000315a         mov        qword [rsp+0xe8+var_60], r9
0000000000003162         mov        qword [rsp+0xe8+var_B0], rax
0000000000003167         mov        byte [rsp+0xe8+var_69], r10b
000000000000316c         mov        qword [rsp+0xe8+var_68], r15
0000000000003174         mov        qword [rsp+0xe8+var_A8], r14
0000000000003179         mov        qword [rsp+0xe8+var_78], r13
000000000000317e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3183:
0000000000003183         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_2f90+623
0000000000003188         lea        r14, qword [rbp+rbx]
000000000000318d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003192         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003197         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000319c         lea        r13, qword [rax+r14]
00000000000031a0         sub        rdx, r14
00000000000031a3         mov        rsi, r13
00000000000031a6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000031ab         test       rax, rax
00000000000031ae         mov        r15, rax
00000000000031b1         je         loc_3201

00000000000031b3         cmp        rax, 0xffffffffffffffff
00000000000031b7         je         loc_37d5

00000000000031bd         cmp        rax, 0xfffffffffffffffe
00000000000031c1         je         loc_3761

00000000000031c7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000031cc         sete       al
00000000000031cf         and        al, byte [rsp+0xe8+var_D9]
00000000000031d3         jne        loc_3370

                     loc_31d9:
00000000000031d9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_2f90+996, sub_2f90+1031
00000000000031e0         call       j_iswprint                                  ; iswprint
00000000000031e5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
00000000000031ea         test       eax, eax
00000000000031ec         mov        eax, 0x0
00000000000031f1         cmove      r12d, eax
00000000000031f5         add        rbx, r15
00000000000031f8         call       j_mbsinit                                   ; mbsinit
00000000000031fd         test       eax, eax
00000000000031ff         je         loc_3183

                     loc_3201:
0000000000003201         mov        edx, r12d                                   ; CODE XREF=sub_2f90+545
0000000000003204         mov        rdi, rbx
0000000000003207         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000320d         xor        edx, 0x1
0000000000003210         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003215         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000321b         and        dl, byte [rsp+0xe8+var_DB]
000000000000321f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003227         mov        r14, qword [rsp+0xe8+var_A8]
000000000000322c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003231         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3236:
0000000000003236         cmp        rdi, 0x1                                    ; CODE XREF=sub_2f90+2112, sub_2f90+2168
000000000000323a         jbe        loc_383b

                     loc_3240:
0000000000003240         mov        rcx, rdi                                    ; CODE XREF=sub_2f90+1961
0000000000003243         xor        esi, esi
0000000000003245         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000324b         add        rcx, rbp
000000000000324e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003253         jmp        loc_330e
0000000000003258         align      32

                     loc_3260:
0000000000003260         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2f90+896
0000000000003265         sete       al
0000000000003268         test       r9b, r9b
000000000000326b         jne        loc_3720

0000000000003271         mov        esi, r8d
0000000000003274         xor        esi, 0x1
0000000000003277         and        al, sil
000000000000327a         je         loc_32ab

000000000000327c         cmp        r13, r15
000000000000327f         jbe        loc_3286

0000000000003281         mov        byte [r14+r15], 0x27

                     loc_3286:
0000000000003286         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_2f90+751
000000000000328a         cmp        r13, rsi
000000000000328d         jbe        loc_3295

000000000000328f         mov        byte [r14+r15+1], 0x24

                     loc_3295:
0000000000003295         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_2f90+765
0000000000003299         cmp        r13, rsi
000000000000329c         jbe        loc_32a4

000000000000329e         mov        byte [r14+r15+2], 0x27

                     loc_32a4:
00000000000032a4         add        r15, 0x3                                    ; CODE XREF=sub_2f90+780
00000000000032a8         mov        r8d, eax

                     loc_32ab:
00000000000032ab         cmp        r13, r15                                    ; CODE XREF=sub_2f90+746
00000000000032ae         jbe        loc_32b5

00000000000032b0         mov        byte [r14+r15], 0x5c

                     loc_32b5:
00000000000032b5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2f90+798
00000000000032b9         cmp        r13, rax
00000000000032bc         jbe        loc_32cb

00000000000032be         mov        eax, ebx
00000000000032c0         shr        al, 0x6
00000000000032c3         add        eax, 0x30
00000000000032c6         mov        byte [r14+r15+1], al

                     loc_32cb:
00000000000032cb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_2f90+812
00000000000032cf         cmp        r13, rax
00000000000032d2         jbe        loc_32e4

00000000000032d4         mov        eax, ebx
00000000000032d6         shr        al, 0x3
00000000000032d9         and        eax, 0x7
00000000000032dc         add        eax, 0x30
00000000000032df         mov        byte [r14+r15+2], al

                     loc_32e4:
00000000000032e4         and        ebx, 0x7                                    ; CODE XREF=sub_2f90+834
00000000000032e7         add        rbp, 0x1
00000000000032eb         add        r15, 0x3
00000000000032ef         add        ebx, 0x30
00000000000032f2         cmp        rbp, rcx
00000000000032f5         jae        loc_2ae0

00000000000032fb         mov        esi, edx

                     loc_32fd:
00000000000032fd         cmp        r13, r15                                    ; CODE XREF=sub_2f90+985, sub_2f90+1969
0000000000003300         jbe        loc_3306

0000000000003302         mov        byte [r14+r15], bl

                     loc_3306:
0000000000003306         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_2f90+880
000000000000330a         add        r15, 0x1

                     loc_330e:
000000000000330e         test       dl, dl                                      ; CODE XREF=sub_2f90+707
0000000000003310         jne        loc_3260

0000000000003316         mov        eax, esi
0000000000003318         xor        eax, 0x1
000000000000331b         and        eax, r8d
000000000000331e         test       r10b, r10b
0000000000003321         je         loc_3331

0000000000003323         cmp        r13, r15
0000000000003326         jbe        loc_332d

0000000000003328         mov        byte [r14+r15], 0x5c

                     loc_332d:
000000000000332d         add        r15, 0x1                                    ; CODE XREF=sub_2f90+918

                     loc_3331:
0000000000003331         add        rbp, 0x1                                    ; CODE XREF=sub_2f90+913
0000000000003335         cmp        rbp, rcx
0000000000003338         jae        loc_2abc

000000000000333e         test       al, al
0000000000003340         je         loc_373e

0000000000003346         cmp        r13, r15
0000000000003349         jbe        loc_3350

000000000000334b         mov        byte [r14+r15], 0x27

                     loc_3350:
0000000000003350         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2f90+953
0000000000003354         cmp        r13, rax
0000000000003357         jbe        loc_335f

0000000000003359         mov        byte [r14+r15+1], 0x27

                     loc_335f:
000000000000335f         add        r15, 0x2                                    ; CODE XREF=sub_2f90+967
0000000000003363         xor        r10d, r10d
0000000000003366         xor        r8d, r8d
0000000000003369         jmp        loc_32fd
000000000000336b         align      16

                     loc_3370:
0000000000003370         cmp        r15, 0x1                                    ; CODE XREF=sub_2f90+579
0000000000003374         je         loc_31d9

000000000000337a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000337f         lea        rcx, qword [rdi+r15]
0000000000003383         lea        rdx, qword [rdi+r14+1]
0000000000003388         lea        r8, qword [rcx+r14]
000000000000338c         jmp        loc_339d
000000000000338e         align      16

                     loc_3390:
0000000000003390         add        rdx, 0x1                                    ; CODE XREF=sub_2f90+1046, sub_2f90+1072
0000000000003394         cmp        r8, rdx
0000000000003397         je         loc_31d9

                     loc_339d:
000000000000339d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_2f90+1020
00000000000033a0         sub        ecx, 0x5b
00000000000033a3         cmp        cl, 0x21
00000000000033a6         ja         loc_3390

00000000000033a8         mov        esi, 0x1
00000000000033ad         shl        rsi, cl
00000000000033b0         mov        rcx, rsi
00000000000033b3         movabs     rsi, 0x20000002b
00000000000033bd         test       rcx, rsi
00000000000033c0         je         loc_3390

00000000000033c2         mov        r14, qword [rsp+0xe8+var_A8]
00000000000033c7         mov        r13, qword [rsp+0xe8+var_78]
00000000000033cc         mov        rbp, qword [rsp+0xe8+var_B8]
00000000000033d1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_33d9:
00000000000033d9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_2f90+1227, sub_2f90+1948, sub_2f90+2585, sub_2f90+2734
00000000000033de         je         loc_33f0

00000000000033e0         test       al, al
00000000000033e2         mov        eax, 0x4
00000000000033e7         cmove      eax, dword [rsp+0xe8+var_E0]
00000000000033ec         mov        dword [rsp+0xe8+var_E0], eax

                     loc_33f0:
00000000000033f0         sub        rsp, 0x8                                    ; CODE XREF=sub_2f90+1102
00000000000033f4         mov        rcx, rbp
00000000000033f7         mov        rsi, r13
00000000000033fa         push       qword [rsp+0xf0+var_88]
00000000000033fe         push       qword [rsp+0xf8+var_80]
0000000000003402         mov        rdi, r14
0000000000003405         push       0x0
0000000000003407         mov        r9d, dword [rsp+0x108+var_70]
000000000000340f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003414         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003419         and        r9d, 0xfffffffd
000000000000341d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003422         add        rsp, 0x20
0000000000003426         mov        r15, rax

                     loc_3429:
0000000000003429         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_2f90+2549, sub_2f90+2560, sub_2f90+2711
0000000000003431         xor        rbx, qword [fs:0x28]
000000000000343a         mov        rax, r15
000000000000343d         jne        loc_3a43

0000000000003443         add        rsp, 0xb8
000000000000344a         pop        rbx
000000000000344b         pop        rbp
000000000000344c         pop        r12
000000000000344e         pop        r13
0000000000003450         pop        r14
0000000000003452         pop        r15
0000000000003454         ret
                        ; endp
0000000000003455         align      8

                     loc_3458:
0000000000003458         mov        rbp, r11                                    ; CODE XREF=sub_2b40+194
000000000000345b         jmp        loc_33d9

                     loc_3460:
0000000000003460         cmp        r13, r15                                    ; CODE XREF=sub_2f90+206, sub_2f90+220
0000000000003463         jbe        loc_346a

0000000000003465         mov        byte [r14+r15], 0x27

                     loc_346a:
000000000000346a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2f90+1235
000000000000346e         cmp        r13, rax
0000000000003471         jbe        loc_3479

0000000000003473         mov        byte [r14+r15+1], 0x5c

                     loc_3479:
0000000000003479         lea        rax, qword [r15+2]                          ; CODE XREF=sub_2f90+1249
000000000000347d         cmp        r13, rax
0000000000003480         jbe        loc_3a72

0000000000003486         mov        rdx, r13
0000000000003489         mov        byte [r14+r15+2], 0x27
000000000000348f         mov        r13, qword [rsp+arg_48]
0000000000003494         jmp        loc_3072

                     loc_3499:
0000000000003499         mov        eax, r12d                                   ; CODE XREF=sub_2e30+99
000000000000349c         mov        ebx, 0x30
00000000000034a1         xor        r12d, r12d
00000000000034a4         jmp        sub_2a40+105
                        ; endp

                     loc_34a9:
00000000000034a9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_2e30+67
00000000000034af         jmp        loc_2e79

                     loc_34b4:
00000000000034b4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000034b6         jne        loc_28e3

00000000000034bc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_34c1:
00000000000034c1         test       r13, r13                                    ; CODE XREF=sub_2f90+2749
00000000000034c4         jne        loc_3a5a

00000000000034ca         lea        rax, qword [aLibs+29]                       ; 0x6105
00000000000034d1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000034da         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000034df         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000034e4         xor        r12d, r12d
00000000000034e7         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000034ec         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000034f5         mov        qword [rsp+0xe8+var_A0], rax
00000000000034fa         mov        r15d, 0x1
0000000000003500         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003508         jmp        loc_2923
000000000000350d         align      16

                     loc_3510:
0000000000003510         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003512         jne        loc_390d

0000000000003518         test       r13, r13
000000000000351b         je         loc_3746

0000000000003521         mov        byte [r14], 0x22
0000000000003525         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000352a         xor        r12d, r12d
000000000000352d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003532         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_353b:
000000000000353b         lea        rax, qword [aLibs+27]                       ; 0x6103, CODE XREF=sub_2f90+1996
0000000000003542         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003547         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000354c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003555         mov        r15d, 0x1
000000000000355b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003560         jmp        loc_2923

                     loc_3565:
0000000000003565         lea        rax, qword [aLibs+27]                       ; case 6, 0x6103, CODE XREF=quotearg_buffer_restyled+145
000000000000356c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003571         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003576         xor        r12d, r12d
0000000000003579         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003582         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003587         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000358c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003595         xor        r15d, r15d
0000000000003598         mov        qword [rsp+0xe8+var_A0], rax
000000000000359d         mov        dword [rsp+0xe8+var_E0], 0x5
00000000000035a5         jmp        loc_2923

                     loc_35aa:
00000000000035aa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
00000000000035af         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000035b4         xor        r12d, r12d
00000000000035b7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000035c0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000035c5         xor        r15d, r15d
00000000000035c8         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000035cd         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000035d6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000035df         jmp        loc_2923

                     loc_35e4:
00000000000035e4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
00000000000035e9         je         loc_3641

00000000000035eb         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x6107
00000000000035f2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000035f4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000035f9         call       j_dcgettext                                 ; dcgettext
00000000000035fe         mov        rcx, rax
0000000000003601         mov        qword [rsp+0xe8+var_80], rax
0000000000003606         lea        rax, qword [aLibs+31]                       ; 0x6107
000000000000360d         cmp        rcx, rax
0000000000003610         je         loc_39ae

                     loc_3616:
0000000000003616         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x6105, CODE XREF=sub_2f90+2607
000000000000361d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000361f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003624         call       j_dcgettext                                 ; dcgettext
0000000000003629         mov        rcx, rax
000000000000362c         mov        qword [rsp+0xe8+var_88], rax
0000000000003631         lea        rax, qword [aLibs+29]                       ; 0x6105
0000000000003638         cmp        rcx, rax
000000000000363b         je         loc_39c4

                     loc_3641:
0000000000003641         xor        r15d, r15d                                  ; CODE XREF=sub_2f90+1625, sub_2f90+2629
0000000000003644         test       ebx, ebx
0000000000003646         je         loc_380d

                     loc_364c:
000000000000364c         test       ebx, ebx                                    ; CODE XREF=sub_2f90+2183, sub_2f90+2214
000000000000364e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003653         setne      byte [rsp+0xe8+var_D9]
0000000000003658         xor        r12d, r12d
000000000000365b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000365e         call       j_strlen                                    ; strlen
0000000000003663         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003668         mov        qword [rsp+0xe8+var_D0], rax
000000000000366d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003672         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003677         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003680         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003685         jmp        loc_2923

                     loc_368a:
000000000000368a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000368f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003694         xor        r12d, r12d
0000000000003697         mov        qword [rsp+0xe8+var_98], 0x0
00000000000036a0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000036a5         xor        r15d, r15d
00000000000036a8         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000036ad         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000036b6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000036bf         jmp        loc_2923

                     loc_36c4:
00000000000036c4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
00000000000036c9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000036ce         xor        r12d, r12d
00000000000036d1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000036da         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000036df         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000036e4         jmp        loc_2903

                     loc_36e9:
00000000000036e9         cmp        r13, r15                                    ; CODE XREF=sub_2e30+133
00000000000036ec         jbe        loc_36f3

00000000000036ee         mov        byte [r14+r15], 0x30

                     loc_36f3:
00000000000036f3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_2f90+1884
00000000000036f7         cmp        r13, rax
00000000000036fa         jbe        loc_3702

00000000000036fc         mov        byte [r14+rcx+2], 0x30

                     loc_3702:
0000000000003702         mov        eax, r12d                                   ; CODE XREF=sub_2f90+1898
0000000000003705         lea        r15, qword [rcx+3]
0000000000003709         xor        r12d, r12d
000000000000370c         mov        ebx, 0x30
0000000000003711         jmp        sub_2a40+56
                        ; endp
0000000000003716         align      32

                     loc_3720:
0000000000003720         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_2f90+731
0000000000003725         mov        rbp, r11
0000000000003728         mov        byte [rsp+0xe8+var_DB], bl
000000000000372c         jmp        loc_33d9

                     loc_3731:
0000000000003731         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_2d30+105
0000000000003736         xor        r12d, r12d
0000000000003739         jmp        loc_3240

                     loc_373e:
000000000000373e         xor        r10d, r10d                                  ; CODE XREF=sub_2f90+944
0000000000003741         jmp        loc_32fd

                     loc_3746:
0000000000003746         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_2f90+1419
000000000000374f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003754         xor        r12d, r12d
0000000000003757         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000375c         jmp        loc_353b

                     loc_3761:
0000000000003761         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_2f90+561
0000000000003766         mov        rsi, r14
0000000000003769         mov        rcx, r13
000000000000376c         mov        rax, rbx
000000000000376f         mov        rdi, rbx
0000000000003772         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003778         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000377d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003785         cmp        rsi, r11
0000000000003788         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000378e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003796         mov        r14, qword [rsp+0xe8+var_A8]
000000000000379b         mov        r13, qword [rsp+0xe8+var_78]
00000000000037a0         jae        loc_37c8

00000000000037a2         cmp        byte [rcx], 0x0
00000000000037a5         jne        loc_37b7

00000000000037a7         jmp        loc_37c8
00000000000037a9         align      16

                     loc_37b0:
00000000000037b0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_2f90+2099
00000000000037b5         je         loc_37c5

                     loc_37b7:
00000000000037b7         add        rax, 0x1                                    ; CODE XREF=sub_2f90+2069
00000000000037bb         lea        rdx, qword [rbp+rax]
00000000000037c0         cmp        r11, rdx
00000000000037c3         ja         loc_37b0

                     loc_37c5:
00000000000037c5         mov        rdi, rax                                    ; CODE XREF=sub_2f90+2085

                     loc_37c8:
00000000000037c8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_2f90+2064, sub_2f90+2071
00000000000037cd         xor        r12d, r12d
00000000000037d0         jmp        loc_3236

                     loc_37d5:
00000000000037d5         mov        rdi, rbx                                    ; CODE XREF=sub_2f90+551
00000000000037d8         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000037de         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000037e3         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000037e9         mov        r15, qword [rsp+0xe8+var_68]
00000000000037f1         xor        r12d, r12d
00000000000037f4         mov        r14, qword [rsp+0xe8+var_A8]
00000000000037f9         mov        r13, qword [rsp+0xe8+var_78]
00000000000037fe         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003803         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003808         jmp        loc_3236

                     loc_380d:
000000000000380d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_2f90+1718
0000000000003812         movzx      eax, byte [rdx]
0000000000003815         test       al, al
0000000000003817         je         loc_364c

000000000000381d         nop        dword [rax]

                     loc_3820:
0000000000003820         cmp        r13, r15                                    ; CODE XREF=sub_2f90+2212
0000000000003823         jbe        loc_3829

0000000000003825         mov        byte [r14+r15], al

                     loc_3829:
0000000000003829         add        r15, 0x1                                    ; CODE XREF=sub_2f90+2195
000000000000382d         movzx      eax, byte [rdx+r15]
0000000000003832         test       al, al
0000000000003834         jne        loc_3820

0000000000003836         jmp        loc_364c

                     loc_383b:
000000000000383b         mov        eax, edx                                    ; CODE XREF=sub_2f90+682
000000000000383d         jmp        loc_2d97

                     loc_3842:
0000000000003842         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_2f90+290
0000000000003846         cmp        bl, 0x3e
0000000000003849         ja         loc_30c0

000000000000384f         movabs     rax, 0x7000a38200000000
0000000000003859         bt         rax, rbx
000000000000385d         jae        loc_30c0

0000000000003863         cmp        byte [rsp+arg_7], 0x0
0000000000003868         jne        loc_3a52

000000000000386e         cmp        r13, r15
0000000000003871         jbe        loc_3878

0000000000003873         mov        byte [r14+r15], 0x3f

                     loc_3878:
0000000000003878         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2f90+2273
000000000000387c         cmp        r13, rax
000000000000387f         jbe        loc_3887

0000000000003881         mov        byte [r14+r15+1], 0x22

                     loc_3887:
0000000000003887         lea        rax, qword [r15+2]                          ; CODE XREF=sub_2f90+2287
000000000000388b         cmp        r13, rax
000000000000388e         jbe        loc_3896

0000000000003890         mov        byte [r14+r15+2], 0x22

                     loc_3896:
0000000000003896         lea        rax, qword [r15+3]                          ; CODE XREF=sub_2f90+2302
000000000000389a         cmp        r13, rax
000000000000389d         jbe        loc_38a5

000000000000389f         mov        byte [r14+r15+3], 0x3f

                     loc_38a5:
00000000000038a5         add        r15, 0x4                                    ; CODE XREF=sub_2f90+2317
00000000000038a9         xor        edx, edx
00000000000038ab         xor        r12d, r12d
00000000000038ae         xor        eax, eax
00000000000038b0         mov        rbp, rcx
00000000000038b3         jmp        sub_2a40+56
                        ; endp

                     loc_38b8:
00000000000038b8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
00000000000038ba         je         loc_3a48

00000000000038c0         lea        rax, qword [aLibs+29]                       ; 0x6105
00000000000038c7         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000038cc         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000038d1         xor        r12d, r12d
00000000000038d4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000038dd         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000038e2         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000038e7         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000038f0         xor        r15d, r15d
00000000000038f3         mov        qword [rsp+0xe8+var_A0], rax
00000000000038f8         jmp        loc_2923
00000000000038fd         align      256

                     loc_3900:
0000000000003900         mov        rbp, r11                                    ; CODE XREF=sub_2f90+333
0000000000003903         movzx      eax, byte [rsp+arg_7]
0000000000003908         jmp        sub_2f90+1097
                        ; endp

                     loc_390d:
000000000000390d         lea        rax, qword [aLibs+27]                       ; 0x6103, CODE XREF=sub_2f90+1410
0000000000003914         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003919         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000391e         xor        r12d, r12d
0000000000003921         mov        qword [rsp+0xe8+var_98], 0x0
000000000000392a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000392f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003934         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000393d         xor        r15d, r15d
0000000000003940         mov        qword [rsp+0xe8+var_A0], rax
0000000000003945         jmp        loc_2923

                     loc_394a:
000000000000394a         mov        eax, edx                                    ; CODE XREF=sub_2f90+87

                     loc_394c:
000000000000394c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_2f90+76, sub_2f90+2721
0000000000003951         test       rbx, rbx
0000000000003954         je         loc_3982

0000000000003956         test       al, al
0000000000003958         je         loc_3982

000000000000395a         movzx      ecx, byte [rbx]
000000000000395d         mov        rax, rbx
0000000000003960         test       cl, cl
0000000000003962         je         loc_3982

0000000000003964         mov        rdx, r15
0000000000003967         sub        rax, r15

                     loc_396a:
000000000000396a         cmp        r13, rdx                                    ; CODE XREF=sub_2f90+2541
000000000000396d         jbe        loc_3973

000000000000396f         mov        byte [r14+rdx], cl

                     loc_3973:
0000000000003973         add        rdx, 0x1                                    ; CODE XREF=sub_2f90+2525
0000000000003977         movzx      ecx, byte [rax+rdx]
000000000000397b         test       cl, cl
000000000000397d         jne        loc_396a

000000000000397f         mov        r15, rdx

                     loc_3982:
0000000000003982         cmp        r13, r15                                    ; CODE XREF=sub_2f90+2500, sub_2f90+2504, sub_2f90+2514
0000000000003985         jbe        loc_3429

000000000000398b         mov        byte [r14+r15], 0x0
0000000000003990         jmp        loc_3429

                     loc_3995:
0000000000003995         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000399a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000399f         mov        rbp, r11
00000000000039a2         sete       al
00000000000039a5         mov        byte [rsp+0xe8+var_DB], bl
00000000000039a9         jmp        loc_33d9

                     loc_39ae:
00000000000039ae         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_2f90+1664
00000000000039b2         mov        rdi, rcx
00000000000039b5         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000039ba         mov        qword [rsp+0xe8+var_80], rax
00000000000039bf         jmp        loc_3616

                     loc_39c4:
00000000000039c4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_2f90+1707
00000000000039c8         mov        rdi, rcx
00000000000039cb         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000039d0         mov        qword [rsp+0xe8+var_88], rax
00000000000039d5         jmp        loc_3641

                     loc_39da:
00000000000039da         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_2e30+16
00000000000039df         mov        rbp, r11
00000000000039e2         mov        eax, edx
00000000000039e4         mov        byte [rsp+arg_5], bl
00000000000039e8         jmp        sub_2f90+1097
                        ; endp

                     loc_39ed:
00000000000039ed         sub        rsp, 0x8                                    ; CODE XREF=sub_2f90+98
00000000000039f1         mov        r8d, 0x5
00000000000039f7         mov        rcx, r11
00000000000039fa         push       qword [rsp+0xf0+var_88]
00000000000039fe         push       qword [rsp+0xf8+var_80]
0000000000003a02         mov        rdi, r14
0000000000003a05         push       qword [rsp+0x100+var_C8]
0000000000003a09         mov        r9d, dword [rsp+0x108+var_70]
0000000000003a11         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003a16         mov        rsi, qword [rsp+0x108+var_98]
0000000000003a1b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003a20         add        rsp, 0x20
0000000000003a24         mov        r15, rax
0000000000003a27         jmp        loc_3429

                     loc_3a2c:
0000000000003a2c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_2f90+121
0000000000003a31         jmp        loc_394c

                     loc_3a36:
0000000000003a36         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2f90+63
0000000000003a3e         jmp        loc_33d9

                     loc_3a43:
0000000000003a43         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_2f90+1197
                        ; endp

                     loc_3a48:
0000000000003a48         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_2f90+2346
0000000000003a4d         jmp        loc_34c1

                     loc_3a52:
0000000000003a52         mov        rbp, r11                                    ; CODE XREF=sub_2f90+2264
0000000000003a55         jmp        sub_2f90+1120
                        ; endp

                     loc_3a5a:
0000000000003a5a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_2f90+1332
0000000000003a5f         xor        eax, eax
0000000000003a61         xor        r12d, r12d
0000000000003a64         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a6d         jmp        loc_3014

                     loc_3a72:
0000000000003a72         mov        rdx, r13                                    ; CODE XREF=sub_2f90+1264
0000000000003a75         mov        r13, qword [rsp+arg_48]
0000000000003a7a         jmp        loc_3072

                     loc_3a7f:
0000000000003a7f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003a84         align      16                                          ; End of unwind block (FDE at 0x6e98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003a90         push       r15                                         ; Begin of unwind block (FDE at 0x6f10), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003a92         push       r14
0000000000003a94         movsxd     r15, edi
0000000000003a97         push       r13
0000000000003a99         push       r12
0000000000003a9b         mov        r14, rdx
0000000000003a9e         push       rbp
0000000000003a9f         push       rbx
0000000000003aa0         mov        rbp, rcx
0000000000003aa3         sub        rsp, 0x28
0000000000003aa7         mov        qword [rsp+0x58+var_50], rsi
0000000000003aac         call       j___errno_location                          ; __errno_location
0000000000003ab1         mov        r13, rax
0000000000003ab4         mov        eax, dword [rax]
0000000000003ab6         test       r15d, r15d
0000000000003ab9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000003ac0         mov        dword [rsp+0x58+var_40], eax
0000000000003ac4         js         loc_3c31

0000000000003aca         cmp        dword [nslots], r15d                        ; nslots
0000000000003ad1         jg         loc_3b35

0000000000003ad3         cmp        r15d, 0x7fffffff
0000000000003ada         je         loc_3c36

0000000000003ae0         lea        r12d, dword [r15+1]
0000000000003ae4         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000003aeb         movsxd     rsi, r12d
0000000000003aee         shl        rsi, 0x4
0000000000003af2         cmp        rbx, rax
0000000000003af5         je         loc_3c10

0000000000003afb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000003afe         call       xrealloc                                    ; xrealloc
0000000000003b03         mov        rbx, rax
0000000000003b06         mov        qword [slotvec], rax                        ; slotvec

                     loc_3b0d:
0000000000003b0d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003b14         mov        edx, r12d
0000000000003b17         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003b19         sub        edx, edi
0000000000003b1b         shl        rdi, 0x4
0000000000003b1f         movsxd     rdx, edx
0000000000003b22         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003b25         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003b29         call       j_memset                                    ; memset
0000000000003b2e         mov        dword [nslots], r12d                        ; nslots

                     loc_3b35:
0000000000003b35         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003b38         shl        r15, 0x4
0000000000003b3c         sub        rsp, 0x8
0000000000003b40         add        rbx, r15
0000000000003b43         lea        r15, qword [rbp+8]
0000000000003b47         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003b4b         mov        r11, qword [rbx]
0000000000003b4e         mov        r12, qword [rbx+8]
0000000000003b52         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003b55         or         eax, 0x1
0000000000003b58         mov        dword [rsp+0x60+var_3C], eax
0000000000003b5c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003b5f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003b62         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003b65         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003b67         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000003b6a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003b6f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003b72         mov        qword [rsp+0x78+var_48], r11
0000000000003b77         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003b7c         add        rsp, 0x20
0000000000003b80         mov        r11, qword [rsp+0x58+var_48]
0000000000003b85         cmp        r11, rax
0000000000003b88         ja         loc_3bf1

0000000000003b8a         lea        rsi, qword [rax+1]
0000000000003b8e         lea        rax, qword [slot0]                          ; slot0
0000000000003b95         cmp        r12, rax
0000000000003b98         mov        qword [rbx], rsi
0000000000003b9b         je         loc_3baf

0000000000003b9d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003ba0         mov        qword [rsp+0x58+var_48], rsi
0000000000003ba5         call       j_free                                      ; free
0000000000003baa         mov        rsi, qword [rsp+0x58+var_48]

                     loc_3baf:
0000000000003baf         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000003bb2         mov        qword [rsp+0x58+var_48], rsi
0000000000003bb7         call       xmalloc                                     ; xmalloc
0000000000003bbc         sub        rsp, 0x8
0000000000003bc0         mov        qword [rbx+8], rax
0000000000003bc4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003bc8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003bcb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003bce         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003bd1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003bd3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000003bd8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003bdb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003be0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000003be5         mov        r12, rax
0000000000003be8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003bed         add        rsp, 0x20

                     loc_3bf1:
0000000000003bf1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000003bf5         mov        dword [r13], eax
0000000000003bf9         add        rsp, 0x28
0000000000003bfd         mov        rax, r12
0000000000003c00         pop        rbx
0000000000003c01         pop        rbp
0000000000003c02         pop        r12
0000000000003c04         pop        r13
0000000000003c06         pop        r14
0000000000003c08         pop        r15
0000000000003c0a         ret
                        ; endp
0000000000003c0b         align      16

                     loc_3c10:
0000000000003c10         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000003c12         call       xrealloc                                    ; xrealloc
0000000000003c17         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000003c1f         mov        rbx, rax
0000000000003c22         mov        qword [slotvec], rax                        ; slotvec
0000000000003c29         movups     xmmword [rax], xmm0
0000000000003c2c         jmp        loc_3b0d

                     loc_3c31:
0000000000003c31         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_3c36:
0000000000003c36         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3c3b:
0000000000003c3b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x6f10)
                     clone_quoting_options:
0000000000003c40         push       r12                                         ; Begin of unwind block (FDE at 0x6f7c)
0000000000003c42         push       rbp
0000000000003c43         push       rbx
0000000000003c44         mov        rbx, rdi
0000000000003c47         call       j___errno_location                          ; __errno_location
0000000000003c4c         mov        r12d, dword [rax]
0000000000003c4f         mov        rbp, rax
0000000000003c52         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003c59         test       rbx, rbx
0000000000003c5c         mov        esi, 0x38
0000000000003c61         cmove      rbx, rax
0000000000003c65         mov        rdi, rbx
0000000000003c68         call       xmemdup                                     ; xmemdup
0000000000003c6d         mov        dword [rbp], r12d
0000000000003c71         pop        rbx
0000000000003c72         pop        rbp
0000000000003c73         pop        r12
0000000000003c75         ret
                        ; endp
0000000000003c76         align      128                                         ; End of unwind block (FDE at 0x6f7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000003c80         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6fa8), default_quoting_options
0000000000003c87         test       rdi, rdi
0000000000003c8a         cmove      rdi, rax
0000000000003c8e         mov        eax, dword [rdi]
0000000000003c90         ret
                        ; endp
0000000000003c91         align      32                                          ; End of unwind block (FDE at 0x6fa8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000003ca0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6fbc), default_quoting_options
0000000000003ca7         test       rdi, rdi
0000000000003caa         cmove      rdi, rax
0000000000003cae         mov        dword [rdi], esi
0000000000003cb0         ret
                        ; endp
0000000000003cb1         align      64                                          ; End of unwind block (FDE at 0x6fbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000003cc0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6fd0), default_quoting_options
0000000000003cc7         test       rdi, rdi
0000000000003cca         mov        ecx, esi
0000000000003ccc         cmove      rdi, rax
0000000000003cd0         mov        eax, esi
0000000000003cd2         and        ecx, 0x1f
0000000000003cd5         shr        al, 0x5
0000000000003cd8         movzx      eax, al
0000000000003cdb         lea        rdi, qword [rdi+rax*4+8]
0000000000003ce0         mov        esi, dword [rdi]
0000000000003ce2         mov        eax, esi
0000000000003ce4         shr        eax, cl
0000000000003ce6         xor        edx, eax
0000000000003ce8         and        eax, 0x1
0000000000003ceb         and        edx, 0x1
0000000000003cee         shl        edx, cl
0000000000003cf0         xor        edx, esi
0000000000003cf2         mov        dword [rdi], edx
0000000000003cf4         ret
                        ; endp
0000000000003cf5         align      256                                         ; End of unwind block (FDE at 0x6fd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000003d00         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6fe4), default_quoting_options
0000000000003d07         test       rdi, rdi
0000000000003d0a         cmove      rdi, rax
0000000000003d0e         mov        eax, dword [rdi+4]
0000000000003d11         mov        dword [rdi+4], esi
0000000000003d14         ret
                        ; endp
0000000000003d15         align      32                                          ; End of unwind block (FDE at 0x6fe4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000003d20         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6ff8), default_quoting_options
0000000000003d27         test       rdi, rdi
0000000000003d2a         cmove      rdi, rax
0000000000003d2e         test       rsi, rsi
0000000000003d31         mov        dword [rdi], 0xa
0000000000003d37         je         loc_3d47

0000000000003d39         test       rdx, rdx
0000000000003d3c         je         loc_3d47

0000000000003d3e         mov        qword [rdi+0x28], rsi
0000000000003d42         mov        qword [rdi+0x30], rdx
0000000000003d46         ret
                        ; endp

                     loc_3d47:
0000000000003d47         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000003d4b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000003d50         push       r15                                         ; End of unwind block (FDE at 0x6ff8), Begin of unwind block (FDE at 0x700c)
0000000000003d52         push       r14
0000000000003d54         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003d5b         push       r13
0000000000003d5d         push       r12
0000000000003d5f         mov        r13, rdi
0000000000003d62         push       rbp
0000000000003d63         push       rbx
0000000000003d64         mov        rbx, r8
0000000000003d67         mov        r14, rsi
0000000000003d6a         mov        r15, rdx
0000000000003d6d         sub        rsp, 0x18
0000000000003d71         test       r8, r8
0000000000003d74         cmove      rbx, rax
0000000000003d78         mov        qword [rsp+0x48+var_40], rcx
0000000000003d7d         call       j___errno_location                          ; __errno_location
0000000000003d82         mov        r12d, dword [rax]
0000000000003d85         mov        rbp, rax
0000000000003d88         lea        rax, qword [rbx+8]
0000000000003d8c         sub        rsp, 0x8
0000000000003d90         mov        r9d, dword [rbx+4]
0000000000003d94         push       qword [rbx+0x30]
0000000000003d97         mov        r8d, dword [rbx]
0000000000003d9a         push       qword [rbx+0x28]
0000000000003d9d         mov        rdx, r15
0000000000003da0         push       rax
0000000000003da1         mov        rcx, qword [rsp+0x68+var_40]
0000000000003da6         mov        rsi, r14
0000000000003da9         mov        rdi, r13
0000000000003dac         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003db1         mov        dword [rbp], r12d
0000000000003db5         add        rsp, 0x38
0000000000003db9         pop        rbx
0000000000003dba         pop        rbp
0000000000003dbb         pop        r12
0000000000003dbd         pop        r13
0000000000003dbf         pop        r14
0000000000003dc1         pop        r15
0000000000003dc3         ret
                        ; endp
0000000000003dc4         align      16                                          ; End of unwind block (FDE at 0x700c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000003dd0         push       r15                                         ; Begin of unwind block (FDE at 0x7060), CODE XREF=quotearg_alloc+5
0000000000003dd2         push       r14
0000000000003dd4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003ddb         push       r13
0000000000003ddd         push       r12
0000000000003ddf         mov        r12, rdx
0000000000003de2         push       rbp
0000000000003de3         push       rbx
0000000000003de4         mov        rbx, rcx
0000000000003de7         mov        r14, rdi
0000000000003dea         mov        r15, rsi
0000000000003ded         sub        rsp, 0x38
0000000000003df1         test       rcx, rcx
0000000000003df4         cmove      rbx, rax
0000000000003df8         xor        ebp, ebp
0000000000003dfa         call       j___errno_location                          ; __errno_location
0000000000003dff         test       r12, r12
0000000000003e02         mov        r13, rax
0000000000003e05         mov        eax, dword [rax]
0000000000003e07         sete       bpl
0000000000003e0b         or         ebp, dword [rbx+4]
0000000000003e0e         lea        r10, qword [rbx+8]
0000000000003e12         sub        rsp, 0x8
0000000000003e16         mov        r8d, dword [rbx]
0000000000003e19         mov        rcx, r15
0000000000003e1c         mov        dword [rsp+0x70+var_5C], eax
0000000000003e20         push       qword [rbx+0x30]
0000000000003e23         mov        rdx, r14
0000000000003e26         push       qword [rbx+0x28]
0000000000003e29         push       r10
0000000000003e2b         xor        esi, esi
0000000000003e2d         mov        r9d, ebp
0000000000003e30         xor        edi, edi
0000000000003e32         mov        qword [rsp+0x88+var_48], r10
0000000000003e37         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003e3c         lea        rsi, qword [rax+1]
0000000000003e40         mov        qword [rsp+0x88+var_40], rax
0000000000003e45         add        rsp, 0x20
0000000000003e49         mov        rdi, rsi
0000000000003e4c         mov        qword [rsp+0x68+var_50], rsi
0000000000003e51         call       xmalloc                                     ; xmalloc
0000000000003e56         mov        qword [rsp+0x68+var_58], rax
0000000000003e5b         sub        rsp, 0x8
0000000000003e5f         push       qword [rbx+0x30]
0000000000003e62         push       qword [rbx+0x28]
0000000000003e65         mov        r10, qword [rsp+0x80+var_48]
0000000000003e6a         mov        r9d, ebp
0000000000003e6d         mov        r8d, dword [rbx]
0000000000003e70         mov        rcx, r15
0000000000003e73         mov        rdx, r14
0000000000003e76         mov        rdi, rax
0000000000003e79         push       r10
0000000000003e7b         mov        rsi, qword [rsp+0x88+var_50]
0000000000003e80         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003e85         mov        eax, dword [rsp+0x88+var_5C]
0000000000003e89         add        rsp, 0x20
0000000000003e8d         test       r12, r12
0000000000003e90         mov        dword [r13], eax
0000000000003e94         je         loc_3e9f

0000000000003e96         mov        r11, qword [rsp+0x68+var_40]
0000000000003e9b         mov        qword [r12], r11

                     loc_3e9f:
0000000000003e9f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000003ea4         add        rsp, 0x38
0000000000003ea8         pop        rbx
0000000000003ea9         pop        rbp
0000000000003eaa         pop        r12
0000000000003eac         pop        r13
0000000000003eae         pop        r14
0000000000003eb0         pop        r15
0000000000003eb2         ret
                        ; endp
0000000000003eb3         align      64                                          ; End of unwind block (FDE at 0x7060)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000003ec0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x70cc)
0000000000003ec3         xor        edx, edx
0000000000003ec5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000003eca         align      16                                          ; End of unwind block (FDE at 0x70cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000003ed0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x70e0), nslots
0000000000003ed6         push       r12
0000000000003ed8         mov        r12, qword [slotvec]                        ; slotvec
0000000000003edf         push       rbp
0000000000003ee0         push       rbx
0000000000003ee1         cmp        eax, 0x1
0000000000003ee4         jle        loc_3f11

0000000000003ee6         sub        eax, 0x2
0000000000003ee9         lea        rbx, qword [r12+0x18]
0000000000003eee         shl        rax, 0x4
0000000000003ef2         lea        rbp, qword [r12+rax+0x28]
0000000000003ef7         nop        word [rax+rax]

                     loc_3f00:
0000000000003f00         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000003f03         add        rbx, 0x10
0000000000003f07         call       j_free                                      ; free
0000000000003f0c         cmp        rbx, rbp
0000000000003f0f         jne        loc_3f00

                     loc_3f11:
0000000000003f11         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000003f16         lea        rbx, qword [slot0]                          ; slot0
0000000000003f1d         cmp        rdi, rbx
0000000000003f20         je         loc_3f39

0000000000003f22         call       j_free                                      ; free
0000000000003f27         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000003f32         mov        qword [slotvec0+8], rbx                     ; 0x208078

                     loc_3f39:
0000000000003f39         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000003f40         cmp        r12, rbx
0000000000003f43         je         loc_3f54

0000000000003f45         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003f48         call       j_free                                      ; free
0000000000003f4d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_3f54:
0000000000003f54         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000003f55         mov        dword [nslots], 0x1                         ; nslots
0000000000003f5f         pop        rbp
0000000000003f60         pop        r12
0000000000003f62         ret
                        ; endp
0000000000003f63         align      16                                          ; End of unwind block (FDE at 0x70e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000003f70         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x710c), default_quoting_options
0000000000003f77         mov        rdx, 0xffffffffffffffff
0000000000003f7e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003f83         align      16                                          ; End of unwind block (FDE at 0x710c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000003f90         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7120), default_quoting_options
0000000000003f97         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003f9c         align      32                                          ; End of unwind block (FDE at 0x7120)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000003fa0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7134), default_quoting_options
0000000000003fa7         mov        rsi, rdi
0000000000003faa         mov        rdx, 0xffffffffffffffff
0000000000003fb1         xor        edi, edi
0000000000003fb3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003fb8         align      64                                          ; End of unwind block (FDE at 0x7134)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000003fc0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7148), default_quoting_options
0000000000003fc7         mov        rdx, rsi
0000000000003fca         mov        rsi, rdi
0000000000003fcd         xor        edi, edi
0000000000003fcf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003fd4         align      32                                          ; End of unwind block (FDE at 0x7148)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000003fe0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x715c)
0000000000003fe4         mov        rax, rdx
0000000000003fe7         mov        rdx, qword [fs:0x28]
0000000000003ff0         mov        qword [rsp+0x48+var_10], rdx
0000000000003ff5         xor        edx, edx
0000000000003ff7         cmp        esi, 0xa
0000000000003ffa         je         loc_4064

0000000000003ffc         mov        dword [rsp+0x48+var_48], esi
0000000000003fff         mov        rcx, rsp
0000000000004002         mov        rdx, 0xffffffffffffffff
0000000000004009         mov        rsi, rax
000000000000400c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004015         mov        qword [rsp+0x48+var_3C], 0x0
000000000000401e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004027         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004030         mov        qword [rsp+0x48+var_24], 0x0
0000000000004039         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004042         mov        dword [rsp+0x48+var_14], 0x0
000000000000404a         call       quotearg_n_options                          ; quotearg_n_options
000000000000404f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004054         xor        rcx, qword [fs:0x28]
000000000000405d         jne        loc_4069

000000000000405f         add        rsp, 0x48
0000000000004063         ret
                        ; endp

                     loc_4064:
0000000000004064         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4069:
0000000000004069         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000406e         align      16                                          ; End of unwind block (FDE at 0x715c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004070         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7178), CODE XREF=quotearg_style_mem+10
0000000000004074         mov        rax, rdx
0000000000004077         mov        rdx, rcx
000000000000407a         mov        rcx, qword [fs:0x28]
0000000000004083         mov        qword [rsp+0x48+var_10], rcx
0000000000004088         xor        ecx, ecx
000000000000408a         cmp        esi, 0xa
000000000000408d         je         loc_40f0

000000000000408f         mov        dword [rsp+0x48+var_48], esi
0000000000004092         mov        rcx, rsp
0000000000004095         mov        rsi, rax
0000000000004098         mov        qword [rsp+0x48+var_44], 0x0
00000000000040a1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000040aa         mov        qword [rsp+0x48+var_34], 0x0
00000000000040b3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000040bc         mov        qword [rsp+0x48+var_24], 0x0
00000000000040c5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000040ce         mov        dword [rsp+0x48+var_14], 0x0
00000000000040d6         call       quotearg_n_options                          ; quotearg_n_options
00000000000040db         mov        rdx, qword [rsp+0x48+var_10]
00000000000040e0         xor        rdx, qword [fs:0x28]
00000000000040e9         jne        loc_40f5

00000000000040eb         add        rsp, 0x48
00000000000040ef         ret
                        ; endp

                     loc_40f0:
00000000000040f0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_40f5:
00000000000040f5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000040fa         align      256                                         ; End of unwind block (FDE at 0x7178)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004100         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x7194), CODE XREF=main+1154, main+1333, main+1422, main+1537, main+1732, main+1934, main+2036, main+2219, main+2275, main+2308, main+2454
0000000000004103         mov        esi, edi
0000000000004105         xor        edi, edi
0000000000004107         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000410c         align      16                                          ; End of unwind block (FDE at 0x7194)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004110         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x71a8)
0000000000004113         mov        rdx, rsi
0000000000004116         mov        esi, edi
0000000000004118         xor        edi, edi
000000000000411a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000411f         align      32                                          ; End of unwind block (FDE at 0x71a8)

                     quotearg_char_mem:
0000000000004120         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x71bc), CODE XREF=quotearg_char+11
0000000000004124         mov        ecx, edx
0000000000004126         mov        rax, qword [fs:0x28]
000000000000412f         mov        qword [rsp+0x48+var_10], rax
0000000000004134         xor        eax, eax
0000000000004136         mov        rax, qword [qword_208230]                   ; qword_208230
000000000000413d         mov        r8, rsp
0000000000004140         and        ecx, 0x1f
0000000000004143         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000414b         mov        qword [rsp+0x48+var_18], rax
0000000000004150         mov        eax, edx
0000000000004152         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004156         shr        al, 0x5
0000000000004159         movzx      eax, al
000000000000415c         lea        r9, qword [r8+rax*4+8]
0000000000004161         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208210
0000000000004169         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000416e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208220
0000000000004176         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000417b         mov        edx, dword [r9]
000000000000417e         mov        eax, edx
0000000000004180         shr        eax, cl
0000000000004182         not        eax
0000000000004184         and        eax, 0x1
0000000000004187         shl        eax, cl
0000000000004189         mov        rcx, r8
000000000000418c         xor        eax, edx
000000000000418e         mov        rdx, rsi
0000000000004191         mov        rsi, rdi
0000000000004194         mov        dword [r9], eax
0000000000004197         xor        edi, edi
0000000000004199         call       quotearg_n_options                          ; quotearg_n_options
000000000000419e         mov        rsi, qword [rsp+0x48+var_10]
00000000000041a3         xor        rsi, qword [fs:0x28]
00000000000041ac         jne        loc_41b3

00000000000041ae         add        rsp, 0x48
00000000000041b2         ret
                        ; endp

                     loc_41b3:
00000000000041b3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000041b8         align      64                                          ; End of unwind block (FDE at 0x71bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
00000000000041c0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x71d8)
00000000000041c4         mov        rsi, 0xffffffffffffffff
00000000000041cb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
00000000000041d0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x71d8), Begin of unwind block (FDE at 0x71ec), CODE XREF=close_stdout+101
00000000000041d5         mov        rsi, 0xffffffffffffffff
00000000000041dc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000041e1         align      16                                          ; End of unwind block (FDE at 0x71ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
00000000000041f0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x7200)
00000000000041f5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000041fa         align      512                                         ; End of unwind block (FDE at 0x7200)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004200         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7214)
0000000000004204         mov        rax, rdx
0000000000004207         mov        rdx, qword [fs:0x28]
0000000000004210         mov        qword [rsp+0x48+var_10], rdx
0000000000004215         xor        edx, edx
0000000000004217         cmp        esi, 0xa
000000000000421a         je         loc_4284

000000000000421c         mov        dword [rsp+0x48+var_48], esi
000000000000421f         mov        rcx, rsp
0000000000004222         mov        rdx, 0xffffffffffffffff
0000000000004229         mov        rsi, rax
000000000000422c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004235         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000423e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004247         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004250         mov        qword [rsp+0x48+var_24], 0x0
0000000000004259         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004262         mov        dword [rsp+0x48+var_14], 0x0
000000000000426a         call       quotearg_n_options                          ; quotearg_n_options
000000000000426f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004274         xor        rcx, qword [fs:0x28]
000000000000427d         jne        loc_4289

000000000000427f         add        rsp, 0x48
0000000000004283         ret
                        ; endp

                     loc_4284:
0000000000004284         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4289:
0000000000004289         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000428e         align      16                                          ; End of unwind block (FDE at 0x7214)

                     quotearg_n_custom_mem:
0000000000004290         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7230), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004294         mov        r9, rcx
0000000000004297         mov        rcx, qword [qword_208230]                   ; qword_208230
000000000000429e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000042a6         mov        rax, qword [fs:0x28]
00000000000042af         mov        qword [rsp+0x48+var_10], rax
00000000000042b4         xor        eax, eax
00000000000042b6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000042ba         test       rsi, rsi
00000000000042bd         mov        qword [rsp+0x48+var_18], rcx
00000000000042c2         mov        dword [rsp+0x48+var_48], 0xa
00000000000042c9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208210
00000000000042d1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000042d6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208220
00000000000042de         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000042e3         je         loc_4317

00000000000042e5         test       rdx, rdx
00000000000042e8         je         loc_4317

00000000000042ea         mov        qword [rsp+0x48+var_20], rsi
00000000000042ef         mov        qword [rsp+0x48+var_18], rdx
00000000000042f4         mov        rcx, rsp
00000000000042f7         mov        rdx, r8
00000000000042fa         mov        rsi, r9
00000000000042fd         call       quotearg_n_options                          ; quotearg_n_options
0000000000004302         mov        rdi, qword [rsp+0x48+var_10]
0000000000004307         xor        rdi, qword [fs:0x28]
0000000000004310         jne        loc_431c

0000000000004312         add        rsp, 0x48
0000000000004316         ret
                        ; endp

                     loc_4317:
0000000000004317         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_431c:
000000000000431c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004321         align      16                                          ; End of unwind block (FDE at 0x7230)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004330         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x724c)
0000000000004337         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000433c         align      64                                          ; End of unwind block (FDE at 0x724c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004340         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7260)
0000000000004343         mov        r8, 0xffffffffffffffff
000000000000434a         mov        rdx, rsi
000000000000434d         mov        rsi, rdi
0000000000004350         xor        edi, edi
0000000000004352         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004357         align      32                                          ; End of unwind block (FDE at 0x7260)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004360         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x7274)
0000000000004363         mov        rcx, rdx
0000000000004366         mov        rdx, rsi
0000000000004369         mov        rsi, rdi
000000000000436c         xor        edi, edi
000000000000436e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004373         align      128                                         ; End of unwind block (FDE at 0x7274)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004380         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7288), quote_quoting_options
0000000000004387         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000438c         align      16                                          ; End of unwind block (FDE at 0x7288)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004390         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x729c), quote_quoting_options
0000000000004397         mov        rdx, rsi
000000000000439a         mov        rsi, rdi
000000000000439d         xor        edi, edi
000000000000439f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043a4         align      16                                          ; End of unwind block (FDE at 0x729c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000043b0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x72b0), quote_quoting_options, CODE XREF=main+770, main+787, main+865, main+882, main+2368, main+2385
00000000000043b7         mov        rdx, 0xffffffffffffffff
00000000000043be         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043c3         align      16                                          ; End of unwind block (FDE at 0x72b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
00000000000043d0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x72c4), quote_quoting_options, CODE XREF=xnumtoimax+111
00000000000043d7         mov        rsi, rdi
00000000000043da         mov        rdx, 0xffffffffffffffff
00000000000043e1         xor        edi, edi
00000000000043e3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043e8         align      16                                          ; End of unwind block (FDE at 0x72c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000043f0         push       r15                                         ; Begin of unwind block (FDE at 0x72dc), CODE XREF=version_etc_va+75, version_etc+161
00000000000043f2         push       r14
00000000000043f4         push       r13
00000000000043f6         push       r12
00000000000043f8         mov        r12, r9
00000000000043fb         push       rbp
00000000000043fc         push       rbx
00000000000043fd         mov        rbp, rdi
0000000000004400         mov        rbx, r8
0000000000004403         sub        rsp, 0x28
0000000000004407         test       rsi, rsi
000000000000440a         je         loc_4528

0000000000004410         mov        r8, rdx
0000000000004413         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000441a         mov        r9, rcx
000000000000441d         xor        eax, eax
000000000000441f         mov        rcx, rsi
0000000000004422         mov        esi, 0x1
0000000000004427         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_442c:
000000000000442c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x65db, CODE XREF=version_etc_arn+337
0000000000004433         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004435         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000443a         call       j_dcgettext                                 ; dcgettext
000000000000443f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004446         mov        rcx, rax
0000000000004449         mov        r8d, 0x7e3
000000000000444f         mov        esi, 0x1
0000000000004454         mov        rdi, rbp
0000000000004457         xor        eax, eax
0000000000004459         call       j___fprintf_chk                             ; __fprintf_chk
000000000000445e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004465         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004467         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000446c         call       j_dcgettext                                 ; dcgettext
0000000000004471         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004474         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004477         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000447c         cmp        r12, 0x9
0000000000004480         ja         loc_47c0

0000000000004486         lea        rdx, qword [switch_table_68c4]              ; switch_table_68c4
000000000000448d         movsxd     rax, dword [rdx+r12*4]
0000000000004491         add        rax, rdx
0000000000004494         jmp        rax                                         ; switch statement using table at 0x68c4, with 10 cases, 0x44a0,0x4516,0x4550,0x45a8,0x45e8,0x4630,0x4680,0x46d8,0x4708,0x4770
0000000000004496         align      32

                     loc_44a0:
00000000000044a0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
00000000000044a4         mov        rax, qword [rbx+0x10]
00000000000044a8         lea        rsi, qword [aWrittenBySSSns_67d8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000044af         mov        r8, qword [rbx+8]
00000000000044b3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000044b8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000044ba         mov        r13, qword [rbx+0x30]
00000000000044be         mov        r12, qword [rbx+0x28]
00000000000044c2         mov        qword [rsp+0x58+var_48], r9
00000000000044c7         mov        r15, qword [rbx+0x20]
00000000000044cb         mov        r14, qword [rbx+0x18]
00000000000044cf         mov        qword [rsp+0x58+var_58], rax
00000000000044d3         mov        qword [rsp+0x58+var_50], r8
00000000000044d8         mov        rbx, qword [rbx]
00000000000044db         call       j_dcgettext                                 ; dcgettext
00000000000044e0         sub        rsp, 0x8

                     loc_44e4:
00000000000044e4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000044e9         mov        rdx, rax
00000000000044ec         mov        rcx, rbx
00000000000044ef         mov        esi, 0x1
00000000000044f4         mov        rdi, rbp
00000000000044f7         xor        eax, eax
00000000000044f9         push       r9
00000000000044fb         push       r13
00000000000044fd         push       r12
00000000000044ff         push       r15
0000000000004501         push       r14
0000000000004503         mov        r9, qword [rsp+0x88+var_58]
0000000000004508         mov        r8, qword [rsp+0x88+var_50]
000000000000450d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004512         add        rsp, 0x30

                     loc_4516:
0000000000004516         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000451a         pop        rbx
000000000000451b         pop        rbp
000000000000451c         pop        r12
000000000000451e         pop        r13
0000000000004520         pop        r14
0000000000004522         pop        r15
0000000000004524         ret
                        ; endp
0000000000004525         align      8

                     loc_4528:
0000000000004528         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000452b         mov        rcx, rdx
000000000000452e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004535         mov        esi, 0x1
000000000000453a         xor        eax, eax
000000000000453c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004541         jmp        loc_442c
0000000000004546         align      16

                     loc_4550:
0000000000004550         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004554         mov        r9, qword [rbx+0x38]
0000000000004558         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000455f         mov        rax, qword [rbx+0x10]
0000000000004563         mov        r8, qword [rbx+8]
0000000000004567         mov        edx, 0x5
000000000000456c         mov        r13, qword [rbx+0x30]
0000000000004570         mov        r12, qword [rbx+0x28]
0000000000004574         mov        r15, qword [rbx+0x20]
0000000000004578         mov        r14, qword [rbx+0x18]
000000000000457c         mov        rbx, qword [rbx]
000000000000457f         mov        qword [rsp+0x58+var_40], r10
0000000000004584         mov        qword [rsp+0x58+var_48], r9
0000000000004589         mov        qword [rsp+0x58+var_58], rax
000000000000458d         mov        qword [rsp+0x58+var_50], r8

                     loc_4592:
0000000000004592         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004594         call       j_dcgettext                                 ; dcgettext
0000000000004599         mov        r10, qword [rsp+0x58+var_40]
000000000000459e         push       r10
00000000000045a0         jmp        loc_44e4
00000000000045a5         align      8

                     loc_45a8:
00000000000045a8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
00000000000045ab         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000045b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000045b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000045b9         call       j_dcgettext                                 ; dcgettext
00000000000045be         add        rsp, 0x28
00000000000045c2         mov        rcx, rbx
00000000000045c5         mov        rdi, rbp
00000000000045c8         pop        rbx
00000000000045c9         pop        rbp
00000000000045ca         pop        r12
00000000000045cc         pop        r13
00000000000045ce         pop        r14
00000000000045d0         pop        r15
00000000000045d2         mov        rdx, rax
00000000000045d5         mov        esi, 0x1
00000000000045da         xor        eax, eax
00000000000045dc         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000045e1         align      8

                     loc_45e8:
00000000000045e8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
00000000000045ec         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000045f3         mov        rbx, qword [rbx]
00000000000045f6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000045fb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000045fd         call       j_dcgettext                                 ; dcgettext
0000000000004602         add        rsp, 0x28
0000000000004606         mov        r8, r12
0000000000004609         mov        rcx, rbx
000000000000460c         mov        rdi, rbp
000000000000460f         mov        rdx, rax
0000000000004612         mov        esi, 0x1
0000000000004617         pop        rbx
0000000000004618         pop        rbp
0000000000004619         pop        r12
000000000000461b         pop        r13
000000000000461d         pop        r14
000000000000461f         pop        r15
0000000000004621         xor        eax, eax
0000000000004623         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004628         align      16

                     loc_4630:
0000000000004630         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004634         mov        r12, qword [rbx+8]
0000000000004638         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000463f         mov        rbx, qword [rbx]
0000000000004642         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004647         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004649         call       j_dcgettext                                 ; dcgettext
000000000000464e         add        rsp, 0x28
0000000000004652         mov        r9, r13
0000000000004655         mov        r8, r12
0000000000004658         mov        rcx, rbx
000000000000465b         mov        rdi, rbp
000000000000465e         mov        rdx, rax
0000000000004661         pop        rbx
0000000000004662         pop        rbp
0000000000004663         pop        r12
0000000000004665         pop        r13
0000000000004667         pop        r14
0000000000004669         pop        r15
000000000000466b         mov        esi, 0x1
0000000000004670         xor        eax, eax
0000000000004672         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004677         align      128

                     loc_4680:
0000000000004680         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004687         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000468c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000468e         mov        r14, qword [rbx+0x18]
0000000000004692         mov        r13, qword [rbx+0x10]
0000000000004696         mov        r12, qword [rbx+8]
000000000000469a         mov        rbx, qword [rbx]
000000000000469d         call       j_dcgettext                                 ; dcgettext
00000000000046a2         sub        rsp, 0x8

                     loc_46a6:
00000000000046a6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000046a8         mov        rdx, rax
00000000000046ab         mov        r9, r13
00000000000046ae         mov        r8, r12
00000000000046b1         mov        rcx, rbx
00000000000046b4         mov        rdi, rbp
00000000000046b7         mov        esi, 0x1
00000000000046bc         xor        eax, eax
00000000000046be         call       j___fprintf_chk                             ; __fprintf_chk
00000000000046c3         pop        rax
00000000000046c4         pop        rdx
00000000000046c5         add        rsp, 0x28
00000000000046c9         pop        rbx
00000000000046ca         pop        rbp
00000000000046cb         pop        r12
00000000000046cd         pop        r13
00000000000046cf         pop        r14
00000000000046d1         pop        r15
00000000000046d3         ret
                        ; endp
00000000000046d4         align      8

                     loc_46d8:
00000000000046d8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
00000000000046dc         lea        rsi, qword [aWrittenBySSSns_6758]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
00000000000046e3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000046e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000046ea         mov        r14, qword [rbx+0x18]
00000000000046ee         mov        r13, qword [rbx+0x10]
00000000000046f2         mov        r12, qword [rbx+8]
00000000000046f6         mov        rbx, qword [rbx]
00000000000046f9         call       j_dcgettext                                 ; dcgettext
00000000000046fe         push       r15
0000000000004700         jmp        loc_46a6
0000000000004702         align      8

                     loc_4708:
0000000000004708         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000470c         mov        r12, qword [rbx+0x28]
0000000000004710         lea        rsi, qword [aWrittenBySSSns_6780]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004717         mov        r15, qword [rbx+0x20]
000000000000471b         mov        r14, qword [rbx+0x18]
000000000000471f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004724         mov        r13, qword [rbx+0x10]
0000000000004728         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000472a         mov        rbx, qword [rbx]
000000000000472d         mov        qword [rsp+0x58+var_58], r8
0000000000004731         call       j_dcgettext                                 ; dcgettext
0000000000004736         sub        rsp, 0x8
000000000000473a         mov        r9, r13
000000000000473d         push       r12
000000000000473f         push       r15
0000000000004741         push       r14

                     loc_4743:
0000000000004743         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004748         mov        rcx, rbx
000000000000474b         mov        rdx, rax
000000000000474e         mov        rdi, rbp
0000000000004751         mov        esi, 0x1
0000000000004756         xor        eax, eax
0000000000004758         call       j___fprintf_chk                             ; __fprintf_chk
000000000000475d         add        rsp, 0x20
0000000000004761         add        rsp, 0x28
0000000000004765         pop        rbx
0000000000004766         pop        rbp
0000000000004767         pop        r12
0000000000004769         pop        r13
000000000000476b         pop        r14
000000000000476d         pop        r15
000000000000476f         ret
                        ; endp

                     loc_4770:
0000000000004770         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004774         mov        r13, qword [rbx+0x30]
0000000000004778         lea        rsi, qword [aWrittenBySSSns_67a8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000477f         mov        r12, qword [rbx+0x28]
0000000000004783         mov        r15, qword [rbx+0x20]
0000000000004787         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000478c         mov        r14, qword [rbx+0x18]
0000000000004790         mov        r8, qword [rbx+8]
0000000000004794         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004796         mov        qword [rsp+0x58+var_50], r9
000000000000479b         mov        rbx, qword [rbx]
000000000000479e         mov        qword [rsp+0x58+var_58], r8
00000000000047a2         call       j_dcgettext                                 ; dcgettext
00000000000047a7         push       r13
00000000000047a9         push       r12
00000000000047ab         push       r15
00000000000047ad         push       r14
00000000000047af         mov        r9, qword [rsp+0x78+var_50]
00000000000047b4         jmp        loc_4743
00000000000047b6         align      64

                     loc_47c0:
00000000000047c0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
00000000000047c4         mov        r9, qword [rbx+0x38]
00000000000047c8         mov        edx, 0x5
00000000000047cd         mov        rax, qword [rbx+0x10]
00000000000047d1         mov        r8, qword [rbx+8]
00000000000047d5         lea        rsi, qword [aWrittenBySSSns_6840]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
00000000000047dc         mov        r13, qword [rbx+0x30]
00000000000047e0         mov        r12, qword [rbx+0x28]
00000000000047e4         mov        r15, qword [rbx+0x20]
00000000000047e8         mov        r14, qword [rbx+0x18]
00000000000047ec         mov        qword [rsp+0x58+var_40], r10
00000000000047f1         mov        qword [rsp+0x58+var_48], r9
00000000000047f6         mov        qword [rsp+0x58+var_58], rax
00000000000047fa         mov        qword [rsp+0x58+var_50], r8
00000000000047ff         mov        rbx, qword [rbx]
0000000000004802         jmp        loc_4592
0000000000004807         align      16                                          ; End of unwind block (FDE at 0x72dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004810         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x73f0)
0000000000004813         cmp        qword [r8], 0x0
0000000000004817         je         j_version_etc_arn                           ; version_etc_arn

0000000000004819         nop        dword [rax]

                     loc_4820:
0000000000004820         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004824         cmp        qword [r8+r9*8], 0x0
0000000000004829         jne        loc_4820

                     j_version_etc_arn:        // version_etc_arn
000000000000482b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004830         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x73f0), Begin of unwind block (FDE at 0x7404)
0000000000004834         mov        r10, r8
0000000000004837         xor        r9d, r9d
000000000000483a         mov        rax, qword [fs:0x28]
0000000000004843         mov        qword [rsp+0x68+var_10], rax
0000000000004848         xor        eax, eax
000000000000484a         mov        r8, rsp
000000000000484d         nop        dword [rax]

                     loc_4850:
0000000000004850         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004853         cmp        eax, 0x2f
0000000000004856         ja         loc_489a

0000000000004858         mov        r11d, eax
000000000000485b         add        r11, qword [r10+0x10]
000000000000485f         add        eax, 0x8
0000000000004862         mov        dword [r10], eax

                     loc_4865:
0000000000004865         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004868         test       rax, rax
000000000000486b         mov        qword [r8+r9*8], rax
000000000000486f         je         loc_487b

0000000000004871         add        r9, 0x1
0000000000004875         cmp        r9, 0xa
0000000000004879         jne        loc_4850

                     loc_487b:
000000000000487b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004880         mov        rax, qword [rsp+0x68+var_10]
0000000000004885         xor        rax, qword [fs:0x28]
000000000000488e         jne        loc_4895

0000000000004890         add        rsp, 0x68
0000000000004894         ret
                        ; endp

                     loc_4895:
0000000000004895         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_489a:
000000000000489a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000489e         lea        rax, qword [r11+8]
00000000000048a2         mov        qword [r10+8], rax
00000000000048a6         jmp        loc_4865
00000000000048a8         align      16                                          ; End of unwind block (FDE at 0x7404)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000048b0         push       rbp                                         ; Begin of unwind block (FDE at 0x7420), CODE XREF=main+259
00000000000048b1         push       rbx
00000000000048b2         mov        r10d, 0x20
00000000000048b8         xor        r11d, r11d
00000000000048bb         sub        rsp, 0xb8
00000000000048c2         mov        rax, qword [fs:0x28]
00000000000048cb         mov        qword [rsp+0xc8+var_50], rax
00000000000048d0         xor        eax, eax
00000000000048d2         lea        rax, qword [rsp+0xc8+arg_0]
00000000000048da         mov        qword [rsp+0xc8+var_28], r8
00000000000048e2         lea        rbx, qword [rsp+0xc8+arg_0]
00000000000048ea         lea        r8, qword [rsp+0xc8+var_A8]
00000000000048ef         mov        qword [rsp+0xc8+var_20], r9
00000000000048f7         mov        dword [rsp+0xc8+var_C0], 0x20
00000000000048ff         mov        qword [rsp+0xc8+var_B8], rax
0000000000004904         lea        rax, qword [rsp+0xc8+var_48]
000000000000490c         xor        r9d, r9d
000000000000490f         mov        qword [rsp+0xc8+var_B0], rax
0000000000004914         mov        rbp, rax
0000000000004917         nop        word [rax+rax]

                     loc_4920:
0000000000004920         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004924         ja         loc_497c

0000000000004926         mov        eax, r10d
0000000000004929         mov        r11d, 0x1
000000000000492f         add        r10d, 0x8
0000000000004933         add        rax, rbp

                     loc_4936:
0000000000004936         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004939         test       rax, rax
000000000000493c         mov        qword [r8+r9*8], rax
0000000000004940         je         loc_494c

0000000000004942         add        r9, 0x1
0000000000004946         cmp        r9, 0xa
000000000000494a         jne        loc_4920

                     loc_494c:
000000000000494c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000494f         jne        loc_4975

                     loc_4951:
0000000000004951         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004956         mov        rax, qword [rsp+0xc8+var_50]
000000000000495b         xor        rax, qword [fs:0x28]
0000000000004964         jne        loc_4970

0000000000004966         add        rsp, 0xb8
000000000000496d         pop        rbx
000000000000496e         pop        rbp
000000000000496f         ret
                        ; endp

                     loc_4970:
0000000000004970         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4975:
0000000000004975         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000497a         jmp        loc_4951

                     loc_497c:
000000000000497c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000497f         add        rbx, 0x8
0000000000004983         jmp        loc_4936
0000000000004985         align      16                                          ; End of unwind block (FDE at 0x7420)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004990         push       rbx                                         ; Begin of unwind block (FDE at 0x744c)
0000000000004991         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004998         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000499d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000499f         call       j_dcgettext                                 ; dcgettext
00000000000049a4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000049ab         mov        rsi, rax
00000000000049ae         mov        edi, 0x1
00000000000049b3         xor        eax, eax
00000000000049b5         call       j___printf_chk                              ; __printf_chk
00000000000049ba         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000049c1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000049c6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000049c8         call       j_dcgettext                                 ; dcgettext
00000000000049cd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000049d4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x58c0
00000000000049db         mov        rsi, rax
00000000000049de         mov        edi, 0x1
00000000000049e3         xor        eax, eax
00000000000049e5         call       j___printf_chk                              ; __printf_chk
00000000000049ea         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000049f1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000049f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000049fa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000049ff         call       j_dcgettext                                 ; dcgettext
0000000000004a04         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004a07         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004a0a         pop        rbx
0000000000004a0b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004a10         push       rbx                                         ; End of unwind block (FDE at 0x744c), Begin of unwind block (FDE at 0x746c), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004a11         mov        rbx, rdi
0000000000004a14         call       j_malloc                                    ; malloc
0000000000004a19         test       rax, rax
0000000000004a1c         jne        loc_4a23

0000000000004a1e         test       rbx, rbx
0000000000004a21         jne        loc_4a25

                     loc_4a23:
0000000000004a23         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004a24         ret
                        ; endp

                     loc_4a25:
0000000000004a25         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4a2a:
0000000000004a2a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x746c)
                     xnmalloc:
0000000000004a30         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7488)
0000000000004a33         mul        rsi
0000000000004a36         mov        rdi, rax
0000000000004a39         seto       al
0000000000004a3c         test       rdi, rdi
0000000000004a3f         js         loc_4a4b

0000000000004a41         movzx      eax, al
0000000000004a44         test       rax, rax
0000000000004a47         jne        loc_4a4b

0000000000004a49         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_4a4b:
0000000000004a4b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000004a4f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4a54:
0000000000004a54         nop                                                    ; End of unwind block (FDE at 0x7488)
0000000000004a56         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000004a60         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x749c)
                        ; endp
0000000000004a62         align      16                                          ; End of unwind block (FDE at 0x749c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000004a70         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x74b0), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000004a73         push       rbx
0000000000004a74         mov        rbx, rsi
0000000000004a77         jne        loc_4a7e

0000000000004a79         test       rdi, rdi
0000000000004a7c         jne        loc_4a98

                     loc_4a7e:
0000000000004a7e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000004a81         call       j_realloc                                   ; realloc
0000000000004a86         test       rax, rax
0000000000004a89         jne        loc_4a90

0000000000004a8b         test       rbx, rbx
0000000000004a8e         jne        loc_4aa1

                     loc_4a90:
0000000000004a90         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000004a91         ret
                        ; endp
0000000000004a92         align      8

                     loc_4a98:
0000000000004a98         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000004a9d         xor        eax, eax
0000000000004a9f         pop        rbx
0000000000004aa0         ret
                        ; endp

                     loc_4aa1:
0000000000004aa1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4aa6:
0000000000004aa6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x74b0)
                     xnrealloc:
0000000000004ab0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x74d4)
0000000000004ab3         mul        rdx
0000000000004ab6         mov        rsi, rax
0000000000004ab9         seto       al
0000000000004abc         test       rsi, rsi
0000000000004abf         js         loc_4acb

0000000000004ac1         movzx      eax, al
0000000000004ac4         test       rax, rax
0000000000004ac7         jne        loc_4acb

0000000000004ac9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_4acb:
0000000000004acb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000004acf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ad4:
0000000000004ad4         nop                                                    ; End of unwind block (FDE at 0x74d4)
0000000000004ad6         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000004ae0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x74e8)
0000000000004ae3         mov        r9, rdx
0000000000004ae6         mov        rcx, qword [rsi]
0000000000004ae9         je         loc_4b20

0000000000004aeb         xor        edx, edx
0000000000004aed         movabs     rax, 0x5555555555555554
0000000000004af7         div        r9
0000000000004afa         cmp        rax, rcx
0000000000004afd         jbe        loc_4b3b

0000000000004aff         mov        rax, rcx
0000000000004b02         shr        rax, 0x1
0000000000004b05         lea        rcx, qword [rax+rcx+1]

                     loc_4b0a:
0000000000004b0a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000004b0d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000004b11         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000004b14         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004b19         align      32

                     loc_4b20:
0000000000004b20         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000004b23         je         loc_4b48

                     loc_4b25:
0000000000004b25         mov        rax, rcx                                    ; CODE XREF=sub_4b44+28
0000000000004b28         mul        r9
0000000000004b2b         seto       dl
0000000000004b2e         test       rax, rax
0000000000004b31         movzx      edx, dl
0000000000004b34         js         loc_4b3b

0000000000004b36         test       rdx, rdx
0000000000004b39         je         loc_4b0a

                     loc_4b3b:
0000000000004b3b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000004b3f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4b44:
0000000000004b44         nop        dword [rax]
                        ; endp

                     loc_4b48:
0000000000004b48         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000004b4a         mov        eax, 0x80
0000000000004b4f         xor        r8d, r8d
0000000000004b52         div        r9
0000000000004b55         test       rax, rax
0000000000004b58         sete       r8b
0000000000004b5c         lea        rcx, qword [r8+rax]
0000000000004b60         jmp        loc_4b25
0000000000004b62         align      16                                          ; End of unwind block (FDE at 0x74e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000004b70         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7500)
0000000000004b73         mov        rax, qword [rsi]
0000000000004b76         je         loc_4ba0

0000000000004b78         movabs     rdx, 0x5555555555555553
0000000000004b82         cmp        rax, rdx
0000000000004b85         ja         loc_4bb1

0000000000004b87         mov        rdx, rax
0000000000004b8a         shr        rdx, 0x1
0000000000004b8d         lea        rax, qword [rdx+rax+1]

                     loc_4b92:
0000000000004b92         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000004b95         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000004b98         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004b9d         align      32

                     loc_4ba0:
0000000000004ba0         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000004ba3         mov        edx, 0x80
0000000000004ba8         cmove      rax, rdx
0000000000004bac         test       rax, rax
0000000000004baf         jns        loc_4b92

                     loc_4bb1:
0000000000004bb1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000004bb5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4bba:
0000000000004bba         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7500)
                     xzalloc:
0000000000004bc0         push       rbx                                         ; Begin of unwind block (FDE at 0x7518)
0000000000004bc1         mov        rbx, rdi
0000000000004bc4         call       xmalloc                                     ; xmalloc
0000000000004bc9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000004bcc         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004bce         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000004bd1         pop        rbx
0000000000004bd2         jmp        j_memset                                    ; memset
                        ; endp
0000000000004bd7         align      32                                          ; End of unwind block (FDE at 0x7518)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000004be0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7534)
0000000000004be3         sub        rsp, 0x8
0000000000004be7         mul        rsi
0000000000004bea         seto       dl
0000000000004bed         test       rax, rax
0000000000004bf0         js         loc_4c09

0000000000004bf2         movzx      edx, dl
0000000000004bf5         test       rdx, rdx
0000000000004bf8         jne        loc_4c09

0000000000004bfa         call       j_calloc                                    ; calloc
0000000000004bff         test       rax, rax
0000000000004c02         je         loc_4c09

0000000000004c04         add        rsp, 0x8
0000000000004c08         ret
                        ; endp

                     loc_4c09:
0000000000004c09         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4c0e:
0000000000004c0e         nop                                                    ; End of unwind block (FDE at 0x7534)
                        ; endp

                     xmemdup:
0000000000004c10         push       rbp                                         ; Begin of unwind block (FDE at 0x7550), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000004c11         push       rbx
0000000000004c12         mov        rbp, rdi
0000000000004c15         mov        rdi, rsi
0000000000004c18         mov        rbx, rsi
0000000000004c1b         sub        rsp, 0x8
0000000000004c1f         call       xmalloc                                     ; xmalloc
0000000000004c24         add        rsp, 0x8
0000000000004c28         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000004c2b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000004c2e         pop        rbx
0000000000004c2f         pop        rbp
0000000000004c30         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000004c33         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000004c38         align      64                                          ; End of unwind block (FDE at 0x7550)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000004c40         push       rbx                                         ; Begin of unwind block (FDE at 0x7578)
0000000000004c41         mov        rbx, rdi
0000000000004c44         call       j_strlen                                    ; strlen
0000000000004c49         mov        rdi, rbx
0000000000004c4c         lea        rsi, qword [rax+1]
0000000000004c50         pop        rbx
0000000000004c51         jmp        xmemdup                                     ; xmemdup
0000000000004c53         align      32                                          ; End of unwind block (FDE at 0x7578)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000004c60         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x7594), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000004c67         sub        rsp, 0x8
0000000000004c6b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c70         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c72         call       j_dcgettext                                 ; dcgettext
0000000000004c77         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000004c7d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x60a8
0000000000004c84         mov        rcx, rax
0000000000004c87         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004c89         xor        eax, eax
0000000000004c8b         call       j_error                                     ; error
0000000000004c90         call       j_abort                                     ; abort
                        ; endp
0000000000004c95         align      32                                          ; End of unwind block (FDE at 0x7594)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoimax:
0000000000004ca0         push       r15                                         ; Begin of unwind block (FDE at 0x75ac), CODE XREF=xdectoimax+23
0000000000004ca2         push       r14
0000000000004ca4         mov        r15, rcx
0000000000004ca7         push       r13
0000000000004ca9         push       r12
0000000000004cab         mov        r14, rdx
0000000000004cae         push       rbp
0000000000004caf         push       rbx
0000000000004cb0         mov        edx, esi
0000000000004cb2         xor        esi, esi
0000000000004cb4         mov        r12, rdi
0000000000004cb7         mov        r13, r9
0000000000004cba         sub        rsp, 0x18
0000000000004cbe         mov        rcx, rsp
0000000000004cc1         mov        ebx, dword [rsp+0x48+arg_0]
0000000000004cc5         mov        rax, qword [fs:0x28]
0000000000004cce         mov        qword [rsp+0x48+var_40], rax
0000000000004cd3         xor        eax, eax
0000000000004cd5         call       xstrtoimax                                  ; xstrtoimax
0000000000004cda         test       eax, eax
0000000000004cdc         jne        loc_4d70

0000000000004ce2         mov        rbp, qword [rsp+0x48+var_48]
0000000000004ce6         cmp        rbp, r14
0000000000004ce9         jl         loc_4cf0

0000000000004ceb         cmp        rbp, r15
0000000000004cee         jle        loc_4d46

                     loc_4cf0:
0000000000004cf0         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoimax+73
0000000000004cf5         cmp        rbp, 0x3fffffff
0000000000004cfc         mov        r14, rax
0000000000004cff         jle        loc_4d90

                     loc_4d05:
0000000000004d05         mov        dword [r14], 0x4b                           ; CODE XREF=xnumtoimax+221

                     loc_4d0c:
0000000000004d0c         mov        rdi, r12                                    ; CODE XREF=xnumtoimax+226, xnumtoimax+234, xnumtoimax+263
0000000000004d0f         call       quote                                       ; quote
0000000000004d14         mov        esi, dword [r14]
0000000000004d17         mov        r8, rax
0000000000004d1a         mov        eax, 0x0
0000000000004d1f         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000004d26         mov        rcx, r13
0000000000004d29         cmp        esi, 0x16
0000000000004d2c         cmove      esi, eax                                    ; argument "__errnum" for method j_error
0000000000004d2f         test       ebx, ebx
0000000000004d31         mov        eax, 0x1
0000000000004d36         cmove      ebx, eax
0000000000004d39         xor        eax, eax
0000000000004d3b         mov        edi, ebx                                    ; argument "__status" for method j_error
0000000000004d3d         call       j_error                                     ; error
0000000000004d42         mov        rbp, qword [rsp+0x48+var_48]

                     loc_4d46:
0000000000004d46         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoimax+78
0000000000004d4b         xor        rdx, qword [fs:0x28]
0000000000004d54         mov        rax, rbp
0000000000004d57         jne        loc_4dac

0000000000004d59         add        rsp, 0x18
0000000000004d5d         pop        rbx
0000000000004d5e         pop        rbp
0000000000004d5f         pop        r12
0000000000004d61         pop        r13
0000000000004d63         pop        r14
0000000000004d65         pop        r15
0000000000004d67         ret
                        ; endp
0000000000004d68         align      16

                     loc_4d70:
0000000000004d70         mov        ebp, eax                                    ; CODE XREF=xnumtoimax+60
0000000000004d72         call       j___errno_location                          ; __errno_location
0000000000004d77         cmp        ebp, 0x1
0000000000004d7a         mov        r14, rax
0000000000004d7d         je         loc_4d05

0000000000004d7f         cmp        ebp, 0x3
0000000000004d82         jne        loc_4d0c

0000000000004d84         mov        dword [rax], 0x0
0000000000004d8a         jmp        loc_4d0c
0000000000004d8c         align      16

                     loc_4d90:
0000000000004d90         cmp        rbp, 0xffffffffbfffffff                     ; CODE XREF=xnumtoimax+95
0000000000004d97         mov        eax, 0x22
0000000000004d9c         mov        edx, 0x4b
0000000000004da1         cmovle     eax, edx
0000000000004da4         mov        dword [r14], eax
0000000000004da7         jmp        loc_4d0c

                     loc_4dac:
0000000000004dac         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoimax+183
                        ; endp
0000000000004db1         align      64                                          ; End of unwind block (FDE at 0x75ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xdectoimax:
0000000000004dc0         sub        rsp, 0x10                                   ; Begin of unwind block (FDE at 0x75f8), CODE XREF=main+517, main+640
0000000000004dc4         push       r9
0000000000004dc6         mov        r9, r8
0000000000004dc9         mov        r8, rcx
0000000000004dcc         mov        rcx, rdx
0000000000004dcf         mov        rdx, rsi
0000000000004dd2         mov        esi, 0xa
0000000000004dd7         call       xnumtoimax                                  ; xnumtoimax
0000000000004ddc         add        rsp, 0x18
0000000000004de0         ret
                        ; endp
0000000000004de1         align      16                                          ; End of unwind block (FDE at 0x75f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoimax:
0000000000004df0         push       r15                                         ; Begin of unwind block (FDE at 0x7614), CODE XREF=xnumtoimax+53
0000000000004df2         push       r14
0000000000004df4         push       r13
0000000000004df6         push       r12
0000000000004df8         push       rbp
0000000000004df9         push       rbx
0000000000004dfa         sub        rsp, 0x28
0000000000004dfe         mov        rax, qword [fs:0x28]
0000000000004e07         mov        qword [rsp+0x58+var_40], rax
0000000000004e0c         xor        eax, eax
0000000000004e0e         cmp        edx, 0x24
0000000000004e11         ja         loc_547f

0000000000004e17         lea        rax, qword [rsp+0x58+var_48]
0000000000004e1c         test       rsi, rsi
0000000000004e1f         mov        rbx, rsi
0000000000004e22         mov        r12, rdi
0000000000004e25         mov        ebp, edx
0000000000004e27         mov        r14, rcx
0000000000004e2a         cmove      rbx, rax
0000000000004e2e         mov        r15, r8
0000000000004e31         call       j___errno_location                          ; __errno_location
0000000000004e36         xor        ecx, ecx
0000000000004e38         mov        edx, ebp
0000000000004e3a         mov        dword [rax], 0x0
0000000000004e40         mov        rsi, rbx
0000000000004e43         mov        rdi, r12
0000000000004e46         mov        r13, rax
0000000000004e49         call       j___strtol_internal                         ; __strtol_internal
0000000000004e4e         mov        rcx, qword [rbx]
0000000000004e51         mov        rbp, rax
0000000000004e54         cmp        rcx, r12
0000000000004e57         je         loc_4eb8

0000000000004e59         mov        eax, dword [r13]
0000000000004e5d         test       eax, eax
0000000000004e5f         jne        loc_4ea0

0000000000004e61         xor        r12d, r12d

                     loc_4e64:
0000000000004e64         test       r15, r15                                    ; CODE XREF=xstrtoimax+193
0000000000004e67         je         loc_4e76

0000000000004e69         movzx      r13d, byte [rcx]
0000000000004e6d         test       r13b, r13b
0000000000004e70         jne        loc_4ef3

                     loc_4e76:
0000000000004e76         mov        qword [r14], rbp                            ; CODE XREF=xstrtoimax+119, xstrtoimax+550

                     loc_4e79:
0000000000004e79         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoimax+185, xstrtoimax+227, xstrtoimax+249, xstrtoimax+383, xstrtoimax+1382
0000000000004e7e         xor        rdi, qword [fs:0x28]
0000000000004e87         mov        eax, r12d
0000000000004e8a         jne        loc_549e

0000000000004e90         add        rsp, 0x28
0000000000004e94         pop        rbx
0000000000004e95         pop        rbp
0000000000004e96         pop        r12
0000000000004e98         pop        r13
0000000000004e9a         pop        r14
0000000000004e9c         pop        r15
0000000000004e9e         ret
                        ; endp
0000000000004e9f         align      32

                     loc_4ea0:
0000000000004ea0         cmp        eax, 0x22                                   ; CODE XREF=xstrtoimax+111
0000000000004ea3         mov        r12d, 0x4
0000000000004ea9         jne        loc_4e79

0000000000004eab         mov        r12d, 0x1
0000000000004eb1         jmp        loc_4e64
0000000000004eb3         align      8

                     loc_4eb8:
0000000000004eb8         test       r15, r15                                    ; CODE XREF=xstrtoimax+103
0000000000004ebb         je         loc_5350

0000000000004ec1         movzx      r13d, byte [rcx]
0000000000004ec5         mov        qword [rsp+0x58+var_50], rcx
0000000000004eca         mov        r12d, 0x4
0000000000004ed0         test       r13b, r13b
0000000000004ed3         je         loc_4e79

0000000000004ed5         movsx      esi, r13b                                   ; argument "__c" for method j_strchr
0000000000004ed9         mov        rdi, r15                                    ; argument "__s" for method j_strchr
0000000000004edc         call       j_strchr                                    ; strchr
0000000000004ee1         test       rax, rax
0000000000004ee4         mov        rcx, qword [rsp+0x58+var_50]
0000000000004ee9         je         loc_4e79

0000000000004eeb         mov        ebp, 0x1
0000000000004ef0         xor        r12d, r12d

                     loc_4ef3:
0000000000004ef3         movsx      esi, r13b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoimax+128
0000000000004ef7         mov        rdi, r15                                    ; argument "__s" for method j_strchr
0000000000004efa         mov        qword [rsp+0x58+var_50], rcx
0000000000004eff         call       j_strchr                                    ; strchr
0000000000004f04         test       rax, rax
0000000000004f07         mov        rcx, qword [rsp+0x58+var_50]
0000000000004f0c         je         loc_4f68

0000000000004f0e         lea        eax, dword [r13-0x45]
0000000000004f12         cmp        al, 0x2f
0000000000004f14         ja         loc_4f78

0000000000004f16         movabs     rdx, 0x814400308945
0000000000004f20         bt         rdx, rax
0000000000004f24         jae        loc_4f78

0000000000004f26         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000004f2b         mov        rdi, r15                                    ; argument "__s" for method j_strchr
0000000000004f2e         mov        qword [rsp+0x58+var_50], rcx
0000000000004f33         call       j_strchr                                    ; strchr
0000000000004f38         test       rax, rax
0000000000004f3b         mov        rcx, qword [rsp+0x58+var_50]
0000000000004f40         je         loc_4f78

0000000000004f42         movzx      eax, byte [rcx+1]
0000000000004f46         cmp        al, 0x44
0000000000004f48         je         loc_4f56

0000000000004f4a         cmp        al, 0x69
0000000000004f4c         je         loc_5438

0000000000004f52         cmp        al, 0x42
0000000000004f54         jne        loc_4f78

                     loc_4f56:
0000000000004f56         mov        edi, 0x2                                    ; CODE XREF=xstrtoimax+344
0000000000004f5b         mov        eax, 0x3e8
0000000000004f60         jmp        loc_4f82
0000000000004f62         align      8

                     loc_4f68:
0000000000004f68         mov        qword [r14], rbp                            ; case 52, CODE XREF=xstrtoimax+284, xstrtoimax+410, xstrtoimax+430
0000000000004f6b         or         r12d, 0x2
0000000000004f6f         jmp        loc_4e79
0000000000004f74         align      8

                     loc_4f78:
0000000000004f78         mov        edi, 0x1                                    ; CODE XREF=xstrtoimax+292, xstrtoimax+308, xstrtoimax+336, xstrtoimax+356
0000000000004f7d         mov        eax, 0x400

                     loc_4f82:
0000000000004f82         sub        r13d, 0x42                                  ; CODE XREF=xstrtoimax+368, xstrtoimax+1627
0000000000004f86         cmp        r13b, 0x35
0000000000004f8a         ja         loc_4f68

0000000000004f8c         lea        rsi, qword [switch_table_6988]              ; switch_table_6988
0000000000004f93         movzx      r13d, r13b
0000000000004f97         movsxd     rdx, dword [rsi+r13*4]
0000000000004f9b         add        rdx, rsi
0000000000004f9e         jmp        rdx                                         ; switch statement using table at 0x6988, with 54 cases, 0x4f68,0x4fa0,0x5000,0x5020,0x5050,0x5080,0x50f0,0x5160,0x51a0,0x5200,0x5268,0x52d0,0x5300

                     loc_4fa0:
0000000000004fa0         movabs     r8, 0x8000000000000000                      ; case 43, CODE XREF=xstrtoimax+430
0000000000004faa         movsxd     rsi, eax
0000000000004fad         mov        rax, r8
0000000000004fb0         cqo
0000000000004fb2         idiv       rsi
0000000000004fb5         cmp        rbp, rax
0000000000004fb8         mov        r9, rax
0000000000004fbb         jl         loc_5465

0000000000004fc1         movabs     r10, 0x7fffffffffffffff
0000000000004fcb         mov        rax, r10
0000000000004fce         cqo
0000000000004fd0         idiv       rsi
0000000000004fd3         cmp        rbp, rax
0000000000004fd6         jg         loc_5472

0000000000004fdc         imul       rbp, rsi
0000000000004fe0         cmp        r9, rbp
0000000000004fe3         jg         loc_5465

0000000000004fe9         cmp        rax, rbp
0000000000004fec         jl         loc_5472

0000000000004ff2         imul       rbp, rsi
0000000000004ff6         xor        eax, eax

                     loc_4ff8:
0000000000004ff8         or         r12d, eax                                   ; CODE XREF=xstrtoimax+1661, xstrtoimax+1674
0000000000004ffb         nop        dword [rax+rax]

                     loc_5000:
0000000000005000         movsxd     rax, edi                                    ; case 33, CODE XREF=xstrtoimax+430, xstrtoimax+601, xstrtoimax+650, xstrtoimax+935, xstrtoimax+1027, xstrtoimax+1290, xstrtoimax+1408, xstrtoimax+1600
0000000000005003         add        rcx, rax
0000000000005006         mov        eax, r12d
0000000000005009         or         eax, 0x2
000000000000500c         mov        qword [rbx], rcx
000000000000500f         cmp        byte [rcx], 0x0
0000000000005012         cmovne     r12d, eax
0000000000005016         jmp        loc_4e76
000000000000501b         align      32

                     loc_5020:
0000000000005020         movabs     rax, 0xc000000000000000                     ; case 53, CODE XREF=xstrtoimax+430
000000000000502a         cmp        rbp, rax
000000000000502d         jl         loc_5360

0000000000005033         movabs     rax, 0x3fffffffffffffff
000000000000503d         cmp        rbp, rax
0000000000005040         jg         loc_5420

0000000000005046         add        rbp, rbp
0000000000005049         jmp        loc_5000
000000000000504b         align      16

                     loc_5050:
0000000000005050         movabs     rax, 0xffc0000000000000                     ; case 32, CODE XREF=xstrtoimax+430
000000000000505a         cmp        rbp, rax
000000000000505d         jl         loc_5360

0000000000005063         movabs     rax, 0x3fffffffffffff
000000000000506d         cmp        rbp, rax
0000000000005070         jg         loc_5420

0000000000005076         shl        rbp, 0x9
000000000000507a         jmp        loc_5000
000000000000507c         align      128

                     loc_5080:
0000000000005080         movsxd     rsi, eax                                    ; case 24, CODE XREF=xstrtoimax+430
0000000000005083         movabs     rax, 0x8000000000000000
000000000000508d         mov        r8d, 0x7
0000000000005093         cqo
0000000000005095         xor        r11d, r11d
0000000000005098         movabs     r9, 0x7fffffffffffffff
00000000000050a2         idiv       rsi
00000000000050a5         mov        r10, rax
00000000000050a8         jmp        loc_50cf
00000000000050aa         align      16

                     loc_50b0:
00000000000050b0         mov        rax, r9                                     ; CODE XREF=xstrtoimax+738
00000000000050b3         cqo
00000000000050b5         idiv       rsi
00000000000050b8         cmp        rax, rbp
00000000000050bb         jl         loc_53a8

00000000000050c1         imul       rbp, rsi

                     loc_50c5:
00000000000050c5         sub        r8d, 0x1                                    ; CODE XREF=xstrtoimax+756, xstrtoimax+1480
00000000000050c9         je         loc_51f0

                     loc_50cf:
00000000000050cf         cmp        r10, rbp                                    ; CODE XREF=xstrtoimax+696
00000000000050d2         jle        loc_50b0

00000000000050d4         mov        r11d, 0x1
00000000000050da         movabs     rbp, 0x8000000000000000
00000000000050e4         jmp        loc_50c5
00000000000050e6         align      16

                     loc_50f0:
00000000000050f0         movsxd     rsi, eax                                    ; case 23, CODE XREF=xstrtoimax+430
00000000000050f3         movabs     rax, 0x8000000000000000
00000000000050fd         mov        r8d, 0x8
0000000000005103         cqo
0000000000005105         xor        r11d, r11d
0000000000005108         movabs     r9, 0x7fffffffffffffff
0000000000005112         idiv       rsi
0000000000005115         mov        r10, rax
0000000000005118         jmp        loc_513f
000000000000511a         align      32

                     loc_5120:
0000000000005120         mov        rax, r9                                     ; CODE XREF=xstrtoimax+850
0000000000005123         cqo
0000000000005125         idiv       rsi
0000000000005128         cmp        rax, rbp
000000000000512b         jl         loc_5378

0000000000005131         imul       rbp, rsi

                     loc_5135:
0000000000005135         sub        r8d, 0x1                                    ; CODE XREF=xstrtoimax+868, xstrtoimax+1432
0000000000005139         je         loc_51f0

                     loc_513f:
000000000000513f         cmp        r10, rbp                                    ; CODE XREF=xstrtoimax+808
0000000000005142         jle        loc_5120

0000000000005144         mov        r11d, 0x1
000000000000514a         movabs     rbp, 0x8000000000000000
0000000000005154         jmp        loc_5135
0000000000005156         align      32

                     loc_5160:
0000000000005160         movabs     r8, 0x8000000000000000                      ; case 41, CODE XREF=xstrtoimax+430
000000000000516a         movsxd     rsi, eax
000000000000516d         mov        rax, r8
0000000000005170         cqo
0000000000005172         idiv       rsi
0000000000005175         cmp        rbp, rax
0000000000005178         jl         loc_5360

000000000000517e         sub        r8, 0x1
0000000000005182         mov        rax, r8
0000000000005185         cqo
0000000000005187         idiv       rsi
000000000000518a         cmp        rbp, rax
000000000000518d         jg         loc_5420

0000000000005193         imul       rbp, rsi
0000000000005197         jmp        loc_5000
000000000000519c         align      32

                     loc_51a0:
00000000000051a0         movsxd     rsi, eax                                    ; case 37, CODE XREF=xstrtoimax+430
00000000000051a3         movabs     rax, 0x8000000000000000
00000000000051ad         mov        r8d, 0x3
00000000000051b3         cqo
00000000000051b5         xor        r11d, r11d
00000000000051b8         movabs     r9, 0x7fffffffffffffff
00000000000051c2         idiv       rsi
00000000000051c5         mov        r10, rax

                     loc_51c8:
00000000000051c8         cmp        r10, rbp                                    ; CODE XREF=xstrtoimax+1018
00000000000051cb         jg         loc_53c0

00000000000051d1         mov        rax, r9
00000000000051d4         cqo
00000000000051d6         idiv       rsi
00000000000051d9         cmp        rax, rbp
00000000000051dc         jl         loc_5450

00000000000051e2         imul       rbp, rsi

                     loc_51e6:
00000000000051e6         sub        r8d, 0x1                                    ; CODE XREF=xstrtoimax+1504, xstrtoimax+1648
00000000000051ea         jne        loc_51c8

00000000000051ec         nop        dword [rax]

                     loc_51f0:
00000000000051f0         or         r12d, r11d                                  ; CODE XREF=xstrtoimax+729, xstrtoimax+841, xstrtoimax+1113, xstrtoimax+1217, xstrtoimax+1368
00000000000051f3         jmp        loc_5000
00000000000051f8         align      512

                     loc_5200:
0000000000005200         movsxd     rsi, eax                                    ; case 3, CODE XREF=xstrtoimax+430
0000000000005203         movabs     rax, 0x8000000000000000
000000000000520d         mov        r8d, 0x6
0000000000005213         cqo
0000000000005215         xor        r11d, r11d
0000000000005218         movabs     r9, 0x7fffffffffffffff
0000000000005222         idiv       rsi
0000000000005225         mov        r10, rax
0000000000005228         jmp        loc_524b
000000000000522a         align      16

                     loc_5230:
0000000000005230         mov        rax, r9                                     ; CODE XREF=xstrtoimax+1118
0000000000005233         cqo
0000000000005235         idiv       rsi
0000000000005238         cmp        rax, rbp
000000000000523b         jl         loc_53d8

0000000000005241         imul       rbp, rsi

                     loc_5245:
0000000000005245         sub        r8d, 0x1                                    ; CODE XREF=xstrtoimax+1136, xstrtoimax+1528
0000000000005249         je         loc_51f0

                     loc_524b:
000000000000524b         cmp        r10, rbp                                    ; CODE XREF=xstrtoimax+1080
000000000000524e         jle        loc_5230

0000000000005250         mov        r11d, 0x1
0000000000005256         movabs     rbp, 0x8000000000000000
0000000000005260         jmp        loc_5245
0000000000005262         align      8

                     loc_5268:
0000000000005268         movsxd     rsi, eax                                    ; case 14, CODE XREF=xstrtoimax+430
000000000000526b         movabs     rax, 0x8000000000000000
0000000000005275         mov        r8d, 0x5
000000000000527b         cqo
000000000000527d         xor        r11d, r11d
0000000000005280         movabs     r9, 0x7fffffffffffffff
000000000000528a         idiv       rsi
000000000000528d         mov        r10, rax
0000000000005290         jmp        loc_52b7
0000000000005292         align      8

                     loc_5298:
0000000000005298         mov        rax, r9                                     ; CODE XREF=xstrtoimax+1226
000000000000529b         cqo
000000000000529d         idiv       rsi
00000000000052a0         cmp        rax, rbp
00000000000052a3         jl         loc_53f0

00000000000052a9         imul       rbp, rsi

                     loc_52ad:
00000000000052ad         sub        r8d, 0x1                                    ; CODE XREF=xstrtoimax+1244, xstrtoimax+1552
00000000000052b1         je         loc_51f0

                     loc_52b7:
00000000000052b7         cmp        r10, rbp                                    ; CODE XREF=xstrtoimax+1184
00000000000052ba         jle        loc_5298

00000000000052bc         mov        r11d, 0x1
00000000000052c2         movabs     rbp, 0x8000000000000000
00000000000052cc         jmp        loc_52ad
00000000000052ce         align      16

                     loc_52d0:
00000000000052d0         movabs     rax, 0xffe0000000000000                     ; case 0, CODE XREF=xstrtoimax+430
00000000000052da         cmp        rbp, rax
00000000000052dd         jl         loc_5360

00000000000052e3         movabs     rax, 0x1fffffffffffff
00000000000052ed         cmp        rbp, rax
00000000000052f0         jg         loc_5420

00000000000052f6         shl        rbp, 0xa
00000000000052fa         jmp        loc_5000
00000000000052ff         align      256

                     loc_5300:
0000000000005300         movsxd     rsi, eax                                    ; case 50, CODE XREF=xstrtoimax+430
0000000000005303         movabs     rax, 0x8000000000000000
000000000000530d         mov        r8d, 0x4
0000000000005313         cqo
0000000000005315         xor        r11d, r11d
0000000000005318         movabs     r9, 0x7fffffffffffffff
0000000000005322         idiv       rsi
0000000000005325         mov        r10, rax

                     loc_5328:
0000000000005328         cmp        r10, rbp                                    ; CODE XREF=xstrtoimax+1366
000000000000532b         jg         loc_5390

000000000000532d         mov        rax, r9
0000000000005330         cqo
0000000000005332         idiv       rsi
0000000000005335         cmp        rax, rbp
0000000000005338         jl         loc_5408

000000000000533e         imul       rbp, rsi

                     loc_5342:
0000000000005342         sub        r8d, 0x1                                    ; CODE XREF=xstrtoimax+1456, xstrtoimax+1576
0000000000005346         jne        loc_5328

0000000000005348         jmp        loc_51f0
000000000000534d         align      16

                     loc_5350:
0000000000005350         mov        r12d, 0x4                                   ; CODE XREF=xstrtoimax+203
0000000000005356         jmp        loc_4e79
000000000000535b         align      32

                     loc_5360:
0000000000005360         mov        r12d, 0x1                                   ; CODE XREF=xstrtoimax+573, xstrtoimax+621, xstrtoimax+904, xstrtoimax+1261
0000000000005366         movabs     rbp, 0x8000000000000000
0000000000005370         jmp        loc_5000
0000000000005375         align      8

                     loc_5378:
0000000000005378         mov        r11d, 0x1                                   ; CODE XREF=xstrtoimax+827
000000000000537e         movabs     rbp, 0x7fffffffffffffff
0000000000005388         jmp        loc_5135
000000000000538d         align      16

                     loc_5390:
0000000000005390         mov        r11d, 0x1                                   ; CODE XREF=xstrtoimax+1339
0000000000005396         movabs     rbp, 0x8000000000000000
00000000000053a0         jmp        loc_5342
00000000000053a2         align      8

                     loc_53a8:
00000000000053a8         mov        r11d, 0x1                                   ; CODE XREF=xstrtoimax+715
00000000000053ae         movabs     rbp, 0x7fffffffffffffff
00000000000053b8         jmp        loc_50c5
00000000000053bd         align      64

                     loc_53c0:
00000000000053c0         mov        r11d, 0x1                                   ; CODE XREF=xstrtoimax+987
00000000000053c6         movabs     rbp, 0x8000000000000000
00000000000053d0         jmp        loc_51e6
00000000000053d5         align      8

                     loc_53d8:
00000000000053d8         mov        r11d, 0x1                                   ; CODE XREF=xstrtoimax+1099
00000000000053de         movabs     rbp, 0x7fffffffffffffff
00000000000053e8         jmp        loc_5245
00000000000053ed         align      16

                     loc_53f0:
00000000000053f0         mov        r11d, 0x1                                   ; CODE XREF=xstrtoimax+1203
00000000000053f6         movabs     rbp, 0x7fffffffffffffff
0000000000005400         jmp        loc_52ad
0000000000005405         align      8

                     loc_5408:
0000000000005408         mov        r11d, 0x1                                   ; CODE XREF=xstrtoimax+1352
000000000000540e         movabs     rbp, 0x7fffffffffffffff
0000000000005418         jmp        loc_5342
000000000000541d         align      32

                     loc_5420:
0000000000005420         mov        r12d, 0x1                                   ; CODE XREF=xstrtoimax+592, xstrtoimax+640, xstrtoimax+925, xstrtoimax+1280
0000000000005426         movabs     rbp, 0x7fffffffffffffff
0000000000005430         jmp        loc_5000
0000000000005435         align      8

                     loc_5438:
0000000000005438         xor        edi, edi                                    ; CODE XREF=xstrtoimax+348
000000000000543a         cmp        byte [rcx+2], 0x42
000000000000543e         mov        eax, 0x400
0000000000005443         sete       dil
0000000000005447         lea        edi, dword [rdi+rdi+1]
000000000000544b         jmp        loc_4f82

                     loc_5450:
0000000000005450         mov        r11d, 0x1                                   ; CODE XREF=xstrtoimax+1004
0000000000005456         movabs     rbp, 0x7fffffffffffffff
0000000000005460         jmp        loc_51e6

                     loc_5465:
0000000000005465         mov        eax, 0x1                                    ; CODE XREF=xstrtoimax+459, xstrtoimax+499
000000000000546a         mov        rbp, r8
000000000000546d         jmp        loc_4ff8

                     loc_5472:
0000000000005472         mov        eax, 0x1                                    ; CODE XREF=xstrtoimax+486, xstrtoimax+508
0000000000005477         mov        rbp, r10
000000000000547a         jmp        loc_4ff8

                     loc_547f:
000000000000547f         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoimax", CODE XREF=xstrtoimax+33
0000000000005486         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
000000000000548d         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000005494         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000005499         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_549e:
000000000000549e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoimax+154
                        ; endp
00000000000054a3         align      16                                          ; End of unwind block (FDE at 0x7614)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
00000000000054b0         push       r13                                         ; Begin of unwind block (FDE at 0x7664), CODE XREF=sub_2f90+534
00000000000054b2         push       r12
00000000000054b4         mov        r13, rsi
00000000000054b7         push       rbp
00000000000054b8         push       rbx
00000000000054b9         mov        rbx, rdi
00000000000054bc         mov        r12, rdx
00000000000054bf         sub        rsp, 0x18
00000000000054c3         mov        rax, qword [fs:0x28]
00000000000054cc         mov        qword [rsp+0x38+var_30], rax
00000000000054d1         xor        eax, eax
00000000000054d3         lea        rax, qword [rsp+0x38+var_34]
00000000000054d8         test       rdi, rdi
00000000000054db         cmove      rbx, rax
00000000000054df         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000054e2         call       j_mbrtowc                                   ; mbrtowc
00000000000054e7         cmp        rax, 0xfffffffffffffffd
00000000000054eb         mov        rbp, rax
00000000000054ee         jbe        loc_5510

00000000000054f0         test       r12, r12
00000000000054f3         je         loc_5510

00000000000054f5         xor        edi, edi
00000000000054f7         call       hard_locale                                 ; hard_locale
00000000000054fc         test       al, al
00000000000054fe         jne        loc_5510

0000000000005500         movzx      eax, byte [r13]
0000000000005505         mov        ebp, 0x1
000000000000550a         mov        dword [rbx], eax
000000000000550c         nop        dword [rax]

                     loc_5510:
0000000000005510         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005515         xor        rdx, qword [fs:0x28]
000000000000551e         mov        rax, rbp
0000000000005521         jne        loc_552e

0000000000005523         add        rsp, 0x18
0000000000005527         pop        rbx
0000000000005528         pop        rbp
0000000000005529         pop        r12
000000000000552b         pop        r13
000000000000552d         ret
                        ; endp

                     loc_552e:
000000000000552e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005533         align      64                                          ; End of unwind block (FDE at 0x7664)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005540         push       r12                                         ; Begin of unwind block (FDE at 0x76a4), CODE XREF=close_stdout+13, close_stdout+51
0000000000005542         push       rbp
0000000000005543         mov        rbp, rdi
0000000000005546         push       rbx
0000000000005547         call       j___fpending                                ; __fpending
000000000000554c         mov        ebx, dword [rbp]
000000000000554f         mov        rdi, rbp
0000000000005552         mov        r12, rax
0000000000005555         call       rpl_fclose                                  ; rpl_fclose
000000000000555a         and        ebx, 0x20
000000000000555d         test       ebx, ebx
000000000000555f         jne        loc_5578

0000000000005561         test       eax, eax
0000000000005563         je         loc_556f

0000000000005565         test       r12, r12
0000000000005568         mov        eax, 0xffffffff
000000000000556d         je         loc_55a8

                     loc_556f:
000000000000556f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005570         pop        rbp
0000000000005571         pop        r12
0000000000005573         ret
                        ; endp
0000000000005574         align      8

                     loc_5578:
0000000000005578         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000557a         jne        loc_5598

000000000000557c         call       j___errno_location                          ; __errno_location
0000000000005581         mov        dword [rax], 0x0
0000000000005587         mov        eax, 0xffffffff
000000000000558c         pop        rbx
000000000000558d         pop        rbp
000000000000558e         pop        r12
0000000000005590         ret
                        ; endp
0000000000005591         align      8

                     loc_5598:
0000000000005598         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005599         mov        eax, 0xffffffff
000000000000559e         pop        rbp
000000000000559f         pop        r12
00000000000055a1         ret
                        ; endp
00000000000055a2         align      8

                     loc_55a8:
00000000000055a8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000055ad         cmp        dword [rax], 0x9
00000000000055b0         pop        rbx
00000000000055b1         pop        rbp
00000000000055b2         pop        r12
00000000000055b4         setne      al
00000000000055b7         movzx      eax, al
00000000000055ba         neg        eax
00000000000055bc         ret
                        ; endp
00000000000055bd         align      64                                          ; End of unwind block (FDE at 0x76a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
00000000000055c0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x76f4), CODE XREF=rpl_mbrtowc+71
00000000000055c4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000055c6         call       j_setlocale                                 ; setlocale
00000000000055cb         mov        rdx, rax
00000000000055ce         mov        eax, 0x1
00000000000055d3         test       rdx, rdx
00000000000055d6         je         loc_55f5

00000000000055d8         lea        rdi, qword [__PRETTY_FUNCTION__.4162+11]    ; 0x6a6b
00000000000055df         mov        ecx, 0x2
00000000000055e4         mov        rsi, rdx
00000000000055e7         rep  cmpsb byte [rsi], byte [rdi]
00000000000055e9         seta       cl
00000000000055ec         sbb        cl, 0x0
00000000000055ef         xor        eax, eax
00000000000055f1         test       cl, cl
00000000000055f3         jne        loc_5600

                     loc_55f5:
00000000000055f5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000055f9         ret
                        ; endp
00000000000055fa         align      512

                     loc_5600:
0000000000005600         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005607         mov        ecx, 0x6
000000000000560c         mov        rsi, rdx
000000000000560f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005611         seta       al
0000000000005614         sbb        al, 0x0
0000000000005616         test       al, al
0000000000005618         setne      al
000000000000561b         add        rsp, 0x8
000000000000561f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005620         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x76f4), Begin of unwind block (FDE at 0x7714), CODE XREF=gettext_quote.part.1+11
0000000000005624         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005629         call       j_nl_langinfo                               ; nl_langinfo
000000000000562e         test       rax, rax
0000000000005631         je         loc_5650

0000000000005633         cmp        byte [rax], 0x0
0000000000005636         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000563d         cmove      rax, rdx
0000000000005641         add        rsp, 0x8
0000000000005645         ret
                        ; endp
0000000000005646         align      16

                     loc_5650:
0000000000005650         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005657         add        rsp, 0x8
000000000000565b         ret
                        ; endp
000000000000565c         align      32                                          ; End of unwind block (FDE at 0x7714)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005660         push       r12                                         ; Begin of unwind block (FDE at 0x7734), CODE XREF=close_stream+21
0000000000005662         push       rbp
0000000000005663         push       rbx
0000000000005664         mov        rbx, rdi
0000000000005667         call       j_fileno                                    ; fileno
000000000000566c         test       eax, eax
000000000000566e         mov        rdi, rbx
0000000000005671         js         loc_56c7

0000000000005673         call       j___freading                                ; __freading
0000000000005678         test       eax, eax
000000000000567a         jne        loc_56a8

                     loc_567c:
000000000000567c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000567f         call       rpl_fflush                                  ; rpl_fflush
0000000000005684         test       eax, eax
0000000000005686         je         loc_56c4

0000000000005688         call       j___errno_location                          ; __errno_location
000000000000568d         mov        r12d, dword [rax]
0000000000005690         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000005693         mov        rbp, rax
0000000000005696         call       j_fclose                                    ; fclose
000000000000569b         test       r12d, r12d
000000000000569e         jne        loc_56d0

                     loc_56a0:
00000000000056a0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000056a1         pop        rbp
00000000000056a2         pop        r12
00000000000056a4         ret
                        ; endp
00000000000056a5         align      8

                     loc_56a8:
00000000000056a8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000056ab         call       j_fileno                                    ; fileno
00000000000056b0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000056b2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000056b7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000056b9         call       j_lseek                                     ; lseek
00000000000056be         cmp        rax, 0xffffffffffffffff
00000000000056c2         jne        loc_567c

                     loc_56c4:
00000000000056c4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_56c7:
00000000000056c7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000056c8         pop        rbp
00000000000056c9         pop        r12
00000000000056cb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_56d0:
00000000000056d0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000056d4         mov        eax, 0xffffffff
00000000000056d9         jmp        loc_56a0
00000000000056db         align      32                                          ; End of unwind block (FDE at 0x7734)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000056e0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x776c), CODE XREF=rpl_fclose+31
00000000000056e3         push       rbx
00000000000056e4         mov        rbx, rdi
00000000000056e7         je         loc_56fa

00000000000056e9         call       j___freading                                ; __freading
00000000000056ee         test       eax, eax
00000000000056f0         je         loc_56fa

00000000000056f2         test       dword [rbx], 0x100
00000000000056f8         jne        loc_5708

                     loc_56fa:
00000000000056fa         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000056fd         pop        rbx
00000000000056fe         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005703         align      8

                     loc_5708:
0000000000005708         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000570b         mov        edx, 0x1
0000000000005710         xor        esi, esi
0000000000005712         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005717         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000571a         pop        rbx
000000000000571b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005720         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x776c), Begin of unwind block (FDE at 0x778c), CODE XREF=rpl_fflush+50
0000000000005724         cmp        qword [rdi+0x10], rax
0000000000005728         je         loc_5730

                     j_j_fseeko:        // fseeko
000000000000572a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000572f         align      16

                     loc_5730:
0000000000005730         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005734         cmp        qword [rdi+0x28], rax
0000000000005738         jne        j_j_fseeko                                  ; fseeko

000000000000573a         cmp        qword [rdi+0x48], 0x0
000000000000573f         jne        j_j_fseeko                                  ; fseeko

0000000000005741         push       r12
0000000000005743         push       rbp
0000000000005744         mov        r12d, edx
0000000000005747         push       rbx
0000000000005748         mov        rbp, rsi
000000000000574b         mov        rbx, rdi
000000000000574e         call       j_fileno                                    ; fileno
0000000000005753         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005756         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005759         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000575b         call       j_lseek                                     ; lseek
0000000000005760         cmp        rax, 0xffffffffffffffff
0000000000005764         je         loc_5772

0000000000005766         and        dword [rbx], 0xffffffef
0000000000005769         mov        qword [rbx+0x90], rax
0000000000005770         xor        eax, eax

                     loc_5772:
0000000000005772         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000005773         pop        rbp
0000000000005774         pop        r12
0000000000005776         ret
                        ; endp
0000000000005777         align      128                                         ; End of unwind block (FDE at 0x778c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000005780         push       r15                                         ; Begin of unwind block (FDE at 0x77bc), DATA XREF=_start+22
0000000000005782         push       r14
0000000000005784         mov        r15, rdx
0000000000005787         push       r13
0000000000005789         push       r12
000000000000578b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000005792         push       rbp
0000000000005793         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000579a         push       rbx
000000000000579b         mov        r13d, edi
000000000000579e         mov        r14, rsi
00000000000057a1         sub        rbp, r12
00000000000057a4         sub        rsp, 0x8
00000000000057a8         sar        rbp, 0x3
00000000000057ac         call       _init                                       ; _init
00000000000057b1         test       rbp, rbp
00000000000057b4         je         loc_57d6

00000000000057b6         xor        ebx, ebx
00000000000057b8         nop        dword [rax+rax]

                     loc_57c0:
00000000000057c0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000057c3         mov        rsi, r14
00000000000057c6         mov        edi, r13d
00000000000057c9         call       qword [r12+rbx*8]
00000000000057cd         add        rbx, 0x1
00000000000057d1         cmp        rbp, rbx
00000000000057d4         jne        loc_57c0

                     loc_57d6:
00000000000057d6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000057da         pop        rbx
00000000000057db         pop        rbp
00000000000057dc         pop        r12
00000000000057de         pop        r13
00000000000057e0         pop        r14
00000000000057e2         pop        r15
00000000000057e4         ret
                        ; endp
00000000000057e5         align      16                                          ; End of unwind block (FDE at 0x77bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000057f0         ret                                                    ; Begin of unwind block (FDE at 0x7804), DATA XREF=_start+15
                        ; endp
00000000000057f2         align      2048                                        ; End of unwind block (FDE at 0x7804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000005800         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x781c), __dso_handle, CODE XREF=main+110
0000000000005807         xor        esi, esi
0000000000005809         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000580e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x781c)
000000000000580f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x5810; 0x5819[ (9 bytes)
        ; File offset : [22544; 22553[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000005810         sub        rsp, 0x8
0000000000005814         add        rsp, 0x8
0000000000005818         ret
                        ; endp
0000000000005819         db  0x00 ; '.'
000000000000581a         db  0x00 ; '.'
000000000000581b         db  0x00 ; '.'
000000000000581c         db  0x00 ; '.'
000000000000581d         db  0x00 ; '.'
000000000000581e         db  0x00 ; '.'
000000000000581f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5820; 0x6a79[ (4697 bytes)
        ; File offset : [22560; 27257[ (4697 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005820         db  0x01 ; '.'
0000000000005821         db  0x00 ; '.'
0000000000005822         db  0x02 ; '.'
0000000000005823         db  0x00 ; '.'
                     aTruncate:
0000000000005824         db         "truncate", 0                               ; DATA XREF=main+247, usage+453, usage+764, usage+948, usage+967, usage+1001
                     aUsageSOptionFi:
000000000000582d         db         "Usage: %s OPTION... FILE...\n", 0          ; DATA XREF=usage+93
000000000000584a         db  0x5b ; '['                                         ; DATA XREF=usage+465
000000000000584b         db  0x00 ; '.'
                     aTestInvocation:
000000000000584c         db         "test invocation", 0                        ; DATA XREF=usage+504
                     aMulticallInvoc:
000000000000585c         db         "Multi-call invocation", 0                  ; DATA XREF=usage+552
                     aSha224sum:
0000000000005872         db         "sha224sum", 0                              ; DATA XREF=usage+569
                     aSha2Utilities:
000000000000587c         db         "sha2 utilities", 0                         ; DATA XREF=usage+581
                     aSha256sum:
000000000000588b         db         "sha256sum", 0                              ; DATA XREF=usage+472
                     aSha384sum:
0000000000005895         db         "sha384sum", 0                              ; DATA XREF=usage+516
                     aSha512sum:
000000000000589f         db         "sha512sum", 0                              ; DATA XREF=usage+540
                     aNsOnlineHelpSn:
00000000000058a9         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+650
00000000000058c0         db  0x47 ; 'G'                                         ; DATA XREF=main+240, usage+678, usage+871, emit_bug_reporting_address+68
00000000000058c1         db  0x4e ; 'N'
00000000000058c2         db  0x55 ; 'U'
00000000000058c3         db  0x20 ; ' '
                     aCoreutils:
00000000000058c4         db         "coreutils", 0                              ; DATA XREF=main+79, main+91, usage+528
00000000000058ce         db  0x65 ; 'e'                                         ; DATA XREF=usage+717, usage+910
00000000000058cf         db  0x6e ; 'n'
00000000000058d0         db  0x5f ; '_'
00000000000058d1         db  0x00 ; '.'
                     aFullDocumentat:
00000000000058d2         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+745, usage+934
                     aUsrlocalsharel:
00000000000058ed         db         "/usr/local/share/locale", 0                ; DATA XREF=main+72
                     aInvalidNumber:
0000000000005905         db         "Invalid number", 0                         ; DATA XREF=main+452, main+586
                     aEggkkmmpttyz0:
0000000000005914         db         "EgGkKmMPtTYZ0", 0                          ; DATA XREF=main+484, main+607
                     aDivisionByZero:
0000000000005922         db         "division by zero", 0                       ; DATA XREF=main+2410
                     aPadraigBrady:
0000000000005933         db         "Padraig Brady", 0                          ; DATA XREF=main+233
                     aCors:
0000000000005941         db         "cor:s:", 0                                 ; DATA XREF=main+122
                     aReference:
0000000000005948         db         "--reference", 0                            ; DATA XREF=main+758, main+2356
                     aSize:
0000000000005954         db         "--size", 0                                 ; DATA XREF=main+775, main+853, main+2373
                     aIoblocks:
000000000000595b         db         "--io-blocks", 0                            ; DATA XREF=main+870
                     aMissingFileOpe:
0000000000005967         db         "missing file operand", 0                   ; DATA XREF=main+2118
                     aCannotStatS:
000000000000597c         db         "cannot stat %s", 0                         ; DATA XREF=main+2459
                     aCannotGetTheSi:
000000000000598b         db         "cannot get the size of %s", 0              ; DATA XREF=main+1338, main+2232
                     aCannotOpenSFor:
00000000000059a5         db         "cannot open %s for writing", 0             ; DATA XREF=main+1427
                     aCannotFstatS:
00000000000059c0         db         "cannot fstat %s", 0                        ; DATA XREF=main+1159
                     aFailedToCloseS:
00000000000059d0         db         "failed to close %s", 0                     ; DATA XREF=main+1737
                     aNocreate:
00000000000059e3         db         "no-create", 0
                     aHelp:
00000000000059ed         db         "help", 0
                     aVersion:
00000000000059f2         db         "version", 0
00000000000059fa         align      512
                     aTrySHelpForMor:
0000000000005a00         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000005a27         align      8
                     aShrinkOrExtend:
0000000000005a28         db         "Shrink or extend the size of each FILE to the specified size\n\nA FILE argument that does not exist is created.\n\nIf a FILE is larger than the specified size, the extra data is lost.\nIf a FILE is shorter, it is extended and the extended part (hole)\nreads as z" ; DATA XREF=usage+132
0000000000005b28         db         "ero bytes.\n", 0
0000000000005b34         align      8
                     aNmandatoryArgu:
0000000000005b38         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+169
0000000000005b83         align      8
                     aCNocreateDoNot:
0000000000005b88         db         "  -c, --no-create        do not create any files\n", 0 ; DATA XREF=usage+206
0000000000005bba         align      64
                     aOIoblocksTreat:
0000000000005bc0         db         "  -o, --io-blocks        treat SIZE as number of IO blocks instead of bytes\n", 0 ; DATA XREF=usage+243
0000000000005c0d         align      16
                     aRReferencerfil:
0000000000005c10         db         "  -r, --reference=RFILE  base size on RFILE\n  -s, --size=SIZE        set or adjust the file size by SIZE bytes\n", 0 ; DATA XREF=usage+280
                     aHelpDisplayThi:
0000000000005c80         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+317
0000000000005cad         align      16
                     aVersionOutputV:
0000000000005cb0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+354
0000000000005ce6         align      8
                     aNtheSizeArgume:
0000000000005ce8         db         "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n", 0 ; DATA XREF=usage+391
0000000000005dbc         align      64
                     aNsizeMayAlsoBe:
0000000000005dc0         db         "\nSIZE may also be prefixed by one of the following modifying characters:\n'+' extend by, '-' reduce by, '<' at most, '>' at least,\n'/' round down to multiple of, '%' round up to multiple of.\n", 0 ; DATA XREF=usage+428
0000000000005e7f         align      128
                     aHttpswwwgnuorg:
0000000000005e80         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+671, usage+771, usage+864, usage+974, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000005ea8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1015
0000000000005eef         align      16
                     aOrAvailableLoc:
0000000000005ef0         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+814
0000000000005f23         align      8
                     aMultipleRelati:
0000000000005f28         db         "multiple relative modifiers specified", 0  ; DATA XREF=main+2509
0000000000005f4e         align      16
                     aYouMustSpecify_5f50:        // aYouMustSpecify
0000000000005f50         db         "you must specify either %s or %s", 0       ; DATA XREF=main+2398
0000000000005f71         align      8
                     aYouMustSpecify:
0000000000005f78         db         "you must specify a relative %s with %s", 0 ; DATA XREF=main+792
0000000000005f9f         align      32
                     aSWasSpecifiedB:
0000000000005fa0         db         "%s was specified but %s was not", 0        ; DATA XREF=main+895
                     aOverflowInLdLd:
0000000000005fc0         db         "overflow in %ld * %ld byte blocks for file %s", 0 ; DATA XREF=main+1939
0000000000005fee         align      16
                     aSHasUnusableAp:
0000000000005ff0         db         "%s has unusable, apparently negative size", 0 ; DATA XREF=main+2041
000000000000601a         align      32
                     aOverflowRoundi:
0000000000006020         db         "overflow rounding up size of file %s", 0   ; DATA XREF=main+2288
0000000000006045         align      8
                     aOverflowExtend:
0000000000006048         db         "overflow extending size of file %s", 0     ; DATA XREF=main+2321
000000000000606b         align      16
                     aFailedToTrunca:
0000000000006070         db         "failed to truncate %s at %ld bytes", 0     ; DATA XREF=main+1542
                     a831:
0000000000006093         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000006098         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
00000000000060a4         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108, xnumtoimax+127
00000000000060ab         align      16
                     aANullArgv0WasP:
00000000000060b0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000060e8         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000060f0         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000060f1         db  0x74 ; 't'
00000000000060f2         db  0x2d ; '-'
00000000000060f3         db  0x00 ; '.'
00000000000060f4         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000060f5         db  0x80 ; '.'
00000000000060f6         db  0x98 ; '.'
00000000000060f7         db  0x00 ; '.'
00000000000060f8         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000060f9         db  0x80 ; '.'
00000000000060fa         db  0x99 ; '.'
00000000000060fb         db  0x00 ; '.'
00000000000060fc         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000060fd         db  0x07 ; '.'
00000000000060fe         db  0x65 ; 'e'
00000000000060ff         db  0x00 ; '.'
0000000000006100         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000006101         db  0xaf ; '.'
0000000000006102         db  0x00 ; '.'
0000000000006103         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_2f90+1451, sub_2f90+1493, sub_2f90+2429
0000000000006104         db  0x00 ; '.'
0000000000006105         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_2f90+132, sub_2f90+1338, sub_2f90+1670, sub_2f90+1697, sub_2f90+2352
0000000000006106         db  0x00 ; '.'
0000000000006107         db  0x60 ; '`'                                         ; DATA XREF=sub_2f90+1627, sub_2f90+1654
0000000000006108         db  0x00 ; '.'
                     aLiteral:
0000000000006109         db         "literal", 0
                     aShell:
0000000000006111         db         "shell", 0
                     aShellalways:
0000000000006117         db         "shell-always", 0
0000000000006124         db  0x73 ; 's'
0000000000006125         db  0x68 ; 'h'
0000000000006126         db  0x65 ; 'e'
0000000000006127         db  0x6c ; 'l'
0000000000006128         db  0x6c ; 'l'
0000000000006129         db  0x2d ; '-'
                     aEscape:
000000000000612a         db         "escape", 0
                     aShellescapealw:
0000000000006131         db         "shell-escape-always", 0
0000000000006145         db  0x63 ; 'c'
0000000000006146         db  0x00 ; '.'
                     aCmaybe:
0000000000006147         db         "c-maybe", 0
                     aClocale:
000000000000614f         db         "clocale", 0
0000000000006157         align      32
                     switch_table_6160:        // switch_table
0000000000006160         dd         quotearg_buffer_restyled.loc_368a-switch_table_6160, quotearg_buffer_restyled.loc_28e3-switch_table_6160, quotearg_buffer_restyled.loc_38b8-switch_table_6160, quotearg_buffer_restyled.loc_36c4-switch_table_6160 ; switch table used at 0x28e1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000006170         dd         quotearg_buffer_restyled.loc_34b4-switch_table_6160, quotearg_buffer_restyled.loc_3510-switch_table_6160, quotearg_buffer_restyled.loc_3565-switch_table_6160, quotearg_buffer_restyled.loc_35aa-switch_table_6160
0000000000006180         dd         3 dup (quotearg_buffer_restyled.loc_35e4-switch_table_6160)
000000000000618c         db  0xd4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000618d         db  0xca ; '.'
000000000000618e         db  0xff ; '.'
000000000000618f         db  0xff ; '.'
0000000000006190         db  0xbc ; '.'
0000000000006191         db  0xcb ; '.'
0000000000006192         db  0xff ; '.'
0000000000006193         db  0xff ; '.'
0000000000006194         db  0xbc ; '.'
0000000000006195         db  0xcb ; '.'
0000000000006196         db  0xff ; '.'
0000000000006197         db  0xff ; '.'
0000000000006198         db  0xbc ; '.'
0000000000006199         db  0xcb ; '.'
000000000000619a         db  0xff ; '.'
000000000000619b         db  0xff ; '.'
000000000000619c         db  0xbc ; '.'
000000000000619d         db  0xcb ; '.'
000000000000619e         db  0xff ; '.'
000000000000619f         db  0xff ; '.'
00000000000061a0         db  0xbc ; '.'
00000000000061a1         db  0xcb ; '.'
00000000000061a2         db  0xff ; '.'
00000000000061a3         db  0xff ; '.'
00000000000061a4         db  0xbc ; '.'
00000000000061a5         db  0xcb ; '.'
00000000000061a6         db  0xff ; '.'
00000000000061a7         db  0xff ; '.'
00000000000061a8         db  0x14 ; '.'
00000000000061a9         db  0xcb ; '.'
00000000000061aa         db  0xff ; '.'
00000000000061ab         db  0xff ; '.'
00000000000061ac         db  0x1c ; '.'
00000000000061ad         db  0xca ; '.'
00000000000061ae         db  0xff ; '.'
00000000000061af         db  0xff ; '.'
00000000000061b0         db  0xdc ; '.'
00000000000061b1         db  0xc9 ; '.'
00000000000061b2         db  0xff ; '.'
00000000000061b3         db  0xff ; '.'
00000000000061b4         db  0xa4 ; '.'
00000000000061b5         db  0xcb ; '.'
00000000000061b6         db  0xff ; '.'
00000000000061b7         db  0xff ; '.'
00000000000061b8         db  0x94 ; '.'
00000000000061b9         db  0xcb ; '.'
00000000000061ba         db  0xff ; '.'
00000000000061bb         db  0xff ; '.'
00000000000061bc         db  0x84 ; '.'
00000000000061bd         db  0xcb ; '.'
00000000000061be         db  0xff ; '.'
00000000000061bf         db  0xff ; '.'
00000000000061c0         db  0x74 ; 't'
00000000000061c1         db  0xcb ; '.'
00000000000061c2         db  0xff ; '.'
00000000000061c3         db  0xff ; '.'
00000000000061c4         db  0xbc ; '.'
00000000000061c5         db  0xcb ; '.'
00000000000061c6         db  0xff ; '.'
00000000000061c7         db  0xff ; '.'
00000000000061c8         db  0xbc ; '.'
00000000000061c9         db  0xcb ; '.'
00000000000061ca         db  0xff ; '.'
00000000000061cb         db  0xff ; '.'
00000000000061cc         db  0xbc ; '.'
00000000000061cd         db  0xcb ; '.'
00000000000061ce         db  0xff ; '.'
00000000000061cf         db  0xff ; '.'
00000000000061d0         db  0xbc ; '.'
00000000000061d1         db  0xcb ; '.'
00000000000061d2         db  0xff ; '.'
00000000000061d3         db  0xff ; '.'
00000000000061d4         db  0xbc ; '.'
00000000000061d5         db  0xcb ; '.'
00000000000061d6         db  0xff ; '.'
00000000000061d7         db  0xff ; '.'
00000000000061d8         db  0xbc ; '.'
00000000000061d9         db  0xcb ; '.'
00000000000061da         db  0xff ; '.'
00000000000061db         db  0xff ; '.'
00000000000061dc         db  0xbc ; '.'
00000000000061dd         db  0xcb ; '.'
00000000000061de         db  0xff ; '.'
00000000000061df         db  0xff ; '.'
00000000000061e0         db  0xbc ; '.'
00000000000061e1         db  0xcb ; '.'
00000000000061e2         db  0xff ; '.'
00000000000061e3         db  0xff ; '.'
00000000000061e4         db  0xbc ; '.'
00000000000061e5         db  0xcb ; '.'
00000000000061e6         db  0xff ; '.'
00000000000061e7         db  0xff ; '.'
00000000000061e8         db  0xbc ; '.'
00000000000061e9         db  0xcb ; '.'
00000000000061ea         db  0xff ; '.'
00000000000061eb         db  0xff ; '.'
00000000000061ec         db  0xbc ; '.'
00000000000061ed         db  0xcb ; '.'
00000000000061ee         db  0xff ; '.'
00000000000061ef         db  0xff ; '.'
00000000000061f0         db  0xbc ; '.'
00000000000061f1         db  0xcb ; '.'
00000000000061f2         db  0xff ; '.'
00000000000061f3         db  0xff ; '.'
00000000000061f4         db  0xbc ; '.'
00000000000061f5         db  0xcb ; '.'
00000000000061f6         db  0xff ; '.'
00000000000061f7         db  0xff ; '.'
00000000000061f8         db  0xbc ; '.'
00000000000061f9         db  0xcb ; '.'
00000000000061fa         db  0xff ; '.'
00000000000061fb         db  0xff ; '.'
00000000000061fc         db  0xbc ; '.'
00000000000061fd         db  0xcb ; '.'
00000000000061fe         db  0xff ; '.'
00000000000061ff         db  0xff ; '.'
0000000000006200         db  0xbc ; '.'
0000000000006201         db  0xcb ; '.'
0000000000006202         db  0xff ; '.'
0000000000006203         db  0xff ; '.'
0000000000006204         db  0xbc ; '.'
0000000000006205         db  0xcb ; '.'
0000000000006206         db  0xff ; '.'
0000000000006207         db  0xff ; '.'
0000000000006208         db  0xbc ; '.'
0000000000006209         db  0xcb ; '.'
000000000000620a         db  0xff ; '.'
000000000000620b         db  0xff ; '.'
000000000000620c         db  0x64 ; 'd'
000000000000620d         db  0xcb ; '.'
000000000000620e         db  0xff ; '.'
000000000000620f         db  0xff ; '.'
0000000000006210         db  0x54 ; 'T'
0000000000006211         db  0xcb ; '.'
0000000000006212         db  0xff ; '.'
0000000000006213         db  0xff ; '.'
0000000000006214         db  0x54 ; 'T'
0000000000006215         db  0xcb ; '.'
0000000000006216         db  0xff ; '.'
0000000000006217         db  0xff ; '.'
0000000000006218         db  0x24 ; '$'
0000000000006219         db  0xcb ; '.'
000000000000621a         db  0xff ; '.'
000000000000621b         db  0xff ; '.'
000000000000621c         db  0x54 ; 'T'
000000000000621d         db  0xcb ; '.'
000000000000621e         db  0xff ; '.'
000000000000621f         db  0xff ; '.'
0000000000006220         db  0xfc ; '.'
0000000000006221         db  0xca ; '.'
0000000000006222         db  0xff ; '.'
0000000000006223         db  0xff ; '.'
0000000000006224         db  0x54 ; 'T'
0000000000006225         db  0xcb ; '.'
0000000000006226         db  0xff ; '.'
0000000000006227         db  0xff ; '.'
0000000000006228         db  0xb7 ; '.'
0000000000006229         db  0xc9 ; '.'
000000000000622a         db  0xff ; '.'
000000000000622b         db  0xff ; '.'
000000000000622c         db  0x54 ; 'T'
000000000000622d         db  0xcb ; '.'
000000000000622e         db  0xff ; '.'
000000000000622f         db  0xff ; '.'
0000000000006230         db  0x54 ; 'T'
0000000000006231         db  0xcb ; '.'
0000000000006232         db  0xff ; '.'
0000000000006233         db  0xff ; '.'
0000000000006234         db  0x54 ; 'T'
0000000000006235         db  0xcb ; '.'
0000000000006236         db  0xff ; '.'
0000000000006237         db  0xff ; '.'
0000000000006238         db  0xfc ; '.'
0000000000006239         db  0xca ; '.'
000000000000623a         db  0xff ; '.'
000000000000623b         db  0xff ; '.'
000000000000623c         db  0xfc ; '.'
000000000000623d         db  0xca ; '.'
000000000000623e         db  0xff ; '.'
000000000000623f         db  0xff ; '.'
0000000000006240         db  0xfc ; '.'
0000000000006241         db  0xca ; '.'
0000000000006242         db  0xff ; '.'
0000000000006243         db  0xff ; '.'
0000000000006244         db  0xfc ; '.'
0000000000006245         db  0xca ; '.'
0000000000006246         db  0xff ; '.'
0000000000006247         db  0xff ; '.'
0000000000006248         db  0xfc ; '.'
0000000000006249         db  0xca ; '.'
000000000000624a         db  0xff ; '.'
000000000000624b         db  0xff ; '.'
000000000000624c         db  0xfc ; '.'
000000000000624d         db  0xca ; '.'
000000000000624e         db  0xff ; '.'
000000000000624f         db  0xff ; '.'
0000000000006250         db  0xfc ; '.'
0000000000006251         db  0xca ; '.'
0000000000006252         db  0xff ; '.'
0000000000006253         db  0xff ; '.'
0000000000006254         db  0xfc ; '.'
0000000000006255         db  0xca ; '.'
0000000000006256         db  0xff ; '.'
0000000000006257         db  0xff ; '.'
0000000000006258         db  0xfc ; '.'
0000000000006259         db  0xca ; '.'
000000000000625a         db  0xff ; '.'
000000000000625b         db  0xff ; '.'
000000000000625c         db  0xfc ; '.'
000000000000625d         db  0xca ; '.'
000000000000625e         db  0xff ; '.'
000000000000625f         db  0xff ; '.'
0000000000006260         db  0xfc ; '.'
0000000000006261         db  0xca ; '.'
0000000000006262         db  0xff ; '.'
0000000000006263         db  0xff ; '.'
0000000000006264         db  0xfc ; '.'
0000000000006265         db  0xca ; '.'
0000000000006266         db  0xff ; '.'
0000000000006267         db  0xff ; '.'
0000000000006268         db  0xfc ; '.'
0000000000006269         db  0xca ; '.'
000000000000626a         db  0xff ; '.'
000000000000626b         db  0xff ; '.'
000000000000626c         db  0xfc ; '.'
000000000000626d         db  0xca ; '.'
000000000000626e         db  0xff ; '.'
000000000000626f         db  0xff ; '.'
0000000000006270         db  0xfc ; '.'
0000000000006271         db  0xca ; '.'
0000000000006272         db  0xff ; '.'
0000000000006273         db  0xff ; '.'
0000000000006274         db  0xfc ; '.'
0000000000006275         db  0xca ; '.'
0000000000006276         db  0xff ; '.'
0000000000006277         db  0xff ; '.'
0000000000006278         db  0x54 ; 'T'
0000000000006279         db  0xcb ; '.'
000000000000627a         db  0xff ; '.'
000000000000627b         db  0xff ; '.'
000000000000627c         db  0x54 ; 'T'
000000000000627d         db  0xcb ; '.'
000000000000627e         db  0xff ; '.'
000000000000627f         db  0xff ; '.'
0000000000006280         db  0x54 ; 'T'
0000000000006281         db  0xcb ; '.'
0000000000006282         db  0xff ; '.'
0000000000006283         db  0xff ; '.'
0000000000006284         db  0x54 ; 'T'
0000000000006285         db  0xcb ; '.'
0000000000006286         db  0xff ; '.'
0000000000006287         db  0xff ; '.'
0000000000006288         db  0x87 ; '.'
0000000000006289         db  0xc9 ; '.'
000000000000628a         db  0xff ; '.'
000000000000628b         db  0xff ; '.'
000000000000628c         db  0xbc ; '.'
000000000000628d         db  0xcb ; '.'
000000000000628e         db  0xff ; '.'
000000000000628f         db  0xff ; '.'
0000000000006290         db  0xfc ; '.'
0000000000006291         db  0xca ; '.'
0000000000006292         db  0xff ; '.'
0000000000006293         db  0xff ; '.'
0000000000006294         db  0xfc ; '.'
0000000000006295         db  0xca ; '.'
0000000000006296         db  0xff ; '.'
0000000000006297         db  0xff ; '.'
0000000000006298         db  0xfc ; '.'
0000000000006299         db  0xca ; '.'
000000000000629a         db  0xff ; '.'
000000000000629b         db  0xff ; '.'
000000000000629c         db  0xfc ; '.'
000000000000629d         db  0xca ; '.'
000000000000629e         db  0xff ; '.'
000000000000629f         db  0xff ; '.'
00000000000062a0         db  0xfc ; '.'
00000000000062a1         db  0xca ; '.'
00000000000062a2         db  0xff ; '.'
00000000000062a3         db  0xff ; '.'
00000000000062a4         db  0xfc ; '.'
00000000000062a5         db  0xca ; '.'
00000000000062a6         db  0xff ; '.'
00000000000062a7         db  0xff ; '.'
00000000000062a8         db  0xfc ; '.'
00000000000062a9         db  0xca ; '.'
00000000000062aa         db  0xff ; '.'
00000000000062ab         db  0xff ; '.'
00000000000062ac         db  0xfc ; '.'
00000000000062ad         db  0xca ; '.'
00000000000062ae         db  0xff ; '.'
00000000000062af         db  0xff ; '.'
00000000000062b0         db  0xfc ; '.'
00000000000062b1         db  0xca ; '.'
00000000000062b2         db  0xff ; '.'
00000000000062b3         db  0xff ; '.'
00000000000062b4         db  0xfc ; '.'
00000000000062b5         db  0xca ; '.'
00000000000062b6         db  0xff ; '.'
00000000000062b7         db  0xff ; '.'
00000000000062b8         db  0xfc ; '.'
00000000000062b9         db  0xca ; '.'
00000000000062ba         db  0xff ; '.'
00000000000062bb         db  0xff ; '.'
00000000000062bc         db  0xfc ; '.'
00000000000062bd         db  0xca ; '.'
00000000000062be         db  0xff ; '.'
00000000000062bf         db  0xff ; '.'
00000000000062c0         db  0xfc ; '.'
00000000000062c1         db  0xca ; '.'
00000000000062c2         db  0xff ; '.'
00000000000062c3         db  0xff ; '.'
00000000000062c4         db  0xfc ; '.'
00000000000062c5         db  0xca ; '.'
00000000000062c6         db  0xff ; '.'
00000000000062c7         db  0xff ; '.'
00000000000062c8         db  0xfc ; '.'
00000000000062c9         db  0xca ; '.'
00000000000062ca         db  0xff ; '.'
00000000000062cb         db  0xff ; '.'
00000000000062cc         db  0xfc ; '.'
00000000000062cd         db  0xca ; '.'
00000000000062ce         db  0xff ; '.'
00000000000062cf         db  0xff ; '.'
00000000000062d0         db  0xfc ; '.'
00000000000062d1         db  0xca ; '.'
00000000000062d2         db  0xff ; '.'
00000000000062d3         db  0xff ; '.'
00000000000062d4         db  0xfc ; '.'
00000000000062d5         db  0xca ; '.'
00000000000062d6         db  0xff ; '.'
00000000000062d7         db  0xff ; '.'
00000000000062d8         db  0xfc ; '.'
00000000000062d9         db  0xca ; '.'
00000000000062da         db  0xff ; '.'
00000000000062db         db  0xff ; '.'
00000000000062dc         db  0xfc ; '.'
00000000000062dd         db  0xca ; '.'
00000000000062de         db  0xff ; '.'
00000000000062df         db  0xff ; '.'
00000000000062e0         db  0xfc ; '.'
00000000000062e1         db  0xca ; '.'
00000000000062e2         db  0xff ; '.'
00000000000062e3         db  0xff ; '.'
00000000000062e4         db  0xfc ; '.'
00000000000062e5         db  0xca ; '.'
00000000000062e6         db  0xff ; '.'
00000000000062e7         db  0xff ; '.'
00000000000062e8         db  0xfc ; '.'
00000000000062e9         db  0xca ; '.'
00000000000062ea         db  0xff ; '.'
00000000000062eb         db  0xff ; '.'
00000000000062ec         db  0xfc ; '.'
00000000000062ed         db  0xca ; '.'
00000000000062ee         db  0xff ; '.'
00000000000062ef         db  0xff ; '.'
00000000000062f0         db  0xfc ; '.'
00000000000062f1         db  0xca ; '.'
00000000000062f2         db  0xff ; '.'
00000000000062f3         db  0xff ; '.'
00000000000062f4         db  0xfc ; '.'
00000000000062f5         db  0xca ; '.'
00000000000062f6         db  0xff ; '.'
00000000000062f7         db  0xff ; '.'
00000000000062f8         db  0x54 ; 'T'
00000000000062f9         db  0xcb ; '.'
00000000000062fa         db  0xff ; '.'
00000000000062fb         db  0xff ; '.'
00000000000062fc         db  0x2c ; ','
00000000000062fd         db  0xca ; '.'
00000000000062fe         db  0xff ; '.'
00000000000062ff         db  0xff ; '.'
0000000000006300         db  0xfc ; '.'
0000000000006301         db  0xca ; '.'
0000000000006302         db  0xff ; '.'
0000000000006303         db  0xff ; '.'
0000000000006304         db  0x54 ; 'T'
0000000000006305         db  0xcb ; '.'
0000000000006306         db  0xff ; '.'
0000000000006307         db  0xff ; '.'
0000000000006308         db  0xfc ; '.'
0000000000006309         db  0xca ; '.'
000000000000630a         db  0xff ; '.'
000000000000630b         db  0xff ; '.'
000000000000630c         db  0x54 ; 'T'
000000000000630d         db  0xcb ; '.'
000000000000630e         db  0xff ; '.'
000000000000630f         db  0xff ; '.'
0000000000006310         db  0xfc ; '.'
0000000000006311         db  0xca ; '.'
0000000000006312         db  0xff ; '.'
0000000000006313         db  0xff ; '.'
0000000000006314         db  0xfc ; '.'
0000000000006315         db  0xca ; '.'
0000000000006316         db  0xff ; '.'
0000000000006317         db  0xff ; '.'
0000000000006318         db  0xfc ; '.'
0000000000006319         db  0xca ; '.'
000000000000631a         db  0xff ; '.'
000000000000631b         db  0xff ; '.'
000000000000631c         db  0xfc ; '.'
000000000000631d         db  0xca ; '.'
000000000000631e         db  0xff ; '.'
000000000000631f         db  0xff ; '.'
0000000000006320         db  0xfc ; '.'
0000000000006321         db  0xca ; '.'
0000000000006322         db  0xff ; '.'
0000000000006323         db  0xff ; '.'
0000000000006324         db  0xfc ; '.'
0000000000006325         db  0xca ; '.'
0000000000006326         db  0xff ; '.'
0000000000006327         db  0xff ; '.'
0000000000006328         db  0xfc ; '.'
0000000000006329         db  0xca ; '.'
000000000000632a         db  0xff ; '.'
000000000000632b         db  0xff ; '.'
000000000000632c         db  0xfc ; '.'
000000000000632d         db  0xca ; '.'
000000000000632e         db  0xff ; '.'
000000000000632f         db  0xff ; '.'
0000000000006330         db  0xfc ; '.'
0000000000006331         db  0xca ; '.'
0000000000006332         db  0xff ; '.'
0000000000006333         db  0xff ; '.'
0000000000006334         db  0xfc ; '.'
0000000000006335         db  0xca ; '.'
0000000000006336         db  0xff ; '.'
0000000000006337         db  0xff ; '.'
0000000000006338         db  0xfc ; '.'
0000000000006339         db  0xca ; '.'
000000000000633a         db  0xff ; '.'
000000000000633b         db  0xff ; '.'
000000000000633c         db  0xfc ; '.'
000000000000633d         db  0xca ; '.'
000000000000633e         db  0xff ; '.'
000000000000633f         db  0xff ; '.'
0000000000006340         db  0xfc ; '.'
0000000000006341         db  0xca ; '.'
0000000000006342         db  0xff ; '.'
0000000000006343         db  0xff ; '.'
0000000000006344         db  0xfc ; '.'
0000000000006345         db  0xca ; '.'
0000000000006346         db  0xff ; '.'
0000000000006347         db  0xff ; '.'
0000000000006348         db  0xfc ; '.'
0000000000006349         db  0xca ; '.'
000000000000634a         db  0xff ; '.'
000000000000634b         db  0xff ; '.'
000000000000634c         db  0xfc ; '.'
000000000000634d         db  0xca ; '.'
000000000000634e         db  0xff ; '.'
000000000000634f         db  0xff ; '.'
0000000000006350         db  0xfc ; '.'
0000000000006351         db  0xca ; '.'
0000000000006352         db  0xff ; '.'
0000000000006353         db  0xff ; '.'
0000000000006354         db  0xfc ; '.'
0000000000006355         db  0xca ; '.'
0000000000006356         db  0xff ; '.'
0000000000006357         db  0xff ; '.'
0000000000006358         db  0xfc ; '.'
0000000000006359         db  0xca ; '.'
000000000000635a         db  0xff ; '.'
000000000000635b         db  0xff ; '.'
000000000000635c         db  0xfc ; '.'
000000000000635d         db  0xca ; '.'
000000000000635e         db  0xff ; '.'
000000000000635f         db  0xff ; '.'
0000000000006360         db  0xfc ; '.'
0000000000006361         db  0xca ; '.'
0000000000006362         db  0xff ; '.'
0000000000006363         db  0xff ; '.'
0000000000006364         db  0xfc ; '.'
0000000000006365         db  0xca ; '.'
0000000000006366         db  0xff ; '.'
0000000000006367         db  0xff ; '.'
0000000000006368         db  0xfc ; '.'
0000000000006369         db  0xca ; '.'
000000000000636a         db  0xff ; '.'
000000000000636b         db  0xff ; '.'
000000000000636c         db  0xfc ; '.'
000000000000636d         db  0xca ; '.'
000000000000636e         db  0xff ; '.'
000000000000636f         db  0xff ; '.'
0000000000006370         db  0xfc ; '.'
0000000000006371         db  0xca ; '.'
0000000000006372         db  0xff ; '.'
0000000000006373         db  0xff ; '.'
0000000000006374         db  0xfc ; '.'
0000000000006375         db  0xca ; '.'
0000000000006376         db  0xff ; '.'
0000000000006377         db  0xff ; '.'
0000000000006378         db  0xb7 ; '.'
0000000000006379         db  0xc8 ; '.'
000000000000637a         db  0xff ; '.'
000000000000637b         db  0xff ; '.'
000000000000637c         db  0x54 ; 'T'
000000000000637d         db  0xcb ; '.'
000000000000637e         db  0xff ; '.'
000000000000637f         db  0xff ; '.'
0000000000006380         db  0xb7 ; '.'
0000000000006381         db  0xc8 ; '.'
0000000000006382         db  0xff ; '.'
0000000000006383         db  0xff ; '.'
0000000000006384         db  0x24 ; '$'
0000000000006385         db  0xcb ; '.'
0000000000006386         db  0xff ; '.'
0000000000006387         db  0xff ; '.'
0000000000006388         db  0xa8 ; '.'                                         ; DATA XREF=sub_2d30+137
0000000000006389         db  0xca ; '.'
000000000000638a         db  0xff ; '.'
000000000000638b         db  0xff ; '.'
000000000000638c         db  0xb8 ; '.'
000000000000638d         db  0xc9 ; '.'
000000000000638e         db  0xff ; '.'
000000000000638f         db  0xff ; '.'
0000000000006390         db  0xb8 ; '.'
0000000000006391         db  0xc9 ; '.'
0000000000006392         db  0xff ; '.'
0000000000006393         db  0xff ; '.'
0000000000006394         db  0xb8 ; '.'
0000000000006395         db  0xc9 ; '.'
0000000000006396         db  0xff ; '.'
0000000000006397         db  0xff ; '.'
0000000000006398         db  0xb8 ; '.'
0000000000006399         db  0xc9 ; '.'
000000000000639a         db  0xff ; '.'
000000000000639b         db  0xff ; '.'
000000000000639c         db  0xb8 ; '.'
000000000000639d         db  0xc9 ; '.'
000000000000639e         db  0xff ; '.'
000000000000639f         db  0xff ; '.'
00000000000063a0         db  0xb8 ; '.'
00000000000063a1         db  0xc9 ; '.'
00000000000063a2         db  0xff ; '.'
00000000000063a3         db  0xff ; '.'
00000000000063a4         db  0x98 ; '.'
00000000000063a5         db  0xca ; '.'
00000000000063a6         db  0xff ; '.'
00000000000063a7         db  0xff ; '.'
00000000000063a8         db  0xe8 ; '.'
00000000000063a9         db  0xcb ; '.'
00000000000063aa         db  0xff ; '.'
00000000000063ab         db  0xff ; '.'
00000000000063ac         db  0xd0 ; '.'
00000000000063ad         db  0xcb ; '.'
00000000000063ae         db  0xff ; '.'
00000000000063af         db  0xff ; '.'
00000000000063b0         db  0x80 ; '.'
00000000000063b1         db  0xca ; '.'
00000000000063b2         db  0xff ; '.'
00000000000063b3         db  0xff ; '.'
00000000000063b4         db  0xc0 ; '.'
00000000000063b5         db  0xcb ; '.'
00000000000063b6         db  0xff ; '.'
00000000000063b7         db  0xff ; '.'
00000000000063b8         db  0x68 ; 'h'
00000000000063b9         db  0xca ; '.'
00000000000063ba         db  0xff ; '.'
00000000000063bb         db  0xff ; '.'
00000000000063bc         db  0xa8 ; '.'
00000000000063bd         db  0xcb ; '.'
00000000000063be         db  0xff ; '.'
00000000000063bf         db  0xff ; '.'
00000000000063c0         db  0xb8 ; '.'
00000000000063c1         db  0xc9 ; '.'
00000000000063c2         db  0xff ; '.'
00000000000063c3         db  0xff ; '.'
00000000000063c4         db  0xb8 ; '.'
00000000000063c5         db  0xc9 ; '.'
00000000000063c6         db  0xff ; '.'
00000000000063c7         db  0xff ; '.'
00000000000063c8         db  0xb8 ; '.'
00000000000063c9         db  0xc9 ; '.'
00000000000063ca         db  0xff ; '.'
00000000000063cb         db  0xff ; '.'
00000000000063cc         db  0xb8 ; '.'
00000000000063cd         db  0xc9 ; '.'
00000000000063ce         db  0xff ; '.'
00000000000063cf         db  0xff ; '.'
00000000000063d0         db  0xb8 ; '.'
00000000000063d1         db  0xc9 ; '.'
00000000000063d2         db  0xff ; '.'
00000000000063d3         db  0xff ; '.'
00000000000063d4         db  0xb8 ; '.'
00000000000063d5         db  0xc9 ; '.'
00000000000063d6         db  0xff ; '.'
00000000000063d7         db  0xff ; '.'
00000000000063d8         db  0xb8 ; '.'
00000000000063d9         db  0xc9 ; '.'
00000000000063da         db  0xff ; '.'
00000000000063db         db  0xff ; '.'
00000000000063dc         db  0xb8 ; '.'
00000000000063dd         db  0xc9 ; '.'
00000000000063de         db  0xff ; '.'
00000000000063df         db  0xff ; '.'
00000000000063e0         db  0xb8 ; '.'
00000000000063e1         db  0xc9 ; '.'
00000000000063e2         db  0xff ; '.'
00000000000063e3         db  0xff ; '.'
00000000000063e4         db  0xb8 ; '.'
00000000000063e5         db  0xc9 ; '.'
00000000000063e6         db  0xff ; '.'
00000000000063e7         db  0xff ; '.'
00000000000063e8         db  0xb8 ; '.'
00000000000063e9         db  0xc9 ; '.'
00000000000063ea         db  0xff ; '.'
00000000000063eb         db  0xff ; '.'
00000000000063ec         db  0xb8 ; '.'
00000000000063ed         db  0xc9 ; '.'
00000000000063ee         db  0xff ; '.'
00000000000063ef         db  0xff ; '.'
00000000000063f0         db  0xb8 ; '.'
00000000000063f1         db  0xc9 ; '.'
00000000000063f2         db  0xff ; '.'
00000000000063f3         db  0xff ; '.'
00000000000063f4         db  0xb8 ; '.'
00000000000063f5         db  0xc9 ; '.'
00000000000063f6         db  0xff ; '.'
00000000000063f7         db  0xff ; '.'
00000000000063f8         db  0xb8 ; '.'
00000000000063f9         db  0xc9 ; '.'
00000000000063fa         db  0xff ; '.'
00000000000063fb         db  0xff ; '.'
00000000000063fc         db  0xb8 ; '.'
00000000000063fd         db  0xc9 ; '.'
00000000000063fe         db  0xff ; '.'
00000000000063ff         db  0xff ; '.'
0000000000006400         db  0xb8 ; '.'
0000000000006401         db  0xc9 ; '.'
0000000000006402         db  0xff ; '.'
0000000000006403         db  0xff ; '.'
0000000000006404         db  0xb8 ; '.'
0000000000006405         db  0xc9 ; '.'
0000000000006406         db  0xff ; '.'
0000000000006407         db  0xff ; '.'
0000000000006408         db  0x90 ; '.'
0000000000006409         db  0xcb ; '.'
000000000000640a         db  0xff ; '.'
000000000000640b         db  0xff ; '.'
000000000000640c         db  0x78 ; 'x'
000000000000640d         db  0xcb ; '.'
000000000000640e         db  0xff ; '.'
000000000000640f         db  0xff ; '.'
0000000000006410         db  0x78 ; 'x'
0000000000006411         db  0xcb ; '.'
0000000000006412         db  0xff ; '.'
0000000000006413         db  0xff ; '.'
0000000000006414         db  0x60 ; '`'
0000000000006415         db  0xcb ; '.'
0000000000006416         db  0xff ; '.'
0000000000006417         db  0xff ; '.'
0000000000006418         db  0x78 ; 'x'
0000000000006419         db  0xcb ; '.'
000000000000641a         db  0xff ; '.'
000000000000641b         db  0xff ; '.'
000000000000641c         db  0x48 ; 'H'
000000000000641d         db  0xcb ; '.'
000000000000641e         db  0xff ; '.'
000000000000641f         db  0xff ; '.'
0000000000006420         db  0x78 ; 'x'
0000000000006421         db  0xcb ; '.'
0000000000006422         db  0xff ; '.'
0000000000006423         db  0xff ; '.'
0000000000006424         db  0xb8 ; '.'
0000000000006425         db  0xc7 ; '.'
0000000000006426         db  0xff ; '.'
0000000000006427         db  0xff ; '.'
0000000000006428         db  0x78 ; 'x'
0000000000006429         db  0xcb ; '.'
000000000000642a         db  0xff ; '.'
000000000000642b         db  0xff ; '.'
000000000000642c         db  0x78 ; 'x'
000000000000642d         db  0xcb ; '.'
000000000000642e         db  0xff ; '.'
000000000000642f         db  0xff ; '.'
0000000000006430         db  0x78 ; 'x'
0000000000006431         db  0xcb ; '.'
0000000000006432         db  0xff ; '.'
0000000000006433         db  0xff ; '.'
0000000000006434         db  0x48 ; 'H'
0000000000006435         db  0xcb ; '.'
0000000000006436         db  0xff ; '.'
0000000000006437         db  0xff ; '.'
0000000000006438         db  0x48 ; 'H'
0000000000006439         db  0xcb ; '.'
000000000000643a         db  0xff ; '.'
000000000000643b         db  0xff ; '.'
000000000000643c         db  0x48 ; 'H'
000000000000643d         db  0xcb ; '.'
000000000000643e         db  0xff ; '.'
000000000000643f         db  0xff ; '.'
0000000000006440         db  0x48 ; 'H'
0000000000006441         db  0xcb ; '.'
0000000000006442         db  0xff ; '.'
0000000000006443         db  0xff ; '.'
0000000000006444         db  0x48 ; 'H'
0000000000006445         db  0xcb ; '.'
0000000000006446         db  0xff ; '.'
0000000000006447         db  0xff ; '.'
0000000000006448         db  0x48 ; 'H'
0000000000006449         db  0xcb ; '.'
000000000000644a         db  0xff ; '.'
000000000000644b         db  0xff ; '.'
000000000000644c         db  0x48 ; 'H'
000000000000644d         db  0xcb ; '.'
000000000000644e         db  0xff ; '.'
000000000000644f         db  0xff ; '.'
0000000000006450         db  0x48 ; 'H'
0000000000006451         db  0xcb ; '.'
0000000000006452         db  0xff ; '.'
0000000000006453         db  0xff ; '.'
0000000000006454         db  0x48 ; 'H'
0000000000006455         db  0xcb ; '.'
0000000000006456         db  0xff ; '.'
0000000000006457         db  0xff ; '.'
0000000000006458         db  0x48 ; 'H'
0000000000006459         db  0xcb ; '.'
000000000000645a         db  0xff ; '.'
000000000000645b         db  0xff ; '.'
000000000000645c         db  0x48 ; 'H'
000000000000645d         db  0xcb ; '.'
000000000000645e         db  0xff ; '.'
000000000000645f         db  0xff ; '.'
0000000000006460         db  0x48 ; 'H'
0000000000006461         db  0xcb ; '.'
0000000000006462         db  0xff ; '.'
0000000000006463         db  0xff ; '.'
0000000000006464         db  0x48 ; 'H'
0000000000006465         db  0xcb ; '.'
0000000000006466         db  0xff ; '.'
0000000000006467         db  0xff ; '.'
0000000000006468         db  0x48 ; 'H'
0000000000006469         db  0xcb ; '.'
000000000000646a         db  0xff ; '.'
000000000000646b         db  0xff ; '.'
000000000000646c         db  0x48 ; 'H'
000000000000646d         db  0xcb ; '.'
000000000000646e         db  0xff ; '.'
000000000000646f         db  0xff ; '.'
0000000000006470         db  0x48 ; 'H'
0000000000006471         db  0xcb ; '.'
0000000000006472         db  0xff ; '.'
0000000000006473         db  0xff ; '.'
0000000000006474         db  0x78 ; 'x'
0000000000006475         db  0xcb ; '.'
0000000000006476         db  0xff ; '.'
0000000000006477         db  0xff ; '.'
0000000000006478         db  0x78 ; 'x'
0000000000006479         db  0xcb ; '.'
000000000000647a         db  0xff ; '.'
000000000000647b         db  0xff ; '.'
000000000000647c         db  0x78 ; 'x'
000000000000647d         db  0xcb ; '.'
000000000000647e         db  0xff ; '.'
000000000000647f         db  0xff ; '.'
0000000000006480         db  0x78 ; 'x'
0000000000006481         db  0xcb ; '.'
0000000000006482         db  0xff ; '.'
0000000000006483         db  0xff ; '.'
0000000000006484         db  0x88 ; '.'
0000000000006485         db  0xc7 ; '.'
0000000000006486         db  0xff ; '.'
0000000000006487         db  0xff ; '.'
0000000000006488         db  0xb8 ; '.'
0000000000006489         db  0xc9 ; '.'
000000000000648a         db  0xff ; '.'
000000000000648b         db  0xff ; '.'
000000000000648c         db  0x48 ; 'H'
000000000000648d         db  0xcb ; '.'
000000000000648e         db  0xff ; '.'
000000000000648f         db  0xff ; '.'
0000000000006490         db  0x48 ; 'H'
0000000000006491         db  0xcb ; '.'
0000000000006492         db  0xff ; '.'
0000000000006493         db  0xff ; '.'
0000000000006494         db  0x48 ; 'H'
0000000000006495         db  0xcb ; '.'
0000000000006496         db  0xff ; '.'
0000000000006497         db  0xff ; '.'
0000000000006498         db  0x48 ; 'H'
0000000000006499         db  0xcb ; '.'
000000000000649a         db  0xff ; '.'
000000000000649b         db  0xff ; '.'
000000000000649c         db  0x48 ; 'H'
000000000000649d         db  0xcb ; '.'
000000000000649e         db  0xff ; '.'
000000000000649f         db  0xff ; '.'
00000000000064a0         db  0x48 ; 'H'
00000000000064a1         db  0xcb ; '.'
00000000000064a2         db  0xff ; '.'
00000000000064a3         db  0xff ; '.'
00000000000064a4         db  0x48 ; 'H'
00000000000064a5         db  0xcb ; '.'
00000000000064a6         db  0xff ; '.'
00000000000064a7         db  0xff ; '.'
00000000000064a8         db  0x48 ; 'H'
00000000000064a9         db  0xcb ; '.'
00000000000064aa         db  0xff ; '.'
00000000000064ab         db  0xff ; '.'
00000000000064ac         db  0x48 ; 'H'
00000000000064ad         db  0xcb ; '.'
00000000000064ae         db  0xff ; '.'
00000000000064af         db  0xff ; '.'
00000000000064b0         db  0x48 ; 'H'
00000000000064b1         db  0xcb ; '.'
00000000000064b2         db  0xff ; '.'
00000000000064b3         db  0xff ; '.'
00000000000064b4         db  0x48 ; 'H'
00000000000064b5         db  0xcb ; '.'
00000000000064b6         db  0xff ; '.'
00000000000064b7         db  0xff ; '.'
00000000000064b8         db  0x48 ; 'H'
00000000000064b9         db  0xcb ; '.'
00000000000064ba         db  0xff ; '.'
00000000000064bb         db  0xff ; '.'
00000000000064bc         db  0x48 ; 'H'
00000000000064bd         db  0xcb ; '.'
00000000000064be         db  0xff ; '.'
00000000000064bf         db  0xff ; '.'
00000000000064c0         db  0x48 ; 'H'
00000000000064c1         db  0xcb ; '.'
00000000000064c2         db  0xff ; '.'
00000000000064c3         db  0xff ; '.'
00000000000064c4         db  0x48 ; 'H'
00000000000064c5         db  0xcb ; '.'
00000000000064c6         db  0xff ; '.'
00000000000064c7         db  0xff ; '.'
00000000000064c8         db  0x48 ; 'H'
00000000000064c9         db  0xcb ; '.'
00000000000064ca         db  0xff ; '.'
00000000000064cb         db  0xff ; '.'
00000000000064cc         db  0x48 ; 'H'
00000000000064cd         db  0xcb ; '.'
00000000000064ce         db  0xff ; '.'
00000000000064cf         db  0xff ; '.'
00000000000064d0         db  0x48 ; 'H'
00000000000064d1         db  0xcb ; '.'
00000000000064d2         db  0xff ; '.'
00000000000064d3         db  0xff ; '.'
00000000000064d4         db  0x48 ; 'H'
00000000000064d5         db  0xcb ; '.'
00000000000064d6         db  0xff ; '.'
00000000000064d7         db  0xff ; '.'
00000000000064d8         db  0x48 ; 'H'
00000000000064d9         db  0xcb ; '.'
00000000000064da         db  0xff ; '.'
00000000000064db         db  0xff ; '.'
00000000000064dc         db  0x48 ; 'H'
00000000000064dd         db  0xcb ; '.'
00000000000064de         db  0xff ; '.'
00000000000064df         db  0xff ; '.'
00000000000064e0         db  0x48 ; 'H'
00000000000064e1         db  0xcb ; '.'
00000000000064e2         db  0xff ; '.'
00000000000064e3         db  0xff ; '.'
00000000000064e4         db  0x48 ; 'H'
00000000000064e5         db  0xcb ; '.'
00000000000064e6         db  0xff ; '.'
00000000000064e7         db  0xff ; '.'
00000000000064e8         db  0x48 ; 'H'
00000000000064e9         db  0xcb ; '.'
00000000000064ea         db  0xff ; '.'
00000000000064eb         db  0xff ; '.'
00000000000064ec         db  0x48 ; 'H'
00000000000064ed         db  0xcb ; '.'
00000000000064ee         db  0xff ; '.'
00000000000064ef         db  0xff ; '.'
00000000000064f0         db  0x48 ; 'H'
00000000000064f1         db  0xcb ; '.'
00000000000064f2         db  0xff ; '.'
00000000000064f3         db  0xff ; '.'
00000000000064f4         db  0x78 ; 'x'
00000000000064f5         db  0xcb ; '.'
00000000000064f6         db  0xff ; '.'
00000000000064f7         db  0xff ; '.'
00000000000064f8         db  0x48 ; 'H'
00000000000064f9         db  0xca ; '.'
00000000000064fa         db  0xff ; '.'
00000000000064fb         db  0xff ; '.'
00000000000064fc         db  0x48 ; 'H'
00000000000064fd         db  0xcb ; '.'
00000000000064fe         db  0xff ; '.'
00000000000064ff         db  0xff ; '.'
0000000000006500         db  0x78 ; 'x'
0000000000006501         db  0xcb ; '.'
0000000000006502         db  0xff ; '.'
0000000000006503         db  0xff ; '.'
0000000000006504         db  0x48 ; 'H'
0000000000006505         db  0xcb ; '.'
0000000000006506         db  0xff ; '.'
0000000000006507         db  0xff ; '.'
0000000000006508         db  0x78 ; 'x'
0000000000006509         db  0xcb ; '.'
000000000000650a         db  0xff ; '.'
000000000000650b         db  0xff ; '.'
000000000000650c         db  0x48 ; 'H'
000000000000650d         db  0xcb ; '.'
000000000000650e         db  0xff ; '.'
000000000000650f         db  0xff ; '.'
0000000000006510         db  0x48 ; 'H'
0000000000006511         db  0xcb ; '.'
0000000000006512         db  0xff ; '.'
0000000000006513         db  0xff ; '.'
0000000000006514         db  0x48 ; 'H'
0000000000006515         db  0xcb ; '.'
0000000000006516         db  0xff ; '.'
0000000000006517         db  0xff ; '.'
0000000000006518         db  0x48 ; 'H'
0000000000006519         db  0xcb ; '.'
000000000000651a         db  0xff ; '.'
000000000000651b         db  0xff ; '.'
000000000000651c         db  0x48 ; 'H'
000000000000651d         db  0xcb ; '.'
000000000000651e         db  0xff ; '.'
000000000000651f         db  0xff ; '.'
0000000000006520         db  0x48 ; 'H'
0000000000006521         db  0xcb ; '.'
0000000000006522         db  0xff ; '.'
0000000000006523         db  0xff ; '.'
0000000000006524         db  0x48 ; 'H'
0000000000006525         db  0xcb ; '.'
0000000000006526         db  0xff ; '.'
0000000000006527         db  0xff ; '.'
0000000000006528         db  0x48 ; 'H'
0000000000006529         db  0xcb ; '.'
000000000000652a         db  0xff ; '.'
000000000000652b         db  0xff ; '.'
000000000000652c         db  0x48 ; 'H'
000000000000652d         db  0xcb ; '.'
000000000000652e         db  0xff ; '.'
000000000000652f         db  0xff ; '.'
0000000000006530         db  0x48 ; 'H'
0000000000006531         db  0xcb ; '.'
0000000000006532         db  0xff ; '.'
0000000000006533         db  0xff ; '.'
0000000000006534         db  0x48 ; 'H'
0000000000006535         db  0xcb ; '.'
0000000000006536         db  0xff ; '.'
0000000000006537         db  0xff ; '.'
0000000000006538         db  0x48 ; 'H'
0000000000006539         db  0xcb ; '.'
000000000000653a         db  0xff ; '.'
000000000000653b         db  0xff ; '.'
000000000000653c         db  0x48 ; 'H'
000000000000653d         db  0xcb ; '.'
000000000000653e         db  0xff ; '.'
000000000000653f         db  0xff ; '.'
0000000000006540         db  0x48 ; 'H'
0000000000006541         db  0xcb ; '.'
0000000000006542         db  0xff ; '.'
0000000000006543         db  0xff ; '.'
0000000000006544         db  0x48 ; 'H'
0000000000006545         db  0xcb ; '.'
0000000000006546         db  0xff ; '.'
0000000000006547         db  0xff ; '.'
0000000000006548         db  0x48 ; 'H'
0000000000006549         db  0xcb ; '.'
000000000000654a         db  0xff ; '.'
000000000000654b         db  0xff ; '.'
000000000000654c         db  0x48 ; 'H'
000000000000654d         db  0xcb ; '.'
000000000000654e         db  0xff ; '.'
000000000000654f         db  0xff ; '.'
0000000000006550         db  0x48 ; 'H'
0000000000006551         db  0xcb ; '.'
0000000000006552         db  0xff ; '.'
0000000000006553         db  0xff ; '.'
0000000000006554         db  0x48 ; 'H'
0000000000006555         db  0xcb ; '.'
0000000000006556         db  0xff ; '.'
0000000000006557         db  0xff ; '.'
0000000000006558         db  0x48 ; 'H'
0000000000006559         db  0xcb ; '.'
000000000000655a         db  0xff ; '.'
000000000000655b         db  0xff ; '.'
000000000000655c         db  0x48 ; 'H'
000000000000655d         db  0xcb ; '.'
000000000000655e         db  0xff ; '.'
000000000000655f         db  0xff ; '.'
0000000000006560         db  0x48 ; 'H'
0000000000006561         db  0xcb ; '.'
0000000000006562         db  0xff ; '.'
0000000000006563         db  0xff ; '.'
0000000000006564         db  0x48 ; 'H'
0000000000006565         db  0xcb ; '.'
0000000000006566         db  0xff ; '.'
0000000000006567         db  0xff ; '.'
0000000000006568         db  0x48 ; 'H'
0000000000006569         db  0xcb ; '.'
000000000000656a         db  0xff ; '.'
000000000000656b         db  0xff ; '.'
000000000000656c         db  0x48 ; 'H'
000000000000656d         db  0xcb ; '.'
000000000000656e         db  0xff ; '.'
000000000000656f         db  0xff ; '.'
0000000000006570         db  0x48 ; 'H'
0000000000006571         db  0xcb ; '.'
0000000000006572         db  0xff ; '.'
0000000000006573         db  0xff ; '.'
0000000000006574         db  0xb8 ; '.'
0000000000006575         db  0xc6 ; '.'
0000000000006576         db  0xff ; '.'
0000000000006577         db  0xff ; '.'
0000000000006578         db  0x78 ; 'x'
0000000000006579         db  0xcb ; '.'
000000000000657a         db  0xff ; '.'
000000000000657b         db  0xff ; '.'
000000000000657c         db  0xb8 ; '.'
000000000000657d         db  0xc6 ; '.'
000000000000657e         db  0xff ; '.'
000000000000657f         db  0xff ; '.'
0000000000006580         db  0x60 ; '`'
0000000000006581         db  0xcb ; '.'
0000000000006582         db  0xff ; '.'
0000000000006583         db  0xff ; '.'
0000000000006584         db  0x00 ; '.'
0000000000006585         db  0x00 ; '.'
0000000000006586         db  0x00 ; '.'
0000000000006587         db  0x00 ; '.'
0000000000006588         db  0x00 ; '.'
0000000000006589         db  0x00 ; '.'
000000000000658a         db  0x00 ; '.'
000000000000658b         db  0x00 ; '.'
000000000000658c         db  0x00 ; '.'
000000000000658d         db  0x00 ; '.'
000000000000658e         db  0x00 ; '.'
000000000000658f         db  0x00 ; '.'
0000000000006590         db  0x00 ; '.'
0000000000006591         db  0x00 ; '.'
0000000000006592         db  0x00 ; '.'
0000000000006593         db  0x00 ; '.'
0000000000006594         db  0x00 ; '.'
0000000000006595         db  0x00 ; '.'
0000000000006596         db  0x00 ; '.'
0000000000006597         db  0x00 ; '.'
0000000000006598         db  0x00 ; '.'
0000000000006599         db  0x00 ; '.'
000000000000659a         db  0x00 ; '.'
000000000000659b         db  0x00 ; '.'
000000000000659c         db  0x00 ; '.'
000000000000659d         db  0x00 ; '.'
000000000000659e         db  0x00 ; '.'
000000000000659f         db  0x00 ; '.'
                     quoting_style_vals:
00000000000065a0         db  0x00 ; '.'
00000000000065a1         db  0x00 ; '.'
00000000000065a2         db  0x00 ; '.'
00000000000065a3         db  0x00 ; '.'
00000000000065a4         db  0x01 ; '.'
00000000000065a5         db  0x00 ; '.'
00000000000065a6         db  0x00 ; '.'
00000000000065a7         db  0x00 ; '.'
00000000000065a8         db  0x02 ; '.'
00000000000065a9         db  0x00 ; '.'
00000000000065aa         db  0x00 ; '.'
00000000000065ab         db  0x00 ; '.'
00000000000065ac         db  0x03 ; '.'
00000000000065ad         db  0x00 ; '.'
00000000000065ae         db  0x00 ; '.'
00000000000065af         db  0x00 ; '.'
00000000000065b0         db  0x04 ; '.'
00000000000065b1         db  0x00 ; '.'
00000000000065b2         db  0x00 ; '.'
00000000000065b3         db  0x00 ; '.'
00000000000065b4         db  0x05 ; '.'
00000000000065b5         db  0x00 ; '.'
00000000000065b6         db  0x00 ; '.'
00000000000065b7         db  0x00 ; '.'
00000000000065b8         db  0x06 ; '.'
00000000000065b9         db  0x00 ; '.'
00000000000065ba         db  0x00 ; '.'
00000000000065bb         db  0x00 ; '.'
00000000000065bc         db  0x07 ; '.'
00000000000065bd         db  0x00 ; '.'
00000000000065be         db  0x00 ; '.'
00000000000065bf         db  0x00 ; '.'
00000000000065c0         db  0x08 ; '.'
00000000000065c1         db  0x00 ; '.'
00000000000065c2         db  0x00 ; '.'
00000000000065c3         db  0x00 ; '.'
00000000000065c4         db  0x09 ; '.'
00000000000065c5         db  0x00 ; '.'
00000000000065c6         db  0x00 ; '.'
00000000000065c7         db  0x00 ; '.'
                     aSSSn:
00000000000065c8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
00000000000065d4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
00000000000065db         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
00000000000065dc         db  0x43 ; 'C'
00000000000065dd         db  0x29 ; ')'
00000000000065de         db  0x00 ; '.'
                     aWrittenBySn:
00000000000065df         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000065ef         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000006606         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000006622         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000006637         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000664d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000006661         align      8
                     aNlicenseGplv3G:
0000000000006668         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000006734         align      8
                     aWrittenBySSSna:
0000000000006738         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_6758:        // aWrittenBySSSns
0000000000006758         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000677c         align      128
                     aWrittenBySSSns_6780:        // aWrittenBySSSns
0000000000006780         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_67a8:        // aWrittenBySSSns
00000000000067a8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
00000000000067d4         align      8
                     aWrittenBySSSns_67d8:        // aWrittenBySSSns
00000000000067d8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000006808         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000683c         align      64
                     aWrittenBySSSns_6840:        // aWrittenBySSSns
0000000000006840         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000687c         align      128
                     aGeneralHelpUsi:
0000000000006880         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000068c1         align      4
                     switch_table_68c4:        // switch_table
00000000000068c4         dd         version_etc_arn.loc_4516-switch_table_68c4, version_etc_arn.loc_45a8-switch_table_68c4, version_etc_arn.loc_45e8-switch_table_68c4, version_etc_arn.loc_4630-switch_table_68c4 ; switch table used at 0x4494 containing 10 entries, DATA XREF=version_etc_arn+150
00000000000068d4         dd         version_etc_arn.loc_4680-switch_table_68c4, version_etc_arn.loc_46d8-switch_table_68c4, version_etc_arn.loc_4708-switch_table_68c4, version_etc_arn.loc_4770-switch_table_68c4
00000000000068e4         dd         version_etc_arn.loc_44a0-switch_table_68c4, version_etc_arn.loc_4550-switch_table_68c4
00000000000068ec         align      256
                     version_etc_copyright:
0000000000006900         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000692f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
0000000000006940         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoimax+1686
                     a0StrtolbaseStr:
0000000000006960         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoimax+1693
0000000000006986         align      8
                     switch_table_6988:        // switch_table
0000000000006988         dd         xstrtoimax.loc_52d0-switch_table_6988, 2 dup (xstrtoimax.loc_4f68-switch_table_6988), xstrtoimax.loc_5200-switch_table_6988, xstrtoimax.loc_4f68-switch_table_6988 ; switch table used at 0x4f9e containing 54 entries, DATA XREF=xstrtoimax+412
000000000000699c         dd         xstrtoimax.loc_51a0-switch_table_6988, 3 dup (xstrtoimax.loc_4f68-switch_table_6988), xstrtoimax.loc_5160-switch_table_6988, xstrtoimax.loc_4f68-switch_table_6988
00000000000069b4         dd         xstrtoimax.loc_4fa0-switch_table_6988, 2 dup (xstrtoimax.loc_4f68-switch_table_6988), xstrtoimax.loc_5268-switch_table_6988, 3 dup (xstrtoimax.loc_4f68-switch_table_6988)
00000000000069d0         dd         xstrtoimax.loc_5300-switch_table_6988, 4 dup (xstrtoimax.loc_4f68-switch_table_6988), xstrtoimax.loc_50f0-switch_table_6988, xstrtoimax.loc_5080-switch_table_6988
00000000000069ec         dd         7 dup (xstrtoimax.loc_4f68-switch_table_6988), xstrtoimax.loc_5050-switch_table_6988, xstrtoimax.loc_5000-switch_table_6988, 3 dup (xstrtoimax.loc_4f68-switch_table_6988)
0000000000006a1c         dd         xstrtoimax.loc_51a0-switch_table_6988, 3 dup (xstrtoimax.loc_4f68-switch_table_6988), xstrtoimax.loc_5160-switch_table_6988, xstrtoimax.loc_4f68-switch_table_6988
0000000000006a34         dd         xstrtoimax.loc_4fa0-switch_table_6988, 6 dup (xstrtoimax.loc_4f68-switch_table_6988), xstrtoimax.loc_5300-switch_table_6988, 2 dup (xstrtoimax.loc_4f68-switch_table_6988)
0000000000006a5c         dd         xstrtoimax.loc_5020-switch_table_6988
                     __PRETTY_FUNCTION__.4162:
0000000000006a60         db         "xstrtoimax", 0                             ; DATA XREF=xstrtoimax+1679
0000000000006a6b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000006a6c         db  0x00 ; '.'
                     aPosix:
0000000000006a6d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000006a73         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000006a79         db  0x00 ; '.'
0000000000006a7a         db  0x00 ; '.'
0000000000006a7b         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x6a7c; 0x6cd0[ (596 bytes)
        ; File offset : [27260; 27856[ (596 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006a7c         db  0x01 ; '.'
0000000000006a7d         db  0x1b ; '.'
0000000000006a7e         db  0x03 ; '.'
0000000000006a7f         db  0x3b ; ';'
0000000000006a80         db  0x50 ; 'P'
0000000000006a81         db  0x02 ; '.'
0000000000006a82         db  0x00 ; '.'
0000000000006a83         db  0x00 ; '.'
0000000000006a84         db  0x49 ; 'I'
0000000000006a85         db  0x00 ; '.'
0000000000006a86         db  0x00 ; '.'
0000000000006a87         db  0x00 ; '.'
0000000000006a88         db  0x54 ; 'T'
0000000000006a89         db  0xa9 ; '.'
0000000000006a8a         db  0xff ; '.'
0000000000006a8b         db  0xff ; '.'
0000000000006a8c         db  0x9c ; '.'
0000000000006a8d         db  0x02 ; '.'
0000000000006a8e         db  0x00 ; '.'
0000000000006a8f         db  0x00 ; '.'
0000000000006a90         db  0x54 ; 'T'
0000000000006a91         db  0xac ; '.'
0000000000006a92         db  0xff ; '.'
0000000000006a93         db  0xff ; '.'
0000000000006a94         db  0xc4 ; '.'
0000000000006a95         db  0x02 ; '.'
0000000000006a96         db  0x00 ; '.'
0000000000006a97         db  0x00 ; '.'
0000000000006a98         db  0x64 ; 'd'
0000000000006a99         db  0xac ; '.'
0000000000006a9a         db  0xff ; '.'
0000000000006a9b         db  0xff ; '.'
0000000000006a9c         db  0x08 ; '.'
0000000000006a9d         db  0x03 ; '.'
0000000000006a9e         db  0x00 ; '.'
0000000000006a9f         db  0x00 ; '.'
0000000000006aa0         db  0x44 ; 'D'
0000000000006aa1         db  0xb6 ; '.'
0000000000006aa2         db  0xff ; '.'
0000000000006aa3         db  0xff ; '.'
0000000000006aa4         db  0x6c ; 'l'
0000000000006aa5         db  0x02 ; '.'
0000000000006aa6         db  0x00 ; '.'
0000000000006aa7         db  0x00 ; '.'
0000000000006aa8         db  0x54 ; 'T'
0000000000006aa9         db  0xb7 ; '.'
0000000000006aaa         db  0xff ; '.'
0000000000006aab         db  0xff ; '.'
0000000000006aac         db  0xdc ; '.'
0000000000006aad         db  0x02 ; '.'
0000000000006aae         db  0x00 ; '.'
0000000000006aaf         db  0x00 ; '.'
0000000000006ab0         db  0x74 ; 't'
0000000000006ab1         db  0xbb ; '.'
0000000000006ab2         db  0xff ; '.'
0000000000006ab3         db  0xff ; '.'
0000000000006ab4         db  0x5c ; '\'
0000000000006ab5         db  0x03 ; '.'
0000000000006ab6         db  0x00 ; '.'
0000000000006ab7         db  0x00 ; '.'
0000000000006ab8         db  0x84 ; '.'
0000000000006ab9         db  0xbb ; '.'
0000000000006aba         db  0xff ; '.'
0000000000006abb         db  0xff ; '.'
0000000000006abc         db  0x70 ; 'p'
0000000000006abd         db  0x03 ; '.'
0000000000006abe         db  0x00 ; '.'
0000000000006abf         db  0x00 ; '.'
0000000000006ac0         db  0x94 ; '.'
0000000000006ac1         db  0xbb ; '.'
0000000000006ac2         db  0xff ; '.'
0000000000006ac3         db  0xff ; '.'
0000000000006ac4         db  0x84 ; '.'
0000000000006ac5         db  0x03 ; '.'
0000000000006ac6         db  0x00 ; '.'
0000000000006ac7         db  0x00 ; '.'
0000000000006ac8         db  0x44 ; 'D'
0000000000006ac9         db  0xbc ; '.'
0000000000006aca         db  0xff ; '.'
0000000000006acb         db  0xff ; '.'
0000000000006acc         db  0xb4 ; '.'
0000000000006acd         db  0x03 ; '.'
0000000000006ace         db  0x00 ; '.'
0000000000006acf         db  0x00 ; '.'
0000000000006ad0         db  0xe4 ; '.'
0000000000006ad1         db  0xbc ; '.'
0000000000006ad2         db  0xff ; '.'
0000000000006ad3         db  0xff ; '.'
0000000000006ad4         db  0xd4 ; '.'
0000000000006ad5         db  0x03 ; '.'
0000000000006ad6         db  0x00 ; '.'
0000000000006ad7         db  0x00 ; '.'
0000000000006ad8         db  0xd4 ; '.'
0000000000006ad9         db  0xbd ; '.'
0000000000006ada         db  0xff ; '.'
0000000000006adb         db  0xff ; '.'
0000000000006adc         db  0x18 ; '.'
0000000000006add         db  0x04 ; '.'
0000000000006ade         db  0x00 ; '.'
0000000000006adf         db  0x00 ; '.'
0000000000006ae0         db  0x14 ; '.'
0000000000006ae1         db  0xd0 ; '.'
0000000000006ae2         db  0xff ; '.'
0000000000006ae3         db  0xff ; '.'
0000000000006ae4         db  0x90 ; '.'
0000000000006ae5         db  0x04 ; '.'
0000000000006ae6         db  0x00 ; '.'
0000000000006ae7         db  0x00 ; '.'
0000000000006ae8         db  0xc4 ; '.'
0000000000006ae9         db  0xd1 ; '.'
0000000000006aea         db  0xff ; '.'
0000000000006aeb         db  0xff ; '.'
0000000000006aec         db  0xfc ; '.'
0000000000006aed         db  0x04 ; '.'
0000000000006aee         db  0x00 ; '.'
0000000000006aef         db  0x00 ; '.'
0000000000006af0         db  0x04 ; '.'
0000000000006af1         db  0xd2 ; '.'
0000000000006af2         db  0xff ; '.'
0000000000006af3         db  0xff ; '.'
0000000000006af4         db  0x28 ; '('
0000000000006af5         db  0x05 ; '.'
0000000000006af6         db  0x00 ; '.'
0000000000006af7         db  0x00 ; '.'
0000000000006af8         db  0x24 ; '$'
0000000000006af9         db  0xd2 ; '.'
0000000000006afa         db  0xff ; '.'
0000000000006afb         db  0xff ; '.'
0000000000006afc         db  0x3c ; '<'
0000000000006afd         db  0x05 ; '.'
0000000000006afe         db  0x00 ; '.'
0000000000006aff         db  0x00 ; '.'
0000000000006b00         db  0x44 ; 'D'
0000000000006b01         db  0xd2 ; '.'
0000000000006b02         db  0xff ; '.'
0000000000006b03         db  0xff ; '.'
0000000000006b04         db  0x50 ; 'P'
0000000000006b05         db  0x05 ; '.'
0000000000006b06         db  0x00 ; '.'
0000000000006b07         db  0x00 ; '.'
0000000000006b08         db  0x84 ; '.'
0000000000006b09         db  0xd2 ; '.'
0000000000006b0a         db  0xff ; '.'
0000000000006b0b         db  0xff ; '.'
0000000000006b0c         db  0x64 ; 'd'
0000000000006b0d         db  0x05 ; '.'
0000000000006b0e         db  0x00 ; '.'
0000000000006b0f         db  0x00 ; '.'
0000000000006b10         db  0xa4 ; '.'
0000000000006b11         db  0xd2 ; '.'
0000000000006b12         db  0xff ; '.'
0000000000006b13         db  0xff ; '.'
0000000000006b14         db  0x78 ; 'x'
0000000000006b15         db  0x05 ; '.'
0000000000006b16         db  0x00 ; '.'
0000000000006b17         db  0x00 ; '.'
0000000000006b18         db  0xd4 ; '.'
0000000000006b19         db  0xd2 ; '.'
0000000000006b1a         db  0xff ; '.'
0000000000006b1b         db  0xff ; '.'
0000000000006b1c         db  0x8c ; '.'
0000000000006b1d         db  0x05 ; '.'
0000000000006b1e         db  0x00 ; '.'
0000000000006b1f         db  0x00 ; '.'
0000000000006b20         db  0x54 ; 'T'
0000000000006b21         db  0xd3 ; '.'
0000000000006b22         db  0xff ; '.'
0000000000006b23         db  0xff ; '.'
0000000000006b24         db  0xe0 ; '.'
0000000000006b25         db  0x05 ; '.'
0000000000006b26         db  0x00 ; '.'
0000000000006b27         db  0x00 ; '.'
0000000000006b28         db  0x44 ; 'D'
0000000000006b29         db  0xd4 ; '.'
0000000000006b2a         db  0xff ; '.'
0000000000006b2b         db  0xff ; '.'
0000000000006b2c         db  0x4c ; 'L'
0000000000006b2d         db  0x06 ; '.'
0000000000006b2e         db  0x00 ; '.'
0000000000006b2f         db  0x00 ; '.'
0000000000006b30         db  0x54 ; 'T'
0000000000006b31         db  0xd4 ; '.'
0000000000006b32         db  0xff ; '.'
0000000000006b33         db  0xff ; '.'
0000000000006b34         db  0x60 ; '`'
0000000000006b35         db  0x06 ; '.'
0000000000006b36         db  0x00 ; '.'
0000000000006b37         db  0x00 ; '.'
0000000000006b38         db  0xf4 ; '.'
0000000000006b39         db  0xd4 ; '.'
0000000000006b3a         db  0xff ; '.'
0000000000006b3b         db  0xff ; '.'
0000000000006b3c         db  0x8c ; '.'
0000000000006b3d         db  0x06 ; '.'
0000000000006b3e         db  0x00 ; '.'
0000000000006b3f         db  0x00 ; '.'
0000000000006b40         db  0x14 ; '.'
0000000000006b41         db  0xd5 ; '.'
0000000000006b42         db  0xff ; '.'
0000000000006b43         db  0xff ; '.'
0000000000006b44         db  0xa0 ; '.'
0000000000006b45         db  0x06 ; '.'
0000000000006b46         db  0x00 ; '.'
0000000000006b47         db  0x00 ; '.'
0000000000006b48         db  0x24 ; '$'
0000000000006b49         db  0xd5 ; '.'
0000000000006b4a         db  0xff ; '.'
0000000000006b4b         db  0xff ; '.'
0000000000006b4c         db  0xb4 ; '.'
0000000000006b4d         db  0x06 ; '.'
0000000000006b4e         db  0x00 ; '.'
0000000000006b4f         db  0x00 ; '.'
0000000000006b50         db  0x44 ; 'D'
0000000000006b51         db  0xd5 ; '.'
0000000000006b52         db  0xff ; '.'
0000000000006b53         db  0xff ; '.'
0000000000006b54         db  0xc8 ; '.'
0000000000006b55         db  0x06 ; '.'
0000000000006b56         db  0x00 ; '.'
0000000000006b57         db  0x00 ; '.'
0000000000006b58         db  0x64 ; 'd'
0000000000006b59         db  0xd5 ; '.'
0000000000006b5a         db  0xff ; '.'
0000000000006b5b         db  0xff ; '.'
0000000000006b5c         db  0xdc ; '.'
0000000000006b5d         db  0x06 ; '.'
0000000000006b5e         db  0x00 ; '.'
0000000000006b5f         db  0x00 ; '.'
0000000000006b60         db  0xf4 ; '.'
0000000000006b61         db  0xd5 ; '.'
0000000000006b62         db  0xff ; '.'
0000000000006b63         db  0xff ; '.'
0000000000006b64         db  0xf8 ; '.'
0000000000006b65         db  0x06 ; '.'
0000000000006b66         db  0x00 ; '.'
0000000000006b67         db  0x00 ; '.'
0000000000006b68         db  0x84 ; '.'
0000000000006b69         db  0xd6 ; '.'
0000000000006b6a         db  0xff ; '.'
0000000000006b6b         db  0xff ; '.'
0000000000006b6c         db  0x14 ; '.'
0000000000006b6d         db  0x07 ; '.'
0000000000006b6e         db  0x00 ; '.'
0000000000006b6f         db  0x00 ; '.'
0000000000006b70         db  0x94 ; '.'
0000000000006b71         db  0xd6 ; '.'
0000000000006b72         db  0xff ; '.'
0000000000006b73         db  0xff ; '.'
0000000000006b74         db  0x28 ; '('
0000000000006b75         db  0x07 ; '.'
0000000000006b76         db  0x00 ; '.'
0000000000006b77         db  0x00 ; '.'
0000000000006b78         db  0xa4 ; '.'
0000000000006b79         db  0xd6 ; '.'
0000000000006b7a         db  0xff ; '.'
0000000000006b7b         db  0xff ; '.'
0000000000006b7c         db  0x3c ; '<'
0000000000006b7d         db  0x07 ; '.'
0000000000006b7e         db  0x00 ; '.'
0000000000006b7f         db  0x00 ; '.'
0000000000006b80         db  0x44 ; 'D'
0000000000006b81         db  0xd7 ; '.'
0000000000006b82         db  0xff ; '.'
0000000000006b83         db  0xff ; '.'
0000000000006b84         db  0x58 ; 'X'
0000000000006b85         db  0x07 ; '.'
0000000000006b86         db  0x00 ; '.'
0000000000006b87         db  0x00 ; '.'
0000000000006b88         db  0x54 ; 'T'
0000000000006b89         db  0xd7 ; '.'
0000000000006b8a         db  0xff ; '.'
0000000000006b8b         db  0xff ; '.'
0000000000006b8c         db  0x6c ; 'l'
0000000000006b8d         db  0x07 ; '.'
0000000000006b8e         db  0x00 ; '.'
0000000000006b8f         db  0x00 ; '.'
0000000000006b90         db  0x74 ; 't'
0000000000006b91         db  0xd7 ; '.'
0000000000006b92         db  0xff ; '.'
0000000000006b93         db  0xff ; '.'
0000000000006b94         db  0x80 ; '.'
0000000000006b95         db  0x07 ; '.'
0000000000006b96         db  0x00 ; '.'
0000000000006b97         db  0x00 ; '.'
0000000000006b98         db  0x84 ; '.'
0000000000006b99         db  0xd7 ; '.'
0000000000006b9a         db  0xff ; '.'
0000000000006b9b         db  0xff ; '.'
0000000000006b9c         db  0x94 ; '.'
0000000000006b9d         db  0x07 ; '.'
0000000000006b9e         db  0x00 ; '.'
0000000000006b9f         db  0x00 ; '.'
0000000000006ba0         db  0x14 ; '.'
0000000000006ba1         db  0xd8 ; '.'
0000000000006ba2         db  0xff ; '.'
0000000000006ba3         db  0xff ; '.'
0000000000006ba4         db  0xb0 ; '.'
0000000000006ba5         db  0x07 ; '.'
0000000000006ba6         db  0x00 ; '.'
0000000000006ba7         db  0x00 ; '.'
0000000000006ba8         db  0xb4 ; '.'
0000000000006ba9         db  0xd8 ; '.'
0000000000006baa         db  0xff ; '.'
0000000000006bab         db  0xff ; '.'
0000000000006bac         db  0xcc ; '.'
0000000000006bad         db  0x07 ; '.'
0000000000006bae         db  0x00 ; '.'
0000000000006baf         db  0x00 ; '.'
0000000000006bb0         db  0xc4 ; '.'
0000000000006bb1         db  0xd8 ; '.'
0000000000006bb2         db  0xff ; '.'
0000000000006bb3         db  0xff ; '.'
0000000000006bb4         db  0xe0 ; '.'
0000000000006bb5         db  0x07 ; '.'
0000000000006bb6         db  0x00 ; '.'
0000000000006bb7         db  0x00 ; '.'
0000000000006bb8         db  0xe4 ; '.'
0000000000006bb9         db  0xd8 ; '.'
0000000000006bba         db  0xff ; '.'
0000000000006bbb         db  0xff ; '.'
0000000000006bbc         db  0xf4 ; '.'
0000000000006bbd         db  0x07 ; '.'
0000000000006bbe         db  0x00 ; '.'
0000000000006bbf         db  0x00 ; '.'
0000000000006bc0         db  0x04 ; '.'
0000000000006bc1         db  0xd9 ; '.'
0000000000006bc2         db  0xff ; '.'
0000000000006bc3         db  0xff ; '.'
0000000000006bc4         db  0x08 ; '.'
0000000000006bc5         db  0x08 ; '.'
0000000000006bc6         db  0x00 ; '.'
0000000000006bc7         db  0x00 ; '.'
0000000000006bc8         db  0x14 ; '.'
0000000000006bc9         db  0xd9 ; '.'
0000000000006bca         db  0xff ; '.'
0000000000006bcb         db  0xff ; '.'
0000000000006bcc         db  0x1c ; '.'
0000000000006bcd         db  0x08 ; '.'
0000000000006bce         db  0x00 ; '.'
0000000000006bcf         db  0x00 ; '.'
0000000000006bd0         db  0x34 ; '4'
0000000000006bd1         db  0xd9 ; '.'
0000000000006bd2         db  0xff ; '.'
0000000000006bd3         db  0xff ; '.'
0000000000006bd4         db  0x30 ; '0'
0000000000006bd5         db  0x08 ; '.'
0000000000006bd6         db  0x00 ; '.'
0000000000006bd7         db  0x00 ; '.'
0000000000006bd8         db  0x54 ; 'T'
0000000000006bd9         db  0xd9 ; '.'
0000000000006bda         db  0xff ; '.'
0000000000006bdb         db  0xff ; '.'
0000000000006bdc         db  0x44 ; 'D'
0000000000006bdd         db  0x08 ; '.'
0000000000006bde         db  0x00 ; '.'
0000000000006bdf         db  0x00 ; '.'
0000000000006be0         db  0x74 ; 't'
0000000000006be1         db  0xd9 ; '.'
0000000000006be2         db  0xff ; '.'
0000000000006be3         db  0xff ; '.'
0000000000006be4         db  0x5c ; '\'
0000000000006be5         db  0x08 ; '.'
0000000000006be6         db  0x00 ; '.'
0000000000006be7         db  0x00 ; '.'
0000000000006be8         db  0x94 ; '.'
0000000000006be9         db  0xdd ; '.'
0000000000006bea         db  0xff ; '.'
0000000000006beb         db  0xff ; '.'
0000000000006bec         db  0x70 ; 'p'
0000000000006bed         db  0x09 ; '.'
0000000000006bee         db  0x00 ; '.'
0000000000006bef         db  0x00 ; '.'
0000000000006bf0         db  0xb4 ; '.'
0000000000006bf1         db  0xdd ; '.'
0000000000006bf2         db  0xff ; '.'
0000000000006bf3         db  0xff ; '.'
0000000000006bf4         db  0x84 ; '.'
0000000000006bf5         db  0x09 ; '.'
0000000000006bf6         db  0x00 ; '.'
0000000000006bf7         db  0x00 ; '.'
0000000000006bf8         db  0x34 ; '4'
0000000000006bf9         db  0xde ; '.'
0000000000006bfa         db  0xff ; '.'
0000000000006bfb         db  0xff ; '.'
0000000000006bfc         db  0xa0 ; '.'
0000000000006bfd         db  0x09 ; '.'
0000000000006bfe         db  0x00 ; '.'
0000000000006bff         db  0x00 ; '.'
0000000000006c00         db  0x14 ; '.'
0000000000006c01         db  0xdf ; '.'
0000000000006c02         db  0xff ; '.'
0000000000006c03         db  0xff ; '.'
0000000000006c04         db  0xcc ; '.'
0000000000006c05         db  0x09 ; '.'
0000000000006c06         db  0x00 ; '.'
0000000000006c07         db  0x00 ; '.'
0000000000006c08         db  0x94 ; '.'
0000000000006c09         db  0xdf ; '.'
0000000000006c0a         db  0xff ; '.'
0000000000006c0b         db  0xff ; '.'
0000000000006c0c         db  0xec ; '.'
0000000000006c0d         db  0x09 ; '.'
0000000000006c0e         db  0x00 ; '.'
0000000000006c0f         db  0x00 ; '.'
0000000000006c10         db  0xb4 ; '.'
0000000000006c11         db  0xdf ; '.'
0000000000006c12         db  0xff ; '.'
0000000000006c13         db  0xff ; '.'
0000000000006c14         db  0x08 ; '.'
0000000000006c15         db  0x0a ; '.'
0000000000006c16         db  0x00 ; '.'
0000000000006c17         db  0x00 ; '.'
0000000000006c18         db  0xe4 ; '.'
0000000000006c19         db  0xdf ; '.'
0000000000006c1a         db  0xff ; '.'
0000000000006c1b         db  0xff ; '.'
0000000000006c1c         db  0x1c ; '.'
0000000000006c1d         db  0x0a ; '.'
0000000000006c1e         db  0x00 ; '.'
0000000000006c1f         db  0x00 ; '.'
0000000000006c20         db  0xf4 ; '.'
0000000000006c21         db  0xdf ; '.'
0000000000006c22         db  0xff ; '.'
0000000000006c23         db  0xff ; '.'
0000000000006c24         db  0x30 ; '0'
0000000000006c25         db  0x0a ; '.'
0000000000006c26         db  0x00 ; '.'
0000000000006c27         db  0x00 ; '.'
0000000000006c28         db  0x34 ; '4'
0000000000006c29         db  0xe0 ; '.'
0000000000006c2a         db  0xff ; '.'
0000000000006c2b         db  0xff ; '.'
0000000000006c2c         db  0x54 ; 'T'
0000000000006c2d         db  0x0a ; '.'
0000000000006c2e         db  0x00 ; '.'
0000000000006c2f         db  0x00 ; '.'
0000000000006c30         db  0x64 ; 'd'
0000000000006c31         db  0xe0 ; '.'
0000000000006c32         db  0xff ; '.'
0000000000006c33         db  0xff ; '.'
0000000000006c34         db  0x68 ; 'h'
0000000000006c35         db  0x0a ; '.'
0000000000006c36         db  0x00 ; '.'
0000000000006c37         db  0x00 ; '.'
0000000000006c38         db  0xf4 ; '.'
0000000000006c39         db  0xe0 ; '.'
0000000000006c3a         db  0xff ; '.'
0000000000006c3b         db  0xff ; '.'
0000000000006c3c         db  0x80 ; '.'
0000000000006c3d         db  0x0a ; '.'
0000000000006c3e         db  0x00 ; '.'
0000000000006c3f         db  0x00 ; '.'
0000000000006c40         db  0x44 ; 'D'
0000000000006c41         db  0xe1 ; '.'
0000000000006c42         db  0xff ; '.'
0000000000006c43         db  0xff ; '.'
0000000000006c44         db  0x98 ; '.'
0000000000006c45         db  0x0a ; '.'
0000000000006c46         db  0x00 ; '.'
0000000000006c47         db  0x00 ; '.'
0000000000006c48         db  0x64 ; 'd'
0000000000006c49         db  0xe1 ; '.'
0000000000006c4a         db  0xff ; '.'
0000000000006c4b         db  0xff ; '.'
0000000000006c4c         db  0xb4 ; '.'
0000000000006c4d         db  0x0a ; '.'
0000000000006c4e         db  0x00 ; '.'
0000000000006c4f         db  0x00 ; '.'
0000000000006c50         db  0x94 ; '.'
0000000000006c51         db  0xe1 ; '.'
0000000000006c52         db  0xff ; '.'
0000000000006c53         db  0xff ; '.'
0000000000006c54         db  0xd0 ; '.'
0000000000006c55         db  0x0a ; '.'
0000000000006c56         db  0x00 ; '.'
0000000000006c57         db  0x00 ; '.'
0000000000006c58         db  0xc4 ; '.'
0000000000006c59         db  0xe1 ; '.'
0000000000006c5a         db  0xff ; '.'
0000000000006c5b         db  0xff ; '.'
0000000000006c5c         db  0xf8 ; '.'
0000000000006c5d         db  0x0a ; '.'
0000000000006c5e         db  0x00 ; '.'
0000000000006c5f         db  0x00 ; '.'
0000000000006c60         db  0xe4 ; '.'
0000000000006c61         db  0xe1 ; '.'
0000000000006c62         db  0xff ; '.'
0000000000006c63         db  0xff ; '.'
0000000000006c64         db  0x14 ; '.'
0000000000006c65         db  0x0b ; '.'
0000000000006c66         db  0x00 ; '.'
0000000000006c67         db  0x00 ; '.'
0000000000006c68         db  0x24 ; '$'
0000000000006c69         db  0xe2 ; '.'
0000000000006c6a         db  0xff ; '.'
0000000000006c6b         db  0xff ; '.'
0000000000006c6c         db  0x2c ; ','
0000000000006c6d         db  0x0b ; '.'
0000000000006c6e         db  0x00 ; '.'
0000000000006c6f         db  0x00 ; '.'
0000000000006c70         db  0x44 ; 'D'
0000000000006c71         db  0xe3 ; '.'
0000000000006c72         db  0xff ; '.'
0000000000006c73         db  0xff ; '.'
0000000000006c74         db  0x78 ; 'x'
0000000000006c75         db  0x0b ; '.'
0000000000006c76         db  0x00 ; '.'
0000000000006c77         db  0x00 ; '.'
0000000000006c78         db  0x74 ; 't'
0000000000006c79         db  0xe3 ; '.'
0000000000006c7a         db  0xff ; '.'
0000000000006c7b         db  0xff ; '.'
0000000000006c7c         db  0x94 ; '.'
0000000000006c7d         db  0x0b ; '.'
0000000000006c7e         db  0x00 ; '.'
0000000000006c7f         db  0x00 ; '.'
0000000000006c80         db  0x34 ; '4'
0000000000006c81         db  0xea ; '.'
0000000000006c82         db  0xff ; '.'
0000000000006c83         db  0xff ; '.'
0000000000006c84         db  0xe4 ; '.'
0000000000006c85         db  0x0b ; '.'
0000000000006c86         db  0x00 ; '.'
0000000000006c87         db  0x00 ; '.'
0000000000006c88         db  0xc4 ; '.'
0000000000006c89         db  0xea ; '.'
0000000000006c8a         db  0xff ; '.'
0000000000006c8b         db  0xff ; '.'
0000000000006c8c         db  0x24 ; '$'
0000000000006c8d         db  0x0c ; '.'
0000000000006c8e         db  0x00 ; '.'
0000000000006c8f         db  0x00 ; '.'
0000000000006c90         db  0x44 ; 'D'
0000000000006c91         db  0xeb ; '.'
0000000000006c92         db  0xff ; '.'
0000000000006c93         db  0xff ; '.'
0000000000006c94         db  0x74 ; 't'
0000000000006c95         db  0x0c ; '.'
0000000000006c96         db  0x00 ; '.'
0000000000006c97         db  0x00 ; '.'
0000000000006c98         db  0xa4 ; '.'
0000000000006c99         db  0xeb ; '.'
0000000000006c9a         db  0xff ; '.'
0000000000006c9b         db  0xff ; '.'
0000000000006c9c         db  0x94 ; '.'
0000000000006c9d         db  0x0c ; '.'
0000000000006c9e         db  0x00 ; '.'
0000000000006c9f         db  0x00 ; '.'
0000000000006ca0         db  0xe4 ; '.'
0000000000006ca1         db  0xeb ; '.'
0000000000006ca2         db  0xff ; '.'
0000000000006ca3         db  0xff ; '.'
0000000000006ca4         db  0xb4 ; '.'
0000000000006ca5         db  0x0c ; '.'
0000000000006ca6         db  0x00 ; '.'
0000000000006ca7         db  0x00 ; '.'
0000000000006ca8         db  0x64 ; 'd'
0000000000006ca9         db  0xec ; '.'
0000000000006caa         db  0xff ; '.'
0000000000006cab         db  0xff ; '.'
0000000000006cac         db  0xec ; '.'
0000000000006cad         db  0x0c ; '.'
0000000000006cae         db  0x00 ; '.'
0000000000006caf         db  0x00 ; '.'
0000000000006cb0         db  0xa4 ; '.'
0000000000006cb1         db  0xec ; '.'
0000000000006cb2         db  0xff ; '.'
0000000000006cb3         db  0xff ; '.'
0000000000006cb4         db  0x0c ; '.'
0000000000006cb5         db  0x0d ; '.'
0000000000006cb6         db  0x00 ; '.'
0000000000006cb7         db  0x00 ; '.'
0000000000006cb8         db  0x04 ; '.'
0000000000006cb9         db  0xed ; '.'
0000000000006cba         db  0xff ; '.'
0000000000006cbb         db  0xff ; '.'
0000000000006cbc         db  0x3c ; '<'
0000000000006cbd         db  0x0d ; '.'
0000000000006cbe         db  0x00 ; '.'
0000000000006cbf         db  0x00 ; '.'
0000000000006cc0         db  0x74 ; 't'
0000000000006cc1         db  0xed ; '.'
0000000000006cc2         db  0xff ; '.'
0000000000006cc3         db  0xff ; '.'
0000000000006cc4         db  0x84 ; '.'
0000000000006cc5         db  0x0d ; '.'
0000000000006cc6         db  0x00 ; '.'
0000000000006cc7         db  0x00 ; '.'
0000000000006cc8         db  0x84 ; '.'
0000000000006cc9         db  0xed ; '.'
0000000000006cca         db  0xff ; '.'
0000000000006ccb         db  0xff ; '.'
0000000000006ccc         db  0x9c ; '.'
0000000000006ccd         db  0x0d ; '.'
0000000000006cce         db  0x00 ; '.'
0000000000006ccf         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6cd0; 0x7830[ (2912 bytes)
        ; File offset : [27856; 30768[ (2912 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006cd0         dd         0x00000014                                  ; Length of the record
0000000000006cd4         dd         0x00000000                                  ; CIE ID
0000000000006cd8         db         0x01                                        ; Version
0000000000006cd9         db         "zR", 0                                     ; Augmentation String
0000000000006cdc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006cdd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006cde         db         0x10                                        ; Return address register
0000000000006cdf         db         0x01                                        ; Augmentation data length
0000000000006ce0         db         0x1b                                        ; FDE encoding
0000000000006ce1         db  0x0c ; '.'
0000000000006ce2         db  0x07 ; '.'
0000000000006ce3         db  0x08 ; '.'
0000000000006ce4         db  0x90 ; '.'
0000000000006ce5         db  0x01 ; '.'
0000000000006ce6         db  0x07 ; '.'
0000000000006ce7         db  0x10 ; '.'
0000000000006ce8         dd         0x00000014                                  ; Length of the record
0000000000006cec         dd         0x0000001c                                  ; FDE: parent CIE at 0x6cd0 (FDE encoding = 0x1B)
0000000000006cf0         db         0xd0, 0xb3, 2 dup (0xff)                    ; begin 0x20c0
0000000000006cf4         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x20eb)
0000000000006cf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cf9         align      256
0000000000006d00         dd         0x00000014                                  ; Length of the record
0000000000006d04         dd         0x00000000                                  ; CIE ID
0000000000006d08         db         0x01                                        ; Version
0000000000006d09         db         "zR", 0                                     ; Augmentation String
0000000000006d0c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006d0d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006d0e         db         0x10                                        ; Return address register
0000000000006d0f         db         0x01                                        ; Augmentation data length
0000000000006d10         db         0x1b                                        ; FDE encoding
0000000000006d11         db  0x0c ; '.'
0000000000006d12         db  0x07 ; '.'
0000000000006d13         db  0x08 ; '.'
0000000000006d14         db  0x90 ; '.'
0000000000006d15         db  0x01 ; '.'
0000000000006d16         db  0x00 ; '.'
0000000000006d17         db  0x00 ; '.'
0000000000006d18         dd         0x00000024                                  ; Length of the record
0000000000006d1c         dd         0x0000001c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006d20         db         0xb0, 0xa6, 2 dup (0xff)                    ; begin 0x13d0
0000000000006d24         db         0x00, 0x03, 2 dup (0x00)                    ; length 0x300 (end at 0x16d0)
0000000000006d28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d29         db  0x0e ; '.'
0000000000006d2a         db  0x10 ; '.'
0000000000006d2b         db  0x46 ; 'F'
0000000000006d2c         db  0x0e ; '.'
0000000000006d2d         db  0x18 ; '.'
0000000000006d2e         db  0x4a ; 'J'
0000000000006d2f         db  0x0f ; '.'
0000000000006d30         db  0x0b ; '.'
0000000000006d31         db  0x77 ; 'w'
0000000000006d32         db  0x08 ; '.'
0000000000006d33         db  0x80 ; '.'
0000000000006d34         db  0x00 ; '.'
0000000000006d35         db  0x3f ; '?'
0000000000006d36         db  0x1a ; '.'
0000000000006d37         db  0x3b ; ';'
0000000000006d38         db  0x2a ; '*'
0000000000006d39         db  0x33 ; '3'
0000000000006d3a         db  0x24 ; '$'
0000000000006d3b         db  0x22 ; '"'
0000000000006d3c         db  0x00 ; '.'
0000000000006d3d         db  0x00 ; '.'
0000000000006d3e         db  0x00 ; '.'
0000000000006d3f         db  0x00 ; '.'
0000000000006d40         dd         0x00000014                                  ; Length of the record
0000000000006d44         dd         0x00000044                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006d48         db         0x88, 0xa9, 2 dup (0xff)                    ; begin 0x16d0
0000000000006d4c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x16d8)
0000000000006d50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d51         align      8
0000000000006d58         dd         0x00000028                                  ; Length of the record
0000000000006d5c         dd         0x0000005c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006d60         db         0x70, 0xb4, 2 dup (0xff)                    ; begin 0x21d0
0000000000006d64         db         0x1a, 0x04, 2 dup (0x00)                    ; length 0x41a (end at 0x25ea)
0000000000006d68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d69         db  0x42 ; 'B'
0000000000006d6a         db  0x0e ; '.'
0000000000006d6b         db  0x10 ; '.'
0000000000006d6c         db  0x8d ; '.'
0000000000006d6d         db  0x02 ; '.'
0000000000006d6e         db  0x42 ; 'B'
0000000000006d6f         db  0x0e ; '.'
0000000000006d70         db  0x18 ; '.'
0000000000006d71         db  0x8c ; '.'
0000000000006d72         db  0x03 ; '.'
0000000000006d73         db  0x46 ; 'F'
0000000000006d74         db  0x0e ; '.'
0000000000006d75         db  0x20 ; ' '
0000000000006d76         db  0x86 ; '.'
0000000000006d77         db  0x04 ; '.'
0000000000006d78         db  0x41 ; 'A'
0000000000006d79         db  0x0e ; '.'
0000000000006d7a         db  0x28 ; '('
0000000000006d7b         db  0x83 ; '.'
0000000000006d7c         db  0x05 ; '.'
0000000000006d7d         db  0x49 ; 'I'
0000000000006d7e         db  0x0e ; '.'
0000000000006d7f         db  0xb0 ; '.'
0000000000006d80         db  0x01 ; '.'
0000000000006d81         db  0x00 ; '.'
0000000000006d82         db  0x00 ; '.'
0000000000006d83         db  0x00 ; '.'
0000000000006d84         dd         0x00000050                                  ; Length of the record
0000000000006d88         dd         0x00000088                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006d8c         db         0x54, 0xa9, 2 dup (0xff)                    ; begin 0x16e0
0000000000006d90         db         0xd9, 0x09, 2 dup (0x00)                    ; length 0x9d9 (end at 0x20b9)
0000000000006d94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d95         db  0x42 ; 'B'
0000000000006d96         db  0x0e ; '.'
0000000000006d97         db  0x10 ; '.'
0000000000006d98         db  0x8f ; '.'
0000000000006d99         db  0x02 ; '.'
0000000000006d9a         db  0x42 ; 'B'
0000000000006d9b         db  0x0e ; '.'
0000000000006d9c         db  0x18 ; '.'
0000000000006d9d         db  0x8e ; '.'
0000000000006d9e         db  0x03 ; '.'
0000000000006d9f         db  0x42 ; 'B'
0000000000006da0         db  0x0e ; '.'
0000000000006da1         db  0x20 ; ' '
0000000000006da2         db  0x8d ; '.'
0000000000006da3         db  0x04 ; '.'
0000000000006da4         db  0x42 ; 'B'
0000000000006da5         db  0x0e ; '.'
0000000000006da6         db  0x28 ; '('
0000000000006da7         db  0x8c ; '.'
0000000000006da8         db  0x05 ; '.'
0000000000006da9         db  0x44 ; 'D'
0000000000006daa         db  0x0e ; '.'
0000000000006dab         db  0x30 ; '0'
0000000000006dac         db  0x86 ; '.'
0000000000006dad         db  0x06 ; '.'
0000000000006dae         db  0x41 ; 'A'
0000000000006daf         db  0x0e ; '.'
0000000000006db0         db  0x38 ; '8'
0000000000006db1         db  0x83 ; '.'
0000000000006db2         db  0x07 ; '.'
0000000000006db3         db  0x4f ; 'O'
0000000000006db4         db  0x0e ; '.'
0000000000006db5         db  0x90 ; '.'
0000000000006db6         db  0x02 ; '.'
0000000000006db7         db  0x03 ; '.'
0000000000006db8         db  0x5f ; '_'
0000000000006db9         db  0x07 ; '.'
0000000000006dba         db  0x0a ; '.'
0000000000006dbb         db  0x0e ; '.'
0000000000006dbc         db  0x38 ; '8'
0000000000006dbd         db  0x41 ; 'A'
0000000000006dbe         db  0x0e ; '.'
0000000000006dbf         db  0x30 ; '0'
0000000000006dc0         db  0x41 ; 'A'
0000000000006dc1         db  0x0e ; '.'
0000000000006dc2         db  0x28 ; '('
0000000000006dc3         db  0x42 ; 'B'
0000000000006dc4         db  0x0e ; '.'
0000000000006dc5         db  0x20 ; ' '
0000000000006dc6         db  0x42 ; 'B'
0000000000006dc7         db  0x0e ; '.'
0000000000006dc8         db  0x18 ; '.'
0000000000006dc9         db  0x42 ; 'B'
0000000000006dca         db  0x0e ; '.'
0000000000006dcb         db  0x10 ; '.'
0000000000006dcc         db  0x42 ; 'B'
0000000000006dcd         db  0x0e ; '.'
0000000000006dce         db  0x08 ; '.'
0000000000006dcf         db  0x41 ; 'A'
0000000000006dd0         db  0x0b ; '.'
0000000000006dd1         db  0x00 ; '.'
0000000000006dd2         db  0x00 ; '.'
0000000000006dd3         db  0x00 ; '.'
0000000000006dd4         db  0x00 ; '.'
0000000000006dd5         db  0x00 ; '.'
0000000000006dd6         db  0x00 ; '.'
0000000000006dd7         db  0x00 ; '.'
0000000000006dd8         dd         0x00000010                                  ; Length of the record
0000000000006ddc         dd         0x000000dc                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006de0         db         0x10, 0xb8, 2 dup (0xff)                    ; begin 0x25f0
0000000000006de4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x25f8)
0000000000006de8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006de9         align      4
0000000000006dec         dd         0x00000010                                  ; Length of the record
0000000000006df0         dd         0x000000f0                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006df4         db         0x0c, 0xb8, 2 dup (0xff)                    ; begin 0x2600
0000000000006df8         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2608)
0000000000006dfc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006dfd         align      512
0000000000006e00         dd         0x0000002c                                  ; Length of the record
0000000000006e04         dd         0x00000104                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006e08         db         0x08, 0xb8, 2 dup (0xff)                    ; begin 0x2610
0000000000006e0c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x26b4)
0000000000006e10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e11         db  0x41 ; 'A'
0000000000006e12         db  0x0e ; '.'
0000000000006e13         db  0x10 ; '.'
0000000000006e14         db  0x86 ; '.'
0000000000006e15         db  0x02 ; '.'
0000000000006e16         db  0x41 ; 'A'
0000000000006e17         db  0x0e ; '.'
0000000000006e18         db  0x18 ; '.'
0000000000006e19         db  0x83 ; '.'
0000000000006e1a         db  0x03 ; '.'
0000000000006e1b         db  0x44 ; 'D'
0000000000006e1c         db  0x0e ; '.'
0000000000006e1d         db  0x20 ; ' '
0000000000006e1e         db  0x7a ; 'z'
0000000000006e1f         db  0x0a ; '.'
0000000000006e20         db  0x0e ; '.'
0000000000006e21         db  0x18 ; '.'
0000000000006e22         db  0x41 ; 'A'
0000000000006e23         db  0x0e ; '.'
0000000000006e24         db  0x10 ; '.'
0000000000006e25         db  0x41 ; 'A'
0000000000006e26         db  0x0e ; '.'
0000000000006e27         db  0x08 ; '.'
0000000000006e28         db  0x41 ; 'A'
0000000000006e29         db  0x0b ; '.'
0000000000006e2a         db  0x00 ; '.'
0000000000006e2b         db  0x00 ; '.'
0000000000006e2c         db  0x00 ; '.'
0000000000006e2d         db  0x00 ; '.'
0000000000006e2e         db  0x00 ; '.'
0000000000006e2f         db  0x00 ; '.'
0000000000006e30         dd         0x0000001c                                  ; Length of the record
0000000000006e34         dd         0x00000134                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006e38         db         0x88, 0xb8, 2 dup (0xff)                    ; begin 0x26c0
0000000000006e3c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x275f)
0000000000006e40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e41         db  0x44 ; 'D'
0000000000006e42         db  0x0e ; '.'
0000000000006e43         db  0x10 ; '.'
0000000000006e44         db  0x83 ; '.'
0000000000006e45         db  0x02 ; '.'
0000000000006e46         db  0x02 ; '.'
0000000000006e47         db  0x78 ; 'x'
0000000000006e48         db  0x0a ; '.'
0000000000006e49         db  0x0e ; '.'
0000000000006e4a         db  0x08 ; '.'
0000000000006e4b         db  0x41 ; 'A'
0000000000006e4c         db  0x0b ; '.'
0000000000006e4d         db  0x00 ; '.'
0000000000006e4e         db  0x00 ; '.'
0000000000006e4f         db  0x00 ; '.'
0000000000006e50         dd         0x00000040                                  ; Length of the record
0000000000006e54         dd         0x00000154                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006e58         db         0x08, 0xb9, 2 dup (0xff)                    ; begin 0x2760
0000000000006e5c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2847)
0000000000006e60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e61         db  0x41 ; 'A'
0000000000006e62         db  0x0e ; '.'
0000000000006e63         db  0x10 ; '.'
0000000000006e64         db  0x86 ; '.'
0000000000006e65         db  0x02 ; '.'
0000000000006e66         db  0x41 ; 'A'
0000000000006e67         db  0x0e ; '.'
0000000000006e68         db  0x18 ; '.'
0000000000006e69         db  0x83 ; '.'
0000000000006e6a         db  0x03 ; '.'
0000000000006e6b         db  0x49 ; 'I'
0000000000006e6c         db  0x0e ; '.'
0000000000006e6d         db  0x20 ; ' '
0000000000006e6e         db  0x6e ; 'n'
0000000000006e6f         db  0x0a ; '.'
0000000000006e70         db  0x0e ; '.'
0000000000006e71         db  0x18 ; '.'
0000000000006e72         db  0x41 ; 'A'
0000000000006e73         db  0x0e ; '.'
0000000000006e74         db  0x10 ; '.'
0000000000006e75         db  0x41 ; 'A'
0000000000006e76         db  0x0e ; '.'
0000000000006e77         db  0x08 ; '.'
0000000000006e78         db  0x45 ; 'E'
0000000000006e79         db  0x0b ; '.'
0000000000006e7a         db  0x02 ; '.'
0000000000006e7b         db  0x4a ; 'J'
0000000000006e7c         db  0x0a ; '.'
0000000000006e7d         db  0x0e ; '.'
0000000000006e7e         db  0x18 ; '.'
0000000000006e7f         db  0x41 ; 'A'
0000000000006e80         db  0x0e ; '.'
0000000000006e81         db  0x10 ; '.'
0000000000006e82         db  0x41 ; 'A'
0000000000006e83         db  0x0e ; '.'
0000000000006e84         db  0x08 ; '.'
0000000000006e85         db  0x44 ; 'D'
0000000000006e86         db  0x0b ; '.'
0000000000006e87         db  0x02 ; '.'
0000000000006e88         db  0x54 ; 'T'
0000000000006e89         db  0x0e ; '.'
0000000000006e8a         db  0x18 ; '.'
0000000000006e8b         db  0x41 ; 'A'
0000000000006e8c         db  0x0e ; '.'
0000000000006e8d         db  0x10 ; '.'
0000000000006e8e         db  0x41 ; 'A'
0000000000006e8f         db  0x0e ; '.'
0000000000006e90         db  0x08 ; '.'
0000000000006e91         db  0x00 ; '.'
0000000000006e92         db  0x00 ; '.'
0000000000006e93         db  0x00 ; '.'
0000000000006e94         dd         0x00000074                                  ; Length of the record
0000000000006e98         dd         0x00000198                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006e9c         db         0xb4, 0xb9, 2 dup (0xff)                    ; begin 0x2850
0000000000006ea0         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3a84)
0000000000006ea4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ea5         db  0x42 ; 'B'
0000000000006ea6         db  0x0e ; '.'
0000000000006ea7         db  0x10 ; '.'
0000000000006ea8         db  0x8f ; '.'
0000000000006ea9         db  0x02 ; '.'
0000000000006eaa         db  0x42 ; 'B'
0000000000006eab         db  0x0e ; '.'
0000000000006eac         db  0x18 ; '.'
0000000000006ead         db  0x8e ; '.'
0000000000006eae         db  0x03 ; '.'
0000000000006eaf         db  0x45 ; 'E'
0000000000006eb0         db  0x0e ; '.'
0000000000006eb1         db  0x20 ; ' '
0000000000006eb2         db  0x8d ; '.'
0000000000006eb3         db  0x04 ; '.'
0000000000006eb4         db  0x42 ; 'B'
0000000000006eb5         db  0x0e ; '.'
0000000000006eb6         db  0x28 ; '('
0000000000006eb7         db  0x8c ; '.'
0000000000006eb8         db  0x05 ; '.'
0000000000006eb9         db  0x44 ; 'D'
0000000000006eba         db  0x0e ; '.'
0000000000006ebb         db  0x30 ; '0'
0000000000006ebc         db  0x86 ; '.'
0000000000006ebd         db  0x06 ; '.'
0000000000006ebe         db  0x41 ; 'A'
0000000000006ebf         db  0x0e ; '.'
0000000000006ec0         db  0x38 ; '8'
0000000000006ec1         db  0x83 ; '.'
0000000000006ec2         db  0x07 ; '.'
0000000000006ec3         db  0x53 ; 'S'
0000000000006ec4         db  0x0e ; '.'
0000000000006ec5         db  0xf0 ; '.'
0000000000006ec6         db  0x01 ; '.'
0000000000006ec7         db  0x03 ; '.'
0000000000006ec8         db  0x81 ; '.'
0000000000006ec9         db  0x0b ; '.'
0000000000006eca         db  0x0e ; '.'
0000000000006ecb         db  0xf8 ; '.'
0000000000006ecc         db  0x01 ; '.'
0000000000006ecd         db  0x4a ; 'J'
0000000000006ece         db  0x0e ; '.'
0000000000006ecf         db  0x80 ; '.'
0000000000006ed0         db  0x02 ; '.'
0000000000006ed1         db  0x44 ; 'D'
0000000000006ed2         db  0x0e ; '.'
0000000000006ed3         db  0x88 ; '.'
0000000000006ed4         db  0x02 ; '.'
0000000000006ed5         db  0x45 ; 'E'
0000000000006ed6         db  0x0e ; '.'
0000000000006ed7         db  0x90 ; '.'
0000000000006ed8         db  0x02 ; '.'
0000000000006ed9         db  0x5f ; '_'
0000000000006eda         db  0x0e ; '.'
0000000000006edb         db  0xf0 ; '.'
0000000000006edc         db  0x01 ; '.'
0000000000006edd         db  0x64 ; 'd'
0000000000006ede         db  0x0a ; '.'
0000000000006edf         db  0x0e ; '.'
0000000000006ee0         db  0x38 ; '8'
0000000000006ee1         db  0x41 ; 'A'
0000000000006ee2         db  0x0e ; '.'
0000000000006ee3         db  0x30 ; '0'
0000000000006ee4         db  0x41 ; 'A'
0000000000006ee5         db  0x0e ; '.'
0000000000006ee6         db  0x28 ; '('
0000000000006ee7         db  0x42 ; 'B'
0000000000006ee8         db  0x0e ; '.'
0000000000006ee9         db  0x20 ; ' '
0000000000006eea         db  0x42 ; 'B'
0000000000006eeb         db  0x0e ; '.'
0000000000006eec         db  0x18 ; '.'
0000000000006eed         db  0x42 ; 'B'
0000000000006eee         db  0x0e ; '.'
0000000000006eef         db  0x10 ; '.'
0000000000006ef0         db  0x42 ; 'B'
0000000000006ef1         db  0x0e ; '.'
0000000000006ef2         db  0x08 ; '.'
0000000000006ef3         db  0x44 ; 'D'
0000000000006ef4         db  0x0b ; '.'
0000000000006ef5         db  0x03 ; '.'
0000000000006ef6         db  0x99 ; '.'
0000000000006ef7         db  0x05 ; '.'
0000000000006ef8         db  0x0e ; '.'
0000000000006ef9         db  0xf8 ; '.'
0000000000006efa         db  0x01 ; '.'
0000000000006efb         db  0x4d ; 'M'
0000000000006efc         db  0x0e ; '.'
0000000000006efd         db  0x80 ; '.'
0000000000006efe         db  0x02 ; '.'
0000000000006eff         db  0x44 ; 'D'
0000000000006f00         db  0x0e ; '.'
0000000000006f01         db  0x88 ; '.'
0000000000006f02         db  0x02 ; '.'
0000000000006f03         db  0x47 ; 'G'
0000000000006f04         db  0x0e ; '.'
0000000000006f05         db  0x90 ; '.'
0000000000006f06         db  0x02 ; '.'
0000000000006f07         db  0x5b ; '['
0000000000006f08         db  0x0e ; '.'
0000000000006f09         db  0xf0 ; '.'
0000000000006f0a         db  0x01 ; '.'
0000000000006f0b         db  0x00 ; '.'
0000000000006f0c         dd         0x00000068                                  ; Length of the record
0000000000006f10         dd         0x00000210                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006f14         db         0x7c, 0xcb, 2 dup (0xff)                    ; begin 0x3a90
0000000000006f18         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x3c3b)
0000000000006f1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f1d         db  0x42 ; 'B'
0000000000006f1e         db  0x0e ; '.'
0000000000006f1f         db  0x10 ; '.'
0000000000006f20         db  0x8f ; '.'
0000000000006f21         db  0x02 ; '.'
0000000000006f22         db  0x42 ; 'B'
0000000000006f23         db  0x0e ; '.'
0000000000006f24         db  0x18 ; '.'
0000000000006f25         db  0x8e ; '.'
0000000000006f26         db  0x03 ; '.'
0000000000006f27         db  0x45 ; 'E'
0000000000006f28         db  0x0e ; '.'
0000000000006f29         db  0x20 ; ' '
0000000000006f2a         db  0x8d ; '.'
0000000000006f2b         db  0x04 ; '.'
0000000000006f2c         db  0x42 ; 'B'
0000000000006f2d         db  0x0e ; '.'
0000000000006f2e         db  0x28 ; '('
0000000000006f2f         db  0x8c ; '.'
0000000000006f30         db  0x05 ; '.'
0000000000006f31         db  0x44 ; 'D'
0000000000006f32         db  0x0e ; '.'
0000000000006f33         db  0x30 ; '0'
0000000000006f34         db  0x86 ; '.'
0000000000006f35         db  0x06 ; '.'
0000000000006f36         db  0x41 ; 'A'
0000000000006f37         db  0x0e ; '.'
0000000000006f38         db  0x38 ; '8'
0000000000006f39         db  0x83 ; '.'
0000000000006f3a         db  0x07 ; '.'
0000000000006f3b         db  0x47 ; 'G'
0000000000006f3c         db  0x0e ; '.'
0000000000006f3d         db  0x60 ; '`'
0000000000006f3e         db  0x02 ; '.'
0000000000006f3f         db  0x99 ; '.'
0000000000006f40         db  0x0e ; '.'
0000000000006f41         db  0x68 ; 'h'
0000000000006f42         db  0x5f ; '_'
0000000000006f43         db  0x0e ; '.'
0000000000006f44         db  0x70 ; 'p'
0000000000006f45         db  0x46 ; 'F'
0000000000006f46         db  0x0e ; '.'
0000000000006f47         db  0x78 ; 'x'
0000000000006f48         db  0x42 ; 'B'
0000000000006f49         db  0x0e ; '.'
0000000000006f4a         db  0x80 ; '.'
0000000000006f4b         db  0x01 ; '.'
0000000000006f4c         db  0x59 ; 'Y'
0000000000006f4d         db  0x0e ; '.'
0000000000006f4e         db  0x60 ; '`'
0000000000006f4f         db  0x02 ; '.'
0000000000006f50         db  0x40 ; '@'
0000000000006f51         db  0x0e ; '.'
0000000000006f52         db  0x68 ; 'h'
0000000000006f53         db  0x4b ; 'K'
0000000000006f54         db  0x0e ; '.'
0000000000006f55         db  0x70 ; 'p'
0000000000006f56         db  0x43 ; 'C'
0000000000006f57         db  0x0e ; '.'
0000000000006f58         db  0x78 ; 'x'
0000000000006f59         db  0x45 ; 'E'
0000000000006f5a         db  0x0e ; '.'
0000000000006f5b         db  0x80 ; '.'
0000000000006f5c         db  0x01 ; '.'
0000000000006f5d         db  0x5e ; '^'
0000000000006f5e         db  0x0e ; '.'
0000000000006f5f         db  0x60 ; '`'
0000000000006f60         db  0x4c ; 'L'
0000000000006f61         db  0x0a ; '.'
0000000000006f62         db  0x0e ; '.'
0000000000006f63         db  0x38 ; '8'
0000000000006f64         db  0x44 ; 'D'
0000000000006f65         db  0x0e ; '.'
0000000000006f66         db  0x30 ; '0'
0000000000006f67         db  0x41 ; 'A'
0000000000006f68         db  0x0e ; '.'
0000000000006f69         db  0x28 ; '('
0000000000006f6a         db  0x42 ; 'B'
0000000000006f6b         db  0x0e ; '.'
0000000000006f6c         db  0x20 ; ' '
0000000000006f6d         db  0x42 ; 'B'
0000000000006f6e         db  0x0e ; '.'
0000000000006f6f         db  0x18 ; '.'
0000000000006f70         db  0x42 ; 'B'
0000000000006f71         db  0x0e ; '.'
0000000000006f72         db  0x10 ; '.'
0000000000006f73         db  0x42 ; 'B'
0000000000006f74         db  0x0e ; '.'
0000000000006f75         db  0x08 ; '.'
0000000000006f76         db  0x46 ; 'F'
0000000000006f77         db  0x0b ; '.'
0000000000006f78         dd         0x00000028                                  ; Length of the record
0000000000006f7c         dd         0x0000027c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006f80         db         0xc0, 0xcc, 2 dup (0xff)                    ; begin 0x3c40
0000000000006f84         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x3c76)
0000000000006f88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f89         db  0x42 ; 'B'
0000000000006f8a         db  0x0e ; '.'
0000000000006f8b         db  0x10 ; '.'
0000000000006f8c         db  0x8c ; '.'
0000000000006f8d         db  0x02 ; '.'
0000000000006f8e         db  0x41 ; 'A'
0000000000006f8f         db  0x0e ; '.'
0000000000006f90         db  0x18 ; '.'
0000000000006f91         db  0x86 ; '.'
0000000000006f92         db  0x03 ; '.'
0000000000006f93         db  0x41 ; 'A'
0000000000006f94         db  0x0e ; '.'
0000000000006f95         db  0x20 ; ' '
0000000000006f96         db  0x83 ; '.'
0000000000006f97         db  0x04 ; '.'
0000000000006f98         db  0x6e ; 'n'
0000000000006f99         db  0x0e ; '.'
0000000000006f9a         db  0x18 ; '.'
0000000000006f9b         db  0x41 ; 'A'
0000000000006f9c         db  0x0e ; '.'
0000000000006f9d         db  0x10 ; '.'
0000000000006f9e         db  0x42 ; 'B'
0000000000006f9f         db  0x0e ; '.'
0000000000006fa0         db  0x08 ; '.'
0000000000006fa1         db  0x00 ; '.'
0000000000006fa2         db  0x00 ; '.'
0000000000006fa3         db  0x00 ; '.'
0000000000006fa4         dd         0x00000010                                  ; Length of the record
0000000000006fa8         dd         0x000002a8                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006fac         db         0xd4, 0xcc, 2 dup (0xff)                    ; begin 0x3c80
0000000000006fb0         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3c91)
0000000000006fb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fb5         align      8
0000000000006fb8         dd         0x00000010                                  ; Length of the record
0000000000006fbc         dd         0x000002bc                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006fc0         db         0xe0, 0xcc, 2 dup (0xff)                    ; begin 0x3ca0
0000000000006fc4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3cb1)
0000000000006fc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fc9         align      4
0000000000006fcc         dd         0x00000010                                  ; Length of the record
0000000000006fd0         dd         0x000002d0                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006fd4         db         0xec, 0xcc, 2 dup (0xff)                    ; begin 0x3cc0
0000000000006fd8         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x3cf5)
0000000000006fdc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fdd         align      32
0000000000006fe0         dd         0x00000010                                  ; Length of the record
0000000000006fe4         dd         0x000002e4                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006fe8         db         0x18, 0xcd, 2 dup (0xff)                    ; begin 0x3d00
0000000000006fec         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x3d15)
0000000000006ff0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ff1         align      4
0000000000006ff4         dd         0x00000010                                  ; Length of the record
0000000000006ff8         dd         0x000002f8                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000006ffc         db         0x24, 0xcd, 2 dup (0xff)                    ; begin 0x3d20
0000000000007000         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x3d50)
0000000000007004         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007005         db  0x6b ; 'k'
0000000000007006         db  0x0e ; '.'
0000000000007007         db  0x10 ; '.'
0000000000007008         dd         0x00000050                                  ; Length of the record
000000000000700c         dd         0x0000030c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007010         db         0x40, 0xcd, 2 dup (0xff)                    ; begin 0x3d50
0000000000007014         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x3dc4)
0000000000007018         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007019         db  0x42 ; 'B'
000000000000701a         db  0x0e ; '.'
000000000000701b         db  0x10 ; '.'
000000000000701c         db  0x8f ; '.'
000000000000701d         db  0x02 ; '.'
000000000000701e         db  0x42 ; 'B'
000000000000701f         db  0x0e ; '.'
0000000000007020         db  0x18 ; '.'
0000000000007021         db  0x8e ; '.'
0000000000007022         db  0x03 ; '.'
0000000000007023         db  0x49 ; 'I'
0000000000007024         db  0x0e ; '.'
0000000000007025         db  0x20 ; ' '
0000000000007026         db  0x8d ; '.'
0000000000007027         db  0x04 ; '.'
0000000000007028         db  0x42 ; 'B'
0000000000007029         db  0x0e ; '.'
000000000000702a         db  0x28 ; '('
000000000000702b         db  0x8c ; '.'
000000000000702c         db  0x05 ; '.'
000000000000702d         db  0x44 ; 'D'
000000000000702e         db  0x0e ; '.'
000000000000702f         db  0x30 ; '0'
0000000000007030         db  0x86 ; '.'
0000000000007031         db  0x06 ; '.'
0000000000007032         db  0x41 ; 'A'
0000000000007033         db  0x0e ; '.'
0000000000007034         db  0x38 ; '8'
0000000000007035         db  0x83 ; '.'
0000000000007036         db  0x07 ; '.'
0000000000007037         db  0x4d ; 'M'
0000000000007038         db  0x0e ; '.'
0000000000007039         db  0x50 ; 'P'
000000000000703a         db  0x5f ; '_'
000000000000703b         db  0x0e ; '.'
000000000000703c         db  0x58 ; 'X'
000000000000703d         db  0x47 ; 'G'
000000000000703e         db  0x0e ; '.'
000000000000703f         db  0x60 ; '`'
0000000000007040         db  0x46 ; 'F'
0000000000007041         db  0x0e ; '.'
0000000000007042         db  0x68 ; 'h'
0000000000007043         db  0x44 ; 'D'
0000000000007044         db  0x0e ; '.'
0000000000007045         db  0x70 ; 'p'
0000000000007046         db  0x58 ; 'X'
0000000000007047         db  0x0e ; '.'
0000000000007048         db  0x38 ; '8'
0000000000007049         db  0x41 ; 'A'
000000000000704a         db  0x0e ; '.'
000000000000704b         db  0x30 ; '0'
000000000000704c         db  0x41 ; 'A'
000000000000704d         db  0x0e ; '.'
000000000000704e         db  0x28 ; '('
000000000000704f         db  0x42 ; 'B'
0000000000007050         db  0x0e ; '.'
0000000000007051         db  0x20 ; ' '
0000000000007052         db  0x42 ; 'B'
0000000000007053         db  0x0e ; '.'
0000000000007054         db  0x18 ; '.'
0000000000007055         db  0x42 ; 'B'
0000000000007056         db  0x0e ; '.'
0000000000007057         db  0x10 ; '.'
0000000000007058         db  0x42 ; 'B'
0000000000007059         db  0x0e ; '.'
000000000000705a         db  0x08 ; '.'
000000000000705b         db  0x00 ; '.'
000000000000705c         dd         0x00000068                                  ; Length of the record
0000000000007060         dd         0x00000360                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007064         db         0x6c, 0xcd, 2 dup (0xff)                    ; begin 0x3dd0
0000000000007068         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x3eb3)
000000000000706c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000706d         db  0x42 ; 'B'
000000000000706e         db  0x0e ; '.'
000000000000706f         db  0x10 ; '.'
0000000000007070         db  0x8f ; '.'
0000000000007071         db  0x02 ; '.'
0000000000007072         db  0x42 ; 'B'
0000000000007073         db  0x0e ; '.'
0000000000007074         db  0x18 ; '.'
0000000000007075         db  0x8e ; '.'
0000000000007076         db  0x03 ; '.'
0000000000007077         db  0x49 ; 'I'
0000000000007078         db  0x0e ; '.'
0000000000007079         db  0x20 ; ' '
000000000000707a         db  0x8d ; '.'
000000000000707b         db  0x04 ; '.'
000000000000707c         db  0x42 ; 'B'
000000000000707d         db  0x0e ; '.'
000000000000707e         db  0x28 ; '('
000000000000707f         db  0x8c ; '.'
0000000000007080         db  0x05 ; '.'
0000000000007081         db  0x44 ; 'D'
0000000000007082         db  0x0e ; '.'
0000000000007083         db  0x30 ; '0'
0000000000007084         db  0x86 ; '.'
0000000000007085         db  0x06 ; '.'
0000000000007086         db  0x41 ; 'A'
0000000000007087         db  0x0e ; '.'
0000000000007088         db  0x38 ; '8'
0000000000007089         db  0x83 ; '.'
000000000000708a         db  0x07 ; '.'
000000000000708b         db  0x4d ; 'M'
000000000000708c         db  0x0e ; '.'
000000000000708d         db  0x70 ; 'p'
000000000000708e         db  0x65 ; 'e'
000000000000708f         db  0x0e ; '.'
0000000000007090         db  0x78 ; 'x'
0000000000007091         db  0x4d ; 'M'
0000000000007092         db  0x0e ; '.'
0000000000007093         db  0x80 ; '.'
0000000000007094         db  0x01 ; '.'
0000000000007095         db  0x46 ; 'F'
0000000000007096         db  0x0e ; '.'
0000000000007097         db  0x88 ; '.'
0000000000007098         db  0x01 ; '.'
0000000000007099         db  0x42 ; 'B'
000000000000709a         db  0x0e ; '.'
000000000000709b         db  0x90 ; '.'
000000000000709c         db  0x01 ; '.'
000000000000709d         db  0x5e ; '^'
000000000000709e         db  0x0e ; '.'
000000000000709f         db  0x70 ; 'p'
00000000000070a0         db  0x56 ; 'V'
00000000000070a1         db  0x0e ; '.'
00000000000070a2         db  0x78 ; 'x'
00000000000070a3         db  0x43 ; 'C'
00000000000070a4         db  0x0e ; '.'
00000000000070a5         db  0x80 ; '.'
00000000000070a6         db  0x01 ; '.'
00000000000070a7         db  0x43 ; 'C'
00000000000070a8         db  0x0e ; '.'
00000000000070a9         db  0x88 ; '.'
00000000000070aa         db  0x01 ; '.'
00000000000070ab         db  0x56 ; 'V'
00000000000070ac         db  0x0e ; '.'
00000000000070ad         db  0x90 ; '.'
00000000000070ae         db  0x01 ; '.'
00000000000070af         db  0x52 ; 'R'
00000000000070b0         db  0x0e ; '.'
00000000000070b1         db  0x70 ; 'p'
00000000000070b2         db  0x5b ; '['
00000000000070b3         db  0x0e ; '.'
00000000000070b4         db  0x38 ; '8'
00000000000070b5         db  0x41 ; 'A'
00000000000070b6         db  0x0e ; '.'
00000000000070b7         db  0x30 ; '0'
00000000000070b8         db  0x41 ; 'A'
00000000000070b9         db  0x0e ; '.'
00000000000070ba         db  0x28 ; '('
00000000000070bb         db  0x42 ; 'B'
00000000000070bc         db  0x0e ; '.'
00000000000070bd         db  0x20 ; ' '
00000000000070be         db  0x42 ; 'B'
00000000000070bf         db  0x0e ; '.'
00000000000070c0         db  0x18 ; '.'
00000000000070c1         db  0x42 ; 'B'
00000000000070c2         db  0x0e ; '.'
00000000000070c3         db  0x10 ; '.'
00000000000070c4         db  0x42 ; 'B'
00000000000070c5         db  0x0e ; '.'
00000000000070c6         db  0x08 ; '.'
00000000000070c7         db  0x00 ; '.'
00000000000070c8         dd         0x00000010                                  ; Length of the record
00000000000070cc         dd         0x000003cc                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000070d0         db         0xf0, 0xcd, 2 dup (0xff)                    ; begin 0x3ec0
00000000000070d4         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x3eca)
00000000000070d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070d9         align      4
00000000000070dc         dd         0x00000028                                  ; Length of the record
00000000000070e0         dd         0x000003e0                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000070e4         db         0xec, 0xcd, 2 dup (0xff)                    ; begin 0x3ed0
00000000000070e8         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x3f63)
00000000000070ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070ed         db  0x48 ; 'H'
00000000000070ee         db  0x0e ; '.'
00000000000070ef         db  0x10 ; '.'
00000000000070f0         db  0x8c ; '.'
00000000000070f1         db  0x02 ; '.'
00000000000070f2         db  0x48 ; 'H'
00000000000070f3         db  0x0e ; '.'
00000000000070f4         db  0x18 ; '.'
00000000000070f5         db  0x86 ; '.'
00000000000070f6         db  0x03 ; '.'
00000000000070f7         db  0x41 ; 'A'
00000000000070f8         db  0x0e ; '.'
00000000000070f9         db  0x20 ; ' '
00000000000070fa         db  0x83 ; '.'
00000000000070fb         db  0x04 ; '.'
00000000000070fc         db  0x02 ; '.'
00000000000070fd         db  0x74 ; 't'
00000000000070fe         db  0x0e ; '.'
00000000000070ff         db  0x18 ; '.'
0000000000007100         db  0x4b ; 'K'
0000000000007101         db  0x0e ; '.'
0000000000007102         db  0x10 ; '.'
0000000000007103         db  0x42 ; 'B'
0000000000007104         db  0x0e ; '.'
0000000000007105         db  0x08 ; '.'
0000000000007106         db  0x00 ; '.'
0000000000007107         db  0x00 ; '.'
0000000000007108         dd         0x00000010                                  ; Length of the record
000000000000710c         dd         0x0000040c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007110         db         0x60, 0xce, 2 dup (0xff)                    ; begin 0x3f70
0000000000007114         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x3f83)
0000000000007118         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007119         align      4
000000000000711c         dd         0x00000010                                  ; Length of the record
0000000000007120         dd         0x00000420                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007124         db         0x6c, 0xce, 2 dup (0xff)                    ; begin 0x3f90
0000000000007128         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x3f9c)
000000000000712c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000712d         align      16
0000000000007130         dd         0x00000010                                  ; Length of the record
0000000000007134         dd         0x00000434                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007138         db         0x68, 0xce, 2 dup (0xff)                    ; begin 0x3fa0
000000000000713c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x3fb8)
0000000000007140         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007141         align      4
0000000000007144         dd         0x00000010                                  ; Length of the record
0000000000007148         dd         0x00000448                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
000000000000714c         db         0x74, 0xce, 2 dup (0xff)                    ; begin 0x3fc0
0000000000007150         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x3fd4)
0000000000007154         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007155         align      8
0000000000007158         dd         0x00000018                                  ; Length of the record
000000000000715c         dd         0x0000045c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007160         db         0x80, 0xce, 2 dup (0xff)                    ; begin 0x3fe0
0000000000007164         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x406e)
0000000000007168         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007169         db  0x44 ; 'D'
000000000000716a         db  0x0e ; '.'
000000000000716b         db  0x50 ; 'P'
000000000000716c         db  0x02 ; '.'
000000000000716d         db  0x7f ; '.'
000000000000716e         db  0x0a ; '.'
000000000000716f         db  0x0e ; '.'
0000000000007170         db  0x08 ; '.'
0000000000007171         db  0x41 ; 'A'
0000000000007172         db  0x0b ; '.'
0000000000007173         db  0x00 ; '.'
0000000000007174         dd         0x00000018                                  ; Length of the record
0000000000007178         dd         0x00000478                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
000000000000717c         db         0xf4, 0xce, 2 dup (0xff)                    ; begin 0x4070
0000000000007180         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x40fa)
0000000000007184         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007185         db  0x44 ; 'D'
0000000000007186         db  0x0e ; '.'
0000000000007187         db  0x50 ; 'P'
0000000000007188         db  0x02 ; '.'
0000000000007189         db  0x7b ; '{'
000000000000718a         db  0x0a ; '.'
000000000000718b         db  0x0e ; '.'
000000000000718c         db  0x08 ; '.'
000000000000718d         db  0x41 ; 'A'
000000000000718e         db  0x0b ; '.'
000000000000718f         db  0x00 ; '.'
0000000000007190         dd         0x00000010                                  ; Length of the record
0000000000007194         dd         0x00000494                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007198         db         0x68, 0xcf, 2 dup (0xff)                    ; begin 0x4100
000000000000719c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x410c)
00000000000071a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071a1         align      4
00000000000071a4         dd         0x00000010                                  ; Length of the record
00000000000071a8         dd         0x000004a8                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000071ac         db         0x64, 0xcf, 2 dup (0xff)                    ; begin 0x4110
00000000000071b0         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x411f)
00000000000071b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071b5         align      8
00000000000071b8         dd         0x00000018                                  ; Length of the record
00000000000071bc         dd         0x000004bc                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000071c0         db         0x60, 0xcf, 2 dup (0xff)                    ; begin 0x4120
00000000000071c4         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x41b8)
00000000000071c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071c9         db  0x44 ; 'D'
00000000000071ca         db  0x0e ; '.'
00000000000071cb         db  0x50 ; 'P'
00000000000071cc         db  0x02 ; '.'
00000000000071cd         db  0x8e ; '.'
00000000000071ce         db  0x0a ; '.'
00000000000071cf         db  0x0e ; '.'
00000000000071d0         db  0x08 ; '.'
00000000000071d1         db  0x41 ; 'A'
00000000000071d2         db  0x0b ; '.'
00000000000071d3         db  0x00 ; '.'
00000000000071d4         dd         0x00000010                                  ; Length of the record
00000000000071d8         dd         0x000004d8                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000071dc         db         0xe4, 0xcf, 2 dup (0xff)                    ; begin 0x41c0
00000000000071e0         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x41d0)
00000000000071e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071e5         align      8
00000000000071e8         dd         0x00000010                                  ; Length of the record
00000000000071ec         dd         0x000004ec                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000071f0         db         0xe0, 0xcf, 2 dup (0xff)                    ; begin 0x41d0
00000000000071f4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x41e1)
00000000000071f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071f9         align      4
00000000000071fc         dd         0x00000010                                  ; Length of the record
0000000000007200         dd         0x00000500                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007204         db         0xec, 0xcf, 2 dup (0xff)                    ; begin 0x41f0
0000000000007208         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x41fa)
000000000000720c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000720d         align      16
0000000000007210         dd         0x00000018                                  ; Length of the record
0000000000007214         dd         0x00000514                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007218         db         0xe8, 0xcf, 2 dup (0xff)                    ; begin 0x4200
000000000000721c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x428e)
0000000000007220         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007221         db  0x44 ; 'D'
0000000000007222         db  0x0e ; '.'
0000000000007223         db  0x50 ; 'P'
0000000000007224         db  0x02 ; '.'
0000000000007225         db  0x7f ; '.'
0000000000007226         db  0x0a ; '.'
0000000000007227         db  0x0e ; '.'
0000000000007228         db  0x08 ; '.'
0000000000007229         db  0x41 ; 'A'
000000000000722a         db  0x0b ; '.'
000000000000722b         db  0x00 ; '.'
000000000000722c         dd         0x00000018                                  ; Length of the record
0000000000007230         dd         0x00000530                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007234         db         0x5c, 0xd0, 2 dup (0xff)                    ; begin 0x4290
0000000000007238         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4321)
000000000000723c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000723d         db  0x44 ; 'D'
000000000000723e         db  0x0e ; '.'
000000000000723f         db  0x50 ; 'P'
0000000000007240         db  0x02 ; '.'
0000000000007241         db  0x82 ; '.'
0000000000007242         db  0x0a ; '.'
0000000000007243         db  0x0e ; '.'
0000000000007244         db  0x08 ; '.'
0000000000007245         db  0x41 ; 'A'
0000000000007246         db  0x0b ; '.'
0000000000007247         db  0x00 ; '.'
0000000000007248         dd         0x00000010                                  ; Length of the record
000000000000724c         dd         0x0000054c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007250         db         0xe0, 0xd0, 2 dup (0xff)                    ; begin 0x4330
0000000000007254         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x433c)
0000000000007258         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007259         align      4
000000000000725c         dd         0x00000010                                  ; Length of the record
0000000000007260         dd         0x00000560                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007264         db         0xdc, 0xd0, 2 dup (0xff)                    ; begin 0x4340
0000000000007268         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4357)
000000000000726c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000726d         align      16
0000000000007270         dd         0x00000010                                  ; Length of the record
0000000000007274         dd         0x00000574                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007278         db         0xe8, 0xd0, 2 dup (0xff)                    ; begin 0x4360
000000000000727c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4373)
0000000000007280         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007281         align      4
0000000000007284         dd         0x00000010                                  ; Length of the record
0000000000007288         dd         0x00000588                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
000000000000728c         db         0xf4, 0xd0, 2 dup (0xff)                    ; begin 0x4380
0000000000007290         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x438c)
0000000000007294         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007295         align      8
0000000000007298         dd         0x00000010                                  ; Length of the record
000000000000729c         dd         0x0000059c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000072a0         db         0xf0, 0xd0, 2 dup (0xff)                    ; begin 0x4390
00000000000072a4         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x43a4)
00000000000072a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072a9         align      4
00000000000072ac         dd         0x00000010                                  ; Length of the record
00000000000072b0         dd         0x000005b0                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000072b4         db         0xfc, 0xd0, 2 dup (0xff)                    ; begin 0x43b0
00000000000072b8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x43c3)
00000000000072bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072bd         align      64
00000000000072c0         dd         0x00000014                                  ; Length of the record
00000000000072c4         dd         0x000005c4                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000072c8         db         0x08, 0xd1, 2 dup (0xff)                    ; begin 0x43d0
00000000000072cc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x43e8)
00000000000072d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072d1         align      8
00000000000072d8         dd         0x00000110                                  ; Length of the record
00000000000072dc         dd         0x000005dc                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000072e0         db         0x10, 0xd1, 2 dup (0xff)                    ; begin 0x43f0
00000000000072e4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4807)
00000000000072e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072e9         db  0x42 ; 'B'
00000000000072ea         db  0x0e ; '.'
00000000000072eb         db  0x10 ; '.'
00000000000072ec         db  0x8f ; '.'
00000000000072ed         db  0x02 ; '.'
00000000000072ee         db  0x42 ; 'B'
00000000000072ef         db  0x0e ; '.'
00000000000072f0         db  0x18 ; '.'
00000000000072f1         db  0x8e ; '.'
00000000000072f2         db  0x03 ; '.'
00000000000072f3         db  0x42 ; 'B'
00000000000072f4         db  0x0e ; '.'
00000000000072f5         db  0x20 ; ' '
00000000000072f6         db  0x8d ; '.'
00000000000072f7         db  0x04 ; '.'
00000000000072f8         db  0x42 ; 'B'
00000000000072f9         db  0x0e ; '.'
00000000000072fa         db  0x28 ; '('
00000000000072fb         db  0x8c ; '.'
00000000000072fc         db  0x05 ; '.'
00000000000072fd         db  0x44 ; 'D'
00000000000072fe         db  0x0e ; '.'
00000000000072ff         db  0x30 ; '0'
0000000000007300         db  0x86 ; '.'
0000000000007301         db  0x06 ; '.'
0000000000007302         db  0x41 ; 'A'
0000000000007303         db  0x0e ; '.'
0000000000007304         db  0x38 ; '8'
0000000000007305         db  0x83 ; '.'
0000000000007306         db  0x07 ; '.'
0000000000007307         db  0x4a ; 'J'
0000000000007308         db  0x0e ; '.'
0000000000007309         db  0x60 ; '`'
000000000000730a         db  0x02 ; '.'
000000000000730b         db  0xdd ; '.'
000000000000730c         db  0x0e ; '.'
000000000000730d         db  0x68 ; 'h'
000000000000730e         db  0x57 ; 'W'
000000000000730f         db  0x0e ; '.'
0000000000007310         db  0x70 ; 'p'
0000000000007311         db  0x42 ; 'B'
0000000000007312         db  0x0e ; '.'
0000000000007313         db  0x78 ; 'x'
0000000000007314         db  0x42 ; 'B'
0000000000007315         db  0x0e ; '.'
0000000000007316         db  0x80 ; '.'
0000000000007317         db  0x01 ; '.'
0000000000007318         db  0x42 ; 'B'
0000000000007319         db  0x0e ; '.'
000000000000731a         db  0x88 ; '.'
000000000000731b         db  0x01 ; '.'
000000000000731c         db  0x42 ; 'B'
000000000000731d         db  0x0e ; '.'
000000000000731e         db  0x90 ; '.'
000000000000731f         db  0x01 ; '.'
0000000000007320         db  0x53 ; 'S'
0000000000007321         db  0x0e ; '.'
0000000000007322         db  0x60 ; '`'
0000000000007323         db  0x44 ; 'D'
0000000000007324         db  0x0a ; '.'
0000000000007325         db  0x0e ; '.'
0000000000007326         db  0x38 ; '8'
0000000000007327         db  0x41 ; 'A'
0000000000007328         db  0x0e ; '.'
0000000000007329         db  0x30 ; '0'
000000000000732a         db  0x41 ; 'A'
000000000000732b         db  0x0e ; '.'
000000000000732c         db  0x28 ; '('
000000000000732d         db  0x42 ; 'B'
000000000000732e         db  0x0e ; '.'
000000000000732f         db  0x20 ; ' '
0000000000007330         db  0x42 ; 'B'
0000000000007331         db  0x0e ; '.'
0000000000007332         db  0x18 ; '.'
0000000000007333         db  0x42 ; 'B'
0000000000007334         db  0x0e ; '.'
0000000000007335         db  0x10 ; '.'
0000000000007336         db  0x42 ; 'B'
0000000000007337         db  0x0e ; '.'
0000000000007338         db  0x08 ; '.'
0000000000007339         db  0x44 ; 'D'
000000000000733a         db  0x0b ; '.'
000000000000733b         db  0x02 ; '.'
000000000000733c         db  0x78 ; 'x'
000000000000733d         db  0x0a ; '.'
000000000000733e         db  0x0e ; '.'
000000000000733f         db  0x68 ; 'h'
0000000000007340         db  0x48 ; 'H'
0000000000007341         db  0x0b ; '.'
0000000000007342         db  0x5a ; 'Z'
0000000000007343         db  0x0a ; '.'
0000000000007344         db  0x0e ; '.'
0000000000007345         db  0x38 ; '8'
0000000000007346         db  0x47 ; 'G'
0000000000007347         db  0x0e ; '.'
0000000000007348         db  0x30 ; '0'
0000000000007349         db  0x41 ; 'A'
000000000000734a         db  0x0e ; '.'
000000000000734b         db  0x28 ; '('
000000000000734c         db  0x42 ; 'B'
000000000000734d         db  0x0e ; '.'
000000000000734e         db  0x20 ; ' '
000000000000734f         db  0x42 ; 'B'
0000000000007350         db  0x0e ; '.'
0000000000007351         db  0x18 ; '.'
0000000000007352         db  0x42 ; 'B'
0000000000007353         db  0x0e ; '.'
0000000000007354         db  0x10 ; '.'
0000000000007355         db  0x42 ; 'B'
0000000000007356         db  0x0e ; '.'
0000000000007357         db  0x08 ; '.'
0000000000007358         db  0x56 ; 'V'
0000000000007359         db  0x0b ; '.'
000000000000735a         db  0x5e ; '^'
000000000000735b         db  0x0a ; '.'
000000000000735c         db  0x0e ; '.'
000000000000735d         db  0x38 ; '8'
000000000000735e         db  0x52 ; 'R'
000000000000735f         db  0x0e ; '.'
0000000000007360         db  0x30 ; '0'
0000000000007361         db  0x41 ; 'A'
0000000000007362         db  0x0e ; '.'
0000000000007363         db  0x28 ; '('
0000000000007364         db  0x42 ; 'B'
0000000000007365         db  0x0e ; '.'
0000000000007366         db  0x20 ; ' '
0000000000007367         db  0x42 ; 'B'
0000000000007368         db  0x0e ; '.'
0000000000007369         db  0x18 ; '.'
000000000000736a         db  0x42 ; 'B'
000000000000736b         db  0x0e ; '.'
000000000000736c         db  0x10 ; '.'
000000000000736d         db  0x42 ; 'B'
000000000000736e         db  0x0e ; '.'
000000000000736f         db  0x08 ; '.'
0000000000007370         db  0x4f ; 'O'
0000000000007371         db  0x0b ; '.'
0000000000007372         db  0x62 ; 'b'
0000000000007373         db  0x0a ; '.'
0000000000007374         db  0x0e ; '.'
0000000000007375         db  0x38 ; '8'
0000000000007376         db  0x50 ; 'P'
0000000000007377         db  0x0e ; '.'
0000000000007378         db  0x30 ; '0'
0000000000007379         db  0x41 ; 'A'
000000000000737a         db  0x0e ; '.'
000000000000737b         db  0x28 ; '('
000000000000737c         db  0x42 ; 'B'
000000000000737d         db  0x0e ; '.'
000000000000737e         db  0x20 ; ' '
000000000000737f         db  0x42 ; 'B'
0000000000007380         db  0x0e ; '.'
0000000000007381         db  0x18 ; '.'
0000000000007382         db  0x42 ; 'B'
0000000000007383         db  0x0e ; '.'
0000000000007384         db  0x10 ; '.'
0000000000007385         db  0x42 ; 'B'
0000000000007386         db  0x0e ; '.'
0000000000007387         db  0x08 ; '.'
0000000000007388         db  0x55 ; 'U'
0000000000007389         db  0x0b ; '.'
000000000000738a         db  0x66 ; 'f'
000000000000738b         db  0x0e ; '.'
000000000000738c         db  0x68 ; 'h'
000000000000738d         db  0x42 ; 'B'
000000000000738e         db  0x0e ; '.'
000000000000738f         db  0x70 ; 'p'
0000000000007390         db  0x5c ; '\'
0000000000007391         db  0x0e ; '.'
0000000000007392         db  0x68 ; 'h'
0000000000007393         db  0x41 ; 'A'
0000000000007394         db  0x0e ; '.'
0000000000007395         db  0x60 ; '`'
0000000000007396         db  0x44 ; 'D'
0000000000007397         db  0x0a ; '.'
0000000000007398         db  0x0e ; '.'
0000000000007399         db  0x38 ; '8'
000000000000739a         db  0x41 ; 'A'
000000000000739b         db  0x0e ; '.'
000000000000739c         db  0x30 ; '0'
000000000000739d         db  0x41 ; 'A'
000000000000739e         db  0x0e ; '.'
000000000000739f         db  0x28 ; '('
00000000000073a0         db  0x42 ; 'B'
00000000000073a1         db  0x0e ; '.'
00000000000073a2         db  0x20 ; ' '
00000000000073a3         db  0x42 ; 'B'
00000000000073a4         db  0x0e ; '.'
00000000000073a5         db  0x18 ; '.'
00000000000073a6         db  0x42 ; 'B'
00000000000073a7         db  0x0e ; '.'
00000000000073a8         db  0x10 ; '.'
00000000000073a9         db  0x42 ; 'B'
00000000000073aa         db  0x0e ; '.'
00000000000073ab         db  0x08 ; '.'
00000000000073ac         db  0x45 ; 'E'
00000000000073ad         db  0x0b ; '.'
00000000000073ae         db  0x68 ; 'h'
00000000000073af         db  0x0a ; '.'
00000000000073b0         db  0x0e ; '.'
00000000000073b1         db  0x68 ; 'h'
00000000000073b2         db  0x48 ; 'H'
00000000000073b3         db  0x0b ; '.'
00000000000073b4         db  0x72 ; 'r'
00000000000073b5         db  0x0e ; '.'
00000000000073b6         db  0x68 ; 'h'
00000000000073b7         db  0x45 ; 'E'
00000000000073b8         db  0x0e ; '.'
00000000000073b9         db  0x70 ; 'p'
00000000000073ba         db  0x42 ; 'B'
00000000000073bb         db  0x0e ; '.'
00000000000073bc         db  0x78 ; 'x'
00000000000073bd         db  0x42 ; 'B'
00000000000073be         db  0x0e ; '.'
00000000000073bf         db  0x80 ; '.'
00000000000073c0         db  0x01 ; '.'
00000000000073c1         db  0x5e ; '^'
00000000000073c2         db  0x0e ; '.'
00000000000073c3         db  0x60 ; '`'
00000000000073c4         db  0x44 ; 'D'
00000000000073c5         db  0x0a ; '.'
00000000000073c6         db  0x0e ; '.'
00000000000073c7         db  0x38 ; '8'
00000000000073c8         db  0x41 ; 'A'
00000000000073c9         db  0x0e ; '.'
00000000000073ca         db  0x30 ; '0'
00000000000073cb         db  0x41 ; 'A'
00000000000073cc         db  0x0e ; '.'
00000000000073cd         db  0x28 ; '('
00000000000073ce         db  0x42 ; 'B'
00000000000073cf         db  0x0e ; '.'
00000000000073d0         db  0x20 ; ' '
00000000000073d1         db  0x42 ; 'B'
00000000000073d2         db  0x0e ; '.'
00000000000073d3         db  0x18 ; '.'
00000000000073d4         db  0x42 ; 'B'
00000000000073d5         db  0x0e ; '.'
00000000000073d6         db  0x10 ; '.'
00000000000073d7         db  0x42 ; 'B'
00000000000073d8         db  0x0e ; '.'
00000000000073d9         db  0x08 ; '.'
00000000000073da         db  0x41 ; 'A'
00000000000073db         db  0x0b ; '.'
00000000000073dc         db  0x79 ; 'y'
00000000000073dd         db  0x0a ; '.'
00000000000073de         db  0x0e ; '.'
00000000000073df         db  0x68 ; 'h'
00000000000073e0         db  0x42 ; 'B'
00000000000073e1         db  0x0e ; '.'
00000000000073e2         db  0x70 ; 'p'
00000000000073e3         db  0x42 ; 'B'
00000000000073e4         db  0x0e ; '.'
00000000000073e5         db  0x78 ; 'x'
00000000000073e6         db  0x42 ; 'B'
00000000000073e7         db  0x0e ; '.'
00000000000073e8         db  0x80 ; '.'
00000000000073e9         db  0x01 ; '.'
00000000000073ea         db  0x51 ; 'Q'
00000000000073eb         db  0x0b ; '.'
00000000000073ec         dd         0x00000010                                  ; Length of the record
00000000000073f0         dd         0x000006f0                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000073f4         db         0x1c, 0xd4, 2 dup (0xff)                    ; begin 0x4810
00000000000073f8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4830)
00000000000073fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073fd         align      1024
0000000000007400         dd         0x00000018                                  ; Length of the record
0000000000007404         dd         0x00000704                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007408         db         0x28, 0xd4, 2 dup (0xff)                    ; begin 0x4830
000000000000740c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x48a8)
0000000000007410         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007411         db  0x44 ; 'D'
0000000000007412         db  0x0e ; '.'
0000000000007413         db  0x70 ; 'p'
0000000000007414         db  0x02 ; '.'
0000000000007415         db  0x60 ; '`'
0000000000007416         db  0x0a ; '.'
0000000000007417         db  0x0e ; '.'
0000000000007418         db  0x08 ; '.'
0000000000007419         db  0x41 ; 'A'
000000000000741a         db  0x0b ; '.'
000000000000741b         db  0x00 ; '.'
000000000000741c         dd         0x00000028                                  ; Length of the record
0000000000007420         dd         0x00000720                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007424         db         0x8c, 0xd4, 2 dup (0xff)                    ; begin 0x48b0
0000000000007428         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4985)
000000000000742c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000742d         db  0x41 ; 'A'
000000000000742e         db  0x0e ; '.'
000000000000742f         db  0x10 ; '.'
0000000000007430         db  0x86 ; '.'
0000000000007431         db  0x02 ; '.'
0000000000007432         db  0x41 ; 'A'
0000000000007433         db  0x0e ; '.'
0000000000007434         db  0x18 ; '.'
0000000000007435         db  0x83 ; '.'
0000000000007436         db  0x03 ; '.'
0000000000007437         db  0x50 ; 'P'
0000000000007438         db  0x0e ; '.'
0000000000007439         db  0xd0 ; '.'
000000000000743a         db  0x01 ; '.'
000000000000743b         db  0x02 ; '.'
000000000000743c         db  0xab ; '.'
000000000000743d         db  0x0a ; '.'
000000000000743e         db  0x0e ; '.'
000000000000743f         db  0x18 ; '.'
0000000000007440         db  0x41 ; 'A'
0000000000007441         db  0x0e ; '.'
0000000000007442         db  0x10 ; '.'
0000000000007443         db  0x41 ; 'A'
0000000000007444         db  0x0e ; '.'
0000000000007445         db  0x08 ; '.'
0000000000007446         db  0x41 ; 'A'
0000000000007447         db  0x0b ; '.'
0000000000007448         dd         0x0000001c                                  ; Length of the record
000000000000744c         dd         0x0000074c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007450         db         0x40, 0xd5, 2 dup (0xff)                    ; begin 0x4990
0000000000007454         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4a10)
0000000000007458         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007459         db  0x41 ; 'A'
000000000000745a         db  0x0e ; '.'
000000000000745b         db  0x10 ; '.'
000000000000745c         db  0x83 ; '.'
000000000000745d         db  0x02 ; '.'
000000000000745e         db  0x02 ; '.'
000000000000745f         db  0x7a ; 'z'
0000000000007460         db  0x0e ; '.'
0000000000007461         db  0x08 ; '.'
0000000000007462         db  0x00 ; '.'
0000000000007463         db  0x00 ; '.'
0000000000007464         db  0x00 ; '.'
0000000000007465         db  0x00 ; '.'
0000000000007466         db  0x00 ; '.'
0000000000007467         db  0x00 ; '.'
0000000000007468         dd         0x00000018                                  ; Length of the record
000000000000746c         dd         0x0000076c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007470         db         0xa0, 0xd5, 2 dup (0xff)                    ; begin 0x4a10
0000000000007474         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x4a2a)
0000000000007478         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007479         db  0x41 ; 'A'
000000000000747a         db  0x0e ; '.'
000000000000747b         db  0x10 ; '.'
000000000000747c         db  0x83 ; '.'
000000000000747d         db  0x02 ; '.'
000000000000747e         db  0x53 ; 'S'
000000000000747f         db  0x0a ; '.'
0000000000007480         db  0x0e ; '.'
0000000000007481         db  0x08 ; '.'
0000000000007482         db  0x41 ; 'A'
0000000000007483         db  0x0b ; '.'
0000000000007484         dd         0x00000010                                  ; Length of the record
0000000000007488         dd         0x00000788                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
000000000000748c         db         0xa4, 0xd5, 2 dup (0xff)                    ; begin 0x4a30
0000000000007490         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4a54)
0000000000007494         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007495         db  0x5f ; '_'
0000000000007496         db  0x0e ; '.'
0000000000007497         db  0x10 ; '.'
0000000000007498         dd         0x00000010                                  ; Length of the record
000000000000749c         dd         0x0000079c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000074a0         db         0xc0, 0xd5, 2 dup (0xff)                    ; begin 0x4a60
00000000000074a4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x4a62)
00000000000074a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074a9         align      4
00000000000074ac         dd         0x00000020                                  ; Length of the record
00000000000074b0         dd         0x000007b0                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000074b4         db         0xbc, 0xd5, 2 dup (0xff)                    ; begin 0x4a70
00000000000074b8         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4aa6)
00000000000074bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074bd         db  0x44 ; 'D'
00000000000074be         db  0x0e ; '.'
00000000000074bf         db  0x10 ; '.'
00000000000074c0         db  0x83 ; '.'
00000000000074c1         db  0x02 ; '.'
00000000000074c2         db  0x5d ; ']'
00000000000074c3         db  0x0a ; '.'
00000000000074c4         db  0x0e ; '.'
00000000000074c5         db  0x08 ; '.'
00000000000074c6         db  0x47 ; 'G'
00000000000074c7         db  0x0b ; '.'
00000000000074c8         db  0x48 ; 'H'
00000000000074c9         db  0x0a ; '.'
00000000000074ca         db  0x0e ; '.'
00000000000074cb         db  0x08 ; '.'
00000000000074cc         db  0x41 ; 'A'
00000000000074cd         db  0x0b ; '.'
00000000000074ce         db  0x00 ; '.'
00000000000074cf         db  0x00 ; '.'
00000000000074d0         dd         0x00000010                                  ; Length of the record
00000000000074d4         dd         0x000007d4                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000074d8         db         0xd8, 0xd5, 2 dup (0xff)                    ; begin 0x4ab0
00000000000074dc         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4ad4)
00000000000074e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074e1         db  0x5f ; '_'
00000000000074e2         db  0x0e ; '.'
00000000000074e3         db  0x10 ; '.'
00000000000074e4         dd         0x00000014                                  ; Length of the record
00000000000074e8         dd         0x000007e8                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000074ec         db         0xf4, 0xd5, 2 dup (0xff)                    ; begin 0x4ae0
00000000000074f0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x4b62)
00000000000074f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074f5         db  0x02 ; '.'
00000000000074f6         db  0x5f ; '_'
00000000000074f7         db  0x0e ; '.'
00000000000074f8         db  0x10 ; '.'
00000000000074f9         db  0x49 ; 'I'
00000000000074fa         db  0x0e ; '.'
00000000000074fb         db  0x08 ; '.'
00000000000074fc         dd         0x00000014                                  ; Length of the record
0000000000007500         dd         0x00000800                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007504         db         0x6c, 0xd6, 2 dup (0xff)                    ; begin 0x4b70
0000000000007508         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x4bba)
000000000000750c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000750d         db  0x02 ; '.'
000000000000750e         db  0x45 ; 'E'
000000000000750f         db  0x0e ; '.'
0000000000007510         db  0x10 ; '.'
0000000000007511         db  0x00 ; '.'
0000000000007512         db  0x00 ; '.'
0000000000007513         db  0x00 ; '.'
0000000000007514         dd         0x00000018                                  ; Length of the record
0000000000007518         dd         0x00000818                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
000000000000751c         db         0xa4, 0xd6, 2 dup (0xff)                    ; begin 0x4bc0
0000000000007520         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4bd7)
0000000000007524         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007525         db  0x41 ; 'A'
0000000000007526         db  0x0e ; '.'
0000000000007527         db  0x10 ; '.'
0000000000007528         db  0x83 ; '.'
0000000000007529         db  0x02 ; '.'
000000000000752a         db  0x51 ; 'Q'
000000000000752b         db  0x0e ; '.'
000000000000752c         db  0x08 ; '.'
000000000000752d         db  0x00 ; '.'
000000000000752e         db  0x00 ; '.'
000000000000752f         db  0x00 ; '.'
0000000000007530         dd         0x00000018                                  ; Length of the record
0000000000007534         dd         0x00000834                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007538         db         0xa8, 0xd6, 2 dup (0xff)                    ; begin 0x4be0
000000000000753c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x4c0e)
0000000000007540         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007541         db  0x47 ; 'G'
0000000000007542         db  0x0e ; '.'
0000000000007543         db  0x10 ; '.'
0000000000007544         db  0x61 ; 'a'
0000000000007545         db  0x0a ; '.'
0000000000007546         db  0x0e ; '.'
0000000000007547         db  0x08 ; '.'
0000000000007548         db  0x41 ; 'A'
0000000000007549         db  0x0b ; '.'
000000000000754a         db  0x00 ; '.'
000000000000754b         db  0x00 ; '.'
000000000000754c         dd         0x00000024                                  ; Length of the record
0000000000007550         dd         0x00000850                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007554         db         0xbc, 0xd6, 2 dup (0xff)                    ; begin 0x4c10
0000000000007558         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x4c38)
000000000000755c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000755d         db  0x41 ; 'A'
000000000000755e         db  0x0e ; '.'
000000000000755f         db  0x10 ; '.'
0000000000007560         db  0x86 ; '.'
0000000000007561         db  0x02 ; '.'
0000000000007562         db  0x41 ; 'A'
0000000000007563         db  0x0e ; '.'
0000000000007564         db  0x18 ; '.'
0000000000007565         db  0x83 ; '.'
0000000000007566         db  0x03 ; '.'
0000000000007567         db  0x4d ; 'M'
0000000000007568         db  0x0e ; '.'
0000000000007569         db  0x20 ; ' '
000000000000756a         db  0x49 ; 'I'
000000000000756b         db  0x0e ; '.'
000000000000756c         db  0x18 ; '.'
000000000000756d         db  0x47 ; 'G'
000000000000756e         db  0x0e ; '.'
000000000000756f         db  0x10 ; '.'
0000000000007570         db  0x41 ; 'A'
0000000000007571         db  0x0e ; '.'
0000000000007572         db  0x08 ; '.'
0000000000007573         db  0x00 ; '.'
0000000000007574         dd         0x00000018                                  ; Length of the record
0000000000007578         dd         0x00000878                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
000000000000757c         db         0xc4, 0xd6, 2 dup (0xff)                    ; begin 0x4c40
0000000000007580         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4c53)
0000000000007584         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007585         db  0x41 ; 'A'
0000000000007586         db  0x0e ; '.'
0000000000007587         db  0x10 ; '.'
0000000000007588         db  0x83 ; '.'
0000000000007589         db  0x02 ; '.'
000000000000758a         db  0x50 ; 'P'
000000000000758b         db  0x0e ; '.'
000000000000758c         db  0x08 ; '.'
000000000000758d         db  0x00 ; '.'
000000000000758e         db  0x00 ; '.'
000000000000758f         db  0x00 ; '.'
0000000000007590         dd         0x00000014                                  ; Length of the record
0000000000007594         dd         0x00000894                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007598         db         0xc8, 0xd6, 2 dup (0xff)                    ; begin 0x4c60
000000000000759c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4c95)
00000000000075a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075a1         db  0x4b ; 'K'
00000000000075a2         db  0x0e ; '.'
00000000000075a3         db  0x10 ; '.'
00000000000075a4         db  0x00 ; '.'
00000000000075a5         db  0x00 ; '.'
00000000000075a6         db  0x00 ; '.'
00000000000075a7         db  0x00 ; '.'
00000000000075a8         dd         0x00000048                                  ; Length of the record
00000000000075ac         dd         0x000008ac                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000075b0         db         0xf0, 0xd6, 2 dup (0xff)                    ; begin 0x4ca0
00000000000075b4         db         0x11, 0x01, 2 dup (0x00)                    ; length 0x111 (end at 0x4db1)
00000000000075b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075b9         db  0x42 ; 'B'
00000000000075ba         db  0x0e ; '.'
00000000000075bb         db  0x10 ; '.'
00000000000075bc         db  0x8f ; '.'
00000000000075bd         db  0x02 ; '.'
00000000000075be         db  0x42 ; 'B'
00000000000075bf         db  0x0e ; '.'
00000000000075c0         db  0x18 ; '.'
00000000000075c1         db  0x8e ; '.'
00000000000075c2         db  0x03 ; '.'
00000000000075c3         db  0x45 ; 'E'
00000000000075c4         db  0x0e ; '.'
00000000000075c5         db  0x20 ; ' '
00000000000075c6         db  0x8d ; '.'
00000000000075c7         db  0x04 ; '.'
00000000000075c8         db  0x42 ; 'B'
00000000000075c9         db  0x0e ; '.'
00000000000075ca         db  0x28 ; '('
00000000000075cb         db  0x8c ; '.'
00000000000075cc         db  0x05 ; '.'
00000000000075cd         db  0x44 ; 'D'
00000000000075ce         db  0x0e ; '.'
00000000000075cf         db  0x30 ; '0'
00000000000075d0         db  0x86 ; '.'
00000000000075d1         db  0x06 ; '.'
00000000000075d2         db  0x41 ; 'A'
00000000000075d3         db  0x0e ; '.'
00000000000075d4         db  0x38 ; '8'
00000000000075d5         db  0x83 ; '.'
00000000000075d6         db  0x07 ; '.'
00000000000075d7         db  0x4e ; 'N'
00000000000075d8         db  0x0e ; '.'
00000000000075d9         db  0x50 ; 'P'
00000000000075da         db  0x02 ; '.'
00000000000075db         db  0x9f ; '.'
00000000000075dc         db  0x0a ; '.'
00000000000075dd         db  0x0e ; '.'
00000000000075de         db  0x38 ; '8'
00000000000075df         db  0x41 ; 'A'
00000000000075e0         db  0x0e ; '.'
00000000000075e1         db  0x30 ; '0'
00000000000075e2         db  0x41 ; 'A'
00000000000075e3         db  0x0e ; '.'
00000000000075e4         db  0x28 ; '('
00000000000075e5         db  0x42 ; 'B'
00000000000075e6         db  0x0e ; '.'
00000000000075e7         db  0x20 ; ' '
00000000000075e8         db  0x42 ; 'B'
00000000000075e9         db  0x0e ; '.'
00000000000075ea         db  0x18 ; '.'
00000000000075eb         db  0x42 ; 'B'
00000000000075ec         db  0x0e ; '.'
00000000000075ed         db  0x10 ; '.'
00000000000075ee         db  0x42 ; 'B'
00000000000075ef         db  0x0e ; '.'
00000000000075f0         db  0x08 ; '.'
00000000000075f1         db  0x49 ; 'I'
00000000000075f2         db  0x0b ; '.'
00000000000075f3         db  0x00 ; '.'
00000000000075f4         dd         0x00000018                                  ; Length of the record
00000000000075f8         dd         0x000008f8                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000075fc         db         0xc4, 0xd7, 2 dup (0xff)                    ; begin 0x4dc0
0000000000007600         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x4de1)
0000000000007604         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007605         db  0x44 ; 'D'
0000000000007606         db  0x0e ; '.'
0000000000007607         db  0x18 ; '.'
0000000000007608         db  0x42 ; 'B'
0000000000007609         db  0x0e ; '.'
000000000000760a         db  0x20 ; ' '
000000000000760b         db  0x5a ; 'Z'
000000000000760c         db  0x0e ; '.'
000000000000760d         db  0x08 ; '.'
000000000000760e         db  0x00 ; '.'
000000000000760f         db  0x00 ; '.'
0000000000007610         dd         0x0000004c                                  ; Length of the record
0000000000007614         dd         0x00000914                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007618         db         0xd8, 0xd7, 2 dup (0xff)                    ; begin 0x4df0
000000000000761c         db         0xb3, 0x06, 2 dup (0x00)                    ; length 0x6b3 (end at 0x54a3)
0000000000007620         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007621         db  0x42 ; 'B'
0000000000007622         db  0x0e ; '.'
0000000000007623         db  0x10 ; '.'
0000000000007624         db  0x8f ; '.'
0000000000007625         db  0x02 ; '.'
0000000000007626         db  0x42 ; 'B'
0000000000007627         db  0x0e ; '.'
0000000000007628         db  0x18 ; '.'
0000000000007629         db  0x8e ; '.'
000000000000762a         db  0x03 ; '.'
000000000000762b         db  0x42 ; 'B'
000000000000762c         db  0x0e ; '.'
000000000000762d         db  0x20 ; ' '
000000000000762e         db  0x8d ; '.'
000000000000762f         db  0x04 ; '.'
0000000000007630         db  0x42 ; 'B'
0000000000007631         db  0x0e ; '.'
0000000000007632         db  0x28 ; '('
0000000000007633         db  0x8c ; '.'
0000000000007634         db  0x05 ; '.'
0000000000007635         db  0x41 ; 'A'
0000000000007636         db  0x0e ; '.'
0000000000007637         db  0x30 ; '0'
0000000000007638         db  0x86 ; '.'
0000000000007639         db  0x06 ; '.'
000000000000763a         db  0x41 ; 'A'
000000000000763b         db  0x0e ; '.'
000000000000763c         db  0x38 ; '8'
000000000000763d         db  0x83 ; '.'
000000000000763e         db  0x07 ; '.'
000000000000763f         db  0x44 ; 'D'
0000000000007640         db  0x0e ; '.'
0000000000007641         db  0x60 ; '`'
0000000000007642         db  0x02 ; '.'
0000000000007643         db  0x96 ; '.'
0000000000007644         db  0x0a ; '.'
0000000000007645         db  0x0e ; '.'
0000000000007646         db  0x38 ; '8'
0000000000007647         db  0x41 ; 'A'
0000000000007648         db  0x0e ; '.'
0000000000007649         db  0x30 ; '0'
000000000000764a         db  0x41 ; 'A'
000000000000764b         db  0x0e ; '.'
000000000000764c         db  0x28 ; '('
000000000000764d         db  0x42 ; 'B'
000000000000764e         db  0x0e ; '.'
000000000000764f         db  0x20 ; ' '
0000000000007650         db  0x42 ; 'B'
0000000000007651         db  0x0e ; '.'
0000000000007652         db  0x18 ; '.'
0000000000007653         db  0x42 ; 'B'
0000000000007654         db  0x0e ; '.'
0000000000007655         db  0x10 ; '.'
0000000000007656         db  0x42 ; 'B'
0000000000007657         db  0x0e ; '.'
0000000000007658         db  0x08 ; '.'
0000000000007659         db  0x42 ; 'B'
000000000000765a         db  0x0b ; '.'
000000000000765b         db  0x00 ; '.'
000000000000765c         db  0x00 ; '.'
000000000000765d         db  0x00 ; '.'
000000000000765e         db  0x00 ; '.'
000000000000765f         db  0x00 ; '.'
0000000000007660         dd         0x0000003c                                  ; Length of the record
0000000000007664         dd         0x00000964                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007668         db         0x48, 0xde, 2 dup (0xff)                    ; begin 0x54b0
000000000000766c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5533)
0000000000007670         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007671         db  0x42 ; 'B'
0000000000007672         db  0x0e ; '.'
0000000000007673         db  0x10 ; '.'
0000000000007674         db  0x8d ; '.'
0000000000007675         db  0x02 ; '.'
0000000000007676         db  0x42 ; 'B'
0000000000007677         db  0x0e ; '.'
0000000000007678         db  0x18 ; '.'
0000000000007679         db  0x8c ; '.'
000000000000767a         db  0x03 ; '.'
000000000000767b         db  0x44 ; 'D'
000000000000767c         db  0x0e ; '.'
000000000000767d         db  0x20 ; ' '
000000000000767e         db  0x86 ; '.'
000000000000767f         db  0x04 ; '.'
0000000000007680         db  0x41 ; 'A'
0000000000007681         db  0x0e ; '.'
0000000000007682         db  0x28 ; '('
0000000000007683         db  0x83 ; '.'
0000000000007684         db  0x05 ; '.'
0000000000007685         db  0x4a ; 'J'
0000000000007686         db  0x0e ; '.'
0000000000007687         db  0x40 ; '@'
0000000000007688         db  0x02 ; '.'
0000000000007689         db  0x64 ; 'd'
000000000000768a         db  0x0a ; '.'
000000000000768b         db  0x0e ; '.'
000000000000768c         db  0x28 ; '('
000000000000768d         db  0x41 ; 'A'
000000000000768e         db  0x0e ; '.'
000000000000768f         db  0x20 ; ' '
0000000000007690         db  0x41 ; 'A'
0000000000007691         db  0x0e ; '.'
0000000000007692         db  0x18 ; '.'
0000000000007693         db  0x42 ; 'B'
0000000000007694         db  0x0e ; '.'
0000000000007695         db  0x10 ; '.'
0000000000007696         db  0x42 ; 'B'
0000000000007697         db  0x0e ; '.'
0000000000007698         db  0x08 ; '.'
0000000000007699         db  0x41 ; 'A'
000000000000769a         db  0x0b ; '.'
000000000000769b         db  0x00 ; '.'
000000000000769c         db  0x00 ; '.'
000000000000769d         db  0x00 ; '.'
000000000000769e         db  0x00 ; '.'
000000000000769f         db  0x00 ; '.'
00000000000076a0         dd         0x0000004c                                  ; Length of the record
00000000000076a4         dd         0x000009a4                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000076a8         db         0x98, 0xde, 2 dup (0xff)                    ; begin 0x5540
00000000000076ac         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x55bd)
00000000000076b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076b1         db  0x42 ; 'B'
00000000000076b2         db  0x0e ; '.'
00000000000076b3         db  0x10 ; '.'
00000000000076b4         db  0x8c ; '.'
00000000000076b5         db  0x02 ; '.'
00000000000076b6         db  0x41 ; 'A'
00000000000076b7         db  0x0e ; '.'
00000000000076b8         db  0x18 ; '.'
00000000000076b9         db  0x86 ; '.'
00000000000076ba         db  0x03 ; '.'
00000000000076bb         db  0x44 ; 'D'
00000000000076bc         db  0x0e ; '.'
00000000000076bd         db  0x20 ; ' '
00000000000076be         db  0x83 ; '.'
00000000000076bf         db  0x04 ; '.'
00000000000076c0         db  0x69 ; 'i'
00000000000076c1         db  0x0a ; '.'
00000000000076c2         db  0x0e ; '.'
00000000000076c3         db  0x18 ; '.'
00000000000076c4         db  0x41 ; 'A'
00000000000076c5         db  0x0e ; '.'
00000000000076c6         db  0x10 ; '.'
00000000000076c7         db  0x42 ; 'B'
00000000000076c8         db  0x0e ; '.'
00000000000076c9         db  0x08 ; '.'
00000000000076ca         db  0x45 ; 'E'
00000000000076cb         db  0x0b ; '.'
00000000000076cc         db  0x55 ; 'U'
00000000000076cd         db  0x0a ; '.'
00000000000076ce         db  0x0e ; '.'
00000000000076cf         db  0x18 ; '.'
00000000000076d0         db  0x41 ; 'A'
00000000000076d1         db  0x0e ; '.'
00000000000076d2         db  0x10 ; '.'
00000000000076d3         db  0x42 ; 'B'
00000000000076d4         db  0x0e ; '.'
00000000000076d5         db  0x08 ; '.'
00000000000076d6         db  0x48 ; 'H'
00000000000076d7         db  0x0b ; '.'
00000000000076d8         db  0x41 ; 'A'
00000000000076d9         db  0x0a ; '.'
00000000000076da         db  0x0e ; '.'
00000000000076db         db  0x18 ; '.'
00000000000076dc         db  0x46 ; 'F'
00000000000076dd         db  0x0e ; '.'
00000000000076de         db  0x10 ; '.'
00000000000076df         db  0x42 ; 'B'
00000000000076e0         db  0x0e ; '.'
00000000000076e1         db  0x08 ; '.'
00000000000076e2         db  0x47 ; 'G'
00000000000076e3         db  0x0b ; '.'
00000000000076e4         db  0x49 ; 'I'
00000000000076e5         db  0x0e ; '.'
00000000000076e6         db  0x18 ; '.'
00000000000076e7         db  0x41 ; 'A'
00000000000076e8         db  0x0e ; '.'
00000000000076e9         db  0x10 ; '.'
00000000000076ea         db  0x42 ; 'B'
00000000000076eb         db  0x0e ; '.'
00000000000076ec         db  0x08 ; '.'
00000000000076ed         db  0x00 ; '.'
00000000000076ee         db  0x00 ; '.'
00000000000076ef         db  0x00 ; '.'
00000000000076f0         dd         0x0000001c                                  ; Length of the record
00000000000076f4         dd         0x000009f4                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000076f8         db         0xc8, 0xde, 2 dup (0xff)                    ; begin 0x55c0
00000000000076fc         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5620)
0000000000007700         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007701         db  0x44 ; 'D'
0000000000007702         db  0x0e ; '.'
0000000000007703         db  0x10 ; '.'
0000000000007704         db  0x75 ; 'u'
0000000000007705         db  0x0a ; '.'
0000000000007706         db  0x0e ; '.'
0000000000007707         db  0x08 ; '.'
0000000000007708         db  0x47 ; 'G'
0000000000007709         db  0x0b ; '.'
000000000000770a         db  0x5f ; '_'
000000000000770b         db  0x0e ; '.'
000000000000770c         db  0x08 ; '.'
000000000000770d         db  0x00 ; '.'
000000000000770e         db  0x00 ; '.'
000000000000770f         db  0x00 ; '.'
0000000000007710         dd         0x0000001c                                  ; Length of the record
0000000000007714         dd         0x00000a14                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007718         db         0x08, 0xdf, 2 dup (0xff)                    ; begin 0x5620
000000000000771c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x565c)
0000000000007720         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007721         db  0x44 ; 'D'
0000000000007722         db  0x0e ; '.'
0000000000007723         db  0x10 ; '.'
0000000000007724         db  0x61 ; 'a'
0000000000007725         db  0x0a ; '.'
0000000000007726         db  0x0e ; '.'
0000000000007727         db  0x08 ; '.'
0000000000007728         db  0x4b ; 'K'
0000000000007729         db  0x0b ; '.'
000000000000772a         db  0x4b ; 'K'
000000000000772b         db  0x0e ; '.'
000000000000772c         db  0x08 ; '.'
000000000000772d         db  0x00 ; '.'
000000000000772e         db  0x00 ; '.'
000000000000772f         db  0x00 ; '.'
0000000000007730         dd         0x00000034                                  ; Length of the record
0000000000007734         dd         0x00000a34                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007738         db         0x28, 0xdf, 2 dup (0xff)                    ; begin 0x5660
000000000000773c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x56db)
0000000000007740         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007741         db  0x42 ; 'B'
0000000000007742         db  0x0e ; '.'
0000000000007743         db  0x10 ; '.'
0000000000007744         db  0x8c ; '.'
0000000000007745         db  0x02 ; '.'
0000000000007746         db  0x41 ; 'A'
0000000000007747         db  0x0e ; '.'
0000000000007748         db  0x18 ; '.'
0000000000007749         db  0x86 ; '.'
000000000000774a         db  0x03 ; '.'
000000000000774b         db  0x41 ; 'A'
000000000000774c         db  0x0e ; '.'
000000000000774d         db  0x20 ; ' '
000000000000774e         db  0x83 ; '.'
000000000000774f         db  0x04 ; '.'
0000000000007750         db  0x7d ; '}'
0000000000007751         db  0x0a ; '.'
0000000000007752         db  0x0e ; '.'
0000000000007753         db  0x18 ; '.'
0000000000007754         db  0x41 ; 'A'
0000000000007755         db  0x0e ; '.'
0000000000007756         db  0x10 ; '.'
0000000000007757         db  0x42 ; 'B'
0000000000007758         db  0x0e ; '.'
0000000000007759         db  0x08 ; '.'
000000000000775a         db  0x44 ; 'D'
000000000000775b         db  0x0b ; '.'
000000000000775c         db  0x60 ; '`'
000000000000775d         db  0x0a ; '.'
000000000000775e         db  0x0e ; '.'
000000000000775f         db  0x18 ; '.'
0000000000007760         db  0x41 ; 'A'
0000000000007761         db  0x0e ; '.'
0000000000007762         db  0x10 ; '.'
0000000000007763         db  0x42 ; 'B'
0000000000007764         db  0x0e ; '.'
0000000000007765         db  0x08 ; '.'
0000000000007766         db  0x45 ; 'E'
0000000000007767         db  0x0b ; '.'
0000000000007768         dd         0x0000001c                                  ; Length of the record
000000000000776c         dd         0x00000a6c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007770         db         0x70, 0xdf, 2 dup (0xff)                    ; begin 0x56e0
0000000000007774         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5720)
0000000000007778         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007779         db  0x44 ; 'D'
000000000000777a         db  0x0e ; '.'
000000000000777b         db  0x10 ; '.'
000000000000777c         db  0x83 ; '.'
000000000000777d         db  0x02 ; '.'
000000000000777e         db  0x5a ; 'Z'
000000000000777f         db  0x0a ; '.'
0000000000007780         db  0x0e ; '.'
0000000000007781         db  0x08 ; '.'
0000000000007782         db  0x4a ; 'J'
0000000000007783         db  0x0b ; '.'
0000000000007784         db  0x53 ; 'S'
0000000000007785         db  0x0e ; '.'
0000000000007786         db  0x08 ; '.'
0000000000007787         db  0x00 ; '.'
0000000000007788         dd         0x0000002c                                  ; Length of the record
000000000000778c         dd         0x00000a8c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007790         db         0x90, 0xdf, 2 dup (0xff)                    ; begin 0x5720
0000000000007794         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x5777)
0000000000007798         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007799         db  0x63 ; 'c'
000000000000779a         db  0x0e ; '.'
000000000000779b         db  0x10 ; '.'
000000000000779c         db  0x8c ; '.'
000000000000779d         db  0x02 ; '.'
000000000000779e         db  0x41 ; 'A'
000000000000779f         db  0x0e ; '.'
00000000000077a0         db  0x18 ; '.'
00000000000077a1         db  0x86 ; '.'
00000000000077a2         db  0x03 ; '.'
00000000000077a3         db  0x44 ; 'D'
00000000000077a4         db  0x0e ; '.'
00000000000077a5         db  0x20 ; ' '
00000000000077a6         db  0x83 ; '.'
00000000000077a7         db  0x04 ; '.'
00000000000077a8         db  0x6b ; 'k'
00000000000077a9         db  0x0e ; '.'
00000000000077aa         db  0x18 ; '.'
00000000000077ab         db  0x41 ; 'A'
00000000000077ac         db  0x0e ; '.'
00000000000077ad         db  0x10 ; '.'
00000000000077ae         db  0x42 ; 'B'
00000000000077af         db  0x0e ; '.'
00000000000077b0         db  0x08 ; '.'
00000000000077b1         db  0x00 ; '.'
00000000000077b2         db  0x00 ; '.'
00000000000077b3         db  0x00 ; '.'
00000000000077b4         db  0x00 ; '.'
00000000000077b5         db  0x00 ; '.'
00000000000077b6         db  0x00 ; '.'
00000000000077b7         db  0x00 ; '.'
00000000000077b8         dd         0x00000044                                  ; Length of the record
00000000000077bc         dd         0x00000abc                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
00000000000077c0         db         0xc0, 0xdf, 2 dup (0xff)                    ; begin 0x5780
00000000000077c4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x57e5)
00000000000077c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077c9         db  0x42 ; 'B'
00000000000077ca         db  0x0e ; '.'
00000000000077cb         db  0x10 ; '.'
00000000000077cc         db  0x8f ; '.'
00000000000077cd         db  0x02 ; '.'
00000000000077ce         db  0x42 ; 'B'
00000000000077cf         db  0x0e ; '.'
00000000000077d0         db  0x18 ; '.'
00000000000077d1         db  0x8e ; '.'
00000000000077d2         db  0x03 ; '.'
00000000000077d3         db  0x45 ; 'E'
00000000000077d4         db  0x0e ; '.'
00000000000077d5         db  0x20 ; ' '
00000000000077d6         db  0x8d ; '.'
00000000000077d7         db  0x04 ; '.'
00000000000077d8         db  0x42 ; 'B'
00000000000077d9         db  0x0e ; '.'
00000000000077da         db  0x28 ; '('
00000000000077db         db  0x8c ; '.'
00000000000077dc         db  0x05 ; '.'
00000000000077dd         db  0x48 ; 'H'
00000000000077de         db  0x0e ; '.'
00000000000077df         db  0x30 ; '0'
00000000000077e0         db  0x86 ; '.'
00000000000077e1         db  0x06 ; '.'
00000000000077e2         db  0x48 ; 'H'
00000000000077e3         db  0x0e ; '.'
00000000000077e4         db  0x38 ; '8'
00000000000077e5         db  0x83 ; '.'
00000000000077e6         db  0x07 ; '.'
00000000000077e7         db  0x4d ; 'M'
00000000000077e8         db  0x0e ; '.'
00000000000077e9         db  0x40 ; '@'
00000000000077ea         db  0x72 ; 'r'
00000000000077eb         db  0x0e ; '.'
00000000000077ec         db  0x38 ; '8'
00000000000077ed         db  0x41 ; 'A'
00000000000077ee         db  0x0e ; '.'
00000000000077ef         db  0x30 ; '0'
00000000000077f0         db  0x41 ; 'A'
00000000000077f1         db  0x0e ; '.'
00000000000077f2         db  0x28 ; '('
00000000000077f3         db  0x42 ; 'B'
00000000000077f4         db  0x0e ; '.'
00000000000077f5         db  0x20 ; ' '
00000000000077f6         db  0x42 ; 'B'
00000000000077f7         db  0x0e ; '.'
00000000000077f8         db  0x18 ; '.'
00000000000077f9         db  0x42 ; 'B'
00000000000077fa         db  0x0e ; '.'
00000000000077fb         db  0x10 ; '.'
00000000000077fc         db  0x42 ; 'B'
00000000000077fd         db  0x0e ; '.'
00000000000077fe         db  0x08 ; '.'
00000000000077ff         db  0x00 ; '.'
0000000000007800         dd         0x00000014                                  ; Length of the record
0000000000007804         dd         0x00000b04                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007808         db         0xe8, 0xdf, 2 dup (0xff)                    ; begin 0x57f0
000000000000780c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x57f2)
0000000000007810         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007811         align      8
0000000000007818         dd         0x00000010                                  ; Length of the record
000000000000781c         dd         0x00000b1c                                  ; FDE: parent CIE at 0x6d00 (FDE encoding = 0x1B)
0000000000007820         db         0xe0, 0xdf, 2 dup (0xff)                    ; begin 0x5800
0000000000007824         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x580e)
0000000000007828         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007829         align      16


        ; Segment Segment 3
        ; Range: [0x207b10; 0x208238[ (1832 bytes)
        ; File offset : [31504; 32896[ (1392 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x207b10; 0x207b18[ (8 bytes)
        ; File offset : [31504; 31512[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000207b10         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x207b18; 0x207b20[ (8 bytes)
        ; File offset : [31512; 31520[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000207b18         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x207b20; 0x207c58[ (312 bytes)
        ; File offset : [31520; 31832[ (312 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000207b20         db  0xe3 ; '.'                                         ; DATA XREF=main+115
0000000000207b21         db  0x59 ; 'Y'
0000000000207b22         db  0x00 ; '.'
0000000000207b23         db  0x00 ; '.'
0000000000207b24         db  0x00 ; '.'
0000000000207b25         db  0x00 ; '.'
0000000000207b26         db  0x00 ; '.'
0000000000207b27         db  0x00 ; '.'
0000000000207b28         db  0x00 ; '.'
0000000000207b29         db  0x00 ; '.'
0000000000207b2a         db  0x00 ; '.'
0000000000207b2b         db  0x00 ; '.'
0000000000207b2c         db  0x00 ; '.'
0000000000207b2d         db  0x00 ; '.'
0000000000207b2e         db  0x00 ; '.'
0000000000207b2f         db  0x00 ; '.'
0000000000207b30         db  0x00 ; '.'
0000000000207b31         db  0x00 ; '.'
0000000000207b32         db  0x00 ; '.'
0000000000207b33         db  0x00 ; '.'
0000000000207b34         db  0x00 ; '.'
0000000000207b35         db  0x00 ; '.'
0000000000207b36         db  0x00 ; '.'
0000000000207b37         db  0x00 ; '.'
0000000000207b38         db  0x63 ; 'c'
0000000000207b39         db  0x00 ; '.'
0000000000207b3a         db  0x00 ; '.'
0000000000207b3b         db  0x00 ; '.'
0000000000207b3c         db  0x00 ; '.'
0000000000207b3d         db  0x00 ; '.'
0000000000207b3e         db  0x00 ; '.'
0000000000207b3f         db  0x00 ; '.'
0000000000207b40         db  0x5d ; ']'
0000000000207b41         db  0x59 ; 'Y'
0000000000207b42         db  0x00 ; '.'
0000000000207b43         db  0x00 ; '.'
0000000000207b44         db  0x00 ; '.'
0000000000207b45         db  0x00 ; '.'
0000000000207b46         db  0x00 ; '.'
0000000000207b47         db  0x00 ; '.'
0000000000207b48         db  0x00 ; '.'
0000000000207b49         db  0x00 ; '.'
0000000000207b4a         db  0x00 ; '.'
0000000000207b4b         db  0x00 ; '.'
0000000000207b4c         db  0x00 ; '.'
0000000000207b4d         db  0x00 ; '.'
0000000000207b4e         db  0x00 ; '.'
0000000000207b4f         db  0x00 ; '.'
0000000000207b50         db  0x00 ; '.'
0000000000207b51         db  0x00 ; '.'
0000000000207b52         db  0x00 ; '.'
0000000000207b53         db  0x00 ; '.'
0000000000207b54         db  0x00 ; '.'
0000000000207b55         db  0x00 ; '.'
0000000000207b56         db  0x00 ; '.'
0000000000207b57         db  0x00 ; '.'
0000000000207b58         db  0x6f ; 'o'
0000000000207b59         db  0x00 ; '.'
0000000000207b5a         db  0x00 ; '.'
0000000000207b5b         db  0x00 ; '.'
0000000000207b5c         db  0x00 ; '.'
0000000000207b5d         db  0x00 ; '.'
0000000000207b5e         db  0x00 ; '.'
0000000000207b5f         db  0x00 ; '.'
0000000000207b60         db  0x4a ; 'J'
0000000000207b61         db  0x59 ; 'Y'
0000000000207b62         db  0x00 ; '.'
0000000000207b63         db  0x00 ; '.'
0000000000207b64         db  0x00 ; '.'
0000000000207b65         db  0x00 ; '.'
0000000000207b66         db  0x00 ; '.'
0000000000207b67         db  0x00 ; '.'
0000000000207b68         db  0x01 ; '.'
0000000000207b69         db  0x00 ; '.'
0000000000207b6a         db  0x00 ; '.'
0000000000207b6b         db  0x00 ; '.'
0000000000207b6c         db  0x00 ; '.'
0000000000207b6d         db  0x00 ; '.'
0000000000207b6e         db  0x00 ; '.'
0000000000207b6f         db  0x00 ; '.'
0000000000207b70         db  0x00 ; '.'
0000000000207b71         db  0x00 ; '.'
0000000000207b72         db  0x00 ; '.'
0000000000207b73         db  0x00 ; '.'
0000000000207b74         db  0x00 ; '.'
0000000000207b75         db  0x00 ; '.'
0000000000207b76         db  0x00 ; '.'
0000000000207b77         db  0x00 ; '.'
0000000000207b78         db  0x72 ; 'r'
0000000000207b79         db  0x00 ; '.'
0000000000207b7a         db  0x00 ; '.'
0000000000207b7b         db  0x00 ; '.'
0000000000207b7c         db  0x00 ; '.'
0000000000207b7d         db  0x00 ; '.'
0000000000207b7e         db  0x00 ; '.'
0000000000207b7f         db  0x00 ; '.'
0000000000207b80         db  0x56 ; 'V'
0000000000207b81         db  0x59 ; 'Y'
0000000000207b82         db  0x00 ; '.'
0000000000207b83         db  0x00 ; '.'
0000000000207b84         db  0x00 ; '.'
0000000000207b85         db  0x00 ; '.'
0000000000207b86         db  0x00 ; '.'
0000000000207b87         db  0x00 ; '.'
0000000000207b88         db  0x01 ; '.'
0000000000207b89         db  0x00 ; '.'
0000000000207b8a         db  0x00 ; '.'
0000000000207b8b         db  0x00 ; '.'
0000000000207b8c         db  0x00 ; '.'
0000000000207b8d         db  0x00 ; '.'
0000000000207b8e         db  0x00 ; '.'
0000000000207b8f         db  0x00 ; '.'
0000000000207b90         db  0x00 ; '.'
0000000000207b91         db  0x00 ; '.'
0000000000207b92         db  0x00 ; '.'
0000000000207b93         db  0x00 ; '.'
0000000000207b94         db  0x00 ; '.'
0000000000207b95         db  0x00 ; '.'
0000000000207b96         db  0x00 ; '.'
0000000000207b97         db  0x00 ; '.'
0000000000207b98         db  0x73 ; 's'
0000000000207b99         db  0x00 ; '.'
0000000000207b9a         db  0x00 ; '.'
0000000000207b9b         db  0x00 ; '.'
0000000000207b9c         db  0x00 ; '.'
0000000000207b9d         db  0x00 ; '.'
0000000000207b9e         db  0x00 ; '.'
0000000000207b9f         db  0x00 ; '.'
0000000000207ba0         db  0xed ; '.'
0000000000207ba1         db  0x59 ; 'Y'
0000000000207ba2         db  0x00 ; '.'
0000000000207ba3         db  0x00 ; '.'
0000000000207ba4         db  0x00 ; '.'
0000000000207ba5         db  0x00 ; '.'
0000000000207ba6         db  0x00 ; '.'
0000000000207ba7         db  0x00 ; '.'
0000000000207ba8         db  0x00 ; '.'
0000000000207ba9         db  0x00 ; '.'
0000000000207baa         db  0x00 ; '.'
0000000000207bab         db  0x00 ; '.'
0000000000207bac         db  0x00 ; '.'
0000000000207bad         db  0x00 ; '.'
0000000000207bae         db  0x00 ; '.'
0000000000207baf         db  0x00 ; '.'
0000000000207bb0         db  0x00 ; '.'
0000000000207bb1         db  0x00 ; '.'
0000000000207bb2         db  0x00 ; '.'
0000000000207bb3         db  0x00 ; '.'
0000000000207bb4         db  0x00 ; '.'
0000000000207bb5         db  0x00 ; '.'
0000000000207bb6         db  0x00 ; '.'
0000000000207bb7         db  0x00 ; '.'
0000000000207bb8         db  0x7e ; '~'
0000000000207bb9         db  0xff ; '.'
0000000000207bba         db  0xff ; '.'
0000000000207bbb         db  0xff ; '.'
0000000000207bbc         db  0x00 ; '.'
0000000000207bbd         db  0x00 ; '.'
0000000000207bbe         db  0x00 ; '.'
0000000000207bbf         db  0x00 ; '.'
0000000000207bc0         db  0xf2 ; '.'
0000000000207bc1         db  0x59 ; 'Y'
0000000000207bc2         db  0x00 ; '.'
0000000000207bc3         db  0x00 ; '.'
0000000000207bc4         db  0x00 ; '.'
0000000000207bc5         db  0x00 ; '.'
0000000000207bc6         db  0x00 ; '.'
0000000000207bc7         db  0x00 ; '.'
0000000000207bc8         db  0x00 ; '.'
0000000000207bc9         db  0x00 ; '.'
0000000000207bca         db  0x00 ; '.'
0000000000207bcb         db  0x00 ; '.'
0000000000207bcc         db  0x00 ; '.'
0000000000207bcd         db  0x00 ; '.'
0000000000207bce         db  0x00 ; '.'
0000000000207bcf         db  0x00 ; '.'
0000000000207bd0         db  0x00 ; '.'
0000000000207bd1         db  0x00 ; '.'
0000000000207bd2         db  0x00 ; '.'
0000000000207bd3         db  0x00 ; '.'
0000000000207bd4         db  0x00 ; '.'
0000000000207bd5         db  0x00 ; '.'
0000000000207bd6         db  0x00 ; '.'
0000000000207bd7         db  0x00 ; '.'
0000000000207bd8         db  0x7d ; '}'
0000000000207bd9         db  0xff ; '.'
0000000000207bda         db  0xff ; '.'
0000000000207bdb         db  0xff ; '.'
0000000000207bdc         db  0x00 ; '.'
0000000000207bdd         db  0x00 ; '.'
0000000000207bde         db  0x00 ; '.'
0000000000207bdf         db  0x00 ; '.'
0000000000207be0         db  0x00 ; '.'
0000000000207be1         db  0x00 ; '.'
0000000000207be2         db  0x00 ; '.'
0000000000207be3         db  0x00 ; '.'
0000000000207be4         db  0x00 ; '.'
0000000000207be5         db  0x00 ; '.'
0000000000207be6         db  0x00 ; '.'
0000000000207be7         db  0x00 ; '.'
0000000000207be8         db  0x00 ; '.'
0000000000207be9         db  0x00 ; '.'
0000000000207bea         db  0x00 ; '.'
0000000000207beb         db  0x00 ; '.'
0000000000207bec         db  0x00 ; '.'
0000000000207bed         db  0x00 ; '.'
0000000000207bee         db  0x00 ; '.'
0000000000207bef         db  0x00 ; '.'
0000000000207bf0         db  0x00 ; '.'
0000000000207bf1         db  0x00 ; '.'
0000000000207bf2         db  0x00 ; '.'
0000000000207bf3         db  0x00 ; '.'
0000000000207bf4         db  0x00 ; '.'
0000000000207bf5         db  0x00 ; '.'
0000000000207bf6         db  0x00 ; '.'
0000000000207bf7         db  0x00 ; '.'
0000000000207bf8         db  0x00 ; '.'
0000000000207bf9         db  0x00 ; '.'
0000000000207bfa         db  0x00 ; '.'
0000000000207bfb         db  0x00 ; '.'
0000000000207bfc         db  0x00 ; '.'
0000000000207bfd         db  0x00 ; '.'
0000000000207bfe         db  0x00 ; '.'
0000000000207bff         db  0x00 ; '.'
                     quoting_style_args:
0000000000207c00         db  0x09 ; '.'
0000000000207c01         db  0x61 ; 'a'
0000000000207c02         db  0x00 ; '.'
0000000000207c03         db  0x00 ; '.'
0000000000207c04         db  0x00 ; '.'
0000000000207c05         db  0x00 ; '.'
0000000000207c06         db  0x00 ; '.'
0000000000207c07         db  0x00 ; '.'
0000000000207c08         db  0x11 ; '.'
0000000000207c09         db  0x61 ; 'a'
0000000000207c0a         db  0x00 ; '.'
0000000000207c0b         db  0x00 ; '.'
0000000000207c0c         db  0x00 ; '.'
0000000000207c0d         db  0x00 ; '.'
0000000000207c0e         db  0x00 ; '.'
0000000000207c0f         db  0x00 ; '.'
0000000000207c10         db  0x17 ; '.'
0000000000207c11         db  0x61 ; 'a'
0000000000207c12         db  0x00 ; '.'
0000000000207c13         db  0x00 ; '.'
0000000000207c14         db  0x00 ; '.'
0000000000207c15         db  0x00 ; '.'
0000000000207c16         db  0x00 ; '.'
0000000000207c17         db  0x00 ; '.'
0000000000207c18         db  0x24 ; '$'
0000000000207c19         db  0x61 ; 'a'
0000000000207c1a         db  0x00 ; '.'
0000000000207c1b         db  0x00 ; '.'
0000000000207c1c         db  0x00 ; '.'
0000000000207c1d         db  0x00 ; '.'
0000000000207c1e         db  0x00 ; '.'
0000000000207c1f         db  0x00 ; '.'
0000000000207c20         db  0x31 ; '1'
0000000000207c21         db  0x61 ; 'a'
0000000000207c22         db  0x00 ; '.'
0000000000207c23         db  0x00 ; '.'
0000000000207c24         db  0x00 ; '.'
0000000000207c25         db  0x00 ; '.'
0000000000207c26         db  0x00 ; '.'
0000000000207c27         db  0x00 ; '.'
0000000000207c28         db  0x45 ; 'E'
0000000000207c29         db  0x61 ; 'a'
0000000000207c2a         db  0x00 ; '.'
0000000000207c2b         db  0x00 ; '.'
0000000000207c2c         db  0x00 ; '.'
0000000000207c2d         db  0x00 ; '.'
0000000000207c2e         db  0x00 ; '.'
0000000000207c2f         db  0x00 ; '.'
0000000000207c30         db  0x47 ; 'G'
0000000000207c31         db  0x61 ; 'a'
0000000000207c32         db  0x00 ; '.'
0000000000207c33         db  0x00 ; '.'
0000000000207c34         db  0x00 ; '.'
0000000000207c35         db  0x00 ; '.'
0000000000207c36         db  0x00 ; '.'
0000000000207c37         db  0x00 ; '.'
0000000000207c38         db  0x2a ; '*'
0000000000207c39         db  0x61 ; 'a'
0000000000207c3a         db  0x00 ; '.'
0000000000207c3b         db  0x00 ; '.'
0000000000207c3c         db  0x00 ; '.'
0000000000207c3d         db  0x00 ; '.'
0000000000207c3e         db  0x00 ; '.'
0000000000207c3f         db  0x00 ; '.'
0000000000207c40         db  0xfe ; '.'
0000000000207c41         db  0x58 ; 'X'
0000000000207c42         db  0x00 ; '.'
0000000000207c43         db  0x00 ; '.'
0000000000207c44         db  0x00 ; '.'
0000000000207c45         db  0x00 ; '.'
0000000000207c46         db  0x00 ; '.'
0000000000207c47         db  0x00 ; '.'
0000000000207c48         db  0x4f ; 'O'
0000000000207c49         db  0x61 ; 'a'
0000000000207c4a         db  0x00 ; '.'
0000000000207c4b         db  0x00 ; '.'
0000000000207c4c         db  0x00 ; '.'
0000000000207c4d         db  0x00 ; '.'
0000000000207c4e         db  0x00 ; '.'
0000000000207c4f         db  0x00 ; '.'
0000000000207c50         db  0x00 ; '.'
0000000000207c51         db  0x00 ; '.'
0000000000207c52         db  0x00 ; '.'
0000000000207c53         db  0x00 ; '.'
0000000000207c54         db  0x00 ; '.'
0000000000207c55         db  0x00 ; '.'
0000000000207c56         db  0x00 ; '.'
0000000000207c57         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x207c58; 0x207e48[ (496 bytes)
        ; File offset : [31832; 32328[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000207c58         db  0x01 ; '.'
0000000000207c59         db  0x00 ; '.'
0000000000207c5a         db  0x00 ; '.'
0000000000207c5b         db  0x00 ; '.'
0000000000207c5c         db  0x00 ; '.'
0000000000207c5d         db  0x00 ; '.'
0000000000207c5e         db  0x00 ; '.'
0000000000207c5f         db  0x00 ; '.'
0000000000207c60         db  0x01 ; '.'
0000000000207c61         db  0x00 ; '.'
0000000000207c62         db  0x00 ; '.'
0000000000207c63         db  0x00 ; '.'
0000000000207c64         db  0x00 ; '.'
0000000000207c65         db  0x00 ; '.'
0000000000207c66         db  0x00 ; '.'
0000000000207c67         db  0x00 ; '.'
0000000000207c68         db  0x0c ; '.'
0000000000207c69         db  0x00 ; '.'
0000000000207c6a         db  0x00 ; '.'
0000000000207c6b         db  0x00 ; '.'
0000000000207c6c         db  0x00 ; '.'
0000000000207c6d         db  0x00 ; '.'
0000000000207c6e         db  0x00 ; '.'
0000000000207c6f         db  0x00 ; '.'
0000000000207c70         db  0xb8 ; '.'
0000000000207c71         db  0x13 ; '.'
0000000000207c72         db  0x00 ; '.'
0000000000207c73         db  0x00 ; '.'
0000000000207c74         db  0x00 ; '.'
0000000000207c75         db  0x00 ; '.'
0000000000207c76         db  0x00 ; '.'
0000000000207c77         db  0x00 ; '.'
0000000000207c78         db  0x0d ; '.'
0000000000207c79         db  0x00 ; '.'
0000000000207c7a         db  0x00 ; '.'
0000000000207c7b         db  0x00 ; '.'
0000000000207c7c         db  0x00 ; '.'
0000000000207c7d         db  0x00 ; '.'
0000000000207c7e         db  0x00 ; '.'
0000000000207c7f         db  0x00 ; '.'
0000000000207c80         db  0x10 ; '.'
0000000000207c81         db  0x58 ; 'X'
0000000000207c82         db  0x00 ; '.'
0000000000207c83         db  0x00 ; '.'
0000000000207c84         db  0x00 ; '.'
0000000000207c85         db  0x00 ; '.'
0000000000207c86         db  0x00 ; '.'
0000000000207c87         db  0x00 ; '.'
0000000000207c88         db  0x19 ; '.'
0000000000207c89         db  0x00 ; '.'
0000000000207c8a         db  0x00 ; '.'
0000000000207c8b         db  0x00 ; '.'
0000000000207c8c         db  0x00 ; '.'
0000000000207c8d         db  0x00 ; '.'
0000000000207c8e         db  0x00 ; '.'
0000000000207c8f         db  0x00 ; '.'
0000000000207c90         db  0x10 ; '.'
0000000000207c91         db  0x7b ; '{'
0000000000207c92         db  0x20 ; ' '
0000000000207c93         db  0x00 ; '.'
0000000000207c94         db  0x00 ; '.'
0000000000207c95         db  0x00 ; '.'
0000000000207c96         db  0x00 ; '.'
0000000000207c97         db  0x00 ; '.'
0000000000207c98         db  0x1b ; '.'
0000000000207c99         db  0x00 ; '.'
0000000000207c9a         db  0x00 ; '.'
0000000000207c9b         db  0x00 ; '.'
0000000000207c9c         db  0x00 ; '.'
0000000000207c9d         db  0x00 ; '.'
0000000000207c9e         db  0x00 ; '.'
0000000000207c9f         db  0x00 ; '.'
0000000000207ca0         db  0x08 ; '.'
0000000000207ca1         db  0x00 ; '.'
0000000000207ca2         db  0x00 ; '.'
0000000000207ca3         db  0x00 ; '.'
0000000000207ca4         db  0x00 ; '.'
0000000000207ca5         db  0x00 ; '.'
0000000000207ca6         db  0x00 ; '.'
0000000000207ca7         db  0x00 ; '.'
0000000000207ca8         db  0x1a ; '.'
0000000000207ca9         db  0x00 ; '.'
0000000000207caa         db  0x00 ; '.'
0000000000207cab         db  0x00 ; '.'
0000000000207cac         db  0x00 ; '.'
0000000000207cad         db  0x00 ; '.'
0000000000207cae         db  0x00 ; '.'
0000000000207caf         db  0x00 ; '.'
0000000000207cb0         db  0x18 ; '.'
0000000000207cb1         db  0x7b ; '{'
0000000000207cb2         db  0x20 ; ' '
0000000000207cb3         db  0x00 ; '.'
0000000000207cb4         db  0x00 ; '.'
0000000000207cb5         db  0x00 ; '.'
0000000000207cb6         db  0x00 ; '.'
0000000000207cb7         db  0x00 ; '.'
0000000000207cb8         db  0x1c ; '.'
0000000000207cb9         db  0x00 ; '.'
0000000000207cba         db  0x00 ; '.'
0000000000207cbb         db  0x00 ; '.'
0000000000207cbc         db  0x00 ; '.'
0000000000207cbd         db  0x00 ; '.'
0000000000207cbe         db  0x00 ; '.'
0000000000207cbf         db  0x00 ; '.'
0000000000207cc0         db  0x08 ; '.'
0000000000207cc1         db  0x00 ; '.'
0000000000207cc2         db  0x00 ; '.'
0000000000207cc3         db  0x00 ; '.'
0000000000207cc4         db  0x00 ; '.'
0000000000207cc5         db  0x00 ; '.'
0000000000207cc6         db  0x00 ; '.'
0000000000207cc7         db  0x00 ; '.'
0000000000207cc8         db  0xf5 ; '.'
0000000000207cc9         db  0xfe ; '.'
0000000000207cca         db  0xff ; '.'
0000000000207ccb         db  0x6f ; 'o'
0000000000207ccc         db  0x00 ; '.'
0000000000207ccd         db  0x00 ; '.'
0000000000207cce         db  0x00 ; '.'
0000000000207ccf         db  0x00 ; '.'
0000000000207cd0         db  0x98 ; '.'
0000000000207cd1         db  0x02 ; '.'
0000000000207cd2         db  0x00 ; '.'
0000000000207cd3         db  0x00 ; '.'
0000000000207cd4         db  0x00 ; '.'
0000000000207cd5         db  0x00 ; '.'
0000000000207cd6         db  0x00 ; '.'
0000000000207cd7         db  0x00 ; '.'
0000000000207cd8         db  0x05 ; '.'
0000000000207cd9         db  0x00 ; '.'
0000000000207cda         db  0x00 ; '.'
0000000000207cdb         db  0x00 ; '.'
0000000000207cdc         db  0x00 ; '.'
0000000000207cdd         db  0x00 ; '.'
0000000000207cde         db  0x00 ; '.'
0000000000207cdf         db  0x00 ; '.'
0000000000207ce0         db  0x98 ; '.'
0000000000207ce1         db  0x08 ; '.'
0000000000207ce2         db  0x00 ; '.'
0000000000207ce3         db  0x00 ; '.'
0000000000207ce4         db  0x00 ; '.'
0000000000207ce5         db  0x00 ; '.'
0000000000207ce6         db  0x00 ; '.'
0000000000207ce7         db  0x00 ; '.'
0000000000207ce8         db  0x06 ; '.'
0000000000207ce9         db  0x00 ; '.'
0000000000207cea         db  0x00 ; '.'
0000000000207ceb         db  0x00 ; '.'
0000000000207cec         db  0x00 ; '.'
0000000000207ced         db  0x00 ; '.'
0000000000207cee         db  0x00 ; '.'
0000000000207cef         db  0x00 ; '.'
0000000000207cf0         db  0xe0 ; '.'
0000000000207cf1         db  0x02 ; '.'
0000000000207cf2         db  0x00 ; '.'
0000000000207cf3         db  0x00 ; '.'
0000000000207cf4         db  0x00 ; '.'
0000000000207cf5         db  0x00 ; '.'
0000000000207cf6         db  0x00 ; '.'
0000000000207cf7         db  0x00 ; '.'
0000000000207cf8         db  0x0a ; '.'
0000000000207cf9         db  0x00 ; '.'
0000000000207cfa         db  0x00 ; '.'
0000000000207cfb         db  0x00 ; '.'
0000000000207cfc         db  0x00 ; '.'
0000000000207cfd         db  0x00 ; '.'
0000000000207cfe         db  0x00 ; '.'
0000000000207cff         db  0x00 ; '.'
0000000000207d00         db  0xc6 ; '.'
0000000000207d01         db  0x02 ; '.'
0000000000207d02         db  0x00 ; '.'
0000000000207d03         db  0x00 ; '.'
0000000000207d04         db  0x00 ; '.'
0000000000207d05         db  0x00 ; '.'
0000000000207d06         db  0x00 ; '.'
0000000000207d07         db  0x00 ; '.'
0000000000207d08         db  0x0b ; '.'
0000000000207d09         db  0x00 ; '.'
0000000000207d0a         db  0x00 ; '.'
0000000000207d0b         db  0x00 ; '.'
0000000000207d0c         db  0x00 ; '.'
0000000000207d0d         db  0x00 ; '.'
0000000000207d0e         db  0x00 ; '.'
0000000000207d0f         db  0x00 ; '.'
0000000000207d10         db  0x18 ; '.'
0000000000207d11         db  0x00 ; '.'
0000000000207d12         db  0x00 ; '.'
0000000000207d13         db  0x00 ; '.'
0000000000207d14         db  0x00 ; '.'
0000000000207d15         db  0x00 ; '.'
0000000000207d16         db  0x00 ; '.'
0000000000207d17         db  0x00 ; '.'
0000000000207d18         db  0x15 ; '.'
0000000000207d19         db  0x00 ; '.'
0000000000207d1a         db  0x00 ; '.'
0000000000207d1b         db  0x00 ; '.'
0000000000207d1c         db  0x00 ; '.'
0000000000207d1d         db  0x00 ; '.'
0000000000207d1e         db  0x00 ; '.'
0000000000207d1f         db  0x00 ; '.'
0000000000207d20         db  0x00 ; '.'
0000000000207d21         db  0x00 ; '.'
0000000000207d22         db  0x00 ; '.'
0000000000207d23         db  0x00 ; '.'
0000000000207d24         db  0x00 ; '.'
0000000000207d25         db  0x00 ; '.'
0000000000207d26         db  0x00 ; '.'
0000000000207d27         db  0x00 ; '.'
0000000000207d28         db  0x03 ; '.'
0000000000207d29         db  0x00 ; '.'
0000000000207d2a         db  0x00 ; '.'
0000000000207d2b         db  0x00 ; '.'
0000000000207d2c         db  0x00 ; '.'
0000000000207d2d         db  0x00 ; '.'
0000000000207d2e         db  0x00 ; '.'
0000000000207d2f         db  0x00 ; '.'
0000000000207d30         db  0x48 ; 'H'
0000000000207d31         db  0x7e ; '~'
0000000000207d32         db  0x20 ; ' '
0000000000207d33         db  0x00 ; '.'
0000000000207d34         db  0x00 ; '.'
0000000000207d35         db  0x00 ; '.'
0000000000207d36         db  0x00 ; '.'
0000000000207d37         db  0x00 ; '.'
0000000000207d38         db  0x02 ; '.'
0000000000207d39         db  0x00 ; '.'
0000000000207d3a         db  0x00 ; '.'
0000000000207d3b         db  0x00 ; '.'
0000000000207d3c         db  0x00 ; '.'
0000000000207d3d         db  0x00 ; '.'
0000000000207d3e         db  0x00 ; '.'
0000000000207d3f         db  0x00 ; '.'
0000000000207d40         db  0x68 ; 'h'
0000000000207d41         db  0x04 ; '.'
0000000000207d42         db  0x00 ; '.'
0000000000207d43         db  0x00 ; '.'
0000000000207d44         db  0x00 ; '.'
0000000000207d45         db  0x00 ; '.'
0000000000207d46         db  0x00 ; '.'
0000000000207d47         db  0x00 ; '.'
0000000000207d48         db  0x14 ; '.'
0000000000207d49         db  0x00 ; '.'
0000000000207d4a         db  0x00 ; '.'
0000000000207d4b         db  0x00 ; '.'
0000000000207d4c         db  0x00 ; '.'
0000000000207d4d         db  0x00 ; '.'
0000000000207d4e         db  0x00 ; '.'
0000000000207d4f         db  0x00 ; '.'
0000000000207d50         db  0x07 ; '.'
0000000000207d51         db  0x00 ; '.'
0000000000207d52         db  0x00 ; '.'
0000000000207d53         db  0x00 ; '.'
0000000000207d54         db  0x00 ; '.'
0000000000207d55         db  0x00 ; '.'
0000000000207d56         db  0x00 ; '.'
0000000000207d57         db  0x00 ; '.'
0000000000207d58         db  0x17 ; '.'
0000000000207d59         db  0x00 ; '.'
0000000000207d5a         db  0x00 ; '.'
0000000000207d5b         db  0x00 ; '.'
0000000000207d5c         db  0x00 ; '.'
0000000000207d5d         db  0x00 ; '.'
0000000000207d5e         db  0x00 ; '.'
0000000000207d5f         db  0x00 ; '.'
0000000000207d60         db  0x50 ; 'P'
0000000000207d61         db  0x0f ; '.'
0000000000207d62         db  0x00 ; '.'
0000000000207d63         db  0x00 ; '.'
0000000000207d64         db  0x00 ; '.'
0000000000207d65         db  0x00 ; '.'
0000000000207d66         db  0x00 ; '.'
0000000000207d67         db  0x00 ; '.'
0000000000207d68         db  0x07 ; '.'
0000000000207d69         db  0x00 ; '.'
0000000000207d6a         db  0x00 ; '.'
0000000000207d6b         db  0x00 ; '.'
0000000000207d6c         db  0x00 ; '.'
0000000000207d6d         db  0x00 ; '.'
0000000000207d6e         db  0x00 ; '.'
0000000000207d6f         db  0x00 ; '.'
0000000000207d70         db  0x38 ; '8'
0000000000207d71         db  0x0c ; '.'
0000000000207d72         db  0x00 ; '.'
0000000000207d73         db  0x00 ; '.'
0000000000207d74         db  0x00 ; '.'
0000000000207d75         db  0x00 ; '.'
0000000000207d76         db  0x00 ; '.'
0000000000207d77         db  0x00 ; '.'
0000000000207d78         db  0x08 ; '.'
0000000000207d79         db  0x00 ; '.'
0000000000207d7a         db  0x00 ; '.'
0000000000207d7b         db  0x00 ; '.'
0000000000207d7c         db  0x00 ; '.'
0000000000207d7d         db  0x00 ; '.'
0000000000207d7e         db  0x00 ; '.'
0000000000207d7f         db  0x00 ; '.'
0000000000207d80         db  0x18 ; '.'
0000000000207d81         db  0x03 ; '.'
0000000000207d82         db  0x00 ; '.'
0000000000207d83         db  0x00 ; '.'
0000000000207d84         db  0x00 ; '.'
0000000000207d85         db  0x00 ; '.'
0000000000207d86         db  0x00 ; '.'
0000000000207d87         db  0x00 ; '.'
0000000000207d88         db  0x09 ; '.'
0000000000207d89         db  0x00 ; '.'
0000000000207d8a         db  0x00 ; '.'
0000000000207d8b         db  0x00 ; '.'
0000000000207d8c         db  0x00 ; '.'
0000000000207d8d         db  0x00 ; '.'
0000000000207d8e         db  0x00 ; '.'
0000000000207d8f         db  0x00 ; '.'
0000000000207d90         db  0x18 ; '.'
0000000000207d91         db  0x00 ; '.'
0000000000207d92         db  0x00 ; '.'
0000000000207d93         db  0x00 ; '.'
0000000000207d94         db  0x00 ; '.'
0000000000207d95         db  0x00 ; '.'
0000000000207d96         db  0x00 ; '.'
0000000000207d97         db  0x00 ; '.'
0000000000207d98         db  0x1e ; '.'
0000000000207d99         db  0x00 ; '.'
0000000000207d9a         db  0x00 ; '.'
0000000000207d9b         db  0x00 ; '.'
0000000000207d9c         db  0x00 ; '.'
0000000000207d9d         db  0x00 ; '.'
0000000000207d9e         db  0x00 ; '.'
0000000000207d9f         db  0x00 ; '.'
0000000000207da0         db  0x08 ; '.'
0000000000207da1         db  0x00 ; '.'
0000000000207da2         db  0x00 ; '.'
0000000000207da3         db  0x00 ; '.'
0000000000207da4         db  0x00 ; '.'
0000000000207da5         db  0x00 ; '.'
0000000000207da6         db  0x00 ; '.'
0000000000207da7         db  0x00 ; '.'
0000000000207da8         db  0xfb ; '.'
0000000000207da9         db  0xff ; '.'
0000000000207daa         db  0xff ; '.'
0000000000207dab         db  0x6f ; 'o'
0000000000207dac         db  0x00 ; '.'
0000000000207dad         db  0x00 ; '.'
0000000000207dae         db  0x00 ; '.'
0000000000207daf         db  0x00 ; '.'
0000000000207db0         db  0x01 ; '.'
0000000000207db1         db  0x00 ; '.'
0000000000207db2         db  0x00 ; '.'
0000000000207db3         db  0x08 ; '.'
0000000000207db4         db  0x00 ; '.'
0000000000207db5         db  0x00 ; '.'
0000000000207db6         db  0x00 ; '.'
0000000000207db7         db  0x00 ; '.'
0000000000207db8         db  0xfe ; '.'
0000000000207db9         db  0xff ; '.'
0000000000207dba         db  0xff ; '.'
0000000000207dbb         db  0x6f ; 'o'
0000000000207dbc         db  0x00 ; '.'
0000000000207dbd         db  0x00 ; '.'
0000000000207dbe         db  0x00 ; '.'
0000000000207dbf         db  0x00 ; '.'
0000000000207dc0         db  0xd8 ; '.'
0000000000207dc1         db  0x0b ; '.'
0000000000207dc2         db  0x00 ; '.'
0000000000207dc3         db  0x00 ; '.'
0000000000207dc4         db  0x00 ; '.'
0000000000207dc5         db  0x00 ; '.'
0000000000207dc6         db  0x00 ; '.'
0000000000207dc7         db  0x00 ; '.'
0000000000207dc8         db  0xff ; '.'
0000000000207dc9         db  0xff ; '.'
0000000000207dca         db  0xff ; '.'
0000000000207dcb         db  0x6f ; 'o'
0000000000207dcc         db  0x00 ; '.'
0000000000207dcd         db  0x00 ; '.'
0000000000207dce         db  0x00 ; '.'
0000000000207dcf         db  0x00 ; '.'
0000000000207dd0         db  0x01 ; '.'
0000000000207dd1         db  0x00 ; '.'
0000000000207dd2         db  0x00 ; '.'
0000000000207dd3         db  0x00 ; '.'
0000000000207dd4         db  0x00 ; '.'
0000000000207dd5         db  0x00 ; '.'
0000000000207dd6         db  0x00 ; '.'
0000000000207dd7         db  0x00 ; '.'
0000000000207dd8         db  0xf0 ; '.'
0000000000207dd9         db  0xff ; '.'
0000000000207dda         db  0xff ; '.'
0000000000207ddb         db  0x6f ; 'o'
0000000000207ddc         db  0x00 ; '.'
0000000000207ddd         db  0x00 ; '.'
0000000000207dde         db  0x00 ; '.'
0000000000207ddf         db  0x00 ; '.'
0000000000207de0         db  0x5e ; '^'
0000000000207de1         db  0x0b ; '.'
0000000000207de2         db  0x00 ; '.'
0000000000207de3         db  0x00 ; '.'
0000000000207de4         db  0x00 ; '.'
0000000000207de5         db  0x00 ; '.'
0000000000207de6         db  0x00 ; '.'
0000000000207de7         db  0x00 ; '.'
0000000000207de8         db  0xf9 ; '.'
0000000000207de9         db  0xff ; '.'
0000000000207dea         db  0xff ; '.'
0000000000207deb         db  0x6f ; 'o'
0000000000207dec         db  0x00 ; '.'
0000000000207ded         db  0x00 ; '.'
0000000000207dee         db  0x00 ; '.'
0000000000207def         db  0x00 ; '.'
0000000000207df0         db  0x16 ; '.'
0000000000207df1         db  0x00 ; '.'
0000000000207df2         db  0x00 ; '.'
0000000000207df3         db  0x00 ; '.'
0000000000207df4         db  0x00 ; '.'
0000000000207df5         db  0x00 ; '.'
0000000000207df6         db  0x00 ; '.'
0000000000207df7         db  0x00 ; '.'
0000000000207df8         db  0x00 ; '.'
0000000000207df9         db  0x00 ; '.'
0000000000207dfa         db  0x00 ; '.'
0000000000207dfb         db  0x00 ; '.'
0000000000207dfc         db  0x00 ; '.'
0000000000207dfd         db  0x00 ; '.'
0000000000207dfe         db  0x00 ; '.'
0000000000207dff         db  0x00 ; '.'
0000000000207e00         db  0x00 ; '.'
0000000000207e01         db  0x00 ; '.'
0000000000207e02         db  0x00 ; '.'
0000000000207e03         db  0x00 ; '.'
0000000000207e04         db  0x00 ; '.'
0000000000207e05         db  0x00 ; '.'
0000000000207e06         db  0x00 ; '.'
0000000000207e07         db  0x00 ; '.'
0000000000207e08         db  0x00 ; '.'
0000000000207e09         db  0x00 ; '.'
0000000000207e0a         db  0x00 ; '.'
0000000000207e0b         db  0x00 ; '.'
0000000000207e0c         db  0x00 ; '.'
0000000000207e0d         db  0x00 ; '.'
0000000000207e0e         db  0x00 ; '.'
0000000000207e0f         db  0x00 ; '.'
0000000000207e10         db  0x00 ; '.'
0000000000207e11         db  0x00 ; '.'
0000000000207e12         db  0x00 ; '.'
0000000000207e13         db  0x00 ; '.'
0000000000207e14         db  0x00 ; '.'
0000000000207e15         db  0x00 ; '.'
0000000000207e16         db  0x00 ; '.'
0000000000207e17         db  0x00 ; '.'
0000000000207e18         db  0x00 ; '.'
0000000000207e19         db  0x00 ; '.'
0000000000207e1a         db  0x00 ; '.'
0000000000207e1b         db  0x00 ; '.'
0000000000207e1c         db  0x00 ; '.'
0000000000207e1d         db  0x00 ; '.'
0000000000207e1e         db  0x00 ; '.'
0000000000207e1f         db  0x00 ; '.'
0000000000207e20         db  0x00 ; '.'
0000000000207e21         db  0x00 ; '.'
0000000000207e22         db  0x00 ; '.'
0000000000207e23         db  0x00 ; '.'
0000000000207e24         db  0x00 ; '.'
0000000000207e25         db  0x00 ; '.'
0000000000207e26         db  0x00 ; '.'
0000000000207e27         db  0x00 ; '.'
0000000000207e28         db  0x00 ; '.'
0000000000207e29         db  0x00 ; '.'
0000000000207e2a         db  0x00 ; '.'
0000000000207e2b         db  0x00 ; '.'
0000000000207e2c         db  0x00 ; '.'
0000000000207e2d         db  0x00 ; '.'
0000000000207e2e         db  0x00 ; '.'
0000000000207e2f         db  0x00 ; '.'
0000000000207e30         db  0x00 ; '.'
0000000000207e31         db  0x00 ; '.'
0000000000207e32         db  0x00 ; '.'
0000000000207e33         db  0x00 ; '.'
0000000000207e34         db  0x00 ; '.'
0000000000207e35         db  0x00 ; '.'
0000000000207e36         db  0x00 ; '.'
0000000000207e37         db  0x00 ; '.'
0000000000207e38         db  0x00 ; '.'
0000000000207e39         db  0x00 ; '.'
0000000000207e3a         db  0x00 ; '.'
0000000000207e3b         db  0x00 ; '.'
0000000000207e3c         db  0x00 ; '.'
0000000000207e3d         db  0x00 ; '.'
0000000000207e3e         db  0x00 ; '.'
0000000000207e3f         db  0x00 ; '.'
0000000000207e40         db  0x00 ; '.'
0000000000207e41         db  0x00 ; '.'
0000000000207e42         db  0x00 ; '.'
0000000000207e43         db  0x00 ; '.'
0000000000207e44         db  0x00 ; '.'
0000000000207e45         db  0x00 ; '.'
0000000000207e46         db  0x00 ; '.'
0000000000207e47         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x207e48; 0x208000[ (440 bytes)
        ; File offset : [32328; 32768[ (440 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000207e48         db  0x58 ; 'X'
0000000000207e49         db  0x7c ; '|'
0000000000207e4a         db  0x20 ; ' '
0000000000207e4b         db  0x00 ; '.'
0000000000207e4c         db  0x00 ; '.'
0000000000207e4d         db  0x00 ; '.'
0000000000207e4e         db  0x00 ; '.'
0000000000207e4f         db  0x00 ; '.'
                     qword_207e50:
0000000000207e50         dq         0x0000000000000000                          ; DATA XREF=0x13d0
0000000000207e58         db  0x00 ; '.'                                         ; DATA XREF=0x13d6
0000000000207e59         db  0x00 ; '.'
0000000000207e5a         db  0x00 ; '.'
0000000000207e5b         db  0x00 ; '.'
0000000000207e5c         db  0x00 ; '.'
0000000000207e5d         db  0x00 ; '.'
0000000000207e5e         db  0x00 ; '.'
0000000000207e5f         db  0x00 ; '.'
                     free@GOT:        // free
0000000000207e60         dq         0x0000000000208240                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000207e68         dq         0x0000000000208248                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000207e70         dq         0x0000000000208250                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000207e78         dq         0x0000000000208258                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000207e80         dq         0x0000000000208268                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000207e88         dq         0x0000000000208270                          ; DATA XREF=j___fpending
                     textdomain@GOT:        // textdomain
0000000000207e90         dq         0x0000000000208278                          ; DATA XREF=j_textdomain
                     __strtol_internal@GOT:        // __strtol_internal
0000000000207e98         dq         0x0000000000208280                          ; DATA XREF=j___strtol_internal
                     fclose@GOT:        // fclose
0000000000207ea0         dq         0x0000000000208288                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000207ea8         dq         0x0000000000208290                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000207eb0         dq         0x0000000000208298                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000207eb8         dq         0x00000000002082a0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000207ec0         dq         0x00000000002082a8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000207ec8         dq         0x00000000002082b0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000207ed0         dq         0x00000000002082b8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000207ed8         dq         0x00000000002082c0                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000207ee0         dq         0x00000000002082c8                          ; DATA XREF=j_strchr
                     strrchr@GOT:        // strrchr
0000000000207ee8         dq         0x00000000002082d0                          ; DATA XREF=j_strrchr
                     ftruncate@GOT:        // ftruncate
0000000000207ef0         dq         0x00000000002082d8                          ; DATA XREF=j_ftruncate
                     lseek@GOT:        // lseek
0000000000207ef8         dq         0x00000000002082e0                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000207f00         dq         0x00000000002082e8                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000207f08         dq         0x00000000002082f0                          ; DATA XREF=j_memset
                     close@GOT:        // close
0000000000207f10         dq         0x00000000002082f8                          ; DATA XREF=j_close
                     memcmp@GOT:        // memcmp
0000000000207f18         dq         0x0000000000208308                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000207f20         dq         0x0000000000208310                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000207f28         dq         0x0000000000208318                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000207f30         dq         0x0000000000208328                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000207f38         dq         0x0000000000208330                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
0000000000207f40         dq         0x0000000000208338                          ; DATA XREF=j___xstat
                     malloc@GOT:        // malloc
0000000000207f48         dq         0x0000000000208340                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000207f50         dq         0x0000000000208348                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000207f58         dq         0x0000000000208350                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
0000000000207f60         dq         0x0000000000208358                          ; DATA XREF=j___fxstat
                     __freading@GOT:        // __freading
0000000000207f68         dq         0x0000000000208360                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000207f70         dq         0x0000000000208368                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000207f78         dq         0x0000000000208370                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000207f80         dq         0x0000000000208378                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000207f88         dq         0x0000000000208380                          ; DATA XREF=j_error
                     open@GOT:        // open
0000000000207f90         dq         0x0000000000208388                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000207f98         dq         0x0000000000208390                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000207fa0         dq         0x0000000000208398                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000207fa8         dq         0x00000000002083a0                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000207fb0         dq         0x00000000002083a8                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000207fb8         dq         0x00000000002083b0                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000207fc0         dq         0x00000000002083c0                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000207fc8         dq         0x00000000002083c8                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000207fd0         dq         0x00000000002083d8                          ; DATA XREF=j___ctype_b_loc
                     qword_207fd8:
0000000000207fd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000207fe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000207fe1         db  0x00 ; '.'
0000000000207fe2         db  0x00 ; '.'
0000000000207fe3         db  0x00 ; '.'
0000000000207fe4         db  0x00 ; '.'
0000000000207fe5         db  0x00 ; '.'
0000000000207fe6         db  0x00 ; '.'
0000000000207fe7         db  0x00 ; '.'
                     qword_207fe8:
0000000000207fe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_207ff0:
0000000000207ff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_207ff8:
0000000000207ff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_207ff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x208000; 0x208080[ (128 bytes)
        ; File offset : [32768; 32896[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000208000         align      8
                     __dso_handle:
0000000000208008         dq         0x0000000000208008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
0000000000208010         dq         0x0000000000006093                          ; "8.31", DATA XREF=main+226
                     exit_failure:
0000000000208018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020801c         db  0x00 ; '.'
000000000020801d         db  0x00 ; '.'
000000000020801e         db  0x00 ; '.'
000000000020801f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000208020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000208021         db  0x00 ; '.'
0000000000208022         db  0x00 ; '.'
0000000000208023         db  0x00 ; '.'
0000000000208024         db  0x00 ; '.'
0000000000208025         db  0x00 ; '.'
0000000000208026         db  0x00 ; '.'
0000000000208027         db  0x00 ; '.'
0000000000208028         db  0x00 ; '.'
0000000000208029         db  0x00 ; '.'
000000000020802a         db  0x00 ; '.'
000000000020802b         db  0x00 ; '.'
000000000020802c         db  0x00 ; '.'
000000000020802d         db  0x00 ; '.'
000000000020802e         db  0x00 ; '.'
000000000020802f         db  0x00 ; '.'
0000000000208030         db  0x00 ; '.'
0000000000208031         db  0x00 ; '.'
0000000000208032         db  0x00 ; '.'
0000000000208033         db  0x00 ; '.'
0000000000208034         db  0x00 ; '.'
0000000000208035         db  0x00 ; '.'
0000000000208036         db  0x00 ; '.'
0000000000208037         db  0x00 ; '.'
0000000000208038         db  0x00 ; '.'
0000000000208039         db  0x00 ; '.'
000000000020803a         db  0x00 ; '.'
000000000020803b         db  0x00 ; '.'
000000000020803c         db  0x00 ; '.'
000000000020803d         db  0x00 ; '.'
000000000020803e         db  0x00 ; '.'
000000000020803f         db  0x00 ; '.'
0000000000208040         db  0x00 ; '.'
0000000000208041         db  0x00 ; '.'
0000000000208042         db  0x00 ; '.'
0000000000208043         db  0x00 ; '.'
0000000000208044         db  0x00 ; '.'
0000000000208045         db  0x00 ; '.'
0000000000208046         db  0x00 ; '.'
0000000000208047         db  0x00 ; '.'
0000000000208048         db  0x00 ; '.'
0000000000208049         db  0x00 ; '.'
000000000020804a         db  0x00 ; '.'
000000000020804b         db  0x00 ; '.'
000000000020804c         db  0x00 ; '.'
000000000020804d         db  0x00 ; '.'
000000000020804e         db  0x00 ; '.'
000000000020804f         db  0x00 ; '.'
0000000000208050         db  0x00 ; '.'
0000000000208051         db  0x00 ; '.'
0000000000208052         db  0x00 ; '.'
0000000000208053         db  0x00 ; '.'
0000000000208054         db  0x00 ; '.'
0000000000208055         db  0x00 ; '.'
0000000000208056         db  0x00 ; '.'
0000000000208057         db  0x00 ; '.'
                     nslots:
0000000000208058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020805c         align      32
                     slotvec:
0000000000208060         dq         0x0000000000208070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000208068         db  0x00 ; '.'
0000000000208069         db  0x00 ; '.'
000000000020806a         db  0x00 ; '.'
000000000020806b         db  0x00 ; '.'
000000000020806c         db  0x00 ; '.'
000000000020806d         db  0x00 ; '.'
000000000020806e         db  0x00 ; '.'
000000000020806f         db  0x00 ; '.'
                     slotvec0:
0000000000208070         dq         1.26481e-321, 1.05245e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x208080; 0x208238[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
0000000000208080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
0000000000208081         db  0x00 ; '.'
0000000000208082         db  0x00 ; '.'
0000000000208083         db  0x00 ; '.'
0000000000208084         db  0x00 ; '.'
0000000000208085         db  0x00 ; '.'
0000000000208086         db  0x00 ; '.'
0000000000208087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
0000000000208088         db  0x00 ; '.'                                         ; DATA XREF=main+219, usage+125, usage+162, usage+199, usage+236, usage+273, usage+310, usage+347, usage+384, usage+421, usage+1008
0000000000208089         db  0x00 ; '.'
000000000020808a         db  0x00 ; '.'
000000000020808b         db  0x00 ; '.'
000000000020808c         db  0x00 ; '.'
000000000020808d         db  0x00 ; '.'
000000000020808e         db  0x00 ; '.'
000000000020808f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
0000000000208090         db  0x00 ; '.'                                         ; DATA XREF=main+718
0000000000208091         db  0x00 ; '.'
0000000000208092         db  0x00 ; '.'
0000000000208093         db  0x00 ; '.'
0000000000208094         db  0x00 ; '.'
0000000000208095         db  0x00 ; '.'
0000000000208096         db  0x00 ; '.'
0000000000208097         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
0000000000208098         db  0x00 ; '.'                                         ; DATA XREF=main+296, main+312, main+377, main+384, main+400, main+477, main+536, main+574, main+600, main+685, main+706
0000000000208099         db  0x00 ; '.'
000000000020809a         db  0x00 ; '.'
000000000020809b         db  0x00 ; '.'
000000000020809c         db  0x00 ; '.'
000000000020809d         db  0x00 ; '.'
000000000020809e         db  0x00 ; '.'
000000000020809f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002080a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002080a1         db  0x00 ; '.'
00000000002080a2         db  0x00 ; '.'
00000000002080a3         db  0x00 ; '.'
00000000002080a4         db  0x00 ; '.'
00000000002080a5         db  0x00 ; '.'
00000000002080a6         db  0x00 ; '.'
00000000002080a7         db  0x00 ; '.'
00000000002080a8         db  0x00 ; '.'
00000000002080a9         db  0x00 ; '.'
00000000002080aa         db  0x00 ; '.'
00000000002080ab         db  0x00 ; '.'
00000000002080ac         db  0x00 ; '.'
00000000002080ad         db  0x00 ; '.'
00000000002080ae         db  0x00 ; '.'
00000000002080af         db  0x00 ; '.'
00000000002080b0         db  0x00 ; '.'
00000000002080b1         db  0x00 ; '.'
00000000002080b2         db  0x00 ; '.'
00000000002080b3         db  0x00 ; '.'
00000000002080b4         db  0x00 ; '.'
00000000002080b5         db  0x00 ; '.'
00000000002080b6         db  0x00 ; '.'
00000000002080b7         db  0x00 ; '.'
00000000002080b8         db  0x00 ; '.'
00000000002080b9         db  0x00 ; '.'
00000000002080ba         db  0x00 ; '.'
00000000002080bb         db  0x00 ; '.'
00000000002080bc         db  0x00 ; '.'
00000000002080bd         db  0x00 ; '.'
00000000002080be         db  0x00 ; '.'
00000000002080bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002080c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002080c1         db  0x00 ; '.'
00000000002080c2         db  0x00 ; '.'
00000000002080c3         db  0x00 ; '.'
00000000002080c4         db  0x00 ; '.'
00000000002080c5         db  0x00 ; '.'
00000000002080c6         db  0x00 ; '.'
00000000002080c7         db  0x00 ; '.'
                     completed.7697:
00000000002080c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002080c9         db  0x00 ; '.'
00000000002080ca         db  0x00 ; '.'
00000000002080cb         db  0x00 ; '.'
00000000002080cc         db  0x00 ; '.'
00000000002080cd         db  0x00 ; '.'
00000000002080ce         db  0x00 ; '.'
00000000002080cf         db  0x00 ; '.'
                     ref_file:
00000000002080d0         db  0x00 ; '.'                                         ; DATA XREF=main+543, main+725, main+1321
00000000002080d1         db  0x00 ; '.'
00000000002080d2         db  0x00 ; '.'
00000000002080d3         db  0x00 ; '.'
00000000002080d4         db  0x00 ; '.'
00000000002080d5         db  0x00 ; '.'
00000000002080d6         db  0x00 ; '.'
00000000002080d7         db  0x00 ; '.'
                     block_mode:
00000000002080d8         db  0x00 ; '.'                                         ; DATA XREF=main+192, main+839, main+1088
                     no_create:
00000000002080d9         db  0x00 ; '.'                                         ; DATA XREF=main+272, main+997, main+1393
00000000002080da         db  0x00 ; '.'
00000000002080db         db  0x00 ; '.'
00000000002080dc         db  0x00 ; '.'
00000000002080dd         db  0x00 ; '.'
00000000002080de         db  0x00 ; '.'
00000000002080df         db  0x00 ; '.'
                     ignore_EPIPE:
00000000002080e0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
00000000002080e1         db  0x00 ; '.'
00000000002080e2         db  0x00 ; '.'
00000000002080e3         db  0x00 ; '.'
00000000002080e4         db  0x00 ; '.'
00000000002080e5         db  0x00 ; '.'
00000000002080e6         db  0x00 ; '.'
00000000002080e7         db  0x00 ; '.'
                     file_name:
00000000002080e8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
00000000002080e9         db  0x00 ; '.'
00000000002080ea         db  0x00 ; '.'
00000000002080eb         db  0x00 ; '.'
00000000002080ec         db  0x00 ; '.'
00000000002080ed         db  0x00 ; '.'
00000000002080ee         db  0x00 ; '.'
00000000002080ef         db  0x00 ; '.'
                     program_name:
00000000002080f0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
00000000002080f1         db  0x00 ; '.'
00000000002080f2         db  0x00 ; '.'
00000000002080f3         db  0x00 ; '.'
00000000002080f4         db  0x00 ; '.'
00000000002080f5         db  0x00 ; '.'
00000000002080f6         db  0x00 ; '.'
00000000002080f7         db  0x00 ; '.'
00000000002080f8         db  0x00 ; '.'
00000000002080f9         db  0x00 ; '.'
00000000002080fa         db  0x00 ; '.'
00000000002080fb         db  0x00 ; '.'
00000000002080fc         db  0x00 ; '.'
00000000002080fd         db  0x00 ; '.'
00000000002080fe         db  0x00 ; '.'
00000000002080ff         db  0x00 ; '.'
                     slot0:
0000000000208100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000208101         db  0x00 ; '.'
0000000000208102         db  0x00 ; '.'
0000000000208103         db  0x00 ; '.'
0000000000208104         db  0x00 ; '.'
0000000000208105         db  0x00 ; '.'
0000000000208106         db  0x00 ; '.'
0000000000208107         db  0x00 ; '.'
0000000000208108         db  0x00 ; '.'
0000000000208109         db  0x00 ; '.'
000000000020810a         db  0x00 ; '.'
000000000020810b         db  0x00 ; '.'
000000000020810c         db  0x00 ; '.'
000000000020810d         db  0x00 ; '.'
000000000020810e         db  0x00 ; '.'
000000000020810f         db  0x00 ; '.'
0000000000208110         db  0x00 ; '.'
0000000000208111         db  0x00 ; '.'
0000000000208112         db  0x00 ; '.'
0000000000208113         db  0x00 ; '.'
0000000000208114         db  0x00 ; '.'
0000000000208115         db  0x00 ; '.'
0000000000208116         db  0x00 ; '.'
0000000000208117         db  0x00 ; '.'
0000000000208118         db  0x00 ; '.'
0000000000208119         db  0x00 ; '.'
000000000020811a         db  0x00 ; '.'
000000000020811b         db  0x00 ; '.'
000000000020811c         db  0x00 ; '.'
000000000020811d         db  0x00 ; '.'
000000000020811e         db  0x00 ; '.'
000000000020811f         db  0x00 ; '.'
0000000000208120         db  0x00 ; '.'
0000000000208121         db  0x00 ; '.'
0000000000208122         db  0x00 ; '.'
0000000000208123         db  0x00 ; '.'
0000000000208124         db  0x00 ; '.'
0000000000208125         db  0x00 ; '.'
0000000000208126         db  0x00 ; '.'
0000000000208127         db  0x00 ; '.'
0000000000208128         db  0x00 ; '.'
0000000000208129         db  0x00 ; '.'
000000000020812a         db  0x00 ; '.'
000000000020812b         db  0x00 ; '.'
000000000020812c         db  0x00 ; '.'
000000000020812d         db  0x00 ; '.'
000000000020812e         db  0x00 ; '.'
000000000020812f         db  0x00 ; '.'
0000000000208130         db  0x00 ; '.'
0000000000208131         db  0x00 ; '.'
0000000000208132         db  0x00 ; '.'
0000000000208133         db  0x00 ; '.'
0000000000208134         db  0x00 ; '.'
0000000000208135         db  0x00 ; '.'
0000000000208136         db  0x00 ; '.'
0000000000208137         db  0x00 ; '.'
0000000000208138         db  0x00 ; '.'
0000000000208139         db  0x00 ; '.'
000000000020813a         db  0x00 ; '.'
000000000020813b         db  0x00 ; '.'
000000000020813c         db  0x00 ; '.'
000000000020813d         db  0x00 ; '.'
000000000020813e         db  0x00 ; '.'
000000000020813f         db  0x00 ; '.'
0000000000208140         db  0x00 ; '.'
0000000000208141         db  0x00 ; '.'
0000000000208142         db  0x00 ; '.'
0000000000208143         db  0x00 ; '.'
0000000000208144         db  0x00 ; '.'
0000000000208145         db  0x00 ; '.'
0000000000208146         db  0x00 ; '.'
0000000000208147         db  0x00 ; '.'
0000000000208148         db  0x00 ; '.'
0000000000208149         db  0x00 ; '.'
000000000020814a         db  0x00 ; '.'
000000000020814b         db  0x00 ; '.'
000000000020814c         db  0x00 ; '.'
000000000020814d         db  0x00 ; '.'
000000000020814e         db  0x00 ; '.'
000000000020814f         db  0x00 ; '.'
0000000000208150         db  0x00 ; '.'
0000000000208151         db  0x00 ; '.'
0000000000208152         db  0x00 ; '.'
0000000000208153         db  0x00 ; '.'
0000000000208154         db  0x00 ; '.'
0000000000208155         db  0x00 ; '.'
0000000000208156         db  0x00 ; '.'
0000000000208157         db  0x00 ; '.'
0000000000208158         db  0x00 ; '.'
0000000000208159         db  0x00 ; '.'
000000000020815a         db  0x00 ; '.'
000000000020815b         db  0x00 ; '.'
000000000020815c         db  0x00 ; '.'
000000000020815d         db  0x00 ; '.'
000000000020815e         db  0x00 ; '.'
000000000020815f         db  0x00 ; '.'
0000000000208160         db  0x00 ; '.'
0000000000208161         db  0x00 ; '.'
0000000000208162         db  0x00 ; '.'
0000000000208163         db  0x00 ; '.'
0000000000208164         db  0x00 ; '.'
0000000000208165         db  0x00 ; '.'
0000000000208166         db  0x00 ; '.'
0000000000208167         db  0x00 ; '.'
0000000000208168         db  0x00 ; '.'
0000000000208169         db  0x00 ; '.'
000000000020816a         db  0x00 ; '.'
000000000020816b         db  0x00 ; '.'
000000000020816c         db  0x00 ; '.'
000000000020816d         db  0x00 ; '.'
000000000020816e         db  0x00 ; '.'
000000000020816f         db  0x00 ; '.'
0000000000208170         db  0x00 ; '.'
0000000000208171         db  0x00 ; '.'
0000000000208172         db  0x00 ; '.'
0000000000208173         db  0x00 ; '.'
0000000000208174         db  0x00 ; '.'
0000000000208175         db  0x00 ; '.'
0000000000208176         db  0x00 ; '.'
0000000000208177         db  0x00 ; '.'
0000000000208178         db  0x00 ; '.'
0000000000208179         db  0x00 ; '.'
000000000020817a         db  0x00 ; '.'
000000000020817b         db  0x00 ; '.'
000000000020817c         db  0x00 ; '.'
000000000020817d         db  0x00 ; '.'
000000000020817e         db  0x00 ; '.'
000000000020817f         db  0x00 ; '.'
0000000000208180         db  0x00 ; '.'
0000000000208181         db  0x00 ; '.'
0000000000208182         db  0x00 ; '.'
0000000000208183         db  0x00 ; '.'
0000000000208184         db  0x00 ; '.'
0000000000208185         db  0x00 ; '.'
0000000000208186         db  0x00 ; '.'
0000000000208187         db  0x00 ; '.'
0000000000208188         db  0x00 ; '.'
0000000000208189         db  0x00 ; '.'
000000000020818a         db  0x00 ; '.'
000000000020818b         db  0x00 ; '.'
000000000020818c         db  0x00 ; '.'
000000000020818d         db  0x00 ; '.'
000000000020818e         db  0x00 ; '.'
000000000020818f         db  0x00 ; '.'
0000000000208190         db  0x00 ; '.'
0000000000208191         db  0x00 ; '.'
0000000000208192         db  0x00 ; '.'
0000000000208193         db  0x00 ; '.'
0000000000208194         db  0x00 ; '.'
0000000000208195         db  0x00 ; '.'
0000000000208196         db  0x00 ; '.'
0000000000208197         db  0x00 ; '.'
0000000000208198         db  0x00 ; '.'
0000000000208199         db  0x00 ; '.'
000000000020819a         db  0x00 ; '.'
000000000020819b         db  0x00 ; '.'
000000000020819c         db  0x00 ; '.'
000000000020819d         db  0x00 ; '.'
000000000020819e         db  0x00 ; '.'
000000000020819f         db  0x00 ; '.'
00000000002081a0         db  0x00 ; '.'
00000000002081a1         db  0x00 ; '.'
00000000002081a2         db  0x00 ; '.'
00000000002081a3         db  0x00 ; '.'
00000000002081a4         db  0x00 ; '.'
00000000002081a5         db  0x00 ; '.'
00000000002081a6         db  0x00 ; '.'
00000000002081a7         db  0x00 ; '.'
00000000002081a8         db  0x00 ; '.'
00000000002081a9         db  0x00 ; '.'
00000000002081aa         db  0x00 ; '.'
00000000002081ab         db  0x00 ; '.'
00000000002081ac         db  0x00 ; '.'
00000000002081ad         db  0x00 ; '.'
00000000002081ae         db  0x00 ; '.'
00000000002081af         db  0x00 ; '.'
00000000002081b0         db  0x00 ; '.'
00000000002081b1         db  0x00 ; '.'
00000000002081b2         db  0x00 ; '.'
00000000002081b3         db  0x00 ; '.'
00000000002081b4         db  0x00 ; '.'
00000000002081b5         db  0x00 ; '.'
00000000002081b6         db  0x00 ; '.'
00000000002081b7         db  0x00 ; '.'
00000000002081b8         db  0x00 ; '.'
00000000002081b9         db  0x00 ; '.'
00000000002081ba         db  0x00 ; '.'
00000000002081bb         db  0x00 ; '.'
00000000002081bc         db  0x00 ; '.'
00000000002081bd         db  0x00 ; '.'
00000000002081be         db  0x00 ; '.'
00000000002081bf         db  0x00 ; '.'
00000000002081c0         db  0x00 ; '.'
00000000002081c1         db  0x00 ; '.'
00000000002081c2         db  0x00 ; '.'
00000000002081c3         db  0x00 ; '.'
00000000002081c4         db  0x00 ; '.'
00000000002081c5         db  0x00 ; '.'
00000000002081c6         db  0x00 ; '.'
00000000002081c7         db  0x00 ; '.'
00000000002081c8         db  0x00 ; '.'
00000000002081c9         db  0x00 ; '.'
00000000002081ca         db  0x00 ; '.'
00000000002081cb         db  0x00 ; '.'
00000000002081cc         db  0x00 ; '.'
00000000002081cd         db  0x00 ; '.'
00000000002081ce         db  0x00 ; '.'
00000000002081cf         db  0x00 ; '.'
00000000002081d0         db  0x00 ; '.'
00000000002081d1         db  0x00 ; '.'
00000000002081d2         db  0x00 ; '.'
00000000002081d3         db  0x00 ; '.'
00000000002081d4         db  0x00 ; '.'
00000000002081d5         db  0x00 ; '.'
00000000002081d6         db  0x00 ; '.'
00000000002081d7         db  0x00 ; '.'
00000000002081d8         db  0x00 ; '.'
00000000002081d9         db  0x00 ; '.'
00000000002081da         db  0x00 ; '.'
00000000002081db         db  0x00 ; '.'
00000000002081dc         db  0x00 ; '.'
00000000002081dd         db  0x00 ; '.'
00000000002081de         db  0x00 ; '.'
00000000002081df         db  0x00 ; '.'
00000000002081e0         db  0x00 ; '.'
00000000002081e1         db  0x00 ; '.'
00000000002081e2         db  0x00 ; '.'
00000000002081e3         db  0x00 ; '.'
00000000002081e4         db  0x00 ; '.'
00000000002081e5         db  0x00 ; '.'
00000000002081e6         db  0x00 ; '.'
00000000002081e7         db  0x00 ; '.'
00000000002081e8         db  0x00 ; '.'
00000000002081e9         db  0x00 ; '.'
00000000002081ea         db  0x00 ; '.'
00000000002081eb         db  0x00 ; '.'
00000000002081ec         db  0x00 ; '.'
00000000002081ed         db  0x00 ; '.'
00000000002081ee         db  0x00 ; '.'
00000000002081ef         db  0x00 ; '.'
00000000002081f0         db  0x00 ; '.'
00000000002081f1         db  0x00 ; '.'
00000000002081f2         db  0x00 ; '.'
00000000002081f3         db  0x00 ; '.'
00000000002081f4         db  0x00 ; '.'
00000000002081f5         db  0x00 ; '.'
00000000002081f6         db  0x00 ; '.'
00000000002081f7         db  0x00 ; '.'
00000000002081f8         db  0x00 ; '.'
00000000002081f9         db  0x00 ; '.'
00000000002081fa         db  0x00 ; '.'
00000000002081fb         db  0x00 ; '.'
00000000002081fc         db  0x00 ; '.'
00000000002081fd         db  0x00 ; '.'
00000000002081fe         db  0x00 ; '.'
00000000002081ff         db  0x00 ; '.'
                     default_quoting_options:
0000000000208200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000208201         db  0x00 ; '.'
0000000000208202         db  0x00 ; '.'
0000000000208203         db  0x00 ; '.'
0000000000208204         db  0x00 ; '.'
0000000000208205         db  0x00 ; '.'
0000000000208206         db  0x00 ; '.'
0000000000208207         db  0x00 ; '.'
0000000000208208         db  0x00 ; '.'
0000000000208209         db  0x00 ; '.'
000000000020820a         db  0x00 ; '.'
000000000020820b         db  0x00 ; '.'
000000000020820c         db  0x00 ; '.'
000000000020820d         db  0x00 ; '.'
000000000020820e         db  0x00 ; '.'
000000000020820f         db  0x00 ; '.'
0000000000208210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000208211         db  0x00 ; '.'
0000000000208212         db  0x00 ; '.'
0000000000208213         db  0x00 ; '.'
0000000000208214         db  0x00 ; '.'
0000000000208215         db  0x00 ; '.'
0000000000208216         db  0x00 ; '.'
0000000000208217         db  0x00 ; '.'
0000000000208218         db  0x00 ; '.'
0000000000208219         db  0x00 ; '.'
000000000020821a         db  0x00 ; '.'
000000000020821b         db  0x00 ; '.'
000000000020821c         db  0x00 ; '.'
000000000020821d         db  0x00 ; '.'
000000000020821e         db  0x00 ; '.'
000000000020821f         db  0x00 ; '.'
0000000000208220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000208221         db  0x00 ; '.'
0000000000208222         db  0x00 ; '.'
0000000000208223         db  0x00 ; '.'
0000000000208224         db  0x00 ; '.'
0000000000208225         db  0x00 ; '.'
0000000000208226         db  0x00 ; '.'
0000000000208227         db  0x00 ; '.'
0000000000208228         db  0x00 ; '.'
0000000000208229         db  0x00 ; '.'
000000000020822a         db  0x00 ; '.'
000000000020822b         db  0x00 ; '.'
000000000020822c         db  0x00 ; '.'
000000000020822d         db  0x00 ; '.'
000000000020822e         db  0x00 ; '.'
000000000020822f         db  0x00 ; '.'
                     qword_208230:
0000000000208230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000208231         db  0x00 ; '.'
0000000000208232         db  0x00 ; '.'
0000000000208233         db  0x00 ; '.'
0000000000208234         db  0x00 ; '.'
0000000000208235         db  0x00 ; '.'
0000000000208236         db  0x00 ; '.'
0000000000208237         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x208240; 0x208580[ (832 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x208240; 0x4107c0[ (2131328 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
0000000000208240         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000208248         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000208250         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000208258         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000208260         extern function code
                     _exit:
0000000000208268         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
0000000000208270         extern function code                                   ; DATA XREF=__fpending@GOT
                     textdomain:
0000000000208278         extern function code                                   ; DATA XREF=textdomain@GOT
                     __strtol_internal:
0000000000208280         extern function code                                   ; DATA XREF=__strtol_internal@GOT
                     fclose:
0000000000208288         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
0000000000208290         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000208298         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002082a0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002082a8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002082b0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002082b8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002082c0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
00000000002082c8         extern function code                                   ; DATA XREF=strchr@GOT
                     strrchr:
00000000002082d0         extern function code                                   ; DATA XREF=strrchr@GOT
                     ftruncate:
00000000002082d8         extern function code                                   ; DATA XREF=ftruncate@GOT
                     lseek:
00000000002082e0         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
00000000002082e8         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
00000000002082f0         extern function code                                   ; DATA XREF=memset@GOT
                     close:
00000000002082f8         extern function code                                   ; DATA XREF=close@GOT
                     __libc_start_main:
0000000000208300         extern function code
                     memcmp:
0000000000208308         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000208310         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000208318         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
0000000000208320         extern function code
                     memcpy:
0000000000208328         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000208330         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
0000000000208338         extern function code                                   ; DATA XREF=__xstat@GOT
                     malloc:
0000000000208340         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000208348         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000208350         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
0000000000208358         extern function code                                   ; DATA XREF=__fxstat@GOT
                     __freading:
0000000000208360         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
0000000000208368         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000208370         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000208378         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
0000000000208380         extern function code                                   ; DATA XREF=error@GOT
                     open:
0000000000208388         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
0000000000208390         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
0000000000208398         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
00000000002083a0         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
00000000002083a8         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
00000000002083b0         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
00000000002083b8         extern function code
                     mbsinit:
00000000002083c0         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
00000000002083c8         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
00000000002083d0         extern function code
                     __ctype_b_loc:
00000000002083d8         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
00000000002083e0         extern function code
                     abort@@GLIBC_2.2.5:
00000000002083e8         extern function code
                     __errno_location@@GLIBC_2.2.5:
00000000002083f0         extern function code
                     strncmp@@GLIBC_2.2.5:
00000000002083f8         extern function code
                     _ITM_deregisterTMCloneTable_208400:        // _ITM_deregisterTMCloneTable
0000000000208400         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000208408         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000208410         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000208418         extern function code
                     __strtol_internal@@GLIBC_2.2.5:
0000000000208420         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000208428         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000208430         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000208438         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000208440         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000208448         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000208450         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000208458         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000208460         extern function code
                     strchr@@GLIBC_2.2.5:
0000000000208468         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000208470         extern function code
                     ftruncate@@GLIBC_2.2.5:
0000000000208478         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000208480         extern function code
                     __assert_fail@@GLIBC_2.2.5:
0000000000208488         extern function code
                     memset@@GLIBC_2.2.5:
0000000000208490         extern function code
                     close@@GLIBC_2.2.5:
0000000000208498         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
00000000002084a0         extern function code
                     memcmp@@GLIBC_2.2.5:
00000000002084a8         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
00000000002084b0         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002084b8         extern function code
                     __gmon_start___2084c0:        // __gmon_start__
00000000002084c0         extern function code
                     memcpy@@GLIBC_2.14:
00000000002084c8         extern function code
                     fileno@@GLIBC_2.2.5:
00000000002084d0         extern function code
                     __xstat@@GLIBC_2.2.5:
00000000002084d8         extern function code
                     malloc@@GLIBC_2.2.5:
00000000002084e0         extern function code
                     fflush@@GLIBC_2.2.5:
00000000002084e8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
00000000002084f0         extern function code
                     __fxstat@@GLIBC_2.2.5:
00000000002084f8         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000208500         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000208508         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000208510         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000208518         extern function code
                     error@@GLIBC_2.2.5:
0000000000208520         extern function code
                     open@@GLIBC_2.2.5:
0000000000208528         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000208530         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000208538         extern function code
                     exit@@GLIBC_2.2.5:
0000000000208540         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000208548         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000208550         extern function code
                     _ITM_registerTMCloneTable_208558:        // _ITM_registerTMCloneTable
0000000000208558         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000208560         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000208568         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000208570         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000208578         extern function code
