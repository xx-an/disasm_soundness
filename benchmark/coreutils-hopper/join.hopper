
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/join
        UUID: 9A6D49B1-AB32-E7F3-76F4-E30A3F08FE6B
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x9e18[ (40472 bytes)
        ; File offset : [0; 40472[ (40472 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x30 ; '0'
0000000000000019         db  0x29 ; ')'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x50 ; 'P'
0000000000000029         db  0x4d ; 'M'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x18 ; '.'
00000000000000d1         db  0x9e ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x18 ; '.'
00000000000000d9         db  0x9e ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xb0 ; '.'
00000000000000f1         db  0xaa ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xb0 ; '.'
00000000000000f9         db  0xaa ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xb0 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0xaa ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0xf0 ; '.'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x90 ; '.'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x18 ; '.'
0000000000000129         db  0xac ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x18 ; '.'
0000000000000131         db  0xac ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x18 ; '.'
0000000000000139         db  0xac ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xa8 ; '.'
0000000000000199         db  0x89 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xa8 ; '.'
00000000000001a1         db  0x89 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xa8 ; '.'
00000000000001a9         db  0x89 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x34 ; '4'
00000000000001b1         db  0x03 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x34 ; '4'
00000000000001b9         db  0x03 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoul+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0xb0 ; '.'
0000000000000209         db  0xaa ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xb0 ; '.'
0000000000000211         db  0xaa ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xb0 ; '.'
0000000000000219         db  0xaa ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x50 ; 'P'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x50 ; 'P'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x9a ; '.'
0000000000000285         db  0x6d ; 'm'
0000000000000286         db  0x49 ; 'I'
0000000000000287         db  0xb1 ; '.'
0000000000000288         db  0xab ; '.'
0000000000000289         db  0x32 ; '2'
000000000000028a         db  0xe7 ; '.'
000000000000028b         db  0xf3 ; '.'
000000000000028c         db  0x76 ; 'v'
000000000000028d         db  0xf4 ; '.'
000000000000028e         db  0xe3 ; '.'
000000000000028f         db  0x0a ; '.'
0000000000000290         db  0x3f ; '?'
0000000000000291         db  0x08 ; '.'
0000000000000292         db  0xfe ; '.'
0000000000000293         db  0x6b ; 'k'
0000000000000294         db  0x40 ; '@'
0000000000000295         db  0x62 ; 'b'
0000000000000296         db  0x0c ; '.'
0000000000000297         db  0x13 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x3d ; '='
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x3d ; '='
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x3e ; '>'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x44 ; 'D'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x970[ (1680 bytes)
        ; File offset : [736; 2416[ (1680 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0xe5 ; '.'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x59 ; 'Y'
0000000000000311         db  0x01 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x6f ; 'o'
0000000000000329         db  0x02 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x80 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x01 ; '.'
0000000000000359         db  0x01 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x37 ; '7'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xd3 ; '.'
0000000000000389         db  0x02 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x20 ; ' '
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x8c ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xae ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x08 ; '.'
00000000000003d1         db  0x02 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x12 ; '.'                                         ; DATA XREF=xstrtoul+420
00000000000003e9         db  0x02 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x3b ; ';'                                         ; DATA XREF=xstrtoul+437, xstrtoul+806, xstrtoul+878, rpl_fcntl+288
0000000000000401         db  0x01 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x0e ; '.'
0000000000000419         db  0x02 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x4e ; 'N'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xc7 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0xf3 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x5e ; '^'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x94 ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x29 ; ')'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0xb9 ; '.'
00000000000004c1         db  0x01 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x55 ; 'U'
00000000000004d9         db  0x02 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x46 ; 'F'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x2e ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xb9 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xfa ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x3c ; '<'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xde ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x92 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x34 ; '4'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x12 ; '.'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x60 ; '`'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xec ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x2d ; '-'
00000000000005f9         db  0x02 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0xef ; '.'
0000000000000611         db  0x02 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x20 ; ' '
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x34 ; '4'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0xa0 ; '.'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x4a ; 'J'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x0b ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x61 ; 'a'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x4d ; 'M'
00000000000006a1         db  0x02 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x99 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x82 ; '.'
00000000000006d1         db  0x01 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x1d ; '.'
00000000000006e9         db  0x02 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x78 ; 'x'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0xde ; '.'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x1f ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x12 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x58 ; 'X'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x46 ; 'F'
0000000000000779         db  0x02 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x31 ; '1'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x42 ; 'B'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x8f ; '.'
00000000000007c1         db  0x02 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x8d ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xa7 ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x19 ; '.'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xfe ; '.'
0000000000000821         db  0x02 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x20 ; ' '
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x51 ; 'Q'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x6f ; 'o'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xf9 ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x22 ; '"'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x6d ; 'm'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x27 ; '''
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xa8 ; '.'
00000000000008a1         db  0xb0 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x74 ; 't'
00000000000008b1         db  0x02 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xa0 ; '.'
00000000000008b9         db  0xb0 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x86 ; '.'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x11 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0xb0 ; '.'
00000000000008d1         db  0xb0 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x08 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0xa1 ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x21 ; '!'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x19 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0xc8 ; '.'
00000000000008e9         db  0xb0 ; '.'
00000000000008ea         db  0x20 ; ' '
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x08 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x7f ; '.'
00000000000008f9         db  0x02 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x11 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x19 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0xc8 ; '.'
0000000000000901         db  0xb0 ; '.'
0000000000000902         db  0x20 ; ' '
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x08 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0xc0 ; '.'
0000000000000911         db  0x01 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x21 ; '!'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x19 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0xa0 ; '.'
0000000000000919         db  0xb0 ; '.'
000000000000091a         db  0x20 ; ' '
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x08 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x8d ; '.'
0000000000000929         db  0x01 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x11 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x19 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0xe0 ; '.'
0000000000000931         db  0xb0 ; '.'
0000000000000932         db  0x20 ; ' '
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x08 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x3f ; '?'
0000000000000941         db  0x00 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x11 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x19 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0xb8 ; '.'
0000000000000949         db  0xb0 ; '.'
000000000000094a         db  0x20 ; ' '
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x04 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x7b ; '{'
0000000000000959         db  0x01 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x11 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x19 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0xc0 ; '.'
0000000000000961         db  0xb0 ; '.'
0000000000000962         db  0x20 ; ' '
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x08 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x970; 0xc88[ (792 bytes)
        ; File offset : [2416; 3208[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000970         db  0x00 ; '.'
0000000000000971         db  0x6c ; 'l'
0000000000000972         db  0x69 ; 'i'
0000000000000973         db  0x62 ; 'b'
0000000000000974         db  0x63 ; 'c'
0000000000000975         db  0x2e ; '.'
0000000000000976         db  0x73 ; 's'
0000000000000977         db  0x6f ; 'o'
0000000000000978         db  0x2e ; '.'
0000000000000979         db  0x36 ; '6'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x66 ; 'f'
000000000000097c         db  0x66 ; 'f'
000000000000097d         db  0x6c ; 'l'
000000000000097e         db  0x75 ; 'u'
000000000000097f         db  0x73 ; 's'
0000000000000980         db  0x68 ; 'h'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x5f ; '_'
0000000000000983         db  0x5f ; '_'
0000000000000984         db  0x70 ; 'p'
0000000000000985         db  0x72 ; 'r'
0000000000000986         db  0x69 ; 'i'
0000000000000987         db  0x6e ; 'n'
0000000000000988         db  0x74 ; 't'
0000000000000989         db  0x66 ; 'f'
000000000000098a         db  0x5f ; '_'
000000000000098b         db  0x63 ; 'c'
000000000000098c         db  0x68 ; 'h'
000000000000098d         db  0x6b ; 'k'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x73 ; 's'
0000000000000990         db  0x65 ; 'e'
0000000000000991         db  0x74 ; 't'
0000000000000992         db  0x6c ; 'l'
0000000000000993         db  0x6f ; 'o'
0000000000000994         db  0x63 ; 'c'
0000000000000995         db  0x61 ; 'a'
0000000000000996         db  0x6c ; 'l'
0000000000000997         db  0x65 ; 'e'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x6d ; 'm'
000000000000099a         db  0x62 ; 'b'
000000000000099b         db  0x72 ; 'r'
000000000000099c         db  0x74 ; 't'
000000000000099d         db  0x6f ; 'o'
000000000000099e         db  0x77 ; 'w'
000000000000099f         db  0x63 ; 'c'
00000000000009a0         db  0x00 ; '.'
00000000000009a1         db  0x66 ; 'f'
00000000000009a2         db  0x6f ; 'o'
00000000000009a3         db  0x70 ; 'p'
00000000000009a4         db  0x65 ; 'e'
00000000000009a5         db  0x6e ; 'n'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x73 ; 's'
00000000000009a8         db  0x74 ; 't'
00000000000009a9         db  0x72 ; 'r'
00000000000009aa         db  0x6e ; 'n'
00000000000009ab         db  0x63 ; 'c'
00000000000009ac         db  0x6d ; 'm'
00000000000009ad         db  0x70 ; 'p'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x6f ; 'o'
00000000000009b0         db  0x70 ; 'p'
00000000000009b1         db  0x74 ; 't'
00000000000009b2         db  0x69 ; 'i'
00000000000009b3         db  0x6e ; 'n'
00000000000009b4         db  0x64 ; 'd'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x73 ; 's'
00000000000009b7         db  0x74 ; 't'
00000000000009b8         db  0x72 ; 'r'
00000000000009b9         db  0x72 ; 'r'
00000000000009ba         db  0x63 ; 'c'
00000000000009bb         db  0x68 ; 'h'
00000000000009bc         db  0x72 ; 'r'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x64 ; 'd'
00000000000009bf         db  0x63 ; 'c'
00000000000009c0         db  0x67 ; 'g'
00000000000009c1         db  0x65 ; 'e'
00000000000009c2         db  0x74 ; 't'
00000000000009c3         db  0x74 ; 't'
00000000000009c4         db  0x65 ; 'e'
00000000000009c5         db  0x78 ; 'x'
00000000000009c6         db  0x74 ; 't'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x65 ; 'e'
00000000000009c9         db  0x72 ; 'r'
00000000000009ca         db  0x72 ; 'r'
00000000000009cb         db  0x6f ; 'o'
00000000000009cc         db  0x72 ; 'r'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x5f ; '_'
00000000000009cf         db  0x5f ; '_'
00000000000009d0         db  0x73 ; 's'
00000000000009d1         db  0x74 ; 't'
00000000000009d2         db  0x61 ; 'a'
00000000000009d3         db  0x63 ; 'c'
00000000000009d4         db  0x6b ; 'k'
00000000000009d5         db  0x5f ; '_'
00000000000009d6         db  0x63 ; 'c'
00000000000009d7         db  0x68 ; 'h'
00000000000009d8         db  0x6b ; 'k'
00000000000009d9         db  0x5f ; '_'
00000000000009da         db  0x66 ; 'f'
00000000000009db         db  0x61 ; 'a'
00000000000009dc         db  0x69 ; 'i'
00000000000009dd         db  0x6c ; 'l'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x69 ; 'i'
00000000000009e0         db  0x73 ; 's'
00000000000009e1         db  0x77 ; 'w'
00000000000009e2         db  0x70 ; 'p'
00000000000009e3         db  0x72 ; 'r'
00000000000009e4         db  0x69 ; 'i'
00000000000009e5         db  0x6e ; 'n'
00000000000009e6         db  0x74 ; 't'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x72 ; 'r'
00000000000009e9         db  0x65 ; 'e'
00000000000009ea         db  0x61 ; 'a'
00000000000009eb         db  0x6c ; 'l'
00000000000009ec         db  0x6c ; 'l'
00000000000009ed         db  0x6f ; 'o'
00000000000009ee         db  0x63 ; 'c'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x61 ; 'a'
00000000000009f1         db  0x62 ; 'b'
00000000000009f2         db  0x6f ; 'o'
00000000000009f3         db  0x72 ; 'r'
00000000000009f4         db  0x74 ; 't'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x73 ; 's'
00000000000009f7         db  0x74 ; 't'
00000000000009f8         db  0x64 ; 'd'
00000000000009f9         db  0x69 ; 'i'
00000000000009fa         db  0x6e ; 'n'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x5f ; '_'
00000000000009fd         db  0x65 ; 'e'
00000000000009fe         db  0x78 ; 'x'
00000000000009ff         db  0x69 ; 'i'
0000000000000a00         db  0x74 ; 't'
0000000000000a01         db  0x00 ; '.'
0000000000000a02         db  0x6d ; 'm'
0000000000000a03         db  0x65 ; 'e'
0000000000000a04         db  0x6d ; 'm'
0000000000000a05         db  0x63 ; 'c'
0000000000000a06         db  0x68 ; 'h'
0000000000000a07         db  0x72 ; 'r'
0000000000000a08         db  0x00 ; '.'
0000000000000a09         db  0x73 ; 's'
0000000000000a0a         db  0x74 ; 't'
0000000000000a0b         db  0x72 ; 'r'
0000000000000a0c         db  0x70 ; 'p'
0000000000000a0d         db  0x62 ; 'b'
0000000000000a0e         db  0x72 ; 'r'
0000000000000a0f         db  0x6b ; 'k'
0000000000000a10         db  0x00 ; '.'
0000000000000a11         db  0x70 ; 'p'
0000000000000a12         db  0x72 ; 'r'
0000000000000a13         db  0x6f ; 'o'
0000000000000a14         db  0x67 ; 'g'
0000000000000a15         db  0x72 ; 'r'
0000000000000a16         db  0x61 ; 'a'
0000000000000a17         db  0x6d ; 'm'
0000000000000a18         db  0x5f ; '_'
0000000000000a19         db  0x69 ; 'i'
0000000000000a1a         db  0x6e ; 'n'
0000000000000a1b         db  0x76 ; 'v'
0000000000000a1c         db  0x6f ; 'o'
0000000000000a1d         db  0x63 ; 'c'
0000000000000a1e         db  0x61 ; 'a'
0000000000000a1f         db  0x74 ; 't'
0000000000000a20         db  0x69 ; 'i'
0000000000000a21         db  0x6f ; 'o'
0000000000000a22         db  0x6e ; 'n'
0000000000000a23         db  0x5f ; '_'
0000000000000a24         db  0x6e ; 'n'
0000000000000a25         db  0x61 ; 'a'
0000000000000a26         db  0x6d ; 'm'
0000000000000a27         db  0x65 ; 'e'
0000000000000a28         db  0x00 ; '.'
0000000000000a29         db  0x5f ; '_'
0000000000000a2a         db  0x5f ; '_'
0000000000000a2b         db  0x61 ; 'a'
0000000000000a2c         db  0x73 ; 's'
0000000000000a2d         db  0x73 ; 's'
0000000000000a2e         db  0x65 ; 'e'
0000000000000a2f         db  0x72 ; 'r'
0000000000000a30         db  0x74 ; 't'
0000000000000a31         db  0x5f ; '_'
0000000000000a32         db  0x66 ; 'f'
0000000000000a33         db  0x61 ; 'a'
0000000000000a34         db  0x69 ; 'i'
0000000000000a35         db  0x6c ; 'l'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x5f ; '_'
0000000000000a38         db  0x5f ; '_'
0000000000000a39         db  0x63 ; 'c'
0000000000000a3a         db  0x74 ; 't'
0000000000000a3b         db  0x79 ; 'y'
0000000000000a3c         db  0x70 ; 'p'
0000000000000a3d         db  0x65 ; 'e'
0000000000000a3e         db  0x5f ; '_'
0000000000000a3f         db  0x67 ; 'g'
0000000000000a40         db  0x65 ; 'e'
0000000000000a41         db  0x74 ; 't'
0000000000000a42         db  0x5f ; '_'
0000000000000a43         db  0x6d ; 'm'
0000000000000a44         db  0x62 ; 'b'
0000000000000a45         db  0x5f ; '_'
0000000000000a46         db  0x63 ; 'c'
0000000000000a47         db  0x75 ; 'u'
0000000000000a48         db  0x72 ; 'r'
0000000000000a49         db  0x5f ; '_'
0000000000000a4a         db  0x6d ; 'm'
0000000000000a4b         db  0x61 ; 'a'
0000000000000a4c         db  0x78 ; 'x'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x70 ; 'p'
0000000000000a4f         db  0x6f ; 'o'
0000000000000a50         db  0x73 ; 's'
0000000000000a51         db  0x69 ; 'i'
0000000000000a52         db  0x78 ; 'x'
0000000000000a53         db  0x5f ; '_'
0000000000000a54         db  0x66 ; 'f'
0000000000000a55         db  0x61 ; 'a'
0000000000000a56         db  0x64 ; 'd'
0000000000000a57         db  0x76 ; 'v'
0000000000000a58         db  0x69 ; 'i'
0000000000000a59         db  0x73 ; 's'
0000000000000a5a         db  0x65 ; 'e'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x63 ; 'c'
0000000000000a5d         db  0x61 ; 'a'
0000000000000a5e         db  0x6c ; 'l'
0000000000000a5f         db  0x6c ; 'l'
0000000000000a60         db  0x6f ; 'o'
0000000000000a61         db  0x63 ; 'c'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x73 ; 's'
0000000000000a64         db  0x74 ; 't'
0000000000000a65         db  0x72 ; 'r'
0000000000000a66         db  0x6c ; 'l'
0000000000000a67         db  0x65 ; 'e'
0000000000000a68         db  0x6e ; 'n'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x6d ; 'm'
0000000000000a6b         db  0x65 ; 'e'
0000000000000a6c         db  0x6d ; 'm'
0000000000000a6d         db  0x73 ; 's'
0000000000000a6e         db  0x65 ; 'e'
0000000000000a6f         db  0x74 ; 't'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x5f ; '_'
0000000000000a72         db  0x5f ; '_'
0000000000000a73         db  0x65 ; 'e'
0000000000000a74         db  0x72 ; 'r'
0000000000000a75         db  0x72 ; 'r'
0000000000000a76         db  0x6e ; 'n'
0000000000000a77         db  0x6f ; 'o'
0000000000000a78         db  0x5f ; '_'
0000000000000a79         db  0x6c ; 'l'
0000000000000a7a         db  0x6f ; 'o'
0000000000000a7b         db  0x63 ; 'c'
0000000000000a7c         db  0x61 ; 'a'
0000000000000a7d         db  0x74 ; 't'
0000000000000a7e         db  0x69 ; 'i'
0000000000000a7f         db  0x6f ; 'o'
0000000000000a80         db  0x6e ; 'n'
0000000000000a81         db  0x00 ; '.'
0000000000000a82         db  0x6d ; 'm'
0000000000000a83         db  0x65 ; 'e'
0000000000000a84         db  0x6d ; 'm'
0000000000000a85         db  0x63 ; 'c'
0000000000000a86         db  0x6d ; 'm'
0000000000000a87         db  0x70 ; 'p'
0000000000000a88         db  0x00 ; '.'
0000000000000a89         db  0x5f ; '_'
0000000000000a8a         db  0x5f ; '_'
0000000000000a8b         db  0x66 ; 'f'
0000000000000a8c         db  0x70 ; 'p'
0000000000000a8d         db  0x72 ; 'r'
0000000000000a8e         db  0x69 ; 'i'
0000000000000a8f         db  0x6e ; 'n'
0000000000000a90         db  0x74 ; 't'
0000000000000a91         db  0x66 ; 'f'
0000000000000a92         db  0x5f ; '_'
0000000000000a93         db  0x63 ; 'c'
0000000000000a94         db  0x68 ; 'h'
0000000000000a95         db  0x6b ; 'k'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x73 ; 's'
0000000000000a98         db  0x74 ; 't'
0000000000000a99         db  0x64 ; 'd'
0000000000000a9a         db  0x6f ; 'o'
0000000000000a9b         db  0x75 ; 'u'
0000000000000a9c         db  0x74 ; 't'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x6c ; 'l'
0000000000000a9f         db  0x73 ; 's'
0000000000000aa0         db  0x65 ; 'e'
0000000000000aa1         db  0x65 ; 'e'
0000000000000aa2         db  0x6b ; 'k'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x6d ; 'm'
0000000000000aa5         db  0x65 ; 'e'
0000000000000aa6         db  0x6d ; 'm'
0000000000000aa7         db  0x63 ; 'c'
0000000000000aa8         db  0x70 ; 'p'
0000000000000aa9         db  0x79 ; 'y'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x66 ; 'f'
0000000000000aac         db  0x63 ; 'c'
0000000000000aad         db  0x6c ; 'l'
0000000000000aae         db  0x6f ; 'o'
0000000000000aaf         db  0x73 ; 's'
0000000000000ab0         db  0x65 ; 'e'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x73 ; 's'
0000000000000ab3         db  0x74 ; 't'
0000000000000ab4         db  0x72 ; 'r'
0000000000000ab5         db  0x74 ; 't'
0000000000000ab6         db  0x6f ; 'o'
0000000000000ab7         db  0x75 ; 'u'
0000000000000ab8         db  0x6c ; 'l'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x6d ; 'm'
0000000000000abb         db  0x61 ; 'a'
0000000000000abc         db  0x6c ; 'l'
0000000000000abd         db  0x6c ; 'l'
0000000000000abe         db  0x6f ; 'o'
0000000000000abf         db  0x63 ; 'c'
0000000000000ac0         db  0x00 ; '.'
0000000000000ac1         db  0x6d ; 'm'
0000000000000ac2         db  0x62 ; 'b'
0000000000000ac3         db  0x73 ; 's'
0000000000000ac4         db  0x69 ; 'i'
0000000000000ac5         db  0x6e ; 'n'
0000000000000ac6         db  0x69 ; 'i'
0000000000000ac7         db  0x74 ; 't'
0000000000000ac8         db  0x00 ; '.'
0000000000000ac9         db  0x5f ; '_'
0000000000000aca         db  0x5f ; '_'
0000000000000acb         db  0x75 ; 'u'
0000000000000acc         db  0x66 ; 'f'
0000000000000acd         db  0x6c ; 'l'
0000000000000ace         db  0x6f ; 'o'
0000000000000acf         db  0x77 ; 'w'
0000000000000ad0         db  0x00 ; '.'
0000000000000ad1         db  0x6e ; 'n'
0000000000000ad2         db  0x6c ; 'l'
0000000000000ad3         db  0x5f ; '_'
0000000000000ad4         db  0x6c ; 'l'
0000000000000ad5         db  0x61 ; 'a'
0000000000000ad6         db  0x6e ; 'n'
0000000000000ad7         db  0x67 ; 'g'
0000000000000ad8         db  0x69 ; 'i'
0000000000000ad9         db  0x6e ; 'n'
0000000000000ada         db  0x66 ; 'f'
0000000000000adb         db  0x6f ; 'o'
0000000000000adc         db  0x00 ; '.'
0000000000000add         db  0x5f ; '_'
0000000000000ade         db  0x5f ; '_'
0000000000000adf         db  0x63 ; 'c'
0000000000000ae0         db  0x74 ; 't'
0000000000000ae1         db  0x79 ; 'y'
0000000000000ae2         db  0x70 ; 'p'
0000000000000ae3         db  0x65 ; 'e'
0000000000000ae4         db  0x5f ; '_'
0000000000000ae5         db  0x62 ; 'b'
0000000000000ae6         db  0x5f ; '_'
0000000000000ae7         db  0x6c ; 'l'
0000000000000ae8         db  0x6f ; 'o'
0000000000000ae9         db  0x63 ; 'c'
0000000000000aea         db  0x00 ; '.'
0000000000000aeb         db  0x6f ; 'o'
0000000000000aec         db  0x70 ; 'p'
0000000000000aed         db  0x74 ; 't'
0000000000000aee         db  0x61 ; 'a'
0000000000000aef         db  0x72 ; 'r'
0000000000000af0         db  0x67 ; 'g'
0000000000000af1         db  0x00 ; '.'
0000000000000af2         db  0x5f ; '_'
0000000000000af3         db  0x5f ; '_'
0000000000000af4         db  0x66 ; 'f'
0000000000000af5         db  0x72 ; 'r'
0000000000000af6         db  0x65 ; 'e'
0000000000000af7         db  0x61 ; 'a'
0000000000000af8         db  0x64 ; 'd'
0000000000000af9         db  0x69 ; 'i'
0000000000000afa         db  0x6e ; 'n'
0000000000000afb         db  0x67 ; 'g'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x73 ; 's'
0000000000000afe         db  0x74 ; 't'
0000000000000aff         db  0x64 ; 'd'
0000000000000b00         db  0x65 ; 'e'
0000000000000b01         db  0x72 ; 'r'
0000000000000b02         db  0x72 ; 'r'
0000000000000b03         db  0x00 ; '.'
0000000000000b04         db  0x67 ; 'g'
0000000000000b05         db  0x65 ; 'e'
0000000000000b06         db  0x74 ; 't'
0000000000000b07         db  0x6f ; 'o'
0000000000000b08         db  0x70 ; 'p'
0000000000000b09         db  0x74 ; 't'
0000000000000b0a         db  0x5f ; '_'
0000000000000b0b         db  0x6c ; 'l'
0000000000000b0c         db  0x6f ; 'o'
0000000000000b0d         db  0x6e ; 'n'
0000000000000b0e         db  0x67 ; 'g'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0x66 ; 'f'
0000000000000b11         db  0x69 ; 'i'
0000000000000b12         db  0x6c ; 'l'
0000000000000b13         db  0x65 ; 'e'
0000000000000b14         db  0x6e ; 'n'
0000000000000b15         db  0x6f ; 'o'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x66 ; 'f'
0000000000000b18         db  0x77 ; 'w'
0000000000000b19         db  0x72 ; 'r'
0000000000000b1a         db  0x69 ; 'i'
0000000000000b1b         db  0x74 ; 't'
0000000000000b1c         db  0x65 ; 'e'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x5f ; '_'
0000000000000b1f         db  0x5f ; '_'
0000000000000b20         db  0x66 ; 'f'
0000000000000b21         db  0x70 ; 'p'
0000000000000b22         db  0x65 ; 'e'
0000000000000b23         db  0x6e ; 'n'
0000000000000b24         db  0x64 ; 'd'
0000000000000b25         db  0x69 ; 'i'
0000000000000b26         db  0x6e ; 'n'
0000000000000b27         db  0x67 ; 'g'
0000000000000b28         db  0x00 ; '.'
0000000000000b29         db  0x73 ; 's'
0000000000000b2a         db  0x74 ; 't'
0000000000000b2b         db  0x72 ; 'r'
0000000000000b2c         db  0x63 ; 'c'
0000000000000b2d         db  0x68 ; 'h'
0000000000000b2e         db  0x72 ; 'r'
0000000000000b2f         db  0x00 ; '.'
0000000000000b30         db  0x70 ; 'p'
0000000000000b31         db  0x72 ; 'r'
0000000000000b32         db  0x6f ; 'o'
0000000000000b33         db  0x67 ; 'g'
0000000000000b34         db  0x72 ; 'r'
0000000000000b35         db  0x61 ; 'a'
0000000000000b36         db  0x6d ; 'm'
0000000000000b37         db  0x5f ; '_'
0000000000000b38         db  0x69 ; 'i'
0000000000000b39         db  0x6e ; 'n'
0000000000000b3a         db  0x76 ; 'v'
0000000000000b3b         db  0x6f ; 'o'
0000000000000b3c         db  0x63 ; 'c'
0000000000000b3d         db  0x61 ; 'a'
0000000000000b3e         db  0x74 ; 't'
0000000000000b3f         db  0x69 ; 'i'
0000000000000b40         db  0x6f ; 'o'
                     aNshortname:
0000000000000b41         db         "n_short_name", 0
0000000000000b4e         db  0x66 ; 'f'
0000000000000b4f         db  0x64 ; 'd'
0000000000000b50         db  0x6f ; 'o'
0000000000000b51         db  0x70 ; 'p'
0000000000000b52         db  0x65 ; 'e'
0000000000000b53         db  0x6e ; 'n'
0000000000000b54         db  0x00 ; '.'
0000000000000b55         db  0x5f ; '_'
0000000000000b56         db  0x5f ; '_'
0000000000000b57         db  0x63 ; 'c'
0000000000000b58         db  0x74 ; 't'
0000000000000b59         db  0x79 ; 'y'
0000000000000b5a         db  0x70 ; 'p'
0000000000000b5b         db  0x65 ; 'e'
0000000000000b5c         db  0x5f ; '_'
0000000000000b5d         db  0x74 ; 't'
0000000000000b5e         db  0x6f ; 'o'
0000000000000b5f         db  0x75 ; 'u'
0000000000000b60         db  0x70 ; 'p'
0000000000000b61         db  0x70 ; 'p'
0000000000000b62         db  0x65 ; 'e'
0000000000000b63         db  0x72 ; 'r'
0000000000000b64         db  0x5f ; '_'
0000000000000b65         db  0x6c ; 'l'
0000000000000b66         db  0x6f ; 'o'
0000000000000b67         db  0x63 ; 'c'
0000000000000b68         db  0x00 ; '.'
0000000000000b69         db  0x5f ; '_'
0000000000000b6a         db  0x5f ; '_'
0000000000000b6b         db  0x63 ; 'c'
0000000000000b6c         db  0x78 ; 'x'
0000000000000b6d         db  0x61 ; 'a'
0000000000000b6e         db  0x5f ; '_'
0000000000000b6f         db  0x66 ; 'f'
0000000000000b70         db  0x69 ; 'i'
0000000000000b71         db  0x6e ; 'n'
0000000000000b72         db  0x61 ; 'a'
0000000000000b73         db  0x6c ; 'l'
0000000000000b74         db  0x69 ; 'i'
0000000000000b75         db  0x7a ; 'z'
0000000000000b76         db  0x65 ; 'e'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x66 ; 'f'
0000000000000b79         db  0x63 ; 'c'
0000000000000b7a         db  0x6e ; 'n'
0000000000000b7b         db  0x74 ; 't'
0000000000000b7c         db  0x6c ; 'l'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x62 ; 'b'
0000000000000b7f         db  0x69 ; 'i'
0000000000000b80         db  0x6e ; 'n'
0000000000000b81         db  0x64 ; 'd'
0000000000000b82         db  0x74 ; 't'
0000000000000b83         db  0x65 ; 'e'
0000000000000b84         db  0x78 ; 'x'
0000000000000b85         db  0x74 ; 't'
0000000000000b86         db  0x64 ; 'd'
0000000000000b87         db  0x6f ; 'o'
0000000000000b88         db  0x6d ; 'm'
0000000000000b89         db  0x61 ; 'a'
0000000000000b8a         db  0x69 ; 'i'
0000000000000b8b         db  0x6e ; 'n'
0000000000000b8c         db  0x00 ; '.'
0000000000000b8d         db  0x66 ; 'f'
0000000000000b8e         db  0x77 ; 'w'
0000000000000b8f         db  0x72 ; 'r'
0000000000000b90         db  0x69 ; 'i'
0000000000000b91         db  0x74 ; 't'
0000000000000b92         db  0x65 ; 'e'
0000000000000b93         db  0x5f ; '_'
0000000000000b94         db  0x75 ; 'u'
0000000000000b95         db  0x6e ; 'n'
0000000000000b96         db  0x6c ; 'l'
0000000000000b97         db  0x6f ; 'o'
0000000000000b98         db  0x63 ; 'c'
0000000000000b99         db  0x6b ; 'k'
0000000000000b9a         db  0x65 ; 'e'
0000000000000b9b         db  0x64 ; 'd'
0000000000000b9c         db  0x00 ; '.'
0000000000000b9d         db  0x73 ; 's'
0000000000000b9e         db  0x74 ; 't'
0000000000000b9f         db  0x72 ; 'r'
0000000000000ba0         db  0x63 ; 'c'
0000000000000ba1         db  0x6d ; 'm'
0000000000000ba2         db  0x70 ; 'p'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x5f ; '_'
0000000000000ba5         db  0x5f ; '_'
0000000000000ba6         db  0x6c ; 'l'
0000000000000ba7         db  0x69 ; 'i'
0000000000000ba8         db  0x62 ; 'b'
0000000000000ba9         db  0x63 ; 'c'
0000000000000baa         db  0x5f ; '_'
0000000000000bab         db  0x73 ; 's'
0000000000000bac         db  0x74 ; 't'
0000000000000bad         db  0x61 ; 'a'
0000000000000bae         db  0x72 ; 'r'
0000000000000baf         db  0x74 ; 't'
0000000000000bb0         db  0x5f ; '_'
0000000000000bb1         db  0x6d ; 'm'
0000000000000bb2         db  0x61 ; 'a'
0000000000000bb3         db  0x69 ; 'i'
0000000000000bb4         db  0x6e ; 'n'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x66 ; 'f'
0000000000000bb7         db  0x73 ; 's'
0000000000000bb8         db  0x65 ; 'e'
0000000000000bb9         db  0x65 ; 'e'
0000000000000bba         db  0x6b ; 'k'
0000000000000bbb         db  0x6f ; 'o'
0000000000000bbc         db  0x00 ; '.'
0000000000000bbd         db  0x73 ; 's'
0000000000000bbe         db  0x74 ; 't'
0000000000000bbf         db  0x72 ; 'r'
0000000000000bc0         db  0x63 ; 'c'
0000000000000bc1         db  0x6f ; 'o'
0000000000000bc2         db  0x6c ; 'l'
0000000000000bc3         db  0x6c ; 'l'
0000000000000bc4         db  0x00 ; '.'
0000000000000bc5         db  0x5f ; '_'
0000000000000bc6         db  0x5f ; '_'
0000000000000bc7         db  0x6f ; 'o'
0000000000000bc8         db  0x76 ; 'v'
0000000000000bc9         db  0x65 ; 'e'
0000000000000bca         db  0x72 ; 'r'
0000000000000bcb         db  0x66 ; 'f'
0000000000000bcc         db  0x6c ; 'l'
0000000000000bcd         db  0x6f ; 'o'
0000000000000bce         db  0x77 ; 'w'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x66 ; 'f'
0000000000000bd1         db  0x70 ; 'p'
0000000000000bd2         db  0x75 ; 'u'
0000000000000bd3         db  0x74 ; 't'
0000000000000bd4         db  0x73 ; 's'
0000000000000bd5         db  0x5f ; '_'
0000000000000bd6         db  0x75 ; 'u'
0000000000000bd7         db  0x6e ; 'n'
0000000000000bd8         db  0x6c ; 'l'
0000000000000bd9         db  0x6f ; 'o'
0000000000000bda         db  0x63 ; 'c'
0000000000000bdb         db  0x6b ; 'k'
0000000000000bdc         db  0x65 ; 'e'
0000000000000bdd         db  0x64 ; 'd'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x66 ; 'f'
0000000000000be0         db  0x72 ; 'r'
0000000000000be1         db  0x65 ; 'e'
0000000000000be2         db  0x65 ; 'e'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x5f ; '_'
0000000000000be5         db  0x5f ; '_'
0000000000000be6         db  0x70 ; 'p'
0000000000000be7         db  0x72 ; 'r'
0000000000000be8         db  0x6f ; 'o'
0000000000000be9         db  0x67 ; 'g'
0000000000000bea         db  0x6e ; 'n'
0000000000000beb         db  0x61 ; 'a'
0000000000000bec         db  0x6d ; 'm'
0000000000000bed         db  0x65 ; 'e'
0000000000000bee         db  0x00 ; '.'
0000000000000bef         db  0x5f ; '_'
0000000000000bf0         db  0x5f ; '_'
0000000000000bf1         db  0x70 ; 'p'
0000000000000bf2         db  0x72 ; 'r'
0000000000000bf3         db  0x6f ; 'o'
0000000000000bf4         db  0x67 ; 'g'
0000000000000bf5         db  0x6e ; 'n'
0000000000000bf6         db  0x61 ; 'a'
0000000000000bf7         db  0x6d ; 'm'
0000000000000bf8         db  0x65 ; 'e'
0000000000000bf9         db  0x5f ; '_'
0000000000000bfa         db  0x66 ; 'f'
0000000000000bfb         db  0x75 ; 'u'
0000000000000bfc         db  0x6c ; 'l'
0000000000000bfd         db  0x6c ; 'l'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x5f ; '_'
                     aCxaatexit:
0000000000000c00         db         "_cxa_atexit", 0
0000000000000c0c         db  0x47 ; 'G'
0000000000000c0d         db  0x4c ; 'L'
0000000000000c0e         db  0x49 ; 'I'
0000000000000c0f         db  0x42 ; 'B'
0000000000000c10         db  0x43 ; 'C'
0000000000000c11         db  0x5f ; '_'
0000000000000c12         db  0x32 ; '2'
0000000000000c13         db  0x2e ; '.'
0000000000000c14         db  0x33 ; '3'
0000000000000c15         db  0x2e ; '.'
0000000000000c16         db  0x34 ; '4'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x47 ; 'G'
0000000000000c19         db  0x4c ; 'L'
0000000000000c1a         db  0x49 ; 'I'
0000000000000c1b         db  0x42 ; 'B'
0000000000000c1c         db  0x43 ; 'C'
0000000000000c1d         db  0x5f ; '_'
0000000000000c1e         db  0x32 ; '2'
0000000000000c1f         db  0x2e ; '.'
0000000000000c20         db  0x31 ; '1'
0000000000000c21         db  0x34 ; '4'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x47 ; 'G'
0000000000000c24         db  0x4c ; 'L'
0000000000000c25         db  0x49 ; 'I'
0000000000000c26         db  0x42 ; 'B'
0000000000000c27         db  0x43 ; 'C'
0000000000000c28         db  0x5f ; '_'
0000000000000c29         db  0x32 ; '2'
0000000000000c2a         db  0x2e ; '.'
0000000000000c2b         db  0x34 ; '4'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x47 ; 'G'
0000000000000c2e         db  0x4c ; 'L'
0000000000000c2f         db  0x49 ; 'I'
0000000000000c30         db  0x42 ; 'B'
0000000000000c31         db  0x43 ; 'C'
0000000000000c32         db  0x5f ; '_'
0000000000000c33         db  0x32 ; '2'
0000000000000c34         db  0x2e ; '.'
0000000000000c35         db  0x32 ; '2'
0000000000000c36         db  0x2e ; '.'
0000000000000c37         db  0x35 ; '5'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x47 ; 'G'
0000000000000c3a         db  0x4c ; 'L'
0000000000000c3b         db  0x49 ; 'I'
0000000000000c3c         db  0x42 ; 'B'
0000000000000c3d         db  0x43 ; 'C'
0000000000000c3e         db  0x5f ; '_'
0000000000000c3f         db  0x32 ; '2'
0000000000000c40         db  0x2e ; '.'
0000000000000c41         db  0x33 ; '3'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x5f ; '_'
0000000000000c44         db  0x49 ; 'I'
0000000000000c45         db  0x54 ; 'T'
0000000000000c46         db  0x4d ; 'M'
0000000000000c47         db  0x5f ; '_'
0000000000000c48         db  0x64 ; 'd'
0000000000000c49         db  0x65 ; 'e'
0000000000000c4a         db  0x72 ; 'r'
0000000000000c4b         db  0x65 ; 'e'
0000000000000c4c         db  0x67 ; 'g'
0000000000000c4d         db  0x69 ; 'i'
0000000000000c4e         db  0x73 ; 's'
0000000000000c4f         db  0x74 ; 't'
0000000000000c50         db  0x65 ; 'e'
0000000000000c51         db  0x72 ; 'r'
0000000000000c52         db  0x54 ; 'T'
0000000000000c53         db  0x4d ; 'M'
0000000000000c54         db  0x43 ; 'C'
0000000000000c55         db  0x6c ; 'l'
0000000000000c56         db  0x6f ; 'o'
0000000000000c57         db  0x6e ; 'n'
0000000000000c58         db  0x65 ; 'e'
0000000000000c59         db  0x54 ; 'T'
0000000000000c5a         db  0x61 ; 'a'
0000000000000c5b         db  0x62 ; 'b'
0000000000000c5c         db  0x6c ; 'l'
0000000000000c5d         db  0x65 ; 'e'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x5f ; '_'
0000000000000c60         db  0x5f ; '_'
0000000000000c61         db  0x67 ; 'g'
0000000000000c62         db  0x6d ; 'm'
0000000000000c63         db  0x6f ; 'o'
0000000000000c64         db  0x6e ; 'n'
0000000000000c65         db  0x5f ; '_'
0000000000000c66         db  0x73 ; 's'
0000000000000c67         db  0x74 ; 't'
0000000000000c68         db  0x61 ; 'a'
0000000000000c69         db  0x72 ; 'r'
0000000000000c6a         db  0x74 ; 't'
0000000000000c6b         db  0x5f ; '_'
0000000000000c6c         db  0x5f ; '_'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x5f ; '_'
0000000000000c6f         db  0x49 ; 'I'
0000000000000c70         db  0x54 ; 'T'
0000000000000c71         db  0x4d ; 'M'
0000000000000c72         db  0x5f ; '_'
0000000000000c73         db  0x72 ; 'r'
0000000000000c74         db  0x65 ; 'e'
0000000000000c75         db  0x67 ; 'g'
0000000000000c76         db  0x69 ; 'i'
0000000000000c77         db  0x73 ; 's'
0000000000000c78         db  0x74 ; 't'
0000000000000c79         db  0x65 ; 'e'
0000000000000c7a         db  0x72 ; 'r'
0000000000000c7b         db  0x54 ; 'T'
0000000000000c7c         db  0x4d ; 'M'
0000000000000c7d         db  0x43 ; 'C'
0000000000000c7e         db  0x6c ; 'l'
0000000000000c7f         db  0x6f ; 'o'
0000000000000c80         db  0x6e ; 'n'
0000000000000c81         db  0x65 ; 'e'
0000000000000c82         db  0x54 ; 'T'
0000000000000c83         db  0x61 ; 'a'
0000000000000c84         db  0x62 ; 'b'
0000000000000c85         db  0x6c ; 'l'
0000000000000c86         db  0x65 ; 'e'
0000000000000c87         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xc88; 0xd14[ (140 bytes)
        ; File offset : [3208; 3348[ (140 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c88         db  0x00 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x02 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x03 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x03 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x03 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x03 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x03 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x03 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x03 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x03 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x03 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x03 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x03 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x03 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x03 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x03 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x04 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x03 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x03 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x03 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x03 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x03 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x03 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x03 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x03 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x03 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x03 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x03 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x03 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x03 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x03 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x03 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x03 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x05 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x03 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x03 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x03 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x03 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x03 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x03 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x03 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x03 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x03 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x03 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x03 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x06 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x03 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x03 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x03 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x03 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x03 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x03 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x03 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x06 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x00 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x03 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x03 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x03 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x02 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x03 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x03 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x03 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x03 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x03 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x03 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x03 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x03 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x03 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xd18; 0xd78[ (96 bytes)
        ; File offset : [3352; 3448[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000d18         db  0x01 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x05 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x01 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x10 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x74 ; 't'
0000000000000d29         db  0x19 ; '.'
0000000000000d2a         db  0x69 ; 'i'
0000000000000d2b         db  0x09 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x06 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x9c ; '.'
0000000000000d31         db  0x02 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x10 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x94 ; '.'
0000000000000d39         db  0x91 ; '.'
0000000000000d3a         db  0x96 ; '.'
0000000000000d3b         db  0x06 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x05 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0xa8 ; '.'
0000000000000d41         db  0x02 ; '.'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x10 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x14 ; '.'
0000000000000d49         db  0x69 ; 'i'
0000000000000d4a         db  0x69 ; 'i'
0000000000000d4b         db  0x0d ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x04 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xb3 ; '.'
0000000000000d51         db  0x02 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x10 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x75 ; 'u'
0000000000000d59         db  0x1a ; '.'
0000000000000d5a         db  0x69 ; 'i'
0000000000000d5b         db  0x09 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x03 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0xbd ; '.'
0000000000000d61         db  0x02 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x10 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x13 ; '.'
0000000000000d69         db  0x69 ; 'i'
0000000000000d6a         db  0x69 ; 'i'
0000000000000d6b         db  0x0d ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x02 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0xc9 ; '.'
0000000000000d71         db  0x02 ; '.'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xd78; 0x10d8[ (864 bytes)
        ; File offset : [3448; 4312[ (864 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000d78         db  0xb0 ; '.'
0000000000000d79         db  0xaa ; '.'
0000000000000d7a         db  0x20 ; ' '
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x08 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x30 ; '0'
0000000000000d89         db  0x2a ; '*'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0xb8 ; '.'
0000000000000d91         db  0xaa ; '.'
0000000000000d92         db  0x20 ; ' '
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x08 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xf0 ; '.'
0000000000000da1         db  0x29 ; ')'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0xc0 ; '.'
0000000000000da9         db  0xaa ; '.'
0000000000000daa         db  0x20 ; ' '
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x08 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x05 ; '.'
0000000000000db9         db  0x7f ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0xe0 ; '.'
0000000000000dc1         db  0xaa ; '.'
0000000000000dc2         db  0x20 ; ' '
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x13 ; '.'
0000000000000dd1         db  0x7f ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x00 ; '.'
0000000000000dd9         db  0xab ; '.'
0000000000000dda         db  0x20 ; ' '
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x08 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x11 ; '.'
0000000000000de9         db  0x7f ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x20 ; ' '
0000000000000df1         db  0xab ; '.'
0000000000000df2         db  0x20 ; ' '
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x1f ; '.'
0000000000000e01         db  0x7f ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x40 ; '@'
0000000000000e09         db  0xab ; '.'
0000000000000e0a         db  0x20 ; ' '
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x08 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x2f ; '/'
0000000000000e19         db  0x7f ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x60 ; '`'
0000000000000e21         db  0xab ; '.'
0000000000000e22         db  0x20 ; ' '
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x08 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x36 ; '6'
0000000000000e31         db  0x7f ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x80 ; '.'
0000000000000e39         db  0xab ; '.'
0000000000000e3a         db  0x20 ; ' '
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x3b ; ';'
0000000000000e49         db  0x7f ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0xc0 ; '.'
0000000000000e51         db  0xab ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x08 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xc1 ; '.'
0000000000000e61         db  0x7f ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0xc8 ; '.'
0000000000000e69         db  0xab ; '.'
0000000000000e6a         db  0x20 ; ' '
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x08 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xc9 ; '.'
0000000000000e79         db  0x7f ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xd0 ; '.'
0000000000000e81         db  0xab ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x08 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xcf ; '.'
0000000000000e91         db  0x7f ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0xd8 ; '.'
0000000000000e99         db  0xab ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x08 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xdc ; '.'
0000000000000ea9         db  0x7f ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0xe0 ; '.'
0000000000000eb1         db  0xab ; '.'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x08 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0xe9 ; '.'
0000000000000ec1         db  0x7f ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0xe8 ; '.'
0000000000000ec9         db  0xab ; '.'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x08 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0xfd ; '.'
0000000000000ed9         db  0x7f ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0xf0 ; '.'
0000000000000ee1         db  0xab ; '.'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x08 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0xff ; '.'
0000000000000ef1         db  0x7f ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0xf8 ; '.'
0000000000000ef9         db  0xab ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x08 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0xe2 ; '.'
0000000000000f09         db  0x7f ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x00 ; '.'
0000000000000f11         db  0xac ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x08 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x66 ; 'f'
0000000000000f21         db  0x7e ; '~'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x08 ; '.'
0000000000000f29         db  0xac ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x08 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x07 ; '.'
0000000000000f39         db  0x80 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x08 ; '.'
0000000000000f41         db  0xb0 ; '.'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x08 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x08 ; '.'
0000000000000f51         db  0xb0 ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x28 ; '('
0000000000000f59         db  0xb0 ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x08 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x60 ; '`'
0000000000000f69         db  0xb1 ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x30 ; '0'
0000000000000f71         db  0xb0 ; '.'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x08 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x43 ; 'C'
0000000000000f81         db  0x7f ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x80 ; '.'
0000000000000f89         db  0xb0 ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x08 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x90 ; '.'
0000000000000f99         db  0xb0 ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x98 ; '.'
0000000000000fa1         db  0xb0 ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x08 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x00 ; '.'
0000000000000fb1         db  0xb2 ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0xd8 ; '.'
0000000000000fb9         db  0xaf ; '.'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x06 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x07 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x00 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0xe0 ; '.'
0000000000000fd1         db  0xaf ; '.'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x06 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x1d ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x00 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0xe8 ; '.'
0000000000000fe9         db  0xaf ; '.'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x06 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x22 ; '"'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x00 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0xf0 ; '.'
0000000000001001         db  0xaf ; '.'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x06 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x38 ; '8'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x00 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xf8 ; '.'
0000000000001019         db  0xaf ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x06 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x3b ; ';'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0xa0 ; '.'
0000000000001031         db  0xb0 ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x05 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x3e ; '>'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x00 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0xa8 ; '.'
0000000000001049         db  0xb0 ; '.'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x05 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x3d ; '='
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x00 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0xb0 ; '.'
0000000000001061         db  0xb0 ; '.'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x05 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x3f ; '?'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x00 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0xb8 ; '.'
0000000000001079         db  0xb0 ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x05 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x44 ; 'D'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x00 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0xc0 ; '.'
0000000000001091         db  0xb0 ; '.'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x05 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x45 ; 'E'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x00 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0xc8 ; '.'
00000000000010a9         db  0xb0 ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x05 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x41 ; 'A'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x00 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0xe0 ; '.'
00000000000010c1         db  0xb0 ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x05 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x43 ; 'C'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x10d8; 0x1600[ (1320 bytes)
        ; File offset : [4312; 5632[ (1320 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000010d8         db  0x20 ; ' '
00000000000010d9         db  0xae ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x07 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x01 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x28 ; '('
00000000000010f1         db  0xae ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x07 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x02 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x00 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x30 ; '0'
0000000000001109         db  0xae ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x07 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x03 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x00 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x38 ; '8'
0000000000001121         db  0xae ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x07 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x04 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x40 ; '@'
0000000000001139         db  0xae ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x07 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x05 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x48 ; 'H'
0000000000001151         db  0xae ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x07 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x06 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x50 ; 'P'
0000000000001169         db  0xae ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x07 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x08 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x58 ; 'X'
0000000000001181         db  0xae ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x07 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x09 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x60 ; '`'
0000000000001199         db  0xae ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x07 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x0a ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x68 ; 'h'
00000000000011b1         db  0xae ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x07 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x0b ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x70 ; 'p'
00000000000011c9         db  0xae ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x07 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x0c ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x78 ; 'x'
00000000000011e1         db  0xae ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x07 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x0d ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x80 ; '.'
00000000000011f9         db  0xae ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x07 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x0e ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x88 ; '.'
0000000000001211         db  0xae ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x07 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x0f ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x90 ; '.'
0000000000001229         db  0xae ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x07 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x10 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x98 ; '.'
0000000000001241         db  0xae ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x07 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x11 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0xa0 ; '.'
0000000000001259         db  0xae ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x07 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x12 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0xa8 ; '.'
0000000000001271         db  0xae ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x07 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x13 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0xb0 ; '.'
0000000000001289         db  0xae ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x14 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0xb8 ; '.'
00000000000012a1         db  0xae ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x15 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0xc0 ; '.'
00000000000012b9         db  0xae ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x16 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0xc8 ; '.'
00000000000012d1         db  0xae ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x17 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0xd0 ; '.'
00000000000012e9         db  0xae ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x18 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0xd8 ; '.'
0000000000001301         db  0xae ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x19 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0xe0 ; '.'
0000000000001319         db  0xae ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x1a ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0xe8 ; '.'
0000000000001331         db  0xae ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x1b ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0xf0 ; '.'
0000000000001349         db  0xae ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x1c ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0xf8 ; '.'
0000000000001361         db  0xae ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x1e ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x00 ; '.'
0000000000001379         db  0xaf ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x07 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x1f ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x08 ; '.'
0000000000001391         db  0xaf ; '.'
0000000000001392         db  0x20 ; ' '
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x07 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x20 ; ' '
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x00 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x10 ; '.'
00000000000013a9         db  0xaf ; '.'
00000000000013aa         db  0x20 ; ' '
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x07 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x21 ; '!'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x00 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x18 ; '.'
00000000000013c1         db  0xaf ; '.'
00000000000013c2         db  0x20 ; ' '
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x07 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x23 ; '#'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x20 ; ' '
00000000000013d9         db  0xaf ; '.'
00000000000013da         db  0x20 ; ' '
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x07 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x24 ; '$'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x00 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x28 ; '('
00000000000013f1         db  0xaf ; '.'
00000000000013f2         db  0x20 ; ' '
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x07 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x25 ; '%'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x00 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x30 ; '0'
0000000000001409         db  0xaf ; '.'
000000000000140a         db  0x20 ; ' '
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x07 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x26 ; '&'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x00 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x38 ; '8'
0000000000001421         db  0xaf ; '.'
0000000000001422         db  0x20 ; ' '
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x07 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x27 ; '''
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x40 ; '@'
0000000000001439         db  0xaf ; '.'
000000000000143a         db  0x20 ; ' '
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x07 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x28 ; '('
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x48 ; 'H'
0000000000001451         db  0xaf ; '.'
0000000000001452         db  0x20 ; ' '
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x07 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x29 ; ')'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x00 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x50 ; 'P'
0000000000001469         db  0xaf ; '.'
000000000000146a         db  0x20 ; ' '
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x07 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x2a ; '*'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x58 ; 'X'
0000000000001481         db  0xaf ; '.'
0000000000001482         db  0x20 ; ' '
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x07 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x2b ; '+'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x00 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x60 ; '`'
0000000000001499         db  0xaf ; '.'
000000000000149a         db  0x20 ; ' '
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x07 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x2c ; ','
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x00 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x68 ; 'h'
00000000000014b1         db  0xaf ; '.'
00000000000014b2         db  0x20 ; ' '
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x07 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x2d ; '-'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x00 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x70 ; 'p'
00000000000014c9         db  0xaf ; '.'
00000000000014ca         db  0x20 ; ' '
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x07 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x2e ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x00 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x78 ; 'x'
00000000000014e1         db  0xaf ; '.'
00000000000014e2         db  0x20 ; ' '
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x07 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x2f ; '/'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x00 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x80 ; '.'
00000000000014f9         db  0xaf ; '.'
00000000000014fa         db  0x20 ; ' '
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x07 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x30 ; '0'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x00 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x88 ; '.'
0000000000001511         db  0xaf ; '.'
0000000000001512         db  0x20 ; ' '
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x07 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x31 ; '1'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x00 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x90 ; '.'
0000000000001529         db  0xaf ; '.'
000000000000152a         db  0x20 ; ' '
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x07 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x32 ; '2'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x00 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x98 ; '.'
0000000000001541         db  0xaf ; '.'
0000000000001542         db  0x20 ; ' '
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x07 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x33 ; '3'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x00 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0xa0 ; '.'
0000000000001559         db  0xaf ; '.'
000000000000155a         db  0x20 ; ' '
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x07 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x34 ; '4'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x00 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0xa8 ; '.'
0000000000001571         db  0xaf ; '.'
0000000000001572         db  0x20 ; ' '
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x07 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x35 ; '5'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x00 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0xb0 ; '.'
0000000000001589         db  0xaf ; '.'
000000000000158a         db  0x20 ; ' '
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x07 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x36 ; '6'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x00 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0xb8 ; '.'
00000000000015a1         db  0xaf ; '.'
00000000000015a2         db  0x20 ; ' '
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x07 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x37 ; '7'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x00 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0xc0 ; '.'
00000000000015b9         db  0xaf ; '.'
00000000000015ba         db  0x20 ; ' '
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x07 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x39 ; '9'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x00 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0xc8 ; '.'
00000000000015d1         db  0xaf ; '.'
00000000000015d2         db  0x20 ; ' '
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x07 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x3a ; ':'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x00 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0xd0 ; '.'
00000000000015e9         db  0xaf ; '.'
00000000000015ea         db  0x20 ; ' '
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x07 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x3c ; '<'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x00 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1600; 0x1617[ (23 bytes)
        ; File offset : [5632; 5655[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001600         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001604         mov        rax, qword [qword_20afe8]                   ; qword_20afe8
000000000000160b         test       rax, rax
000000000000160e         je         loc_1612

0000000000001610         call       rax

                     loc_1612:
0000000000001612         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001616         ret
                        ; endp
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x00 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1620; 0x19a0[ (896 bytes)
        ; File offset : [5664; 6560[ (896 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1620:
0000000000001620         push       qword [qword_20ae10]                        ; Begin of unwind block (FDE at 0x8d2c), qword_20ae10, CODE XREF=sub_1636+5
0000000000001626         jmp        qword [qword_20ae10+8]                      ; 0x20ae18
                        ; endp
000000000000162c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_toupper_loc:        // __ctype_toupper_loc
0000000000001630         jmp        qword [__ctype_toupper_loc@GOT]             ; __ctype_toupper_loc, __ctype_toupper_loc@GOT, CODE XREF=memcasecmp+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x0
000000000000163b         jmp        loc_1620


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
0000000000001640         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=readlinebuffer_delim+187
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x1
000000000000164b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001650         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+1779, freeline.part.2+8, freeline.part.2+25, free_spareline+24, free_spareline+53, delseq.isra.3+50, delseq.isra.3+73, freebuffer+4, quotearg_n_options+277, quotearg_free+55, quotearg_free+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x2
000000000000165b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001660         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_4910+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x3
000000000000166b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001670         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+3549, main+3600, main+3644, main+3750, main+3801, get_line+972, close_stdout+22, fopen_safer+93, fopen_safer+120, quotearg_n_options+28, clone_quoting_options+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x4
000000000000167b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001680         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+732, usage+925
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x5
000000000000168b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001690         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x6
000000000000169b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000016a0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x7
00000000000016ab         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
00000000000016b0         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x8
00000000000016bb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000016c0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+126
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x9
00000000000016cb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000016d0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0xa
00000000000016db         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000016e0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+114
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0xb
00000000000016eb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000016f0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+3430, main+3469, main+3505, main+3592, main+3703, main+3848, main+3886, main+3935, set_join_field+47, string_to_join_field+130, add_field_list+190
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0xc
00000000000016fb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001700         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0xd
000000000000170b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001710         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_4910+411, sub_4910+1742, xstrdup+4, strcoll_loop+43, strcoll_loop+55
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0xe
000000000000171b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001720         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+3673, string_to_join_field+155, sub_4910+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, xstrtoul+896
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0xf
000000000000172b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001730         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+330
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x10
000000000000173b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001740         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x11
000000000000174b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001750         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoul+291, xstrtoul+323, xstrtoul+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x12
000000000000175b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001760         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=prfields+251, prfields+267, prjoin+308, prjoin+331
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x13
000000000000176b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001770         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x14
000000000000177b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001780         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x15
000000000000178b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001790         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoul+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x16
000000000000179b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000017a0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x17
00000000000017ab         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
00000000000017b0         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=fopen_safer+106, rpl_fcntl+510
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x18
00000000000017bb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
00000000000017c0         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x19
00000000000017cb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memchr:        // memchr
00000000000017d0         jmp        qword [memchr@GOT]                          ; memchr, memchr@GOT, CODE XREF=get_line+703
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x1a
00000000000017db         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000017e0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=keycmp.isra.4+98, quotearg_buffer_restyled+410, memcoll+37, memcoll0+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x1b
00000000000017eb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000017f0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=prfield.isra.5+67, usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+416, usage+460, usage+1040
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x1c
00000000000017fb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001800         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x1d
000000000000180b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001810         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+894, main+1155, main+1388, main+1434
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x1e
000000000000181b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001820         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x1f
000000000000182b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001830         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, fopen_safer+23, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x20
000000000000183b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001840         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x21
000000000000184b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001850         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x22
000000000000185b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001860         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x23
000000000000186b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcoll:        // strcoll
0000000000001870         jmp        qword [strcoll@GOT]                         ; strcoll, strcoll@GOT, CODE XREF=strcoll_loop+96
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x24
000000000000187b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strpbrk:        // strpbrk
0000000000001880         jmp        qword [strpbrk@GOT]                         ; strpbrk, strpbrk@GOT, CODE XREF=add_field_list+118
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x25
000000000000188b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001890         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x26
000000000000189b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
00000000000018a0         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=prfield.isra.5+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x27
00000000000018ab         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000018b0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x28
00000000000018bb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopen:        // fdopen
00000000000018c0         jmp        qword [fdopen@GOT]                          ; fdopen, fdopen@GOT, CODE XREF=fopen_safer+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x29
00000000000018cb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000018d0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+95, usage+707, usage+900, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x2a
00000000000018db         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000018e0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+695, usage+788, usage+849, usage+888, usage+991, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x2b
00000000000018eb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000018f0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+3450, main+3486, main+3522, main+3573, main+3617, main+3668, main+3723, main+3774, main+3825, main+3862, main+3903
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x2c
00000000000018fb         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001900         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x2d
000000000000190b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001910         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=fopen_safer+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x2e
000000000000191b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtoul:        // strtoul
0000000000001920         jmp        qword [strtoul@GOT]                         ; strtoul, strtoul@GOT, CODE XREF=xstrtoul+140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x2f
000000000000192b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001930         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x30
000000000000193b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001940         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+654, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x31
000000000000194b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001950         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x32
000000000000195b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001960         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x33
000000000000196b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001970         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_4910+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x34
000000000000197b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001980         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_4910+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x35
000000000000198b         jmp        0x1620
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001990         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=get_line+158, sub_46b0+51, xstrtoul+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x36
000000000000199b         jmp        0x1620
                        ; endp


        ; Section .plt.got
        ; Range: [0x19a0; 0x19a8[ (8 bytes)
        ; File offset : [6560; 6568[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20aff8:        // qword_20aff8
00000000000019a0         jmp        qword [qword_20aff8]                        ; qword, End of unwind block (FDE at 0x8d2c), Begin of unwind block (FDE at 0x8d54), qword_20aff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000019a6         align      8
00000000000019a8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8d54)
00000000000019a9         db  0x00 ; '.'
00000000000019aa         db  0x00 ; '.'
00000000000019ab         db  0x00 ; '.'
00000000000019ac         db  0x00 ; '.'
00000000000019ad         db  0x00 ; '.'
00000000000019ae         db  0x00 ; '.'
00000000000019af         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x19b0; 0x72fe[ (22862 bytes)
        ; File offset : [6576; 29438[ (22862 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_48: int64_t, -72
        ;    var_50: int8_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_94: int32_t, -148
        ;    var_98: int32_t, -152
        ;    var_9C: int32_t, -156
        ;    var_A9: int8_t, -169
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192


                     main:
00000000000019b0         push       r15                                         ; Begin of unwind block (FDE at 0x909c), DATA XREF=_start+29
00000000000019b2         push       r14
00000000000019b4         push       r13
00000000000019b6         push       r12
00000000000019b8         push       rbp
00000000000019b9         push       rbx
00000000000019ba         movsxd     rbp, edi
00000000000019bd         mov        rbx, rsi
00000000000019c0         sub        rsp, 0x98
00000000000019c7         mov        rdi, qword [rsi]
00000000000019ca         mov        rax, qword [fs:0x28]
00000000000019d3         mov        qword [rsp+0xc8+var_40], rax
00000000000019db         xor        eax, eax
00000000000019dd         mov        dword [rsp+0xc8+var_98], 0x0
00000000000019e5         mov        qword [rsp+0xc8+var_48], 0x0
00000000000019f1         lea        r15, qword [rsp+0xc8+var_68]
00000000000019f6         mov        dword [rsp+0xc8+var_94], 0x0
00000000000019fe         call       set_program_name                            ; set_program_name
0000000000001a03         lea        rsi, qword [aInvalidFieldNu+28]             ; argument "__locale" for method j_setlocale, 0x7d58
0000000000001a0a         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001a0f         call       j_setlocale                                 ; setlocale
0000000000001a14         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001a1b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001a22         call       j_bindtextdomain                            ; bindtextdomain
0000000000001a27         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001a2e         call       j_textdomain                                ; textdomain
0000000000001a33         mov        edi, 0x3
0000000000001a38         call       hard_locale                                 ; hard_locale
0000000000001a3d         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001a44         mov        byte [hard_LC_COLLATE], al                  ; hard_LC_COLLATE
0000000000001a4a         call       atexit                                      ; atexit
0000000000001a4f         lea        rdi, qword [free_spareline]                 ; argument "__func" for method atexit, free_spareline
0000000000001a56         call       atexit                                      ; atexit
0000000000001a5b         lea        rax, qword [rsp+0xc8+var_9C]
0000000000001a60         mov        byte [print_pairables], 0x1                 ; print_pairables
0000000000001a67         mov        byte [seen_unpairable], 0x0                 ; seen_unpairable
0000000000001a6e         mov        byte [byte_20b199], 0x0                     ; byte_20b199
0000000000001a75         mov        byte [issued_disorder_warning], 0x0         ; issued_disorder_warning
0000000000001a7c         mov        qword [rsp+0xc8+var_C0], rax
0000000000001a81         lea        rax, qword [rsp+0xc8+var_98]
0000000000001a86         mov        dword [check_input_order], 0x0              ; check_input_order
0000000000001a90         mov        qword [rsp+0xc8+var_B8], rax
0000000000001a95         jmp        loc_1ae4
0000000000001a97         align      32

                     loc_1aa0:
0000000000001aa0         cmp        eax, 0x76                                   ; CODE XREF=main+361
0000000000001aa3         je         loc_1c48

0000000000001aa9         jle        loc_1b78

0000000000001aaf         cmp        eax, 0x80
0000000000001ab4         je         loc_1d70

0000000000001aba         jle        loc_1d50

0000000000001ac0         cmp        eax, 0x81
0000000000001ac5         je         loc_1e00

0000000000001acb         cmp        eax, 0x82
0000000000001ad0         jne        loc_1b41

0000000000001ad2         mov        byte [join_header_lines], 0x1               ; join_header_lines
0000000000001ad9         xor        eax, eax
0000000000001adb         nop        dword [rax+rax]

                     loc_1ae0:
0000000000001ae0         mov        dword [rsp+0xc8+var_98], eax                ; CODE XREF=main+447, main+571, main+799, main+861, main+916, main+946, main+972, main+1035, main+1071, main+1089, main+1116

                     loc_1ae4:
0000000000001ae4         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+229
0000000000001aeb         lea        rdx, qword [aMikeHaertel+13]                ; argument "__shortopts" for method j_getopt_long, 0x7eab
0000000000001af2         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001af5         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001af8         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001afa         call       j_getopt_long                               ; getopt_long
0000000000001aff         cmp        eax, 0xffffffff
0000000000001b02         je         loc_1e61

0000000000001b08         cmp        eax, 0x69
0000000000001b0b         mov        dword [rsp+0xc8+var_9C], 0x0
0000000000001b13         je         loc_1de8

0000000000001b19         jg         loc_1aa0

0000000000001b1b         cmp        eax, 0x31
0000000000001b1e         je         loc_1dc0

0000000000001b24         jle        loc_1bf0

0000000000001b2a         cmp        eax, 0x61
0000000000001b2d         je         loc_1c4f

0000000000001b33         cmp        eax, 0x65
0000000000001b36         je         loc_1d18

0000000000001b3c         cmp        eax, 0x32
0000000000001b3f         je         loc_1b50

                     loc_1b41:
0000000000001b41         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+288, main+477, main+601, main+931, main+3867, main+3957
0000000000001b46         call       usage                                       ; usage
0000000000001b4b         nop        dword [rax+rax]

                     loc_1b50:
0000000000001b50         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+399
0000000000001b57         call       string_to_join_field                        ; string_to_join_field
0000000000001b5c         lea        rdi, qword [join_field_2]                   ; join_field_2
0000000000001b63         mov        rsi, rax
0000000000001b66         call       set_join_field                              ; set_join_field
0000000000001b6b         mov        eax, dword [rsp+0xc8+var_9C]
0000000000001b6f         jmp        loc_1ae0
0000000000001b74         align      8

                     loc_1b78:
0000000000001b78         cmp        eax, 0x6f                                   ; CODE XREF=main+249
0000000000001b7b         je         loc_1ca0

0000000000001b81         cmp        eax, 0x74
0000000000001b84         je         loc_1d88

0000000000001b8a         cmp        eax, 0x6a
0000000000001b8d         jne        loc_1b41

0000000000001b8f         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001b96         movzx      eax, byte [rdi]
0000000000001b99         lea        edx, dword [rax-0x31]
0000000000001b9c         cmp        dl, 0x1
0000000000001b9f         ja         loc_1bc0

0000000000001ba1         cmp        byte [rdi+1], 0x0
0000000000001ba5         jne        loc_1bc0

0000000000001ba7         movsxd     rdx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001bae         mov        rdx, qword [rbx+rdx*8-8]
0000000000001bb3         add        rdx, 0x2
0000000000001bb7         cmp        rdi, rdx
0000000000001bba         je         loc_237e

                     loc_1bc0:
0000000000001bc0         call       string_to_join_field                        ; string_to_join_field, CODE XREF=main+495, main+501
0000000000001bc5         lea        rdi, qword [join_field_1]                   ; join_field_1
0000000000001bcc         mov        rsi, rax
0000000000001bcf         call       set_join_field                              ; set_join_field
0000000000001bd4         mov        rsi, qword [join_field_1]                   ; join_field_1
0000000000001bdb         lea        rdi, qword [join_field_2]                   ; join_field_2
0000000000001be2         call       set_join_field                              ; set_join_field

                     loc_1be7:
0000000000001be7         mov        eax, dword [rsp+0xc8+var_9C]                ; CODE XREF=main+744, main+1128
0000000000001beb         jmp        loc_1ae0

                     loc_1bf0:
0000000000001bf0         cmp        eax, 0xffffff7e                             ; CODE XREF=main+372
0000000000001bf5         je         loc_26d6

0000000000001bfb         cmp        eax, 0x1
0000000000001bfe         je         loc_1cd8

0000000000001c04         cmp        eax, 0xffffff7d
0000000000001c09         jne        loc_1b41

0000000000001c0f         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001c16         mov        rcx, qword [Version]                        ; Version
0000000000001c1d         lea        r8, qword [aMikeHaertel]                    ; "Mike Haertel"
0000000000001c24         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7e17
0000000000001c2b         lea        rsi, qword [aSluIsNotSorted+28]             ; 0x7d9c
0000000000001c32         xor        r9d, r9d
0000000000001c35         xor        eax, eax
0000000000001c37         call       version_etc                                 ; version_etc
0000000000001c3c         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001c3e         call       j_exit                                      ; exit
                        ; endp
0000000000001c43         align      8

                     loc_1c48:
0000000000001c48         mov        byte [print_pairables], 0x0                 ; print_pairables, CODE XREF=main+243

                     loc_1c4f:
0000000000001c4f         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+381
0000000000001c56         lea        r8, qword [aInvalidFieldNu+28]              ; 0x7d58
0000000000001c5d         xor        esi, esi
0000000000001c5f         mov        rcx, r15
0000000000001c62         mov        edx, 0xa
0000000000001c67         call       xstrtoul                                    ; xstrtoul
0000000000001c6c         test       eax, eax
0000000000001c6e         jne        loc_26f9

0000000000001c74         mov        rax, qword [rsp+0xc8+var_68]
0000000000001c79         lea        rdx, qword [rax-1]
0000000000001c7d         cmp        rdx, 0x1
0000000000001c81         ja         loc_26f9

0000000000001c87         cmp        rax, 0x1
0000000000001c8b         je         loc_1e11

0000000000001c91         mov        byte [print_unpairables_2], 0x1             ; print_unpairables_2
0000000000001c98         jmp        loc_1be7
0000000000001c9d         align      32

                     loc_1ca0:
0000000000001ca0         mov        rdx, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+459
0000000000001ca7         lea        rdi, qword [aUsrlocalsharel+24]             ; 0x7e6d
0000000000001cae         mov        ecx, 0x5
0000000000001cb3         mov        rsi, rdx
0000000000001cb6         rep  cmpsb byte [rsi], byte [rdi]
0000000000001cb8         seta       al
0000000000001cbb         sbb        al, 0x0
0000000000001cbd         movsx      eax, al
0000000000001cc0         test       eax, eax
0000000000001cc2         jne        loc_1e47

0000000000001cc8         mov        byte [autoformat], 0x1                      ; autoformat
0000000000001ccf         jmp        loc_1ae0
0000000000001cd4         align      8

                     loc_1cd8:
0000000000001cd8         lea        r14, qword [rsp+0xc8+var_94]                ; CODE XREF=main+590
0000000000001cdd         lea        r13, qword [rsp+0xc8+var_48]
0000000000001ce5         lea        r12, qword [rsp+0xc8+var_50]
0000000000001cea         mov        r9, qword [rsp+0xc8+var_C0]
0000000000001cef         mov        r8, qword [rsp+0xc8+var_B8]
0000000000001cf4         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001cfb         mov        rcx, r14
0000000000001cfe         mov        rdx, r13
0000000000001d01         mov        rsi, r12
0000000000001d04         call       add_file_name.constprop.7                   ; add_file_name.constprop.7
0000000000001d09         mov        eax, dword [rsp+0xc8+var_9C]
0000000000001d0d         jmp        loc_1ae0
0000000000001d12         align      8

                     loc_1d18:
0000000000001d18         mov        rdi, qword [empty_filler]                   ; empty_filler, CODE XREF=main+390
0000000000001d1f         mov        r12, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001d26         test       rdi, rdi
0000000000001d29         je         loc_1d3b

0000000000001d2b         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
0000000000001d2e         call       j_strcmp                                    ; strcmp
0000000000001d33         test       eax, eax
0000000000001d35         jne        loc_272f

                     loc_1d3b:
0000000000001d3b         mov        qword [empty_filler], r12                   ; empty_filler, CODE XREF=main+889
0000000000001d42         xor        eax, eax
0000000000001d44         jmp        loc_1ae0
0000000000001d49         align      16

                     loc_1d50:
0000000000001d50         cmp        eax, 0x7a                                   ; CODE XREF=main+266
0000000000001d53         jne        loc_1b41

0000000000001d59         mov        byte [eolchar], 0x0                         ; eolchar
0000000000001d60         xor        eax, eax
0000000000001d62         jmp        loc_1ae0
0000000000001d67         align      16

                     loc_1d70:
0000000000001d70         mov        dword [check_input_order], 0x1              ; check_input_order, CODE XREF=main+260
0000000000001d7a         xor        eax, eax
0000000000001d7c         jmp        loc_1ae0
0000000000001d81         align      8

                     loc_1d88:
0000000000001d88         mov        r12, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+468
0000000000001d8f         movzx      eax, byte [r12]
0000000000001d94         test       al, al
0000000000001d96         jne        loc_1e1d

0000000000001d9c         mov        eax, 0xa

                     loc_1da1:
0000000000001da1         mov        edx, dword [tab]                            ; tab, CODE XREF=main+1139, main+1170
0000000000001da7         test       edx, edx
0000000000001da9         js         loc_1db3

0000000000001dab         cmp        edx, eax
0000000000001dad         jne        loc_28d0

                     loc_1db3:
0000000000001db3         mov        dword [tab], eax                            ; tab, CODE XREF=main+1017
0000000000001db9         xor        eax, eax
0000000000001dbb         jmp        loc_1ae0

                     loc_1dc0:
0000000000001dc0         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+366
0000000000001dc7         call       string_to_join_field                        ; string_to_join_field
0000000000001dcc         lea        rdi, qword [join_field_1]                   ; join_field_1
0000000000001dd3         mov        rsi, rax
0000000000001dd6         call       set_join_field                              ; set_join_field
0000000000001ddb         mov        eax, dword [rsp+0xc8+var_9C]
0000000000001ddf         jmp        loc_1ae0
0000000000001de4         align      8

                     loc_1de8:
0000000000001de8         mov        byte [ignore_case], 0x1                     ; ignore_case, CODE XREF=main+355
0000000000001def         xor        eax, eax
0000000000001df1         jmp        loc_1ae0
0000000000001df6         align      512

                     loc_1e00:
0000000000001e00         mov        dword [check_input_order], 0x2              ; check_input_order, CODE XREF=main+277
0000000000001e0a         xor        eax, eax
0000000000001e0c         jmp        loc_1ae0

                     loc_1e11:
0000000000001e11         mov        byte [print_unpairables_1], 0x1             ; print_unpairables_1, CODE XREF=main+731
0000000000001e18         jmp        loc_1be7

                     loc_1e1d:
0000000000001e1d         cmp        byte [r12+1], 0x0                           ; CODE XREF=main+998
0000000000001e23         je         loc_1da1

0000000000001e29         lea        rsi, qword [aUsrlocalsharel+29]             ; argument "__s2" for method j_strcmp, 0x7e72
0000000000001e30         mov        rdi, r12                                    ; argument "__s1" for method j_strcmp
0000000000001e33         call       j_strcmp                                    ; strcmp
0000000000001e38         test       eax, eax
0000000000001e3a         jne        loc_280e

0000000000001e40         xor        eax, eax
0000000000001e42         jmp        loc_1da1

                     loc_1e47:
0000000000001e47         mov        rdi, rdx                                    ; CODE XREF=main+786
0000000000001e4a         call       add_field_list                              ; add_field_list
0000000000001e4f         mov        dword [rsp+0xc8+var_9C], 0x3
0000000000001e57         mov        eax, 0x3
0000000000001e5c         jmp        loc_1ae0

                     loc_1e61:
0000000000001e61         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+338
0000000000001e68         mov        dword [rsp+0xc8+var_98], 0x0
0000000000001e70         cmp        ebp, eax
0000000000001e72         jle        loc_1ec6

0000000000001e74         lea        rcx, qword [rsp+0xc8+var_98]
0000000000001e79         lea        r15, qword [rsp+0xc8+var_9C]
0000000000001e7e         lea        r14, qword [rsp+0xc8+var_94]
0000000000001e83         lea        r13, qword [rsp+0xc8+var_48]
0000000000001e8b         lea        r12, qword [rsp+0xc8+var_50]
0000000000001e90         mov        qword [rsp+0xc8+var_C0], rcx
0000000000001e95         nop        dword [rax]

                     loc_1e98:
0000000000001e98         lea        edx, dword [rax+1]                          ; CODE XREF=main+1300
0000000000001e9b         mov        rdi, qword [rbx+rax*8]
0000000000001e9f         mov        r8, qword [rsp+0xc8+var_C0]
0000000000001ea4         mov        r9, r15
0000000000001ea7         mov        rcx, r14
0000000000001eaa         mov        rsi, r12
0000000000001ead         mov        dword [optind@@GLIBC_2.2.5], edx            ; optind@@GLIBC_2.2.5
0000000000001eb3         mov        rdx, r13
0000000000001eb6         call       add_file_name.constprop.7                   ; add_file_name.constprop.7
0000000000001ebb         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001ec2         cmp        eax, ebp
0000000000001ec4         jl         loc_1e98

                     loc_1ec6:
0000000000001ec6         mov        eax, dword [rsp+0xc8+var_94]                ; CODE XREF=main+1218
0000000000001eca         cmp        eax, 0x2
0000000000001ecd         jne        loc_28a6

0000000000001ed3         cmp        dword [rsp+0xc8+var_48], 0x0
0000000000001edb         jne        loc_2346

                     loc_1ee1:
0000000000001ee1         cmp        dword [rsp+0xc8+var_44], 0x0                ; CODE XREF=main+2482
0000000000001ee9         jne        loc_231f

                     loc_1eef:
0000000000001eef         cmp        qword [join_field_1], 0xffffffffffffffff    ; join_field_1, CODE XREF=main+2449
0000000000001ef7         je         loc_230f

                     loc_1efd:
0000000000001efd         cmp        qword [join_field_2], 0xffffffffffffffff    ; join_field_2, CODE XREF=main+2410
0000000000001f05         je         loc_22ff

                     loc_1f0b:
0000000000001f0b         mov        rbx, qword [g_names]                        ; g_names, CODE XREF=main+2394
0000000000001f12         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x7faa
0000000000001f19         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000001f1c         call       j_strcmp                                    ; strcmp
0000000000001f21         test       eax, eax
0000000000001f23         jne        loc_2367

0000000000001f29         mov        r12, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5

                     loc_1f30:
0000000000001f30         test       r12, r12                                    ; CODE XREF=main+2505
0000000000001f33         je         loc_2873

0000000000001f39         mov        rbx, qword [qword_20b1b8]                   ; qword_20b1b8
0000000000001f40         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x7faa
0000000000001f47         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000001f4a         call       j_strcmp                                    ; strcmp
0000000000001f4f         test       eax, eax
0000000000001f51         jne        loc_25c6

0000000000001f57         mov        rbx, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5

                     loc_1f5e:
0000000000001f5e         test       rbx, rbx                                    ; CODE XREF=main+3112
0000000000001f61         je         loc_2840

0000000000001f67         cmp        r12, rbx
0000000000001f6a         je         loc_27aa

0000000000001f70         mov        esi, 0x2
0000000000001f75         mov        rdi, r12
0000000000001f78         lea        r14, qword [rsp+0xc8+var_88]
0000000000001f7d         call       fadvise                                     ; fadvise
0000000000001f82         lea        r13, qword [rsp+0xc8+var_68]
0000000000001f87         mov        esi, 0x2
0000000000001f8c         mov        rdi, rbx
0000000000001f8f         call       fadvise                                     ; fadvise
0000000000001f94         mov        edx, 0x1
0000000000001f99         mov        rsi, r14
0000000000001f9c         mov        rdi, r12
0000000000001f9f         mov        qword [rsp+0xc8+var_88], 0x0
0000000000001fa8         mov        qword [rsp+0xc8+var_80], 0x0
0000000000001fb1         mov        qword [rsp+0xc8+var_78], 0x0
0000000000001fba         call       getseq                                      ; getseq
0000000000001fbf         mov        edx, 0x2
0000000000001fc4         mov        rsi, r13
0000000000001fc7         mov        rdi, rbx
0000000000001fca         mov        qword [rsp+0xc8+var_68], 0x0
0000000000001fd3         mov        qword [rsp+0xc8+var_60], 0x0
0000000000001fdc         mov        qword [rsp+0xc8+var_58], 0x0
0000000000001fe5         call       getseq                                      ; getseq
0000000000001fea         cmp        byte [autoformat], 0x0                      ; autoformat
0000000000001ff1         je         loc_202d

0000000000001ff3         mov        rax, qword [rsp+0xc8+var_88]
0000000000001ff8         test       rax, rax
0000000000001ffb         je         loc_2009

0000000000001ffd         mov        rax, qword [rsp+0xc8+var_78]
0000000000002002         mov        rax, qword [rax]
0000000000002005         mov        rax, qword [rax+0x18]

                     loc_2009:
0000000000002009         mov        qword [autocount_1], rax                    ; autocount_1, CODE XREF=main+1611
0000000000002010         mov        rax, qword [rsp+0xc8+var_68]
0000000000002015         test       rax, rax
0000000000002018         je         loc_2026

000000000000201a         mov        rax, qword [rsp+0xc8+var_58]
000000000000201f         mov        rax, qword [rax]
0000000000002022         mov        rax, qword [rax+0x18]

                     loc_2026:
0000000000002026         mov        qword [autocount_2], rax                    ; autocount_2, CODE XREF=main+1640

                     loc_202d:
000000000000202d         cmp        byte [join_header_lines], 0x0               ; join_header_lines, CODE XREF=main+1601
0000000000002034         je         loc_2264

000000000000203a         cmp        qword [rsp+0xc8+var_88], 0x0
0000000000002040         mov        rax, qword [rsp+0xc8+var_68]
0000000000002045         jne        loc_25dd

000000000000204b         test       rax, rax
000000000000204e         jne        loc_2657

                     loc_2054:
0000000000002054         xor        eax, eax                                    ; CODE XREF=main+2236, main+2378

                     loc_2056:
0000000000002056         cmp        dword [check_input_order], 0x2              ; check_input_order, CODE XREF=main+2248
000000000000205d         mov        qword [rsp+0xc8+var_90], 0x0
0000000000002066         je         loc_2082

0000000000002068         cmp        byte [issued_disorder_warning], 0x0         ; issued_disorder_warning
000000000000206f         je         loc_239c

0000000000002075         cmp        byte [byte_20b199], 0x0                     ; byte_20b199
000000000000207c         je         loc_239c

                     loc_2082:
0000000000002082         cmp        byte [print_unpairables_1], 0x0             ; print_unpairables_1, CODE XREF=main+1718
0000000000002089         jne        loc_26dd

000000000000208f         movzx      eax, byte [print_unpairables_2]             ; print_unpairables_2
0000000000002096         test       al, al
0000000000002098         jne        loc_2547

                     loc_209e:
000000000000209e         mov        rdi, qword [rsp+0xc8+var_90]                ; CODE XREF=main+2681, main+2973, main+3390

                     loc_20a3:
00000000000020a3         call       j_free                                      ; free, CODE XREF=main+2670
00000000000020a8         lea        rsi, qword [r14+0x10]
00000000000020ac         lea        rdi, qword [r14+8]
00000000000020b0         call       delseq.isra.3                               ; delseq.isra.3
00000000000020b5         lea        rsi, qword [r13+0x10]
00000000000020b9         lea        rdi, qword [r13+8]
00000000000020bd         call       delseq.isra.3                               ; delseq.isra.3
00000000000020c2         mov        rdi, r12
00000000000020c5         call       rpl_fclose                                  ; rpl_fclose
00000000000020ca         test       eax, eax
00000000000020cc         jne        loc_27d6

00000000000020d2         mov        rdi, rbx
00000000000020d5         call       rpl_fclose                                  ; rpl_fclose
00000000000020da         test       eax, eax
00000000000020dc         jne        loc_2777

00000000000020e2         cmp        byte [issued_disorder_warning], 0x0         ; issued_disorder_warning
00000000000020e9         jne        loc_2753

00000000000020ef         cmp        byte [byte_20b199], 0x0                     ; byte_20b199
00000000000020f6         jne        loc_2753

00000000000020fc         xor        eax, eax
00000000000020fe         mov        rbx, qword [rsp+0xc8+var_40]
0000000000002106         xor        rbx, qword [fs:0x28]
000000000000210f         jne        loc_2809

0000000000002115         add        rsp, 0x98
000000000000211c         pop        rbx
000000000000211d         pop        rbp
000000000000211e         pop        r12
0000000000002120         pop        r13
0000000000002122         pop        r14
0000000000002124         pop        r15
0000000000002126         ret
                        ; endp
0000000000002127         align      16

                     loc_2130:
0000000000002130         mov        rax, qword [rsp+0xc8+var_58]                ; CODE XREF=main+2004
0000000000002135         mov        rcx, qword [rsp+0xc8+var_88]
000000000000213a         mov        r9, qword [join_field_2]                    ; join_field_2
0000000000002141         mov        r8, qword [join_field_1]                    ; join_field_1
0000000000002148         mov        rdx, qword [rax]
000000000000214b         mov        rax, qword [rsp+0xc8+var_78]
0000000000002150         mov        rax, qword [rax+rcx*8-8]
0000000000002155         lea        rcx, qword [rdx+0x28]
0000000000002159         mov        rdx, qword [rdx+0x18]
000000000000215d         mov        rdi, qword [rax+0x18]
0000000000002161         lea        rsi, qword [rax+0x28]
0000000000002165         call       keycmp.isra.4                               ; keycmp.isra.4
000000000000216a         test       eax, eax
000000000000216c         jne        loc_249f

                     loc_2172:
0000000000002172         mov        edx, 0x1                                    ; CODE XREF=main+2313
0000000000002177         mov        rsi, r14
000000000000217a         mov        rdi, r12
000000000000217d         call       getseq                                      ; getseq
0000000000002182         test       al, al
0000000000002184         jne        loc_2130

0000000000002186         add        qword [rsp+0xc8+var_88], 0x1
000000000000218c         mov        byte [rsp+0xc8+var_B8], 0x1
0000000000002191         jmp        loc_21da
0000000000002193         align      8

                     loc_2198:
0000000000002198         mov        rax, qword [rsp+0xc8+var_58]                ; CODE XREF=main+2108
000000000000219d         mov        rdx, qword [rsp+0xc8+var_68]
00000000000021a2         mov        r9, qword [join_field_2]                    ; join_field_2
00000000000021a9         mov        r8, qword [join_field_1]                    ; join_field_1
00000000000021b0         mov        rdx, qword [rax+rdx*8-8]
00000000000021b5         mov        rax, qword [rsp+0xc8+var_78]
00000000000021ba         mov        rax, qword [rax]
00000000000021bd         lea        rcx, qword [rdx+0x28]
00000000000021c1         mov        rdx, qword [rdx+0x18]
00000000000021c5         mov        rdi, qword [rax+0x18]
00000000000021c9         lea        rsi, qword [rax+0x28]
00000000000021cd         call       keycmp.isra.4                               ; keycmp.isra.4
00000000000021d2         test       eax, eax
00000000000021d4         jne        loc_2495

                     loc_21da:
00000000000021da         mov        edx, 0x2                                    ; CODE XREF=main+2017, main+2804
00000000000021df         mov        rsi, r13
00000000000021e2         mov        rdi, rbx
00000000000021e5         call       getseq                                      ; getseq
00000000000021ea         test       al, al
00000000000021ec         jne        loc_2198

00000000000021ee         add        qword [rsp+0xc8+var_68], 0x1
00000000000021f4         mov        byte [rsp+0xc8+var_A9], 0x1

                     loc_21f9:
00000000000021f9         cmp        byte [print_pairables], 0x0                 ; print_pairables, CODE XREF=main+2794
0000000000002200         jne        loc_24a9

                     loc_2206:
0000000000002206         cmp        byte [rsp+0xc8+var_B8], 0x0                 ; CODE XREF=main+2824, main+2930
000000000000220b         jne        loc_2479

0000000000002211         mov        rax, qword [rsp+0xc8+var_78]
0000000000002216         mov        rdx, qword [rsp+0xc8+var_88]
000000000000221b         lea        rdx, qword [rax+rdx*8-8]
0000000000002220         mov        rcx, qword [rax]
0000000000002223         mov        rsi, qword [rdx]
0000000000002226         mov        qword [rax], rsi
0000000000002229         mov        qword [rdx], rcx
000000000000222c         mov        qword [rsp+0xc8+var_88], 0x1

                     loc_2235:
0000000000002235         cmp        byte [rsp+0xc8+var_A9], 0x0                 ; CODE XREF=main+2770
000000000000223a         jne        loc_2487

0000000000002240         mov        rax, qword [rsp+0xc8+var_58]
0000000000002245         mov        rdx, qword [rsp+0xc8+var_68]
000000000000224a         lea        rdx, qword [rax+rdx*8-8]
000000000000224f         mov        rcx, qword [rax]
0000000000002252         mov        rsi, qword [rdx]
0000000000002255         mov        qword [rax], rsi
0000000000002258         mov        qword [rdx], rcx
000000000000225b         mov        qword [rsp+0xc8+var_68], 0x1

                     loc_2264:
0000000000002264         mov        rax, qword [rsp+0xc8+var_88]                ; CODE XREF=main+1668, main+2731, main+2784, main+3203, main+3234
0000000000002269         test       rax, rax
000000000000226c         je         loc_2054

                     loc_2272:
0000000000002272         cmp        qword [rsp+0xc8+var_68], 0x0                ; CODE XREF=main+2372
0000000000002278         je         loc_2056

000000000000227e         mov        rax, qword [rsp+0xc8+var_58]
0000000000002283         mov        r9, qword [join_field_2]                    ; join_field_2
000000000000228a         mov        r8, qword [join_field_1]                    ; join_field_1
0000000000002291         mov        rdx, qword [rax]
0000000000002294         mov        rax, qword [rsp+0xc8+var_78]
0000000000002299         mov        rax, qword [rax]
000000000000229c         lea        rcx, qword [rdx+0x28]
00000000000022a0         mov        rdx, qword [rdx+0x18]
00000000000022a4         mov        rdi, qword [rax+0x18]
00000000000022a8         lea        rsi, qword [rax+0x28]
00000000000022ac         call       keycmp.isra.4                               ; keycmp.isra.4
00000000000022b1         test       eax, eax
00000000000022b3         js         loc_242e

00000000000022b9         je         loc_2172

00000000000022bf         cmp        byte [print_unpairables_2], 0x0             ; print_unpairables_2
00000000000022c6         jne        loc_2460

                     loc_22cc:
00000000000022cc         mov        edx, 0x2                                    ; CODE XREF=main+2756
00000000000022d1         mov        rsi, r13
00000000000022d4         mov        rdi, rbx
00000000000022d7         mov        qword [rsp+0xc8+var_68], 0x0
00000000000022e0         call       getseq                                      ; getseq
00000000000022e5         mov        rax, qword [rsp+0xc8+var_88]
00000000000022ea         mov        byte [seen_unpairable], 0x1                 ; seen_unpairable
00000000000022f1         test       rax, rax
00000000000022f4         jne        loc_2272

00000000000022fa         jmp        loc_2054

                     loc_22ff:
00000000000022ff         mov        qword [join_field_2], 0x0                   ; join_field_2, CODE XREF=main+1365
000000000000230a         jmp        loc_1f0b

                     loc_230f:
000000000000230f         mov        qword [join_field_1], 0x0                   ; join_field_1, CODE XREF=main+1351
000000000000231a         jmp        loc_1efd

                     loc_231f:
000000000000231f         lea        rdi, qword [join_field_1]                   ; join_field_1, CODE XREF=main+1337
0000000000002326         mov        esi, 0x1
000000000000232b         call       set_join_field                              ; set_join_field
0000000000002330         lea        rdi, qword [join_field_2]                   ; join_field_2
0000000000002337         mov        esi, 0x1
000000000000233c         call       set_join_field                              ; set_join_field
0000000000002341         jmp        loc_1eef

                     loc_2346:
0000000000002346         lea        rdi, qword [join_field_1]                   ; join_field_1, CODE XREF=main+1323
000000000000234d         xor        esi, esi
000000000000234f         call       set_join_field                              ; set_join_field
0000000000002354         lea        rdi, qword [join_field_2]                   ; join_field_2
000000000000235b         xor        esi, esi
000000000000235d         call       set_join_field                              ; set_join_field
0000000000002362         jmp        loc_1ee1

                     loc_2367:
0000000000002367         lea        rsi, qword [aHeader+5]                      ; 0x7f34, CODE XREF=main+1395
000000000000236e         mov        rdi, rbx
0000000000002371         call       fopen_safer                                 ; fopen_safer
0000000000002376         mov        r12, rax
0000000000002379         jmp        loc_1f30

                     loc_237e:
000000000000237e         xor        edx, edx                                    ; CODE XREF=main+522
0000000000002380         cmp        al, 0x32
0000000000002382         sete       dl
0000000000002385         mov        rax, rdx
0000000000002388         add        dword [rsp+rdx*4+0xc8+var_48], 0x1
0000000000002390         add        eax, 0x1
0000000000002393         mov        dword [rsp+0xc8+var_9C], eax
0000000000002397         jmp        loc_1ae0

                     loc_239c:
000000000000239c         test       rax, rax                                    ; CODE XREF=main+1727, main+1740
000000000000239f         je         loc_2540

00000000000023a5         movzx      r15d, byte [print_unpairables_1]            ; print_unpairables_1
00000000000023ad         test       r15b, r15b
00000000000023b0         jne        loc_268d

00000000000023b6         mov        r15d, 0x1

                     loc_23bc:
00000000000023bc         cmp        qword [rsp+0xc8+var_68], 0x0                ; CODE XREF=main+3313
00000000000023c2         je         loc_23cb

00000000000023c4         mov        byte [seen_unpairable], 0x1                 ; seen_unpairable

                     loc_23cb:
00000000000023cb         lea        rbp, qword [rsp+0xc8+var_90]                ; CODE XREF=main+2578

                     loc_23d0:
00000000000023d0         mov        edx, 0x1                                    ; CODE XREF=main+2632, main+3342, main+3355
00000000000023d5         mov        rsi, rbp
00000000000023d8         mov        rdi, r12
00000000000023db         call       get_line                                    ; get_line
00000000000023e0         test       al, al
00000000000023e2         je         loc_23fa

00000000000023e4         cmp        byte [print_unpairables_1], 0x0             ; print_unpairables_1
00000000000023eb         jne        loc_26a6

00000000000023f1         cmp        byte [issued_disorder_warning], 0x0         ; issued_disorder_warning
00000000000023f8         je         loc_23d0

                     loc_23fa:
00000000000023fa         movzx      eax, byte [print_unpairables_2]             ; print_unpairables_2, CODE XREF=main+2610, main+3361
0000000000002401         test       al, al
0000000000002403         jne        loc_240a

0000000000002405         test       r15b, r15b
0000000000002408         je         loc_2416

                     loc_240a:
000000000000240a         cmp        qword [rsp+0xc8+var_68], 0x0                ; CODE XREF=main+2643, main+3396
0000000000002410         jne        loc_2553

                     loc_2416:
0000000000002416         mov        rdi, qword [rsp+0xc8+var_90]                ; CODE XREF=main+2648, main+3029, main+3053, main+3089
000000000000241b         test       rdi, rdi
000000000000241e         je         loc_20a3

0000000000002424         call       freeline.part.2                             ; freeline.part.2
0000000000002429         jmp        loc_209e

                     loc_242e:
000000000000242e         cmp        byte [print_unpairables_1], 0x0             ; print_unpairables_1, CODE XREF=main+2307
0000000000002435         jne        loc_2527

                     loc_243b:
000000000000243b         mov        edx, 0x1                                    ; CODE XREF=main+2955
0000000000002440         mov        rsi, r14
0000000000002443         mov        rdi, r12
0000000000002446         mov        qword [rsp+0xc8+var_88], 0x0
000000000000244f         call       getseq                                      ; getseq
0000000000002454         mov        byte [seen_unpairable], 0x1                 ; seen_unpairable
000000000000245b         jmp        loc_2264

                     loc_2460:
0000000000002460         mov        rax, qword [rsp+0xc8+var_58]                ; CODE XREF=main+2326
0000000000002465         lea        rdi, qword [uni_blank]                      ; uni_blank
000000000000246c         mov        rsi, qword [rax]
000000000000246f         call       prjoin                                      ; prjoin
0000000000002474         jmp        loc_22cc

                     loc_2479:
0000000000002479         mov        qword [rsp+0xc8+var_88], 0x0                ; CODE XREF=main+2139
0000000000002482         jmp        loc_2235

                     loc_2487:
0000000000002487         mov        qword [rsp+0xc8+var_68], 0x0                ; CODE XREF=main+2186
0000000000002490         jmp        loc_2264

                     loc_2495:
0000000000002495         mov        byte [rsp+0xc8+var_A9], 0x0                 ; CODE XREF=main+2084
000000000000249a         jmp        loc_21f9

                     loc_249f:
000000000000249f         mov        byte [rsp+0xc8+var_B8], 0x0                 ; CODE XREF=main+1980
00000000000024a4         jmp        loc_21da

                     loc_24a9:
00000000000024a9         cmp        qword [rsp+0xc8+var_88], 0x1                ; CODE XREF=main+2128
00000000000024af         mov        qword [rsp+0xc8+var_C0], 0x0
00000000000024b8         je         loc_2206

00000000000024be         nop

                     loc_24c0:
00000000000024c0         xor        r15d, r15d                                  ; CODE XREF=main+2928
00000000000024c3         cmp        qword [rsp+0xc8+var_68], 0x1
00000000000024c9         mov        rax, qword [rsp+0xc8+var_C0]
00000000000024ce         lea        rbp, qword [rax*8]
00000000000024d6         je         loc_2509

00000000000024d8         nop        dword [rax+rax]

                     loc_24e0:
00000000000024e0         mov        rdx, qword [rsp+0xc8+var_58]                ; CODE XREF=main+2903
00000000000024e5         mov        rsi, qword [rdx+r15*8]
00000000000024e9         mov        rdx, qword [rsp+0xc8+var_78]
00000000000024ee         add        r15, 0x1
00000000000024f2         mov        rdi, qword [rdx+rbp]
00000000000024f6         call       prjoin                                      ; prjoin
00000000000024fb         mov        rax, qword [rsp+0xc8+var_68]
0000000000002500         lea        rdx, qword [rax-1]
0000000000002504         cmp        r15, rdx
0000000000002507         jb         loc_24e0

                     loc_2509:
0000000000002509         add        qword [rsp+0xc8+var_C0], 0x1                ; CODE XREF=main+2854
000000000000250f         mov        rax, qword [rsp+0xc8+var_88]
0000000000002514         mov        rcx, qword [rsp+0xc8+var_C0]
0000000000002519         sub        rax, 0x1
000000000000251d         cmp        rcx, rax
0000000000002520         jb         loc_24c0

0000000000002522         jmp        loc_2206

                     loc_2527:
0000000000002527         mov        rax, qword [rsp+0xc8+var_78]                ; CODE XREF=main+2693
000000000000252c         lea        rsi, qword [uni_blank]                      ; uni_blank
0000000000002533         mov        rdi, qword [rax]
0000000000002536         call       prjoin                                      ; prjoin
000000000000253b         jmp        loc_243b

                     loc_2540:
0000000000002540         movzx      eax, byte [print_unpairables_2]             ; print_unpairables_2, CODE XREF=main+2543

                     loc_2547:
0000000000002547         cmp        qword [rsp+0xc8+var_68], 0x0                ; CODE XREF=main+1768
000000000000254d         je         loc_209e

                     loc_2553:
0000000000002553         test       al, al                                      ; CODE XREF=main+2656
0000000000002555         jne        loc_2674

                     loc_255b:
000000000000255b         cmp        qword [rsp+0xc8+var_88], 0x0                ; CODE XREF=main+3288
0000000000002561         jne        loc_2668

                     loc_2567:
0000000000002567         lea        rbp, qword [rsp+0xc8+var_90]                ; CODE XREF=main+3263
000000000000256c         lea        r15, qword [uni_blank]                      ; uni_blank

                     loc_2573:
0000000000002573         mov        edx, 0x2                                    ; CODE XREF=main+3051, main+3078, main+3087
0000000000002578         mov        rsi, rbp
000000000000257b         mov        rdi, rbx
000000000000257e         call       get_line                                    ; get_line
0000000000002583         test       al, al
0000000000002585         je         loc_2416

000000000000258b         cmp        byte [print_unpairables_2], 0x0             ; print_unpairables_2
0000000000002592         jne        loc_25a2

0000000000002594         cmp        byte [byte_20b199], 0x0                     ; byte_20b199
000000000000259b         je         loc_2573

000000000000259d         jmp        loc_2416

                     loc_25a2:
00000000000025a2         mov        rsi, qword [rsp+0xc8+var_90]                ; CODE XREF=main+3042
00000000000025a7         mov        rdi, r15
00000000000025aa         call       prjoin                                      ; prjoin
00000000000025af         cmp        byte [byte_20b199], 0x0                     ; byte_20b199
00000000000025b6         je         loc_2573

00000000000025b8         cmp        byte [print_unpairables_2], 0x0             ; print_unpairables_2
00000000000025bf         jne        loc_2573

00000000000025c1         jmp        loc_2416

                     loc_25c6:
00000000000025c6         lea        rsi, qword [aHeader+5]                      ; 0x7f34, CODE XREF=main+1441
00000000000025cd         mov        rdi, rbx
00000000000025d0         call       fopen_safer                                 ; fopen_safer
00000000000025d5         mov        rbx, rax
00000000000025d8         jmp        loc_1f5e

                     loc_25dd:
00000000000025dd         mov        rdx, qword [rsp+0xc8+var_78]                ; CODE XREF=main+1685
00000000000025e2         test       rax, rax
00000000000025e5         lea        rsi, qword [uni_blank]                      ; uni_blank
00000000000025ec         mov        rdi, qword [rdx]
00000000000025ef         jne        loc_265e

                     loc_25f1:
00000000000025f1         call       prjoin                                      ; prjoin, CODE XREF=main+3254
00000000000025f6         cmp        qword [rsp+0xc8+var_88], 0x0
00000000000025fc         mov        qword [prevline], 0x0                       ; prevline
0000000000002607         mov        qword [qword_20b1d8], 0x0                   ; qword_20b1d8
0000000000002612         je         loc_262d

0000000000002614         mov        edx, 0x1
0000000000002619         mov        rsi, r14
000000000000261c         mov        rdi, r12
000000000000261f         mov        qword [rsp+0xc8+var_88], 0x0
0000000000002628         call       getseq                                      ; getseq

                     loc_262d:
000000000000262d         cmp        qword [rsp+0xc8+var_68], 0x0                ; CODE XREF=main+3170
0000000000002633         je         loc_2264

0000000000002639         mov        edx, 0x2
000000000000263e         mov        rsi, r13
0000000000002641         mov        rdi, rbx
0000000000002644         mov        qword [rsp+0xc8+var_68], 0x0
000000000000264d         call       getseq                                      ; getseq
0000000000002652         jmp        loc_2264

                     loc_2657:
0000000000002657         lea        rdi, qword [uni_blank]                      ; uni_blank, CODE XREF=main+1694

                     loc_265e:
000000000000265e         mov        rax, qword [rsp+0xc8+var_58]                ; CODE XREF=main+3135
0000000000002663         mov        rsi, qword [rax]
0000000000002666         jmp        loc_25f1

                     loc_2668:
0000000000002668         mov        byte [seen_unpairable], 0x1                 ; seen_unpairable, CODE XREF=main+2993
000000000000266f         jmp        loc_2567

                     loc_2674:
0000000000002674         mov        rax, qword [rsp+0xc8+var_58]                ; CODE XREF=main+2981
0000000000002679         lea        rdi, qword [uni_blank]                      ; uni_blank
0000000000002680         mov        rsi, qword [rax]
0000000000002683         call       prjoin                                      ; prjoin
0000000000002688         jmp        loc_255b

                     loc_268d:
000000000000268d         mov        rax, qword [rsp+0xc8+var_78]                ; CODE XREF=main+2560, main+3379
0000000000002692         lea        rsi, qword [uni_blank]                      ; uni_blank
0000000000002699         mov        rdi, qword [rax]
000000000000269c         call       prjoin                                      ; prjoin
00000000000026a1         jmp        loc_23bc

                     loc_26a6:
00000000000026a6         mov        rdi, qword [rsp+0xc8+var_90]                ; CODE XREF=main+2619
00000000000026ab         lea        rsi, qword [uni_blank]                      ; uni_blank
00000000000026b2         call       prjoin                                      ; prjoin
00000000000026b7         cmp        byte [issued_disorder_warning], 0x0         ; issued_disorder_warning
00000000000026be         je         loc_23d0

00000000000026c4         cmp        byte [print_unpairables_1], 0x0             ; print_unpairables_1
00000000000026cb         jne        loc_23d0

00000000000026d1         jmp        loc_23fa

                     loc_26d6:
00000000000026d6         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+581
00000000000026d8         call       usage                                       ; usage

                     loc_26dd:
00000000000026dd         xor        r15d, r15d                                  ; CODE XREF=main+1753
00000000000026e0         test       rax, rax
00000000000026e3         jne        loc_268d

00000000000026e5         movzx      eax, byte [print_unpairables_2]             ; print_unpairables_2
00000000000026ec         test       al, al
00000000000026ee         je         loc_209e

00000000000026f4         jmp        loc_240a

                     loc_26f9:
00000000000026f9         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+702, main+721
0000000000002700         call       quote                                       ; quote
0000000000002705         lea        rsi, qword [aInvalidFieldNu]                ; argument "msgid" for method j_dcgettext, "invalid field number: %s"
000000000000270c         mov        rbx, rax
000000000000270f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002714         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002716         call       j_dcgettext                                 ; dcgettext
000000000000271b         mov        rcx, rbx
000000000000271e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002721         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002723         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002728         xor        eax, eax
000000000000272a         call       j_error                                     ; error

                     loc_272f:
000000000000272f         lea        rsi, qword [aConflictingEmp]                ; argument "msgid" for method j_dcgettext, "conflicting empty-field replacement strings", CODE XREF=main+901
0000000000002736         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000273b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000273d         call       j_dcgettext                                 ; dcgettext
0000000000002742         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002744         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002747         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000274c         xor        eax, eax
000000000000274e         call       j_error                                     ; error

                     loc_2753:
0000000000002753         lea        rsi, qword [aInputIsNotInSo]                ; argument "msgid" for method j_dcgettext, "input is not in sorted order", CODE XREF=main+1849, main+1862
000000000000275a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000275f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002761         call       j_dcgettext                                 ; dcgettext
0000000000002766         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002768         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000276b         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002770         xor        eax, eax
0000000000002772         call       j_error                                     ; error

                     loc_2777:
0000000000002777         mov        rdx, qword [qword_20b1b8]                   ; qword_20b1b8, CODE XREF=main+1836
000000000000277e         mov        esi, 0x3
0000000000002783         xor        edi, edi
0000000000002785         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000278a         mov        rbx, rax
000000000000278d         call       j___errno_location                          ; __errno_location
0000000000002792         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002794         lea        rdx, qword [aInvalidFieldNu+22]             ; argument "__format" for method j_error, 0x7d52
000000000000279b         mov        rcx, rbx
000000000000279e         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000027a3         xor        eax, eax
00000000000027a5         call       j_error                                     ; error

                     loc_27aa:
00000000000027aa         lea        rsi, qword [aBothFilesCanno]                ; argument "msgid" for method j_dcgettext, "both files cannot be standard input", CODE XREF=main+1466
00000000000027b1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027b6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027b8         call       j_dcgettext                                 ; dcgettext
00000000000027bd         mov        rbx, rax
00000000000027c0         call       j___errno_location                          ; __errno_location
00000000000027c5         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000027c7         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000027ca         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000027cf         xor        eax, eax
00000000000027d1         call       j_error                                     ; error

                     loc_27d6:
00000000000027d6         mov        rdx, qword [g_names]                        ; g_names, CODE XREF=main+1820
00000000000027dd         mov        esi, 0x3
00000000000027e2         xor        edi, edi
00000000000027e4         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000027e9         mov        rbx, rax
00000000000027ec         call       j___errno_location                          ; __errno_location
00000000000027f1         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000027f3         lea        rdx, qword [aInvalidFieldNu+22]             ; argument "__format" for method j_error, 0x7d52
00000000000027fa         mov        rcx, rbx
00000000000027fd         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002802         xor        eax, eax
0000000000002804         call       j_error                                     ; error

                     loc_2809:
0000000000002809         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1887
                        ; endp

                     loc_280e:
000000000000280e         mov        rdi, r12                                    ; CODE XREF=main+1162
0000000000002811         call       quote                                       ; quote
0000000000002816         lea        rsi, qword [aMulticharacter]                ; argument "msgid" for method j_dcgettext, "multi-character tab %s"
000000000000281d         mov        rbx, rax
0000000000002820         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002825         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002827         call       j_dcgettext                                 ; dcgettext
000000000000282c         mov        rcx, rbx
000000000000282f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002832         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002834         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002839         xor        eax, eax
000000000000283b         call       j_error                                     ; error

                     loc_2840:
0000000000002840         mov        rdx, qword [qword_20b1b8]                   ; qword_20b1b8, CODE XREF=main+1457
0000000000002847         mov        esi, 0x3
000000000000284c         xor        edi, edi
000000000000284e         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002853         mov        rbx, rax
0000000000002856         call       j___errno_location                          ; __errno_location
000000000000285b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000285d         lea        rdx, qword [aInvalidFieldNu+22]             ; argument "__format" for method j_error, 0x7d52
0000000000002864         mov        rcx, rbx
0000000000002867         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000286c         xor        eax, eax
000000000000286e         call       j_error                                     ; error

                     loc_2873:
0000000000002873         mov        rdx, qword [g_names]                        ; g_names, CODE XREF=main+1411
000000000000287a         mov        esi, 0x3
000000000000287f         xor        edi, edi
0000000000002881         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002886         mov        rbx, rax
0000000000002889         call       j___errno_location                          ; __errno_location
000000000000288e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002890         lea        rdx, qword [aInvalidFieldNu+22]             ; argument "__format" for method j_error, 0x7d52
0000000000002897         mov        rcx, rbx
000000000000289a         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000289f         xor        eax, eax
00000000000028a1         call       j_error                                     ; error

                     loc_28a6:
00000000000028a6         test       eax, eax                                    ; CODE XREF=main+1309
00000000000028a8         jne        loc_28f4

00000000000028aa         lea        rsi, qword [aMissingOperand_7ebf]           ; argument "msgid" for method j_dcgettext, "missing operand"
00000000000028b1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000028b3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000028b8         call       j_dcgettext                                 ; dcgettext
00000000000028bd         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000028bf         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000028c2         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000028c4         xor        eax, eax
00000000000028c6         call       j_error                                     ; error
00000000000028cb         jmp        loc_1b41

                     loc_28d0:
00000000000028d0         lea        rsi, qword [aIncompatibleTa]                ; argument "msgid" for method j_dcgettext, "incompatible tabs", CODE XREF=main+1021
00000000000028d7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000028dc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000028de         call       j_dcgettext                                 ; dcgettext
00000000000028e3         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000028e5         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000028e8         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000028ed         xor        eax, eax
00000000000028ef         call       j_error                                     ; error

                     loc_28f4:
00000000000028f4         mov        rdi, qword [rbx+rbp*8-8]                    ; CODE XREF=main+3832
00000000000028f9         call       quote                                       ; quote
00000000000028fe         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand after %s"
0000000000002905         mov        rbx, rax
0000000000002908         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000290a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000290f         call       j_dcgettext                                 ; dcgettext
0000000000002914         mov        rcx, rbx
0000000000002917         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000291a         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000291c         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000291e         xor        eax, eax
0000000000002920         call       j_error                                     ; error
0000000000002925         jmp        loc_1b41
000000000000292a         align      16                                          ; End of unwind block (FDE at 0x909c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002930         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x8cfc)
0000000000002932         mov        r9, rdx
0000000000002935         pop        rsi
0000000000002936         mov        rdx, rsp
0000000000002939         and        rsp, 0xfffffffffffffff0
000000000000293d         push       rax
000000000000293e         push       rsp
000000000000293f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002946         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000294d         lea        rdi, qword [main]                           ; main
0000000000002954         call       qword [qword_20afd8+8]                      ; 0x20afe0
000000000000295a         hlt
                        ; endp
000000000000295b         align      32                                          ; End of unwind block (FDE at 0x8cfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002960         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002967         push       rbp
0000000000002968         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000296f         cmp        rax, rdi
0000000000002972         mov        rbp, rsp
0000000000002975         je         loc_2990

0000000000002977         mov        rax, qword [qword_20afd8]                   ; qword_20afd8
000000000000297e         test       rax, rax
0000000000002981         je         loc_2990

0000000000002983         pop        rbp
0000000000002984         jmp        rax
                        ; endp
0000000000002986         align      16

                     loc_2990:
0000000000002990         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002991         ret
                        ; endp
0000000000002992         align      32

                     register_tm_clones:
00000000000029a0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
00000000000029a7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000029ae         push       rbp
00000000000029af         sub        rsi, rdi
00000000000029b2         mov        rbp, rsp
00000000000029b5         sar        rsi, 0x3
00000000000029b9         mov        rax, rsi
00000000000029bc         shr        rax, 0x3f
00000000000029c0         add        rsi, rax
00000000000029c3         sar        rsi, 0x1
00000000000029c6         je         loc_29e0

00000000000029c8         mov        rax, qword [qword_20aff0]                   ; qword_20aff0
00000000000029cf         test       rax, rax
00000000000029d2         je         loc_29e0

00000000000029d4         pop        rbp
00000000000029d5         jmp        rax
                        ; endp
00000000000029d7         align      32

                     loc_29e0:
00000000000029e0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
00000000000029e1         ret
                        ; endp
00000000000029e2         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
00000000000029f0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
00000000000029f7         jne        loc_2a28

00000000000029f9         cmp        qword [qword_20aff8], 0x0                   ; qword_20aff8
0000000000002a01         push       rbp
0000000000002a02         mov        rbp, rsp
0000000000002a05         je         loc_2a13

0000000000002a07         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000002a0e         call       j_qword_20aff8                              ; qword_20aff8

                     loc_2a13:
0000000000002a13         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002a18         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000002a1f         pop        rbp
0000000000002a20         ret
                        ; endp
0000000000002a21         align      8

                     loc_2a28:
0000000000002a28         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000002a2a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002a30         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002a31         mov        rbp, rsp
0000000000002a34         pop        rbp
0000000000002a35         jmp        register_tm_clones                          ; register_tm_clones
0000000000002a3a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48


                     set_join_field:
0000000000002a40         push       rbp                                         ; Begin of unwind block (FDE at 0x8d6c), CODE XREF=main+438, main+543, main+562, main+1062, main+2427, main+2444, main+2463, main+2477, add_file_name.constprop.7+258, add_file_name.constprop.7+337
0000000000002a41         push       rbx
0000000000002a42         sub        rsp, 0x8
0000000000002a46         mov        rbx, qword [rdi]
0000000000002a49         cmp        rbx, 0xffffffffffffffff
0000000000002a4d         je         loc_2a54

0000000000002a4f         cmp        rbx, rsi
0000000000002a52         jne        loc_2a5e

                     loc_2a54:
0000000000002a54         mov        qword [rdi], rsi                            ; CODE XREF=set_join_field+13
0000000000002a57         add        rsp, 0x8
0000000000002a5b         pop        rbx
0000000000002a5c         pop        rbp
0000000000002a5d         ret
                        ; endp

                     loc_2a5e:
0000000000002a5e         mov        rbp, rsi                                    ; CODE XREF=set_join_field+18
0000000000002a61         lea        rsi, qword [aIncompatibleJo]                ; argument "msgid" for method j_dcgettext, "incompatible join fields %lu, %lu"
0000000000002a68         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a6d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a6f         call       j_dcgettext                                 ; dcgettext
0000000000002a74         lea        rcx, qword [rbx+1]
0000000000002a78         lea        r8, qword [rbp+1]
0000000000002a7c         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002a7f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002a81         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002a86         xor        eax, eax
0000000000002a88         call       j_error                                     ; error
0000000000002a8d         nop        dword [rax]                                 ; End of unwind block (FDE at 0x8d6c)
                     string_to_join_field:
0000000000002a90         push       rbx                                         ; Begin of unwind block (FDE at 0x8d98), CODE XREF=main+423, main+528, main+1047, add_field_list+47, add_file_name.constprop.7+243, add_file_name.constprop.7+322
0000000000002a91         lea        r8, qword [aInvalidFieldNu+28]              ; 0x7d58
0000000000002a98         xor        esi, esi
0000000000002a9a         mov        edx, 0xa
0000000000002a9f         mov        rbx, rdi
0000000000002aa2         sub        rsp, 0x10
0000000000002aa6         mov        rcx, rsp
0000000000002aa9         mov        rax, qword [fs:0x28]
0000000000002ab2         mov        qword [rsp+0x30+var_28], rax
0000000000002ab7         xor        eax, eax
0000000000002ab9         call       xstrtoul                                    ; xstrtoul
0000000000002abe         cmp        eax, 0x1
0000000000002ac1         je         loc_2af0

0000000000002ac3         test       eax, eax
0000000000002ac5         jne        loc_2af9

0000000000002ac7         mov        rax, qword [rsp+0x30+var_30]
0000000000002acb         test       rax, rax
0000000000002ace         je         loc_2af9

0000000000002ad0         sub        rax, 0x1

                     loc_2ad4:
0000000000002ad4         mov        rdx, qword [rsp+0x30+var_28]                ; CODE XREF=string_to_join_field+103
0000000000002ad9         xor        rdx, qword [fs:0x28]
0000000000002ae2         jne        loc_2b2b

0000000000002ae4         add        rsp, 0x10
0000000000002ae8         pop        rbx
0000000000002ae9         ret
                        ; endp
0000000000002aea         align      16

                     loc_2af0:
0000000000002af0         mov        rax, 0xfffffffffffffffe                     ; CODE XREF=string_to_join_field+49
0000000000002af7         jmp        loc_2ad4

                     loc_2af9:
0000000000002af9         mov        rdi, rbx                                    ; CODE XREF=string_to_join_field+53, string_to_join_field+62
0000000000002afc         call       quote                                       ; quote
0000000000002b01         lea        rsi, qword [aInvalidFieldNu]                ; argument "msgid" for method j_dcgettext, "invalid field number: %s"
0000000000002b08         mov        rbx, rax
0000000000002b0b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b10         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b12         call       j_dcgettext                                 ; dcgettext
0000000000002b17         mov        rcx, rbx
0000000000002b1a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002b1d         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002b1f         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002b24         xor        eax, eax
0000000000002b26         call       j_error                                     ; error

                     loc_2b2b:
0000000000002b2b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=string_to_join_field+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     add_field_list:
0000000000002b30         push       r12                                         ; End of unwind block (FDE at 0x8d98), Begin of unwind block (FDE at 0x8dbc), CODE XREF=main+1178, add_file_name.constprop.7+161
0000000000002b32         push       rbp
0000000000002b33         mov        rbp, rdi
0000000000002b36         push       rbx
0000000000002b37         jmp        loc_2b99
0000000000002b39         align      64

                     loc_2b40:
0000000000002b40         jl         loc_2bd5                                    ; CODE XREF=add_field_list+141

0000000000002b46         cmp        al, 0x32
0000000000002b48         jg         loc_2bd5

0000000000002b4e         cmp        byte [rbp+1], 0x2e
0000000000002b52         jne        loc_2c39

0000000000002b58         lea        rdi, qword [rbp+2]
0000000000002b5c         lea        ebx, dword [rax-0x30]
0000000000002b5f         call       string_to_join_field                        ; string_to_join_field
0000000000002b64         mov        rbp, rax

                     loc_2b67:
0000000000002b67         mov        edi, 0x18                                   ; CODE XREF=add_field_list+153
0000000000002b6c         call       xmalloc                                     ; xmalloc
0000000000002b71         mov        rdx, qword [outlist_end]                    ; outlist_end
0000000000002b78         test       r12, r12
0000000000002b7b         mov        dword [rax], ebx
0000000000002b7d         mov        qword [rax+8], rbp
0000000000002b81         mov        qword [rax+0x10], 0x0
0000000000002b89         mov        qword [outlist_end], rax                    ; outlist_end
0000000000002b90         mov        qword [rdx+0x10], rax
0000000000002b94         je         loc_2bd0

0000000000002b96         mov        rbp, r12

                     loc_2b99:
0000000000002b99         lea        rsi, qword [aInvalidFieldNu+25]             ; argument "__accept" for method j_strpbrk, 0x7d55, CODE XREF=add_field_list+7
0000000000002ba0         mov        rdi, rbp                                    ; argument "__s" for method j_strpbrk
0000000000002ba3         xor        r12d, r12d
0000000000002ba6         call       j_strpbrk                                   ; strpbrk
0000000000002bab         test       rax, rax
0000000000002bae         je         loc_2bb7

0000000000002bb0         lea        r12, qword [rax+1]
0000000000002bb4         mov        byte [rax], 0x0

                     loc_2bb7:
0000000000002bb7         movsx      eax, byte [rbp]                             ; CODE XREF=add_field_list+126
0000000000002bbb         cmp        al, 0x30
0000000000002bbd         jne        loc_2b40

0000000000002bbf         cmp        byte [rbp+1], 0x0
0000000000002bc3         jne        loc_2c07

0000000000002bc5         xor        ebp, ebp
0000000000002bc7         xor        ebx, ebx
0000000000002bc9         jmp        loc_2b67
0000000000002bcb         align      16

                     loc_2bd0:
0000000000002bd0         pop        rbx                                         ; CODE XREF=add_field_list+100
0000000000002bd1         pop        rbp
0000000000002bd2         pop        r12
0000000000002bd4         ret
                        ; endp

                     loc_2bd5:
0000000000002bd5         mov        rdi, rbp                                    ; CODE XREF=loc_2b40, add_field_list+24
0000000000002bd8         call       quote                                       ; quote
0000000000002bdd         lea        rsi, qword [aInvalidFileNum]                ; argument "msgid" for method j_dcgettext, "invalid file number in field spec: %s"
0000000000002be4         mov        rbx, rax
0000000000002be7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002bec         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002bee         call       j_dcgettext                                 ; dcgettext
0000000000002bf3         mov        rcx, rbx
0000000000002bf6         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002bf9         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002bfb         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002c00         xor        eax, eax
0000000000002c02         call       j_error                                     ; error

                     loc_2c07:
0000000000002c07         mov        rdi, rbp                                    ; CODE XREF=add_field_list+147
0000000000002c0a         call       quote                                       ; quote
0000000000002c0f         lea        rsi, qword [aInvalidFieldSp]                ; argument "msgid" for method j_dcgettext, "invalid field specifier: %s"
0000000000002c16         mov        rbx, rax
0000000000002c19         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c1e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c20         call       j_dcgettext                                 ; dcgettext
0000000000002c25         mov        rcx, rbx
0000000000002c28         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002c2b         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002c2d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002c32         xor        eax, eax
0000000000002c34         call       j_error                                     ; error

                     loc_2c39:
0000000000002c39         mov        rdi, rbp                                    ; CODE XREF=add_field_list+34
0000000000002c3c         call       quote                                       ; quote
0000000000002c41         lea        rsi, qword [aInvalidFieldSp]                ; argument "msgid" for method j_dcgettext, "invalid field specifier: %s"
0000000000002c48         mov        rbx, rax
0000000000002c4b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c50         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c52         call       j_dcgettext                                 ; dcgettext
0000000000002c57         mov        rcx, rbx
0000000000002c5a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002c5d         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002c5f         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002c64         xor        eax, eax
0000000000002c66         call       j_error                                     ; error
0000000000002c6b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x8dbc)
                     freeline.part.2:
0000000000002c70         push       rbx                                         ; Begin of unwind block (FDE at 0x8dec), CODE XREF=main+2676, free_spareline+16, free_spareline+44, delseq.isra.3+37, get_line+759
0000000000002c71         mov        rbx, rdi
0000000000002c74         mov        rdi, qword [rdi+0x28]                       ; argument "__ptr" for method j_free
0000000000002c78         call       j_free                                      ; free
0000000000002c7d         mov        rdi, qword [rbx+0x10]                       ; argument "__ptr" for method j_free
0000000000002c81         mov        qword [rbx+0x28], 0x0
0000000000002c89         call       j_free                                      ; free
0000000000002c8e         mov        qword [rbx+0x10], 0x0
0000000000002c96         pop        rbx
0000000000002c97         ret
                        ; endp
0000000000002c98         align      32                                          ; End of unwind block (FDE at 0x8dec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     free_spareline:
0000000000002ca0         push       rbx                                         ; Begin of unwind block (FDE at 0x8e08), DATA XREF=main+159
0000000000002ca1         mov        rbx, qword [spareline]                      ; spareline
0000000000002ca8         test       rbx, rbx
0000000000002cab         je         loc_2cbd

0000000000002cad         mov        rdi, rbx
0000000000002cb0         call       freeline.part.2                             ; freeline.part.2
0000000000002cb5         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000002cb8         call       j_free                                      ; free

                     loc_2cbd:
0000000000002cbd         mov        rbx, qword [qword_20b1a8]                   ; qword_20b1a8, CODE XREF=free_spareline+11
0000000000002cc4         test       rbx, rbx
0000000000002cc7         je         loc_2ce0

0000000000002cc9         mov        rdi, rbx
0000000000002ccc         call       freeline.part.2                             ; freeline.part.2
0000000000002cd1         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000002cd4         pop        rbx
0000000000002cd5         jmp        j_free                                      ; free
                        ; endp
0000000000002cda         align      32

                     loc_2ce0:
0000000000002ce0         pop        rbx                                         ; CODE XREF=free_spareline+39
0000000000002ce1         ret
                        ; endp
0000000000002ce2         align      16                                          ; End of unwind block (FDE at 0x8e08)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     delseq.isra.3:
0000000000002cf0         push       r12                                         ; Begin of unwind block (FDE at 0x8e28), CODE XREF=main+1792, main+1805
0000000000002cf2         push       rbp
0000000000002cf3         mov        rbp, rsi
0000000000002cf6         push       rbx
0000000000002cf7         cmp        qword [rdi], 0x0
0000000000002cfb         je         loc_2d31

0000000000002cfd         mov        r12, rdi
0000000000002d00         xor        ebx, ebx
0000000000002d02         nop        word [rax+rax]

                     loc_2d08:
0000000000002d08         mov        rax, qword [rbp]                            ; CODE XREF=delseq.isra.3+63
0000000000002d0c         mov        rdi, qword [rax+rbx*8]
0000000000002d10         test       rdi, rdi
0000000000002d13         je         loc_2d22

0000000000002d15         call       freeline.part.2                             ; freeline.part.2
0000000000002d1a         mov        rax, qword [rbp]
0000000000002d1e         mov        rdi, qword [rax+rbx*8]

                     loc_2d22:
0000000000002d22         call       j_free                                      ; free, CODE XREF=delseq.isra.3+35
0000000000002d27         add        rbx, 0x1
0000000000002d2b         cmp        rbx, qword [r12]
0000000000002d2f         jb         loc_2d08

                     loc_2d31:
0000000000002d31         pop        rbx                                         ; CODE XREF=delseq.isra.3+11
0000000000002d32         mov        rdi, qword [rbp]                            ; argument "__ptr" for method j_free
0000000000002d36         pop        rbp
0000000000002d37         pop        r12
0000000000002d39         jmp        j_free                                      ; free
                        ; endp
0000000000002d3e         align      64                                          ; End of unwind block (FDE at 0x8e28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     keycmp.isra.4:
0000000000002d40         push       rbp                                         ; Begin of unwind block (FDE at 0x8e54), CODE XREF=main+1973, main+2077, main+2300, get_line+456
0000000000002d41         push       rbx
0000000000002d42         sub        rsp, 0x8
0000000000002d46         cmp        r8, rdi
0000000000002d49         jae        loc_2dc8

0000000000002d4b         shl        r8, 0x4
0000000000002d4f         add        r8, qword [rsi]
0000000000002d52         cmp        r9, rdx
0000000000002d55         mov        rbp, qword [r8+8]
0000000000002d59         jae        loc_2e00

0000000000002d5f         shl        r9, 0x4
0000000000002d63         add        r9, qword [rcx]
0000000000002d66         test       rbp, rbp
0000000000002d69         mov        rsi, qword [r9]
0000000000002d6c         mov        rbx, qword [r9+8]
0000000000002d70         je         loc_2dd8

0000000000002d72         test       rbx, rbx
0000000000002d75         je         loc_2e43

0000000000002d7b         cmp        byte [ignore_case], 0x0                     ; ignore_case
0000000000002d82         mov        rdi, qword [r8]
0000000000002d85         jne        loc_2e10

0000000000002d8b         cmp        byte [hard_LC_COLLATE], 0x0                 ; hard_LC_COLLATE
0000000000002d92         jne        loc_2e28

0000000000002d98         cmp        rbp, rbx
0000000000002d9b         mov        rdx, rbx
0000000000002d9e         cmovbe     rdx, rbp                                    ; argument "__n" for method j_memcmp
0000000000002da2         call       j_memcmp                                    ; memcmp

                     loc_2da7:
0000000000002da7         test       eax, eax                                    ; CODE XREF=keycmp.isra.4+223
0000000000002da9         jne        loc_2df2

0000000000002dab         cmp        rbp, rbx
0000000000002dae         jb         loc_2e3c

0000000000002db4         setne      al
0000000000002db7         add        rsp, 0x8
0000000000002dbb         movzx      eax, al
0000000000002dbe         pop        rbx
0000000000002dbf         pop        rbp
0000000000002dc0         ret
                        ; endp
0000000000002dc1         align      8

                     loc_2dc8:
0000000000002dc8         cmp        r9, rdx                                     ; CODE XREF=keycmp.isra.4+9
0000000000002dcb         jae        loc_2df0

0000000000002dcd         shl        r9, 0x4
0000000000002dd1         add        r9, qword [rcx]
0000000000002dd4         mov        rbx, qword [r9+8]

                     loc_2dd8:
0000000000002dd8         xor        eax, eax                                    ; CODE XREF=keycmp.isra.4+48
0000000000002dda         test       rbx, rbx
0000000000002ddd         setne      al
0000000000002de0         add        rsp, 0x8
0000000000002de4         neg        eax
0000000000002de6         pop        rbx
0000000000002de7         pop        rbp
0000000000002de8         ret
                        ; endp
0000000000002de9         align      16

                     loc_2df0:
0000000000002df0         xor        eax, eax                                    ; CODE XREF=keycmp.isra.4+139

                     loc_2df2:
0000000000002df2         add        rsp, 0x8                                    ; CODE XREF=keycmp.isra.4+105, keycmp.isra.4+257, keycmp.isra.4+264
0000000000002df6         pop        rbx
0000000000002df7         pop        rbp
0000000000002df8         ret
                        ; endp
0000000000002df9         align      512

                     loc_2e00:
0000000000002e00         xor        eax, eax                                    ; CODE XREF=keycmp.isra.4+25
0000000000002e02         test       rbp, rbp
0000000000002e05         setne      al
0000000000002e08         add        rsp, 0x8
0000000000002e0c         pop        rbx
0000000000002e0d         pop        rbp
0000000000002e0e         ret
                        ; endp
0000000000002e0f         align      16

                     loc_2e10:
0000000000002e10         cmp        rbp, rbx                                    ; CODE XREF=keycmp.isra.4+69
0000000000002e13         mov        rdx, rbx
0000000000002e16         cmovbe     rdx, rbp
0000000000002e1a         call       memcasecmp                                  ; memcasecmp
0000000000002e1f         jmp        loc_2da7
0000000000002e21         align      8

                     loc_2e28:
0000000000002e28         add        rsp, 0x8                                    ; CODE XREF=keycmp.isra.4+82
0000000000002e2c         mov        rcx, rbx
0000000000002e2f         mov        rdx, rsi
0000000000002e32         pop        rbx
0000000000002e33         mov        rsi, rbp
0000000000002e36         pop        rbp
0000000000002e37         jmp        xmemcoll                                    ; xmemcoll

                     loc_2e3c:
0000000000002e3c         mov        eax, 0xffffffff                             ; CODE XREF=keycmp.isra.4+110
0000000000002e41         jmp        loc_2df2

                     loc_2e43:
0000000000002e43         mov        eax, 0x1                                    ; CODE XREF=keycmp.isra.4+53
0000000000002e48         jmp        loc_2df2
0000000000002e4a         align      16                                          ; End of unwind block (FDE at 0x8e54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     prfield.isra.5:
0000000000002e50         cmp        rdi, rsi                                    ; Begin of unwind block (FDE at 0x8eb0), CODE XREF=prfields+143, prfields+218, prjoin+85, prjoin+194
0000000000002e53         jae        loc_2e80

0000000000002e55         shl        rdi, 0x4
0000000000002e59         add        rdi, qword [rdx]
0000000000002e5c         mov        rdx, qword [rdi+8]
0000000000002e60         test       rdx, rdx
0000000000002e63         je         loc_2e80

0000000000002e65         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000002e6c         mov        rdi, qword [rdi]                            ; argument "__ptr" for method j_fwrite_unlocked
0000000000002e6f         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000002e74         jmp        j_fwrite_unlocked                           ; fwrite_unlocked
                        ; endp
0000000000002e79         align      128

                     loc_2e80:
0000000000002e80         mov        rdi, qword [empty_filler]                   ; empty_filler, CODE XREF=prfield.isra.5+3, prfield.isra.5+19
0000000000002e87         test       rdi, rdi
0000000000002e8a         je         loc_2ea0

0000000000002e8c         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5
0000000000002e93         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp
0000000000002e98         align      32

                     loc_2ea0:
0000000000002ea0         ret                                                    ; CODE XREF=prfield.isra.5+58
                        ; endp
0000000000002ea2         align      16                                          ; End of unwind block (FDE at 0x8eb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     prfields:
0000000000002eb0         push       r15                                         ; Begin of unwind block (FDE at 0x8ec4), CODE XREF=prjoin+216, prjoin+238
0000000000002eb2         push       r14
0000000000002eb4         mov        r15, rdi
0000000000002eb7         push       r13
0000000000002eb9         push       r12
0000000000002ebb         mov        r12, rdx
0000000000002ebe         push       rbp
0000000000002ebf         push       rbx
0000000000002ec0         sub        rsp, 0x18
0000000000002ec4         cmp        byte [autoformat], 0x0                      ; autoformat
0000000000002ecb         mov        qword [rsp+0x48+var_40], rsi
0000000000002ed0         jne        loc_2ed6

0000000000002ed2         mov        r12, qword [rdi+0x18]

                     loc_2ed6:
0000000000002ed6         mov        r14d, dword [tab]                           ; tab, CODE XREF=prfields+32
0000000000002edd         mov        eax, 0x20
0000000000002ee2         test       r14d, r14d
0000000000002ee5         cmovs      r14d, eax
0000000000002ee9         mov        rax, qword [rsp+0x48+var_40]
0000000000002eee         mov        ebp, r14d
0000000000002ef1         cmp        r12, rax
0000000000002ef4         mov        r13, rax
0000000000002ef7         cmovbe     r13, r12
0000000000002efb         test       r13, r13
0000000000002efe         je         loc_2f49

0000000000002f00         lea        rax, qword [r15+0x28]
0000000000002f04         xor        ebx, ebx
0000000000002f06         movzx      r14d, r14b
0000000000002f0a         mov        qword [rsp+0x48+var_48], rax
0000000000002f0e         nop

                     loc_2f10:
0000000000002f10         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=prfields+151
0000000000002f17         mov        rax, qword [rdi+0x28]
0000000000002f1b         cmp        rax, qword [rdi+0x30]
0000000000002f1f         jae        loc_2fa8

0000000000002f25         lea        rdx, qword [rax+1]
0000000000002f29         mov        qword [rdi+0x28], rdx
0000000000002f2d         mov        byte [rax], bpl

                     loc_2f30:
0000000000002f30         mov        rsi, qword [r15+0x18]                       ; CODE XREF=prfields+256
0000000000002f34         mov        rdx, qword [rsp+0x48+var_48]
0000000000002f38         mov        rdi, rbx
0000000000002f3b         add        rbx, 0x1
0000000000002f3f         call       prfield.isra.5                              ; prfield.isra.5
0000000000002f44         cmp        rbx, r13
0000000000002f47         jne        loc_2f10

                     loc_2f49:
0000000000002f49         mov        rbx, qword [rsp+0x48+var_40]                ; CODE XREF=prfields+78
0000000000002f4e         add        rbx, 0x1
0000000000002f52         cmp        r12, rbx
0000000000002f55         jbe        loc_2f94

0000000000002f57         lea        r13, qword [r15+0x28]
0000000000002f5b         movzx      r14d, bpl
0000000000002f5f         nop

                     loc_2f60:
0000000000002f60         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=prfields+226
0000000000002f67         mov        rax, qword [rdi+0x28]
0000000000002f6b         cmp        rax, qword [rdi+0x30]
0000000000002f6f         jae        loc_2fb8

0000000000002f71         lea        rdx, qword [rax+1]
0000000000002f75         mov        qword [rdi+0x28], rdx
0000000000002f79         mov        byte [rax], bpl

                     loc_2f7c:
0000000000002f7c         mov        rsi, qword [r15+0x18]                       ; CODE XREF=prfields+272
0000000000002f80         mov        rdi, rbx
0000000000002f83         mov        rdx, r13
0000000000002f86         add        rbx, 0x1
0000000000002f8a         call       prfield.isra.5                              ; prfield.isra.5
0000000000002f8f         cmp        r12, rbx
0000000000002f92         jne        loc_2f60

                     loc_2f94:
0000000000002f94         add        rsp, 0x18                                   ; CODE XREF=prfields+165
0000000000002f98         pop        rbx
0000000000002f99         pop        rbp
0000000000002f9a         pop        r12
0000000000002f9c         pop        r13
0000000000002f9e         pop        r14
0000000000002fa0         pop        r15
0000000000002fa2         ret
                        ; endp
0000000000002fa3         align      8

                     loc_2fa8:
0000000000002fa8         mov        esi, r14d                                   ; argument #2 for method j___overflow, CODE XREF=prfields+111
0000000000002fab         call       j___overflow                                ; __overflow
0000000000002fb0         jmp        loc_2f30
0000000000002fb5         align      8

                     loc_2fb8:
0000000000002fb8         mov        esi, r14d                                   ; argument #2 for method j___overflow, CODE XREF=prfields+191
0000000000002fbb         call       j___overflow                                ; __overflow
0000000000002fc0         jmp        loc_2f7c
0000000000002fc2         align      16                                          ; End of unwind block (FDE at 0x8ec4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     prjoin:
0000000000002fd0         push       r14                                         ; Begin of unwind block (FDE at 0x8f10), CODE XREF=main+2751, main+2886, main+2950, main+3066, main+3137, main+3283, main+3308, main+3330
0000000000002fd2         push       r13
0000000000002fd4         mov        eax, 0x20
0000000000002fd9         push       r12
0000000000002fdb         mov        r12d, dword [tab]                           ; tab
0000000000002fe2         mov        r13, rsi
0000000000002fe5         push       rbp
0000000000002fe6         push       rbx
0000000000002fe7         mov        rbp, rdi
0000000000002fea         mov        rbx, qword [qword_20b170]                   ; qword_20b170
0000000000002ff1         lea        r14, qword [uni_blank]                      ; uni_blank
0000000000002ff8         test       r12d, r12d
0000000000002ffb         cmovs      r12d, eax
0000000000002fff         test       rbx, rbx
0000000000003002         je         loc_3070

                     loc_3004:
0000000000003004         mov        eax, dword [rbx]                            ; CODE XREF=prjoin+313
0000000000003006         test       eax, eax
0000000000003008         jne        loc_305d

                     loc_300a:
000000000000300a         cmp        rbp, r14                                    ; CODE XREF=prjoin+139
000000000000300d         je         loc_30f0

0000000000003013         mov        rdi, qword [join_field_1]                   ; join_field_1
000000000000301a         mov        rax, rbp

                     loc_301d:
000000000000301d         mov        rsi, qword [rax+0x18]                       ; CODE XREF=prjoin+155, prjoin+298
0000000000003021         lea        rdx, qword [rax+0x28]
0000000000003025         call       prfield.isra.5                              ; prfield.isra.5
000000000000302a         mov        rbx, qword [rbx+0x10]
000000000000302e         test       rbx, rbx
0000000000003031         je         loc_30c3

0000000000003037         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000303e         mov        rax, qword [rdi+0x28]
0000000000003042         cmp        rax, qword [rdi+0x30]
0000000000003046         jae        loc_3100

000000000000304c         lea        rdx, qword [rax+1]
0000000000003050         mov        qword [rdi+0x28], rdx
0000000000003054         mov        byte [rax], r12b
0000000000003057         mov        eax, dword [rbx]
0000000000003059         test       eax, eax
000000000000305b         je         loc_300a

                     loc_305d:
000000000000305d         cmp        eax, 0x1                                    ; CODE XREF=prjoin+56
0000000000003060         mov        rax, rbp
0000000000003063         mov        rdi, qword [rbx+8]
0000000000003067         cmovne     rax, r13
000000000000306b         jmp        loc_301d
000000000000306d         align      16

                     loc_3070:
0000000000003070         lea        rax, qword [uni_blank]                      ; uni_blank, CODE XREF=prjoin+50
0000000000003077         cmp        rdi, rax
000000000000307a         je         loc_3120

0000000000003080         mov        rdi, qword [join_field_1]                   ; join_field_1
0000000000003087         mov        rax, rbp

                     loc_308a:
000000000000308a         mov        rsi, qword [rax+0x18]                       ; CODE XREF=prjoin+346
000000000000308e         lea        rdx, qword [rax+0x28]
0000000000003092         call       prfield.isra.5                              ; prfield.isra.5
0000000000003097         mov        rdx, qword [autocount_1]                    ; autocount_1
000000000000309e         mov        rsi, qword [join_field_1]                   ; join_field_1
00000000000030a5         mov        rdi, rbp
00000000000030a8         call       prfields                                    ; prfields
00000000000030ad         mov        rdx, qword [autocount_2]                    ; autocount_2
00000000000030b4         mov        rsi, qword [join_field_2]                   ; join_field_2
00000000000030bb         mov        rdi, r13
00000000000030be         call       prfields                                    ; prfields

                     loc_30c3:
00000000000030c3         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=prjoin+97
00000000000030ca         movzx      edx, byte [eolchar]                         ; eolchar
00000000000030d1         mov        rax, qword [rdi+0x28]
00000000000030d5         cmp        rax, qword [rdi+0x30]
00000000000030d9         jae        loc_3110

00000000000030db         lea        rcx, qword [rax+1]
00000000000030df         mov        qword [rdi+0x28], rcx
00000000000030e3         mov        byte [rax], dl
00000000000030e5         pop        rbx
00000000000030e6         pop        rbp
00000000000030e7         pop        r12
00000000000030e9         pop        r13
00000000000030eb         pop        r14
00000000000030ed         ret
                        ; endp
00000000000030ee         align      16

                     loc_30f0:
00000000000030f0         mov        rdi, qword [join_field_2]                   ; join_field_2, CODE XREF=prjoin+61
00000000000030f7         mov        rax, r13
00000000000030fa         jmp        loc_301d
00000000000030ff         align      256

                     loc_3100:
0000000000003100         movzx      esi, r12b                                   ; argument #2 for method j___overflow, CODE XREF=prjoin+118
0000000000003104         call       j___overflow                                ; __overflow
0000000000003109         jmp        loc_3004
000000000000310e         align      16

                     loc_3110:
0000000000003110         pop        rbx                                         ; CODE XREF=prjoin+265
0000000000003111         pop        rbp
0000000000003112         pop        r12
0000000000003114         pop        r13
0000000000003116         pop        r14
0000000000003118         movzx      esi, dl                                     ; argument #2 for method j___overflow
000000000000311b         jmp        j___overflow                                ; __overflow
                        ; endp

                     loc_3120:
0000000000003120         mov        rdi, qword [join_field_2]                   ; join_field_2, CODE XREF=prjoin+170
0000000000003127         mov        rax, rsi
000000000000312a         jmp        loc_308a
000000000000312f         align      16                                          ; End of unwind block (FDE at 0x8f10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     extract_field:
0000000000003130         push       r12                                         ; Begin of unwind block (FDE at 0x8f60), CODE XREF=get_line+280, get_line+348, get_line+672, get_line+722, get_line+916
0000000000003132         mov        r12, rsi
0000000000003135         push       rbp
0000000000003136         push       rbx
0000000000003137         mov        rax, qword [rdi+0x18]
000000000000313b         mov        rbx, rdi
000000000000313e         mov        rsi, qword [rdi+0x20]
0000000000003142         mov        rbp, rdx
0000000000003145         mov        rdi, qword [rdi+0x28]
0000000000003149         cmp        rax, rsi
000000000000314c         jae        loc_3170

                     loc_314e:
000000000000314e         mov        rdx, rax                                    ; CODE XREF=extract_field+119
0000000000003151         add        rax, 0x1
0000000000003155         shl        rdx, 0x4
0000000000003159         add        rdi, rdx
000000000000315c         mov        qword [rdi], r12
000000000000315f         mov        qword [rdi+8], rbp
0000000000003163         mov        qword [rbx+0x18], rax
0000000000003167         pop        rbx
0000000000003168         pop        rbp
0000000000003169         pop        r12
000000000000316b         ret
                        ; endp
000000000000316c         align      16

                     loc_3170:
0000000000003170         test       rdi, rdi                                    ; CODE XREF=extract_field+28
0000000000003173         je         loc_31b0

0000000000003175         movabs     rax, 0x555555555555554
000000000000317f         cmp        rsi, rax
0000000000003182         ja         loc_31d5

0000000000003184         mov        rax, rsi
0000000000003187         shr        rax, 0x1
000000000000318a         lea        rsi, qword [rsi+rax+1]

                     loc_318f:
000000000000318f         mov        qword [rbx+0x20], rsi                       ; CODE XREF=extract_field+163
0000000000003193         shl        rsi, 0x4                                    ; argument #2 for method xrealloc
0000000000003197         call       xrealloc                                    ; xrealloc
000000000000319c         mov        rdi, rax
000000000000319f         mov        qword [rbx+0x28], rax
00000000000031a3         mov        rax, qword [rbx+0x18]
00000000000031a7         jmp        loc_314e
00000000000031a9         align      16

                     loc_31b0:
00000000000031b0         test       rsi, rsi                                    ; CODE XREF=extract_field+67
00000000000031b3         mov        eax, 0x8
00000000000031b8         mov        edx, 0x10
00000000000031bd         cmove      rsi, rax
00000000000031c1         mov        rax, rdx
00000000000031c4         xor        ecx, ecx
00000000000031c6         mul        rsi
00000000000031c9         jo         loc_31da

                     loc_31cb:
00000000000031cb         test       rax, rax                                    ; CODE XREF=extract_field+175
00000000000031ce         js         loc_31d5

00000000000031d0         test       rcx, rcx
00000000000031d3         je         loc_318f

                     loc_31d5:
00000000000031d5         call       xalloc_die                                  ; xalloc_die, CODE XREF=extract_field+82, extract_field+158
                        ; endp

                     loc_31da:
00000000000031da         mov        ecx, 0x1                                    ; CODE XREF=extract_field+153
00000000000031df         jmp        loc_31cb
00000000000031e1         align      16                                          ; End of unwind block (FDE at 0x8f60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_48: int64_t, -72


                     get_line:
00000000000031f0         push       r15                                         ; Begin of unwind block (FDE at 0x8f8c), CODE XREF=main+2603, main+3022, getseq+36
00000000000031f2         push       r14
00000000000031f4         mov        r14, rdi
00000000000031f7         push       r13
00000000000031f9         push       r12
00000000000031fb         lea        r12, qword [prevline]                       ; prevline
0000000000003202         push       rbp
0000000000003203         push       rbx
0000000000003204         lea        ebx, dword [rdx-1]
0000000000003207         mov        rbp, rsi
000000000000320a         movsxd     rbx, ebx
000000000000320d         sub        rsp, 0x18
0000000000003211         mov        r13, qword [rsi]
0000000000003214         cmp        qword [r12+rbx*8], r13
0000000000003218         mov        dword [rsp+0x48+var_3C], edx
000000000000321c         je         loc_3500

0000000000003222         test       r13, r13
0000000000003225         je         loc_351e

                     loc_322b:
000000000000322b         mov        qword [r13+0x18], 0x0                       ; CODE XREF=get_line+808

                     loc_3233:
0000000000003233         movsx      edx, byte [eolchar]                         ; argument #3 for method readlinebuffer_delim, eolchar, CODE XREF=get_line+836
000000000000323a         mov        rsi, r14                                    ; argument #2 for method readlinebuffer_delim
000000000000323d         mov        rdi, r13                                    ; argument #1 for method readlinebuffer_delim
0000000000003240         call       readlinebuffer_delim                        ; readlinebuffer_delim
0000000000003245         test       rax, rax
0000000000003248         je         loc_34d0

000000000000324e         lea        rax, qword [line_no]                        ; line_no
0000000000003255         mov        r14, qword [r13+0x10]
0000000000003259         add        qword [rax+rbx*8], 0x1
000000000000325e         mov        rax, qword [r13+8]
0000000000003262         lea        r15, qword [rax-1]
0000000000003266         lea        rbp, qword [r14+r15]
000000000000326a         cmp        r14, rbp
000000000000326d         je         loc_3351

0000000000003273         mov        esi, dword [tab]                            ; tab
0000000000003279         test       esi, esi
000000000000327b         js         loc_3286

000000000000327d         cmp        esi, 0xa
0000000000003280         jne        loc_34a3

                     loc_3286:
0000000000003286         test       esi, esi                                    ; CODE XREF=get_line+139
0000000000003288         jns        loc_3343

000000000000328e         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003293         mov        rdx, qword [rax]
0000000000003296         mov        r15, rax
0000000000003299         nop        dword [rax]

                     loc_32a0:
00000000000032a0         movzx      edi, byte [r14]                             ; CODE XREF=get_line+886
00000000000032a4         lea        rax, qword [r14+1]
00000000000032a8         test       byte [rdx+rdi*2], 0x1
00000000000032ac         jne        loc_3560

00000000000032b2         cmp        dil, 0xa
00000000000032b6         je         loc_3560

                     loc_32bc:
00000000000032bc         cmp        rbp, rax                                    ; CODE XREF=get_line+330
00000000000032bf         je         loc_3578

00000000000032c5         movzx      edi, byte [r14+1]
00000000000032ca         test       byte [rdx+rdi*2], 0x1
00000000000032ce         mov        rsi, rdi
00000000000032d1         jne        loc_32f8

                     loc_32d3:
00000000000032d3         cmp        sil, 0xa                                    ; CODE XREF=get_line+256
00000000000032d7         je         loc_32f8

00000000000032d9         add        rax, 0x1
00000000000032dd         cmp        rbp, rax
00000000000032e0         je         loc_3578

00000000000032e6         movzx      edi, byte [rax]
00000000000032e9         test       byte [rdx+rdi*2], 0x1
00000000000032ed         mov        rsi, rdi
00000000000032f0         je         loc_32d3

00000000000032f2         nop        word [rax+rax]

                     loc_32f8:
00000000000032f8         mov        rdx, rax                                    ; CODE XREF=get_line+225, get_line+231
00000000000032fb         mov        rsi, r14                                    ; argument #2 for method extract_field
00000000000032fe         mov        rdi, r13                                    ; argument #1 for method extract_field
0000000000003301         sub        rdx, r14                                    ; argument #3 for method extract_field
0000000000003304         mov        qword [rsp+0x48+var_48], rax
0000000000003308         call       extract_field                               ; extract_field
000000000000330d         mov        rax, qword [rsp+0x48+var_48]
0000000000003311         lea        r14, qword [rax+1]
0000000000003315         cmp        rbp, r14
0000000000003318         je         loc_3340

000000000000331a         movzx      esi, byte [rax+1]
000000000000331e         mov        rdx, qword [r15]
0000000000003321         test       byte [rdx+rsi*2], 0x1
0000000000003325         mov        rax, rsi
0000000000003328         jne        loc_3540

                     loc_332e:
000000000000332e         cmp        al, 0xa                                     ; CODE XREF=get_line+872
0000000000003330         je         loc_3540

0000000000003336         lea        rax, qword [r14+1]
000000000000333a         jmp        loc_32bc
000000000000333c         align      64

                     loc_3340:
0000000000003340         xor        r15d, r15d                                  ; CODE XREF=get_line+296, get_line+855

                     loc_3343:
0000000000003343         mov        rdx, r15                                    ; argument #3 for method extract_field, CODE XREF=get_line+152
0000000000003346         mov        rsi, r14                                    ; argument #2 for method extract_field
0000000000003349         mov        rdi, r13                                    ; argument #1 for method extract_field
000000000000334c         call       extract_field                               ; extract_field

                     loc_3351:
0000000000003351         mov        rax, qword [r12+rbx*8]                      ; CODE XREF=get_line+125, get_line+727, get_line+892, get_line+921
0000000000003355         test       rax, rax
0000000000003358         je         loc_3460

000000000000335e         mov        edx, dword [check_input_order]              ; check_input_order
0000000000003364         cmp        edx, 0x2
0000000000003367         je         loc_3460

000000000000336d         cmp        edx, 0x1
0000000000003370         je         loc_337f

0000000000003372         cmp        byte [seen_unpairable], 0x0                 ; seen_unpairable
0000000000003379         je         loc_3460

                     loc_337f:
000000000000337f         lea        rbp, qword [issued_disorder_warning]        ; issued_disorder_warning, CODE XREF=get_line+384
0000000000003386         cmp        byte [rbp+rbx], 0x0
000000000000338b         jne        loc_3460

0000000000003391         cmp        dword [rsp+0x48+var_3C], 0x1
0000000000003396         mov        r8, qword [join_field_1]                    ; join_field_1
000000000000339d         lea        rcx, qword [r13+0x28]                       ; argument #4 for method keycmp.isra.4
00000000000033a1         cmovne     r8, qword [join_field_2]                    ; argument #5 for method keycmp.isra.4, join_field_2
00000000000033a9         mov        rdx, qword [r13+0x18]                       ; argument #3 for method keycmp.isra.4
00000000000033ad         lea        rsi, qword [rax+0x28]                       ; argument #2 for method keycmp.isra.4
00000000000033b1         mov        rdi, qword [rax+0x18]                       ; argument #1 for method keycmp.isra.4
00000000000033b5         mov        r9, r8                                      ; argument #6 for method keycmp.isra.4
00000000000033b8         call       keycmp.isra.4                               ; keycmp.isra.4
00000000000033bd         test       eax, eax
00000000000033bf         jle        loc_3460

00000000000033c5         mov        rax, qword [r13+8]
00000000000033c9         xor        r9d, r9d
00000000000033cc         mov        r14, qword [r13+0x10]
00000000000033d0         test       rax, rax
00000000000033d3         je         loc_33f7

00000000000033d5         cmp        byte [r14+rax-1], 0xa
00000000000033db         lea        rdx, qword [rax-1]
00000000000033df         je         loc_358e

00000000000033e5         cmp        rax, 0x7fffffff
00000000000033eb         mov        edx, 0x7fffffff
00000000000033f0         cmovbe     rdx, rax
00000000000033f4         mov        r9, rdx

                     loc_33f7:
00000000000033f7         lea        rax, qword [line_no]                        ; line_no, CODE XREF=get_line+483, get_line+945
00000000000033fe         lea        rsi, qword [aSluIsNotSorted]                ; argument "msgid" for method j_dcgettext, "%s:%lu: is not sorted: %.*s"
0000000000003405         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003407         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000340c         mov        dword [rsp+0x48+var_3C], r9d
0000000000003411         mov        r15, qword [rax+rbx*8]
0000000000003415         lea        rax, qword [g_names]                        ; g_names
000000000000341c         mov        rcx, qword [rax+rbx*8]
0000000000003420         mov        qword [rsp+0x48+var_48], rcx
0000000000003424         call       j_dcgettext                                 ; dcgettext
0000000000003429         xor        edi, edi
000000000000342b         cmp        dword [check_input_order], 0x1              ; check_input_order
0000000000003432         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003435         mov        r8, r15
0000000000003438         sete       dil                                         ; argument "__status" for method j_error
000000000000343c         sub        rsp, 0x8
0000000000003440         xor        eax, eax
0000000000003442         push       r14
0000000000003444         mov        r9d, dword [rsp+0x58+var_3C]
0000000000003449         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000344b         mov        rcx, qword [rsp+0x58+var_48]
0000000000003450         call       j_error                                     ; error
0000000000003455         mov        byte [rbp+rbx], 0x1
000000000000345a         pop        rax
000000000000345b         pop        rdx
000000000000345c         nop        dword [rax]

                     loc_3460:
0000000000003460         mov        qword [r12+rbx*8], r13                      ; CODE XREF=get_line+360, get_line+375, get_line+393, get_line+411, get_line+463
0000000000003464         mov        eax, 0x1

                     loc_3469:
0000000000003469         add        rsp, 0x18                                   ; CODE XREF=get_line+751
000000000000346d         pop        rbx
000000000000346e         pop        rbp
000000000000346f         pop        r12
0000000000003471         pop        r13
0000000000003473         pop        r14
0000000000003475         pop        r15
0000000000003477         ret
                        ; endp
0000000000003478         align      128

                     loc_3480:
0000000000003480         mov        rdx, rax                                    ; CODE XREF=get_line+711
0000000000003483         mov        rsi, r14                                    ; argument #2 for method extract_field
0000000000003486         mov        rdi, r13                                    ; argument #1 for method extract_field
0000000000003489         sub        rdx, r14                                    ; argument #3 for method extract_field
000000000000348c         mov        qword [rsp+0x48+var_48], rax
0000000000003490         call       extract_field                               ; extract_field
0000000000003495         mov        rax, qword [rsp+0x48+var_48]
0000000000003499         mov        esi, dword [tab]                            ; tab
000000000000349f         lea        r14, qword [rax+1]

                     loc_34a3:
00000000000034a3         mov        r15, rbp                                    ; CODE XREF=get_line+144
00000000000034a6         mov        rdi, r14                                    ; argument "__s" for method j_memchr
00000000000034a9         sub        r15, r14
00000000000034ac         mov        rdx, r15                                    ; argument "__n" for method j_memchr
00000000000034af         call       j_memchr                                    ; memchr
00000000000034b4         test       rax, rax
00000000000034b7         jne        loc_3480

00000000000034b9         mov        rdx, r15                                    ; argument #3 for method extract_field
00000000000034bc         mov        rsi, r14                                    ; argument #2 for method extract_field
00000000000034bf         mov        rdi, r13                                    ; argument #1 for method extract_field
00000000000034c2         call       extract_field                               ; extract_field
00000000000034c7         jmp        loc_3351
00000000000034cc         align      16

                     loc_34d0:
00000000000034d0         test       byte [r14], 0x20                            ; CODE XREF=get_line+88
00000000000034d4         jne        loc_35a6

00000000000034da         xor        eax, eax
00000000000034dc         test       r13, r13
00000000000034df         je         loc_3469

00000000000034e1         mov        rdi, r13                                    ; argument #1 for method freeline.part.2
00000000000034e4         mov        byte [rsp+0x48+var_48], al
00000000000034e7         call       freeline.part.2                             ; freeline.part.2
00000000000034ec         movzx      eax, byte [rsp+0x48+var_48]
00000000000034f0         add        rsp, 0x18
00000000000034f4         pop        rbx
00000000000034f5         pop        rbp
00000000000034f6         pop        r12
00000000000034f8         pop        r13
00000000000034fa         pop        r14
00000000000034fc         pop        r15
00000000000034fe         ret
                        ; endp
00000000000034ff         align      256

                     loc_3500:
0000000000003500         lea        rdx, qword [spareline]                      ; spareline, CODE XREF=get_line+44
0000000000003507         mov        rax, qword [rdx+rbx*8]
000000000000350b         mov        qword [rdx+rbx*8], r13
000000000000350f         mov        r13, rax
0000000000003512         mov        qword [rsi], rax
0000000000003515         test       r13, r13
0000000000003518         jne        loc_322b

                     loc_351e:
000000000000351e         mov        esi, 0x30                                   ; CODE XREF=get_line+53
0000000000003523         mov        edi, 0x1
0000000000003528         call       xcalloc                                     ; xcalloc
000000000000352d         mov        r13, rax
0000000000003530         mov        qword [rbp], rax
0000000000003534         jmp        loc_3233
0000000000003539         align      64

                     loc_3540:
0000000000003540         add        r14, 0x1                                    ; CODE XREF=get_line+312, get_line+320, get_line+878
0000000000003544         cmp        rbp, r14
0000000000003547         je         loc_3340

000000000000354d         movzx      esi, byte [r14]
0000000000003551         test       byte [rdx+rsi*2], 0x1
0000000000003555         mov        rax, rsi
0000000000003558         je         loc_332e

000000000000355e         jmp        loc_3540

                     loc_3560:
0000000000003560         cmp        rbp, rax                                    ; CODE XREF=get_line+188, get_line+198
0000000000003563         mov        r14, rax
0000000000003566         jne        loc_32a0

000000000000356c         jmp        loc_3351
0000000000003571         align      8

                     loc_3578:
0000000000003578         sub        rax, r14                                    ; CODE XREF=get_line+207, get_line+240
000000000000357b         mov        rsi, r14                                    ; argument #2 for method extract_field
000000000000357e         mov        rdi, r13                                    ; argument #1 for method extract_field
0000000000003581         mov        rdx, rax                                    ; argument #3 for method extract_field
0000000000003584         call       extract_field                               ; extract_field
0000000000003589         jmp        loc_3351

                     loc_358e:
000000000000358e         cmp        rdx, 0x7fffffff                             ; CODE XREF=get_line+495
0000000000003595         mov        eax, 0x7fffffff
000000000000359a         cmovbe     rax, rdx
000000000000359e         mov        r9, rax
00000000000035a1         jmp        loc_33f7

                     loc_35a6:
00000000000035a6         lea        rsi, qword [aReadError]                     ; argument "msgid" for method j_dcgettext, "read error", CODE XREF=get_line+740
00000000000035ad         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000035b2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000035b4         call       j_dcgettext                                 ; dcgettext
00000000000035b9         mov        rbx, rax
00000000000035bc         call       j___errno_location                          ; __errno_location
00000000000035c1         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000035c3         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000035c6         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000035cb         xor        eax, eax
00000000000035cd         call       j_error                                     ; error
00000000000035d2         nop        dword [rax]                                 ; End of unwind block (FDE at 0x8f8c)
00000000000035d6         nop        word [cs:rax+rax]
                     getseq:
00000000000035e0         push       r12                                         ; Begin of unwind block (FDE at 0x9000), CODE XREF=main+1546, main+1589, main+1997, main+2101, main+2352, main+2719, main+3192, main+3229
00000000000035e2         push       rbp
00000000000035e3         mov        r12d, edx
00000000000035e6         push       rbx
00000000000035e7         mov        rbx, rsi
00000000000035ea         mov        rsi, qword [rsi]
00000000000035ed         cmp        rsi, qword [rbx+8]
00000000000035f1         mov        rbp, rdi
00000000000035f4         mov        rdi, qword [rbx+0x10]
00000000000035f8         je         loc_3620

                     loc_35fa:
00000000000035fa         lea        rsi, qword [rdi+rsi*8]                      ; argument #2 for method get_line, CODE XREF=getseq+125, getseq+160
00000000000035fe         mov        edx, r12d                                   ; argument #3 for method get_line
0000000000003601         mov        rdi, rbp                                    ; argument #1 for method get_line
0000000000003604         call       get_line                                    ; get_line
0000000000003609         test       al, al
000000000000360b         je         loc_3611

000000000000360d         add        qword [rbx], 0x1

                     loc_3611:
0000000000003611         pop        rbx                                         ; CODE XREF=getseq+43
0000000000003612         pop        rbp
0000000000003613         pop        r12
0000000000003615         ret
                        ; endp
0000000000003616         align      32

                     loc_3620:
0000000000003620         test       rdi, rdi                                    ; CODE XREF=getseq+24
0000000000003623         je         loc_3688

0000000000003625         movabs     rax, 0xaaaaaaaaaaaaaa9
000000000000362f         cmp        rsi, rax
0000000000003632         ja         loc_36ad

0000000000003634         mov        rax, rsi
0000000000003637         shr        rax, 0x1
000000000000363a         lea        rsi, qword [rsi+rax+1]

                     loc_363f:
000000000000363f         mov        qword [rbx+8], rsi                          ; CODE XREF=getseq+203
0000000000003643         shl        rsi, 0x3                                    ; argument #2 for method xrealloc
0000000000003647         call       xrealloc                                    ; xrealloc
000000000000364c         mov        rsi, qword [rbx]
000000000000364f         mov        rdx, qword [rbx+8]
0000000000003653         mov        rdi, rax
0000000000003656         mov        qword [rbx+0x10], rax
000000000000365a         cmp        rsi, rdx
000000000000365d         jae        loc_35fa

000000000000365f         lea        rax, qword [rax+rsi*8]
0000000000003663         lea        rdx, qword [rdi+rdx*8]
0000000000003667         nop        word [rax+rax]

                     loc_3670:
0000000000003670         mov        qword [rax], 0x0                            ; CODE XREF=getseq+158
0000000000003677         add        rax, 0x8
000000000000367b         cmp        rax, rdx
000000000000367e         jne        loc_3670

0000000000003680         jmp        loc_35fa
0000000000003685         align      8

                     loc_3688:
0000000000003688         test       rsi, rsi                                    ; CODE XREF=getseq+67
000000000000368b         mov        eax, 0x10
0000000000003690         mov        edx, 0x8
0000000000003695         cmove      rsi, rax
0000000000003699         mov        rax, rdx
000000000000369c         xor        ecx, ecx
000000000000369e         mul        rsi
00000000000036a1         jo         loc_36b2

                     loc_36a3:
00000000000036a3         test       rax, rax                                    ; CODE XREF=getseq+215
00000000000036a6         js         loc_36ad

00000000000036a8         test       rcx, rcx
00000000000036ab         je         loc_363f

                     loc_36ad:
00000000000036ad         call       xalloc_die                                  ; xalloc_die, CODE XREF=getseq+82, getseq+198
                        ; endp

                     loc_36b2:
00000000000036b2         mov        ecx, 0x1                                    ; CODE XREF=getseq+193
00000000000036b7         jmp        loc_36a3
00000000000036b9         align      64                                          ; End of unwind block (FDE at 0x9000)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000036c0         push       r13                                         ; Begin of unwind block (FDE at 0x902c), CODE XREF=main+406, main+3368, add_file_name.constprop.7+433
00000000000036c2         push       r12
00000000000036c4         mov        edx, 0x5
00000000000036c9         push       rbp
00000000000036ca         push       rbx
00000000000036cb         mov        ebp, edi
00000000000036cd         sub        rsp, 0x88
00000000000036d4         mov        rbx, qword [program_name]                   ; program_name
00000000000036db         mov        rax, qword [fs:0x28]
00000000000036e4         mov        qword [rsp+0xa8+var_30], rax
00000000000036e9         xor        eax, eax
00000000000036eb         test       edi, edi
00000000000036ed         je         loc_371d

00000000000036ef         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000036f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000036f8         call       j_dcgettext                                 ; dcgettext
00000000000036fd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000003704         mov        rdx, rax
0000000000003707         mov        rcx, rbx
000000000000370a         mov        esi, 0x1
000000000000370f         xor        eax, eax
0000000000003711         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_3716:
0000000000003716         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+854
0000000000003718         call       j_exit                                      ; exit
                        ; endp

                     loc_371d:
000000000000371d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... FILE1 FILE2\\n", CODE XREF=usage+45
0000000000003724         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003726         call       j_dcgettext                                 ; dcgettext
000000000000372b         mov        rdx, rbx
000000000000372e         mov        rsi, rax
0000000000003731         mov        edi, 0x1
0000000000003736         xor        eax, eax
0000000000003738         call       j___printf_chk                              ; __printf_chk
000000000000373d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003744         lea        rsi, qword [aForEachPairOfI]                ; argument "msgid" for method j_dcgettext, "For each pair of input lines with identical join fields, write a line to\\nstandard output.  The default join field is the first, delimited by blanks.\\n"
000000000000374b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003750         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003752         call       j_dcgettext                                 ; dcgettext
0000000000003757         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000375a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000375d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003762         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003769         lea        rsi, qword [aNwhenFile1OrFi]                ; argument "msgid" for method j_dcgettext, "\\nWhen FILE1 or FILE2 (not both) is -, read standard input.\\n"
0000000000003770         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003775         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003777         call       j_dcgettext                                 ; dcgettext
000000000000377c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000377f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003782         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003787         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000378e         lea        rsi, qword [aNAFilenumAlsoP]                ; argument "msgid" for method j_dcgettext, "\\n  -a FILENUM        also print unpairable lines from file FILENUM, where\\n                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2\\n  -e EMPTY          replace missing input fields with EMPTY\\n"
0000000000003795         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000379a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000379c         call       j_dcgettext                                 ; dcgettext
00000000000037a1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000037a4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000037a7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000037ac         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000037b3         lea        rsi, qword [aIIgnorecaseIgn]                ; argument "msgid" for method j_dcgettext, "  -i, --ignore-case  ignore differences in case when comparing fields\\n  -j FIELD          equivalent to '-1 FIELD -2 FIELD'\\n  -o FORMAT         obey FORMAT while constructing output line\\n  -t CHAR           use CHAR as input and output field separator\\n"
00000000000037ba         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037bf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037c1         call       j_dcgettext                                 ; dcgettext
00000000000037c6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000037c9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000037cc         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000037d1         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000037d8         lea        rsi, qword [aVFilenumLikeAF]                ; argument "msgid" for method j_dcgettext, "  -v FILENUM        like -a FILENUM, but suppress joined output lines\\n  -1 FIELD          join on this FIELD of file 1\\n  -2 FIELD          join on this FIELD of file 2\\n  --check-order     check that the input is correctly sorted, even\\n                     …"
00000000000037df         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037e4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037e6         call       j_dcgettext                                 ; dcgettext
00000000000037eb         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000037ee         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000037f1         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000037f6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000037fd         lea        rsi, qword [aZZeroterminate]                ; argument "msgid" for method j_dcgettext, "  -z, --zero-terminated     line delimiter is NUL, not newline\\n"
0000000000003804         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003809         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000380b         call       j_dcgettext                                 ; dcgettext
0000000000003810         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003813         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003816         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000381b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003822         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000003829         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000382e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003830         call       j_dcgettext                                 ; dcgettext
0000000000003835         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003838         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000383b         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003840         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003847         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
000000000000384e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003853         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003855         call       j_dcgettext                                 ; dcgettext
000000000000385a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000385d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003860         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003865         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000386c         lea        rsi, qword [aNunlessTCharIs]                ; argument "msgid" for method j_dcgettext, "\\nUnless -t CHAR is given, leading blanks separate fields and are ignored,\\nelse fields are separated by CHAR.  Any FIELD is a field number counted\\nfrom 1.  FORMAT is one or more comma or blank separated specifications,\\neach being 'FILENUM.FIELD' or '0'.  De…"
0000000000003873         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003878         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000387a         call       j_dcgettext                                 ; dcgettext
000000000000387f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003882         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003885         lea        rbx, qword [aSluIsNotSorted+28]             ; 0x7d9c
000000000000388c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003891         lea        rax, qword [aSluIsNotSorted+33]             ; 0x7da1
0000000000003898         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
000000000000389f         mov        qword [rsp+0xa8+var_48], 0x0
00000000000038a8         mov        qword [rsp+0xa8+var_40], 0x0
00000000000038b1         mov        rdx, rsp
00000000000038b4         mov        qword [rsp+0xa8+var_A8], rax
00000000000038b8         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000038bf         mov        qword [rsp+0xa8+var_78], rcx
00000000000038c4         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000038cb         mov        qword [rsp+0xa8+var_A0], rax
00000000000038d0         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000038d7         mov        qword [rsp+0xa8+var_68], rcx
00000000000038dc         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000038e3         mov        qword [rsp+0xa8+var_98], rax
00000000000038e8         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000038ef         mov        qword [rsp+0xa8+var_58], rcx
00000000000038f4         mov        qword [rsp+0xa8+var_90], rax
00000000000038f9         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000003900         mov        qword [rsp+0xa8+var_88], rax
0000000000003905         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000390c         mov        qword [rsp+0xa8+var_80], rax
0000000000003911         mov        qword [rsp+0xa8+var_70], rax
0000000000003916         mov        qword [rsp+0xa8+var_60], rax
000000000000391b         mov        qword [rsp+0xa8+var_50], rax

                     loc_3920:
0000000000003920         add        rdx, 0x10                                   ; CODE XREF=usage+637
0000000000003924         mov        rdi, qword [rdx]
0000000000003927         test       rdi, rdi
000000000000392a         je         loc_393f

000000000000392c         mov        ecx, 0x5
0000000000003931         mov        rsi, rbx
0000000000003934         rep  cmpsb byte [rsi], byte [rdi]
0000000000003936         seta       al
0000000000003939         sbb        al, 0x0
000000000000393b         test       al, al
000000000000393d         jne        loc_3920

                     loc_393f:
000000000000393f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+618
0000000000003943         xor        edi, edi
0000000000003945         mov        edx, 0x5
000000000000394a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000003951         test       r12, r12
0000000000003954         je         loc_3a1b

000000000000395a         call       j_dcgettext                                 ; dcgettext
000000000000395f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003966         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7e17
000000000000396d         mov        rsi, rax
0000000000003970         mov        edi, 0x1
0000000000003975         xor        eax, eax
0000000000003977         call       j___printf_chk                              ; __printf_chk
000000000000397c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000397e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000003983         call       j_setlocale                                 ; setlocale
0000000000003988         test       rax, rax
000000000000398b         je         loc_39a9

000000000000398d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x7e25
0000000000003994         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003999         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000399c         call       j_strncmp                                   ; strncmp
00000000000039a1         test       eax, eax
00000000000039a3         jne        loc_3ab0

                     loc_39a9:
00000000000039a9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+715, usage+1045
00000000000039b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000039b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000039b7         call       j_dcgettext                                 ; dcgettext
00000000000039bc         lea        rcx, qword [aSluIsNotSorted+28]             ; 0x7d9c
00000000000039c3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000039ca         mov        rsi, rax
00000000000039cd         mov        edi, 0x1
00000000000039d2         xor        eax, eax
00000000000039d4         call       j___printf_chk                              ; __printf_chk
00000000000039d9         cmp        r12, rbx
00000000000039dc         lea        rcx, qword [aMulticallInvoc+10]             ; 0x7dbd
00000000000039e3         lea        rbx, qword [aInvalidFieldNu+28]             ; 0x7d58
00000000000039ea         cmove      rbx, rcx

                     loc_39ee:
00000000000039ee         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+996
00000000000039f5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000039f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000039fc         call       j_dcgettext                                 ; dcgettext
0000000000003a01         mov        rcx, rbx
0000000000003a04         mov        rsi, rax
0000000000003a07         mov        rdx, r12
0000000000003a0a         mov        edi, 0x1
0000000000003a0f         xor        eax, eax
0000000000003a11         call       j___printf_chk                              ; __printf_chk
0000000000003a16         jmp        loc_3716

                     loc_3a1b:
0000000000003a1b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+660
0000000000003a20         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003a27         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7e17
0000000000003a2e         mov        rsi, rax
0000000000003a31         mov        edi, 0x1
0000000000003a36         xor        eax, eax
0000000000003a38         call       j___printf_chk                              ; __printf_chk
0000000000003a3d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000003a3f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000003a44         call       j_setlocale                                 ; setlocale
0000000000003a49         test       rax, rax
0000000000003a4c         je         loc_3a66

0000000000003a4e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x7e25
0000000000003a55         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003a5a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000003a5d         call       j_strncmp                                   ; strncmp
0000000000003a62         test       eax, eax
0000000000003a64         jne        loc_3aa9

                     loc_3a66:
0000000000003a66         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+908
0000000000003a6d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a72         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a74         lea        r12, qword [aSluIsNotSorted+28]             ; 0x7d9c
0000000000003a7b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x7dbd
0000000000003a82         call       j_dcgettext                                 ; dcgettext
0000000000003a87         lea        rcx, qword [aSluIsNotSorted+28]             ; 0x7d9c
0000000000003a8e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003a95         mov        rsi, rax
0000000000003a98         mov        edi, 0x1
0000000000003a9d         xor        eax, eax
0000000000003a9f         call       j___printf_chk                              ; __printf_chk
0000000000003aa4         jmp        loc_39ee

                     loc_3aa9:
0000000000003aa9         lea        r12, qword [aSluIsNotSorted+28]             ; 0x7d9c, CODE XREF=usage+932

                     loc_3ab0:
0000000000003ab0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+739
0000000000003ab7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000003abe         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ac0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003ac5         call       j_dcgettext                                 ; dcgettext
0000000000003aca         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003acd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003ad0         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003ad5         jmp        loc_39a9
0000000000003ada         align      32                                          ; End of unwind block (FDE at 0x902c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64


                     add_file_name.constprop.7:
0000000000003ae0         push       r14                                         ; Begin of unwind block (FDE at 0x9058), CODE XREF=main+852, main+1286
0000000000003ae2         push       r13
0000000000003ae4         mov        r13, rdi
0000000000003ae7         push       r12
0000000000003ae9         push       rbp
0000000000003aea         mov        rbp, rsi
0000000000003aed         push       rbx
0000000000003aee         sub        rsp, 0x20
0000000000003af2         mov        ebx, dword [rcx]
0000000000003af4         cmp        ebx, 0x2
0000000000003af7         je         loc_3b40

0000000000003af9         movsxd     rax, ebx
0000000000003afc         lea        r12, qword [g_names]                        ; g_names
0000000000003b03         add        ebx, 0x1
0000000000003b06         lea        rdx, qword [rax*4]
0000000000003b0e         shl        rax, 0x3

                     loc_3b12:
0000000000003b12         mov        esi, dword [r8]                             ; CODE XREF=add_file_name.constprop.7+216, add_file_name.constprop.7+298
0000000000003b15         mov        dword [rbp+rdx], esi
0000000000003b19         mov        qword [r12+rax], r13
0000000000003b1d         mov        dword [rcx], ebx
0000000000003b1f         cmp        dword [r8], 0x3
0000000000003b23         jne        loc_3b2c

0000000000003b25         mov        dword [r9], 0x3

                     loc_3b2c:
0000000000003b2c         add        rsp, 0x20                                   ; CODE XREF=add_file_name.constprop.7+67
0000000000003b30         pop        rbx
0000000000003b31         pop        rbp
0000000000003b32         pop        r12
0000000000003b34         pop        r13
0000000000003b36         pop        r14
0000000000003b38         ret
                        ; endp
0000000000003b39         align      64

                     loc_3b40:
0000000000003b40         mov        r14d, dword [rsi]                           ; CODE XREF=add_file_name.constprop.7+23
0000000000003b43         xor        eax, eax
0000000000003b45         lea        r12, qword [g_names]                        ; g_names
0000000000003b4c         test       r14d, r14d
0000000000003b4f         sete       al
0000000000003b52         mov        rdi, qword [r12+rax*8]
0000000000003b56         mov        eax, dword [rsi+rax*4]
0000000000003b59         cmp        eax, 0x1
0000000000003b5c         je         loc_3c10

0000000000003b62         jle        loc_3c50

0000000000003b68         cmp        eax, 0x2
0000000000003b6b         je         loc_3bc0

0000000000003b6d         cmp        eax, 0x3
0000000000003b70         jne        loc_3b95

0000000000003b72         mov        qword [rsp+0x48+var_30], r9
0000000000003b77         mov        qword [rsp+0x48+var_38], r8
0000000000003b7c         mov        qword [rsp+0x48+var_40], rcx
0000000000003b81         call       add_field_list                              ; add_field_list
0000000000003b86         mov        r9, qword [rsp+0x48+var_30]
0000000000003b8b         mov        r8, qword [rsp+0x48+var_38]
0000000000003b90         mov        rcx, qword [rsp+0x48+var_40]

                     loc_3b95:
0000000000003b95         test       r14d, r14d                                  ; CODE XREF=add_file_name.constprop.7+144, add_file_name.constprop.7+278, add_file_name.constprop.7+357, add_file_name.constprop.7+370
0000000000003b98         je         loc_3c00

0000000000003b9a         mov        eax, dword [rbp+4]
0000000000003b9d         mov        edx, 0x4
0000000000003ba2         mov        dword [rbp], eax
0000000000003ba5         mov        rax, qword [qword_20b1b8]                   ; qword_20b1b8
0000000000003bac         mov        qword [g_names], rax                        ; g_names
0000000000003bb3         mov        eax, 0x8
0000000000003bb8         jmp        loc_3b12
0000000000003bbd         align      64

                     loc_3bc0:
0000000000003bc0         sub        dword [rdx+4], 0x1                          ; CODE XREF=add_file_name.constprop.7+139
0000000000003bc4         mov        qword [rsp+0x48+var_30], r9
0000000000003bc9         mov        qword [rsp+0x48+var_38], r8
0000000000003bce         mov        qword [rsp+0x48+var_40], rcx
0000000000003bd3         call       string_to_join_field                        ; string_to_join_field
0000000000003bd8         lea        rdi, qword [join_field_2]                   ; join_field_2
0000000000003bdf         mov        rsi, rax
0000000000003be2         call       set_join_field                              ; set_join_field
0000000000003be7         mov        rcx, qword [rsp+0x48+var_40]
0000000000003bec         mov        r8, qword [rsp+0x48+var_38]
0000000000003bf1         mov        r9, qword [rsp+0x48+var_30]
0000000000003bf6         jmp        loc_3b95
0000000000003bf8         align      1024

                     loc_3c00:
0000000000003c00         mov        eax, 0x8                                    ; CODE XREF=add_file_name.constprop.7+184
0000000000003c05         mov        edx, 0x4
0000000000003c0a         jmp        loc_3b12
0000000000003c0f         align      16

                     loc_3c10:
0000000000003c10         sub        dword [rdx], 0x1                            ; CODE XREF=add_file_name.constprop.7+124
0000000000003c13         mov        qword [rsp+0x48+var_30], r9
0000000000003c18         mov        qword [rsp+0x48+var_38], r8
0000000000003c1d         mov        qword [rsp+0x48+var_40], rcx
0000000000003c22         call       string_to_join_field                        ; string_to_join_field
0000000000003c27         lea        rdi, qword [join_field_1]                   ; join_field_1
0000000000003c2e         mov        rsi, rax
0000000000003c31         call       set_join_field                              ; set_join_field
0000000000003c36         mov        rcx, qword [rsp+0x48+var_40]
0000000000003c3b         mov        r8, qword [rsp+0x48+var_38]
0000000000003c40         mov        r9, qword [rsp+0x48+var_30]
0000000000003c45         jmp        loc_3b95
0000000000003c4a         align      16

                     loc_3c50:
0000000000003c50         test       eax, eax                                    ; CODE XREF=add_file_name.constprop.7+130
0000000000003c52         jne        loc_3b95

0000000000003c58         mov        rsi, r13
0000000000003c5b         mov        edi, 0x4
0000000000003c60         call       quotearg_style                              ; quotearg_style
0000000000003c65         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
0000000000003c6c         mov        rbx, rax
0000000000003c6f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c74         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c76         call       j_dcgettext                                 ; dcgettext
0000000000003c7b         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003c7d         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003c80         mov        rcx, rbx
0000000000003c83         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003c85         xor        eax, eax
0000000000003c87         call       j_error                                     ; error
0000000000003c8c         mov        edi, 0x1                                    ; argument #1 for method usage
0000000000003c91         call       usage                                       ; usage
0000000000003c96         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x9058)
                     close_stdout_set_file_name:
0000000000003ca0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x90ec), file_name
0000000000003ca7         ret
                        ; endp
0000000000003ca8         align      16                                          ; End of unwind block (FDE at 0x90ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000003cb0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x9100), ignore_EPIPE
0000000000003cb7         ret
                        ; endp
0000000000003cb8         align      64                                          ; End of unwind block (FDE at 0x9100)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000003cc0         push       rbp                                         ; Begin of unwind block (FDE at 0x9114), DATA XREF=main+141
0000000000003cc1         push       rbx
0000000000003cc2         sub        rsp, 0x8
0000000000003cc6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003ccd         call       close_stream                                ; close_stream
0000000000003cd2         test       eax, eax
0000000000003cd4         je         loc_3cec

0000000000003cd6         call       j___errno_location                          ; __errno_location
0000000000003cdb         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000003ce2         mov        rbx, rax
0000000000003ce5         je         loc_3d03

0000000000003ce7         cmp        dword [rax], 0x20
0000000000003cea         jne        loc_3d03

                     loc_3cec:
0000000000003cec         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000003cf3         call       close_stream                                ; close_stream
0000000000003cf8         test       eax, eax
0000000000003cfa         jne        loc_3d42

0000000000003cfc         add        rsp, 0x8
0000000000003d00         pop        rbx
0000000000003d01         pop        rbp
0000000000003d02         ret
                        ; endp

                     loc_3d03:
0000000000003d03         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000003d0a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d0c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d11         call       j_dcgettext                                 ; dcgettext
0000000000003d16         mov        rdi, qword [file_name]                      ; file_name
0000000000003d1d         mov        rbp, rax
0000000000003d20         test       rdi, rdi
0000000000003d23         je         loc_3d4d

0000000000003d25         call       quotearg_colon                              ; quotearg_colon
0000000000003d2a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000003d2c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000003d33         mov        rcx, rax
0000000000003d36         mov        r8, rbp
0000000000003d39         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003d3b         xor        eax, eax
0000000000003d3d         call       j_error                                     ; error

                     loc_3d42:
0000000000003d42         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000003d48         call       j__exit                                     ; _exit
                        ; endp

                     loc_3d4d:
0000000000003d4d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000003d4f         lea        rdx, qword [aInvalidFieldNu+22]             ; argument "__format" for method j_error, 0x7d52
0000000000003d56         mov        rcx, rax
0000000000003d59         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003d5b         xor        eax, eax
0000000000003d5d         call       j_error                                     ; error
0000000000003d62         jmp        loc_3d42
0000000000003d64         align      16                                          ; End of unwind block (FDE at 0x9114)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000003d70         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x9144)
                        ; endp
0000000000003d75         align      128                                         ; End of unwind block (FDE at 0x9144)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000003d80         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9158), CODE XREF=main+1485, main+1503
0000000000003d83         je         loc_3da0

0000000000003d85         push       rbx
0000000000003d86         mov        ebx, esi
0000000000003d88         call       j_fileno                                    ; fileno
0000000000003d8d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
0000000000003d8f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000003d91         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000003d93         pop        rbx
0000000000003d94         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000003d96         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
0000000000003d9b         align      32

                     loc_3da0:
0000000000003da0         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000003da2         align      16                                          ; End of unwind block (FDE at 0x9158)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fopen_safer:
0000000000003db0         push       r12                                         ; Begin of unwind block (FDE at 0x9174), CODE XREF=main+2497, main+3104
0000000000003db2         push       rbp
0000000000003db3         mov        rbp, rsi
0000000000003db6         push       rbx
0000000000003db7         call       j_fopen                                     ; fopen
0000000000003dbc         test       rax, rax
0000000000003dbf         mov        rbx, rax
0000000000003dc2         je         loc_3dd1

0000000000003dc4         mov        rdi, rax                                    ; argument "__stream" for method j_fileno
0000000000003dc7         call       j_fileno                                    ; fileno
0000000000003dcc         cmp        eax, 0x2
0000000000003dcf         jbe        loc_3de0

                     loc_3dd1:
0000000000003dd1         mov        rax, rbx                                    ; CODE XREF=fopen_safer+18, fopen_safer+91, fopen_safer+115, fopen_safer+145
0000000000003dd4         pop        rbx
0000000000003dd5         pop        rbp
0000000000003dd6         pop        r12
0000000000003dd8         ret
                        ; endp
0000000000003dd9         align      32

                     loc_3de0:
0000000000003de0         mov        edi, eax                                    ; CODE XREF=fopen_safer+31
0000000000003de2         call       dup_safer                                   ; dup_safer
0000000000003de7         test       eax, eax
0000000000003de9         mov        r12d, eax
0000000000003dec         js         loc_3e28

0000000000003dee         mov        rdi, rbx
0000000000003df1         call       rpl_fclose                                  ; rpl_fclose
0000000000003df6         test       eax, eax
0000000000003df8         jne        loc_3e0d

0000000000003dfa         mov        rsi, rbp                                    ; argument "__modes" for method j_fdopen
0000000000003dfd         mov        edi, r12d                                   ; argument "__fd" for method j_fdopen
0000000000003e00         call       j_fdopen                                    ; fdopen
0000000000003e05         test       rax, rax
0000000000003e08         mov        rbx, rax
0000000000003e0b         jne        loc_3dd1

                     loc_3e0d:
0000000000003e0d         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+72
0000000000003e12         mov        ebp, dword [rax]
0000000000003e14         mov        rbx, rax
0000000000003e17         mov        edi, r12d                                   ; argument "__fd" for method j_close
0000000000003e1a         call       j_close                                     ; close
0000000000003e1f         mov        dword [rbx], ebp
0000000000003e21         xor        ebx, ebx
0000000000003e23         jmp        loc_3dd1
0000000000003e25         align      8

                     loc_3e28:
0000000000003e28         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+60
0000000000003e2d         mov        r12d, dword [rax]
0000000000003e30         mov        rbp, rax
0000000000003e33         mov        rdi, rbx
0000000000003e36         call       rpl_fclose                                  ; rpl_fclose
0000000000003e3b         xor        ebx, ebx
0000000000003e3d         mov        dword [rbp], r12d
0000000000003e41         jmp        loc_3dd1
0000000000003e43         align      16                                          ; End of unwind block (FDE at 0x9174)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000003e50         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x91a4), CODE XREF=main+136, rpl_mbrtowc+71
0000000000003e54         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000003e56         call       j_setlocale                                 ; setlocale
0000000000003e5b         mov        rdx, rax
0000000000003e5e         mov        eax, 0x1
0000000000003e63         test       rdx, rdx
0000000000003e66         je         loc_3e85

0000000000003e68         lea        rdi, qword [aSS+7]                          ; 0x7f5b
0000000000003e6f         mov        ecx, 0x2
0000000000003e74         mov        rsi, rdx
0000000000003e77         rep  cmpsb byte [rsi], byte [rdi]
0000000000003e79         seta       cl
0000000000003e7c         sbb        cl, 0x0
0000000000003e7f         xor        eax, eax
0000000000003e81         test       cl, cl
0000000000003e83         jne        loc_3e90

                     loc_3e85:
0000000000003e85         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000003e89         ret
                        ; endp
0000000000003e8a         align      16

                     loc_3e90:
0000000000003e90         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000003e97         mov        ecx, 0x6
0000000000003e9c         mov        rsi, rdx
0000000000003e9f         rep  cmpsb byte [rsi], byte [rdi]
0000000000003ea1         seta       al
0000000000003ea4         sbb        al, 0x0
0000000000003ea6         test       al, al
0000000000003ea8         setne      al
0000000000003eab         add        rsp, 0x8
0000000000003eaf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     initbuffer:
0000000000003eb0         pxor       xmm0, xmm0                                  ; End of unwind block (FDE at 0x91a4), Begin of unwind block (FDE at 0x91c4)
0000000000003eb4         mov        qword [rdi+0x10], 0x0
0000000000003ebc         movups     xmmword [rdi], xmm0
0000000000003ebf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_48: int64_t, -72


                     readlinebuffer_delim:
0000000000003ec0         push       r15                                         ; End of unwind block (FDE at 0x91c4), Begin of unwind block (FDE at 0x91d8), CODE XREF=get_line+80
0000000000003ec2         push       r14
0000000000003ec4         push       r13
0000000000003ec6         push       r12
0000000000003ec8         push       rbp
0000000000003ec9         push       rbx
0000000000003eca         sub        rsp, 0x18
0000000000003ece         mov        r13, qword [rdi+0x10]
0000000000003ed2         mov        r8, qword [rdi]
0000000000003ed5         add        r8, r13
0000000000003ed8         test       byte [rsi], 0x10
0000000000003edb         jne        loc_3fb0

0000000000003ee1         mov        r14, rdi
0000000000003ee4         mov        rbp, rsi
0000000000003ee7         mov        rbx, r13
0000000000003eea         movsx      r15d, dl
0000000000003eee         jmp        loc_3efb

                     loc_3ef0:
0000000000003ef0         cmp        r12d, r15d                                  ; CODE XREF=readlinebuffer_delim+90
0000000000003ef3         lea        rbx, qword [rsi+1]
0000000000003ef7         mov        byte [rsi], cl
0000000000003ef9         je         loc_3f56

                     loc_3efb:
0000000000003efb         mov        rcx, qword [rbp+8]                          ; CODE XREF=readlinebuffer_delim+46, readlinebuffer_delim+148
0000000000003eff         cmp        rcx, qword [rbp+0x10]
0000000000003f03         jae        loc_3f70

0000000000003f05         lea        rax, qword [rcx+1]
0000000000003f09         mov        qword [rbp+8], rax
0000000000003f0d         movzx      r12d, byte [rcx]
0000000000003f11         mov        ecx, r12d

                     loc_3f14:
0000000000003f14         cmp        rbx, r8                                     ; CODE XREF=readlinebuffer_delim+230, readlinebuffer_delim+259
0000000000003f17         mov        rsi, rbx
0000000000003f1a         jne        loc_3ef0

0000000000003f1c         mov        rbx, qword [r14]
0000000000003f1f         mov        rsi, r14
0000000000003f22         mov        rdi, r13
0000000000003f25         mov        byte [rsp+0x48+var_39], dl
0000000000003f29         mov        byte [rsp+0x48+var_48], cl
0000000000003f2c         call       x2realloc                                   ; x2realloc
0000000000003f31         mov        r8, qword [r14]
0000000000003f34         movzx      ecx, byte [rsp+0x48+var_48]
0000000000003f38         lea        rsi, qword [rax+rbx]
0000000000003f3c         mov        qword [r14+0x10], rax
0000000000003f40         mov        r13, rax
0000000000003f43         movzx      edx, byte [rsp+0x48+var_39]
0000000000003f48         lea        rbx, qword [rsi+1]
0000000000003f4c         add        r8, rax
0000000000003f4f         cmp        r12d, r15d
0000000000003f52         mov        byte [rsi], cl
0000000000003f54         jne        loc_3efb

                     loc_3f56:
0000000000003f56         sub        rbx, r13                                    ; CODE XREF=readlinebuffer_delim+57, readlinebuffer_delim+223
0000000000003f59         mov        rax, r14
0000000000003f5c         mov        qword [r14+8], rbx
0000000000003f60         add        rsp, 0x18
0000000000003f64         pop        rbx
0000000000003f65         pop        rbp
0000000000003f66         pop        r12
0000000000003f68         pop        r13
0000000000003f6a         pop        r14
0000000000003f6c         pop        r15
0000000000003f6e         ret
                        ; endp
0000000000003f6f         align      16

                     loc_3f70:
0000000000003f70         mov        rdi, rbp                                    ; argument #1 for method j___uflow, CODE XREF=readlinebuffer_delim+67
0000000000003f73         mov        byte [rsp+0x48+var_39], dl
0000000000003f77         mov        qword [rsp+0x48+var_48], r8
0000000000003f7b         call       j___uflow                                   ; __uflow
0000000000003f80         cmp        eax, 0xffffffff
0000000000003f83         mov        r12d, eax
0000000000003f86         mov        r8, qword [rsp+0x48+var_48]
0000000000003f8a         movzx      edx, byte [rsp+0x48+var_39]
0000000000003f8f         jne        loc_3fc1

0000000000003f91         cmp        r13, rbx
0000000000003f94         je         loc_3fb0

0000000000003f96         test       byte [rbp], 0x20
0000000000003f9a         jne        loc_3fb0

0000000000003f9c         cmp        byte [rbx-1], dl
0000000000003f9f         je         loc_3f56

0000000000003fa1         mov        r12d, r15d
0000000000003fa4         mov        ecx, edx
0000000000003fa6         jmp        loc_3f14
0000000000003fab         align      16

                     loc_3fb0:
0000000000003fb0         add        rsp, 0x18                                   ; CODE XREF=readlinebuffer_delim+27, readlinebuffer_delim+212, readlinebuffer_delim+218
0000000000003fb4         xor        eax, eax
0000000000003fb6         pop        rbx
0000000000003fb7         pop        rbp
0000000000003fb8         pop        r12
0000000000003fba         pop        r13
0000000000003fbc         pop        r14
0000000000003fbe         pop        r15
0000000000003fc0         ret
                        ; endp

                     loc_3fc1:
0000000000003fc1         mov        ecx, eax                                    ; CODE XREF=readlinebuffer_delim+207
0000000000003fc3         jmp        loc_3f14
0000000000003fc8         align      16                                          ; End of unwind block (FDE at 0x91d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     readlinebuffer:
0000000000003fd0         mov        edx, 0xa                                    ; Begin of unwind block (FDE at 0x923c)
0000000000003fd5         jmp        readlinebuffer_delim                        ; readlinebuffer_delim
                        ; endp
0000000000003fda         align      32                                          ; End of unwind block (FDE at 0x923c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     freebuffer:
0000000000003fe0         mov        rdi, qword [rdi+0x10]                       ; Begin of unwind block (FDE at 0x9250), argument "__ptr" for method j_free
0000000000003fe4         jmp        j_free                                      ; free
                        ; endp
0000000000003fe9         align      16                                          ; End of unwind block (FDE at 0x9250)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     memcasecmp:
0000000000003ff0         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x9264), CODE XREF=keycmp.isra.4+218
0000000000003ff3         je         loc_4038

0000000000003ff5         push       r12
0000000000003ff7         push       rbp
0000000000003ff8         mov        r12, rsi
0000000000003ffb         push       rbx
0000000000003ffc         mov        rbp, rdi
0000000000003fff         mov        rbx, rdx
0000000000004002         call       j___ctype_toupper_loc                       ; __ctype_toupper_loc
0000000000004007         xor        ecx, ecx
0000000000004009         mov        r8, qword [rax]
000000000000400c         jmp        loc_4019
000000000000400e         align      16

                     loc_4010:
0000000000004010         add        rcx, 0x1                                    ; CODE XREF=memcasecmp+59
0000000000004014         cmp        rcx, rbx
0000000000004017         je         loc_402d

                     loc_4019:
0000000000004019         movzx      eax, byte [rbp+rcx]                         ; CODE XREF=memcasecmp+28
000000000000401e         movzx      r9d, byte [r12+rcx]
0000000000004023         mov        eax, dword [r8+rax*4]
0000000000004027         sub        eax, dword [r8+r9*4]
000000000000402b         je         loc_4010

                     loc_402d:
000000000000402d         pop        rbx                                         ; CODE XREF=memcasecmp+39
000000000000402e         pop        rbp
000000000000402f         pop        r12
0000000000004031         ret
                        ; endp
0000000000004032         align      8

                     loc_4038:
0000000000004038         xor        eax, eax                                    ; CODE XREF=memcasecmp+3
000000000000403a         ret
                        ; endp
000000000000403b         align      64                                          ; End of unwind block (FDE at 0x9264)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000004040         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9294), CODE XREF=main+78
0000000000004043         push       rbx
0000000000004044         je         loc_40bd

0000000000004046         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000404b         mov        rbx, rdi
000000000000404e         call       j_strrchr                                   ; strrchr
0000000000004053         test       rax, rax
0000000000004056         je         loc_40ad

0000000000004058         lea        r8, qword [rax+1]
000000000000405c         mov        rdx, r8
000000000000405f         sub        rdx, rbx
0000000000004062         cmp        rdx, 0x6
0000000000004066         jle        loc_40ad

0000000000004068         lea        rsi, qword [rax-6]
000000000000406c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000004073         mov        ecx, 0x7
0000000000004078         rep  cmpsb byte [rsi], byte [rdi]
000000000000407a         seta       dl
000000000000407d         sbb        dl, 0x0
0000000000004080         test       dl, dl
0000000000004082         jne        loc_40ad

0000000000004084         lea        rdi, qword [aLibs+8]                        ; 0x7fa8
000000000000408b         mov        ecx, 0x3
0000000000004090         mov        rsi, r8
0000000000004093         mov        rbx, r8
0000000000004096         rep  cmpsb byte [rsi], byte [rdi]
0000000000004098         seta       dl
000000000000409b         sbb        dl, 0x0
000000000000409e         test       dl, dl
00000000000040a0         jne        loc_40ad

00000000000040a2         lea        rbx, qword [rax+4]
00000000000040a6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_40ad:
00000000000040ad         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
00000000000040b4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
00000000000040bb         pop        rbx
00000000000040bc         ret
                        ; endp

                     loc_40bd:
00000000000040bd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000040c4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000040cb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000040d0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000040d5         call       j_fwrite                                    ; fwrite
00000000000040da         call       j_abort                                     ; abort
                        ; endp
00000000000040df         align      32                                          ; End of unwind block (FDE at 0x9294)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000040e0         push       rbp                                         ; Begin of unwind block (FDE at 0x92b4), CODE XREF=sub_4910+2597, sub_4910+2619
00000000000040e1         push       rbx
00000000000040e2         mov        rbp, rdi
00000000000040e5         mov        ebx, esi
00000000000040e7         sub        rsp, 0x8
00000000000040eb         call       locale_charset                              ; locale_charset
00000000000040f0         movzx      edx, byte [rax]
00000000000040f3         and        edx, 0xffffffdf
00000000000040f6         cmp        dl, 0x55
00000000000040f9         je         loc_4170

00000000000040fb         cmp        dl, 0x47
00000000000040fe         je         loc_4120

                     loc_4100:
0000000000004100         lea        rax, qword [aLibs+27]                       ; 0x7fbb, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000004107         lea        rdx, qword [aLibs+29]                       ; 0x7fbd
000000000000410e         cmp        ebx, 0x9
0000000000004111         cmovne     rax, rdx
0000000000004115         add        rsp, 0x8
0000000000004119         pop        rbx
000000000000411a         pop        rbp
000000000000411b         ret
                        ; endp
000000000000411c         align      32

                     loc_4120:
0000000000004120         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000004124         and        edx, 0xffffffdf
0000000000004127         cmp        dl, 0x42
000000000000412a         jne        loc_4100

000000000000412c         cmp        byte [rax+2], 0x31
0000000000004130         jne        loc_4100

0000000000004132         cmp        byte [rax+3], 0x38
0000000000004136         jne        loc_4100

0000000000004138         cmp        byte [rax+4], 0x30
000000000000413c         jne        loc_4100

000000000000413e         cmp        byte [rax+5], 0x33
0000000000004142         jne        loc_4100

0000000000004144         cmp        byte [rax+6], 0x30
0000000000004148         jne        loc_4100

000000000000414a         cmp        byte [rax+7], 0x0
000000000000414e         jne        loc_4100

0000000000004150         cmp        byte [rbp], 0x60
0000000000004154         lea        rax, qword [aLibs+20]                       ; 0x7fb4
000000000000415b         lea        rdx, qword [aLibs+24]                       ; 0x7fb8
0000000000004162         cmovne     rax, rdx
0000000000004166         add        rsp, 0x8
000000000000416a         pop        rbx
000000000000416b         pop        rbp
000000000000416c         ret
                        ; endp
000000000000416d         align      16

                     loc_4170:
0000000000004170         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000004174         and        edx, 0xffffffdf
0000000000004177         cmp        dl, 0x54
000000000000417a         jne        loc_4100

000000000000417c         movzx      edx, byte [rax+2]
0000000000004180         and        edx, 0xffffffdf
0000000000004183         cmp        dl, 0x46
0000000000004186         jne        loc_4100

000000000000418c         cmp        byte [rax+3], 0x2d
0000000000004190         jne        loc_4100

0000000000004196         cmp        byte [rax+4], 0x38
000000000000419a         jne        loc_4100

00000000000041a0         cmp        byte [rax+5], 0x0
00000000000041a4         jne        loc_4100

00000000000041aa         cmp        byte [rbp], 0x60
00000000000041ae         lea        rax, qword [aLibs+12]                       ; 0x7fac
00000000000041b5         lea        rdx, qword [aLibs+16]                       ; 0x7fb0
00000000000041bc         cmovne     rax, rdx
00000000000041c0         add        rsp, 0x8
00000000000041c4         pop        rbx
00000000000041c5         pop        rbp
00000000000041c6         ret
                        ; endp
00000000000041c7         align      16                                          ; End of unwind block (FDE at 0x92b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000041d0         push       r15                                         ; Begin of unwind block (FDE at 0x92f8), CODE XREF=sub_4910+1165, sub_4910+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000041d2         push       r14
00000000000041d4         mov        r15d, r8d
00000000000041d7         push       r13
00000000000041d9         push       r12
00000000000041db         mov        r14, rdi
00000000000041de         push       rbp
00000000000041df         push       rbx
00000000000041e0         mov        ebx, r9d
00000000000041e3         mov        r13, rsi
00000000000041e6         mov        rbp, rcx
00000000000041e9         and        ebx, 0x2
00000000000041ec         sub        rsp, 0xb8
00000000000041f3         mov        rax, qword [rsp+0xe8+arg_0]
00000000000041fb         mov        qword [rsp+0xe8+var_D8], rdx
0000000000004200         mov        dword [rsp+0xe8+var_E0], r8d
0000000000004205         mov        dword [rsp+0xe8+var_70], r9d
000000000000420a         mov        qword [rsp+0xe8+var_C8], rax
000000000000420f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000004217         mov        qword [rsp+0xe8+var_80], rax
000000000000421c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000004224         mov        qword [rsp+0xe8+var_88], rax
0000000000004229         mov        rax, qword [fs:0x28]
0000000000004232         mov        qword [rsp+0xe8+var_40], rax
000000000000423a         xor        eax, eax
000000000000423c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000004241         cmp        r15d, 0xa
0000000000004245         mov        qword [rsp+0xe8+var_90], rax
000000000000424a         ja         loc_53ff

0000000000004250         lea        rcx, qword [switch_table_8020]              ; switch_table_8020
0000000000004257         mov        edx, r15d
000000000000425a         movsxd     rax, dword [rcx+rdx*4]
000000000000425e         add        rax, rcx
0000000000004261         jmp        rax                                         ; switch statement using table at 0x8020, with 11 cases, 0x4263,0x4e34,0x4e90,0x4ee5,0x4f2a,0x4f64,0x500a,0x5044,0x5238

                     loc_4263:
0000000000004263         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_4910+1318
0000000000004268         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000426d         xor        r12d, r12d
0000000000004270         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004279         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000427e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_4283:
0000000000004283         lea        rax, qword [aLibs+29]                       ; 0x7fbd, CODE XREF=sub_4910+1876
000000000000428a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004293         xor        r15d, r15d
0000000000004296         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000429e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_42a3:
00000000000042a3         xor        r11d, r11d                                  ; CODE XREF=sub_4910+180, sub_4910+1400, sub_4910+1488, sub_4910+1557, sub_4910+1615, sub_4910+1781, sub_4910+1839, sub_4910+2408, sub_4910+2485
00000000000042a6         mov        rax, rbp
00000000000042a9         mov        r8d, r12d
00000000000042ac         mov        rbp, r11
00000000000042af         mov        r11, rax
00000000000042b2         nop        word [rax+rax]

                     loc_42b8:
00000000000042b8         cmp        r11, rbp                                    ; CODE XREF=sub_43c0+194
00000000000042bb         setne      r12b
00000000000042bf         cmp        r11, 0xffffffffffffffff
00000000000042c3         jne        loc_42d2

00000000000042c5         mov        rax, qword [rsp+0xe8+var_D8]
00000000000042ca         cmp        byte [rax+rbp], 0x0
00000000000042ce         setne      r12b

                     loc_42d2:
00000000000042d2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
00000000000042d5         je         loc_4930

00000000000042db         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000042e0         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000042e5         lea        r9, qword [rdi+rbp]
00000000000042e9         setne      al
00000000000042ec         and        al, byte [rsp+0xe8+var_DB]
00000000000042f0         mov        r10d, eax
00000000000042f3         je         loc_43a0

00000000000042f9         mov        rax, qword [rsp+0xe8+var_D0]
00000000000042fe         test       rax, rax
0000000000004301         je         loc_4730

0000000000004307         cmp        r11, 0xffffffffffffffff
000000000000430b         lea        rbx, qword [rbp+rax]
0000000000004310         jne        loc_4340

0000000000004312         cmp        rax, 0x1
0000000000004316         jbe        loc_4340

0000000000004318         mov        byte [rsp+0xe8+var_B0], r8b
000000000000431d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000004322         mov        qword [rsp+0xe8+var_C0], r9
0000000000004327         call       j_strlen                                    ; strlen
000000000000432c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000004332         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000004338         mov        r11, rax
000000000000433b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_4340:
0000000000004340         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000004343         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004348         ja         loc_4900

000000000000434e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000004353         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000004358         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000435b         mov        qword [rsp+0xe8+var_A8], r11
0000000000004360         mov        byte [rsp+0xe8+var_B0], r8b
0000000000004365         mov        qword [rsp+0xe8+var_B8], r9
000000000000436a         call       j_memcmp                                    ; memcmp
000000000000436f         test       eax, eax
0000000000004371         mov        r9, qword [rsp+0xe8+var_B8]
0000000000004376         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000437c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000004381         jne        loc_4900

0000000000004387         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000438c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000004392         jne        loc_5315

0000000000004398         nop        dword [rax+rax]

                     loc_43a0:
00000000000043a0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_48f0+19
00000000000043a4         cmp        bl, 0x7e
00000000000043a7         ja         loc_46c8

00000000000043ad         lea        rcx, qword [switch_table_8020+44]           ; 0x804c
00000000000043b4         movzx      edx, bl
00000000000043b7         movsxd     rax, dword [rcx+rdx*4]
00000000000043bb         add        rax, rcx
00000000000043be         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_43c0:
00000000000043c0         xor        r10d, r10d
00000000000043c3         cmp        r11, 0x1
00000000000043c7         setne      al
00000000000043ca         cmp        r11, 0xffffffffffffffff
00000000000043ce         jne        loc_43dc

00000000000043d0         mov        rax, qword [rsp+arg_8]
00000000000043d5         cmp        byte [rax+1], 0x0
00000000000043d9         setne      al

                     loc_43dc:
00000000000043dc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_43c0+14
00000000000043e1         sete       dl
00000000000043e4         test       al, al
00000000000043e6         je         loc_4638

                     loc_43ec:
00000000000043ec         xor        r12d, r12d                                  ; CODE XREF=sub_4630+11
00000000000043ef         xor        eax, eax
00000000000043f1         nop        dword [rax]
                        ; endp

                     loc_43f8:
00000000000043f8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_45e0+50, sub_46b0+119
00000000000043fd         jne        loc_4512

0000000000004403         test       dl, dl
0000000000004405         jne        loc_4512

                     loc_440b:
000000000000440b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_44c0+87
0000000000004410         test       rsi, rsi
0000000000004413         je         loc_4429

0000000000004415         mov        edx, ebx
0000000000004417         shr        dl, 0x5
000000000000441a         movzx      edx, dl
000000000000441d         mov        edx, dword [rsi+rdx*4]
0000000000004420         bt         edx, ebx
0000000000004423         jb         loc_4573

                     loc_4429:
0000000000004429         test       r10b, r10b                                  ; CODE XREF=sub_43c0+83, sub_44c0+93
000000000000442c         jne        loc_4573

0000000000004432         xor        eax, 0x1
0000000000004435         add        rbp, 0x1
0000000000004439         and        eax, r8d

                     loc_443c:
000000000000443c         test       al, al                                      ; CODE XREF=sub_4910+936
000000000000443e         je         loc_4460

0000000000004440         cmp        r13, r15
0000000000004443         jbe        loc_444a

0000000000004445         mov        byte [r14+r15], 0x27

                     loc_444a:
000000000000444a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_43c0+131
000000000000444e         cmp        r13, rax
0000000000004451         jbe        loc_4459

0000000000004453         mov        byte [r14+r15+1], 0x27

                     loc_4459:
0000000000004459         add        r15, 0x2                                    ; CODE XREF=sub_43c0+145
000000000000445d         xor        r8d, r8d

                     loc_4460:
0000000000004460         cmp        r15, r13                                    ; CODE XREF=sub_43c0+126, sub_44c0+275, sub_4910+869
0000000000004463         jae        loc_4469

0000000000004465         mov        byte [r14+r15], bl

                     loc_4469:
0000000000004469         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_43c0+163
000000000000446e         add        r15, 0x1
0000000000004472         mov        eax, 0x0
0000000000004477         test       r12b, r12b
000000000000447a         cmove      edi, eax
000000000000447d         mov        byte [rsp+0xe8+var_DA], dil
0000000000004482         jmp        loc_42b8
0000000000004487         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4490:
0000000000004490         xor        r10d, r10d
0000000000004493         mov        eax, dword [rsp+arg_0]
0000000000004497         cmp        eax, 0x2
000000000000449a         je         loc_4a58

00000000000044a0         cmp        eax, 0x5
00000000000044a3         je         loc_4a18

00000000000044a9         cmp        eax, 0x2
00000000000044ac         mov        ebx, 0x3f
00000000000044b1         sete       dl
00000000000044b4         xor        r12d, r12d
00000000000044b7         xor        eax, eax
00000000000044b9         jmp        sub_43c0+56
                        ; endp
00000000000044be         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_44c0:
00000000000044c0         xor        r10d, r10d
00000000000044c3         cmp        dword [rsp+arg_0], 0x2
00000000000044c8         je         loc_49d0

00000000000044ce         mov        byte [rsp+arg_74], r12b
00000000000044d3         xor        edx, edx
00000000000044d5         xor        eax, eax
00000000000044d7         mov        ebx, 0x27
00000000000044dc         jmp        sub_43c0+56
                        ; endp
00000000000044e1         nop        dword [rax]
00000000000044e8         mov        edx, 0x9
00000000000044ed         mov        ebx, 0x74

                     loc_44f2:
00000000000044f2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4680+10, sub_4770+37, sub_48b0+53
00000000000044f7         sete       al
00000000000044fa         and        al, byte [rsp+arg_7]
00000000000044fe         jne        sub_4630+30

0000000000004504         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_44c0+114
0000000000004509         jne        loc_4570

                     loc_450b:
000000000000450b         mov        ebx, edx                                    ; CODE XREF=sub_45e0+18
000000000000450d         xor        r12d, r12d
0000000000004510         xor        eax, eax
                        ; endp

                     loc_4512:
0000000000004512         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_43c0+61, sub_43c0+69
0000000000004517         jne        loc_440b

000000000000451d         jmp        loc_4429
0000000000004522         nop        word [rax+rax]
0000000000004528         mov        edx, 0x8
000000000000452d         mov        ebx, 0x62
0000000000004532         jmp        sub_44c0+68
0000000000004534         nop        dword [rax]
0000000000004538         cmp        dword [rsp+8], 0x2
000000000000453d         je         sub_4910                                    ; sub_4910
0000000000004543         cmp        byte [rsp+0xd], 0x0
0000000000004548         je         sub_4750+16

                     loc_454e:
000000000000454e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4750+8
0000000000004553         je         loc_4760

0000000000004559         cmp        qword [rsp+arg_10], 0x0
000000000000455f         jne        loc_491b

0000000000004565         mov        ebx, 0x5c
000000000000456a         nop        word [rax+rax]
                        ; endp

                     loc_4570:
0000000000004570         xor        r12d, r12d                                  ; CODE XREF=sub_44c0+73, sub_48b0+29
                        ; endp

                     loc_4573:
0000000000004573         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_43c0+99, sub_43c0+108
0000000000004578         sete       dl
000000000000457b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000004580         mov        eax, edx
0000000000004582         jne        loc_4dd8

0000000000004588         mov        eax, r8d
000000000000458b         xor        eax, 0x1
000000000000458e         and        al, dl
0000000000004590         je         loc_45c1

0000000000004592         cmp        r13, r15
0000000000004595         jbe        loc_459c

0000000000004597         mov        byte [r14+r15], 0x27

                     loc_459c:
000000000000459c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_44c0+213
00000000000045a0         cmp        r13, rdx
00000000000045a3         jbe        loc_45ab

00000000000045a5         mov        byte [r14+r15+1], 0x24

                     loc_45ab:
00000000000045ab         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_44c0+227
00000000000045af         cmp        r13, rdx
00000000000045b2         jbe        loc_45ba

00000000000045b4         mov        byte [r14+r15+2], 0x27

                     loc_45ba:
00000000000045ba         add        r15, 0x3                                    ; CODE XREF=sub_44c0+242
00000000000045be         mov        r8d, eax

                     loc_45c1:
00000000000045c1         cmp        r13, r15                                    ; CODE XREF=sub_44c0+208
00000000000045c4         jbe        loc_45cb

00000000000045c6         mov        byte [r14+r15], 0x5c

                     loc_45cb:
00000000000045cb         add        r15, 0x1                                    ; CODE XREF=sub_44c0+260
00000000000045cf         add        rbp, 0x1
00000000000045d3         jmp        loc_4460
00000000000045d8         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_45e0:
00000000000045e0         cmp        byte [rsp+arg_5], 0x0
00000000000045e5         jne        loc_47b3

00000000000045eb         xor        edx, edx
00000000000045ed         test       byte [rsp+arg_70], 0x1
00000000000045f2         je         loc_450b

00000000000045f8         add        rbp, 0x1
00000000000045fc         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000004601         nop        dword [rax]
0000000000004608         cmp        dword [rsp+8], 0x2
000000000000460d         sete       dl
0000000000004610         xor        eax, eax
0000000000004612         jmp        sub_43c0+56
0000000000004617         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4620:
0000000000004620         mov        edx, 0x7
0000000000004625         mov        ebx, 0x61
000000000000462a         jmp        sub_44c0+68
                        ; endp
000000000000462f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4630:
0000000000004630         cmp        dword [rsp+8], 0x2
0000000000004635         sete       dl
                        ; endp

                     loc_4638:
0000000000004638         test       rbp, rbp                                    ; CODE XREF=sub_43c0+38, sub_4850+35
000000000000463b         jne        loc_43ec

0000000000004641         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_4880+43
0000000000004646         and        al, dl
0000000000004648         je         sub_43c0+56

000000000000464e         mov        rbp, r11
0000000000004651         mov        dword [rsp+arg_0], 0x2
0000000000004659         jmp        sub_4910+1097
                        ; endp
000000000000465e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4660:
0000000000004660         cmp        dword [rsp+arg_0], 0x2
0000000000004665         sete       dl
0000000000004668         xor        r12d, r12d
000000000000466b         jmp        sub_4630+17
                        ; endp
000000000000466d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4670:
0000000000004670         cmp        dword [rsp+arg_0], 0x2
0000000000004675         mov        ebx, 0x20
000000000000467a         sete       dl
000000000000467d         jmp        sub_4630+17
                        ; endp
000000000000467f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4680:
0000000000004680         mov        edx, 0xd
0000000000004685         mov        ebx, 0x72
000000000000468a         jmp        loc_44f2
000000000000468f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4690:
0000000000004690         mov        edx, 0xc
0000000000004695         mov        ebx, 0x66
000000000000469a         jmp        sub_44c0+68
                        ; endp
000000000000469f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46a0:
00000000000046a0         mov        edx, 0xb
00000000000046a5         mov        ebx, 0x76
00000000000046aa         jmp        sub_44c0+68
                        ; endp
00000000000046af         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46b0:
00000000000046b0         mov        edx, 0xa
00000000000046b5         mov        ebx, 0x6e
00000000000046ba         jmp        sub_44c0+50
                        ; endp
00000000000046bf         align      64

                     loc_46c0:
00000000000046c0         xor        r10d, r10d                                  ; CODE XREF=sub_46b0+135
00000000000046c3         nop        dword [rax+rax]

                     loc_46c8:
00000000000046c8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
00000000000046ce         jne        loc_4a78

00000000000046d4         mov        qword [rsp+0xe8+var_B0], r11
00000000000046d9         mov        byte [rsp+0xe8+var_B8], r8b
00000000000046de         mov        byte [rsp+0xe8+var_C0], r10b
00000000000046e3         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000046e8         mov        rcx, qword [rax]
00000000000046eb         movzx      edx, bl
00000000000046ee         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000046f4         movzx      r8d, byte [rsp+0xe8+var_B8]
00000000000046fa         mov        r11, qword [rsp+0xe8+var_B0]
00000000000046ff         mov        edi, 0x1
0000000000004704         movzx      eax, word [rcx+rdx*2]
0000000000004708         and        ax, 0x4000
000000000000470c         setne      r12b
0000000000004710         sete       al
0000000000004713         and        al, byte [rsp+0xe8+var_DB]

                     loc_4717:
0000000000004717         test       al, al                                      ; CODE XREF=sub_4910+2221
0000000000004719         jne        loc_50b1

000000000000471f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004724         sete       dl
0000000000004727         jmp        loc_43f8
000000000000472c         align      16

                     loc_4730:
0000000000004730         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004734         cmp        bl, 0x7e
0000000000004737         ja         loc_46c0

0000000000004739         lea        rcx, qword [switch_table_8020+552]          ; 0x8248
0000000000004740         movzx      edx, bl
0000000000004743         movsxd     rax, dword [rcx+rdx*4]
0000000000004747         add        rax, rcx
000000000000474a         jmp        rax
                        ; endp
000000000000474c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4750:
0000000000004750         xor        r10d, r10d
0000000000004753         cmp        byte [rsp+arg_5], 0x0
0000000000004758         jne        loc_454e

000000000000475e         nop

                     loc_4760:
0000000000004760         mov        edx, 0x5c                                   ; CODE XREF=sub_44c0+136, sub_44c0+147
0000000000004765         mov        ebx, 0x5c
000000000000476a         jmp        sub_44c0+68
                        ; endp
000000000000476f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4770:
0000000000004770         mov        edx, 0xc
0000000000004775         xor        r10d, r10d
0000000000004778         mov        ebx, 0x66
000000000000477d         jmp        sub_44c0+68
                        ; endp
0000000000004782         nop        word [rax+rax]
0000000000004788         mov        edx, 0xa
000000000000478d         xor        r10d, r10d
0000000000004790         mov        ebx, 0x6e
0000000000004795         jmp        sub_44c0+50
000000000000479a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_47a0:
00000000000047a0         mov        ebx, 0x61
00000000000047a5         jmp        sub_44c0+176
                        ; endp
00000000000047aa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_47b0:
00000000000047b0         xor        r10d, r10d
                        ; endp

                     loc_47b3:
00000000000047b3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_45e0+5
00000000000047b8         sete       dl
00000000000047bb         cmp        byte [rsp+arg_7], 0x0
00000000000047c0         jne        loc_535a

00000000000047c6         mov        eax, r8d
00000000000047c9         mov        rcx, r15
00000000000047cc         xor        eax, 0x1
00000000000047cf         and        al, dl
00000000000047d1         je         loc_4800

00000000000047d3         cmp        r13, r15
00000000000047d6         jbe        loc_47dd

00000000000047d8         mov        byte [r14+r15], 0x27

                     loc_47dd:
00000000000047dd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_47b0+38
00000000000047e1         cmp        r13, rcx
00000000000047e4         jbe        loc_47ec

00000000000047e6         mov        byte [r14+r15+1], 0x24

                     loc_47ec:
00000000000047ec         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_47b0+52
00000000000047f0         cmp        r13, rcx
00000000000047f3         ja         loc_4e29

                     loc_47f9:
00000000000047f9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_4910+1311
00000000000047fd         mov        r8d, eax

                     loc_4800:
0000000000004800         cmp        r13, rcx                                    ; CODE XREF=sub_47b0+33
0000000000004803         jbe        loc_480a

0000000000004805         mov        byte [r14+rcx], 0x5c

                     loc_480a:
000000000000480a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_47b0+83
000000000000480f         lea        r15, qword [rcx+1]
0000000000004813         je         loc_4e19

0000000000004819         lea        rax, qword [rbp+1]
000000000000481d         cmp        rax, r11
0000000000004820         jae        loc_483b

0000000000004822         mov        rax, qword [rsp+arg_8]
0000000000004827         movzx      eax, byte [rax+rbp+1]
000000000000482c         mov        byte [rsp+arg_20], al
0000000000004830         sub        eax, 0x30
0000000000004833         cmp        al, 0x9
0000000000004835         jbe        loc_5069

                     loc_483b:
000000000000483b         mov        eax, r12d                                   ; CODE XREF=sub_47b0+112
000000000000483e         mov        ebx, 0x30
0000000000004843         xor        r12d, r12d
0000000000004846         jmp        sub_43c0+56
                        ; endp
000000000000484b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4850:
0000000000004850         cmp        dword [rsp+arg_0], 0x2
0000000000004855         mov        r12d, r10d
0000000000004858         sete       dl
000000000000485b         xor        r10d, r10d
000000000000485e         xor        eax, eax
0000000000004860         jmp        sub_43c0+56
                        ; endp
0000000000004865         nop        dword [rax]
0000000000004868         cmp        dword [rsp+8], 0x2
000000000000486d         sete       dl
0000000000004870         xor        r10d, r10d
0000000000004873         jmp        sub_4630+8
0000000000004878         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4880:
0000000000004880         cmp        dword [rsp+8], 0x2
0000000000004885         sete       dl
0000000000004888         xor        r10d, r10d
000000000000488b         xor        r12d, r12d
000000000000488e         jmp        sub_4630+17
                        ; endp
0000000000004893         nop        dword [rax+rax]
0000000000004898         cmp        dword [rsp+8], 0x2
000000000000489d         mov        r12d, r10d
00000000000048a0         mov        ebx, 0x20
00000000000048a5         sete       dl
00000000000048a8         xor        r10d, r10d
00000000000048ab         jmp        sub_4630+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_48b0:
00000000000048b0         mov        edx, 0xd
00000000000048b5         xor        r10d, r10d
00000000000048b8         mov        ebx, 0x72
00000000000048bd         jmp        sub_44c0+50
                        ; endp
00000000000048c2         nop        word [rax+rax]
00000000000048c8         mov        ebx, 0x76
00000000000048cd         jmp        sub_44c0+176
00000000000048d2         nop        word [rax+rax]
00000000000048d8         mov        edx, 0x9
00000000000048dd         xor        r10d, r10d
00000000000048e0         mov        ebx, 0x74
00000000000048e5         jmp        sub_44c0+50
00000000000048ea         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_48f0:
00000000000048f0         mov        ebx, 0x62
00000000000048f5         jmp        sub_44c0+176
                        ; endp
00000000000048fa         nop        word [rax+rax]

                     loc_4900:
0000000000004900         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000004903         jmp        loc_43a0
0000000000004908         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_4910:
0000000000004910         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_44c0+125
0000000000004915         jne        sub_4910+2416
                        ; endp

                     loc_491b:
000000000000491b         add        rbp, 0x1                                    ; CODE XREF=sub_44c0+159
000000000000491f         mov        eax, r8d
0000000000004922         xor        r12d, r12d
0000000000004925         mov        ebx, 0x5c
000000000000492a         jmp        sub_43c0+124
                        ; endp
000000000000492f         align      16

                     loc_4930:
0000000000004930         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004935         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000493a         mov        r12d, r8d
000000000000493d         mov        rbp, r11
0000000000004940         sete       dl
0000000000004943         mov        eax, ebx
0000000000004945         test       r15, r15
0000000000004948         sete       cl
000000000000494b         and        eax, edx
000000000000494d         and        al, cl
000000000000494f         jne        loc_53b6

0000000000004955         mov        eax, ebx
0000000000004957         xor        eax, 0x1
000000000000495a         and        dl, al
000000000000495c         je         loc_52cc

0000000000004962         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004967         je         loc_52ca

000000000000496d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004972         jne        loc_536d

0000000000004978         test       r13, r13
000000000000497b         sete       al
000000000000497e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000004984         setne      dl
0000000000004987         and        al, dl
0000000000004989         je         loc_53ac

000000000000498f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_4994:
0000000000004994         lea        rbx, qword [aLibs+29]                       ; 0x7fbd, CODE XREF=sub_4910+2781
000000000000499b         mov        byte [r14], 0x27
000000000000499f         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000049a7         mov        r15d, 0x1
00000000000049ad         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000049b6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000049bb         mov        qword [rsp+0xe8+var_A0], rbx
00000000000049c0         mov        byte [rsp+0xe8+var_6C], al
00000000000049c4         jmp        loc_42a3
00000000000049c9         align      16

                     loc_49d0:
00000000000049d0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_44c0+8
00000000000049d5         jne        sub_4910+2416

00000000000049db         test       r13, r13
00000000000049de         je         loc_4de0

00000000000049e4         xor        edx, edx
00000000000049e6         cmp        qword [rsp+arg_48], 0x0
00000000000049ec         jne        loc_4de0

                     loc_49f2:
00000000000049f2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_4910+1284, sub_4910+2794
00000000000049f7         add        r15, 0x3
00000000000049fb         xor        eax, eax
00000000000049fd         mov        byte [rsp+arg_74], r12b
0000000000004a02         xor        r8d, r8d
0000000000004a05         mov        r13, rdx
0000000000004a08         mov        ebx, 0x27
0000000000004a0d         jmp        sub_43c0+105
                        ; endp
0000000000004a12         align      8

                     loc_4a18:
0000000000004a18         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_4490+19
0000000000004a1d         je         loc_4a40

0000000000004a1f         lea        rcx, qword [rbp+2]
0000000000004a23         cmp        rcx, r11
0000000000004a26         jae        loc_4a40

0000000000004a28         mov        rax, qword [rsp+arg_8]
0000000000004a2d         cmp        byte [rax+rbp+1], 0x3f
0000000000004a32         je         loc_51c2

0000000000004a38         nop        dword [rax+rax]

                     loc_4a40:
0000000000004a40         xor        edx, edx                                    ; CODE XREF=sub_4910+269, sub_4910+278, sub_4910+2233, sub_4910+2253
0000000000004a42         xor        r12d, r12d
0000000000004a45         xor        eax, eax
0000000000004a47         mov        ebx, 0x3f
0000000000004a4c         jmp        sub_43c0+56
                        ; endp
0000000000004a51         align      8

                     loc_4a58:
0000000000004a58         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4490+10
0000000000004a5d         jne        loc_5280

0000000000004a63         xor        r12d, r12d
0000000000004a66         xor        eax, eax
0000000000004a68         mov        ebx, 0x3f
0000000000004a6d         jmp        sub_43c0+105
                        ; endp
0000000000004a72         align      8

                     loc_4a78:
0000000000004a78         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_46b0+30
0000000000004a80         cmp        r11, 0xffffffffffffffff
0000000000004a84         mov        qword [rsp+0xe8+var_48], 0x0
0000000000004a90         mov        qword [rsp+0xe8+var_C0], rax
0000000000004a95         jne        loc_4ac4

0000000000004a97         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000004a9c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004aa1         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004aa6         mov        qword [rsp+0xe8+var_B8], r9
0000000000004aab         call       j_strlen                                    ; strlen
0000000000004ab0         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000004ab6         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000004abc         mov        r11, rax
0000000000004abf         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_4ac4:
0000000000004ac4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_4910+389
0000000000004acc         xor        ecx, ecx
0000000000004ace         mov        byte [rsp+0xe8+var_6A], bl
0000000000004ad2         mov        byte [rsp+0xe8+var_6B], r8b
0000000000004ad7         mov        rbx, rcx
0000000000004ada         mov        qword [rsp+0xe8+var_60], r9
0000000000004ae2         mov        qword [rsp+0xe8+var_B0], rax
0000000000004ae7         mov        byte [rsp+0xe8+var_69], r10b
0000000000004aec         mov        qword [rsp+0xe8+var_68], r15
0000000000004af4         mov        qword [rsp+0xe8+var_A8], r14
0000000000004af9         mov        qword [rsp+0xe8+var_78], r13
0000000000004afe         mov        qword [rsp+0xe8+var_B8], r11

                     loc_4b03:
0000000000004b03         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_4910+623
0000000000004b08         lea        r14, qword [rbp+rbx]
0000000000004b0d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000004b12         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000004b17         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000004b1c         lea        r13, qword [rax+r14]
0000000000004b20         sub        rdx, r14
0000000000004b23         mov        rsi, r13
0000000000004b26         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000004b2b         test       rax, rax
0000000000004b2e         mov        r15, rax
0000000000004b31         je         loc_4b81

0000000000004b33         cmp        rax, 0xffffffffffffffff
0000000000004b37         je         loc_5155

0000000000004b3d         cmp        rax, 0xfffffffffffffffe
0000000000004b41         je         loc_50e1

0000000000004b47         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004b4c         sete       al
0000000000004b4f         and        al, byte [rsp+0xe8+var_D9]
0000000000004b53         jne        loc_4cf0

                     loc_4b59:
0000000000004b59         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_4910+996, sub_4910+1031
0000000000004b60         call       j_iswprint                                  ; iswprint
0000000000004b65         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000004b6a         test       eax, eax
0000000000004b6c         mov        eax, 0x0
0000000000004b71         cmove      r12d, eax
0000000000004b75         add        rbx, r15
0000000000004b78         call       j_mbsinit                                   ; mbsinit
0000000000004b7d         test       eax, eax
0000000000004b7f         je         loc_4b03

                     loc_4b81:
0000000000004b81         mov        edx, r12d                                   ; CODE XREF=sub_4910+545
0000000000004b84         mov        rdi, rbx
0000000000004b87         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004b8d         xor        edx, 0x1
0000000000004b90         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004b95         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004b9b         and        dl, byte [rsp+0xe8+var_DB]
0000000000004b9f         mov        r15, qword [rsp+0xe8+var_68]
0000000000004ba7         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004bac         mov        r13, qword [rsp+0xe8+var_78]
0000000000004bb1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4bb6:
0000000000004bb6         cmp        rdi, 0x1                                    ; CODE XREF=sub_4910+2112, sub_4910+2168
0000000000004bba         jbe        loc_51bb

                     loc_4bc0:
0000000000004bc0         mov        rcx, rdi                                    ; CODE XREF=sub_4910+1961
0000000000004bc3         xor        esi, esi
0000000000004bc5         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000004bcb         add        rcx, rbp
0000000000004bce         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004bd3         jmp        loc_4c8e
0000000000004bd8         align      32

                     loc_4be0:
0000000000004be0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4910+896
0000000000004be5         sete       al
0000000000004be8         test       r9b, r9b
0000000000004beb         jne        loc_50a0

0000000000004bf1         mov        esi, r8d
0000000000004bf4         xor        esi, 0x1
0000000000004bf7         and        al, sil
0000000000004bfa         je         loc_4c2b

0000000000004bfc         cmp        r13, r15
0000000000004bff         jbe        loc_4c06

0000000000004c01         mov        byte [r14+r15], 0x27

                     loc_4c06:
0000000000004c06         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_4910+751
0000000000004c0a         cmp        r13, rsi
0000000000004c0d         jbe        loc_4c15

0000000000004c0f         mov        byte [r14+r15+1], 0x24

                     loc_4c15:
0000000000004c15         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_4910+765
0000000000004c19         cmp        r13, rsi
0000000000004c1c         jbe        loc_4c24

0000000000004c1e         mov        byte [r14+r15+2], 0x27

                     loc_4c24:
0000000000004c24         add        r15, 0x3                                    ; CODE XREF=sub_4910+780
0000000000004c28         mov        r8d, eax

                     loc_4c2b:
0000000000004c2b         cmp        r13, r15                                    ; CODE XREF=sub_4910+746
0000000000004c2e         jbe        loc_4c35

0000000000004c30         mov        byte [r14+r15], 0x5c

                     loc_4c35:
0000000000004c35         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4910+798
0000000000004c39         cmp        r13, rax
0000000000004c3c         jbe        loc_4c4b

0000000000004c3e         mov        eax, ebx
0000000000004c40         shr        al, 0x6
0000000000004c43         add        eax, 0x30
0000000000004c46         mov        byte [r14+r15+1], al

                     loc_4c4b:
0000000000004c4b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4910+812
0000000000004c4f         cmp        r13, rax
0000000000004c52         jbe        loc_4c64

0000000000004c54         mov        eax, ebx
0000000000004c56         shr        al, 0x3
0000000000004c59         and        eax, 0x7
0000000000004c5c         add        eax, 0x30
0000000000004c5f         mov        byte [r14+r15+2], al

                     loc_4c64:
0000000000004c64         and        ebx, 0x7                                    ; CODE XREF=sub_4910+834
0000000000004c67         add        rbp, 0x1
0000000000004c6b         add        r15, 0x3
0000000000004c6f         add        ebx, 0x30
0000000000004c72         cmp        rbp, rcx
0000000000004c75         jae        loc_4460

0000000000004c7b         mov        esi, edx

                     loc_4c7d:
0000000000004c7d         cmp        r13, r15                                    ; CODE XREF=sub_4910+985, sub_4910+1969
0000000000004c80         jbe        loc_4c86

0000000000004c82         mov        byte [r14+r15], bl

                     loc_4c86:
0000000000004c86         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_4910+880
0000000000004c8a         add        r15, 0x1

                     loc_4c8e:
0000000000004c8e         test       dl, dl                                      ; CODE XREF=sub_4910+707
0000000000004c90         jne        loc_4be0

0000000000004c96         mov        eax, esi
0000000000004c98         xor        eax, 0x1
0000000000004c9b         and        eax, r8d
0000000000004c9e         test       r10b, r10b
0000000000004ca1         je         loc_4cb1

0000000000004ca3         cmp        r13, r15
0000000000004ca6         jbe        loc_4cad

0000000000004ca8         mov        byte [r14+r15], 0x5c

                     loc_4cad:
0000000000004cad         add        r15, 0x1                                    ; CODE XREF=sub_4910+918

                     loc_4cb1:
0000000000004cb1         add        rbp, 0x1                                    ; CODE XREF=sub_4910+913
0000000000004cb5         cmp        rbp, rcx
0000000000004cb8         jae        loc_443c

0000000000004cbe         test       al, al
0000000000004cc0         je         loc_50be

0000000000004cc6         cmp        r13, r15
0000000000004cc9         jbe        loc_4cd0

0000000000004ccb         mov        byte [r14+r15], 0x27

                     loc_4cd0:
0000000000004cd0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4910+953
0000000000004cd4         cmp        r13, rax
0000000000004cd7         jbe        loc_4cdf

0000000000004cd9         mov        byte [r14+r15+1], 0x27

                     loc_4cdf:
0000000000004cdf         add        r15, 0x2                                    ; CODE XREF=sub_4910+967
0000000000004ce3         xor        r10d, r10d
0000000000004ce6         xor        r8d, r8d
0000000000004ce9         jmp        loc_4c7d
0000000000004ceb         align      16

                     loc_4cf0:
0000000000004cf0         cmp        r15, 0x1                                    ; CODE XREF=sub_4910+579
0000000000004cf4         je         loc_4b59

0000000000004cfa         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004cff         lea        rcx, qword [rdi+r15]
0000000000004d03         lea        rdx, qword [rdi+r14+1]
0000000000004d08         lea        r8, qword [rcx+r14]
0000000000004d0c         jmp        loc_4d1d
0000000000004d0e         align      16

                     loc_4d10:
0000000000004d10         add        rdx, 0x1                                    ; CODE XREF=sub_4910+1046, sub_4910+1072
0000000000004d14         cmp        r8, rdx
0000000000004d17         je         loc_4b59

                     loc_4d1d:
0000000000004d1d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_4910+1020
0000000000004d20         sub        ecx, 0x5b
0000000000004d23         cmp        cl, 0x21
0000000000004d26         ja         loc_4d10

0000000000004d28         mov        esi, 0x1
0000000000004d2d         shl        rsi, cl
0000000000004d30         mov        rcx, rsi
0000000000004d33         movabs     rsi, 0x20000002b
0000000000004d3d         test       rcx, rsi
0000000000004d40         je         loc_4d10

0000000000004d42         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004d47         mov        r13, qword [rsp+0xe8+var_78]
0000000000004d4c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004d51         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4d59:
0000000000004d59         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4910+1227, sub_4910+1948, sub_4910+2585, sub_4910+2734
0000000000004d5e         je         loc_4d70

0000000000004d60         test       al, al
0000000000004d62         mov        eax, 0x4
0000000000004d67         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000004d6c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4d70:
0000000000004d70         sub        rsp, 0x8                                    ; CODE XREF=sub_4910+1102
0000000000004d74         mov        rcx, rbp
0000000000004d77         mov        rsi, r13
0000000000004d7a         push       qword [rsp+0xf0+var_88]
0000000000004d7e         push       qword [rsp+0xf8+var_80]
0000000000004d82         mov        rdi, r14
0000000000004d85         push       0x0
0000000000004d87         mov        r9d, dword [rsp+0x108+var_70]
0000000000004d8f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004d94         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004d99         and        r9d, 0xfffffffd
0000000000004d9d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004da2         add        rsp, 0x20
0000000000004da6         mov        r15, rax

                     loc_4da9:
0000000000004da9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_4910+2549, sub_4910+2560, sub_4910+2711
0000000000004db1         xor        rbx, qword [fs:0x28]
0000000000004dba         mov        rax, r15
0000000000004dbd         jne        loc_53c3

0000000000004dc3         add        rsp, 0xb8
0000000000004dca         pop        rbx
0000000000004dcb         pop        rbp
0000000000004dcc         pop        r12
0000000000004dce         pop        r13
0000000000004dd0         pop        r14
0000000000004dd2         pop        r15
0000000000004dd4         ret
                        ; endp
0000000000004dd5         align      8

                     loc_4dd8:
0000000000004dd8         mov        rbp, r11                                    ; CODE XREF=sub_44c0+194
0000000000004ddb         jmp        loc_4d59

                     loc_4de0:
0000000000004de0         cmp        r13, r15                                    ; CODE XREF=sub_4910+206, sub_4910+220
0000000000004de3         jbe        loc_4dea

0000000000004de5         mov        byte [r14+r15], 0x27

                     loc_4dea:
0000000000004dea         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4910+1235
0000000000004dee         cmp        r13, rax
0000000000004df1         jbe        loc_4df9

0000000000004df3         mov        byte [r14+r15+1], 0x5c

                     loc_4df9:
0000000000004df9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4910+1249
0000000000004dfd         cmp        r13, rax
0000000000004e00         jbe        loc_53f2

0000000000004e06         mov        rdx, r13
0000000000004e09         mov        byte [r14+r15+2], 0x27
0000000000004e0f         mov        r13, qword [rsp+arg_48]
0000000000004e14         jmp        loc_49f2

                     loc_4e19:
0000000000004e19         mov        eax, r12d                                   ; CODE XREF=sub_47b0+99
0000000000004e1c         mov        ebx, 0x30
0000000000004e21         xor        r12d, r12d
0000000000004e24         jmp        sub_43c0+105
                        ; endp

                     loc_4e29:
0000000000004e29         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_47b0+67
0000000000004e2f         jmp        loc_47f9

                     loc_4e34:
0000000000004e34         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004e36         jne        loc_4263

0000000000004e3c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4e41:
0000000000004e41         test       r13, r13                                    ; CODE XREF=sub_4910+2749
0000000000004e44         jne        loc_53da

0000000000004e4a         lea        rax, qword [aLibs+29]                       ; 0x7fbd
0000000000004e51         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004e5a         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004e5f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004e64         xor        r12d, r12d
0000000000004e67         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004e6c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004e75         mov        qword [rsp+0xe8+var_A0], rax
0000000000004e7a         mov        r15d, 0x1
0000000000004e80         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004e88         jmp        loc_42a3
0000000000004e8d         align      16

                     loc_4e90:
0000000000004e90         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004e92         jne        loc_528d

0000000000004e98         test       r13, r13
0000000000004e9b         je         loc_50c6

0000000000004ea1         mov        byte [r14], 0x22
0000000000004ea5         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004eaa         xor        r12d, r12d
0000000000004ead         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004eb2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_4ebb:
0000000000004ebb         lea        rax, qword [aLibs+27]                       ; 0x7fbb, CODE XREF=sub_4910+1996
0000000000004ec2         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004ec7         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004ecc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004ed5         mov        r15d, 0x1
0000000000004edb         mov        qword [rsp+0xe8+var_A0], rax
0000000000004ee0         jmp        loc_42a3

                     loc_4ee5:
0000000000004ee5         lea        rax, qword [aLibs+27]                       ; case 6, 0x7fbb, CODE XREF=quotearg_buffer_restyled+145
0000000000004eec         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004ef1         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004ef6         xor        r12d, r12d
0000000000004ef9         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f02         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004f07         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004f0c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004f15         xor        r15d, r15d
0000000000004f18         mov        qword [rsp+0xe8+var_A0], rax
0000000000004f1d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004f25         jmp        loc_42a3

                     loc_4f2a:
0000000000004f2a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000004f2f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004f34         xor        r12d, r12d
0000000000004f37         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f40         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004f45         xor        r15d, r15d
0000000000004f48         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004f4d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004f56         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000004f5f         jmp        loc_42a3

                     loc_4f64:
0000000000004f64         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004f69         je         loc_4fc1

0000000000004f6b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x7fbf
0000000000004f72         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f74         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f79         call       j_dcgettext                                 ; dcgettext
0000000000004f7e         mov        rcx, rax
0000000000004f81         mov        qword [rsp+0xe8+var_80], rax
0000000000004f86         lea        rax, qword [aLibs+31]                       ; 0x7fbf
0000000000004f8d         cmp        rcx, rax
0000000000004f90         je         loc_532e

                     loc_4f96:
0000000000004f96         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x7fbd, CODE XREF=sub_4910+2607
0000000000004f9d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f9f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004fa4         call       j_dcgettext                                 ; dcgettext
0000000000004fa9         mov        rcx, rax
0000000000004fac         mov        qword [rsp+0xe8+var_88], rax
0000000000004fb1         lea        rax, qword [aLibs+29]                       ; 0x7fbd
0000000000004fb8         cmp        rcx, rax
0000000000004fbb         je         loc_5344

                     loc_4fc1:
0000000000004fc1         xor        r15d, r15d                                  ; CODE XREF=sub_4910+1625, sub_4910+2629
0000000000004fc4         test       ebx, ebx
0000000000004fc6         je         loc_518d

                     loc_4fcc:
0000000000004fcc         test       ebx, ebx                                    ; CODE XREF=sub_4910+2183, sub_4910+2214
0000000000004fce         mov        rbx, qword [rsp+0xe8+var_88]
0000000000004fd3         setne      byte [rsp+0xe8+var_D9]
0000000000004fd8         xor        r12d, r12d
0000000000004fdb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000004fde         call       j_strlen                                    ; strlen
0000000000004fe3         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004fe8         mov        qword [rsp+0xe8+var_D0], rax
0000000000004fed         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004ff2         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004ff7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005000         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005005         jmp        loc_42a3

                     loc_500a:
000000000000500a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000500f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005014         xor        r12d, r12d
0000000000005017         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005020         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005025         xor        r15d, r15d
0000000000005028         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000502d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000005036         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000503f         jmp        loc_42a3

                     loc_5044:
0000000000005044         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000005049         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000504e         xor        r12d, r12d
0000000000005051         mov        qword [rsp+0xe8+var_98], 0x0
000000000000505a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000505f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005064         jmp        loc_4283

                     loc_5069:
0000000000005069         cmp        r13, r15                                    ; CODE XREF=sub_47b0+133
000000000000506c         jbe        loc_5073

000000000000506e         mov        byte [r14+r15], 0x30

                     loc_5073:
0000000000005073         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_4910+1884
0000000000005077         cmp        r13, rax
000000000000507a         jbe        loc_5082

000000000000507c         mov        byte [r14+rcx+2], 0x30

                     loc_5082:
0000000000005082         mov        eax, r12d                                   ; CODE XREF=sub_4910+1898
0000000000005085         lea        r15, qword [rcx+3]
0000000000005089         xor        r12d, r12d
000000000000508c         mov        ebx, 0x30
0000000000005091         jmp        sub_43c0+56
                        ; endp
0000000000005096         align      32

                     loc_50a0:
00000000000050a0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_4910+731
00000000000050a5         mov        rbp, r11
00000000000050a8         mov        byte [rsp+0xe8+var_DB], bl
00000000000050ac         jmp        loc_4d59

                     loc_50b1:
00000000000050b1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_46b0+105
00000000000050b6         xor        r12d, r12d
00000000000050b9         jmp        loc_4bc0

                     loc_50be:
00000000000050be         xor        r10d, r10d                                  ; CODE XREF=sub_4910+944
00000000000050c1         jmp        loc_4c7d

                     loc_50c6:
00000000000050c6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_4910+1419
00000000000050cf         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000050d4         xor        r12d, r12d
00000000000050d7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000050dc         jmp        loc_4ebb

                     loc_50e1:
00000000000050e1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_4910+561
00000000000050e6         mov        rsi, r14
00000000000050e9         mov        rcx, r13
00000000000050ec         mov        rax, rbx
00000000000050ef         mov        rdi, rbx
00000000000050f2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000050f8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000050fd         mov        r9, qword [rsp+0xe8+var_60]
0000000000005105         cmp        rsi, r11
0000000000005108         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000510e         mov        r15, qword [rsp+0xe8+var_68]
0000000000005116         mov        r14, qword [rsp+0xe8+var_A8]
000000000000511b         mov        r13, qword [rsp+0xe8+var_78]
0000000000005120         jae        loc_5148

0000000000005122         cmp        byte [rcx], 0x0
0000000000005125         jne        loc_5137

0000000000005127         jmp        loc_5148
0000000000005129         align      16

                     loc_5130:
0000000000005130         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_4910+2099
0000000000005135         je         loc_5145

                     loc_5137:
0000000000005137         add        rax, 0x1                                    ; CODE XREF=sub_4910+2069
000000000000513b         lea        rdx, qword [rbp+rax]
0000000000005140         cmp        r11, rdx
0000000000005143         ja         loc_5130

                     loc_5145:
0000000000005145         mov        rdi, rax                                    ; CODE XREF=sub_4910+2085

                     loc_5148:
0000000000005148         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4910+2064, sub_4910+2071
000000000000514d         xor        r12d, r12d
0000000000005150         jmp        loc_4bb6

                     loc_5155:
0000000000005155         mov        rdi, rbx                                    ; CODE XREF=sub_4910+551
0000000000005158         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000515e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000005163         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000005169         mov        r15, qword [rsp+0xe8+var_68]
0000000000005171         xor        r12d, r12d
0000000000005174         mov        r14, qword [rsp+0xe8+var_A8]
0000000000005179         mov        r13, qword [rsp+0xe8+var_78]
000000000000517e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000005183         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000005188         jmp        loc_4bb6

                     loc_518d:
000000000000518d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_4910+1718
0000000000005192         movzx      eax, byte [rdx]
0000000000005195         test       al, al
0000000000005197         je         loc_4fcc

000000000000519d         nop        dword [rax]

                     loc_51a0:
00000000000051a0         cmp        r13, r15                                    ; CODE XREF=sub_4910+2212
00000000000051a3         jbe        loc_51a9

00000000000051a5         mov        byte [r14+r15], al

                     loc_51a9:
00000000000051a9         add        r15, 0x1                                    ; CODE XREF=sub_4910+2195
00000000000051ad         movzx      eax, byte [rdx+r15]
00000000000051b2         test       al, al
00000000000051b4         jne        loc_51a0

00000000000051b6         jmp        loc_4fcc

                     loc_51bb:
00000000000051bb         mov        eax, edx                                    ; CODE XREF=sub_4910+682
00000000000051bd         jmp        loc_4717

                     loc_51c2:
00000000000051c2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_4910+290
00000000000051c6         cmp        bl, 0x3e
00000000000051c9         ja         loc_4a40

00000000000051cf         movabs     rax, 0x7000a38200000000
00000000000051d9         bt         rax, rbx
00000000000051dd         jae        loc_4a40

00000000000051e3         cmp        byte [rsp+arg_7], 0x0
00000000000051e8         jne        loc_53d2

00000000000051ee         cmp        r13, r15
00000000000051f1         jbe        loc_51f8

00000000000051f3         mov        byte [r14+r15], 0x3f

                     loc_51f8:
00000000000051f8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4910+2273
00000000000051fc         cmp        r13, rax
00000000000051ff         jbe        loc_5207

0000000000005201         mov        byte [r14+r15+1], 0x22

                     loc_5207:
0000000000005207         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4910+2287
000000000000520b         cmp        r13, rax
000000000000520e         jbe        loc_5216

0000000000005210         mov        byte [r14+r15+2], 0x22

                     loc_5216:
0000000000005216         lea        rax, qword [r15+3]                          ; CODE XREF=sub_4910+2302
000000000000521a         cmp        r13, rax
000000000000521d         jbe        loc_5225

000000000000521f         mov        byte [r14+r15+3], 0x3f

                     loc_5225:
0000000000005225         add        r15, 0x4                                    ; CODE XREF=sub_4910+2317
0000000000005229         xor        edx, edx
000000000000522b         xor        r12d, r12d
000000000000522e         xor        eax, eax
0000000000005230         mov        rbp, rcx
0000000000005233         jmp        sub_43c0+56
                        ; endp

                     loc_5238:
0000000000005238         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000523a         je         loc_53c8

0000000000005240         lea        rax, qword [aLibs+29]                       ; 0x7fbd
0000000000005247         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000524c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005251         xor        r12d, r12d
0000000000005254         mov        qword [rsp+0xe8+var_98], 0x0
000000000000525d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005262         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000005267         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005270         xor        r15d, r15d
0000000000005273         mov        qword [rsp+0xe8+var_A0], rax
0000000000005278         jmp        loc_42a3
000000000000527d         align      128

                     loc_5280:
0000000000005280         mov        rbp, r11                                    ; CODE XREF=sub_4910+333
0000000000005283         movzx      eax, byte [rsp+arg_7]
0000000000005288         jmp        sub_4910+1097
                        ; endp

                     loc_528d:
000000000000528d         lea        rax, qword [aLibs+27]                       ; 0x7fbb, CODE XREF=sub_4910+1410
0000000000005294         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000005299         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000529e         xor        r12d, r12d
00000000000052a1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000052aa         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000052af         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000052b4         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000052bd         xor        r15d, r15d
00000000000052c0         mov        qword [rsp+0xe8+var_A0], rax
00000000000052c5         jmp        loc_42a3

                     loc_52ca:
00000000000052ca         mov        eax, edx                                    ; CODE XREF=sub_4910+87

                     loc_52cc:
00000000000052cc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_4910+76, sub_4910+2721
00000000000052d1         test       rbx, rbx
00000000000052d4         je         loc_5302

00000000000052d6         test       al, al
00000000000052d8         je         loc_5302

00000000000052da         movzx      ecx, byte [rbx]
00000000000052dd         mov        rax, rbx
00000000000052e0         test       cl, cl
00000000000052e2         je         loc_5302

00000000000052e4         mov        rdx, r15
00000000000052e7         sub        rax, r15

                     loc_52ea:
00000000000052ea         cmp        r13, rdx                                    ; CODE XREF=sub_4910+2541
00000000000052ed         jbe        loc_52f3

00000000000052ef         mov        byte [r14+rdx], cl

                     loc_52f3:
00000000000052f3         add        rdx, 0x1                                    ; CODE XREF=sub_4910+2525
00000000000052f7         movzx      ecx, byte [rax+rdx]
00000000000052fb         test       cl, cl
00000000000052fd         jne        loc_52ea

00000000000052ff         mov        r15, rdx

                     loc_5302:
0000000000005302         cmp        r13, r15                                    ; CODE XREF=sub_4910+2500, sub_4910+2504, sub_4910+2514
0000000000005305         jbe        loc_4da9

000000000000530b         mov        byte [r14+r15], 0x0
0000000000005310         jmp        loc_4da9

                     loc_5315:
0000000000005315         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000531a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000531f         mov        rbp, r11
0000000000005322         sete       al
0000000000005325         mov        byte [rsp+0xe8+var_DB], bl
0000000000005329         jmp        loc_4d59

                     loc_532e:
000000000000532e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4910+1664
0000000000005332         mov        rdi, rcx
0000000000005335         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000533a         mov        qword [rsp+0xe8+var_80], rax
000000000000533f         jmp        loc_4f96

                     loc_5344:
0000000000005344         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4910+1707
0000000000005348         mov        rdi, rcx
000000000000534b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000005350         mov        qword [rsp+0xe8+var_88], rax
0000000000005355         jmp        loc_4fc1

                     loc_535a:
000000000000535a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_47b0+16
000000000000535f         mov        rbp, r11
0000000000005362         mov        eax, edx
0000000000005364         mov        byte [rsp+arg_5], bl
0000000000005368         jmp        sub_4910+1097
                        ; endp

                     loc_536d:
000000000000536d         sub        rsp, 0x8                                    ; CODE XREF=sub_4910+98
0000000000005371         mov        r8d, 0x5
0000000000005377         mov        rcx, r11
000000000000537a         push       qword [rsp+0xf0+var_88]
000000000000537e         push       qword [rsp+0xf8+var_80]
0000000000005382         mov        rdi, r14
0000000000005385         push       qword [rsp+0x100+var_C8]
0000000000005389         mov        r9d, dword [rsp+0x108+var_70]
0000000000005391         mov        rdx, qword [rsp+0x108+var_D8]
0000000000005396         mov        rsi, qword [rsp+0x108+var_98]
000000000000539b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000053a0         add        rsp, 0x20
00000000000053a4         mov        r15, rax
00000000000053a7         jmp        loc_4da9

                     loc_53ac:
00000000000053ac         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_4910+121
00000000000053b1         jmp        loc_52cc

                     loc_53b6:
00000000000053b6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4910+63
00000000000053be         jmp        loc_4d59

                     loc_53c3:
00000000000053c3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_4910+1197
                        ; endp

                     loc_53c8:
00000000000053c8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4910+2346
00000000000053cd         jmp        loc_4e41

                     loc_53d2:
00000000000053d2         mov        rbp, r11                                    ; CODE XREF=sub_4910+2264
00000000000053d5         jmp        sub_4910+1120
                        ; endp

                     loc_53da:
00000000000053da         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_4910+1332
00000000000053df         xor        eax, eax
00000000000053e1         xor        r12d, r12d
00000000000053e4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000053ed         jmp        loc_4994

                     loc_53f2:
00000000000053f2         mov        rdx, r13                                    ; CODE XREF=sub_4910+1264
00000000000053f5         mov        r13, qword [rsp+arg_48]
00000000000053fa         jmp        loc_49f2

                     loc_53ff:
00000000000053ff         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000005404         align      16                                          ; End of unwind block (FDE at 0x92f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000005410         push       r15                                         ; Begin of unwind block (FDE at 0x9370), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000005412         push       r14
0000000000005414         movsxd     r15, edi
0000000000005417         push       r13
0000000000005419         push       r12
000000000000541b         mov        r14, rdx
000000000000541e         push       rbp
000000000000541f         push       rbx
0000000000005420         mov        rbp, rcx
0000000000005423         sub        rsp, 0x28
0000000000005427         mov        qword [rsp+0x58+var_50], rsi
000000000000542c         call       j___errno_location                          ; __errno_location
0000000000005431         mov        r13, rax
0000000000005434         mov        eax, dword [rax]
0000000000005436         test       r15d, r15d
0000000000005439         mov        rbx, qword [slotvec]                        ; slotvec
0000000000005440         mov        dword [rsp+0x58+var_40], eax
0000000000005444         js         loc_55b1

000000000000544a         cmp        dword [nslots], r15d                        ; nslots
0000000000005451         jg         loc_54b5

0000000000005453         cmp        r15d, 0x7fffffff
000000000000545a         je         loc_55b6

0000000000005460         lea        r12d, dword [r15+1]
0000000000005464         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000546b         movsxd     rsi, r12d
000000000000546e         shl        rsi, 0x4
0000000000005472         cmp        rbx, rax
0000000000005475         je         loc_5590

000000000000547b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000547e         call       xrealloc                                    ; xrealloc
0000000000005483         mov        rbx, rax
0000000000005486         mov        qword [slotvec], rax                        ; slotvec

                     loc_548d:
000000000000548d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000005494         mov        edx, r12d
0000000000005497         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005499         sub        edx, edi
000000000000549b         shl        rdi, 0x4
000000000000549f         movsxd     rdx, edx
00000000000054a2         add        rdi, rbx                                    ; argument "__s" for method j_memset
00000000000054a5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
00000000000054a9         call       j_memset                                    ; memset
00000000000054ae         mov        dword [nslots], r12d                        ; nslots

                     loc_54b5:
00000000000054b5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
00000000000054b8         shl        r15, 0x4
00000000000054bc         sub        rsp, 0x8
00000000000054c0         add        rbx, r15
00000000000054c3         lea        r15, qword [rbp+8]
00000000000054c7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000054cb         mov        r11, qword [rbx]
00000000000054ce         mov        r12, qword [rbx+8]
00000000000054d2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000054d5         or         eax, 0x1
00000000000054d8         mov        dword [rsp+0x60+var_3C], eax
00000000000054dc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000054df         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
00000000000054e2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000054e5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000054e7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
00000000000054ea         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000054ef         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
00000000000054f2         mov        qword [rsp+0x78+var_48], r11
00000000000054f7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000054fc         add        rsp, 0x20
0000000000005500         mov        r11, qword [rsp+0x58+var_48]
0000000000005505         cmp        r11, rax
0000000000005508         ja         loc_5571

000000000000550a         lea        rsi, qword [rax+1]
000000000000550e         lea        rax, qword [slot0]                          ; slot0
0000000000005515         cmp        r12, rax
0000000000005518         mov        qword [rbx], rsi
000000000000551b         je         loc_552f

000000000000551d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005520         mov        qword [rsp+0x58+var_48], rsi
0000000000005525         call       j_free                                      ; free
000000000000552a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_552f:
000000000000552f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000005532         mov        qword [rsp+0x58+var_48], rsi
0000000000005537         call       xmalloc                                     ; xmalloc
000000000000553c         sub        rsp, 0x8
0000000000005540         mov        qword [rbx+8], rax
0000000000005544         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000005548         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000554b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000554e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005551         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005553         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000005558         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000555b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000005560         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000005565         mov        r12, rax
0000000000005568         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000556d         add        rsp, 0x20

                     loc_5571:
0000000000005571         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000005575         mov        dword [r13], eax
0000000000005579         add        rsp, 0x28
000000000000557d         mov        rax, r12
0000000000005580         pop        rbx
0000000000005581         pop        rbp
0000000000005582         pop        r12
0000000000005584         pop        r13
0000000000005586         pop        r14
0000000000005588         pop        r15
000000000000558a         ret
                        ; endp
000000000000558b         align      16

                     loc_5590:
0000000000005590         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000005592         call       xrealloc                                    ; xrealloc
0000000000005597         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000559f         mov        rbx, rax
00000000000055a2         mov        qword [slotvec], rax                        ; slotvec
00000000000055a9         movups     xmmword [rax], xmm0
00000000000055ac         jmp        loc_548d

                     loc_55b1:
00000000000055b1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_55b6:
00000000000055b6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_55bb:
00000000000055bb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x9370)
                     clone_quoting_options:
00000000000055c0         push       r12                                         ; Begin of unwind block (FDE at 0x93dc)
00000000000055c2         push       rbp
00000000000055c3         push       rbx
00000000000055c4         mov        rbx, rdi
00000000000055c7         call       j___errno_location                          ; __errno_location
00000000000055cc         mov        r12d, dword [rax]
00000000000055cf         mov        rbp, rax
00000000000055d2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000055d9         test       rbx, rbx
00000000000055dc         mov        esi, 0x38
00000000000055e1         cmove      rbx, rax
00000000000055e5         mov        rdi, rbx
00000000000055e8         call       xmemdup                                     ; xmemdup
00000000000055ed         mov        dword [rbp], r12d
00000000000055f1         pop        rbx
00000000000055f2         pop        rbp
00000000000055f3         pop        r12
00000000000055f5         ret
                        ; endp
00000000000055f6         align      512                                         ; End of unwind block (FDE at 0x93dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000005600         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9408), default_quoting_options
0000000000005607         test       rdi, rdi
000000000000560a         cmove      rdi, rax
000000000000560e         mov        eax, dword [rdi]
0000000000005610         ret
                        ; endp
0000000000005611         align      32                                          ; End of unwind block (FDE at 0x9408)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000005620         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x941c), default_quoting_options
0000000000005627         test       rdi, rdi
000000000000562a         cmove      rdi, rax
000000000000562e         mov        dword [rdi], esi
0000000000005630         ret
                        ; endp
0000000000005631         align      64                                          ; End of unwind block (FDE at 0x941c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000005640         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9430), default_quoting_options
0000000000005647         test       rdi, rdi
000000000000564a         mov        ecx, esi
000000000000564c         cmove      rdi, rax
0000000000005650         mov        eax, esi
0000000000005652         and        ecx, 0x1f
0000000000005655         shr        al, 0x5
0000000000005658         movzx      eax, al
000000000000565b         lea        rdi, qword [rdi+rax*4+8]
0000000000005660         mov        esi, dword [rdi]
0000000000005662         mov        eax, esi
0000000000005664         shr        eax, cl
0000000000005666         xor        edx, eax
0000000000005668         and        eax, 0x1
000000000000566b         and        edx, 0x1
000000000000566e         shl        edx, cl
0000000000005670         xor        edx, esi
0000000000005672         mov        dword [rdi], edx
0000000000005674         ret
                        ; endp
0000000000005675         align      128                                         ; End of unwind block (FDE at 0x9430)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000005680         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9444), default_quoting_options
0000000000005687         test       rdi, rdi
000000000000568a         cmove      rdi, rax
000000000000568e         mov        eax, dword [rdi+4]
0000000000005691         mov        dword [rdi+4], esi
0000000000005694         ret
                        ; endp
0000000000005695         align      32                                          ; End of unwind block (FDE at 0x9444)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
00000000000056a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9458), default_quoting_options
00000000000056a7         test       rdi, rdi
00000000000056aa         cmove      rdi, rax
00000000000056ae         test       rsi, rsi
00000000000056b1         mov        dword [rdi], 0xa
00000000000056b7         je         loc_56c7

00000000000056b9         test       rdx, rdx
00000000000056bc         je         loc_56c7

00000000000056be         mov        qword [rdi+0x28], rsi
00000000000056c2         mov        qword [rdi+0x30], rdx
00000000000056c6         ret
                        ; endp

                     loc_56c7:
00000000000056c7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
00000000000056cb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
00000000000056d0         push       r15                                         ; End of unwind block (FDE at 0x9458), Begin of unwind block (FDE at 0x946c)
00000000000056d2         push       r14
00000000000056d4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000056db         push       r13
00000000000056dd         push       r12
00000000000056df         mov        r13, rdi
00000000000056e2         push       rbp
00000000000056e3         push       rbx
00000000000056e4         mov        rbx, r8
00000000000056e7         mov        r14, rsi
00000000000056ea         mov        r15, rdx
00000000000056ed         sub        rsp, 0x18
00000000000056f1         test       r8, r8
00000000000056f4         cmove      rbx, rax
00000000000056f8         mov        qword [rsp+0x48+var_40], rcx
00000000000056fd         call       j___errno_location                          ; __errno_location
0000000000005702         mov        r12d, dword [rax]
0000000000005705         mov        rbp, rax
0000000000005708         lea        rax, qword [rbx+8]
000000000000570c         sub        rsp, 0x8
0000000000005710         mov        r9d, dword [rbx+4]
0000000000005714         push       qword [rbx+0x30]
0000000000005717         mov        r8d, dword [rbx]
000000000000571a         push       qword [rbx+0x28]
000000000000571d         mov        rdx, r15
0000000000005720         push       rax
0000000000005721         mov        rcx, qword [rsp+0x68+var_40]
0000000000005726         mov        rsi, r14
0000000000005729         mov        rdi, r13
000000000000572c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005731         mov        dword [rbp], r12d
0000000000005735         add        rsp, 0x38
0000000000005739         pop        rbx
000000000000573a         pop        rbp
000000000000573b         pop        r12
000000000000573d         pop        r13
000000000000573f         pop        r14
0000000000005741         pop        r15
0000000000005743         ret
                        ; endp
0000000000005744         align      16                                          ; End of unwind block (FDE at 0x946c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005750         push       r15                                         ; Begin of unwind block (FDE at 0x94c0), CODE XREF=quotearg_alloc+5
0000000000005752         push       r14
0000000000005754         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000575b         push       r13
000000000000575d         push       r12
000000000000575f         mov        r12, rdx
0000000000005762         push       rbp
0000000000005763         push       rbx
0000000000005764         mov        rbx, rcx
0000000000005767         mov        r14, rdi
000000000000576a         mov        r15, rsi
000000000000576d         sub        rsp, 0x38
0000000000005771         test       rcx, rcx
0000000000005774         cmove      rbx, rax
0000000000005778         xor        ebp, ebp
000000000000577a         call       j___errno_location                          ; __errno_location
000000000000577f         test       r12, r12
0000000000005782         mov        r13, rax
0000000000005785         mov        eax, dword [rax]
0000000000005787         sete       bpl
000000000000578b         or         ebp, dword [rbx+4]
000000000000578e         lea        r10, qword [rbx+8]
0000000000005792         sub        rsp, 0x8
0000000000005796         mov        r8d, dword [rbx]
0000000000005799         mov        rcx, r15
000000000000579c         mov        dword [rsp+0x70+var_5C], eax
00000000000057a0         push       qword [rbx+0x30]
00000000000057a3         mov        rdx, r14
00000000000057a6         push       qword [rbx+0x28]
00000000000057a9         push       r10
00000000000057ab         xor        esi, esi
00000000000057ad         mov        r9d, ebp
00000000000057b0         xor        edi, edi
00000000000057b2         mov        qword [rsp+0x88+var_48], r10
00000000000057b7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000057bc         lea        rsi, qword [rax+1]
00000000000057c0         mov        qword [rsp+0x88+var_40], rax
00000000000057c5         add        rsp, 0x20
00000000000057c9         mov        rdi, rsi
00000000000057cc         mov        qword [rsp+0x68+var_50], rsi
00000000000057d1         call       xmalloc                                     ; xmalloc
00000000000057d6         mov        qword [rsp+0x68+var_58], rax
00000000000057db         sub        rsp, 0x8
00000000000057df         push       qword [rbx+0x30]
00000000000057e2         push       qword [rbx+0x28]
00000000000057e5         mov        r10, qword [rsp+0x80+var_48]
00000000000057ea         mov        r9d, ebp
00000000000057ed         mov        r8d, dword [rbx]
00000000000057f0         mov        rcx, r15
00000000000057f3         mov        rdx, r14
00000000000057f6         mov        rdi, rax
00000000000057f9         push       r10
00000000000057fb         mov        rsi, qword [rsp+0x88+var_50]
0000000000005800         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005805         mov        eax, dword [rsp+0x88+var_5C]
0000000000005809         add        rsp, 0x20
000000000000580d         test       r12, r12
0000000000005810         mov        dword [r13], eax
0000000000005814         je         loc_581f

0000000000005816         mov        r11, qword [rsp+0x68+var_40]
000000000000581b         mov        qword [r12], r11

                     loc_581f:
000000000000581f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005824         add        rsp, 0x38
0000000000005828         pop        rbx
0000000000005829         pop        rbp
000000000000582a         pop        r12
000000000000582c         pop        r13
000000000000582e         pop        r14
0000000000005830         pop        r15
0000000000005832         ret
                        ; endp
0000000000005833         align      64                                          ; End of unwind block (FDE at 0x94c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005840         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x952c)
0000000000005843         xor        edx, edx
0000000000005845         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000584a         align      16                                          ; End of unwind block (FDE at 0x952c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005850         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x9540), nslots
0000000000005856         push       r12
0000000000005858         mov        r12, qword [slotvec]                        ; slotvec
000000000000585f         push       rbp
0000000000005860         push       rbx
0000000000005861         cmp        eax, 0x1
0000000000005864         jle        loc_5891

0000000000005866         sub        eax, 0x2
0000000000005869         lea        rbx, qword [r12+0x18]
000000000000586e         shl        rax, 0x4
0000000000005872         lea        rbp, qword [r12+rax+0x28]
0000000000005877         nop        word [rax+rax]

                     loc_5880:
0000000000005880         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000005883         add        rbx, 0x10
0000000000005887         call       j_free                                      ; free
000000000000588c         cmp        rbx, rbp
000000000000588f         jne        loc_5880

                     loc_5891:
0000000000005891         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000005896         lea        rbx, qword [slot0]                          ; slot0
000000000000589d         cmp        rdi, rbx
00000000000058a0         je         loc_58b9

00000000000058a2         call       j_free                                      ; free
00000000000058a7         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000058b2         mov        qword [slotvec0+8], rbx                     ; 0x20b098

                     loc_58b9:
00000000000058b9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000058c0         cmp        r12, rbx
00000000000058c3         je         loc_58d4

00000000000058c5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000058c8         call       j_free                                      ; free
00000000000058cd         mov        qword [slotvec], rbx                        ; slotvec

                     loc_58d4:
00000000000058d4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000058d5         mov        dword [nslots], 0x1                         ; nslots
00000000000058df         pop        rbp
00000000000058e0         pop        r12
00000000000058e2         ret
                        ; endp
00000000000058e3         align      16                                          ; End of unwind block (FDE at 0x9540)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000058f0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x956c), default_quoting_options
00000000000058f7         mov        rdx, 0xffffffffffffffff
00000000000058fe         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005903         align      16                                          ; End of unwind block (FDE at 0x956c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000005910         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9580), default_quoting_options
0000000000005917         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000591c         align      32                                          ; End of unwind block (FDE at 0x9580)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000005920         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9594), default_quoting_options
0000000000005927         mov        rsi, rdi
000000000000592a         mov        rdx, 0xffffffffffffffff
0000000000005931         xor        edi, edi
0000000000005933         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005938         align      64                                          ; End of unwind block (FDE at 0x9594)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005940         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x95a8), default_quoting_options
0000000000005947         mov        rdx, rsi
000000000000594a         mov        rsi, rdi
000000000000594d         xor        edi, edi
000000000000594f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005954         align      32                                          ; End of unwind block (FDE at 0x95a8)

                     quotearg_n_style:
0000000000005960         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x95bc), CODE XREF=quotearg_style+7
0000000000005964         mov        rax, rdx
0000000000005967         mov        rdx, qword [fs:0x28]
0000000000005970         mov        qword [rsp+0x48+var_10], rdx
0000000000005975         xor        edx, edx
0000000000005977         cmp        esi, 0xa
000000000000597a         je         loc_59e4

000000000000597c         mov        dword [rsp+0x48+var_48], esi
000000000000597f         mov        rcx, rsp
0000000000005982         mov        rdx, 0xffffffffffffffff
0000000000005989         mov        rsi, rax
000000000000598c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005995         mov        qword [rsp+0x48+var_3C], 0x0
000000000000599e         mov        qword [rsp+0x48+var_34], 0x0
00000000000059a7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000059b0         mov        qword [rsp+0x48+var_24], 0x0
00000000000059b9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000059c2         mov        dword [rsp+0x48+var_14], 0x0
00000000000059ca         call       quotearg_n_options                          ; quotearg_n_options
00000000000059cf         mov        rcx, qword [rsp+0x48+var_10]
00000000000059d4         xor        rcx, qword [fs:0x28]
00000000000059dd         jne        loc_59e9

00000000000059df         add        rsp, 0x48
00000000000059e3         ret
                        ; endp

                     loc_59e4:
00000000000059e4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_59e9:
00000000000059e9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000059ee         align      16                                          ; End of unwind block (FDE at 0x95bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000059f0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x95d8), CODE XREF=quotearg_style_mem+10, collate_error+106, collate_error+127
00000000000059f4         mov        rax, rdx
00000000000059f7         mov        rdx, rcx
00000000000059fa         mov        rcx, qword [fs:0x28]
0000000000005a03         mov        qword [rsp+0x48+var_10], rcx
0000000000005a08         xor        ecx, ecx
0000000000005a0a         cmp        esi, 0xa
0000000000005a0d         je         loc_5a70

0000000000005a0f         mov        dword [rsp+0x48+var_48], esi
0000000000005a12         mov        rcx, rsp
0000000000005a15         mov        rsi, rax
0000000000005a18         mov        qword [rsp+0x48+var_44], 0x0
0000000000005a21         mov        qword [rsp+0x48+var_3C], 0x0
0000000000005a2a         mov        qword [rsp+0x48+var_34], 0x0
0000000000005a33         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005a3c         mov        qword [rsp+0x48+var_24], 0x0
0000000000005a45         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005a4e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005a56         call       quotearg_n_options                          ; quotearg_n_options
0000000000005a5b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005a60         xor        rdx, qword [fs:0x28]
0000000000005a69         jne        loc_5a75

0000000000005a6b         add        rsp, 0x48
0000000000005a6f         ret
                        ; endp

                     loc_5a70:
0000000000005a70         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5a75:
0000000000005a75         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000005a7a         align      128                                         ; End of unwind block (FDE at 0x95d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_style:
0000000000005a80         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x95f4), CODE XREF=add_file_name.constprop.7+384
0000000000005a83         mov        esi, edi
0000000000005a85         xor        edi, edi
0000000000005a87         jmp        quotearg_n_style                            ; quotearg_n_style
0000000000005a8c         align      16                                          ; End of unwind block (FDE at 0x95f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000005a90         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x9608)
0000000000005a93         mov        rdx, rsi
0000000000005a96         mov        esi, edi
0000000000005a98         xor        edi, edi
0000000000005a9a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000005a9f         align      32                                          ; End of unwind block (FDE at 0x9608)

                     quotearg_char_mem:
0000000000005aa0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x961c), CODE XREF=quotearg_char+11
0000000000005aa4         mov        ecx, edx
0000000000005aa6         mov        rax, qword [fs:0x28]
0000000000005aaf         mov        qword [rsp+0x48+var_10], rax
0000000000005ab4         xor        eax, eax
0000000000005ab6         mov        rax, qword [qword_20b330]                   ; qword_20b330
0000000000005abd         mov        r8, rsp
0000000000005ac0         and        ecx, 0x1f
0000000000005ac3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005acb         mov        qword [rsp+0x48+var_18], rax
0000000000005ad0         mov        eax, edx
0000000000005ad2         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005ad6         shr        al, 0x5
0000000000005ad9         movzx      eax, al
0000000000005adc         lea        r9, qword [r8+rax*4+8]
0000000000005ae1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20b310
0000000000005ae9         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005aee         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20b320
0000000000005af6         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005afb         mov        edx, dword [r9]
0000000000005afe         mov        eax, edx
0000000000005b00         shr        eax, cl
0000000000005b02         not        eax
0000000000005b04         and        eax, 0x1
0000000000005b07         shl        eax, cl
0000000000005b09         mov        rcx, r8
0000000000005b0c         xor        eax, edx
0000000000005b0e         mov        rdx, rsi
0000000000005b11         mov        rsi, rdi
0000000000005b14         mov        dword [r9], eax
0000000000005b17         xor        edi, edi
0000000000005b19         call       quotearg_n_options                          ; quotearg_n_options
0000000000005b1e         mov        rsi, qword [rsp+0x48+var_10]
0000000000005b23         xor        rsi, qword [fs:0x28]
0000000000005b2c         jne        loc_5b33

0000000000005b2e         add        rsp, 0x48
0000000000005b32         ret
                        ; endp

                     loc_5b33:
0000000000005b33         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005b38         align      64                                          ; End of unwind block (FDE at 0x961c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005b40         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x9638)
0000000000005b44         mov        rsi, 0xffffffffffffffff
0000000000005b4b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005b50         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x9638), Begin of unwind block (FDE at 0x964c), CODE XREF=close_stdout+101
0000000000005b55         mov        rsi, 0xffffffffffffffff
0000000000005b5c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005b61         align      16                                          ; End of unwind block (FDE at 0x964c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005b70         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x9660)
0000000000005b75         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005b7a         align      128                                         ; End of unwind block (FDE at 0x9660)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005b80         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x9674), CODE XREF=main+3541, main+3636, main+3742, main+3793
0000000000005b84         mov        rax, rdx
0000000000005b87         mov        rdx, qword [fs:0x28]
0000000000005b90         mov        qword [rsp+0x48+var_10], rdx
0000000000005b95         xor        edx, edx
0000000000005b97         cmp        esi, 0xa
0000000000005b9a         je         loc_5c04

0000000000005b9c         mov        dword [rsp+0x48+var_48], esi
0000000000005b9f         mov        rcx, rsp
0000000000005ba2         mov        rdx, 0xffffffffffffffff
0000000000005ba9         mov        rsi, rax
0000000000005bac         mov        qword [rsp+0x48+var_44], 0x0
0000000000005bb5         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000005bbe         mov        qword [rsp+0x48+var_34], 0x0
0000000000005bc7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005bd0         mov        qword [rsp+0x48+var_24], 0x0
0000000000005bd9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005be2         mov        dword [rsp+0x48+var_14], 0x0
0000000000005bea         call       quotearg_n_options                          ; quotearg_n_options
0000000000005bef         mov        rcx, qword [rsp+0x48+var_10]
0000000000005bf4         xor        rcx, qword [fs:0x28]
0000000000005bfd         jne        loc_5c09

0000000000005bff         add        rsp, 0x48
0000000000005c03         ret
                        ; endp

                     loc_5c04:
0000000000005c04         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_5c09:
0000000000005c09         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000005c0e         align      16                                          ; End of unwind block (FDE at 0x9674)

                     quotearg_n_custom_mem:
0000000000005c10         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x9690), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000005c14         mov        r9, rcx
0000000000005c17         mov        rcx, qword [qword_20b330]                   ; qword_20b330
0000000000005c1e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005c26         mov        rax, qword [fs:0x28]
0000000000005c2f         mov        qword [rsp+0x48+var_10], rax
0000000000005c34         xor        eax, eax
0000000000005c36         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005c3a         test       rsi, rsi
0000000000005c3d         mov        qword [rsp+0x48+var_18], rcx
0000000000005c42         mov        dword [rsp+0x48+var_48], 0xa
0000000000005c49         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20b310
0000000000005c51         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005c56         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20b320
0000000000005c5e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005c63         je         loc_5c97

0000000000005c65         test       rdx, rdx
0000000000005c68         je         loc_5c97

0000000000005c6a         mov        qword [rsp+0x48+var_20], rsi
0000000000005c6f         mov        qword [rsp+0x48+var_18], rdx
0000000000005c74         mov        rcx, rsp
0000000000005c77         mov        rdx, r8
0000000000005c7a         mov        rsi, r9
0000000000005c7d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005c82         mov        rdi, qword [rsp+0x48+var_10]
0000000000005c87         xor        rdi, qword [fs:0x28]
0000000000005c90         jne        loc_5c9c

0000000000005c92         add        rsp, 0x48
0000000000005c96         ret
                        ; endp

                     loc_5c97:
0000000000005c97         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_5c9c:
0000000000005c9c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005ca1         align      16                                          ; End of unwind block (FDE at 0x9690)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000005cb0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x96ac)
0000000000005cb7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
0000000000005cbc         align      64                                          ; End of unwind block (FDE at 0x96ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000005cc0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x96c0)
0000000000005cc3         mov        r8, 0xffffffffffffffff
0000000000005cca         mov        rdx, rsi
0000000000005ccd         mov        rsi, rdi
0000000000005cd0         xor        edi, edi
0000000000005cd2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005cd7         align      32                                          ; End of unwind block (FDE at 0x96c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000005ce0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x96d4)
0000000000005ce3         mov        rcx, rdx
0000000000005ce6         mov        rdx, rsi
0000000000005ce9         mov        rsi, rdi
0000000000005cec         xor        edi, edi
0000000000005cee         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005cf3         align      256                                         ; End of unwind block (FDE at 0x96d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000005d00         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x96e8), quote_quoting_options
0000000000005d07         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005d0c         align      16                                          ; End of unwind block (FDE at 0x96e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000005d10         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x96fc), quote_quoting_options
0000000000005d17         mov        rdx, rsi
0000000000005d1a         mov        rsi, rdi
0000000000005d1d         xor        edi, edi
0000000000005d1f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005d24         align      16                                          ; End of unwind block (FDE at 0x96fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005d30         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x9710), quote_quoting_options
0000000000005d37         mov        rdx, 0xffffffffffffffff
0000000000005d3e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005d43         align      16                                          ; End of unwind block (FDE at 0x9710)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005d50         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x9724), quote_quoting_options, CODE XREF=main+3408, main+3681, main+3913, string_to_join_field+108, add_field_list+168, add_field_list+218, add_field_list+268
0000000000005d57         mov        rsi, rdi
0000000000005d5a         mov        rdx, 0xffffffffffffffff
0000000000005d61         xor        edi, edi
0000000000005d63         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005d68         align      16                                          ; End of unwind block (FDE at 0x9724)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
0000000000005d70         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0x973c), CODE XREF=fopen_safer+50
0000000000005d75         xor        esi, esi
0000000000005d77         xor        eax, eax
0000000000005d79         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
0000000000005d7e         align      128                                         ; End of unwind block (FDE at 0x973c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000005d80         push       r15                                         ; Begin of unwind block (FDE at 0x9754), CODE XREF=version_etc_va+75, version_etc+161
0000000000005d82         push       r14
0000000000005d84         push       r13
0000000000005d86         push       r12
0000000000005d88         mov        r12, r9
0000000000005d8b         push       rbp
0000000000005d8c         push       rbx
0000000000005d8d         mov        rbp, rdi
0000000000005d90         mov        rbx, r8
0000000000005d93         sub        rsp, 0x28
0000000000005d97         test       rsi, rsi
0000000000005d9a         je         loc_5eb8

0000000000005da0         mov        r8, rdx
0000000000005da3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000005daa         mov        r9, rcx
0000000000005dad         xor        eax, eax
0000000000005daf         mov        rcx, rsi
0000000000005db2         mov        esi, 0x1
0000000000005db7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_5dbc:
0000000000005dbc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x849b, CODE XREF=version_etc_arn+337
0000000000005dc3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005dc5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005dca         call       j_dcgettext                                 ; dcgettext
0000000000005dcf         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000005dd6         mov        rcx, rax
0000000000005dd9         mov        r8d, 0x7e3
0000000000005ddf         mov        esi, 0x1
0000000000005de4         mov        rdi, rbp
0000000000005de7         xor        eax, eax
0000000000005de9         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005dee         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000005df5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005df7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005dfc         call       j_dcgettext                                 ; dcgettext
0000000000005e01         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005e04         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005e07         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000005e0c         cmp        r12, 0x9
0000000000005e10         ja         loc_6150

0000000000005e16         lea        rdx, qword [switch_table_8784]              ; switch_table_8784
0000000000005e1d         movsxd     rax, dword [rdx+r12*4]
0000000000005e21         add        rax, rdx
0000000000005e24         jmp        rax                                         ; switch statement using table at 0x8784, with 10 cases, 0x5e30,0x5ea6,0x5ee0,0x5f38,0x5f78,0x5fc0,0x6010,0x6068,0x6098,0x6100
0000000000005e26         align      16

                     loc_5e30:
0000000000005e30         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000005e34         mov        rax, qword [rbx+0x10]
0000000000005e38         lea        rsi, qword [aWrittenBySSSns_8698]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000005e3f         mov        r8, qword [rbx+8]
0000000000005e43         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005e48         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005e4a         mov        r13, qword [rbx+0x30]
0000000000005e4e         mov        r12, qword [rbx+0x28]
0000000000005e52         mov        qword [rsp+0x58+var_48], r9
0000000000005e57         mov        r15, qword [rbx+0x20]
0000000000005e5b         mov        r14, qword [rbx+0x18]
0000000000005e5f         mov        qword [rsp+0x58+var_58], rax
0000000000005e63         mov        qword [rsp+0x58+var_50], r8
0000000000005e68         mov        rbx, qword [rbx]
0000000000005e6b         call       j_dcgettext                                 ; dcgettext
0000000000005e70         sub        rsp, 0x8

                     loc_5e74:
0000000000005e74         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000005e79         mov        rdx, rax
0000000000005e7c         mov        rcx, rbx
0000000000005e7f         mov        esi, 0x1
0000000000005e84         mov        rdi, rbp
0000000000005e87         xor        eax, eax
0000000000005e89         push       r9
0000000000005e8b         push       r13
0000000000005e8d         push       r12
0000000000005e8f         push       r15
0000000000005e91         push       r14
0000000000005e93         mov        r9, qword [rsp+0x88+var_58]
0000000000005e98         mov        r8, qword [rsp+0x88+var_50]
0000000000005e9d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005ea2         add        rsp, 0x30

                     loc_5ea6:
0000000000005ea6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000005eaa         pop        rbx
0000000000005eab         pop        rbp
0000000000005eac         pop        r12
0000000000005eae         pop        r13
0000000000005eb0         pop        r14
0000000000005eb2         pop        r15
0000000000005eb4         ret
                        ; endp
0000000000005eb5         align      8

                     loc_5eb8:
0000000000005eb8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000005ebb         mov        rcx, rdx
0000000000005ebe         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000005ec5         mov        esi, 0x1
0000000000005eca         xor        eax, eax
0000000000005ecc         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005ed1         jmp        loc_5dbc
0000000000005ed6         align      32

                     loc_5ee0:
0000000000005ee0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000005ee4         mov        r9, qword [rbx+0x38]
0000000000005ee8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000005eef         mov        rax, qword [rbx+0x10]
0000000000005ef3         mov        r8, qword [rbx+8]
0000000000005ef7         mov        edx, 0x5
0000000000005efc         mov        r13, qword [rbx+0x30]
0000000000005f00         mov        r12, qword [rbx+0x28]
0000000000005f04         mov        r15, qword [rbx+0x20]
0000000000005f08         mov        r14, qword [rbx+0x18]
0000000000005f0c         mov        rbx, qword [rbx]
0000000000005f0f         mov        qword [rsp+0x58+var_40], r10
0000000000005f14         mov        qword [rsp+0x58+var_48], r9
0000000000005f19         mov        qword [rsp+0x58+var_58], rax
0000000000005f1d         mov        qword [rsp+0x58+var_50], r8

                     loc_5f22:
0000000000005f22         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000005f24         call       j_dcgettext                                 ; dcgettext
0000000000005f29         mov        r10, qword [rsp+0x58+var_40]
0000000000005f2e         push       r10
0000000000005f30         jmp        loc_5e74
0000000000005f35         align      8

                     loc_5f38:
0000000000005f38         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000005f3b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000005f42         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005f47         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005f49         call       j_dcgettext                                 ; dcgettext
0000000000005f4e         add        rsp, 0x28
0000000000005f52         mov        rcx, rbx
0000000000005f55         mov        rdi, rbp
0000000000005f58         pop        rbx
0000000000005f59         pop        rbp
0000000000005f5a         pop        r12
0000000000005f5c         pop        r13
0000000000005f5e         pop        r14
0000000000005f60         pop        r15
0000000000005f62         mov        rdx, rax
0000000000005f65         mov        esi, 0x1
0000000000005f6a         xor        eax, eax
0000000000005f6c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005f71         align      8

                     loc_5f78:
0000000000005f78         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000005f7c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000005f83         mov        rbx, qword [rbx]
0000000000005f86         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005f8b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005f8d         call       j_dcgettext                                 ; dcgettext
0000000000005f92         add        rsp, 0x28
0000000000005f96         mov        r8, r12
0000000000005f99         mov        rcx, rbx
0000000000005f9c         mov        rdi, rbp
0000000000005f9f         mov        rdx, rax
0000000000005fa2         mov        esi, 0x1
0000000000005fa7         pop        rbx
0000000000005fa8         pop        rbp
0000000000005fa9         pop        r12
0000000000005fab         pop        r13
0000000000005fad         pop        r14
0000000000005faf         pop        r15
0000000000005fb1         xor        eax, eax
0000000000005fb3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005fb8         align      64

                     loc_5fc0:
0000000000005fc0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000005fc4         mov        r12, qword [rbx+8]
0000000000005fc8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000005fcf         mov        rbx, qword [rbx]
0000000000005fd2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005fd7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005fd9         call       j_dcgettext                                 ; dcgettext
0000000000005fde         add        rsp, 0x28
0000000000005fe2         mov        r9, r13
0000000000005fe5         mov        r8, r12
0000000000005fe8         mov        rcx, rbx
0000000000005feb         mov        rdi, rbp
0000000000005fee         mov        rdx, rax
0000000000005ff1         pop        rbx
0000000000005ff2         pop        rbp
0000000000005ff3         pop        r12
0000000000005ff5         pop        r13
0000000000005ff7         pop        r14
0000000000005ff9         pop        r15
0000000000005ffb         mov        esi, 0x1
0000000000006000         xor        eax, eax
0000000000006002         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006007         align      16

                     loc_6010:
0000000000006010         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000006017         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000601c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000601e         mov        r14, qword [rbx+0x18]
0000000000006022         mov        r13, qword [rbx+0x10]
0000000000006026         mov        r12, qword [rbx+8]
000000000000602a         mov        rbx, qword [rbx]
000000000000602d         call       j_dcgettext                                 ; dcgettext
0000000000006032         sub        rsp, 0x8

                     loc_6036:
0000000000006036         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000006038         mov        rdx, rax
000000000000603b         mov        r9, r13
000000000000603e         mov        r8, r12
0000000000006041         mov        rcx, rbx
0000000000006044         mov        rdi, rbp
0000000000006047         mov        esi, 0x1
000000000000604c         xor        eax, eax
000000000000604e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006053         pop        rax
0000000000006054         pop        rdx
0000000000006055         add        rsp, 0x28
0000000000006059         pop        rbx
000000000000605a         pop        rbp
000000000000605b         pop        r12
000000000000605d         pop        r13
000000000000605f         pop        r14
0000000000006061         pop        r15
0000000000006063         ret
                        ; endp
0000000000006064         align      8

                     loc_6068:
0000000000006068         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000606c         lea        rsi, qword [aWrittenBySSSns_8618]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000006073         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006078         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000607a         mov        r14, qword [rbx+0x18]
000000000000607e         mov        r13, qword [rbx+0x10]
0000000000006082         mov        r12, qword [rbx+8]
0000000000006086         mov        rbx, qword [rbx]
0000000000006089         call       j_dcgettext                                 ; dcgettext
000000000000608e         push       r15
0000000000006090         jmp        loc_6036
0000000000006092         align      8

                     loc_6098:
0000000000006098         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000609c         mov        r12, qword [rbx+0x28]
00000000000060a0         lea        rsi, qword [aWrittenBySSSns_8640]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000060a7         mov        r15, qword [rbx+0x20]
00000000000060ab         mov        r14, qword [rbx+0x18]
00000000000060af         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000060b4         mov        r13, qword [rbx+0x10]
00000000000060b8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000060ba         mov        rbx, qword [rbx]
00000000000060bd         mov        qword [rsp+0x58+var_58], r8
00000000000060c1         call       j_dcgettext                                 ; dcgettext
00000000000060c6         sub        rsp, 0x8
00000000000060ca         mov        r9, r13
00000000000060cd         push       r12
00000000000060cf         push       r15
00000000000060d1         push       r14

                     loc_60d3:
00000000000060d3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
00000000000060d8         mov        rcx, rbx
00000000000060db         mov        rdx, rax
00000000000060de         mov        rdi, rbp
00000000000060e1         mov        esi, 0x1
00000000000060e6         xor        eax, eax
00000000000060e8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000060ed         add        rsp, 0x20
00000000000060f1         add        rsp, 0x28
00000000000060f5         pop        rbx
00000000000060f6         pop        rbp
00000000000060f7         pop        r12
00000000000060f9         pop        r13
00000000000060fb         pop        r14
00000000000060fd         pop        r15
00000000000060ff         ret
                        ; endp

                     loc_6100:
0000000000006100         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000006104         mov        r13, qword [rbx+0x30]
0000000000006108         lea        rsi, qword [aWrittenBySSSns_8668]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000610f         mov        r12, qword [rbx+0x28]
0000000000006113         mov        r15, qword [rbx+0x20]
0000000000006117         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000611c         mov        r14, qword [rbx+0x18]
0000000000006120         mov        r8, qword [rbx+8]
0000000000006124         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006126         mov        qword [rsp+0x58+var_50], r9
000000000000612b         mov        rbx, qword [rbx]
000000000000612e         mov        qword [rsp+0x58+var_58], r8
0000000000006132         call       j_dcgettext                                 ; dcgettext
0000000000006137         push       r13
0000000000006139         push       r12
000000000000613b         push       r15
000000000000613d         push       r14
000000000000613f         mov        r9, qword [rsp+0x78+var_50]
0000000000006144         jmp        loc_60d3
0000000000006146         align      16

                     loc_6150:
0000000000006150         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000006154         mov        r9, qword [rbx+0x38]
0000000000006158         mov        edx, 0x5
000000000000615d         mov        rax, qword [rbx+0x10]
0000000000006161         mov        r8, qword [rbx+8]
0000000000006165         lea        rsi, qword [aWrittenBySSSns_8700]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000616c         mov        r13, qword [rbx+0x30]
0000000000006170         mov        r12, qword [rbx+0x28]
0000000000006174         mov        r15, qword [rbx+0x20]
0000000000006178         mov        r14, qword [rbx+0x18]
000000000000617c         mov        qword [rsp+0x58+var_40], r10
0000000000006181         mov        qword [rsp+0x58+var_48], r9
0000000000006186         mov        qword [rsp+0x58+var_58], rax
000000000000618a         mov        qword [rsp+0x58+var_50], r8
000000000000618f         mov        rbx, qword [rbx]
0000000000006192         jmp        loc_5f22
0000000000006197         align      32                                          ; End of unwind block (FDE at 0x9754)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
00000000000061a0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x9868)
00000000000061a3         cmp        qword [r8], 0x0
00000000000061a7         je         j_version_etc_arn                           ; version_etc_arn

00000000000061a9         nop        dword [rax]

                     loc_61b0:
00000000000061b0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
00000000000061b4         cmp        qword [r8+r9*8], 0x0
00000000000061b9         jne        loc_61b0

                     j_version_etc_arn:        // version_etc_arn
00000000000061bb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
00000000000061c0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x9868), Begin of unwind block (FDE at 0x987c)
00000000000061c4         mov        r10, r8
00000000000061c7         xor        r9d, r9d
00000000000061ca         mov        rax, qword [fs:0x28]
00000000000061d3         mov        qword [rsp+0x68+var_10], rax
00000000000061d8         xor        eax, eax
00000000000061da         mov        r8, rsp
00000000000061dd         nop        dword [rax]

                     loc_61e0:
00000000000061e0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
00000000000061e3         cmp        eax, 0x2f
00000000000061e6         ja         loc_622a

00000000000061e8         mov        r11d, eax
00000000000061eb         add        r11, qword [r10+0x10]
00000000000061ef         add        eax, 0x8
00000000000061f2         mov        dword [r10], eax

                     loc_61f5:
00000000000061f5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
00000000000061f8         test       rax, rax
00000000000061fb         mov        qword [r8+r9*8], rax
00000000000061ff         je         loc_620b

0000000000006201         add        r9, 0x1
0000000000006205         cmp        r9, 0xa
0000000000006209         jne        loc_61e0

                     loc_620b:
000000000000620b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000006210         mov        rax, qword [rsp+0x68+var_10]
0000000000006215         xor        rax, qword [fs:0x28]
000000000000621e         jne        loc_6225

0000000000006220         add        rsp, 0x68
0000000000006224         ret
                        ; endp

                     loc_6225:
0000000000006225         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_622a:
000000000000622a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000622e         lea        rax, qword [r11+8]
0000000000006232         mov        qword [r10+8], rax
0000000000006236         jmp        loc_61f5
0000000000006238         align      64                                          ; End of unwind block (FDE at 0x987c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000006240         push       rbp                                         ; Begin of unwind block (FDE at 0x9898), CODE XREF=main+647
0000000000006241         push       rbx
0000000000006242         mov        r10d, 0x20
0000000000006248         xor        r11d, r11d
000000000000624b         sub        rsp, 0xb8
0000000000006252         mov        rax, qword [fs:0x28]
000000000000625b         mov        qword [rsp+0xc8+var_50], rax
0000000000006260         xor        eax, eax
0000000000006262         lea        rax, qword [rsp+0xc8+arg_0]
000000000000626a         mov        qword [rsp+0xc8+var_28], r8
0000000000006272         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000627a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000627f         mov        qword [rsp+0xc8+var_20], r9
0000000000006287         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000628f         mov        qword [rsp+0xc8+var_B8], rax
0000000000006294         lea        rax, qword [rsp+0xc8+var_48]
000000000000629c         xor        r9d, r9d
000000000000629f         mov        qword [rsp+0xc8+var_B0], rax
00000000000062a4         mov        rbp, rax
00000000000062a7         nop        word [rax+rax]

                     loc_62b0:
00000000000062b0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
00000000000062b4         ja         loc_630c

00000000000062b6         mov        eax, r10d
00000000000062b9         mov        r11d, 0x1
00000000000062bf         add        r10d, 0x8
00000000000062c3         add        rax, rbp

                     loc_62c6:
00000000000062c6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
00000000000062c9         test       rax, rax
00000000000062cc         mov        qword [r8+r9*8], rax
00000000000062d0         je         loc_62dc

00000000000062d2         add        r9, 0x1
00000000000062d6         cmp        r9, 0xa
00000000000062da         jne        loc_62b0

                     loc_62dc:
00000000000062dc         test       r11b, r11b                                  ; CODE XREF=version_etc+144
00000000000062df         jne        loc_6305

                     loc_62e1:
00000000000062e1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
00000000000062e6         mov        rax, qword [rsp+0xc8+var_50]
00000000000062eb         xor        rax, qword [fs:0x28]
00000000000062f4         jne        loc_6300

00000000000062f6         add        rsp, 0xb8
00000000000062fd         pop        rbx
00000000000062fe         pop        rbp
00000000000062ff         ret
                        ; endp

                     loc_6300:
0000000000006300         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_6305:
0000000000006305         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000630a         jmp        loc_62e1

                     loc_630c:
000000000000630c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000630f         add        rbx, 0x8
0000000000006313         jmp        loc_62c6
0000000000006315         align      32                                          ; End of unwind block (FDE at 0x9898)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000006320         push       rbx                                         ; Begin of unwind block (FDE at 0x98c4)
0000000000006321         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000006328         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000632d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000632f         call       j_dcgettext                                 ; dcgettext
0000000000006334         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000633b         mov        rsi, rax
000000000000633e         mov        edi, 0x1
0000000000006343         xor        eax, eax
0000000000006345         call       j___printf_chk                              ; __printf_chk
000000000000634a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000006351         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006356         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006358         call       j_dcgettext                                 ; dcgettext
000000000000635d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000006364         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7e17
000000000000636b         mov        rsi, rax
000000000000636e         mov        edi, 0x1
0000000000006373         xor        eax, eax
0000000000006375         call       j___printf_chk                              ; __printf_chk
000000000000637a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000006381         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000006388         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000638a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000638f         call       j_dcgettext                                 ; dcgettext
0000000000006394         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000006397         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000639a         pop        rbx
000000000000639b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000063a0         push       rbx                                         ; End of unwind block (FDE at 0x98c4), Begin of unwind block (FDE at 0x98e4), CODE XREF=add_field_list+60, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
00000000000063a1         mov        rbx, rdi
00000000000063a4         call       j_malloc                                    ; malloc
00000000000063a9         test       rax, rax
00000000000063ac         jne        loc_63b3

00000000000063ae         test       rbx, rbx
00000000000063b1         jne        loc_63b5

                     loc_63b3:
00000000000063b3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000063b4         ret
                        ; endp

                     loc_63b5:
00000000000063b5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_63ba:
00000000000063ba         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x98e4)
                     xnmalloc:
00000000000063c0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9900)
00000000000063c3         mul        rsi
00000000000063c6         mov        rdi, rax
00000000000063c9         seto       al
00000000000063cc         test       rdi, rdi
00000000000063cf         js         loc_63db

00000000000063d1         movzx      eax, al
00000000000063d4         test       rax, rax
00000000000063d7         jne        loc_63db

00000000000063d9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_63db:
00000000000063db         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
00000000000063df         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_63e4:
00000000000063e4         nop                                                    ; End of unwind block (FDE at 0x9900)
00000000000063e6         nop        word [cs:rax+rax]
                     xcharalloc:
00000000000063f0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x9914)
                        ; endp
00000000000063f2         align      1024                                        ; End of unwind block (FDE at 0x9914)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000006400         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x9928), CODE XREF=extract_field+103, getseq+103, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000006403         push       rbx
0000000000006404         mov        rbx, rsi
0000000000006407         jne        loc_640e

0000000000006409         test       rdi, rdi
000000000000640c         jne        loc_6428

                     loc_640e:
000000000000640e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000006411         call       j_realloc                                   ; realloc
0000000000006416         test       rax, rax
0000000000006419         jne        loc_6420

000000000000641b         test       rbx, rbx
000000000000641e         jne        loc_6431

                     loc_6420:
0000000000006420         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000006421         ret
                        ; endp
0000000000006422         align      8

                     loc_6428:
0000000000006428         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000642d         xor        eax, eax
000000000000642f         pop        rbx
0000000000006430         ret
                        ; endp

                     loc_6431:
0000000000006431         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6436:
0000000000006436         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x9928)
                     xnrealloc:
0000000000006440         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x994c)
0000000000006443         mul        rdx
0000000000006446         mov        rsi, rax
0000000000006449         seto       al
000000000000644c         test       rsi, rsi
000000000000644f         js         loc_645b

0000000000006451         movzx      eax, al
0000000000006454         test       rax, rax
0000000000006457         jne        loc_645b

0000000000006459         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_645b:
000000000000645b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000645f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6464:
0000000000006464         nop                                                    ; End of unwind block (FDE at 0x994c)
0000000000006466         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000006470         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9960)
0000000000006473         mov        r9, rdx
0000000000006476         mov        rcx, qword [rsi]
0000000000006479         je         loc_64b0

000000000000647b         xor        edx, edx
000000000000647d         movabs     rax, 0x5555555555555554
0000000000006487         div        r9
000000000000648a         cmp        rax, rcx
000000000000648d         jbe        loc_64cb

000000000000648f         mov        rax, rcx
0000000000006492         shr        rax, 0x1
0000000000006495         lea        rcx, qword [rax+rcx+1]

                     loc_649a:
000000000000649a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000649d         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000064a1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000064a4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000064a9         align      16

                     loc_64b0:
00000000000064b0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000064b3         je         loc_64d8

                     loc_64b5:
00000000000064b5         mov        rax, rcx                                    ; CODE XREF=sub_64d4+28
00000000000064b8         mul        r9
00000000000064bb         seto       dl
00000000000064be         test       rax, rax
00000000000064c1         movzx      edx, dl
00000000000064c4         js         loc_64cb

00000000000064c6         test       rdx, rdx
00000000000064c9         je         loc_649a

                     loc_64cb:
00000000000064cb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
00000000000064cf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_64d4:
00000000000064d4         nop        dword [rax]
                        ; endp

                     loc_64d8:
00000000000064d8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
00000000000064da         mov        eax, 0x80
00000000000064df         xor        r8d, r8d
00000000000064e2         div        r9
00000000000064e5         test       rax, rax
00000000000064e8         sete       r8b
00000000000064ec         lea        rcx, qword [r8+rax]
00000000000064f0         jmp        loc_64b5
00000000000064f2         align      256                                         ; End of unwind block (FDE at 0x9960)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000006500         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9978), CODE XREF=readlinebuffer_delim+108
0000000000006503         mov        rax, qword [rsi]
0000000000006506         je         loc_6530

0000000000006508         movabs     rdx, 0x5555555555555553
0000000000006512         cmp        rax, rdx
0000000000006515         ja         loc_6541

0000000000006517         mov        rdx, rax
000000000000651a         shr        rdx, 0x1
000000000000651d         lea        rax, qword [rdx+rax+1]

                     loc_6522:
0000000000006522         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000006525         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000006528         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000652d         align      16

                     loc_6530:
0000000000006530         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000006533         mov        edx, 0x80
0000000000006538         cmove      rax, rdx
000000000000653c         test       rax, rax
000000000000653f         jns        loc_6522

                     loc_6541:
0000000000006541         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000006545         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_654a:
000000000000654a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x9978)
                     xzalloc:
0000000000006550         push       rbx                                         ; Begin of unwind block (FDE at 0x9990)
0000000000006551         mov        rbx, rdi
0000000000006554         call       xmalloc                                     ; xmalloc
0000000000006559         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000655c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000655e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000006561         pop        rbx
0000000000006562         jmp        j_memset                                    ; memset
                        ; endp
0000000000006567         align      16                                          ; End of unwind block (FDE at 0x9990)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000006570         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x99ac), CODE XREF=get_line+824
0000000000006573         sub        rsp, 0x8
0000000000006577         mul        rsi
000000000000657a         seto       dl
000000000000657d         test       rax, rax
0000000000006580         js         loc_6599

0000000000006582         movzx      edx, dl
0000000000006585         test       rdx, rdx
0000000000006588         jne        loc_6599

000000000000658a         call       j_calloc                                    ; calloc
000000000000658f         test       rax, rax
0000000000006592         je         loc_6599

0000000000006594         add        rsp, 0x8
0000000000006598         ret
                        ; endp

                     loc_6599:
0000000000006599         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_659e:
000000000000659e         nop                                                    ; End of unwind block (FDE at 0x99ac)
                        ; endp

                     xmemdup:
00000000000065a0         push       rbp                                         ; Begin of unwind block (FDE at 0x99c8), CODE XREF=clone_quoting_options+40, xstrdup+17
00000000000065a1         push       rbx
00000000000065a2         mov        rbp, rdi
00000000000065a5         mov        rdi, rsi
00000000000065a8         mov        rbx, rsi
00000000000065ab         sub        rsp, 0x8
00000000000065af         call       xmalloc                                     ; xmalloc
00000000000065b4         add        rsp, 0x8
00000000000065b8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000065bb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000065be         pop        rbx
00000000000065bf         pop        rbp
00000000000065c0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000065c3         jmp        j_memcpy                                    ; memcpy
                        ; endp
00000000000065c8         align      16                                          ; End of unwind block (FDE at 0x99c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
00000000000065d0         push       rbx                                         ; Begin of unwind block (FDE at 0x99f0)
00000000000065d1         mov        rbx, rdi
00000000000065d4         call       j_strlen                                    ; strlen
00000000000065d9         mov        rdi, rbx
00000000000065dc         lea        rsi, qword [rax+1]
00000000000065e0         pop        rbx
00000000000065e1         jmp        xmemdup                                     ; xmemdup
00000000000065e3         align      16                                          ; End of unwind block (FDE at 0x99f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
00000000000065f0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x9a0c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=extract_field+165, getseq+205, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
00000000000065f7         sub        rsp, 0x8
00000000000065fb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006600         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006602         call       j_dcgettext                                 ; dcgettext
0000000000006607         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000660d         lea        rdx, qword [aInvalidFieldNu+22]             ; argument "__format" for method j_error, 0x7d52
0000000000006614         mov        rcx, rax
0000000000006617         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006619         xor        eax, eax
000000000000661b         call       j_error                                     ; error
0000000000006620         call       j_abort                                     ; abort
                        ; endp
0000000000006625         align      16                                          ; End of unwind block (FDE at 0x9a0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     collate_error:
0000000000006630         push       r14                                         ; Begin of unwind block (FDE at 0x9a24), CODE XREF=xmemcoll+51, xmemcoll0+53
0000000000006632         push       r13
0000000000006634         mov        r14d, edi
0000000000006637         push       r12
0000000000006639         push       rbp
000000000000663a         mov        r12, rdx
000000000000663d         push       rbx
000000000000663e         mov        rbx, rsi
0000000000006641         lea        rsi, qword [aStringComparis]                ; argument "msgid" for method j_dcgettext, "string comparison failed"
0000000000006648         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000664d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000664f         mov        r13, r8
0000000000006652         mov        rbp, rcx
0000000000006655         call       j_dcgettext                                 ; dcgettext
000000000000665a         mov        esi, r14d                                   ; argument "__errnum" for method j_error
000000000000665d         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006660         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006662         xor        eax, eax
0000000000006664         call       j_error                                     ; error
0000000000006669         lea        rsi, qword [aSetLcallcToWor]                ; argument "msgid" for method j_dcgettext, "Set LC_ALL='C' to work around the problem."
0000000000006670         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006675         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006677         call       j_dcgettext                                 ; dcgettext
000000000000667c         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000667e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006681         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006683         xor        eax, eax
0000000000006685         call       j_error                                     ; error
000000000000668a         mov        rcx, r13
000000000000668d         mov        rdx, rbp
0000000000006690         mov        esi, 0x8
0000000000006695         mov        edi, 0x1
000000000000669a         call       quotearg_n_style_mem                        ; quotearg_n_style_mem
000000000000669f         mov        rcx, r12
00000000000066a2         mov        rdx, rbx
00000000000066a5         mov        esi, 0x8
00000000000066aa         xor        edi, edi
00000000000066ac         mov        rbp, rax
00000000000066af         call       quotearg_n_style_mem                        ; quotearg_n_style_mem
00000000000066b4         lea        rsi, qword [aTheStringsComp]                ; argument "msgid" for method j_dcgettext, "The strings compared were %s and %s."
00000000000066bb         mov        rbx, rax
00000000000066be         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000066c3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000066c5         call       j_dcgettext                                 ; dcgettext
00000000000066ca         mov        r8, rbp
00000000000066cd         mov        rcx, rbx
00000000000066d0         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
00000000000066d6         pop        rbx
00000000000066d7         pop        rbp
00000000000066d8         pop        r12
00000000000066da         pop        r13
00000000000066dc         pop        r14
00000000000066de         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000066e1         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000066e3         xor        eax, eax
00000000000066e5         jmp        j_error                                     ; error
                        ; endp
00000000000066ea         align      16                                          ; End of unwind block (FDE at 0x9a24)

                     xmemcoll:
00000000000066f0         push       r14                                         ; Begin of unwind block (FDE at 0x9a60), CODE XREF=keycmp.isra.4+247
00000000000066f2         push       r13
00000000000066f4         mov        r13, rcx
00000000000066f7         push       r12
00000000000066f9         push       rbp
00000000000066fa         mov        r12, rdx
00000000000066fd         push       rbx
00000000000066fe         mov        rbp, rsi
0000000000006701         mov        rbx, rdi
0000000000006704         call       memcoll                                     ; memcoll
0000000000006709         mov        r14d, eax
000000000000670c         call       j___errno_location                          ; __errno_location
0000000000006711         mov        edi, dword [rax]
0000000000006713         test       edi, edi
0000000000006715         je         loc_6728

0000000000006717         mov        r8, r13
000000000000671a         mov        rcx, r12
000000000000671d         mov        rdx, rbp
0000000000006720         mov        rsi, rbx
0000000000006723         call       collate_error                               ; collate_error

                     loc_6728:
0000000000006728         pop        rbx                                         ; CODE XREF=xmemcoll+37
0000000000006729         mov        eax, r14d
000000000000672c         pop        rbp
000000000000672d         pop        r12
000000000000672f         pop        r13
0000000000006731         pop        r14
0000000000006733         ret
                        ; endp
0000000000006734         align      64                                          ; End of unwind block (FDE at 0x9a60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemcoll0:
0000000000006740         push       r14                                         ; Begin of unwind block (FDE at 0x9a9c)
0000000000006742         push       r13
0000000000006744         mov        r14, rcx
0000000000006747         push       r12
0000000000006749         push       rbp
000000000000674a         mov        r12, rdx
000000000000674d         push       rbx
000000000000674e         mov        rbp, rdi
0000000000006751         mov        rbx, rsi
0000000000006754         call       memcoll0                                    ; memcoll0
0000000000006759         mov        r13d, eax
000000000000675c         call       j___errno_location                          ; __errno_location
0000000000006761         mov        edi, dword [rax]
0000000000006763         test       edi, edi
0000000000006765         je         loc_677a

0000000000006767         lea        rdx, qword [rbx-1]
000000000000676b         lea        r8, qword [r14-1]
000000000000676f         mov        rcx, r12
0000000000006772         mov        rsi, rbp
0000000000006775         call       collate_error                               ; collate_error

                     loc_677a:
000000000000677a         pop        rbx                                         ; CODE XREF=xmemcoll0+37
000000000000677b         mov        eax, r13d
000000000000677e         pop        rbp
000000000000677f         pop        r12
0000000000006781         pop        r13
0000000000006783         pop        r14
0000000000006785         ret
                        ; endp
0000000000006786         align      16                                          ; End of unwind block (FDE at 0x9a9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoul:
0000000000006790         push       r15                                         ; Begin of unwind block (FDE at 0x9adc), CODE XREF=main+695, string_to_join_field+41
0000000000006792         push       r14
0000000000006794         push       r13
0000000000006796         push       r12
0000000000006798         push       rbp
0000000000006799         push       rbx
000000000000679a         sub        rsp, 0x28
000000000000679e         mov        rax, qword [fs:0x28]
00000000000067a7         mov        qword [rsp+0x58+var_40], rax
00000000000067ac         xor        eax, eax
00000000000067ae         cmp        edx, 0x24
00000000000067b1         ja         loc_6b15

00000000000067b7         lea        rax, qword [rsp+0x58+var_48]
00000000000067bc         mov        r15, rsi
00000000000067bf         test       rsi, rsi
00000000000067c2         mov        rbp, rdi
00000000000067c5         mov        dword [rsp+0x58+var_50], edx
00000000000067c9         mov        r14, rcx
00000000000067cc         mov        r13, r8
00000000000067cf         cmove      r15, rax
00000000000067d3         call       j___errno_location                          ; __errno_location
00000000000067d8         mov        dword [rax], 0x0
00000000000067de         mov        r12, rax
00000000000067e1         movzx      ebx, byte [rbp]
00000000000067e5         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000067ea         mov        edx, dword [rsp+0x58+var_50]
00000000000067ee         mov        rsi, qword [rax]
00000000000067f1         mov        rax, rbp
00000000000067f4         jmp        loc_6807
00000000000067f6         align      2048

                     loc_6800:
0000000000006800         add        rax, 0x1                                    ; CODE XREF=xstrtoul+127
0000000000006804         movzx      ebx, byte [rax]

                     loc_6807:
0000000000006807         movzx      ecx, bl                                     ; CODE XREF=xstrtoul+100
000000000000680a         test       byte [rsi+rcx*2+1], 0x20
000000000000680f         jne        loc_6800

0000000000006811         cmp        bl, 0x2d
0000000000006814         je         loc_6868

0000000000006816         mov        rsi, r15                                    ; argument "__endptr" for method j_strtoul
0000000000006819         mov        rdi, rbp                                    ; argument "__nptr" for method j_strtoul
000000000000681c         call       j_strtoul                                   ; strtoul
0000000000006821         mov        rcx, qword [r15]
0000000000006824         mov        rbx, rax
0000000000006827         cmp        rcx, rbp
000000000000682a         je         loc_6858

000000000000682c         mov        eax, dword [r12]
0000000000006830         test       eax, eax
0000000000006832         je         loc_6898

0000000000006834         cmp        eax, 0x22
0000000000006837         mov        ebp, 0x1
000000000000683c         jne        loc_6868

                     loc_683e:
000000000000683e         test       r13, r13                                    ; CODE XREF=xstrtoul+266
0000000000006841         je         loc_684c

0000000000006843         movzx      r12d, byte [rcx]
0000000000006847         test       r12b, r12b
000000000000684a         jne        loc_68c7

                     loc_684c:
000000000000684c         mov        qword [r14], rbx                            ; CODE XREF=xstrtoul+177
000000000000684f         jmp        loc_686d
0000000000006851         align      8

                     loc_6858:
0000000000006858         test       r13, r13                                    ; CODE XREF=xstrtoul+154
000000000000685b         mov        qword [rsp+0x58+var_50], rcx
0000000000006860         jne        loc_68a0

0000000000006862         nop        word [rax+rax]

                     loc_6868:
0000000000006868         mov        ebp, 0x4                                    ; CODE XREF=xstrtoul+132, xstrtoul+172, xstrtoul+280, xstrtoul+309

                     loc_686d:
000000000000686d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoul+191, xstrtoul+535, xstrtoul+546
0000000000006872         xor        rdi, qword [fs:0x28]
000000000000687b         mov        eax, ebp
000000000000687d         jne        loc_6b10

0000000000006883         add        rsp, 0x28
0000000000006887         pop        rbx
0000000000006888         pop        rbp
0000000000006889         pop        r12
000000000000688b         pop        r13
000000000000688d         pop        r14
000000000000688f         pop        r15
0000000000006891         ret
                        ; endp
0000000000006892         align      8

                     loc_6898:
0000000000006898         xor        ebp, ebp                                    ; CODE XREF=xstrtoul+162
000000000000689a         jmp        loc_683e
000000000000689c         align      32

                     loc_68a0:
00000000000068a0         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoul+208
00000000000068a5         test       r12b, r12b
00000000000068a8         je         loc_6868

00000000000068aa         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
00000000000068ae         mov        rdi, r13                                    ; argument "__s" for method j_strchr
00000000000068b1         xor        ebp, ebp
00000000000068b3         call       j_strchr                                    ; strchr
00000000000068b8         test       rax, rax
00000000000068bb         mov        ebx, 0x1
00000000000068c0         mov        rcx, qword [rsp+0x58+var_50]
00000000000068c5         je         loc_6868

                     loc_68c7:
00000000000068c7         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoul+186
00000000000068cb         mov        rdi, r13                                    ; argument "__s" for method j_strchr
00000000000068ce         mov        qword [rsp+0x58+var_50], rcx
00000000000068d3         call       j_strchr                                    ; strchr
00000000000068d8         test       rax, rax
00000000000068db         mov        rcx, qword [rsp+0x58+var_50]
00000000000068e0         je         loc_69ac

00000000000068e6         lea        eax, dword [r12-0x45]
00000000000068eb         cmp        al, 0x2f
00000000000068ed         ja         loc_6940

00000000000068ef         movabs     rdx, 0x814400308945
00000000000068f9         bt         rdx, rax
00000000000068fd         jae        loc_6940

00000000000068ff         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000006904         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000006907         mov        qword [rsp+0x58+var_50], rcx
000000000000690c         call       j_strchr                                    ; strchr
0000000000006911         test       rax, rax
0000000000006914         mov        rcx, qword [rsp+0x58+var_50]
0000000000006919         je         loc_6940

000000000000691b         movzx      eax, byte [rcx+1]
000000000000691f         cmp        al, 0x44
0000000000006921         je         loc_692f

0000000000006923         cmp        al, 0x69
0000000000006925         je         loc_6af8

000000000000692b         cmp        al, 0x42
000000000000692d         jne        loc_6940

                     loc_692f:
000000000000692f         mov        edi, 0x2                                    ; CODE XREF=xstrtoul+401
0000000000006934         mov        esi, 0x3e8
0000000000006939         jmp        loc_694a
000000000000693b         align      64

                     loc_6940:
0000000000006940         mov        edi, 0x1                                    ; CODE XREF=xstrtoul+349, xstrtoul+365, xstrtoul+393, xstrtoul+413
0000000000006945         mov        esi, 0x400

                     loc_694a:
000000000000694a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoul+425, xstrtoul+891
000000000000694e         cmp        r12b, 0x35
0000000000006952         ja         loc_69ac

0000000000006954         lea        rdx, qword [switch_table_88c0]              ; switch_table_88c0
000000000000695b         movzx      r12d, r12b
000000000000695f         movsxd     rax, dword [rdx+r12*4]
0000000000006963         add        rax, rdx
0000000000006966         jmp        rax                                         ; switch statement using table at 0x88c0, with 54 cases, 0x6968,0x6990,0x69ac,0x69b7,0x69cd,0x69e4,0x6a0a,0x6a2f,0x6a4f,0x6a70,0x6a93,0x6ab6,0x6acc

                     loc_6968:
0000000000006968         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoul+470
000000000000696b         mul        rsi
000000000000696e         jo         loc_6b61

0000000000006974         xor        r8d, r8d

                     loc_6977:
0000000000006977         mul        rsi                                         ; CODE XREF=xstrtoul+846, xstrtoul+862, xstrtoul+987
000000000000697a         jo         loc_6b52

0000000000006980         mov        rbx, rax

                     loc_6983:
0000000000006983         or         ebp, r8d                                    ; CODE XREF=xstrtoul+972
0000000000006986         nop        word [cs:rax+rax]

                     loc_6990:
0000000000006990         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoul+470, xstrtoul+571, xstrtoul+594, xstrtoul+632, xstrtoul+712, xstrtoul+727, xstrtoul+823
0000000000006993         mov        eax, ebp
0000000000006995         add        rcx, rdi
0000000000006998         or         eax, 0x2
000000000000699b         mov        qword [r15], rcx
000000000000699e         cmp        byte [rcx], 0x0
00000000000069a1         mov        qword [r14], rbx
00000000000069a4         cmovne     ebp, eax
00000000000069a7         jmp        loc_686d

                     loc_69ac:
00000000000069ac         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoul+336, xstrtoul+450, xstrtoul+470
00000000000069af         or         ebp, 0x2
00000000000069b2         jmp        loc_686d

                     loc_69b7:
00000000000069b7         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoul+470
00000000000069bc         mov        rax, rdx
00000000000069bf         mul        rbx
00000000000069c2         jo         loc_6a5e

00000000000069c8         add        rbx, rbx
00000000000069cb         jmp        loc_6990

                     loc_69cd:
00000000000069cd         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoul+470
00000000000069d2         mov        rax, rdx
00000000000069d5         mul        rbx
00000000000069d8         jo         loc_6a5e

00000000000069de         shl        rbx, 0x9
00000000000069e2         jmp        loc_6990

                     loc_69e4:
00000000000069e4         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoul+470
00000000000069ea         xor        r9d, r9d
00000000000069ed         nop        dword [rax]

                     loc_69f0:
00000000000069f0         mov        rax, rbx                                    ; CODE XREF=xstrtoul+627
00000000000069f3         mul        rsi
00000000000069f6         mov        rbx, rax
00000000000069f9         jo         loc_6b8e

                     loc_69ff:
00000000000069ff         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1032
0000000000006a03         jne        loc_69f0

                     loc_6a05:
0000000000006a05         or         ebp, r9d                                    ; CODE XREF=xstrtoul+669, xstrtoul+701, xstrtoul+766, xstrtoul+801
0000000000006a08         jmp        loc_6990

                     loc_6a0a:
0000000000006a0a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoul+470
0000000000006a10         xor        r9d, r9d
0000000000006a13         nop        dword [rax+rax]

                     loc_6a18:
0000000000006a18         mov        rax, rbx                                    ; CODE XREF=xstrtoul+667
0000000000006a1b         mul        rsi
0000000000006a1e         mov        rbx, rax
0000000000006a21         jo         loc_6b70

                     loc_6a27:
0000000000006a27         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1002
0000000000006a2b         jne        loc_6a18

0000000000006a2d         jmp        loc_6a05

                     loc_6a2f:
0000000000006a2f         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoul+470
0000000000006a35         xor        r9d, r9d

                     loc_6a38:
0000000000006a38         mov        rax, rbx                                    ; CODE XREF=xstrtoul+699
0000000000006a3b         mul        rsi
0000000000006a3e         mov        rbx, rax
0000000000006a41         jo         loc_6b43

                     loc_6a47:
0000000000006a47         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+957
0000000000006a4b         jne        loc_6a38

0000000000006a4d         jmp        loc_6a05

                     loc_6a4f:
0000000000006a4f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoul+470
0000000000006a52         mul        rsi
0000000000006a55         mov        rbx, rax
0000000000006a58         jno        loc_6990

                     loc_6a5e:
0000000000006a5e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoul+562, xstrtoul+584, xstrtoul+817
0000000000006a63         or         rbx, 0xffffffffffffffff
0000000000006a67         jmp        loc_6990
0000000000006a6c         align      16

                     loc_6a70:
0000000000006a70         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoul+470
0000000000006a76         xor        r9d, r9d

                     loc_6a79:
0000000000006a79         mov        rax, rbx                                    ; CODE XREF=xstrtoul+764
0000000000006a7c         mul        rsi
0000000000006a7f         mov        rbx, rax
0000000000006a82         jo         loc_6b7f

                     loc_6a88:
0000000000006a88         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1017
0000000000006a8c         jne        loc_6a79

0000000000006a8e         jmp        loc_6a05

                     loc_6a93:
0000000000006a93         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoul+470
0000000000006a99         xor        r9d, r9d

                     loc_6a9c:
0000000000006a9c         mov        rax, rbx                                    ; CODE XREF=xstrtoul+799
0000000000006a9f         mul        rsi
0000000000006aa2         mov        rbx, rax
0000000000006aa5         jo         loc_6b34

                     loc_6aab:
0000000000006aab         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+942
0000000000006aaf         jne        loc_6a9c

0000000000006ab1         jmp        loc_6a05

                     loc_6ab6:
0000000000006ab6         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoul+470
0000000000006abb         mov        rax, rdx
0000000000006abe         mul        rbx
0000000000006ac1         jo         loc_6a5e

0000000000006ac3         shl        rbx, 0xa
0000000000006ac7         jmp        loc_6990

                     loc_6acc:
0000000000006acc         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoul+470
0000000000006acf         mul        rsi
0000000000006ad2         jo         loc_6b9d

0000000000006ad8         xor        r8d, r8d

                     loc_6adb:
0000000000006adb         mul        rsi                                         ; CODE XREF=xstrtoul+1047
0000000000006ade         jno        loc_6977

0000000000006ae4         mov        r8d, 0x1
0000000000006aea         or         rax, 0xffffffffffffffff
0000000000006aee         jmp        loc_6977
0000000000006af3         align      8

                     loc_6af8:
0000000000006af8         xor        edi, edi                                    ; CODE XREF=xstrtoul+405
0000000000006afa         cmp        byte [rcx+2], 0x42
0000000000006afe         mov        esi, 0x400
0000000000006b03         sete       dil
0000000000006b07         lea        edi, dword [rdi+rdi+1]
0000000000006b0b         jmp        loc_694a

                     loc_6b10:
0000000000006b10         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoul+237
                        ; endp

                     loc_6b15:
0000000000006b15         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoul", CODE XREF=xstrtoul+33
0000000000006b1c         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000006b23         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000006b2a         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000006b2f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_6b34:
0000000000006b34         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+789
0000000000006b3a         or         rbx, 0xffffffffffffffff
0000000000006b3e         jmp        loc_6aab

                     loc_6b43:
0000000000006b43         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+689
0000000000006b49         or         rbx, 0xffffffffffffffff
0000000000006b4d         jmp        loc_6a47

                     loc_6b52:
0000000000006b52         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+490
0000000000006b58         or         rbx, 0xffffffffffffffff
0000000000006b5c         jmp        loc_6983

                     loc_6b61:
0000000000006b61         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoul+478
0000000000006b65         mov        r8d, 0x1
0000000000006b6b         jmp        loc_6977

                     loc_6b70:
0000000000006b70         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+657
0000000000006b76         or         rbx, 0xffffffffffffffff
0000000000006b7a         jmp        loc_6a27

                     loc_6b7f:
0000000000006b7f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+754
0000000000006b85         or         rbx, 0xffffffffffffffff
0000000000006b89         jmp        loc_6a88

                     loc_6b8e:
0000000000006b8e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+617
0000000000006b94         or         rbx, 0xffffffffffffffff
0000000000006b98         jmp        loc_69ff

                     loc_6b9d:
0000000000006b9d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+834
0000000000006ba3         or         rax, 0xffffffffffffffff
0000000000006ba7         jmp        loc_6adb
0000000000006bac         align      16                                          ; End of unwind block (FDE at 0x9adc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006bb0         push       r12                                         ; Begin of unwind block (FDE at 0x9b2c), CODE XREF=main+1813, main+1829, fopen_safer+65, fopen_safer+134, close_stream+21
0000000000006bb2         push       rbp
0000000000006bb3         push       rbx
0000000000006bb4         mov        rbx, rdi
0000000000006bb7         call       j_fileno                                    ; fileno
0000000000006bbc         test       eax, eax
0000000000006bbe         mov        rdi, rbx
0000000000006bc1         js         loc_6c17

0000000000006bc3         call       j___freading                                ; __freading
0000000000006bc8         test       eax, eax
0000000000006bca         jne        loc_6bf8

                     loc_6bcc:
0000000000006bcc         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000006bcf         call       rpl_fflush                                  ; rpl_fflush
0000000000006bd4         test       eax, eax
0000000000006bd6         je         loc_6c14

0000000000006bd8         call       j___errno_location                          ; __errno_location
0000000000006bdd         mov        r12d, dword [rax]
0000000000006be0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006be3         mov        rbp, rax
0000000000006be6         call       j_fclose                                    ; fclose
0000000000006beb         test       r12d, r12d
0000000000006bee         jne        loc_6c20

                     loc_6bf0:
0000000000006bf0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000006bf1         pop        rbp
0000000000006bf2         pop        r12
0000000000006bf4         ret
                        ; endp
0000000000006bf5         align      8

                     loc_6bf8:
0000000000006bf8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000006bfb         call       j_fileno                                    ; fileno
0000000000006c00         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000006c02         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000006c07         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006c09         call       j_lseek                                     ; lseek
0000000000006c0e         cmp        rax, 0xffffffffffffffff
0000000000006c12         jne        loc_6bcc

                     loc_6c14:
0000000000006c14         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_6c17:
0000000000006c17         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000006c18         pop        rbp
0000000000006c19         pop        r12
0000000000006c1b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_6c20:
0000000000006c20         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000006c24         mov        eax, 0xffffffff
0000000000006c29         jmp        loc_6bf0
0000000000006c2b         align      16                                          ; End of unwind block (FDE at 0x9b2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
0000000000006c30         push       r12                                         ; Begin of unwind block (FDE at 0x9b64), CODE XREF=dup_safer+9
0000000000006c32         push       rbp
0000000000006c33         mov        ebp, edi
0000000000006c35         push       rbx
0000000000006c36         sub        rsp, 0x50
0000000000006c3a         mov        rax, qword [fs:0x28]
0000000000006c43         mov        qword [rsp+0x68+var_50], rax
0000000000006c48         xor        eax, eax
0000000000006c4a         lea        rax, qword [rsp+0x68+arg_0]
0000000000006c4f         test       esi, esi
0000000000006c51         mov        qword [rsp+0x68+var_38], rdx
0000000000006c56         mov        qword [rsp+0x68+var_30], rcx
0000000000006c5b         mov        qword [rsp+0x68+var_28], r8
0000000000006c60         mov        qword [rsp+0x68+var_60], rax
0000000000006c65         lea        rax, qword [rsp+0x68+var_48]
0000000000006c6a         mov        qword [rsp+0x68+var_20], r9
0000000000006c6f         mov        dword [rsp+0x68+var_68], 0x10
0000000000006c76         mov        qword [rsp+0x68+var_58], rax
0000000000006c7b         je         loc_6e82

0000000000006c81         cmp        esi, 0x406
0000000000006c87         jne        loc_6cd0

0000000000006c89         mov        rax, qword [rsp+0x68+var_58]
0000000000006c8e         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
0000000000006c95         mov        dword [rsp+0x68+var_68], 0x18
0000000000006c9c         mov        r12d, dword [rax+0x10]
0000000000006ca0         mov        edx, r12d
0000000000006ca3         js         loc_6dd3

0000000000006ca9         xor        eax, eax
0000000000006cab         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000006cb0         call       j_fcntl                                     ; fcntl
0000000000006cb5         test       eax, eax
0000000000006cb7         mov        ebx, eax
0000000000006cb9         js         loc_6e48

                     loc_6cbf:
0000000000006cbf         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
0000000000006cc9         jmp        loc_6d10
0000000000006ccb         align      16

                     loc_6cd0:
0000000000006cd0         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
0000000000006cd3         je         loc_6d00

0000000000006cd5         jg         loc_6d30

0000000000006cd7         cmp        esi, 0x4
0000000000006cda         je         loc_6db0

0000000000006ce0         jg         loc_6da0

0000000000006ce6         cmp        esi, 0x2
0000000000006ce9         je         loc_6db0

0000000000006cef         jg         loc_6d00

0000000000006cf1         cmp        esi, 0x1
0000000000006cf4         jne        loc_6d58

0000000000006cf6         nop        word [cs:rax+rax]

                     loc_6d00:
0000000000006d00         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
0000000000006d02         xor        eax, eax
0000000000006d04         call       j_fcntl                                     ; fcntl
0000000000006d09         mov        ebx, eax
0000000000006d0b         nop        dword [rax+rax]

                     loc_6d10:
0000000000006d10         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
0000000000006d15         xor        rcx, qword [fs:0x28]
0000000000006d1e         mov        eax, ebx
0000000000006d20         jne        loc_6e7d

0000000000006d26         add        rsp, 0x50
0000000000006d2a         pop        rbx
0000000000006d2b         pop        rbp
0000000000006d2c         pop        r12
0000000000006d2e         ret
                        ; endp
0000000000006d2f         align      16

                     loc_6d30:
0000000000006d30         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000006d36         jg         loc_6d80

0000000000006d38         cmp        esi, 0x406
0000000000006d3e         jge        loc_6db0

0000000000006d40         cmp        esi, 0x401
0000000000006d46         je         loc_6d00

0000000000006d48         cmp        esi, 0x402
0000000000006d4e         je         loc_6db0

0000000000006d50         cmp        esi, 0x400
0000000000006d56         je         loc_6db0

                     loc_6d58:
0000000000006d58         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
0000000000006d5b         cmp        eax, 0x2f
0000000000006d5e         ja         loc_6e9a

0000000000006d64         add        rax, qword [rsp+0x68+var_58]

                     loc_6d69:
0000000000006d69         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
0000000000006d6c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000006d6e         xor        eax, eax
0000000000006d70         call       j_fcntl                                     ; fcntl
0000000000006d75         mov        ebx, eax
0000000000006d77         jmp        loc_6d10
0000000000006d79         align      128

                     loc_6d80:
0000000000006d80         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
0000000000006d86         je         loc_6db0

0000000000006d88         jl         loc_6d00

0000000000006d8e         cmp        esi, 0x40a
0000000000006d94         jne        loc_6d58

0000000000006d96         jmp        loc_6d00
0000000000006d9b         align      32

                     loc_6da0:
0000000000006da0         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000006da3         je         loc_6d00

0000000000006da9         jg         loc_6db0

0000000000006dab         cmp        esi, 0x8
0000000000006dae         jne        loc_6d58

                     loc_6db0:
0000000000006db0         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
0000000000006db3         cmp        eax, 0x2f
0000000000006db6         ja         loc_6ea4

0000000000006dbc         add        rax, qword [rsp+0x68+var_58]

                     loc_6dc1:
0000000000006dc1         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
0000000000006dc3         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000006dc5         xor        eax, eax
0000000000006dc7         call       j_fcntl                                     ; fcntl
0000000000006dcc         mov        ebx, eax
0000000000006dce         jmp        loc_6d10

                     loc_6dd3:
0000000000006dd3         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
0000000000006dd5         xor        eax, eax
0000000000006dd7         call       j_fcntl                                     ; fcntl
0000000000006ddc         test       eax, eax
0000000000006dde         mov        ebx, eax
0000000000006de0         js         loc_6d10

0000000000006de6         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000006ded         jne        loc_6d10

                     loc_6df3:
0000000000006df3         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
0000000000006df5         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
0000000000006dfa         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
0000000000006dfc         call       j_fcntl                                     ; fcntl
0000000000006e01         test       eax, eax
0000000000006e03         js         loc_6e21

0000000000006e05         or         eax, 0x1
0000000000006e08         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
0000000000006e0d         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
0000000000006e0f         mov        edx, eax
0000000000006e11         xor        eax, eax
0000000000006e13         call       j_fcntl                                     ; fcntl
0000000000006e18         cmp        eax, 0xffffffff
0000000000006e1b         jne        loc_6d10

                     loc_6e21:
0000000000006e21         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000006e26         mov        r12d, dword [rax]
0000000000006e29         mov        rbp, rax
0000000000006e2c         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000006e2e         call       j_close                                     ; close
0000000000006e33         mov        ebx, 0xffffffff
0000000000006e38         mov        dword [rbp], r12d
0000000000006e3c         jmp        loc_6d10
0000000000006e41         align      8

                     loc_6e48:
0000000000006e48         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
0000000000006e4d         cmp        dword [rax], 0x16
0000000000006e50         jne        loc_6cbf

0000000000006e56         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000006e58         xor        eax, eax
0000000000006e5a         mov        edx, r12d
0000000000006e5d         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000006e5f         call       j_fcntl                                     ; fcntl
0000000000006e64         test       eax, eax
0000000000006e66         mov        ebx, eax
0000000000006e68         js         loc_6d10

0000000000006e6e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000006e78         jmp        loc_6df3

                     loc_6e7d:
0000000000006e7d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_6e82:
0000000000006e82         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
0000000000006e87         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000006e89         mov        edx, dword [rax+0x10]
0000000000006e8c         xor        eax, eax
0000000000006e8e         call       j_fcntl                                     ; fcntl
0000000000006e93         mov        ebx, eax
0000000000006e95         jmp        loc_6d10

                     loc_6e9a:
0000000000006e9a         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
0000000000006e9f         jmp        loc_6d69

                     loc_6ea4:
0000000000006ea4         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000006ea9         jmp        loc_6dc1
0000000000006eae         align      16                                          ; End of unwind block (FDE at 0x9b64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000006eb0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9b9c), CODE XREF=rpl_fclose+31
0000000000006eb3         push       rbx
0000000000006eb4         mov        rbx, rdi
0000000000006eb7         je         loc_6eca

0000000000006eb9         call       j___freading                                ; __freading
0000000000006ebe         test       eax, eax
0000000000006ec0         je         loc_6eca

0000000000006ec2         test       dword [rbx], 0x100
0000000000006ec8         jne        loc_6ed8

                     loc_6eca:
0000000000006eca         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000006ecd         pop        rbx
0000000000006ece         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000006ed3         align      8

                     loc_6ed8:
0000000000006ed8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000006edb         mov        edx, 0x1
0000000000006ee0         xor        esi, esi
0000000000006ee2         call       rpl_fseeko                                  ; rpl_fseeko
0000000000006ee7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000006eea         pop        rbx
0000000000006eeb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006ef0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x9b9c), Begin of unwind block (FDE at 0x9bbc), CODE XREF=rpl_fflush+50
0000000000006ef4         cmp        qword [rdi+0x10], rax
0000000000006ef8         je         loc_6f00

                     j_j_fseeko:        // fseeko
0000000000006efa         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000006eff         align      256

                     loc_6f00:
0000000000006f00         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006f04         cmp        qword [rdi+0x28], rax
0000000000006f08         jne        j_j_fseeko                                  ; fseeko

0000000000006f0a         cmp        qword [rdi+0x48], 0x0
0000000000006f0f         jne        j_j_fseeko                                  ; fseeko

0000000000006f11         push       r12
0000000000006f13         push       rbp
0000000000006f14         mov        r12d, edx
0000000000006f17         push       rbx
0000000000006f18         mov        rbp, rsi
0000000000006f1b         mov        rbx, rdi
0000000000006f1e         call       j_fileno                                    ; fileno
0000000000006f23         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006f26         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006f29         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006f2b         call       j_lseek                                     ; lseek
0000000000006f30         cmp        rax, 0xffffffffffffffff
0000000000006f34         je         loc_6f42

0000000000006f36         and        dword [rbx], 0xffffffef
0000000000006f39         mov        qword [rbx+0x90], rax
0000000000006f40         xor        eax, eax

                     loc_6f42:
0000000000006f42         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006f43         pop        rbp
0000000000006f44         pop        r12
0000000000006f46         ret
                        ; endp
0000000000006f47         align      16                                          ; End of unwind block (FDE at 0x9bbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000006f50         push       r13                                         ; Begin of unwind block (FDE at 0x9bec), CODE XREF=sub_4910+534
0000000000006f52         push       r12
0000000000006f54         mov        r13, rsi
0000000000006f57         push       rbp
0000000000006f58         push       rbx
0000000000006f59         mov        rbx, rdi
0000000000006f5c         mov        r12, rdx
0000000000006f5f         sub        rsp, 0x18
0000000000006f63         mov        rax, qword [fs:0x28]
0000000000006f6c         mov        qword [rsp+0x38+var_30], rax
0000000000006f71         xor        eax, eax
0000000000006f73         lea        rax, qword [rsp+0x38+var_34]
0000000000006f78         test       rdi, rdi
0000000000006f7b         cmove      rbx, rax
0000000000006f7f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000006f82         call       j_mbrtowc                                   ; mbrtowc
0000000000006f87         cmp        rax, 0xfffffffffffffffd
0000000000006f8b         mov        rbp, rax
0000000000006f8e         jbe        loc_6fb0

0000000000006f90         test       r12, r12
0000000000006f93         je         loc_6fb0

0000000000006f95         xor        edi, edi
0000000000006f97         call       hard_locale                                 ; hard_locale
0000000000006f9c         test       al, al
0000000000006f9e         jne        loc_6fb0

0000000000006fa0         movzx      eax, byte [r13]
0000000000006fa5         mov        ebp, 0x1
0000000000006faa         mov        dword [rbx], eax
0000000000006fac         nop        dword [rax]

                     loc_6fb0:
0000000000006fb0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000006fb5         xor        rdx, qword [fs:0x28]
0000000000006fbe         mov        rax, rbp
0000000000006fc1         jne        loc_6fce

0000000000006fc3         add        rsp, 0x18
0000000000006fc7         pop        rbx
0000000000006fc8         pop        rbp
0000000000006fc9         pop        r12
0000000000006fcb         pop        r13
0000000000006fcd         ret
                        ; endp

                     loc_6fce:
0000000000006fce         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000006fd3         align      32                                          ; End of unwind block (FDE at 0x9bec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000006fe0         push       r12                                         ; Begin of unwind block (FDE at 0x9c2c), CODE XREF=close_stdout+13, close_stdout+51
0000000000006fe2         push       rbp
0000000000006fe3         mov        rbp, rdi
0000000000006fe6         push       rbx
0000000000006fe7         call       j___fpending                                ; __fpending
0000000000006fec         mov        ebx, dword [rbp]
0000000000006fef         mov        rdi, rbp
0000000000006ff2         mov        r12, rax
0000000000006ff5         call       rpl_fclose                                  ; rpl_fclose
0000000000006ffa         and        ebx, 0x20
0000000000006ffd         test       ebx, ebx
0000000000006fff         jne        loc_7018

0000000000007001         test       eax, eax
0000000000007003         je         loc_700f

0000000000007005         test       r12, r12
0000000000007008         mov        eax, 0xffffffff
000000000000700d         je         loc_7048

                     loc_700f:
000000000000700f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000007010         pop        rbp
0000000000007011         pop        r12
0000000000007013         ret
                        ; endp
0000000000007014         align      8

                     loc_7018:
0000000000007018         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000701a         jne        loc_7038

000000000000701c         call       j___errno_location                          ; __errno_location
0000000000007021         mov        dword [rax], 0x0
0000000000007027         mov        eax, 0xffffffff
000000000000702c         pop        rbx
000000000000702d         pop        rbp
000000000000702e         pop        r12
0000000000007030         ret
                        ; endp
0000000000007031         align      8

                     loc_7038:
0000000000007038         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000007039         mov        eax, 0xffffffff
000000000000703e         pop        rbp
000000000000703f         pop        r12
0000000000007041         ret
                        ; endp
0000000000007042         align      8

                     loc_7048:
0000000000007048         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000704d         cmp        dword [rax], 0x9
0000000000007050         pop        rbx
0000000000007051         pop        rbp
0000000000007052         pop        r12
0000000000007054         setne      al
0000000000007057         movzx      eax, al
000000000000705a         neg        eax
000000000000705c         ret
                        ; endp
000000000000705d         align      32                                          ; End of unwind block (FDE at 0x9c2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000007060         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x9c7c), CODE XREF=gettext_quote.part.1+11
0000000000007064         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000007069         call       j_nl_langinfo                               ; nl_langinfo
000000000000706e         test       rax, rax
0000000000007071         je         loc_7090

0000000000007073         cmp        byte [rax], 0x0
0000000000007076         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000707d         cmove      rax, rdx
0000000000007081         add        rsp, 0x8
0000000000007085         ret
                        ; endp
0000000000007086         align      16

                     loc_7090:
0000000000007090         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000007097         add        rsp, 0x8
000000000000709b         ret
                        ; endp
000000000000709c         align      32                                          ; End of unwind block (FDE at 0x9c7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcoll_loop:
00000000000070a0         push       r15                                         ; Begin of unwind block (FDE at 0x9c9c), CODE XREF=memcoll+102, memcoll0+64
00000000000070a2         push       r14
00000000000070a4         mov        r14, rcx
00000000000070a7         push       r13
00000000000070a9         push       r12
00000000000070ab         mov        r13, rsi
00000000000070ae         push       rbp
00000000000070af         push       rbx
00000000000070b0         mov        r12, rdi
00000000000070b3         mov        rbp, rdx
00000000000070b6         sub        rsp, 0x8
00000000000070ba         call       j___errno_location                          ; __errno_location
00000000000070bf         mov        r15, rax
00000000000070c2         jmp        loc_70f3
00000000000070c4         align      8

                     loc_70c8:
00000000000070c8         mov        rdi, r12                                    ; argument "__s" for method j_strlen, CODE XREF=strcoll_loop+103
00000000000070cb         call       j_strlen                                    ; strlen
00000000000070d0         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
00000000000070d3         lea        rbx, qword [rax+1]
00000000000070d7         call       j_strlen                                    ; strlen
00000000000070dc         add        rax, 0x1
00000000000070e0         add        r12, rbx
00000000000070e3         add        rbp, rax
00000000000070e6         sub        r14, rax
00000000000070e9         sub        r13, rbx
00000000000070ec         je         loc_7120

00000000000070ee         test       r14, r14
00000000000070f1         je         loc_7140

                     loc_70f3:
00000000000070f3         mov        dword [r15], 0x0                            ; CODE XREF=strcoll_loop+34
00000000000070fa         mov        rsi, rbp                                    ; argument "__s2" for method j_strcoll
00000000000070fd         mov        rdi, r12                                    ; argument "__s1" for method j_strcoll
0000000000007100         call       j_strcoll                                   ; strcoll
0000000000007105         test       eax, eax
0000000000007107         je         loc_70c8

0000000000007109         add        rsp, 0x8
000000000000710d         pop        rbx
000000000000710e         pop        rbp
000000000000710f         pop        r12
0000000000007111         pop        r13
0000000000007113         pop        r14
0000000000007115         pop        r15
0000000000007117         ret
                        ; endp
0000000000007118         align      32

                     loc_7120:
0000000000007120         xor        eax, eax                                    ; CODE XREF=strcoll_loop+76
0000000000007122         test       r14, r14
0000000000007125         setne      al
0000000000007128         add        rsp, 0x8
000000000000712c         pop        rbx
000000000000712d         neg        eax
000000000000712f         pop        rbp
0000000000007130         pop        r12
0000000000007132         pop        r13
0000000000007134         pop        r14
0000000000007136         pop        r15
0000000000007138         ret
                        ; endp
0000000000007139         align      64

                     loc_7140:
0000000000007140         add        rsp, 0x8                                    ; CODE XREF=strcoll_loop+81
0000000000007144         mov        eax, 0x1
0000000000007149         pop        rbx
000000000000714a         pop        rbp
000000000000714b         pop        r12
000000000000714d         pop        r13
000000000000714f         pop        r14
0000000000007151         pop        r15
0000000000007153         ret
                        ; endp
0000000000007154         align      32                                          ; End of unwind block (FDE at 0x9c9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_40: int32_t, -64


                     memcoll:
0000000000007160         push       r15                                         ; Begin of unwind block (FDE at 0x9d14), CODE XREF=xmemcoll+20
0000000000007162         push       r14
0000000000007164         mov        r15, rdx
0000000000007167         push       r13
0000000000007169         push       r12
000000000000716b         mov        r14, rdi
000000000000716e         push       rbp
000000000000716f         push       rbx
0000000000007170         mov        rbp, rcx
0000000000007173         mov        rbx, rsi
0000000000007176         sub        rsp, 0x18
000000000000717a         cmp        rsi, rcx
000000000000717d         jne        loc_7192

000000000000717f         mov        rdx, rsi                                    ; argument "__n" for method j_memcmp
0000000000007182         mov        rsi, r15                                    ; argument "__s2" for method j_memcmp
0000000000007185         call       j_memcmp                                    ; memcmp
000000000000718a         test       eax, eax
000000000000718c         mov        dword [rsp+0x48+var_40], eax
0000000000007190         je         loc_71f8

                     loc_7192:
0000000000007192         lea        r13, qword [r14+rbx]                        ; CODE XREF=memcoll+29
0000000000007196         lea        r12, qword [r15+rbp]
000000000000719a         lea        rcx, qword [rbp+1]
000000000000719e         lea        rsi, qword [rbx+1]
00000000000071a2         mov        rdx, r15
00000000000071a5         mov        rdi, r14
00000000000071a8         movzx      r9d, byte [r13]
00000000000071ad         movzx      r8d, byte [r12]
00000000000071b2         mov        byte [r13], 0x0
00000000000071b7         mov        byte [r12], 0x0
00000000000071bc         mov        byte [rsp+0x48+var_39], r9b
00000000000071c1         mov        byte [rsp+0x48+var_40], r8b
00000000000071c6         call       strcoll_loop                                ; strcoll_loop
00000000000071cb         movzx      r9d, byte [rsp+0x48+var_39]
00000000000071d1         movzx      r8d, byte [rsp+0x48+var_40]
00000000000071d7         mov        edx, eax
00000000000071d9         mov        byte [r13], r9b
00000000000071dd         mov        byte [r12], r8b

                     loc_71e1:
00000000000071e1         add        rsp, 0x18                                   ; CODE XREF=memcoll+167
00000000000071e5         mov        eax, edx
00000000000071e7         pop        rbx
00000000000071e8         pop        rbp
00000000000071e9         pop        r12
00000000000071eb         pop        r13
00000000000071ed         pop        r14
00000000000071ef         pop        r15
00000000000071f1         ret
                        ; endp
00000000000071f2         align      8

                     loc_71f8:
00000000000071f8         call       j___errno_location                          ; __errno_location, CODE XREF=memcoll+48
00000000000071fd         mov        edx, dword [rsp+0x48+var_40]
0000000000007201         mov        dword [rax], 0x0
0000000000007207         jmp        loc_71e1
0000000000007209         align      16                                          ; End of unwind block (FDE at 0x9d14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     memcoll0:
0000000000007210         push       r12                                         ; Begin of unwind block (FDE at 0x9d60), CODE XREF=xmemcoll0+20
0000000000007212         push       rbp
0000000000007213         mov        r12, rdx
0000000000007216         push       rbx
0000000000007217         mov        rbp, rdi
000000000000721a         mov        rbx, rsi
000000000000721d         sub        rsp, 0x10
0000000000007221         cmp        rsi, rcx
0000000000007224         jne        loc_723f

0000000000007226         mov        rdx, rsi                                    ; argument "__n" for method j_memcmp
0000000000007229         mov        rsi, r12                                    ; argument "__s2" for method j_memcmp
000000000000722c         mov        qword [rsp+0x28+var_20], rcx
0000000000007231         call       j_memcmp                                    ; memcmp
0000000000007236         test       eax, eax
0000000000007238         mov        rcx, qword [rsp+0x28+var_20]
000000000000723d         je         loc_7258

                     loc_723f:
000000000000723f         add        rsp, 0x10                                   ; CODE XREF=memcoll0+20
0000000000007243         mov        rdx, r12
0000000000007246         mov        rsi, rbx
0000000000007249         mov        rdi, rbp
000000000000724c         pop        rbx
000000000000724d         pop        rbp
000000000000724e         pop        r12
0000000000007250         jmp        strcoll_loop                                ; strcoll_loop
                        ; endp
0000000000007255         align      8

                     loc_7258:
0000000000007258         call       j___errno_location                          ; __errno_location, CODE XREF=memcoll0+45
000000000000725d         mov        dword [rax], 0x0
0000000000007263         add        rsp, 0x10
0000000000007267         xor        eax, eax
0000000000007269         pop        rbx
000000000000726a         pop        rbp
000000000000726b         pop        r12
000000000000726d         ret
                        ; endp
000000000000726e         align      16                                          ; End of unwind block (FDE at 0x9d60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000007270         push       r15                                         ; Begin of unwind block (FDE at 0x9da4), DATA XREF=_start+22
0000000000007272         push       r14
0000000000007274         mov        r15, rdx
0000000000007277         push       r13
0000000000007279         push       r12
000000000000727b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000007282         push       rbp
0000000000007283         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000728a         push       rbx
000000000000728b         mov        r13d, edi
000000000000728e         mov        r14, rsi
0000000000007291         sub        rbp, r12
0000000000007294         sub        rsp, 0x8
0000000000007298         sar        rbp, 0x3
000000000000729c         call       _init                                       ; _init
00000000000072a1         test       rbp, rbp
00000000000072a4         je         loc_72c6

00000000000072a6         xor        ebx, ebx
00000000000072a8         nop        dword [rax+rax]

                     loc_72b0:
00000000000072b0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000072b3         mov        rsi, r14
00000000000072b6         mov        edi, r13d
00000000000072b9         call       qword [r12+rbx*8]
00000000000072bd         add        rbx, 0x1
00000000000072c1         cmp        rbp, rbx
00000000000072c4         jne        loc_72b0

                     loc_72c6:
00000000000072c6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000072ca         pop        rbx
00000000000072cb         pop        rbp
00000000000072cc         pop        r12
00000000000072ce         pop        r13
00000000000072d0         pop        r14
00000000000072d2         pop        r15
00000000000072d4         ret
                        ; endp
00000000000072d5         align      32                                          ; End of unwind block (FDE at 0x9da4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000072e0         ret                                                    ; Begin of unwind block (FDE at 0x9dec), DATA XREF=_start+15
                        ; endp
00000000000072e2         align      16                                          ; End of unwind block (FDE at 0x9dec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
00000000000072f0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x9e04), __dso_handle, CODE XREF=main+154, main+166
00000000000072f7         xor        esi, esi
00000000000072f9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
00000000000072fe         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x9e04)
00000000000072ff         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x7300; 0x7309[ (9 bytes)
        ; File offset : [29440; 29449[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000007300         sub        rsp, 0x8
0000000000007304         add        rsp, 0x8
0000000000007308         ret
                        ; endp
0000000000007309         db  0x00 ; '.'
000000000000730a         db  0x00 ; '.'
000000000000730b         db  0x00 ; '.'
000000000000730c         db  0x00 ; '.'
000000000000730d         db  0x00 ; '.'
000000000000730e         db  0x00 ; '.'
000000000000730f         db  0x00 ; '.'
0000000000007310         db  0x00 ; '.'
0000000000007311         db  0x00 ; '.'
0000000000007312         db  0x00 ; '.'
0000000000007313         db  0x00 ; '.'
0000000000007314         db  0x00 ; '.'
0000000000007315         db  0x00 ; '.'
0000000000007316         db  0x00 ; '.'
0000000000007317         db  0x00 ; '.'
0000000000007318         db  0x00 ; '.'
0000000000007319         db  0x00 ; '.'
000000000000731a         db  0x00 ; '.'
000000000000731b         db  0x00 ; '.'
000000000000731c         db  0x00 ; '.'
000000000000731d         db  0x00 ; '.'
000000000000731e         db  0x00 ; '.'
000000000000731f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x7320; 0x89a7[ (5767 bytes)
        ; File offset : [29472; 35239[ (5767 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000007320         db  0x01 ; '.'
0000000000007321         db  0x00 ; '.'
0000000000007322         db  0x02 ; '.'
0000000000007323         db  0x00 ; '.'
0000000000007324         db  0x00 ; '.'
0000000000007325         db  0x00 ; '.'
0000000000007326         db  0x00 ; '.'
0000000000007327         db  0x00 ; '.'
                     aIncompatibleJo:
0000000000007328         db         "incompatible join fields %lu, %lu", 0      ; DATA XREF=set_join_field+33
000000000000734a         align      16
                     aInvalidFileNum:
0000000000007350         db         "invalid file number in field spec: %s", 0  ; DATA XREF=add_field_list+173
0000000000007376         align      8
                     aTrySHelpForMor:
0000000000007378         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000739f         align      32
                     aUsageSOptionFi:
00000000000073a0         db         "Usage: %s [OPTION]... FILE1 FILE2\n", 0    ; DATA XREF=usage+93
00000000000073c3         align      8
                     aForEachPairOfI:
00000000000073c8         db         "For each pair of input lines with identical join fields, write a line to\nstandard output.  The default join field is the first, delimited by blanks.\n", 0 ; DATA XREF=usage+132
000000000000745e         align      32
                     aNwhenFile1OrFi:
0000000000007460         db         "\nWhen FILE1 or FILE2 (not both) is -, read standard input.\n", 0 ; DATA XREF=usage+169
000000000000749c         align      32
                     aNAFilenumAlsoP:
00000000000074a0         db         "\n  -a FILENUM        also print unpairable lines from file FILENUM, where\n                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2\n  -e EMPTY          replace missing input fields with EMPTY\n", 0 ; DATA XREF=usage+206
                     aIIgnorecaseIgn:
0000000000007570         db         "  -i, --ignore-case  ignore differences in case when comparing fields\n  -j FIELD          equivalent to '-1 FIELD -2 FIELD'\n  -o FORMAT         obey FORMAT while constructing output line\n  -t CHAR           use CHAR as input and output field separator\n", 0 ; DATA XREF=usage+243
000000000000766d         align      16
                     aVFilenumLikeAF:
0000000000007670         db         "  -v FILENUM        like -a FILENUM, but suppress joined output lines\n  -1 FIELD          join on this FIELD of file 1\n  -2 FIELD          join on this FIELD of file 2\n  --check-order     check that the input is correctly sorted, even\n                     " ; DATA XREF=usage+280
0000000000007770         db         " if all input lines are pairable\n  --nocheck-order   do not check that the input is correctly sorted\n  --header          treat the first line in each file as field headers,\n                      print them without trying to pair them\n", 0
000000000000785b         align      32
                     aZZeroterminate:
0000000000007860         db         "  -z, --zero-terminated     line delimiter is NUL, not newline\n", 0 ; DATA XREF=usage+317
                     aHelpDisplayThi:
00000000000078a0         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+354
00000000000078cd         align      16
                     aVersionOutputV:
00000000000078d0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+391
0000000000007906         align      8
                     aNunlessTCharIs:
0000000000007908         db         "\nUnless -t CHAR is given, leading blanks separate fields and are ignored,\nelse fields are separated by CHAR.  Any FIELD is a field number counted\nfrom 1.  FORMAT is one or more comma or blank separated specifications,\neach being 'FILENUM.FIELD' or '0'.  De" ; DATA XREF=usage+428
0000000000007a08         db         "fault FORMAT outputs the join field,\nthe remaining fields from FILE1, the remaining fields from FILE2, all\nseparated by CHAR.  If FORMAT is the keyword 'auto', then the first\nline of each file determines the number of fields output for each line.\n\nImportan"
0000000000007b08         db         "t: FILE1 and FILE2 must be sorted on the join fields.\nE.g., use \"sort -k 1b,1\" if 'join' has no options,\nor use \"join -t ''\" if 'sort' has no options.\nNote, comparisons honor the rules specified by 'LC_COLLATE'.\nIf the input is not sorted and some lines ca"
0000000000007c08         db         "nnot be joined, a\nwarning message will be given.\n", 0
0000000000007c3a         align      64
                     aHttpswwwgnuorg:
0000000000007c40         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+671, usage+771, usage+864, usage+974, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000007c68         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1015
0000000000007caf         align      16
                     aOrAvailableLoc:
0000000000007cb0         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+814
0000000000007ce3         align      8
                     aConflictingEmp:
0000000000007ce8         db         "conflicting empty-field replacement strings", 0 ; DATA XREF=main+3455
0000000000007d14         align      8
                     aBothFilesCanno:
0000000000007d18         db         "both files cannot be standard input", 0    ; DATA XREF=main+3578
                     aInvalidFieldNu:
0000000000007d3c         db         "invalid field number: %s", 0               ; DATA XREF=main+3413, string_to_join_field+113
0000000000007d55         db  0x2c ; ','                                         ; DATA XREF=add_field_list+105
0000000000007d56         db  0x20 ; ' '
0000000000007d57         db  0x09 ; '.'
0000000000007d58         db  0x00 ; '.'                                         ; DATA XREF=main+83, main+678, string_to_join_field+1, usage+803
                     aInvalidFieldSp:
0000000000007d59         db         "invalid field specifier: %s", 0            ; DATA XREF=add_field_list+223, add_field_list+273
                     aReadError:
0000000000007d75         db         "read error", 0                             ; DATA XREF=get_line+950
                     aSluIsNotSorted:
0000000000007d80         db         "%s:%lu: is not sorted: %.*s", 0            ; DATA XREF=get_line+526
0000000000007d9c         db  0x6a ; 'j'                                         ; DATA XREF=main+635, usage+453, usage+764, usage+948, usage+967, usage+1001
0000000000007d9d         db  0x6f ; 'o'
0000000000007d9e         db  0x69 ; 'i'
0000000000007d9f         db  0x6e ; 'n'
0000000000007da0         db  0x00 ; '.'
0000000000007da1         db  0x5b ; '['                                         ; DATA XREF=usage+465
0000000000007da2         db  0x00 ; '.'
                     aTestInvocation:
0000000000007da3         db         "test invocation", 0                        ; DATA XREF=usage+504
                     aMulticallInvoc:
0000000000007db3         db         "Multi-call invocation", 0                  ; DATA XREF=usage+552
                     aSha224sum:
0000000000007dc9         db         "sha224sum", 0                              ; DATA XREF=usage+569
                     aSha2Utilities:
0000000000007dd3         db         "sha2 utilities", 0                         ; DATA XREF=usage+581
                     aSha256sum:
0000000000007de2         db         "sha256sum", 0                              ; DATA XREF=usage+472
                     aSha384sum:
0000000000007dec         db         "sha384sum", 0                              ; DATA XREF=usage+516
                     aSha512sum:
0000000000007df6         db         "sha512sum", 0                              ; DATA XREF=usage+540
                     aNsOnlineHelpSn:
0000000000007e00         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+650
0000000000007e17         db  0x47 ; 'G'                                         ; DATA XREF=main+628, usage+678, usage+871, emit_bug_reporting_address+68
0000000000007e18         db  0x4e ; 'N'
0000000000007e19         db  0x55 ; 'U'
0000000000007e1a         db  0x20 ; ' '
                     aCoreutils:
0000000000007e1b         db         "coreutils", 0                              ; DATA XREF=main+107, main+119, usage+528
0000000000007e25         db  0x65 ; 'e'                                         ; DATA XREF=usage+717, usage+910
0000000000007e26         db  0x6e ; 'n'
0000000000007e27         db  0x5f ; '_'
0000000000007e28         db  0x00 ; '.'
                     aFullDocumentat:
0000000000007e29         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+745, usage+934
                     aExtraOperandS:
0000000000007e44         db         "extra operand %s", 0                       ; DATA XREF=add_file_name.constprop.7+389
                     aUsrlocalsharel:
0000000000007e55         db         "/usr/local/share/locale", 0                ; DATA XREF=main+100
0000000000007e6d         db  0x61 ; 'a'                                         ; DATA XREF=main+759
0000000000007e6e         db  0x75 ; 'u'
0000000000007e6f         db  0x74 ; 't'
0000000000007e70         db  0x6f ; 'o'
0000000000007e71         db  0x00 ; '.'
0000000000007e72         db  0x5c ; '\'                                         ; DATA XREF=main+1145
0000000000007e73         db  0x30 ; '0'
0000000000007e74         db  0x00 ; '.'
                     aMulticharacter:
0000000000007e75         db         "multi-character tab %s", 0                 ; DATA XREF=main+3686
                     aIncompatibleTa:
0000000000007e8c         db         "incompatible tabs", 0                      ; DATA XREF=main+3872
                     aMikeHaertel:
0000000000007e9e         db         "Mike Haertel", 0                           ; DATA XREF=main+621
0000000000007eab         db  0x2d ; '-'                                         ; DATA XREF=main+315
0000000000007eac         db  0x61 ; 'a'
0000000000007ead         db  0x3a ; ':'
0000000000007eae         db  0x65 ; 'e'
0000000000007eaf         db  0x3a ; ':'
0000000000007eb0         db  0x69 ; 'i'
0000000000007eb1         db  0x31 ; '1'
0000000000007eb2         db  0x3a ; ':'
0000000000007eb3         db  0x32 ; '2'
0000000000007eb4         db  0x3a ; ':'
0000000000007eb5         db  0x6a ; 'j'
0000000000007eb6         db  0x3a ; ':'
0000000000007eb7         db  0x6f ; 'o'
0000000000007eb8         db  0x3a ; ':'
0000000000007eb9         db  0x74 ; 't'
0000000000007eba         db  0x3a ; ':'
0000000000007ebb         db  0x76 ; 'v'
0000000000007ebc         db  0x3a ; ':'
0000000000007ebd         db  0x7a ; 'z'
0000000000007ebe         db  0x00 ; '.'
                     aMissingOperand_7ebf:        // aMissingOperand
0000000000007ebf         db         "missing operand", 0                        ; DATA XREF=main+3834
                     aMissingOperand:
0000000000007ecf         db         "missing operand after %s", 0               ; DATA XREF=main+3918
                     aInputIsNotInSo:
0000000000007ee8         db         "input is not in sorted order", 0           ; DATA XREF=main+3491
                     aIgnorecase:
0000000000007f05         db         "ignore-case", 0
0000000000007f11         db  0x6e ; 'n'
0000000000007f12         db  0x6f ; 'o'
                     aCheckorder:
0000000000007f13         db         "check-order", 0
                     aZeroterminated:
0000000000007f1f         db         "zero-terminated", 0
                     aHeader:
0000000000007f2f         db         "header", 0
                     aHelp:
0000000000007f36         db         "help", 0
                     aVersion:
0000000000007f3b         db         "version", 0
                     a831:
0000000000007f43         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000007f48         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000007f54         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000007f5b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000007f5c         db  0x00 ; '.'
                     aPosix:
0000000000007f5d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
0000000000007f63         align      8
                     aANullArgv0WasP:
0000000000007f68         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000007fa0         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000007fa8         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000007fa9         db  0x74 ; 't'
0000000000007faa         db  0x2d ; '-'                                         ; DATA XREF=main+1378, main+1424
0000000000007fab         db  0x00 ; '.'
0000000000007fac         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000007fad         db  0x80 ; '.'
0000000000007fae         db  0x98 ; '.'
0000000000007faf         db  0x00 ; '.'
0000000000007fb0         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000007fb1         db  0x80 ; '.'
0000000000007fb2         db  0x99 ; '.'
0000000000007fb3         db  0x00 ; '.'
0000000000007fb4         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000007fb5         db  0x07 ; '.'
0000000000007fb6         db  0x65 ; 'e'
0000000000007fb7         db  0x00 ; '.'
0000000000007fb8         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000007fb9         db  0xaf ; '.'
0000000000007fba         db  0x00 ; '.'
0000000000007fbb         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_4910+1451, sub_4910+1493, sub_4910+2429
0000000000007fbc         db  0x00 ; '.'
0000000000007fbd         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_4910+132, sub_4910+1338, sub_4910+1670, sub_4910+1697, sub_4910+2352
0000000000007fbe         db  0x00 ; '.'
0000000000007fbf         db  0x60 ; '`'                                         ; DATA XREF=sub_4910+1627, sub_4910+1654
0000000000007fc0         db  0x00 ; '.'
                     aLiteral:
0000000000007fc1         db         "literal", 0
                     aShell:
0000000000007fc9         db         "shell", 0
                     aShellalways:
0000000000007fcf         db         "shell-always", 0
0000000000007fdc         db  0x73 ; 's'
0000000000007fdd         db  0x68 ; 'h'
0000000000007fde         db  0x65 ; 'e'
0000000000007fdf         db  0x6c ; 'l'
0000000000007fe0         db  0x6c ; 'l'
0000000000007fe1         db  0x2d ; '-'
                     aEscape:
0000000000007fe2         db         "escape", 0
                     aShellescapealw:
0000000000007fe9         db         "shell-escape-always", 0
0000000000007ffd         db  0x63 ; 'c'
0000000000007ffe         db  0x00 ; '.'
                     aCmaybe:
0000000000007fff         db         "c-maybe", 0
                     aClocale:
0000000000008007         db         "clocale", 0
000000000000800f         align      32
                     switch_table_8020:        // switch_table
0000000000008020         dd         quotearg_buffer_restyled.loc_500a-switch_table_8020, quotearg_buffer_restyled.loc_4263-switch_table_8020, quotearg_buffer_restyled.loc_5238-switch_table_8020, quotearg_buffer_restyled.loc_5044-switch_table_8020 ; switch table used at 0x4261 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000008030         dd         quotearg_buffer_restyled.loc_4e34-switch_table_8020, quotearg_buffer_restyled.loc_4e90-switch_table_8020, quotearg_buffer_restyled.loc_4ee5-switch_table_8020, quotearg_buffer_restyled.loc_4f2a-switch_table_8020
0000000000008040         dd         3 dup (quotearg_buffer_restyled.loc_4f64-switch_table_8020)
000000000000804c         db  0x94 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000804d         db  0xc5 ; '.'
000000000000804e         db  0xff ; '.'
000000000000804f         db  0xff ; '.'
0000000000008050         db  0x7c ; '|'
0000000000008051         db  0xc6 ; '.'
0000000000008052         db  0xff ; '.'
0000000000008053         db  0xff ; '.'
0000000000008054         db  0x7c ; '|'
0000000000008055         db  0xc6 ; '.'
0000000000008056         db  0xff ; '.'
0000000000008057         db  0xff ; '.'
0000000000008058         db  0x7c ; '|'
0000000000008059         db  0xc6 ; '.'
000000000000805a         db  0xff ; '.'
000000000000805b         db  0xff ; '.'
000000000000805c         db  0x7c ; '|'
000000000000805d         db  0xc6 ; '.'
000000000000805e         db  0xff ; '.'
000000000000805f         db  0xff ; '.'
0000000000008060         db  0x7c ; '|'
0000000000008061         db  0xc6 ; '.'
0000000000008062         db  0xff ; '.'
0000000000008063         db  0xff ; '.'
0000000000008064         db  0x7c ; '|'
0000000000008065         db  0xc6 ; '.'
0000000000008066         db  0xff ; '.'
0000000000008067         db  0xff ; '.'
0000000000008068         db  0xd4 ; '.'
0000000000008069         db  0xc5 ; '.'
000000000000806a         db  0xff ; '.'
000000000000806b         db  0xff ; '.'
000000000000806c         db  0xdc ; '.'
000000000000806d         db  0xc4 ; '.'
000000000000806e         db  0xff ; '.'
000000000000806f         db  0xff ; '.'
0000000000008070         db  0x9c ; '.'
0000000000008071         db  0xc4 ; '.'
0000000000008072         db  0xff ; '.'
0000000000008073         db  0xff ; '.'
0000000000008074         db  0x64 ; 'd'
0000000000008075         db  0xc6 ; '.'
0000000000008076         db  0xff ; '.'
0000000000008077         db  0xff ; '.'
0000000000008078         db  0x54 ; 'T'
0000000000008079         db  0xc6 ; '.'
000000000000807a         db  0xff ; '.'
000000000000807b         db  0xff ; '.'
000000000000807c         db  0x44 ; 'D'
000000000000807d         db  0xc6 ; '.'
000000000000807e         db  0xff ; '.'
000000000000807f         db  0xff ; '.'
0000000000008080         db  0x34 ; '4'
0000000000008081         db  0xc6 ; '.'
0000000000008082         db  0xff ; '.'
0000000000008083         db  0xff ; '.'
0000000000008084         db  0x7c ; '|'
0000000000008085         db  0xc6 ; '.'
0000000000008086         db  0xff ; '.'
0000000000008087         db  0xff ; '.'
0000000000008088         db  0x7c ; '|'
0000000000008089         db  0xc6 ; '.'
000000000000808a         db  0xff ; '.'
000000000000808b         db  0xff ; '.'
000000000000808c         db  0x7c ; '|'
000000000000808d         db  0xc6 ; '.'
000000000000808e         db  0xff ; '.'
000000000000808f         db  0xff ; '.'
0000000000008090         db  0x7c ; '|'
0000000000008091         db  0xc6 ; '.'
0000000000008092         db  0xff ; '.'
0000000000008093         db  0xff ; '.'
0000000000008094         db  0x7c ; '|'
0000000000008095         db  0xc6 ; '.'
0000000000008096         db  0xff ; '.'
0000000000008097         db  0xff ; '.'
0000000000008098         db  0x7c ; '|'
0000000000008099         db  0xc6 ; '.'
000000000000809a         db  0xff ; '.'
000000000000809b         db  0xff ; '.'
000000000000809c         db  0x7c ; '|'
000000000000809d         db  0xc6 ; '.'
000000000000809e         db  0xff ; '.'
000000000000809f         db  0xff ; '.'
00000000000080a0         db  0x7c ; '|'
00000000000080a1         db  0xc6 ; '.'
00000000000080a2         db  0xff ; '.'
00000000000080a3         db  0xff ; '.'
00000000000080a4         db  0x7c ; '|'
00000000000080a5         db  0xc6 ; '.'
00000000000080a6         db  0xff ; '.'
00000000000080a7         db  0xff ; '.'
00000000000080a8         db  0x7c ; '|'
00000000000080a9         db  0xc6 ; '.'
00000000000080aa         db  0xff ; '.'
00000000000080ab         db  0xff ; '.'
00000000000080ac         db  0x7c ; '|'
00000000000080ad         db  0xc6 ; '.'
00000000000080ae         db  0xff ; '.'
00000000000080af         db  0xff ; '.'
00000000000080b0         db  0x7c ; '|'
00000000000080b1         db  0xc6 ; '.'
00000000000080b2         db  0xff ; '.'
00000000000080b3         db  0xff ; '.'
00000000000080b4         db  0x7c ; '|'
00000000000080b5         db  0xc6 ; '.'
00000000000080b6         db  0xff ; '.'
00000000000080b7         db  0xff ; '.'
00000000000080b8         db  0x7c ; '|'
00000000000080b9         db  0xc6 ; '.'
00000000000080ba         db  0xff ; '.'
00000000000080bb         db  0xff ; '.'
00000000000080bc         db  0x7c ; '|'
00000000000080bd         db  0xc6 ; '.'
00000000000080be         db  0xff ; '.'
00000000000080bf         db  0xff ; '.'
00000000000080c0         db  0x7c ; '|'
00000000000080c1         db  0xc6 ; '.'
00000000000080c2         db  0xff ; '.'
00000000000080c3         db  0xff ; '.'
00000000000080c4         db  0x7c ; '|'
00000000000080c5         db  0xc6 ; '.'
00000000000080c6         db  0xff ; '.'
00000000000080c7         db  0xff ; '.'
00000000000080c8         db  0x7c ; '|'
00000000000080c9         db  0xc6 ; '.'
00000000000080ca         db  0xff ; '.'
00000000000080cb         db  0xff ; '.'
00000000000080cc         db  0x24 ; '$'
00000000000080cd         db  0xc6 ; '.'
00000000000080ce         db  0xff ; '.'
00000000000080cf         db  0xff ; '.'
00000000000080d0         db  0x14 ; '.'
00000000000080d1         db  0xc6 ; '.'
00000000000080d2         db  0xff ; '.'
00000000000080d3         db  0xff ; '.'
00000000000080d4         db  0x14 ; '.'
00000000000080d5         db  0xc6 ; '.'
00000000000080d6         db  0xff ; '.'
00000000000080d7         db  0xff ; '.'
00000000000080d8         db  0xe4 ; '.'
00000000000080d9         db  0xc5 ; '.'
00000000000080da         db  0xff ; '.'
00000000000080db         db  0xff ; '.'
00000000000080dc         db  0x14 ; '.'
00000000000080dd         db  0xc6 ; '.'
00000000000080de         db  0xff ; '.'
00000000000080df         db  0xff ; '.'
00000000000080e0         db  0xbc ; '.'
00000000000080e1         db  0xc5 ; '.'
00000000000080e2         db  0xff ; '.'
00000000000080e3         db  0xff ; '.'
00000000000080e4         db  0x14 ; '.'
00000000000080e5         db  0xc6 ; '.'
00000000000080e6         db  0xff ; '.'
00000000000080e7         db  0xff ; '.'
00000000000080e8         db  0x77 ; 'w'
00000000000080e9         db  0xc4 ; '.'
00000000000080ea         db  0xff ; '.'
00000000000080eb         db  0xff ; '.'
00000000000080ec         db  0x14 ; '.'
00000000000080ed         db  0xc6 ; '.'
00000000000080ee         db  0xff ; '.'
00000000000080ef         db  0xff ; '.'
00000000000080f0         db  0x14 ; '.'
00000000000080f1         db  0xc6 ; '.'
00000000000080f2         db  0xff ; '.'
00000000000080f3         db  0xff ; '.'
00000000000080f4         db  0x14 ; '.'
00000000000080f5         db  0xc6 ; '.'
00000000000080f6         db  0xff ; '.'
00000000000080f7         db  0xff ; '.'
00000000000080f8         db  0xbc ; '.'
00000000000080f9         db  0xc5 ; '.'
00000000000080fa         db  0xff ; '.'
00000000000080fb         db  0xff ; '.'
00000000000080fc         db  0xbc ; '.'
00000000000080fd         db  0xc5 ; '.'
00000000000080fe         db  0xff ; '.'
00000000000080ff         db  0xff ; '.'
0000000000008100         db  0xbc ; '.'
0000000000008101         db  0xc5 ; '.'
0000000000008102         db  0xff ; '.'
0000000000008103         db  0xff ; '.'
0000000000008104         db  0xbc ; '.'
0000000000008105         db  0xc5 ; '.'
0000000000008106         db  0xff ; '.'
0000000000008107         db  0xff ; '.'
0000000000008108         db  0xbc ; '.'
0000000000008109         db  0xc5 ; '.'
000000000000810a         db  0xff ; '.'
000000000000810b         db  0xff ; '.'
000000000000810c         db  0xbc ; '.'
000000000000810d         db  0xc5 ; '.'
000000000000810e         db  0xff ; '.'
000000000000810f         db  0xff ; '.'
0000000000008110         db  0xbc ; '.'
0000000000008111         db  0xc5 ; '.'
0000000000008112         db  0xff ; '.'
0000000000008113         db  0xff ; '.'
0000000000008114         db  0xbc ; '.'
0000000000008115         db  0xc5 ; '.'
0000000000008116         db  0xff ; '.'
0000000000008117         db  0xff ; '.'
0000000000008118         db  0xbc ; '.'
0000000000008119         db  0xc5 ; '.'
000000000000811a         db  0xff ; '.'
000000000000811b         db  0xff ; '.'
000000000000811c         db  0xbc ; '.'
000000000000811d         db  0xc5 ; '.'
000000000000811e         db  0xff ; '.'
000000000000811f         db  0xff ; '.'
0000000000008120         db  0xbc ; '.'
0000000000008121         db  0xc5 ; '.'
0000000000008122         db  0xff ; '.'
0000000000008123         db  0xff ; '.'
0000000000008124         db  0xbc ; '.'
0000000000008125         db  0xc5 ; '.'
0000000000008126         db  0xff ; '.'
0000000000008127         db  0xff ; '.'
0000000000008128         db  0xbc ; '.'
0000000000008129         db  0xc5 ; '.'
000000000000812a         db  0xff ; '.'
000000000000812b         db  0xff ; '.'
000000000000812c         db  0xbc ; '.'
000000000000812d         db  0xc5 ; '.'
000000000000812e         db  0xff ; '.'
000000000000812f         db  0xff ; '.'
0000000000008130         db  0xbc ; '.'
0000000000008131         db  0xc5 ; '.'
0000000000008132         db  0xff ; '.'
0000000000008133         db  0xff ; '.'
0000000000008134         db  0xbc ; '.'
0000000000008135         db  0xc5 ; '.'
0000000000008136         db  0xff ; '.'
0000000000008137         db  0xff ; '.'
0000000000008138         db  0x14 ; '.'
0000000000008139         db  0xc6 ; '.'
000000000000813a         db  0xff ; '.'
000000000000813b         db  0xff ; '.'
000000000000813c         db  0x14 ; '.'
000000000000813d         db  0xc6 ; '.'
000000000000813e         db  0xff ; '.'
000000000000813f         db  0xff ; '.'
0000000000008140         db  0x14 ; '.'
0000000000008141         db  0xc6 ; '.'
0000000000008142         db  0xff ; '.'
0000000000008143         db  0xff ; '.'
0000000000008144         db  0x14 ; '.'
0000000000008145         db  0xc6 ; '.'
0000000000008146         db  0xff ; '.'
0000000000008147         db  0xff ; '.'
0000000000008148         db  0x47 ; 'G'
0000000000008149         db  0xc4 ; '.'
000000000000814a         db  0xff ; '.'
000000000000814b         db  0xff ; '.'
000000000000814c         db  0x7c ; '|'
000000000000814d         db  0xc6 ; '.'
000000000000814e         db  0xff ; '.'
000000000000814f         db  0xff ; '.'
0000000000008150         db  0xbc ; '.'
0000000000008151         db  0xc5 ; '.'
0000000000008152         db  0xff ; '.'
0000000000008153         db  0xff ; '.'
0000000000008154         db  0xbc ; '.'
0000000000008155         db  0xc5 ; '.'
0000000000008156         db  0xff ; '.'
0000000000008157         db  0xff ; '.'
0000000000008158         db  0xbc ; '.'
0000000000008159         db  0xc5 ; '.'
000000000000815a         db  0xff ; '.'
000000000000815b         db  0xff ; '.'
000000000000815c         db  0xbc ; '.'
000000000000815d         db  0xc5 ; '.'
000000000000815e         db  0xff ; '.'
000000000000815f         db  0xff ; '.'
0000000000008160         db  0xbc ; '.'
0000000000008161         db  0xc5 ; '.'
0000000000008162         db  0xff ; '.'
0000000000008163         db  0xff ; '.'
0000000000008164         db  0xbc ; '.'
0000000000008165         db  0xc5 ; '.'
0000000000008166         db  0xff ; '.'
0000000000008167         db  0xff ; '.'
0000000000008168         db  0xbc ; '.'
0000000000008169         db  0xc5 ; '.'
000000000000816a         db  0xff ; '.'
000000000000816b         db  0xff ; '.'
000000000000816c         db  0xbc ; '.'
000000000000816d         db  0xc5 ; '.'
000000000000816e         db  0xff ; '.'
000000000000816f         db  0xff ; '.'
0000000000008170         db  0xbc ; '.'
0000000000008171         db  0xc5 ; '.'
0000000000008172         db  0xff ; '.'
0000000000008173         db  0xff ; '.'
0000000000008174         db  0xbc ; '.'
0000000000008175         db  0xc5 ; '.'
0000000000008176         db  0xff ; '.'
0000000000008177         db  0xff ; '.'
0000000000008178         db  0xbc ; '.'
0000000000008179         db  0xc5 ; '.'
000000000000817a         db  0xff ; '.'
000000000000817b         db  0xff ; '.'
000000000000817c         db  0xbc ; '.'
000000000000817d         db  0xc5 ; '.'
000000000000817e         db  0xff ; '.'
000000000000817f         db  0xff ; '.'
0000000000008180         db  0xbc ; '.'
0000000000008181         db  0xc5 ; '.'
0000000000008182         db  0xff ; '.'
0000000000008183         db  0xff ; '.'
0000000000008184         db  0xbc ; '.'
0000000000008185         db  0xc5 ; '.'
0000000000008186         db  0xff ; '.'
0000000000008187         db  0xff ; '.'
0000000000008188         db  0xbc ; '.'
0000000000008189         db  0xc5 ; '.'
000000000000818a         db  0xff ; '.'
000000000000818b         db  0xff ; '.'
000000000000818c         db  0xbc ; '.'
000000000000818d         db  0xc5 ; '.'
000000000000818e         db  0xff ; '.'
000000000000818f         db  0xff ; '.'
0000000000008190         db  0xbc ; '.'
0000000000008191         db  0xc5 ; '.'
0000000000008192         db  0xff ; '.'
0000000000008193         db  0xff ; '.'
0000000000008194         db  0xbc ; '.'
0000000000008195         db  0xc5 ; '.'
0000000000008196         db  0xff ; '.'
0000000000008197         db  0xff ; '.'
0000000000008198         db  0xbc ; '.'
0000000000008199         db  0xc5 ; '.'
000000000000819a         db  0xff ; '.'
000000000000819b         db  0xff ; '.'
000000000000819c         db  0xbc ; '.'
000000000000819d         db  0xc5 ; '.'
000000000000819e         db  0xff ; '.'
000000000000819f         db  0xff ; '.'
00000000000081a0         db  0xbc ; '.'
00000000000081a1         db  0xc5 ; '.'
00000000000081a2         db  0xff ; '.'
00000000000081a3         db  0xff ; '.'
00000000000081a4         db  0xbc ; '.'
00000000000081a5         db  0xc5 ; '.'
00000000000081a6         db  0xff ; '.'
00000000000081a7         db  0xff ; '.'
00000000000081a8         db  0xbc ; '.'
00000000000081a9         db  0xc5 ; '.'
00000000000081aa         db  0xff ; '.'
00000000000081ab         db  0xff ; '.'
00000000000081ac         db  0xbc ; '.'
00000000000081ad         db  0xc5 ; '.'
00000000000081ae         db  0xff ; '.'
00000000000081af         db  0xff ; '.'
00000000000081b0         db  0xbc ; '.'
00000000000081b1         db  0xc5 ; '.'
00000000000081b2         db  0xff ; '.'
00000000000081b3         db  0xff ; '.'
00000000000081b4         db  0xbc ; '.'
00000000000081b5         db  0xc5 ; '.'
00000000000081b6         db  0xff ; '.'
00000000000081b7         db  0xff ; '.'
00000000000081b8         db  0x14 ; '.'
00000000000081b9         db  0xc6 ; '.'
00000000000081ba         db  0xff ; '.'
00000000000081bb         db  0xff ; '.'
00000000000081bc         db  0xec ; '.'
00000000000081bd         db  0xc4 ; '.'
00000000000081be         db  0xff ; '.'
00000000000081bf         db  0xff ; '.'
00000000000081c0         db  0xbc ; '.'
00000000000081c1         db  0xc5 ; '.'
00000000000081c2         db  0xff ; '.'
00000000000081c3         db  0xff ; '.'
00000000000081c4         db  0x14 ; '.'
00000000000081c5         db  0xc6 ; '.'
00000000000081c6         db  0xff ; '.'
00000000000081c7         db  0xff ; '.'
00000000000081c8         db  0xbc ; '.'
00000000000081c9         db  0xc5 ; '.'
00000000000081ca         db  0xff ; '.'
00000000000081cb         db  0xff ; '.'
00000000000081cc         db  0x14 ; '.'
00000000000081cd         db  0xc6 ; '.'
00000000000081ce         db  0xff ; '.'
00000000000081cf         db  0xff ; '.'
00000000000081d0         db  0xbc ; '.'
00000000000081d1         db  0xc5 ; '.'
00000000000081d2         db  0xff ; '.'
00000000000081d3         db  0xff ; '.'
00000000000081d4         db  0xbc ; '.'
00000000000081d5         db  0xc5 ; '.'
00000000000081d6         db  0xff ; '.'
00000000000081d7         db  0xff ; '.'
00000000000081d8         db  0xbc ; '.'
00000000000081d9         db  0xc5 ; '.'
00000000000081da         db  0xff ; '.'
00000000000081db         db  0xff ; '.'
00000000000081dc         db  0xbc ; '.'
00000000000081dd         db  0xc5 ; '.'
00000000000081de         db  0xff ; '.'
00000000000081df         db  0xff ; '.'
00000000000081e0         db  0xbc ; '.'
00000000000081e1         db  0xc5 ; '.'
00000000000081e2         db  0xff ; '.'
00000000000081e3         db  0xff ; '.'
00000000000081e4         db  0xbc ; '.'
00000000000081e5         db  0xc5 ; '.'
00000000000081e6         db  0xff ; '.'
00000000000081e7         db  0xff ; '.'
00000000000081e8         db  0xbc ; '.'
00000000000081e9         db  0xc5 ; '.'
00000000000081ea         db  0xff ; '.'
00000000000081eb         db  0xff ; '.'
00000000000081ec         db  0xbc ; '.'
00000000000081ed         db  0xc5 ; '.'
00000000000081ee         db  0xff ; '.'
00000000000081ef         db  0xff ; '.'
00000000000081f0         db  0xbc ; '.'
00000000000081f1         db  0xc5 ; '.'
00000000000081f2         db  0xff ; '.'
00000000000081f3         db  0xff ; '.'
00000000000081f4         db  0xbc ; '.'
00000000000081f5         db  0xc5 ; '.'
00000000000081f6         db  0xff ; '.'
00000000000081f7         db  0xff ; '.'
00000000000081f8         db  0xbc ; '.'
00000000000081f9         db  0xc5 ; '.'
00000000000081fa         db  0xff ; '.'
00000000000081fb         db  0xff ; '.'
00000000000081fc         db  0xbc ; '.'
00000000000081fd         db  0xc5 ; '.'
00000000000081fe         db  0xff ; '.'
00000000000081ff         db  0xff ; '.'
0000000000008200         db  0xbc ; '.'
0000000000008201         db  0xc5 ; '.'
0000000000008202         db  0xff ; '.'
0000000000008203         db  0xff ; '.'
0000000000008204         db  0xbc ; '.'
0000000000008205         db  0xc5 ; '.'
0000000000008206         db  0xff ; '.'
0000000000008207         db  0xff ; '.'
0000000000008208         db  0xbc ; '.'
0000000000008209         db  0xc5 ; '.'
000000000000820a         db  0xff ; '.'
000000000000820b         db  0xff ; '.'
000000000000820c         db  0xbc ; '.'
000000000000820d         db  0xc5 ; '.'
000000000000820e         db  0xff ; '.'
000000000000820f         db  0xff ; '.'
0000000000008210         db  0xbc ; '.'
0000000000008211         db  0xc5 ; '.'
0000000000008212         db  0xff ; '.'
0000000000008213         db  0xff ; '.'
0000000000008214         db  0xbc ; '.'
0000000000008215         db  0xc5 ; '.'
0000000000008216         db  0xff ; '.'
0000000000008217         db  0xff ; '.'
0000000000008218         db  0xbc ; '.'
0000000000008219         db  0xc5 ; '.'
000000000000821a         db  0xff ; '.'
000000000000821b         db  0xff ; '.'
000000000000821c         db  0xbc ; '.'
000000000000821d         db  0xc5 ; '.'
000000000000821e         db  0xff ; '.'
000000000000821f         db  0xff ; '.'
0000000000008220         db  0xbc ; '.'
0000000000008221         db  0xc5 ; '.'
0000000000008222         db  0xff ; '.'
0000000000008223         db  0xff ; '.'
0000000000008224         db  0xbc ; '.'
0000000000008225         db  0xc5 ; '.'
0000000000008226         db  0xff ; '.'
0000000000008227         db  0xff ; '.'
0000000000008228         db  0xbc ; '.'
0000000000008229         db  0xc5 ; '.'
000000000000822a         db  0xff ; '.'
000000000000822b         db  0xff ; '.'
000000000000822c         db  0xbc ; '.'
000000000000822d         db  0xc5 ; '.'
000000000000822e         db  0xff ; '.'
000000000000822f         db  0xff ; '.'
0000000000008230         db  0xbc ; '.'
0000000000008231         db  0xc5 ; '.'
0000000000008232         db  0xff ; '.'
0000000000008233         db  0xff ; '.'
0000000000008234         db  0xbc ; '.'
0000000000008235         db  0xc5 ; '.'
0000000000008236         db  0xff ; '.'
0000000000008237         db  0xff ; '.'
0000000000008238         db  0x77 ; 'w'
0000000000008239         db  0xc3 ; '.'
000000000000823a         db  0xff ; '.'
000000000000823b         db  0xff ; '.'
000000000000823c         db  0x14 ; '.'
000000000000823d         db  0xc6 ; '.'
000000000000823e         db  0xff ; '.'
000000000000823f         db  0xff ; '.'
0000000000008240         db  0x77 ; 'w'
0000000000008241         db  0xc3 ; '.'
0000000000008242         db  0xff ; '.'
0000000000008243         db  0xff ; '.'
0000000000008244         db  0xe4 ; '.'
0000000000008245         db  0xc5 ; '.'
0000000000008246         db  0xff ; '.'
0000000000008247         db  0xff ; '.'
0000000000008248         db  0x68 ; 'h'                                         ; DATA XREF=sub_46b0+137
0000000000008249         db  0xc5 ; '.'
000000000000824a         db  0xff ; '.'
000000000000824b         db  0xff ; '.'
000000000000824c         db  0x78 ; 'x'
000000000000824d         db  0xc4 ; '.'
000000000000824e         db  0xff ; '.'
000000000000824f         db  0xff ; '.'
0000000000008250         db  0x78 ; 'x'
0000000000008251         db  0xc4 ; '.'
0000000000008252         db  0xff ; '.'
0000000000008253         db  0xff ; '.'
0000000000008254         db  0x78 ; 'x'
0000000000008255         db  0xc4 ; '.'
0000000000008256         db  0xff ; '.'
0000000000008257         db  0xff ; '.'
0000000000008258         db  0x78 ; 'x'
0000000000008259         db  0xc4 ; '.'
000000000000825a         db  0xff ; '.'
000000000000825b         db  0xff ; '.'
000000000000825c         db  0x78 ; 'x'
000000000000825d         db  0xc4 ; '.'
000000000000825e         db  0xff ; '.'
000000000000825f         db  0xff ; '.'
0000000000008260         db  0x78 ; 'x'
0000000000008261         db  0xc4 ; '.'
0000000000008262         db  0xff ; '.'
0000000000008263         db  0xff ; '.'
0000000000008264         db  0x58 ; 'X'
0000000000008265         db  0xc5 ; '.'
0000000000008266         db  0xff ; '.'
0000000000008267         db  0xff ; '.'
0000000000008268         db  0xa8 ; '.'
0000000000008269         db  0xc6 ; '.'
000000000000826a         db  0xff ; '.'
000000000000826b         db  0xff ; '.'
000000000000826c         db  0x90 ; '.'
000000000000826d         db  0xc6 ; '.'
000000000000826e         db  0xff ; '.'
000000000000826f         db  0xff ; '.'
0000000000008270         db  0x40 ; '@'
0000000000008271         db  0xc5 ; '.'
0000000000008272         db  0xff ; '.'
0000000000008273         db  0xff ; '.'
0000000000008274         db  0x80 ; '.'
0000000000008275         db  0xc6 ; '.'
0000000000008276         db  0xff ; '.'
0000000000008277         db  0xff ; '.'
0000000000008278         db  0x28 ; '('
0000000000008279         db  0xc5 ; '.'
000000000000827a         db  0xff ; '.'
000000000000827b         db  0xff ; '.'
000000000000827c         db  0x68 ; 'h'
000000000000827d         db  0xc6 ; '.'
000000000000827e         db  0xff ; '.'
000000000000827f         db  0xff ; '.'
0000000000008280         db  0x78 ; 'x'
0000000000008281         db  0xc4 ; '.'
0000000000008282         db  0xff ; '.'
0000000000008283         db  0xff ; '.'
0000000000008284         db  0x78 ; 'x'
0000000000008285         db  0xc4 ; '.'
0000000000008286         db  0xff ; '.'
0000000000008287         db  0xff ; '.'
0000000000008288         db  0x78 ; 'x'
0000000000008289         db  0xc4 ; '.'
000000000000828a         db  0xff ; '.'
000000000000828b         db  0xff ; '.'
000000000000828c         db  0x78 ; 'x'
000000000000828d         db  0xc4 ; '.'
000000000000828e         db  0xff ; '.'
000000000000828f         db  0xff ; '.'
0000000000008290         db  0x78 ; 'x'
0000000000008291         db  0xc4 ; '.'
0000000000008292         db  0xff ; '.'
0000000000008293         db  0xff ; '.'
0000000000008294         db  0x78 ; 'x'
0000000000008295         db  0xc4 ; '.'
0000000000008296         db  0xff ; '.'
0000000000008297         db  0xff ; '.'
0000000000008298         db  0x78 ; 'x'
0000000000008299         db  0xc4 ; '.'
000000000000829a         db  0xff ; '.'
000000000000829b         db  0xff ; '.'
000000000000829c         db  0x78 ; 'x'
000000000000829d         db  0xc4 ; '.'
000000000000829e         db  0xff ; '.'
000000000000829f         db  0xff ; '.'
00000000000082a0         db  0x78 ; 'x'
00000000000082a1         db  0xc4 ; '.'
00000000000082a2         db  0xff ; '.'
00000000000082a3         db  0xff ; '.'
00000000000082a4         db  0x78 ; 'x'
00000000000082a5         db  0xc4 ; '.'
00000000000082a6         db  0xff ; '.'
00000000000082a7         db  0xff ; '.'
00000000000082a8         db  0x78 ; 'x'
00000000000082a9         db  0xc4 ; '.'
00000000000082aa         db  0xff ; '.'
00000000000082ab         db  0xff ; '.'
00000000000082ac         db  0x78 ; 'x'
00000000000082ad         db  0xc4 ; '.'
00000000000082ae         db  0xff ; '.'
00000000000082af         db  0xff ; '.'
00000000000082b0         db  0x78 ; 'x'
00000000000082b1         db  0xc4 ; '.'
00000000000082b2         db  0xff ; '.'
00000000000082b3         db  0xff ; '.'
00000000000082b4         db  0x78 ; 'x'
00000000000082b5         db  0xc4 ; '.'
00000000000082b6         db  0xff ; '.'
00000000000082b7         db  0xff ; '.'
00000000000082b8         db  0x78 ; 'x'
00000000000082b9         db  0xc4 ; '.'
00000000000082ba         db  0xff ; '.'
00000000000082bb         db  0xff ; '.'
00000000000082bc         db  0x78 ; 'x'
00000000000082bd         db  0xc4 ; '.'
00000000000082be         db  0xff ; '.'
00000000000082bf         db  0xff ; '.'
00000000000082c0         db  0x78 ; 'x'
00000000000082c1         db  0xc4 ; '.'
00000000000082c2         db  0xff ; '.'
00000000000082c3         db  0xff ; '.'
00000000000082c4         db  0x78 ; 'x'
00000000000082c5         db  0xc4 ; '.'
00000000000082c6         db  0xff ; '.'
00000000000082c7         db  0xff ; '.'
00000000000082c8         db  0x50 ; 'P'
00000000000082c9         db  0xc6 ; '.'
00000000000082ca         db  0xff ; '.'
00000000000082cb         db  0xff ; '.'
00000000000082cc         db  0x38 ; '8'
00000000000082cd         db  0xc6 ; '.'
00000000000082ce         db  0xff ; '.'
00000000000082cf         db  0xff ; '.'
00000000000082d0         db  0x38 ; '8'
00000000000082d1         db  0xc6 ; '.'
00000000000082d2         db  0xff ; '.'
00000000000082d3         db  0xff ; '.'
00000000000082d4         db  0x20 ; ' '
00000000000082d5         db  0xc6 ; '.'
00000000000082d6         db  0xff ; '.'
00000000000082d7         db  0xff ; '.'
00000000000082d8         db  0x38 ; '8'
00000000000082d9         db  0xc6 ; '.'
00000000000082da         db  0xff ; '.'
00000000000082db         db  0xff ; '.'
00000000000082dc         db  0x08 ; '.'
00000000000082dd         db  0xc6 ; '.'
00000000000082de         db  0xff ; '.'
00000000000082df         db  0xff ; '.'
00000000000082e0         db  0x38 ; '8'
00000000000082e1         db  0xc6 ; '.'
00000000000082e2         db  0xff ; '.'
00000000000082e3         db  0xff ; '.'
00000000000082e4         db  0x78 ; 'x'
00000000000082e5         db  0xc2 ; '.'
00000000000082e6         db  0xff ; '.'
00000000000082e7         db  0xff ; '.'
00000000000082e8         db  0x38 ; '8'
00000000000082e9         db  0xc6 ; '.'
00000000000082ea         db  0xff ; '.'
00000000000082eb         db  0xff ; '.'
00000000000082ec         db  0x38 ; '8'
00000000000082ed         db  0xc6 ; '.'
00000000000082ee         db  0xff ; '.'
00000000000082ef         db  0xff ; '.'
00000000000082f0         db  0x38 ; '8'
00000000000082f1         db  0xc6 ; '.'
00000000000082f2         db  0xff ; '.'
00000000000082f3         db  0xff ; '.'
00000000000082f4         db  0x08 ; '.'
00000000000082f5         db  0xc6 ; '.'
00000000000082f6         db  0xff ; '.'
00000000000082f7         db  0xff ; '.'
00000000000082f8         db  0x08 ; '.'
00000000000082f9         db  0xc6 ; '.'
00000000000082fa         db  0xff ; '.'
00000000000082fb         db  0xff ; '.'
00000000000082fc         db  0x08 ; '.'
00000000000082fd         db  0xc6 ; '.'
00000000000082fe         db  0xff ; '.'
00000000000082ff         db  0xff ; '.'
0000000000008300         db  0x08 ; '.'
0000000000008301         db  0xc6 ; '.'
0000000000008302         db  0xff ; '.'
0000000000008303         db  0xff ; '.'
0000000000008304         db  0x08 ; '.'
0000000000008305         db  0xc6 ; '.'
0000000000008306         db  0xff ; '.'
0000000000008307         db  0xff ; '.'
0000000000008308         db  0x08 ; '.'
0000000000008309         db  0xc6 ; '.'
000000000000830a         db  0xff ; '.'
000000000000830b         db  0xff ; '.'
000000000000830c         db  0x08 ; '.'
000000000000830d         db  0xc6 ; '.'
000000000000830e         db  0xff ; '.'
000000000000830f         db  0xff ; '.'
0000000000008310         db  0x08 ; '.'
0000000000008311         db  0xc6 ; '.'
0000000000008312         db  0xff ; '.'
0000000000008313         db  0xff ; '.'
0000000000008314         db  0x08 ; '.'
0000000000008315         db  0xc6 ; '.'
0000000000008316         db  0xff ; '.'
0000000000008317         db  0xff ; '.'
0000000000008318         db  0x08 ; '.'
0000000000008319         db  0xc6 ; '.'
000000000000831a         db  0xff ; '.'
000000000000831b         db  0xff ; '.'
000000000000831c         db  0x08 ; '.'
000000000000831d         db  0xc6 ; '.'
000000000000831e         db  0xff ; '.'
000000000000831f         db  0xff ; '.'
0000000000008320         db  0x08 ; '.'
0000000000008321         db  0xc6 ; '.'
0000000000008322         db  0xff ; '.'
0000000000008323         db  0xff ; '.'
0000000000008324         db  0x08 ; '.'
0000000000008325         db  0xc6 ; '.'
0000000000008326         db  0xff ; '.'
0000000000008327         db  0xff ; '.'
0000000000008328         db  0x08 ; '.'
0000000000008329         db  0xc6 ; '.'
000000000000832a         db  0xff ; '.'
000000000000832b         db  0xff ; '.'
000000000000832c         db  0x08 ; '.'
000000000000832d         db  0xc6 ; '.'
000000000000832e         db  0xff ; '.'
000000000000832f         db  0xff ; '.'
0000000000008330         db  0x08 ; '.'
0000000000008331         db  0xc6 ; '.'
0000000000008332         db  0xff ; '.'
0000000000008333         db  0xff ; '.'
0000000000008334         db  0x38 ; '8'
0000000000008335         db  0xc6 ; '.'
0000000000008336         db  0xff ; '.'
0000000000008337         db  0xff ; '.'
0000000000008338         db  0x38 ; '8'
0000000000008339         db  0xc6 ; '.'
000000000000833a         db  0xff ; '.'
000000000000833b         db  0xff ; '.'
000000000000833c         db  0x38 ; '8'
000000000000833d         db  0xc6 ; '.'
000000000000833e         db  0xff ; '.'
000000000000833f         db  0xff ; '.'
0000000000008340         db  0x38 ; '8'
0000000000008341         db  0xc6 ; '.'
0000000000008342         db  0xff ; '.'
0000000000008343         db  0xff ; '.'
0000000000008344         db  0x48 ; 'H'
0000000000008345         db  0xc2 ; '.'
0000000000008346         db  0xff ; '.'
0000000000008347         db  0xff ; '.'
0000000000008348         db  0x78 ; 'x'
0000000000008349         db  0xc4 ; '.'
000000000000834a         db  0xff ; '.'
000000000000834b         db  0xff ; '.'
000000000000834c         db  0x08 ; '.'
000000000000834d         db  0xc6 ; '.'
000000000000834e         db  0xff ; '.'
000000000000834f         db  0xff ; '.'
0000000000008350         db  0x08 ; '.'
0000000000008351         db  0xc6 ; '.'
0000000000008352         db  0xff ; '.'
0000000000008353         db  0xff ; '.'
0000000000008354         db  0x08 ; '.'
0000000000008355         db  0xc6 ; '.'
0000000000008356         db  0xff ; '.'
0000000000008357         db  0xff ; '.'
0000000000008358         db  0x08 ; '.'
0000000000008359         db  0xc6 ; '.'
000000000000835a         db  0xff ; '.'
000000000000835b         db  0xff ; '.'
000000000000835c         db  0x08 ; '.'
000000000000835d         db  0xc6 ; '.'
000000000000835e         db  0xff ; '.'
000000000000835f         db  0xff ; '.'
0000000000008360         db  0x08 ; '.'
0000000000008361         db  0xc6 ; '.'
0000000000008362         db  0xff ; '.'
0000000000008363         db  0xff ; '.'
0000000000008364         db  0x08 ; '.'
0000000000008365         db  0xc6 ; '.'
0000000000008366         db  0xff ; '.'
0000000000008367         db  0xff ; '.'
0000000000008368         db  0x08 ; '.'
0000000000008369         db  0xc6 ; '.'
000000000000836a         db  0xff ; '.'
000000000000836b         db  0xff ; '.'
000000000000836c         db  0x08 ; '.'
000000000000836d         db  0xc6 ; '.'
000000000000836e         db  0xff ; '.'
000000000000836f         db  0xff ; '.'
0000000000008370         db  0x08 ; '.'
0000000000008371         db  0xc6 ; '.'
0000000000008372         db  0xff ; '.'
0000000000008373         db  0xff ; '.'
0000000000008374         db  0x08 ; '.'
0000000000008375         db  0xc6 ; '.'
0000000000008376         db  0xff ; '.'
0000000000008377         db  0xff ; '.'
0000000000008378         db  0x08 ; '.'
0000000000008379         db  0xc6 ; '.'
000000000000837a         db  0xff ; '.'
000000000000837b         db  0xff ; '.'
000000000000837c         db  0x08 ; '.'
000000000000837d         db  0xc6 ; '.'
000000000000837e         db  0xff ; '.'
000000000000837f         db  0xff ; '.'
0000000000008380         db  0x08 ; '.'
0000000000008381         db  0xc6 ; '.'
0000000000008382         db  0xff ; '.'
0000000000008383         db  0xff ; '.'
0000000000008384         db  0x08 ; '.'
0000000000008385         db  0xc6 ; '.'
0000000000008386         db  0xff ; '.'
0000000000008387         db  0xff ; '.'
0000000000008388         db  0x08 ; '.'
0000000000008389         db  0xc6 ; '.'
000000000000838a         db  0xff ; '.'
000000000000838b         db  0xff ; '.'
000000000000838c         db  0x08 ; '.'
000000000000838d         db  0xc6 ; '.'
000000000000838e         db  0xff ; '.'
000000000000838f         db  0xff ; '.'
0000000000008390         db  0x08 ; '.'
0000000000008391         db  0xc6 ; '.'
0000000000008392         db  0xff ; '.'
0000000000008393         db  0xff ; '.'
0000000000008394         db  0x08 ; '.'
0000000000008395         db  0xc6 ; '.'
0000000000008396         db  0xff ; '.'
0000000000008397         db  0xff ; '.'
0000000000008398         db  0x08 ; '.'
0000000000008399         db  0xc6 ; '.'
000000000000839a         db  0xff ; '.'
000000000000839b         db  0xff ; '.'
000000000000839c         db  0x08 ; '.'
000000000000839d         db  0xc6 ; '.'
000000000000839e         db  0xff ; '.'
000000000000839f         db  0xff ; '.'
00000000000083a0         db  0x08 ; '.'
00000000000083a1         db  0xc6 ; '.'
00000000000083a2         db  0xff ; '.'
00000000000083a3         db  0xff ; '.'
00000000000083a4         db  0x08 ; '.'
00000000000083a5         db  0xc6 ; '.'
00000000000083a6         db  0xff ; '.'
00000000000083a7         db  0xff ; '.'
00000000000083a8         db  0x08 ; '.'
00000000000083a9         db  0xc6 ; '.'
00000000000083aa         db  0xff ; '.'
00000000000083ab         db  0xff ; '.'
00000000000083ac         db  0x08 ; '.'
00000000000083ad         db  0xc6 ; '.'
00000000000083ae         db  0xff ; '.'
00000000000083af         db  0xff ; '.'
00000000000083b0         db  0x08 ; '.'
00000000000083b1         db  0xc6 ; '.'
00000000000083b2         db  0xff ; '.'
00000000000083b3         db  0xff ; '.'
00000000000083b4         db  0x38 ; '8'
00000000000083b5         db  0xc6 ; '.'
00000000000083b6         db  0xff ; '.'
00000000000083b7         db  0xff ; '.'
00000000000083b8         db  0x08 ; '.'
00000000000083b9         db  0xc5 ; '.'
00000000000083ba         db  0xff ; '.'
00000000000083bb         db  0xff ; '.'
00000000000083bc         db  0x08 ; '.'
00000000000083bd         db  0xc6 ; '.'
00000000000083be         db  0xff ; '.'
00000000000083bf         db  0xff ; '.'
00000000000083c0         db  0x38 ; '8'
00000000000083c1         db  0xc6 ; '.'
00000000000083c2         db  0xff ; '.'
00000000000083c3         db  0xff ; '.'
00000000000083c4         db  0x08 ; '.'
00000000000083c5         db  0xc6 ; '.'
00000000000083c6         db  0xff ; '.'
00000000000083c7         db  0xff ; '.'
00000000000083c8         db  0x38 ; '8'
00000000000083c9         db  0xc6 ; '.'
00000000000083ca         db  0xff ; '.'
00000000000083cb         db  0xff ; '.'
00000000000083cc         db  0x08 ; '.'
00000000000083cd         db  0xc6 ; '.'
00000000000083ce         db  0xff ; '.'
00000000000083cf         db  0xff ; '.'
00000000000083d0         db  0x08 ; '.'
00000000000083d1         db  0xc6 ; '.'
00000000000083d2         db  0xff ; '.'
00000000000083d3         db  0xff ; '.'
00000000000083d4         db  0x08 ; '.'
00000000000083d5         db  0xc6 ; '.'
00000000000083d6         db  0xff ; '.'
00000000000083d7         db  0xff ; '.'
00000000000083d8         db  0x08 ; '.'
00000000000083d9         db  0xc6 ; '.'
00000000000083da         db  0xff ; '.'
00000000000083db         db  0xff ; '.'
00000000000083dc         db  0x08 ; '.'
00000000000083dd         db  0xc6 ; '.'
00000000000083de         db  0xff ; '.'
00000000000083df         db  0xff ; '.'
00000000000083e0         db  0x08 ; '.'
00000000000083e1         db  0xc6 ; '.'
00000000000083e2         db  0xff ; '.'
00000000000083e3         db  0xff ; '.'
00000000000083e4         db  0x08 ; '.'
00000000000083e5         db  0xc6 ; '.'
00000000000083e6         db  0xff ; '.'
00000000000083e7         db  0xff ; '.'
00000000000083e8         db  0x08 ; '.'
00000000000083e9         db  0xc6 ; '.'
00000000000083ea         db  0xff ; '.'
00000000000083eb         db  0xff ; '.'
00000000000083ec         db  0x08 ; '.'
00000000000083ed         db  0xc6 ; '.'
00000000000083ee         db  0xff ; '.'
00000000000083ef         db  0xff ; '.'
00000000000083f0         db  0x08 ; '.'
00000000000083f1         db  0xc6 ; '.'
00000000000083f2         db  0xff ; '.'
00000000000083f3         db  0xff ; '.'
00000000000083f4         db  0x08 ; '.'
00000000000083f5         db  0xc6 ; '.'
00000000000083f6         db  0xff ; '.'
00000000000083f7         db  0xff ; '.'
00000000000083f8         db  0x08 ; '.'
00000000000083f9         db  0xc6 ; '.'
00000000000083fa         db  0xff ; '.'
00000000000083fb         db  0xff ; '.'
00000000000083fc         db  0x08 ; '.'
00000000000083fd         db  0xc6 ; '.'
00000000000083fe         db  0xff ; '.'
00000000000083ff         db  0xff ; '.'
0000000000008400         db  0x08 ; '.'
0000000000008401         db  0xc6 ; '.'
0000000000008402         db  0xff ; '.'
0000000000008403         db  0xff ; '.'
0000000000008404         db  0x08 ; '.'
0000000000008405         db  0xc6 ; '.'
0000000000008406         db  0xff ; '.'
0000000000008407         db  0xff ; '.'
0000000000008408         db  0x08 ; '.'
0000000000008409         db  0xc6 ; '.'
000000000000840a         db  0xff ; '.'
000000000000840b         db  0xff ; '.'
000000000000840c         db  0x08 ; '.'
000000000000840d         db  0xc6 ; '.'
000000000000840e         db  0xff ; '.'
000000000000840f         db  0xff ; '.'
0000000000008410         db  0x08 ; '.'
0000000000008411         db  0xc6 ; '.'
0000000000008412         db  0xff ; '.'
0000000000008413         db  0xff ; '.'
0000000000008414         db  0x08 ; '.'
0000000000008415         db  0xc6 ; '.'
0000000000008416         db  0xff ; '.'
0000000000008417         db  0xff ; '.'
0000000000008418         db  0x08 ; '.'
0000000000008419         db  0xc6 ; '.'
000000000000841a         db  0xff ; '.'
000000000000841b         db  0xff ; '.'
000000000000841c         db  0x08 ; '.'
000000000000841d         db  0xc6 ; '.'
000000000000841e         db  0xff ; '.'
000000000000841f         db  0xff ; '.'
0000000000008420         db  0x08 ; '.'
0000000000008421         db  0xc6 ; '.'
0000000000008422         db  0xff ; '.'
0000000000008423         db  0xff ; '.'
0000000000008424         db  0x08 ; '.'
0000000000008425         db  0xc6 ; '.'
0000000000008426         db  0xff ; '.'
0000000000008427         db  0xff ; '.'
0000000000008428         db  0x08 ; '.'
0000000000008429         db  0xc6 ; '.'
000000000000842a         db  0xff ; '.'
000000000000842b         db  0xff ; '.'
000000000000842c         db  0x08 ; '.'
000000000000842d         db  0xc6 ; '.'
000000000000842e         db  0xff ; '.'
000000000000842f         db  0xff ; '.'
0000000000008430         db  0x08 ; '.'
0000000000008431         db  0xc6 ; '.'
0000000000008432         db  0xff ; '.'
0000000000008433         db  0xff ; '.'
0000000000008434         db  0x78 ; 'x'
0000000000008435         db  0xc1 ; '.'
0000000000008436         db  0xff ; '.'
0000000000008437         db  0xff ; '.'
0000000000008438         db  0x38 ; '8'
0000000000008439         db  0xc6 ; '.'
000000000000843a         db  0xff ; '.'
000000000000843b         db  0xff ; '.'
000000000000843c         db  0x78 ; 'x'
000000000000843d         db  0xc1 ; '.'
000000000000843e         db  0xff ; '.'
000000000000843f         db  0xff ; '.'
0000000000008440         db  0x20 ; ' '
0000000000008441         db  0xc6 ; '.'
0000000000008442         db  0xff ; '.'
0000000000008443         db  0xff ; '.'
0000000000008444         db  0x00 ; '.'
0000000000008445         db  0x00 ; '.'
0000000000008446         db  0x00 ; '.'
0000000000008447         db  0x00 ; '.'
0000000000008448         db  0x00 ; '.'
0000000000008449         db  0x00 ; '.'
000000000000844a         db  0x00 ; '.'
000000000000844b         db  0x00 ; '.'
000000000000844c         db  0x00 ; '.'
000000000000844d         db  0x00 ; '.'
000000000000844e         db  0x00 ; '.'
000000000000844f         db  0x00 ; '.'
0000000000008450         db  0x00 ; '.'
0000000000008451         db  0x00 ; '.'
0000000000008452         db  0x00 ; '.'
0000000000008453         db  0x00 ; '.'
0000000000008454         db  0x00 ; '.'
0000000000008455         db  0x00 ; '.'
0000000000008456         db  0x00 ; '.'
0000000000008457         db  0x00 ; '.'
0000000000008458         db  0x00 ; '.'
0000000000008459         db  0x00 ; '.'
000000000000845a         db  0x00 ; '.'
000000000000845b         db  0x00 ; '.'
000000000000845c         db  0x00 ; '.'
000000000000845d         db  0x00 ; '.'
000000000000845e         db  0x00 ; '.'
000000000000845f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000008460         db  0x00 ; '.'
0000000000008461         db  0x00 ; '.'
0000000000008462         db  0x00 ; '.'
0000000000008463         db  0x00 ; '.'
0000000000008464         db  0x01 ; '.'
0000000000008465         db  0x00 ; '.'
0000000000008466         db  0x00 ; '.'
0000000000008467         db  0x00 ; '.'
0000000000008468         db  0x02 ; '.'
0000000000008469         db  0x00 ; '.'
000000000000846a         db  0x00 ; '.'
000000000000846b         db  0x00 ; '.'
000000000000846c         db  0x03 ; '.'
000000000000846d         db  0x00 ; '.'
000000000000846e         db  0x00 ; '.'
000000000000846f         db  0x00 ; '.'
0000000000008470         db  0x04 ; '.'
0000000000008471         db  0x00 ; '.'
0000000000008472         db  0x00 ; '.'
0000000000008473         db  0x00 ; '.'
0000000000008474         db  0x05 ; '.'
0000000000008475         db  0x00 ; '.'
0000000000008476         db  0x00 ; '.'
0000000000008477         db  0x00 ; '.'
0000000000008478         db  0x06 ; '.'
0000000000008479         db  0x00 ; '.'
000000000000847a         db  0x00 ; '.'
000000000000847b         db  0x00 ; '.'
000000000000847c         db  0x07 ; '.'
000000000000847d         db  0x00 ; '.'
000000000000847e         db  0x00 ; '.'
000000000000847f         db  0x00 ; '.'
0000000000008480         db  0x08 ; '.'
0000000000008481         db  0x00 ; '.'
0000000000008482         db  0x00 ; '.'
0000000000008483         db  0x00 ; '.'
0000000000008484         db  0x09 ; '.'
0000000000008485         db  0x00 ; '.'
0000000000008486         db  0x00 ; '.'
0000000000008487         db  0x00 ; '.'
                     aSSSn:
0000000000008488         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000008494         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000849b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000849c         db  0x43 ; 'C'
000000000000849d         db  0x29 ; ')'
000000000000849e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000849f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000084af         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000084c6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000084e2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000084f7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000850d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000008521         align      8
                     aNlicenseGplv3G:
0000000000008528         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000085f4         align      8
                     aWrittenBySSSna:
00000000000085f8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_8618:        // aWrittenBySSSns
0000000000008618         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000863c         align      64
                     aWrittenBySSSns_8640:        // aWrittenBySSSns
0000000000008640         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_8668:        // aWrittenBySSSns
0000000000008668         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000008694         align      8
                     aWrittenBySSSns_8698:        // aWrittenBySSSns
0000000000008698         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000086c8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000086fc         align      256
                     aWrittenBySSSns_8700:        // aWrittenBySSSns
0000000000008700         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000873c         align      64
                     aGeneralHelpUsi:
0000000000008740         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000008781         align      4
                     switch_table_8784:        // switch_table
0000000000008784         dd         version_etc_arn.loc_5ea6-switch_table_8784, version_etc_arn.loc_5f38-switch_table_8784, version_etc_arn.loc_5f78-switch_table_8784, version_etc_arn.loc_5fc0-switch_table_8784 ; switch table used at 0x5e24 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000008794         dd         version_etc_arn.loc_6010-switch_table_8784, version_etc_arn.loc_6068-switch_table_8784, version_etc_arn.loc_6098-switch_table_8784, version_etc_arn.loc_6100-switch_table_8784
00000000000087a4         dd         version_etc_arn.loc_5e30-switch_table_8784, version_etc_arn.loc_5ee0-switch_table_8784
00000000000087ac         align      64
                     version_etc_copyright:
00000000000087c0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
00000000000087ef         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aStringComparis:
0000000000008800         db         "string comparison failed", 0               ; DATA XREF=collate_error+17
0000000000008819         align      32
                     aSetLcallcToWor:
0000000000008820         db         "Set LC_ALL='C' to work around the problem.", 0 ; DATA XREF=collate_error+57
000000000000884b         align      16
                     aTheStringsComp:
0000000000008850         db         "The strings compared were %s and %s.", 0   ; DATA XREF=collate_error+132
0000000000008875         align      8
                     aCoreutils831li:
0000000000008878         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoul+908
                     a0StrtolbaseStr:
0000000000008898         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoul+915
00000000000088be         align      64
                     switch_table_88c0:        // switch_table
00000000000088c0         dd         xstrtoul.loc_6ab6-switch_table_88c0, 2 dup (xstrtoul.loc_69ac-switch_table_88c0), xstrtoul.loc_6a93-switch_table_88c0, xstrtoul.loc_69ac-switch_table_88c0 ; switch table used at 0x6966 containing 54 entries, DATA XREF=xstrtoul+452
00000000000088d4         dd         xstrtoul.loc_6acc-switch_table_88c0, 3 dup (xstrtoul.loc_69ac-switch_table_88c0), xstrtoul.loc_6a4f-switch_table_88c0, xstrtoul.loc_69ac-switch_table_88c0
00000000000088ec         dd         xstrtoul.loc_6968-switch_table_88c0, 2 dup (xstrtoul.loc_69ac-switch_table_88c0), xstrtoul.loc_6a70-switch_table_88c0, 3 dup (xstrtoul.loc_69ac-switch_table_88c0)
0000000000008908         dd         xstrtoul.loc_6a2f-switch_table_88c0, 4 dup (xstrtoul.loc_69ac-switch_table_88c0), xstrtoul.loc_6a0a-switch_table_88c0, xstrtoul.loc_69e4-switch_table_88c0
0000000000008924         dd         7 dup (xstrtoul.loc_69ac-switch_table_88c0), xstrtoul.loc_69cd-switch_table_88c0, xstrtoul.loc_6990-switch_table_88c0, 3 dup (xstrtoul.loc_69ac-switch_table_88c0)
0000000000008954         dd         xstrtoul.loc_6acc-switch_table_88c0, 3 dup (xstrtoul.loc_69ac-switch_table_88c0), xstrtoul.loc_6a4f-switch_table_88c0, xstrtoul.loc_69ac-switch_table_88c0
000000000000896c         dd         xstrtoul.loc_6968-switch_table_88c0, 6 dup (xstrtoul.loc_69ac-switch_table_88c0), xstrtoul.loc_6a2f-switch_table_88c0, 2 dup (xstrtoul.loc_69ac-switch_table_88c0)
0000000000008994         dd         xstrtoul.loc_69b7-switch_table_88c0
                     __PRETTY_FUNCTION__.4162:
0000000000008998         db         "xstrtoul", 0                               ; DATA XREF=xstrtoul+901
                     aAscii:
00000000000089a1         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
00000000000089a7         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x89a8; 0x8cdc[ (820 bytes)
        ; File offset : [35240; 36060[ (820 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000089a8         db  0x01 ; '.'
00000000000089a9         db  0x1b ; '.'
00000000000089aa         db  0x03 ; '.'
00000000000089ab         db  0x3b ; ';'
00000000000089ac         db  0x34 ; '4'
00000000000089ad         db  0x03 ; '.'
00000000000089ae         db  0x00 ; '.'
00000000000089af         db  0x00 ; '.'
00000000000089b0         db  0x65 ; 'e'
00000000000089b1         db  0x00 ; '.'
00000000000089b2         db  0x00 ; '.'
00000000000089b3         db  0x00 ; '.'
00000000000089b4         db  0x78 ; 'x'
00000000000089b5         db  0x8c ; '.'
00000000000089b6         db  0xff ; '.'
00000000000089b7         db  0xff ; '.'
00000000000089b8         db  0x80 ; '.'
00000000000089b9         db  0x03 ; '.'
00000000000089ba         db  0x00 ; '.'
00000000000089bb         db  0x00 ; '.'
00000000000089bc         db  0xf8 ; '.'
00000000000089bd         db  0x8f ; '.'
00000000000089be         db  0xff ; '.'
00000000000089bf         db  0xff ; '.'
00000000000089c0         db  0xa8 ; '.'
00000000000089c1         db  0x03 ; '.'
00000000000089c2         db  0x00 ; '.'
00000000000089c3         db  0x00 ; '.'
00000000000089c4         db  0x08 ; '.'
00000000000089c5         db  0x90 ; '.'
00000000000089c6         db  0xff ; '.'
00000000000089c7         db  0xff ; '.'
00000000000089c8         db  0xf0 ; '.'
00000000000089c9         db  0x06 ; '.'
00000000000089ca         db  0x00 ; '.'
00000000000089cb         db  0x00 ; '.'
00000000000089cc         db  0x88 ; '.'
00000000000089cd         db  0x9f ; '.'
00000000000089ce         db  0xff ; '.'
00000000000089cf         db  0xff ; '.'
00000000000089d0         db  0x50 ; 'P'
00000000000089d1         db  0x03 ; '.'
00000000000089d2         db  0x00 ; '.'
00000000000089d3         db  0x00 ; '.'
00000000000089d4         db  0x98 ; '.'
00000000000089d5         db  0xa0 ; '.'
00000000000089d6         db  0xff ; '.'
00000000000089d7         db  0xff ; '.'
00000000000089d8         db  0xc0 ; '.'
00000000000089d9         db  0x03 ; '.'
00000000000089da         db  0x00 ; '.'
00000000000089db         db  0x00 ; '.'
00000000000089dc         db  0xe8 ; '.'
00000000000089dd         db  0xa0 ; '.'
00000000000089de         db  0xff ; '.'
00000000000089df         db  0xff ; '.'
00000000000089e0         db  0xec ; '.'
00000000000089e1         db  0x03 ; '.'
00000000000089e2         db  0x00 ; '.'
00000000000089e3         db  0x00 ; '.'
00000000000089e4         db  0x88 ; '.'
00000000000089e5         db  0xa1 ; '.'
00000000000089e6         db  0xff ; '.'
00000000000089e7         db  0xff ; '.'
00000000000089e8         db  0x10 ; '.'
00000000000089e9         db  0x04 ; '.'
00000000000089ea         db  0x00 ; '.'
00000000000089eb         db  0x00 ; '.'
00000000000089ec         db  0xc8 ; '.'
00000000000089ed         db  0xa2 ; '.'
00000000000089ee         db  0xff ; '.'
00000000000089ef         db  0xff ; '.'
00000000000089f0         db  0x40 ; '@'
00000000000089f1         db  0x04 ; '.'
00000000000089f2         db  0x00 ; '.'
00000000000089f3         db  0x00 ; '.'
00000000000089f4         db  0xf8 ; '.'
00000000000089f5         db  0xa2 ; '.'
00000000000089f6         db  0xff ; '.'
00000000000089f7         db  0xff ; '.'
00000000000089f8         db  0x5c ; '\'
00000000000089f9         db  0x04 ; '.'
00000000000089fa         db  0x00 ; '.'
00000000000089fb         db  0x00 ; '.'
00000000000089fc         db  0x48 ; 'H'
00000000000089fd         db  0xa3 ; '.'
00000000000089fe         db  0xff ; '.'
00000000000089ff         db  0xff ; '.'
0000000000008a00         db  0x7c ; '|'
0000000000008a01         db  0x04 ; '.'
0000000000008a02         db  0x00 ; '.'
0000000000008a03         db  0x00 ; '.'
0000000000008a04         db  0x98 ; '.'
0000000000008a05         db  0xa3 ; '.'
0000000000008a06         db  0xff ; '.'
0000000000008a07         db  0xff ; '.'
0000000000008a08         db  0xa8 ; '.'
0000000000008a09         db  0x04 ; '.'
0000000000008a0a         db  0x00 ; '.'
0000000000008a0b         db  0x00 ; '.'
0000000000008a0c         db  0xa8 ; '.'
0000000000008a0d         db  0xa4 ; '.'
0000000000008a0e         db  0xff ; '.'
0000000000008a0f         db  0xff ; '.'
0000000000008a10         db  0x04 ; '.'
0000000000008a11         db  0x05 ; '.'
0000000000008a12         db  0x00 ; '.'
0000000000008a13         db  0x00 ; '.'
0000000000008a14         db  0x08 ; '.'
0000000000008a15         db  0xa5 ; '.'
0000000000008a16         db  0xff ; '.'
0000000000008a17         db  0xff ; '.'
0000000000008a18         db  0x18 ; '.'
0000000000008a19         db  0x05 ; '.'
0000000000008a1a         db  0x00 ; '.'
0000000000008a1b         db  0x00 ; '.'
0000000000008a1c         db  0x28 ; '('
0000000000008a1d         db  0xa6 ; '.'
0000000000008a1e         db  0xff ; '.'
0000000000008a1f         db  0xff ; '.'
0000000000008a20         db  0x64 ; 'd'
0000000000008a21         db  0x05 ; '.'
0000000000008a22         db  0x00 ; '.'
0000000000008a23         db  0x00 ; '.'
0000000000008a24         db  0x88 ; '.'
0000000000008a25         db  0xa7 ; '.'
0000000000008a26         db  0xff ; '.'
0000000000008a27         db  0xff ; '.'
0000000000008a28         db  0xb4 ; '.'
0000000000008a29         db  0x05 ; '.'
0000000000008a2a         db  0x00 ; '.'
0000000000008a2b         db  0x00 ; '.'
0000000000008a2c         db  0x48 ; 'H'
0000000000008a2d         db  0xa8 ; '.'
0000000000008a2e         db  0xff ; '.'
0000000000008a2f         db  0xff ; '.'
0000000000008a30         db  0xe0 ; '.'
0000000000008a31         db  0x05 ; '.'
0000000000008a32         db  0x00 ; '.'
0000000000008a33         db  0x00 ; '.'
0000000000008a34         db  0x38 ; '8'
0000000000008a35         db  0xac ; '.'
0000000000008a36         db  0xff ; '.'
0000000000008a37         db  0xff ; '.'
0000000000008a38         db  0x54 ; 'T'
0000000000008a39         db  0x06 ; '.'
0000000000008a3a         db  0x00 ; '.'
0000000000008a3b         db  0x00 ; '.'
0000000000008a3c         db  0x18 ; '.'
0000000000008a3d         db  0xad ; '.'
0000000000008a3e         db  0xff ; '.'
0000000000008a3f         db  0xff ; '.'
0000000000008a40         db  0x80 ; '.'
0000000000008a41         db  0x06 ; '.'
0000000000008a42         db  0x00 ; '.'
0000000000008a43         db  0x00 ; '.'
0000000000008a44         db  0x38 ; '8'
0000000000008a45         db  0xb1 ; '.'
0000000000008a46         db  0xff ; '.'
0000000000008a47         db  0xff ; '.'
0000000000008a48         db  0xac ; '.'
0000000000008a49         db  0x06 ; '.'
0000000000008a4a         db  0x00 ; '.'
0000000000008a4b         db  0x00 ; '.'
0000000000008a4c         db  0xf8 ; '.'
0000000000008a4d         db  0xb2 ; '.'
0000000000008a4e         db  0xff ; '.'
0000000000008a4f         db  0xff ; '.'
0000000000008a50         db  0x40 ; '@'
0000000000008a51         db  0x07 ; '.'
0000000000008a52         db  0x00 ; '.'
0000000000008a53         db  0x00 ; '.'
0000000000008a54         db  0x08 ; '.'
0000000000008a55         db  0xb3 ; '.'
0000000000008a56         db  0xff ; '.'
0000000000008a57         db  0xff ; '.'
0000000000008a58         db  0x54 ; 'T'
0000000000008a59         db  0x07 ; '.'
0000000000008a5a         db  0x00 ; '.'
0000000000008a5b         db  0x00 ; '.'
0000000000008a5c         db  0x18 ; '.'
0000000000008a5d         db  0xb3 ; '.'
0000000000008a5e         db  0xff ; '.'
0000000000008a5f         db  0xff ; '.'
0000000000008a60         db  0x68 ; 'h'
0000000000008a61         db  0x07 ; '.'
0000000000008a62         db  0x00 ; '.'
0000000000008a63         db  0x00 ; '.'
0000000000008a64         db  0xc8 ; '.'
0000000000008a65         db  0xb3 ; '.'
0000000000008a66         db  0xff ; '.'
0000000000008a67         db  0xff ; '.'
0000000000008a68         db  0x98 ; '.'
0000000000008a69         db  0x07 ; '.'
0000000000008a6a         db  0x00 ; '.'
0000000000008a6b         db  0x00 ; '.'
0000000000008a6c         db  0xd8 ; '.'
0000000000008a6d         db  0xb3 ; '.'
0000000000008a6e         db  0xff ; '.'
0000000000008a6f         db  0xff ; '.'
0000000000008a70         db  0xac ; '.'
0000000000008a71         db  0x07 ; '.'
0000000000008a72         db  0x00 ; '.'
0000000000008a73         db  0x00 ; '.'
0000000000008a74         db  0x08 ; '.'
0000000000008a75         db  0xb4 ; '.'
0000000000008a76         db  0xff ; '.'
0000000000008a77         db  0xff ; '.'
0000000000008a78         db  0xc8 ; '.'
0000000000008a79         db  0x07 ; '.'
0000000000008a7a         db  0x00 ; '.'
0000000000008a7b         db  0x00 ; '.'
0000000000008a7c         db  0xa8 ; '.'
0000000000008a7d         db  0xb4 ; '.'
0000000000008a7e         db  0xff ; '.'
0000000000008a7f         db  0xff ; '.'
0000000000008a80         db  0xf8 ; '.'
0000000000008a81         db  0x07 ; '.'
0000000000008a82         db  0x00 ; '.'
0000000000008a83         db  0x00 ; '.'
0000000000008a84         db  0x08 ; '.'
0000000000008a85         db  0xb5 ; '.'
0000000000008a86         db  0xff ; '.'
0000000000008a87         db  0xff ; '.'
0000000000008a88         db  0x18 ; '.'
0000000000008a89         db  0x08 ; '.'
0000000000008a8a         db  0x00 ; '.'
0000000000008a8b         db  0x00 ; '.'
0000000000008a8c         db  0x18 ; '.'
0000000000008a8d         db  0xb5 ; '.'
0000000000008a8e         db  0xff ; '.'
0000000000008a8f         db  0xff ; '.'
0000000000008a90         db  0x2c ; ','
0000000000008a91         db  0x08 ; '.'
0000000000008a92         db  0x00 ; '.'
0000000000008a93         db  0x00 ; '.'
0000000000008a94         db  0x28 ; '('
0000000000008a95         db  0xb6 ; '.'
0000000000008a96         db  0xff ; '.'
0000000000008a97         db  0xff ; '.'
0000000000008a98         db  0x90 ; '.'
0000000000008a99         db  0x08 ; '.'
0000000000008a9a         db  0x00 ; '.'
0000000000008a9b         db  0x00 ; '.'
0000000000008a9c         db  0x38 ; '8'
0000000000008a9d         db  0xb6 ; '.'
0000000000008a9e         db  0xff ; '.'
0000000000008a9f         db  0xff ; '.'
0000000000008aa0         db  0xa4 ; '.'
0000000000008aa1         db  0x08 ; '.'
0000000000008aa2         db  0x00 ; '.'
0000000000008aa3         db  0x00 ; '.'
0000000000008aa4         db  0x48 ; 'H'
0000000000008aa5         db  0xb6 ; '.'
0000000000008aa6         db  0xff ; '.'
0000000000008aa7         db  0xff ; '.'
0000000000008aa8         db  0xb8 ; '.'
0000000000008aa9         db  0x08 ; '.'
0000000000008aaa         db  0x00 ; '.'
0000000000008aab         db  0x00 ; '.'
0000000000008aac         db  0x98 ; '.'
0000000000008aad         db  0xb6 ; '.'
0000000000008aae         db  0xff ; '.'
0000000000008aaf         db  0xff ; '.'
0000000000008ab0         db  0xe8 ; '.'
0000000000008ab1         db  0x08 ; '.'
0000000000008ab2         db  0x00 ; '.'
0000000000008ab3         db  0x00 ; '.'
0000000000008ab4         db  0x38 ; '8'
0000000000008ab5         db  0xb7 ; '.'
0000000000008ab6         db  0xff ; '.'
0000000000008ab7         db  0xff ; '.'
0000000000008ab8         db  0x08 ; '.'
0000000000008ab9         db  0x09 ; '.'
0000000000008aba         db  0x00 ; '.'
0000000000008abb         db  0x00 ; '.'
0000000000008abc         db  0x28 ; '('
0000000000008abd         db  0xb8 ; '.'
0000000000008abe         db  0xff ; '.'
0000000000008abf         db  0xff ; '.'
0000000000008ac0         db  0x4c ; 'L'
0000000000008ac1         db  0x09 ; '.'
0000000000008ac2         db  0x00 ; '.'
0000000000008ac3         db  0x00 ; '.'
0000000000008ac4         db  0x68 ; 'h'
0000000000008ac5         db  0xca ; '.'
0000000000008ac6         db  0xff ; '.'
0000000000008ac7         db  0xff ; '.'
0000000000008ac8         db  0xc4 ; '.'
0000000000008ac9         db  0x09 ; '.'
0000000000008aca         db  0x00 ; '.'
0000000000008acb         db  0x00 ; '.'
0000000000008acc         db  0x18 ; '.'
0000000000008acd         db  0xcc ; '.'
0000000000008ace         db  0xff ; '.'
0000000000008acf         db  0xff ; '.'
0000000000008ad0         db  0x30 ; '0'
0000000000008ad1         db  0x0a ; '.'
0000000000008ad2         db  0x00 ; '.'
0000000000008ad3         db  0x00 ; '.'
0000000000008ad4         db  0x58 ; 'X'
0000000000008ad5         db  0xcc ; '.'
0000000000008ad6         db  0xff ; '.'
0000000000008ad7         db  0xff ; '.'
0000000000008ad8         db  0x5c ; '\'
0000000000008ad9         db  0x0a ; '.'
0000000000008ada         db  0x00 ; '.'
0000000000008adb         db  0x00 ; '.'
0000000000008adc         db  0x78 ; 'x'
0000000000008add         db  0xcc ; '.'
0000000000008ade         db  0xff ; '.'
0000000000008adf         db  0xff ; '.'
0000000000008ae0         db  0x70 ; 'p'
0000000000008ae1         db  0x0a ; '.'
0000000000008ae2         db  0x00 ; '.'
0000000000008ae3         db  0x00 ; '.'
0000000000008ae4         db  0x98 ; '.'
0000000000008ae5         db  0xcc ; '.'
0000000000008ae6         db  0xff ; '.'
0000000000008ae7         db  0xff ; '.'
0000000000008ae8         db  0x84 ; '.'
0000000000008ae9         db  0x0a ; '.'
0000000000008aea         db  0x00 ; '.'
0000000000008aeb         db  0x00 ; '.'
0000000000008aec         db  0xd8 ; '.'
0000000000008aed         db  0xcc ; '.'
0000000000008aee         db  0xff ; '.'
0000000000008aef         db  0xff ; '.'
0000000000008af0         db  0x98 ; '.'
0000000000008af1         db  0x0a ; '.'
0000000000008af2         db  0x00 ; '.'
0000000000008af3         db  0x00 ; '.'
0000000000008af4         db  0xf8 ; '.'
0000000000008af5         db  0xcc ; '.'
0000000000008af6         db  0xff ; '.'
0000000000008af7         db  0xff ; '.'
0000000000008af8         db  0xac ; '.'
0000000000008af9         db  0x0a ; '.'
0000000000008afa         db  0x00 ; '.'
0000000000008afb         db  0x00 ; '.'
0000000000008afc         db  0x28 ; '('
0000000000008afd         db  0xcd ; '.'
0000000000008afe         db  0xff ; '.'
0000000000008aff         db  0xff ; '.'
0000000000008b00         db  0xc0 ; '.'
0000000000008b01         db  0x0a ; '.'
0000000000008b02         db  0x00 ; '.'
0000000000008b03         db  0x00 ; '.'
0000000000008b04         db  0xa8 ; '.'
0000000000008b05         db  0xcd ; '.'
0000000000008b06         db  0xff ; '.'
0000000000008b07         db  0xff ; '.'
0000000000008b08         db  0x14 ; '.'
0000000000008b09         db  0x0b ; '.'
0000000000008b0a         db  0x00 ; '.'
0000000000008b0b         db  0x00 ; '.'
0000000000008b0c         db  0x98 ; '.'
0000000000008b0d         db  0xce ; '.'
0000000000008b0e         db  0xff ; '.'
0000000000008b0f         db  0xff ; '.'
0000000000008b10         db  0x80 ; '.'
0000000000008b11         db  0x0b ; '.'
0000000000008b12         db  0x00 ; '.'
0000000000008b13         db  0x00 ; '.'
0000000000008b14         db  0xa8 ; '.'
0000000000008b15         db  0xce ; '.'
0000000000008b16         db  0xff ; '.'
0000000000008b17         db  0xff ; '.'
0000000000008b18         db  0x94 ; '.'
0000000000008b19         db  0x0b ; '.'
0000000000008b1a         db  0x00 ; '.'
0000000000008b1b         db  0x00 ; '.'
0000000000008b1c         db  0x48 ; 'H'
0000000000008b1d         db  0xcf ; '.'
0000000000008b1e         db  0xff ; '.'
0000000000008b1f         db  0xff ; '.'
0000000000008b20         db  0xc0 ; '.'
0000000000008b21         db  0x0b ; '.'
0000000000008b22         db  0x00 ; '.'
0000000000008b23         db  0x00 ; '.'
0000000000008b24         db  0x68 ; 'h'
0000000000008b25         db  0xcf ; '.'
0000000000008b26         db  0xff ; '.'
0000000000008b27         db  0xff ; '.'
0000000000008b28         db  0xd4 ; '.'
0000000000008b29         db  0x0b ; '.'
0000000000008b2a         db  0x00 ; '.'
0000000000008b2b         db  0x00 ; '.'
0000000000008b2c         db  0x78 ; 'x'
0000000000008b2d         db  0xcf ; '.'
0000000000008b2e         db  0xff ; '.'
0000000000008b2f         db  0xff ; '.'
0000000000008b30         db  0xe8 ; '.'
0000000000008b31         db  0x0b ; '.'
0000000000008b32         db  0x00 ; '.'
0000000000008b33         db  0x00 ; '.'
0000000000008b34         db  0x98 ; '.'
0000000000008b35         db  0xcf ; '.'
0000000000008b36         db  0xff ; '.'
0000000000008b37         db  0xff ; '.'
0000000000008b38         db  0xfc ; '.'
0000000000008b39         db  0x0b ; '.'
0000000000008b3a         db  0x00 ; '.'
0000000000008b3b         db  0x00 ; '.'
0000000000008b3c         db  0xb8 ; '.'
0000000000008b3d         db  0xcf ; '.'
0000000000008b3e         db  0xff ; '.'
0000000000008b3f         db  0xff ; '.'
0000000000008b40         db  0x10 ; '.'
0000000000008b41         db  0x0c ; '.'
0000000000008b42         db  0x00 ; '.'
0000000000008b43         db  0x00 ; '.'
0000000000008b44         db  0x48 ; 'H'
0000000000008b45         db  0xd0 ; '.'
0000000000008b46         db  0xff ; '.'
0000000000008b47         db  0xff ; '.'
0000000000008b48         db  0x2c ; ','
0000000000008b49         db  0x0c ; '.'
0000000000008b4a         db  0x00 ; '.'
0000000000008b4b         db  0x00 ; '.'
0000000000008b4c         db  0xd8 ; '.'
0000000000008b4d         db  0xd0 ; '.'
0000000000008b4e         db  0xff ; '.'
0000000000008b4f         db  0xff ; '.'
0000000000008b50         db  0x48 ; 'H'
0000000000008b51         db  0x0c ; '.'
0000000000008b52         db  0x00 ; '.'
0000000000008b53         db  0x00 ; '.'
0000000000008b54         db  0xe8 ; '.'
0000000000008b55         db  0xd0 ; '.'
0000000000008b56         db  0xff ; '.'
0000000000008b57         db  0xff ; '.'
0000000000008b58         db  0x5c ; '\'
0000000000008b59         db  0x0c ; '.'
0000000000008b5a         db  0x00 ; '.'
0000000000008b5b         db  0x00 ; '.'
0000000000008b5c         db  0xf8 ; '.'
0000000000008b5d         db  0xd0 ; '.'
0000000000008b5e         db  0xff ; '.'
0000000000008b5f         db  0xff ; '.'
0000000000008b60         db  0x70 ; 'p'
0000000000008b61         db  0x0c ; '.'
0000000000008b62         db  0x00 ; '.'
0000000000008b63         db  0x00 ; '.'
0000000000008b64         db  0x98 ; '.'
0000000000008b65         db  0xd1 ; '.'
0000000000008b66         db  0xff ; '.'
0000000000008b67         db  0xff ; '.'
0000000000008b68         db  0x8c ; '.'
0000000000008b69         db  0x0c ; '.'
0000000000008b6a         db  0x00 ; '.'
0000000000008b6b         db  0x00 ; '.'
0000000000008b6c         db  0xa8 ; '.'
0000000000008b6d         db  0xd1 ; '.'
0000000000008b6e         db  0xff ; '.'
0000000000008b6f         db  0xff ; '.'
0000000000008b70         db  0xa0 ; '.'
0000000000008b71         db  0x0c ; '.'
0000000000008b72         db  0x00 ; '.'
0000000000008b73         db  0x00 ; '.'
0000000000008b74         db  0xc8 ; '.'
0000000000008b75         db  0xd1 ; '.'
0000000000008b76         db  0xff ; '.'
0000000000008b77         db  0xff ; '.'
0000000000008b78         db  0xb4 ; '.'
0000000000008b79         db  0x0c ; '.'
0000000000008b7a         db  0x00 ; '.'
0000000000008b7b         db  0x00 ; '.'
0000000000008b7c         db  0xd8 ; '.'
0000000000008b7d         db  0xd1 ; '.'
0000000000008b7e         db  0xff ; '.'
0000000000008b7f         db  0xff ; '.'
0000000000008b80         db  0xc8 ; '.'
0000000000008b81         db  0x0c ; '.'
0000000000008b82         db  0x00 ; '.'
0000000000008b83         db  0x00 ; '.'
0000000000008b84         db  0x68 ; 'h'
0000000000008b85         db  0xd2 ; '.'
0000000000008b86         db  0xff ; '.'
0000000000008b87         db  0xff ; '.'
0000000000008b88         db  0xe4 ; '.'
0000000000008b89         db  0x0c ; '.'
0000000000008b8a         db  0x00 ; '.'
0000000000008b8b         db  0x00 ; '.'
0000000000008b8c         db  0x08 ; '.'
0000000000008b8d         db  0xd3 ; '.'
0000000000008b8e         db  0xff ; '.'
0000000000008b8f         db  0xff ; '.'
0000000000008b90         db  0x00 ; '.'
0000000000008b91         db  0x0d ; '.'
0000000000008b92         db  0x00 ; '.'
0000000000008b93         db  0x00 ; '.'
0000000000008b94         db  0x18 ; '.'
0000000000008b95         db  0xd3 ; '.'
0000000000008b96         db  0xff ; '.'
0000000000008b97         db  0xff ; '.'
0000000000008b98         db  0x14 ; '.'
0000000000008b99         db  0x0d ; '.'
0000000000008b9a         db  0x00 ; '.'
0000000000008b9b         db  0x00 ; '.'
0000000000008b9c         db  0x38 ; '8'
0000000000008b9d         db  0xd3 ; '.'
0000000000008b9e         db  0xff ; '.'
0000000000008b9f         db  0xff ; '.'
0000000000008ba0         db  0x28 ; '('
0000000000008ba1         db  0x0d ; '.'
0000000000008ba2         db  0x00 ; '.'
0000000000008ba3         db  0x00 ; '.'
0000000000008ba4         db  0x58 ; 'X'
0000000000008ba5         db  0xd3 ; '.'
0000000000008ba6         db  0xff ; '.'
0000000000008ba7         db  0xff ; '.'
0000000000008ba8         db  0x3c ; '<'
0000000000008ba9         db  0x0d ; '.'
0000000000008baa         db  0x00 ; '.'
0000000000008bab         db  0x00 ; '.'
0000000000008bac         db  0x68 ; 'h'
0000000000008bad         db  0xd3 ; '.'
0000000000008bae         db  0xff ; '.'
0000000000008baf         db  0xff ; '.'
0000000000008bb0         db  0x50 ; 'P'
0000000000008bb1         db  0x0d ; '.'
0000000000008bb2         db  0x00 ; '.'
0000000000008bb3         db  0x00 ; '.'
0000000000008bb4         db  0x88 ; '.'
0000000000008bb5         db  0xd3 ; '.'
0000000000008bb6         db  0xff ; '.'
0000000000008bb7         db  0xff ; '.'
0000000000008bb8         db  0x64 ; 'd'
0000000000008bb9         db  0x0d ; '.'
0000000000008bba         db  0x00 ; '.'
0000000000008bbb         db  0x00 ; '.'
0000000000008bbc         db  0xa8 ; '.'
0000000000008bbd         db  0xd3 ; '.'
0000000000008bbe         db  0xff ; '.'
0000000000008bbf         db  0xff ; '.'
0000000000008bc0         db  0x78 ; 'x'
0000000000008bc1         db  0x0d ; '.'
0000000000008bc2         db  0x00 ; '.'
0000000000008bc3         db  0x00 ; '.'
0000000000008bc4         db  0xc8 ; '.'
0000000000008bc5         db  0xd3 ; '.'
0000000000008bc6         db  0xff ; '.'
0000000000008bc7         db  0xff ; '.'
0000000000008bc8         db  0x90 ; '.'
0000000000008bc9         db  0x0d ; '.'
0000000000008bca         db  0x00 ; '.'
0000000000008bcb         db  0x00 ; '.'
0000000000008bcc         db  0xd8 ; '.'
0000000000008bcd         db  0xd3 ; '.'
0000000000008bce         db  0xff ; '.'
0000000000008bcf         db  0xff ; '.'
0000000000008bd0         db  0xa8 ; '.'
0000000000008bd1         db  0x0d ; '.'
0000000000008bd2         db  0x00 ; '.'
0000000000008bd3         db  0x00 ; '.'
0000000000008bd4         db  0xf8 ; '.'
0000000000008bd5         db  0xd7 ; '.'
0000000000008bd6         db  0xff ; '.'
0000000000008bd7         db  0xff ; '.'
0000000000008bd8         db  0xbc ; '.'
0000000000008bd9         db  0x0e ; '.'
0000000000008bda         db  0x00 ; '.'
0000000000008bdb         db  0x00 ; '.'
0000000000008bdc         db  0x18 ; '.'
0000000000008bdd         db  0xd8 ; '.'
0000000000008bde         db  0xff ; '.'
0000000000008bdf         db  0xff ; '.'
0000000000008be0         db  0xd0 ; '.'
0000000000008be1         db  0x0e ; '.'
0000000000008be2         db  0x00 ; '.'
0000000000008be3         db  0x00 ; '.'
0000000000008be4         db  0x98 ; '.'
0000000000008be5         db  0xd8 ; '.'
0000000000008be6         db  0xff ; '.'
0000000000008be7         db  0xff ; '.'
0000000000008be8         db  0xec ; '.'
0000000000008be9         db  0x0e ; '.'
0000000000008bea         db  0x00 ; '.'
0000000000008beb         db  0x00 ; '.'
0000000000008bec         db  0x78 ; 'x'
0000000000008bed         db  0xd9 ; '.'
0000000000008bee         db  0xff ; '.'
0000000000008bef         db  0xff ; '.'
0000000000008bf0         db  0x18 ; '.'
0000000000008bf1         db  0x0f ; '.'
0000000000008bf2         db  0x00 ; '.'
0000000000008bf3         db  0x00 ; '.'
0000000000008bf4         db  0xf8 ; '.'
0000000000008bf5         db  0xd9 ; '.'
0000000000008bf6         db  0xff ; '.'
0000000000008bf7         db  0xff ; '.'
0000000000008bf8         db  0x38 ; '8'
0000000000008bf9         db  0x0f ; '.'
0000000000008bfa         db  0x00 ; '.'
0000000000008bfb         db  0x00 ; '.'
0000000000008bfc         db  0x18 ; '.'
0000000000008bfd         db  0xda ; '.'
0000000000008bfe         db  0xff ; '.'
0000000000008bff         db  0xff ; '.'
0000000000008c00         db  0x54 ; 'T'
0000000000008c01         db  0x0f ; '.'
0000000000008c02         db  0x00 ; '.'
0000000000008c03         db  0x00 ; '.'
0000000000008c04         db  0x48 ; 'H'
0000000000008c05         db  0xda ; '.'
0000000000008c06         db  0xff ; '.'
0000000000008c07         db  0xff ; '.'
0000000000008c08         db  0x68 ; 'h'
0000000000008c09         db  0x0f ; '.'
0000000000008c0a         db  0x00 ; '.'
0000000000008c0b         db  0x00 ; '.'
0000000000008c0c         db  0x58 ; 'X'
0000000000008c0d         db  0xda ; '.'
0000000000008c0e         db  0xff ; '.'
0000000000008c0f         db  0xff ; '.'
0000000000008c10         db  0x7c ; '|'
0000000000008c11         db  0x0f ; '.'
0000000000008c12         db  0x00 ; '.'
0000000000008c13         db  0x00 ; '.'
0000000000008c14         db  0x98 ; '.'
0000000000008c15         db  0xda ; '.'
0000000000008c16         db  0xff ; '.'
0000000000008c17         db  0xff ; '.'
0000000000008c18         db  0xa0 ; '.'
0000000000008c19         db  0x0f ; '.'
0000000000008c1a         db  0x00 ; '.'
0000000000008c1b         db  0x00 ; '.'
0000000000008c1c         db  0xc8 ; '.'
0000000000008c1d         db  0xda ; '.'
0000000000008c1e         db  0xff ; '.'
0000000000008c1f         db  0xff ; '.'
0000000000008c20         db  0xb4 ; '.'
0000000000008c21         db  0x0f ; '.'
0000000000008c22         db  0x00 ; '.'
0000000000008c23         db  0x00 ; '.'
0000000000008c24         db  0x58 ; 'X'
0000000000008c25         db  0xdb ; '.'
0000000000008c26         db  0xff ; '.'
0000000000008c27         db  0xff ; '.'
0000000000008c28         db  0xcc ; '.'
0000000000008c29         db  0x0f ; '.'
0000000000008c2a         db  0x00 ; '.'
0000000000008c2b         db  0x00 ; '.'
0000000000008c2c         db  0xa8 ; '.'
0000000000008c2d         db  0xdb ; '.'
0000000000008c2e         db  0xff ; '.'
0000000000008c2f         db  0xff ; '.'
0000000000008c30         db  0xe4 ; '.'
0000000000008c31         db  0x0f ; '.'
0000000000008c32         db  0x00 ; '.'
0000000000008c33         db  0x00 ; '.'
0000000000008c34         db  0xc8 ; '.'
0000000000008c35         db  0xdb ; '.'
0000000000008c36         db  0xff ; '.'
0000000000008c37         db  0xff ; '.'
0000000000008c38         db  0x00 ; '.'
0000000000008c39         db  0x10 ; '.'
0000000000008c3a         db  0x00 ; '.'
0000000000008c3b         db  0x00 ; '.'
0000000000008c3c         db  0xf8 ; '.'
0000000000008c3d         db  0xdb ; '.'
0000000000008c3e         db  0xff ; '.'
0000000000008c3f         db  0xff ; '.'
0000000000008c40         db  0x1c ; '.'
0000000000008c41         db  0x10 ; '.'
0000000000008c42         db  0x00 ; '.'
0000000000008c43         db  0x00 ; '.'
0000000000008c44         db  0x28 ; '('
0000000000008c45         db  0xdc ; '.'
0000000000008c46         db  0xff ; '.'
0000000000008c47         db  0xff ; '.'
0000000000008c48         db  0x44 ; 'D'
0000000000008c49         db  0x10 ; '.'
0000000000008c4a         db  0x00 ; '.'
0000000000008c4b         db  0x00 ; '.'
0000000000008c4c         db  0x48 ; 'H'
0000000000008c4d         db  0xdc ; '.'
0000000000008c4e         db  0xff ; '.'
0000000000008c4f         db  0xff ; '.'
0000000000008c50         db  0x60 ; '`'
0000000000008c51         db  0x10 ; '.'
0000000000008c52         db  0x00 ; '.'
0000000000008c53         db  0x00 ; '.'
0000000000008c54         db  0x88 ; '.'
0000000000008c55         db  0xdc ; '.'
0000000000008c56         db  0xff ; '.'
0000000000008c57         db  0xff ; '.'
0000000000008c58         db  0x78 ; 'x'
0000000000008c59         db  0x10 ; '.'
0000000000008c5a         db  0x00 ; '.'
0000000000008c5b         db  0x00 ; '.'
0000000000008c5c         db  0x48 ; 'H'
0000000000008c5d         db  0xdd ; '.'
0000000000008c5e         db  0xff ; '.'
0000000000008c5f         db  0xff ; '.'
0000000000008c60         db  0xb4 ; '.'
0000000000008c61         db  0x10 ; '.'
0000000000008c62         db  0x00 ; '.'
0000000000008c63         db  0x00 ; '.'
0000000000008c64         db  0x98 ; '.'
0000000000008c65         db  0xdd ; '.'
0000000000008c66         db  0xff ; '.'
0000000000008c67         db  0xff ; '.'
0000000000008c68         db  0xf0 ; '.'
0000000000008c69         db  0x10 ; '.'
0000000000008c6a         db  0x00 ; '.'
0000000000008c6b         db  0x00 ; '.'
0000000000008c6c         db  0xe8 ; '.'
0000000000008c6d         db  0xdd ; '.'
0000000000008c6e         db  0xff ; '.'
0000000000008c6f         db  0xff ; '.'
0000000000008c70         db  0x30 ; '0'
0000000000008c71         db  0x11 ; '.'
0000000000008c72         db  0x00 ; '.'
0000000000008c73         db  0x00 ; '.'
0000000000008c74         db  0x08 ; '.'
0000000000008c75         db  0xe2 ; '.'
0000000000008c76         db  0xff ; '.'
0000000000008c77         db  0xff ; '.'
0000000000008c78         db  0x80 ; '.'
0000000000008c79         db  0x11 ; '.'
0000000000008c7a         db  0x00 ; '.'
0000000000008c7b         db  0x00 ; '.'
0000000000008c7c         db  0x88 ; '.'
0000000000008c7d         db  0xe2 ; '.'
0000000000008c7e         db  0xff ; '.'
0000000000008c7f         db  0xff ; '.'
0000000000008c80         db  0xb8 ; '.'
0000000000008c81         db  0x11 ; '.'
0000000000008c82         db  0x00 ; '.'
0000000000008c83         db  0x00 ; '.'
0000000000008c84         db  0x08 ; '.'
0000000000008c85         db  0xe5 ; '.'
0000000000008c86         db  0xff ; '.'
0000000000008c87         db  0xff ; '.'
0000000000008c88         db  0xf0 ; '.'
0000000000008c89         db  0x11 ; '.'
0000000000008c8a         db  0x00 ; '.'
0000000000008c8b         db  0x00 ; '.'
0000000000008c8c         db  0x48 ; 'H'
0000000000008c8d         db  0xe5 ; '.'
0000000000008c8e         db  0xff ; '.'
0000000000008c8f         db  0xff ; '.'
0000000000008c90         db  0x10 ; '.'
0000000000008c91         db  0x12 ; '.'
0000000000008c92         db  0x00 ; '.'
0000000000008c93         db  0x00 ; '.'
0000000000008c94         db  0xa8 ; '.'
0000000000008c95         db  0xe5 ; '.'
0000000000008c96         db  0xff ; '.'
0000000000008c97         db  0xff ; '.'
0000000000008c98         db  0x40 ; '@'
0000000000008c99         db  0x12 ; '.'
0000000000008c9a         db  0x00 ; '.'
0000000000008c9b         db  0x00 ; '.'
0000000000008c9c         db  0x38 ; '8'
0000000000008c9d         db  0xe6 ; '.'
0000000000008c9e         db  0xff ; '.'
0000000000008c9f         db  0xff ; '.'
0000000000008ca0         db  0x80 ; '.'
0000000000008ca1         db  0x12 ; '.'
0000000000008ca2         db  0x00 ; '.'
0000000000008ca3         db  0x00 ; '.'
0000000000008ca4         db  0xb8 ; '.'
0000000000008ca5         db  0xe6 ; '.'
0000000000008ca6         db  0xff ; '.'
0000000000008ca7         db  0xff ; '.'
0000000000008ca8         db  0xd0 ; '.'
0000000000008ca9         db  0x12 ; '.'
0000000000008caa         db  0x00 ; '.'
0000000000008cab         db  0x00 ; '.'
0000000000008cac         db  0xf8 ; '.'
0000000000008cad         db  0xe6 ; '.'
0000000000008cae         db  0xff ; '.'
0000000000008caf         db  0xff ; '.'
0000000000008cb0         db  0xf0 ; '.'
0000000000008cb1         db  0x12 ; '.'
0000000000008cb2         db  0x00 ; '.'
0000000000008cb3         db  0x00 ; '.'
0000000000008cb4         db  0xb8 ; '.'
0000000000008cb5         db  0xe7 ; '.'
0000000000008cb6         db  0xff ; '.'
0000000000008cb7         db  0xff ; '.'
0000000000008cb8         db  0x68 ; 'h'
0000000000008cb9         db  0x13 ; '.'
0000000000008cba         db  0x00 ; '.'
0000000000008cbb         db  0x00 ; '.'
0000000000008cbc         db  0x68 ; 'h'
0000000000008cbd         db  0xe8 ; '.'
0000000000008cbe         db  0xff ; '.'
0000000000008cbf         db  0xff ; '.'
0000000000008cc0         db  0xb4 ; '.'
0000000000008cc1         db  0x13 ; '.'
0000000000008cc2         db  0x00 ; '.'
0000000000008cc3         db  0x00 ; '.'
0000000000008cc4         db  0xc8 ; '.'
0000000000008cc5         db  0xe8 ; '.'
0000000000008cc6         db  0xff ; '.'
0000000000008cc7         db  0xff ; '.'
0000000000008cc8         db  0xf8 ; '.'
0000000000008cc9         db  0x13 ; '.'
0000000000008cca         db  0x00 ; '.'
0000000000008ccb         db  0x00 ; '.'
0000000000008ccc         db  0x38 ; '8'
0000000000008ccd         db  0xe9 ; '.'
0000000000008cce         db  0xff ; '.'
0000000000008ccf         db  0xff ; '.'
0000000000008cd0         db  0x40 ; '@'
0000000000008cd1         db  0x14 ; '.'
0000000000008cd2         db  0x00 ; '.'
0000000000008cd3         db  0x00 ; '.'
0000000000008cd4         db  0x48 ; 'H'
0000000000008cd5         db  0xe9 ; '.'
0000000000008cd6         db  0xff ; '.'
0000000000008cd7         db  0xff ; '.'
0000000000008cd8         db  0x58 ; 'X'
0000000000008cd9         db  0x14 ; '.'
0000000000008cda         db  0x00 ; '.'
0000000000008cdb         db  0x00 ; '.'
0000000000008cdc         db  0x00 ; '.'
0000000000008cdd         db  0x00 ; '.'
0000000000008cde         db  0x00 ; '.'
0000000000008cdf         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x8ce0; 0x9e18[ (4408 bytes)
        ; File offset : [36064; 40472[ (4408 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000008ce0         dd         0x00000014                                  ; Length of the record
0000000000008ce4         dd         0x00000000                                  ; CIE ID
0000000000008ce8         db         0x01                                        ; Version
0000000000008ce9         db         "zR", 0                                     ; Augmentation String
0000000000008cec         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008ced         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008cee         db         0x10                                        ; Return address register
0000000000008cef         db         0x01                                        ; Augmentation data length
0000000000008cf0         db         0x1b                                        ; FDE encoding
0000000000008cf1         db  0x0c ; '.'
0000000000008cf2         db  0x07 ; '.'
0000000000008cf3         db  0x08 ; '.'
0000000000008cf4         db  0x90 ; '.'
0000000000008cf5         db  0x01 ; '.'
0000000000008cf6         db  0x07 ; '.'
0000000000008cf7         db  0x10 ; '.'
0000000000008cf8         dd         0x00000014                                  ; Length of the record
0000000000008cfc         dd         0x0000001c                                  ; FDE: parent CIE at 0x8ce0 (FDE encoding = 0x1B)
0000000000008d00         db         0x30, 0x9c, 2 dup (0xff)                    ; begin 0x2930
0000000000008d04         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x295b)
0000000000008d08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d09         align      16
0000000000008d10         dd         0x00000014                                  ; Length of the record
0000000000008d14         dd         0x00000000                                  ; CIE ID
0000000000008d18         db         0x01                                        ; Version
0000000000008d19         db         "zR", 0                                     ; Augmentation String
0000000000008d1c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008d1d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008d1e         db         0x10                                        ; Return address register
0000000000008d1f         db         0x01                                        ; Augmentation data length
0000000000008d20         db         0x1b                                        ; FDE encoding
0000000000008d21         db  0x0c ; '.'
0000000000008d22         db  0x07 ; '.'
0000000000008d23         db  0x08 ; '.'
0000000000008d24         db  0x90 ; '.'
0000000000008d25         db  0x01 ; '.'
0000000000008d26         db  0x00 ; '.'
0000000000008d27         db  0x00 ; '.'
0000000000008d28         dd         0x00000024                                  ; Length of the record
0000000000008d2c         dd         0x0000001c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008d30         db         0xf0, 0x88, 2 dup (0xff)                    ; begin 0x1620
0000000000008d34         db         0x80, 0x03, 2 dup (0x00)                    ; length 0x380 (end at 0x19a0)
0000000000008d38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d39         db  0x0e ; '.'
0000000000008d3a         db  0x10 ; '.'
0000000000008d3b         db  0x46 ; 'F'
0000000000008d3c         db  0x0e ; '.'
0000000000008d3d         db  0x18 ; '.'
0000000000008d3e         db  0x4a ; 'J'
0000000000008d3f         db  0x0f ; '.'
0000000000008d40         db  0x0b ; '.'
0000000000008d41         db  0x77 ; 'w'
0000000000008d42         db  0x08 ; '.'
0000000000008d43         db  0x80 ; '.'
0000000000008d44         db  0x00 ; '.'
0000000000008d45         db  0x3f ; '?'
0000000000008d46         db  0x1a ; '.'
0000000000008d47         db  0x3b ; ';'
0000000000008d48         db  0x2a ; '*'
0000000000008d49         db  0x33 ; '3'
0000000000008d4a         db  0x24 ; '$'
0000000000008d4b         db  0x22 ; '"'
0000000000008d4c         db  0x00 ; '.'
0000000000008d4d         db  0x00 ; '.'
0000000000008d4e         db  0x00 ; '.'
0000000000008d4f         db  0x00 ; '.'
0000000000008d50         dd         0x00000014                                  ; Length of the record
0000000000008d54         dd         0x00000044                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008d58         db         0x48, 0x8c, 2 dup (0xff)                    ; begin 0x19a0
0000000000008d5c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x19a8)
0000000000008d60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d61         align      8
0000000000008d68         dd         0x00000028                                  ; Length of the record
0000000000008d6c         dd         0x0000005c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008d70         db         0xd0, 0x9c, 2 dup (0xff)                    ; begin 0x2a40
0000000000008d74         db         0x4d, 3 dup (0x00)                          ; length 0x4d (end at 0x2a8d)
0000000000008d78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d79         db  0x41 ; 'A'
0000000000008d7a         db  0x0e ; '.'
0000000000008d7b         db  0x10 ; '.'
0000000000008d7c         db  0x86 ; '.'
0000000000008d7d         db  0x02 ; '.'
0000000000008d7e         db  0x41 ; 'A'
0000000000008d7f         db  0x0e ; '.'
0000000000008d80         db  0x18 ; '.'
0000000000008d81         db  0x83 ; '.'
0000000000008d82         db  0x03 ; '.'
0000000000008d83         db  0x44 ; 'D'
0000000000008d84         db  0x0e ; '.'
0000000000008d85         db  0x20 ; ' '
0000000000008d86         db  0x55 ; 'U'
0000000000008d87         db  0x0a ; '.'
0000000000008d88         db  0x0e ; '.'
0000000000008d89         db  0x18 ; '.'
0000000000008d8a         db  0x41 ; 'A'
0000000000008d8b         db  0x0e ; '.'
0000000000008d8c         db  0x10 ; '.'
0000000000008d8d         db  0x41 ; 'A'
0000000000008d8e         db  0x0e ; '.'
0000000000008d8f         db  0x08 ; '.'
0000000000008d90         db  0x41 ; 'A'
0000000000008d91         db  0x0b ; '.'
0000000000008d92         db  0x00 ; '.'
0000000000008d93         db  0x00 ; '.'
0000000000008d94         dd         0x00000020                                  ; Length of the record
0000000000008d98         dd         0x00000088                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008d9c         db         0xf4, 0x9c, 2 dup (0xff)                    ; begin 0x2a90
0000000000008da0         db         0xa0, 3 dup (0x00)                          ; length 0xa0 (end at 0x2b30)
0000000000008da4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008da5         db  0x41 ; 'A'
0000000000008da6         db  0x0e ; '.'
0000000000008da7         db  0x10 ; '.'
0000000000008da8         db  0x83 ; '.'
0000000000008da9         db  0x02 ; '.'
0000000000008daa         db  0x55 ; 'U'
0000000000008dab         db  0x0e ; '.'
0000000000008dac         db  0x20 ; ' '
0000000000008dad         db  0x02 ; '.'
0000000000008dae         db  0x42 ; 'B'
0000000000008daf         db  0x0a ; '.'
0000000000008db0         db  0x0e ; '.'
0000000000008db1         db  0x10 ; '.'
0000000000008db2         db  0x41 ; 'A'
0000000000008db3         db  0x0e ; '.'
0000000000008db4         db  0x08 ; '.'
0000000000008db5         db  0x47 ; 'G'
0000000000008db6         db  0x0b ; '.'
0000000000008db7         db  0x00 ; '.'
0000000000008db8         dd         0x0000002c                                  ; Length of the record
0000000000008dbc         dd         0x000000ac                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008dc0         db         0x70, 0x9d, 2 dup (0xff)                    ; begin 0x2b30
0000000000008dc4         db         0x3b, 0x01, 2 dup (0x00)                    ; length 0x13b (end at 0x2c6b)
0000000000008dc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008dc9         db  0x42 ; 'B'
0000000000008dca         db  0x0e ; '.'
0000000000008dcb         db  0x10 ; '.'
0000000000008dcc         db  0x8c ; '.'
0000000000008dcd         db  0x02 ; '.'
0000000000008dce         db  0x41 ; 'A'
0000000000008dcf         db  0x0e ; '.'
0000000000008dd0         db  0x18 ; '.'
0000000000008dd1         db  0x86 ; '.'
0000000000008dd2         db  0x03 ; '.'
0000000000008dd3         db  0x44 ; 'D'
0000000000008dd4         db  0x0e ; '.'
0000000000008dd5         db  0x20 ; ' '
0000000000008dd6         db  0x83 ; '.'
0000000000008dd7         db  0x04 ; '.'
0000000000008dd8         db  0x02 ; '.'
0000000000008dd9         db  0x9a ; '.'
0000000000008dda         db  0x0a ; '.'
0000000000008ddb         db  0x0e ; '.'
0000000000008ddc         db  0x18 ; '.'
0000000000008ddd         db  0x41 ; 'A'
0000000000008dde         db  0x0e ; '.'
0000000000008ddf         db  0x10 ; '.'
0000000000008de0         db  0x42 ; 'B'
0000000000008de1         db  0x0e ; '.'
0000000000008de2         db  0x08 ; '.'
0000000000008de3         db  0x41 ; 'A'
0000000000008de4         db  0x0b ; '.'
0000000000008de5         db  0x00 ; '.'
0000000000008de6         db  0x00 ; '.'
0000000000008de7         db  0x00 ; '.'
0000000000008de8         dd         0x00000018                                  ; Length of the record
0000000000008dec         dd         0x000000dc                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008df0         db         0x80, 0x9e, 2 dup (0xff)                    ; begin 0x2c70
0000000000008df4         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x2c98)
0000000000008df8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008df9         db  0x41 ; 'A'
0000000000008dfa         db  0x0e ; '.'
0000000000008dfb         db  0x10 ; '.'
0000000000008dfc         db  0x83 ; '.'
0000000000008dfd         db  0x02 ; '.'
0000000000008dfe         db  0x66 ; 'f'
0000000000008dff         db  0x0e ; '.'
0000000000008e00         db  0x08 ; '.'
0000000000008e01         db  0x00 ; '.'
0000000000008e02         db  0x00 ; '.'
0000000000008e03         db  0x00 ; '.'
0000000000008e04         dd         0x0000001c                                  ; Length of the record
0000000000008e08         dd         0x000000f8                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008e0c         db         0x94, 0x9e, 2 dup (0xff)                    ; begin 0x2ca0
0000000000008e10         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x2ce2)
0000000000008e14         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e15         db  0x41 ; 'A'
0000000000008e16         db  0x0e ; '.'
0000000000008e17         db  0x10 ; '.'
0000000000008e18         db  0x83 ; '.'
0000000000008e19         db  0x02 ; '.'
0000000000008e1a         db  0x74 ; 't'
0000000000008e1b         db  0x0a ; '.'
0000000000008e1c         db  0x0e ; '.'
0000000000008e1d         db  0x08 ; '.'
0000000000008e1e         db  0x4b ; 'K'
0000000000008e1f         db  0x0b ; '.'
0000000000008e20         db  0x41 ; 'A'
0000000000008e21         db  0x0e ; '.'
0000000000008e22         db  0x08 ; '.'
0000000000008e23         db  0x00 ; '.'
0000000000008e24         dd         0x00000028                                  ; Length of the record
0000000000008e28         dd         0x00000118                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008e2c         db         0xc4, 0x9e, 2 dup (0xff)                    ; begin 0x2cf0
0000000000008e30         db         0x4e, 3 dup (0x00)                          ; length 0x4e (end at 0x2d3e)
0000000000008e34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e35         db  0x42 ; 'B'
0000000000008e36         db  0x0e ; '.'
0000000000008e37         db  0x10 ; '.'
0000000000008e38         db  0x8c ; '.'
0000000000008e39         db  0x02 ; '.'
0000000000008e3a         db  0x41 ; 'A'
0000000000008e3b         db  0x0e ; '.'
0000000000008e3c         db  0x18 ; '.'
0000000000008e3d         db  0x86 ; '.'
0000000000008e3e         db  0x03 ; '.'
0000000000008e3f         db  0x44 ; 'D'
0000000000008e40         db  0x0e ; '.'
0000000000008e41         db  0x20 ; ' '
0000000000008e42         db  0x83 ; '.'
0000000000008e43         db  0x04 ; '.'
0000000000008e44         db  0x7b ; '{'
0000000000008e45         db  0x0e ; '.'
0000000000008e46         db  0x18 ; '.'
0000000000008e47         db  0x45 ; 'E'
0000000000008e48         db  0x0e ; '.'
0000000000008e49         db  0x10 ; '.'
0000000000008e4a         db  0x42 ; 'B'
0000000000008e4b         db  0x0e ; '.'
0000000000008e4c         db  0x08 ; '.'
0000000000008e4d         db  0x00 ; '.'
0000000000008e4e         db  0x00 ; '.'
0000000000008e4f         db  0x00 ; '.'
0000000000008e50         dd         0x00000058                                  ; Length of the record
0000000000008e54         dd         0x00000144                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008e58         db         0xe8, 0x9e, 2 dup (0xff)                    ; begin 0x2d40
0000000000008e5c         db         0x0a, 0x01, 2 dup (0x00)                    ; length 0x10a (end at 0x2e4a)
0000000000008e60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e61         db  0x41 ; 'A'
0000000000008e62         db  0x0e ; '.'
0000000000008e63         db  0x10 ; '.'
0000000000008e64         db  0x86 ; '.'
0000000000008e65         db  0x02 ; '.'
0000000000008e66         db  0x41 ; 'A'
0000000000008e67         db  0x0e ; '.'
0000000000008e68         db  0x18 ; '.'
0000000000008e69         db  0x83 ; '.'
0000000000008e6a         db  0x03 ; '.'
0000000000008e6b         db  0x44 ; 'D'
0000000000008e6c         db  0x0e ; '.'
0000000000008e6d         db  0x20 ; ' '
0000000000008e6e         db  0x02 ; '.'
0000000000008e6f         db  0x75 ; 'u'
0000000000008e70         db  0x0a ; '.'
0000000000008e71         db  0x0e ; '.'
0000000000008e72         db  0x18 ; '.'
0000000000008e73         db  0x44 ; 'D'
0000000000008e74         db  0x0e ; '.'
0000000000008e75         db  0x10 ; '.'
0000000000008e76         db  0x41 ; 'A'
0000000000008e77         db  0x0e ; '.'
0000000000008e78         db  0x08 ; '.'
0000000000008e79         db  0x48 ; 'H'
0000000000008e7a         db  0x0b ; '.'
0000000000008e7b         db  0x5c ; '\'
0000000000008e7c         db  0x0a ; '.'
0000000000008e7d         db  0x0e ; '.'
0000000000008e7e         db  0x18 ; '.'
0000000000008e7f         db  0x43 ; 'C'
0000000000008e80         db  0x0e ; '.'
0000000000008e81         db  0x10 ; '.'
0000000000008e82         db  0x41 ; 'A'
0000000000008e83         db  0x0e ; '.'
0000000000008e84         db  0x08 ; '.'
0000000000008e85         db  0x48 ; 'H'
0000000000008e86         db  0x0b ; '.'
0000000000008e87         db  0x46 ; 'F'
0000000000008e88         db  0x0a ; '.'
0000000000008e89         db  0x0e ; '.'
0000000000008e8a         db  0x18 ; '.'
0000000000008e8b         db  0x41 ; 'A'
0000000000008e8c         db  0x0e ; '.'
0000000000008e8d         db  0x10 ; '.'
0000000000008e8e         db  0x41 ; 'A'
0000000000008e8f         db  0x0e ; '.'
0000000000008e90         db  0x08 ; '.'
0000000000008e91         db  0x48 ; 'H'
0000000000008e92         db  0x0b ; '.'
0000000000008e93         db  0x4c ; 'L'
0000000000008e94         db  0x0a ; '.'
0000000000008e95         db  0x0e ; '.'
0000000000008e96         db  0x18 ; '.'
0000000000008e97         db  0x41 ; 'A'
0000000000008e98         db  0x0e ; '.'
0000000000008e99         db  0x10 ; '.'
0000000000008e9a         db  0x41 ; 'A'
0000000000008e9b         db  0x0e ; '.'
0000000000008e9c         db  0x08 ; '.'
0000000000008e9d         db  0x42 ; 'B'
0000000000008e9e         db  0x0b ; '.'
0000000000008e9f         db  0x5c ; '\'
0000000000008ea0         db  0x0a ; '.'
0000000000008ea1         db  0x0e ; '.'
0000000000008ea2         db  0x18 ; '.'
0000000000008ea3         db  0x47 ; 'G'
0000000000008ea4         db  0x0e ; '.'
0000000000008ea5         db  0x10 ; '.'
0000000000008ea6         db  0x44 ; 'D'
0000000000008ea7         db  0x0e ; '.'
0000000000008ea8         db  0x08 ; '.'
0000000000008ea9         db  0x45 ; 'E'
0000000000008eaa         db  0x0b ; '.'
0000000000008eab         db  0x00 ; '.'
0000000000008eac         dd         0x00000010                                  ; Length of the record
0000000000008eb0         dd         0x000001a0                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008eb4         db         0x9c, 0x9f, 2 dup (0xff)                    ; begin 0x2e50
0000000000008eb8         db         0x52, 3 dup (0x00)                          ; length 0x52 (end at 0x2ea2)
0000000000008ebc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ebd         align      64
0000000000008ec0         dd         0x00000048                                  ; Length of the record
0000000000008ec4         dd         0x000001b4                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008ec8         db         0xe8, 0x9f, 2 dup (0xff)                    ; begin 0x2eb0
0000000000008ecc         db         0x12, 0x01, 2 dup (0x00)                    ; length 0x112 (end at 0x2fc2)
0000000000008ed0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ed1         db  0x42 ; 'B'
0000000000008ed2         db  0x0e ; '.'
0000000000008ed3         db  0x10 ; '.'
0000000000008ed4         db  0x8f ; '.'
0000000000008ed5         db  0x02 ; '.'
0000000000008ed6         db  0x42 ; 'B'
0000000000008ed7         db  0x0e ; '.'
0000000000008ed8         db  0x18 ; '.'
0000000000008ed9         db  0x8e ; '.'
0000000000008eda         db  0x03 ; '.'
0000000000008edb         db  0x45 ; 'E'
0000000000008edc         db  0x0e ; '.'
0000000000008edd         db  0x20 ; ' '
0000000000008ede         db  0x8d ; '.'
0000000000008edf         db  0x04 ; '.'
0000000000008ee0         db  0x42 ; 'B'
0000000000008ee1         db  0x0e ; '.'
0000000000008ee2         db  0x28 ; '('
0000000000008ee3         db  0x8c ; '.'
0000000000008ee4         db  0x05 ; '.'
0000000000008ee5         db  0x44 ; 'D'
0000000000008ee6         db  0x0e ; '.'
0000000000008ee7         db  0x30 ; '0'
0000000000008ee8         db  0x86 ; '.'
0000000000008ee9         db  0x06 ; '.'
0000000000008eea         db  0x41 ; 'A'
0000000000008eeb         db  0x0e ; '.'
0000000000008eec         db  0x38 ; '8'
0000000000008eed         db  0x83 ; '.'
0000000000008eee         db  0x07 ; '.'
0000000000008eef         db  0x44 ; 'D'
0000000000008ef0         db  0x0e ; '.'
0000000000008ef1         db  0x50 ; 'P'
0000000000008ef2         db  0x02 ; '.'
0000000000008ef3         db  0xd4 ; '.'
0000000000008ef4         db  0x0a ; '.'
0000000000008ef5         db  0x0e ; '.'
0000000000008ef6         db  0x38 ; '8'
0000000000008ef7         db  0x41 ; 'A'
0000000000008ef8         db  0x0e ; '.'
0000000000008ef9         db  0x30 ; '0'
0000000000008efa         db  0x41 ; 'A'
0000000000008efb         db  0x0e ; '.'
0000000000008efc         db  0x28 ; '('
0000000000008efd         db  0x42 ; 'B'
0000000000008efe         db  0x0e ; '.'
0000000000008eff         db  0x20 ; ' '
0000000000008f00         db  0x42 ; 'B'
0000000000008f01         db  0x0e ; '.'
0000000000008f02         db  0x18 ; '.'
0000000000008f03         db  0x42 ; 'B'
0000000000008f04         db  0x0e ; '.'
0000000000008f05         db  0x10 ; '.'
0000000000008f06         db  0x42 ; 'B'
0000000000008f07         db  0x0e ; '.'
0000000000008f08         db  0x08 ; '.'
0000000000008f09         db  0x46 ; 'F'
0000000000008f0a         db  0x0b ; '.'
0000000000008f0b         db  0x00 ; '.'
0000000000008f0c         dd         0x0000004c                                  ; Length of the record
0000000000008f10         dd         0x00000200                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008f14         db         0xbc, 0xa0, 2 dup (0xff)                    ; begin 0x2fd0
0000000000008f18         db         0x5f, 0x01, 2 dup (0x00)                    ; length 0x15f (end at 0x312f)
0000000000008f1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f1d         db  0x42 ; 'B'
0000000000008f1e         db  0x0e ; '.'
0000000000008f1f         db  0x10 ; '.'
0000000000008f20         db  0x8e ; '.'
0000000000008f21         db  0x02 ; '.'
0000000000008f22         db  0x42 ; 'B'
0000000000008f23         db  0x0e ; '.'
0000000000008f24         db  0x18 ; '.'
0000000000008f25         db  0x8d ; '.'
0000000000008f26         db  0x03 ; '.'
0000000000008f27         db  0x47 ; 'G'
0000000000008f28         db  0x0e ; '.'
0000000000008f29         db  0x20 ; ' '
0000000000008f2a         db  0x8c ; '.'
0000000000008f2b         db  0x04 ; '.'
0000000000008f2c         db  0x4b ; 'K'
0000000000008f2d         db  0x0e ; '.'
0000000000008f2e         db  0x28 ; '('
0000000000008f2f         db  0x86 ; '.'
0000000000008f30         db  0x05 ; '.'
0000000000008f31         db  0x41 ; 'A'
0000000000008f32         db  0x0e ; '.'
0000000000008f33         db  0x30 ; '0'
0000000000008f34         db  0x83 ; '.'
0000000000008f35         db  0x06 ; '.'
0000000000008f36         db  0x02 ; '.'
0000000000008f37         db  0xff ; '.'
0000000000008f38         db  0x0a ; '.'
0000000000008f39         db  0x0e ; '.'
0000000000008f3a         db  0x28 ; '('
0000000000008f3b         db  0x41 ; 'A'
0000000000008f3c         db  0x0e ; '.'
0000000000008f3d         db  0x20 ; ' '
0000000000008f3e         db  0x42 ; 'B'
0000000000008f3f         db  0x0e ; '.'
0000000000008f40         db  0x18 ; '.'
0000000000008f41         db  0x42 ; 'B'
0000000000008f42         db  0x0e ; '.'
0000000000008f43         db  0x10 ; '.'
0000000000008f44         db  0x42 ; 'B'
0000000000008f45         db  0x0e ; '.'
0000000000008f46         db  0x08 ; '.'
0000000000008f47         db  0x43 ; 'C'
0000000000008f48         db  0x0b ; '.'
0000000000008f49         db  0x61 ; 'a'
0000000000008f4a         db  0x0a ; '.'
0000000000008f4b         db  0x0e ; '.'
0000000000008f4c         db  0x28 ; '('
0000000000008f4d         db  0x41 ; 'A'
0000000000008f4e         db  0x0e ; '.'
0000000000008f4f         db  0x20 ; ' '
0000000000008f50         db  0x42 ; 'B'
0000000000008f51         db  0x0e ; '.'
0000000000008f52         db  0x18 ; '.'
0000000000008f53         db  0x42 ; 'B'
0000000000008f54         db  0x0e ; '.'
0000000000008f55         db  0x10 ; '.'
0000000000008f56         db  0x42 ; 'B'
0000000000008f57         db  0x0e ; '.'
0000000000008f58         db  0x08 ; '.'
0000000000008f59         db  0x48 ; 'H'
0000000000008f5a         db  0x0b ; '.'
0000000000008f5b         db  0x00 ; '.'
0000000000008f5c         dd         0x00000028                                  ; Length of the record
0000000000008f60         dd         0x00000250                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008f64         db         0xcc, 0xa1, 2 dup (0xff)                    ; begin 0x3130
0000000000008f68         db         0xb1, 3 dup (0x00)                          ; length 0xb1 (end at 0x31e1)
0000000000008f6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f6d         db  0x42 ; 'B'
0000000000008f6e         db  0x0e ; '.'
0000000000008f6f         db  0x10 ; '.'
0000000000008f70         db  0x8c ; '.'
0000000000008f71         db  0x02 ; '.'
0000000000008f72         db  0x44 ; 'D'
0000000000008f73         db  0x0e ; '.'
0000000000008f74         db  0x18 ; '.'
0000000000008f75         db  0x86 ; '.'
0000000000008f76         db  0x03 ; '.'
0000000000008f77         db  0x41 ; 'A'
0000000000008f78         db  0x0e ; '.'
0000000000008f79         db  0x20 ; ' '
0000000000008f7a         db  0x83 ; '.'
0000000000008f7b         db  0x04 ; '.'
0000000000008f7c         db  0x71 ; 'q'
0000000000008f7d         db  0x0a ; '.'
0000000000008f7e         db  0x0e ; '.'
0000000000008f7f         db  0x18 ; '.'
0000000000008f80         db  0x41 ; 'A'
0000000000008f81         db  0x0e ; '.'
0000000000008f82         db  0x10 ; '.'
0000000000008f83         db  0x42 ; 'B'
0000000000008f84         db  0x0e ; '.'
0000000000008f85         db  0x08 ; '.'
0000000000008f86         db  0x45 ; 'E'
0000000000008f87         db  0x0b ; '.'
0000000000008f88         dd         0x00000070                                  ; Length of the record
0000000000008f8c         dd         0x0000027c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000008f90         db         0x60, 0xa2, 2 dup (0xff)                    ; begin 0x31f0
0000000000008f94         db         0xe2, 0x03, 2 dup (0x00)                    ; length 0x3e2 (end at 0x35d2)
0000000000008f98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f99         db  0x42 ; 'B'
0000000000008f9a         db  0x0e ; '.'
0000000000008f9b         db  0x10 ; '.'
0000000000008f9c         db  0x8f ; '.'
0000000000008f9d         db  0x02 ; '.'
0000000000008f9e         db  0x42 ; 'B'
0000000000008f9f         db  0x0e ; '.'
0000000000008fa0         db  0x18 ; '.'
0000000000008fa1         db  0x8e ; '.'
0000000000008fa2         db  0x03 ; '.'
0000000000008fa3         db  0x45 ; 'E'
0000000000008fa4         db  0x0e ; '.'
0000000000008fa5         db  0x20 ; ' '
0000000000008fa6         db  0x8d ; '.'
0000000000008fa7         db  0x04 ; '.'
0000000000008fa8         db  0x42 ; 'B'
0000000000008fa9         db  0x0e ; '.'
0000000000008faa         db  0x28 ; '('
0000000000008fab         db  0x8c ; '.'
0000000000008fac         db  0x05 ; '.'
0000000000008fad         db  0x48 ; 'H'
0000000000008fae         db  0x0e ; '.'
0000000000008faf         db  0x30 ; '0'
0000000000008fb0         db  0x86 ; '.'
0000000000008fb1         db  0x06 ; '.'
0000000000008fb2         db  0x41 ; 'A'
0000000000008fb3         db  0x0e ; '.'
0000000000008fb4         db  0x38 ; '8'
0000000000008fb5         db  0x83 ; '.'
0000000000008fb6         db  0x07 ; '.'
0000000000008fb7         db  0x4d ; 'M'
0000000000008fb8         db  0x0e ; '.'
0000000000008fb9         db  0x50 ; 'P'
0000000000008fba         db  0x03 ; '.'
0000000000008fbb         db  0x2f ; '/'
0000000000008fbc         db  0x02 ; '.'
0000000000008fbd         db  0x0e ; '.'
0000000000008fbe         db  0x58 ; 'X'
0000000000008fbf         db  0x44 ; 'D'
0000000000008fc0         db  0x0e ; '.'
0000000000008fc1         db  0x60 ; '`'
0000000000008fc2         db  0x57 ; 'W'
0000000000008fc3         db  0x0e ; '.'
0000000000008fc4         db  0x58 ; 'X'
0000000000008fc5         db  0x41 ; 'A'
0000000000008fc6         db  0x0e ; '.'
0000000000008fc7         db  0x50 ; 'P'
0000000000008fc8         db  0x51 ; 'Q'
0000000000008fc9         db  0x0a ; '.'
0000000000008fca         db  0x0e ; '.'
0000000000008fcb         db  0x38 ; '8'
0000000000008fcc         db  0x41 ; 'A'
0000000000008fcd         db  0x0e ; '.'
0000000000008fce         db  0x30 ; '0'
0000000000008fcf         db  0x41 ; 'A'
0000000000008fd0         db  0x0e ; '.'
0000000000008fd1         db  0x28 ; '('
0000000000008fd2         db  0x42 ; 'B'
0000000000008fd3         db  0x0e ; '.'
0000000000008fd4         db  0x20 ; ' '
0000000000008fd5         db  0x42 ; 'B'
0000000000008fd6         db  0x0e ; '.'
0000000000008fd7         db  0x18 ; '.'
0000000000008fd8         db  0x42 ; 'B'
0000000000008fd9         db  0x0e ; '.'
0000000000008fda         db  0x10 ; '.'
0000000000008fdb         db  0x42 ; 'B'
0000000000008fdc         db  0x0e ; '.'
0000000000008fdd         db  0x08 ; '.'
0000000000008fde         db  0x49 ; 'I'
0000000000008fdf         db  0x0b ; '.'
0000000000008fe0         db  0x02 ; '.'
0000000000008fe1         db  0x74 ; 't'
0000000000008fe2         db  0x0a ; '.'
0000000000008fe3         db  0x0e ; '.'
0000000000008fe4         db  0x38 ; '8'
0000000000008fe5         db  0x41 ; 'A'
0000000000008fe6         db  0x0e ; '.'
0000000000008fe7         db  0x30 ; '0'
0000000000008fe8         db  0x41 ; 'A'
0000000000008fe9         db  0x0e ; '.'
0000000000008fea         db  0x28 ; '('
0000000000008feb         db  0x42 ; 'B'
0000000000008fec         db  0x0e ; '.'
0000000000008fed         db  0x20 ; ' '
0000000000008fee         db  0x42 ; 'B'
0000000000008fef         db  0x0e ; '.'
0000000000008ff0         db  0x18 ; '.'
0000000000008ff1         db  0x42 ; 'B'
0000000000008ff2         db  0x0e ; '.'
0000000000008ff3         db  0x10 ; '.'
0000000000008ff4         db  0x42 ; 'B'
0000000000008ff5         db  0x0e ; '.'
0000000000008ff6         db  0x08 ; '.'
0000000000008ff7         db  0x42 ; 'B'
0000000000008ff8         db  0x0b ; '.'
0000000000008ff9         db  0x00 ; '.'
0000000000008ffa         db  0x00 ; '.'
0000000000008ffb         db  0x00 ; '.'
0000000000008ffc         dd         0x00000028                                  ; Length of the record
0000000000009000         dd         0x000002f0                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009004         db         0xdc, 0xa5, 2 dup (0xff)                    ; begin 0x35e0
0000000000009008         db         0xd9, 3 dup (0x00)                          ; length 0xd9 (end at 0x36b9)
000000000000900c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000900d         db  0x42 ; 'B'
000000000000900e         db  0x0e ; '.'
000000000000900f         db  0x10 ; '.'
0000000000009010         db  0x8c ; '.'
0000000000009011         db  0x02 ; '.'
0000000000009012         db  0x41 ; 'A'
0000000000009013         db  0x0e ; '.'
0000000000009014         db  0x18 ; '.'
0000000000009015         db  0x86 ; '.'
0000000000009016         db  0x03 ; '.'
0000000000009017         db  0x44 ; 'D'
0000000000009018         db  0x0e ; '.'
0000000000009019         db  0x20 ; ' '
000000000000901a         db  0x83 ; '.'
000000000000901b         db  0x04 ; '.'
000000000000901c         db  0x6b ; 'k'
000000000000901d         db  0x0a ; '.'
000000000000901e         db  0x0e ; '.'
000000000000901f         db  0x18 ; '.'
0000000000009020         db  0x41 ; 'A'
0000000000009021         db  0x0e ; '.'
0000000000009022         db  0x10 ; '.'
0000000000009023         db  0x42 ; 'B'
0000000000009024         db  0x0e ; '.'
0000000000009025         db  0x08 ; '.'
0000000000009026         db  0x4b ; 'K'
0000000000009027         db  0x0b ; '.'
0000000000009028         dd         0x00000028                                  ; Length of the record
000000000000902c         dd         0x0000031c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009030         db         0x90, 0xa6, 2 dup (0xff)                    ; begin 0x36c0
0000000000009034         db         0x1a, 0x04, 2 dup (0x00)                    ; length 0x41a (end at 0x3ada)
0000000000009038         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009039         db  0x42 ; 'B'
000000000000903a         db  0x0e ; '.'
000000000000903b         db  0x10 ; '.'
000000000000903c         db  0x8d ; '.'
000000000000903d         db  0x02 ; '.'
000000000000903e         db  0x42 ; 'B'
000000000000903f         db  0x0e ; '.'
0000000000009040         db  0x18 ; '.'
0000000000009041         db  0x8c ; '.'
0000000000009042         db  0x03 ; '.'
0000000000009043         db  0x46 ; 'F'
0000000000009044         db  0x0e ; '.'
0000000000009045         db  0x20 ; ' '
0000000000009046         db  0x86 ; '.'
0000000000009047         db  0x04 ; '.'
0000000000009048         db  0x41 ; 'A'
0000000000009049         db  0x0e ; '.'
000000000000904a         db  0x28 ; '('
000000000000904b         db  0x83 ; '.'
000000000000904c         db  0x05 ; '.'
000000000000904d         db  0x49 ; 'I'
000000000000904e         db  0x0e ; '.'
000000000000904f         db  0xb0 ; '.'
0000000000009050         db  0x01 ; '.'
0000000000009051         db  0x00 ; '.'
0000000000009052         db  0x00 ; '.'
0000000000009053         db  0x00 ; '.'
0000000000009054         dd         0x00000040                                  ; Length of the record
0000000000009058         dd         0x00000348                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000905c         db         0x84, 0xaa, 2 dup (0xff)                    ; begin 0x3ae0
0000000000009060         db         0xb6, 0x01, 2 dup (0x00)                    ; length 0x1b6 (end at 0x3c96)
0000000000009064         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009065         db  0x42 ; 'B'
0000000000009066         db  0x0e ; '.'
0000000000009067         db  0x10 ; '.'
0000000000009068         db  0x8e ; '.'
0000000000009069         db  0x02 ; '.'
000000000000906a         db  0x42 ; 'B'
000000000000906b         db  0x0e ; '.'
000000000000906c         db  0x18 ; '.'
000000000000906d         db  0x8d ; '.'
000000000000906e         db  0x03 ; '.'
000000000000906f         db  0x45 ; 'E'
0000000000009070         db  0x0e ; '.'
0000000000009071         db  0x20 ; ' '
0000000000009072         db  0x8c ; '.'
0000000000009073         db  0x04 ; '.'
0000000000009074         db  0x41 ; 'A'
0000000000009075         db  0x0e ; '.'
0000000000009076         db  0x28 ; '('
0000000000009077         db  0x86 ; '.'
0000000000009078         db  0x05 ; '.'
0000000000009079         db  0x44 ; 'D'
000000000000907a         db  0x0e ; '.'
000000000000907b         db  0x30 ; '0'
000000000000907c         db  0x83 ; '.'
000000000000907d         db  0x06 ; '.'
000000000000907e         db  0x44 ; 'D'
000000000000907f         db  0x0e ; '.'
0000000000009080         db  0x50 ; 'P'
0000000000009081         db  0x7e ; '~'
0000000000009082         db  0x0a ; '.'
0000000000009083         db  0x0e ; '.'
0000000000009084         db  0x30 ; '0'
0000000000009085         db  0x41 ; 'A'
0000000000009086         db  0x0e ; '.'
0000000000009087         db  0x28 ; '('
0000000000009088         db  0x41 ; 'A'
0000000000009089         db  0x0e ; '.'
000000000000908a         db  0x20 ; ' '
000000000000908b         db  0x42 ; 'B'
000000000000908c         db  0x0e ; '.'
000000000000908d         db  0x18 ; '.'
000000000000908e         db  0x42 ; 'B'
000000000000908f         db  0x0e ; '.'
0000000000009090         db  0x10 ; '.'
0000000000009091         db  0x42 ; 'B'
0000000000009092         db  0x0e ; '.'
0000000000009093         db  0x08 ; '.'
0000000000009094         db  0x48 ; 'H'
0000000000009095         db  0x0b ; '.'
0000000000009096         db  0x00 ; '.'
0000000000009097         db  0x00 ; '.'
0000000000009098         dd         0x0000004c                                  ; Length of the record
000000000000909c         dd         0x0000038c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000090a0         db         0x10, 0x89, 2 dup (0xff)                    ; begin 0x19b0
00000000000090a4         db         0x7a, 0x0f, 2 dup (0x00)                    ; length 0xf7a (end at 0x292a)
00000000000090a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090a9         db  0x42 ; 'B'
00000000000090aa         db  0x0e ; '.'
00000000000090ab         db  0x10 ; '.'
00000000000090ac         db  0x8f ; '.'
00000000000090ad         db  0x02 ; '.'
00000000000090ae         db  0x42 ; 'B'
00000000000090af         db  0x0e ; '.'
00000000000090b0         db  0x18 ; '.'
00000000000090b1         db  0x8e ; '.'
00000000000090b2         db  0x03 ; '.'
00000000000090b3         db  0x42 ; 'B'
00000000000090b4         db  0x0e ; '.'
00000000000090b5         db  0x20 ; ' '
00000000000090b6         db  0x8d ; '.'
00000000000090b7         db  0x04 ; '.'
00000000000090b8         db  0x42 ; 'B'
00000000000090b9         db  0x0e ; '.'
00000000000090ba         db  0x28 ; '('
00000000000090bb         db  0x8c ; '.'
00000000000090bc         db  0x05 ; '.'
00000000000090bd         db  0x41 ; 'A'
00000000000090be         db  0x0e ; '.'
00000000000090bf         db  0x30 ; '0'
00000000000090c0         db  0x86 ; '.'
00000000000090c1         db  0x06 ; '.'
00000000000090c2         db  0x41 ; 'A'
00000000000090c3         db  0x0e ; '.'
00000000000090c4         db  0x38 ; '8'
00000000000090c5         db  0x83 ; '.'
00000000000090c6         db  0x07 ; '.'
00000000000090c7         db  0x4d ; 'M'
00000000000090c8         db  0x0e ; '.'
00000000000090c9         db  0xd0 ; '.'
00000000000090ca         db  0x01 ; '.'
00000000000090cb         db  0x03 ; '.'
00000000000090cc         db  0x55 ; 'U'
00000000000090cd         db  0x07 ; '.'
00000000000090ce         db  0x0a ; '.'
00000000000090cf         db  0x0e ; '.'
00000000000090d0         db  0x38 ; '8'
00000000000090d1         db  0x41 ; 'A'
00000000000090d2         db  0x0e ; '.'
00000000000090d3         db  0x30 ; '0'
00000000000090d4         db  0x41 ; 'A'
00000000000090d5         db  0x0e ; '.'
00000000000090d6         db  0x28 ; '('
00000000000090d7         db  0x42 ; 'B'
00000000000090d8         db  0x0e ; '.'
00000000000090d9         db  0x20 ; ' '
00000000000090da         db  0x42 ; 'B'
00000000000090db         db  0x0e ; '.'
00000000000090dc         db  0x18 ; '.'
00000000000090dd         db  0x42 ; 'B'
00000000000090de         db  0x0e ; '.'
00000000000090df         db  0x10 ; '.'
00000000000090e0         db  0x42 ; 'B'
00000000000090e1         db  0x0e ; '.'
00000000000090e2         db  0x08 ; '.'
00000000000090e3         db  0x4a ; 'J'
00000000000090e4         db  0x0b ; '.'
00000000000090e5         db  0x00 ; '.'
00000000000090e6         db  0x00 ; '.'
00000000000090e7         db  0x00 ; '.'
00000000000090e8         dd         0x00000010                                  ; Length of the record
00000000000090ec         dd         0x000003dc                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000090f0         db         0xb0, 0xab, 2 dup (0xff)                    ; begin 0x3ca0
00000000000090f4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3ca8)
00000000000090f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090f9         align      4
00000000000090fc         dd         0x00000010                                  ; Length of the record
0000000000009100         dd         0x000003f0                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009104         db         0xac, 0xab, 2 dup (0xff)                    ; begin 0x3cb0
0000000000009108         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3cb8)
000000000000910c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000910d         align      16
0000000000009110         dd         0x0000002c                                  ; Length of the record
0000000000009114         dd         0x00000404                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009118         db         0xa8, 0xab, 2 dup (0xff)                    ; begin 0x3cc0
000000000000911c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x3d64)
0000000000009120         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009121         db  0x41 ; 'A'
0000000000009122         db  0x0e ; '.'
0000000000009123         db  0x10 ; '.'
0000000000009124         db  0x86 ; '.'
0000000000009125         db  0x02 ; '.'
0000000000009126         db  0x41 ; 'A'
0000000000009127         db  0x0e ; '.'
0000000000009128         db  0x18 ; '.'
0000000000009129         db  0x83 ; '.'
000000000000912a         db  0x03 ; '.'
000000000000912b         db  0x44 ; 'D'
000000000000912c         db  0x0e ; '.'
000000000000912d         db  0x20 ; ' '
000000000000912e         db  0x7a ; 'z'
000000000000912f         db  0x0a ; '.'
0000000000009130         db  0x0e ; '.'
0000000000009131         db  0x18 ; '.'
0000000000009132         db  0x41 ; 'A'
0000000000009133         db  0x0e ; '.'
0000000000009134         db  0x10 ; '.'
0000000000009135         db  0x41 ; 'A'
0000000000009136         db  0x0e ; '.'
0000000000009137         db  0x08 ; '.'
0000000000009138         db  0x41 ; 'A'
0000000000009139         db  0x0b ; '.'
000000000000913a         db  0x00 ; '.'
000000000000913b         db  0x00 ; '.'
000000000000913c         db  0x00 ; '.'
000000000000913d         db  0x00 ; '.'
000000000000913e         db  0x00 ; '.'
000000000000913f         db  0x00 ; '.'
0000000000009140         dd         0x00000010                                  ; Length of the record
0000000000009144         dd         0x00000434                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009148         db         0x28, 0xac, 2 dup (0xff)                    ; begin 0x3d70
000000000000914c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x3d75)
0000000000009150         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009151         align      4
0000000000009154         dd         0x00000018                                  ; Length of the record
0000000000009158         dd         0x00000448                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000915c         db         0x24, 0xac, 2 dup (0xff)                    ; begin 0x3d80
0000000000009160         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x3da2)
0000000000009164         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009165         db  0x46 ; 'F'
0000000000009166         db  0x0e ; '.'
0000000000009167         db  0x10 ; '.'
0000000000009168         db  0x83 ; '.'
0000000000009169         db  0x02 ; '.'
000000000000916a         db  0x4e ; 'N'
000000000000916b         db  0xc3 ; '.'
000000000000916c         db  0x0e ; '.'
000000000000916d         db  0x08 ; '.'
000000000000916e         db  0x00 ; '.'
000000000000916f         db  0x00 ; '.'
0000000000009170         dd         0x0000002c                                  ; Length of the record
0000000000009174         dd         0x00000464                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009178         db         0x38, 0xac, 2 dup (0xff)                    ; begin 0x3db0
000000000000917c         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x3e43)
0000000000009180         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009181         db  0x42 ; 'B'
0000000000009182         db  0x0e ; '.'
0000000000009183         db  0x10 ; '.'
0000000000009184         db  0x8c ; '.'
0000000000009185         db  0x02 ; '.'
0000000000009186         db  0x41 ; 'A'
0000000000009187         db  0x0e ; '.'
0000000000009188         db  0x18 ; '.'
0000000000009189         db  0x86 ; '.'
000000000000918a         db  0x03 ; '.'
000000000000918b         db  0x44 ; 'D'
000000000000918c         db  0x0e ; '.'
000000000000918d         db  0x20 ; ' '
000000000000918e         db  0x83 ; '.'
000000000000918f         db  0x04 ; '.'
0000000000009190         db  0x5e ; '^'
0000000000009191         db  0x0a ; '.'
0000000000009192         db  0x0e ; '.'
0000000000009193         db  0x18 ; '.'
0000000000009194         db  0x41 ; 'A'
0000000000009195         db  0x0e ; '.'
0000000000009196         db  0x10 ; '.'
0000000000009197         db  0x42 ; 'B'
0000000000009198         db  0x0e ; '.'
0000000000009199         db  0x08 ; '.'
000000000000919a         db  0x48 ; 'H'
000000000000919b         db  0x0b ; '.'
000000000000919c         db  0x00 ; '.'
000000000000919d         db  0x00 ; '.'
000000000000919e         db  0x00 ; '.'
000000000000919f         db  0x00 ; '.'
00000000000091a0         dd         0x0000001c                                  ; Length of the record
00000000000091a4         dd         0x00000494                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000091a8         db         0xa8, 0xac, 2 dup (0xff)                    ; begin 0x3e50
00000000000091ac         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x3eb0)
00000000000091b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091b1         db  0x44 ; 'D'
00000000000091b2         db  0x0e ; '.'
00000000000091b3         db  0x10 ; '.'
00000000000091b4         db  0x75 ; 'u'
00000000000091b5         db  0x0a ; '.'
00000000000091b6         db  0x0e ; '.'
00000000000091b7         db  0x08 ; '.'
00000000000091b8         db  0x47 ; 'G'
00000000000091b9         db  0x0b ; '.'
00000000000091ba         db  0x5f ; '_'
00000000000091bb         db  0x0e ; '.'
00000000000091bc         db  0x08 ; '.'
00000000000091bd         db  0x00 ; '.'
00000000000091be         db  0x00 ; '.'
00000000000091bf         db  0x00 ; '.'
00000000000091c0         dd         0x00000010                                  ; Length of the record
00000000000091c4         dd         0x000004b4                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000091c8         db         0xe8, 0xac, 2 dup (0xff)                    ; begin 0x3eb0
00000000000091cc         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x3ec0)
00000000000091d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091d1         align      4
00000000000091d4         dd         0x00000060                                  ; Length of the record
00000000000091d8         dd         0x000004c8                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000091dc         db         0xe4, 0xac, 2 dup (0xff)                    ; begin 0x3ec0
00000000000091e0         db         0x08, 0x01, 2 dup (0x00)                    ; length 0x108 (end at 0x3fc8)
00000000000091e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091e5         db  0x42 ; 'B'
00000000000091e6         db  0x0e ; '.'
00000000000091e7         db  0x10 ; '.'
00000000000091e8         db  0x8f ; '.'
00000000000091e9         db  0x02 ; '.'
00000000000091ea         db  0x42 ; 'B'
00000000000091eb         db  0x0e ; '.'
00000000000091ec         db  0x18 ; '.'
00000000000091ed         db  0x8e ; '.'
00000000000091ee         db  0x03 ; '.'
00000000000091ef         db  0x42 ; 'B'
00000000000091f0         db  0x0e ; '.'
00000000000091f1         db  0x20 ; ' '
00000000000091f2         db  0x8d ; '.'
00000000000091f3         db  0x04 ; '.'
00000000000091f4         db  0x42 ; 'B'
00000000000091f5         db  0x0e ; '.'
00000000000091f6         db  0x28 ; '('
00000000000091f7         db  0x8c ; '.'
00000000000091f8         db  0x05 ; '.'
00000000000091f9         db  0x41 ; 'A'
00000000000091fa         db  0x0e ; '.'
00000000000091fb         db  0x30 ; '0'
00000000000091fc         db  0x86 ; '.'
00000000000091fd         db  0x06 ; '.'
00000000000091fe         db  0x41 ; 'A'
00000000000091ff         db  0x0e ; '.'
0000000000009200         db  0x38 ; '8'
0000000000009201         db  0x83 ; '.'
0000000000009202         db  0x07 ; '.'
0000000000009203         db  0x44 ; 'D'
0000000000009204         db  0x0e ; '.'
0000000000009205         db  0x50 ; 'P'
0000000000009206         db  0x02 ; '.'
0000000000009207         db  0x96 ; '.'
0000000000009208         db  0x0a ; '.'
0000000000009209         db  0x0e ; '.'
000000000000920a         db  0x38 ; '8'
000000000000920b         db  0x41 ; 'A'
000000000000920c         db  0x0e ; '.'
000000000000920d         db  0x30 ; '0'
000000000000920e         db  0x41 ; 'A'
000000000000920f         db  0x0e ; '.'
0000000000009210         db  0x28 ; '('
0000000000009211         db  0x42 ; 'B'
0000000000009212         db  0x0e ; '.'
0000000000009213         db  0x20 ; ' '
0000000000009214         db  0x42 ; 'B'
0000000000009215         db  0x0e ; '.'
0000000000009216         db  0x18 ; '.'
0000000000009217         db  0x42 ; 'B'
0000000000009218         db  0x0e ; '.'
0000000000009219         db  0x10 ; '.'
000000000000921a         db  0x42 ; 'B'
000000000000921b         db  0x0e ; '.'
000000000000921c         db  0x08 ; '.'
000000000000921d         db  0x42 ; 'B'
000000000000921e         db  0x0b ; '.'
000000000000921f         db  0x02 ; '.'
0000000000009220         db  0x44 ; 'D'
0000000000009221         db  0x0a ; '.'
0000000000009222         db  0x0e ; '.'
0000000000009223         db  0x38 ; '8'
0000000000009224         db  0x43 ; 'C'
0000000000009225         db  0x0e ; '.'
0000000000009226         db  0x30 ; '0'
0000000000009227         db  0x41 ; 'A'
0000000000009228         db  0x0e ; '.'
0000000000009229         db  0x28 ; '('
000000000000922a         db  0x42 ; 'B'
000000000000922b         db  0x0e ; '.'
000000000000922c         db  0x20 ; ' '
000000000000922d         db  0x42 ; 'B'
000000000000922e         db  0x0e ; '.'
000000000000922f         db  0x18 ; '.'
0000000000009230         db  0x42 ; 'B'
0000000000009231         db  0x0e ; '.'
0000000000009232         db  0x10 ; '.'
0000000000009233         db  0x42 ; 'B'
0000000000009234         db  0x0e ; '.'
0000000000009235         db  0x08 ; '.'
0000000000009236         db  0x41 ; 'A'
0000000000009237         db  0x0b ; '.'
0000000000009238         dd         0x00000010                                  ; Length of the record
000000000000923c         dd         0x0000052c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009240         db         0x90, 0xad, 2 dup (0xff)                    ; begin 0x3fd0
0000000000009244         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x3fda)
0000000000009248         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009249         align      4
000000000000924c         dd         0x00000010                                  ; Length of the record
0000000000009250         dd         0x00000540                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009254         db         0x8c, 0xad, 2 dup (0xff)                    ; begin 0x3fe0
0000000000009258         db         0x09, 3 dup (0x00)                          ; length 0x9 (end at 0x3fe9)
000000000000925c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000925d         align      32
0000000000009260         dd         0x0000002c                                  ; Length of the record
0000000000009264         dd         0x00000554                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009268         db         0x88, 0xad, 2 dup (0xff)                    ; begin 0x3ff0
000000000000926c         db         0x4b, 3 dup (0x00)                          ; length 0x4b (end at 0x403b)
0000000000009270         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009271         db  0x47 ; 'G'
0000000000009272         db  0x0e ; '.'
0000000000009273         db  0x10 ; '.'
0000000000009274         db  0x8c ; '.'
0000000000009275         db  0x02 ; '.'
0000000000009276         db  0x41 ; 'A'
0000000000009277         db  0x0e ; '.'
0000000000009278         db  0x18 ; '.'
0000000000009279         db  0x86 ; '.'
000000000000927a         db  0x03 ; '.'
000000000000927b         db  0x44 ; 'D'
000000000000927c         db  0x0e ; '.'
000000000000927d         db  0x20 ; ' '
000000000000927e         db  0x83 ; '.'
000000000000927f         db  0x04 ; '.'
0000000000009280         db  0x72 ; 'r'
0000000000009281         db  0x0e ; '.'
0000000000009282         db  0x18 ; '.'
0000000000009283         db  0x41 ; 'A'
0000000000009284         db  0x0e ; '.'
0000000000009285         db  0x10 ; '.'
0000000000009286         db  0x42 ; 'B'
0000000000009287         db  0x0e ; '.'
0000000000009288         db  0x08 ; '.'
0000000000009289         db  0x47 ; 'G'
000000000000928a         db  0xc3 ; '.'
000000000000928b         db  0xc6 ; '.'
000000000000928c         db  0xcc ; '.'
000000000000928d         db  0x00 ; '.'
000000000000928e         db  0x00 ; '.'
000000000000928f         db  0x00 ; '.'
0000000000009290         dd         0x0000001c                                  ; Length of the record
0000000000009294         dd         0x00000584                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009298         db         0xa8, 0xad, 2 dup (0xff)                    ; begin 0x4040
000000000000929c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x40df)
00000000000092a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092a1         db  0x44 ; 'D'
00000000000092a2         db  0x0e ; '.'
00000000000092a3         db  0x10 ; '.'
00000000000092a4         db  0x83 ; '.'
00000000000092a5         db  0x02 ; '.'
00000000000092a6         db  0x02 ; '.'
00000000000092a7         db  0x78 ; 'x'
00000000000092a8         db  0x0a ; '.'
00000000000092a9         db  0x0e ; '.'
00000000000092aa         db  0x08 ; '.'
00000000000092ab         db  0x41 ; 'A'
00000000000092ac         db  0x0b ; '.'
00000000000092ad         db  0x00 ; '.'
00000000000092ae         db  0x00 ; '.'
00000000000092af         db  0x00 ; '.'
00000000000092b0         dd         0x00000040                                  ; Length of the record
00000000000092b4         dd         0x000005a4                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000092b8         db         0x28, 0xae, 2 dup (0xff)                    ; begin 0x40e0
00000000000092bc         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x41c7)
00000000000092c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092c1         db  0x41 ; 'A'
00000000000092c2         db  0x0e ; '.'
00000000000092c3         db  0x10 ; '.'
00000000000092c4         db  0x86 ; '.'
00000000000092c5         db  0x02 ; '.'
00000000000092c6         db  0x41 ; 'A'
00000000000092c7         db  0x0e ; '.'
00000000000092c8         db  0x18 ; '.'
00000000000092c9         db  0x83 ; '.'
00000000000092ca         db  0x03 ; '.'
00000000000092cb         db  0x49 ; 'I'
00000000000092cc         db  0x0e ; '.'
00000000000092cd         db  0x20 ; ' '
00000000000092ce         db  0x6e ; 'n'
00000000000092cf         db  0x0a ; '.'
00000000000092d0         db  0x0e ; '.'
00000000000092d1         db  0x18 ; '.'
00000000000092d2         db  0x41 ; 'A'
00000000000092d3         db  0x0e ; '.'
00000000000092d4         db  0x10 ; '.'
00000000000092d5         db  0x41 ; 'A'
00000000000092d6         db  0x0e ; '.'
00000000000092d7         db  0x08 ; '.'
00000000000092d8         db  0x45 ; 'E'
00000000000092d9         db  0x0b ; '.'
00000000000092da         db  0x02 ; '.'
00000000000092db         db  0x4a ; 'J'
00000000000092dc         db  0x0a ; '.'
00000000000092dd         db  0x0e ; '.'
00000000000092de         db  0x18 ; '.'
00000000000092df         db  0x41 ; 'A'
00000000000092e0         db  0x0e ; '.'
00000000000092e1         db  0x10 ; '.'
00000000000092e2         db  0x41 ; 'A'
00000000000092e3         db  0x0e ; '.'
00000000000092e4         db  0x08 ; '.'
00000000000092e5         db  0x44 ; 'D'
00000000000092e6         db  0x0b ; '.'
00000000000092e7         db  0x02 ; '.'
00000000000092e8         db  0x54 ; 'T'
00000000000092e9         db  0x0e ; '.'
00000000000092ea         db  0x18 ; '.'
00000000000092eb         db  0x41 ; 'A'
00000000000092ec         db  0x0e ; '.'
00000000000092ed         db  0x10 ; '.'
00000000000092ee         db  0x41 ; 'A'
00000000000092ef         db  0x0e ; '.'
00000000000092f0         db  0x08 ; '.'
00000000000092f1         db  0x00 ; '.'
00000000000092f2         db  0x00 ; '.'
00000000000092f3         db  0x00 ; '.'
00000000000092f4         dd         0x00000074                                  ; Length of the record
00000000000092f8         dd         0x000005e8                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000092fc         db         0xd4, 0xae, 2 dup (0xff)                    ; begin 0x41d0
0000000000009300         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x5404)
0000000000009304         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009305         db  0x42 ; 'B'
0000000000009306         db  0x0e ; '.'
0000000000009307         db  0x10 ; '.'
0000000000009308         db  0x8f ; '.'
0000000000009309         db  0x02 ; '.'
000000000000930a         db  0x42 ; 'B'
000000000000930b         db  0x0e ; '.'
000000000000930c         db  0x18 ; '.'
000000000000930d         db  0x8e ; '.'
000000000000930e         db  0x03 ; '.'
000000000000930f         db  0x45 ; 'E'
0000000000009310         db  0x0e ; '.'
0000000000009311         db  0x20 ; ' '
0000000000009312         db  0x8d ; '.'
0000000000009313         db  0x04 ; '.'
0000000000009314         db  0x42 ; 'B'
0000000000009315         db  0x0e ; '.'
0000000000009316         db  0x28 ; '('
0000000000009317         db  0x8c ; '.'
0000000000009318         db  0x05 ; '.'
0000000000009319         db  0x44 ; 'D'
000000000000931a         db  0x0e ; '.'
000000000000931b         db  0x30 ; '0'
000000000000931c         db  0x86 ; '.'
000000000000931d         db  0x06 ; '.'
000000000000931e         db  0x41 ; 'A'
000000000000931f         db  0x0e ; '.'
0000000000009320         db  0x38 ; '8'
0000000000009321         db  0x83 ; '.'
0000000000009322         db  0x07 ; '.'
0000000000009323         db  0x53 ; 'S'
0000000000009324         db  0x0e ; '.'
0000000000009325         db  0xf0 ; '.'
0000000000009326         db  0x01 ; '.'
0000000000009327         db  0x03 ; '.'
0000000000009328         db  0x81 ; '.'
0000000000009329         db  0x0b ; '.'
000000000000932a         db  0x0e ; '.'
000000000000932b         db  0xf8 ; '.'
000000000000932c         db  0x01 ; '.'
000000000000932d         db  0x4a ; 'J'
000000000000932e         db  0x0e ; '.'
000000000000932f         db  0x80 ; '.'
0000000000009330         db  0x02 ; '.'
0000000000009331         db  0x44 ; 'D'
0000000000009332         db  0x0e ; '.'
0000000000009333         db  0x88 ; '.'
0000000000009334         db  0x02 ; '.'
0000000000009335         db  0x45 ; 'E'
0000000000009336         db  0x0e ; '.'
0000000000009337         db  0x90 ; '.'
0000000000009338         db  0x02 ; '.'
0000000000009339         db  0x5f ; '_'
000000000000933a         db  0x0e ; '.'
000000000000933b         db  0xf0 ; '.'
000000000000933c         db  0x01 ; '.'
000000000000933d         db  0x64 ; 'd'
000000000000933e         db  0x0a ; '.'
000000000000933f         db  0x0e ; '.'
0000000000009340         db  0x38 ; '8'
0000000000009341         db  0x41 ; 'A'
0000000000009342         db  0x0e ; '.'
0000000000009343         db  0x30 ; '0'
0000000000009344         db  0x41 ; 'A'
0000000000009345         db  0x0e ; '.'
0000000000009346         db  0x28 ; '('
0000000000009347         db  0x42 ; 'B'
0000000000009348         db  0x0e ; '.'
0000000000009349         db  0x20 ; ' '
000000000000934a         db  0x42 ; 'B'
000000000000934b         db  0x0e ; '.'
000000000000934c         db  0x18 ; '.'
000000000000934d         db  0x42 ; 'B'
000000000000934e         db  0x0e ; '.'
000000000000934f         db  0x10 ; '.'
0000000000009350         db  0x42 ; 'B'
0000000000009351         db  0x0e ; '.'
0000000000009352         db  0x08 ; '.'
0000000000009353         db  0x44 ; 'D'
0000000000009354         db  0x0b ; '.'
0000000000009355         db  0x03 ; '.'
0000000000009356         db  0x99 ; '.'
0000000000009357         db  0x05 ; '.'
0000000000009358         db  0x0e ; '.'
0000000000009359         db  0xf8 ; '.'
000000000000935a         db  0x01 ; '.'
000000000000935b         db  0x4d ; 'M'
000000000000935c         db  0x0e ; '.'
000000000000935d         db  0x80 ; '.'
000000000000935e         db  0x02 ; '.'
000000000000935f         db  0x44 ; 'D'
0000000000009360         db  0x0e ; '.'
0000000000009361         db  0x88 ; '.'
0000000000009362         db  0x02 ; '.'
0000000000009363         db  0x47 ; 'G'
0000000000009364         db  0x0e ; '.'
0000000000009365         db  0x90 ; '.'
0000000000009366         db  0x02 ; '.'
0000000000009367         db  0x5b ; '['
0000000000009368         db  0x0e ; '.'
0000000000009369         db  0xf0 ; '.'
000000000000936a         db  0x01 ; '.'
000000000000936b         db  0x00 ; '.'
000000000000936c         dd         0x00000068                                  ; Length of the record
0000000000009370         dd         0x00000660                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009374         db         0x9c, 0xc0, 2 dup (0xff)                    ; begin 0x5410
0000000000009378         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x55bb)
000000000000937c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000937d         db  0x42 ; 'B'
000000000000937e         db  0x0e ; '.'
000000000000937f         db  0x10 ; '.'
0000000000009380         db  0x8f ; '.'
0000000000009381         db  0x02 ; '.'
0000000000009382         db  0x42 ; 'B'
0000000000009383         db  0x0e ; '.'
0000000000009384         db  0x18 ; '.'
0000000000009385         db  0x8e ; '.'
0000000000009386         db  0x03 ; '.'
0000000000009387         db  0x45 ; 'E'
0000000000009388         db  0x0e ; '.'
0000000000009389         db  0x20 ; ' '
000000000000938a         db  0x8d ; '.'
000000000000938b         db  0x04 ; '.'
000000000000938c         db  0x42 ; 'B'
000000000000938d         db  0x0e ; '.'
000000000000938e         db  0x28 ; '('
000000000000938f         db  0x8c ; '.'
0000000000009390         db  0x05 ; '.'
0000000000009391         db  0x44 ; 'D'
0000000000009392         db  0x0e ; '.'
0000000000009393         db  0x30 ; '0'
0000000000009394         db  0x86 ; '.'
0000000000009395         db  0x06 ; '.'
0000000000009396         db  0x41 ; 'A'
0000000000009397         db  0x0e ; '.'
0000000000009398         db  0x38 ; '8'
0000000000009399         db  0x83 ; '.'
000000000000939a         db  0x07 ; '.'
000000000000939b         db  0x47 ; 'G'
000000000000939c         db  0x0e ; '.'
000000000000939d         db  0x60 ; '`'
000000000000939e         db  0x02 ; '.'
000000000000939f         db  0x99 ; '.'
00000000000093a0         db  0x0e ; '.'
00000000000093a1         db  0x68 ; 'h'
00000000000093a2         db  0x5f ; '_'
00000000000093a3         db  0x0e ; '.'
00000000000093a4         db  0x70 ; 'p'
00000000000093a5         db  0x46 ; 'F'
00000000000093a6         db  0x0e ; '.'
00000000000093a7         db  0x78 ; 'x'
00000000000093a8         db  0x42 ; 'B'
00000000000093a9         db  0x0e ; '.'
00000000000093aa         db  0x80 ; '.'
00000000000093ab         db  0x01 ; '.'
00000000000093ac         db  0x59 ; 'Y'
00000000000093ad         db  0x0e ; '.'
00000000000093ae         db  0x60 ; '`'
00000000000093af         db  0x02 ; '.'
00000000000093b0         db  0x40 ; '@'
00000000000093b1         db  0x0e ; '.'
00000000000093b2         db  0x68 ; 'h'
00000000000093b3         db  0x4b ; 'K'
00000000000093b4         db  0x0e ; '.'
00000000000093b5         db  0x70 ; 'p'
00000000000093b6         db  0x43 ; 'C'
00000000000093b7         db  0x0e ; '.'
00000000000093b8         db  0x78 ; 'x'
00000000000093b9         db  0x45 ; 'E'
00000000000093ba         db  0x0e ; '.'
00000000000093bb         db  0x80 ; '.'
00000000000093bc         db  0x01 ; '.'
00000000000093bd         db  0x5e ; '^'
00000000000093be         db  0x0e ; '.'
00000000000093bf         db  0x60 ; '`'
00000000000093c0         db  0x4c ; 'L'
00000000000093c1         db  0x0a ; '.'
00000000000093c2         db  0x0e ; '.'
00000000000093c3         db  0x38 ; '8'
00000000000093c4         db  0x44 ; 'D'
00000000000093c5         db  0x0e ; '.'
00000000000093c6         db  0x30 ; '0'
00000000000093c7         db  0x41 ; 'A'
00000000000093c8         db  0x0e ; '.'
00000000000093c9         db  0x28 ; '('
00000000000093ca         db  0x42 ; 'B'
00000000000093cb         db  0x0e ; '.'
00000000000093cc         db  0x20 ; ' '
00000000000093cd         db  0x42 ; 'B'
00000000000093ce         db  0x0e ; '.'
00000000000093cf         db  0x18 ; '.'
00000000000093d0         db  0x42 ; 'B'
00000000000093d1         db  0x0e ; '.'
00000000000093d2         db  0x10 ; '.'
00000000000093d3         db  0x42 ; 'B'
00000000000093d4         db  0x0e ; '.'
00000000000093d5         db  0x08 ; '.'
00000000000093d6         db  0x46 ; 'F'
00000000000093d7         db  0x0b ; '.'
00000000000093d8         dd         0x00000028                                  ; Length of the record
00000000000093dc         dd         0x000006cc                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000093e0         db         0xe0, 0xc1, 2 dup (0xff)                    ; begin 0x55c0
00000000000093e4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x55f6)
00000000000093e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000093e9         db  0x42 ; 'B'
00000000000093ea         db  0x0e ; '.'
00000000000093eb         db  0x10 ; '.'
00000000000093ec         db  0x8c ; '.'
00000000000093ed         db  0x02 ; '.'
00000000000093ee         db  0x41 ; 'A'
00000000000093ef         db  0x0e ; '.'
00000000000093f0         db  0x18 ; '.'
00000000000093f1         db  0x86 ; '.'
00000000000093f2         db  0x03 ; '.'
00000000000093f3         db  0x41 ; 'A'
00000000000093f4         db  0x0e ; '.'
00000000000093f5         db  0x20 ; ' '
00000000000093f6         db  0x83 ; '.'
00000000000093f7         db  0x04 ; '.'
00000000000093f8         db  0x6e ; 'n'
00000000000093f9         db  0x0e ; '.'
00000000000093fa         db  0x18 ; '.'
00000000000093fb         db  0x41 ; 'A'
00000000000093fc         db  0x0e ; '.'
00000000000093fd         db  0x10 ; '.'
00000000000093fe         db  0x42 ; 'B'
00000000000093ff         db  0x0e ; '.'
0000000000009400         db  0x08 ; '.'
0000000000009401         db  0x00 ; '.'
0000000000009402         db  0x00 ; '.'
0000000000009403         db  0x00 ; '.'
0000000000009404         dd         0x00000010                                  ; Length of the record
0000000000009408         dd         0x000006f8                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000940c         db         0xf4, 0xc1, 2 dup (0xff)                    ; begin 0x5600
0000000000009410         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5611)
0000000000009414         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009415         align      8
0000000000009418         dd         0x00000010                                  ; Length of the record
000000000000941c         dd         0x0000070c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009420         db         0x00, 0xc2, 2 dup (0xff)                    ; begin 0x5620
0000000000009424         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5631)
0000000000009428         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009429         align      4
000000000000942c         dd         0x00000010                                  ; Length of the record
0000000000009430         dd         0x00000720                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009434         db         0x0c, 0xc2, 2 dup (0xff)                    ; begin 0x5640
0000000000009438         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5675)
000000000000943c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000943d         align      64
0000000000009440         dd         0x00000010                                  ; Length of the record
0000000000009444         dd         0x00000734                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009448         db         0x38, 0xc2, 2 dup (0xff)                    ; begin 0x5680
000000000000944c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x5695)
0000000000009450         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009451         align      4
0000000000009454         dd         0x00000010                                  ; Length of the record
0000000000009458         dd         0x00000748                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000945c         db         0x44, 0xc2, 2 dup (0xff)                    ; begin 0x56a0
0000000000009460         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x56d0)
0000000000009464         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009465         db  0x6b ; 'k'
0000000000009466         db  0x0e ; '.'
0000000000009467         db  0x10 ; '.'
0000000000009468         dd         0x00000050                                  ; Length of the record
000000000000946c         dd         0x0000075c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009470         db         0x60, 0xc2, 2 dup (0xff)                    ; begin 0x56d0
0000000000009474         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x5744)
0000000000009478         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009479         db  0x42 ; 'B'
000000000000947a         db  0x0e ; '.'
000000000000947b         db  0x10 ; '.'
000000000000947c         db  0x8f ; '.'
000000000000947d         db  0x02 ; '.'
000000000000947e         db  0x42 ; 'B'
000000000000947f         db  0x0e ; '.'
0000000000009480         db  0x18 ; '.'
0000000000009481         db  0x8e ; '.'
0000000000009482         db  0x03 ; '.'
0000000000009483         db  0x49 ; 'I'
0000000000009484         db  0x0e ; '.'
0000000000009485         db  0x20 ; ' '
0000000000009486         db  0x8d ; '.'
0000000000009487         db  0x04 ; '.'
0000000000009488         db  0x42 ; 'B'
0000000000009489         db  0x0e ; '.'
000000000000948a         db  0x28 ; '('
000000000000948b         db  0x8c ; '.'
000000000000948c         db  0x05 ; '.'
000000000000948d         db  0x44 ; 'D'
000000000000948e         db  0x0e ; '.'
000000000000948f         db  0x30 ; '0'
0000000000009490         db  0x86 ; '.'
0000000000009491         db  0x06 ; '.'
0000000000009492         db  0x41 ; 'A'
0000000000009493         db  0x0e ; '.'
0000000000009494         db  0x38 ; '8'
0000000000009495         db  0x83 ; '.'
0000000000009496         db  0x07 ; '.'
0000000000009497         db  0x4d ; 'M'
0000000000009498         db  0x0e ; '.'
0000000000009499         db  0x50 ; 'P'
000000000000949a         db  0x5f ; '_'
000000000000949b         db  0x0e ; '.'
000000000000949c         db  0x58 ; 'X'
000000000000949d         db  0x47 ; 'G'
000000000000949e         db  0x0e ; '.'
000000000000949f         db  0x60 ; '`'
00000000000094a0         db  0x46 ; 'F'
00000000000094a1         db  0x0e ; '.'
00000000000094a2         db  0x68 ; 'h'
00000000000094a3         db  0x44 ; 'D'
00000000000094a4         db  0x0e ; '.'
00000000000094a5         db  0x70 ; 'p'
00000000000094a6         db  0x58 ; 'X'
00000000000094a7         db  0x0e ; '.'
00000000000094a8         db  0x38 ; '8'
00000000000094a9         db  0x41 ; 'A'
00000000000094aa         db  0x0e ; '.'
00000000000094ab         db  0x30 ; '0'
00000000000094ac         db  0x41 ; 'A'
00000000000094ad         db  0x0e ; '.'
00000000000094ae         db  0x28 ; '('
00000000000094af         db  0x42 ; 'B'
00000000000094b0         db  0x0e ; '.'
00000000000094b1         db  0x20 ; ' '
00000000000094b2         db  0x42 ; 'B'
00000000000094b3         db  0x0e ; '.'
00000000000094b4         db  0x18 ; '.'
00000000000094b5         db  0x42 ; 'B'
00000000000094b6         db  0x0e ; '.'
00000000000094b7         db  0x10 ; '.'
00000000000094b8         db  0x42 ; 'B'
00000000000094b9         db  0x0e ; '.'
00000000000094ba         db  0x08 ; '.'
00000000000094bb         db  0x00 ; '.'
00000000000094bc         dd         0x00000068                                  ; Length of the record
00000000000094c0         dd         0x000007b0                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000094c4         db         0x8c, 0xc2, 2 dup (0xff)                    ; begin 0x5750
00000000000094c8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5833)
00000000000094cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094cd         db  0x42 ; 'B'
00000000000094ce         db  0x0e ; '.'
00000000000094cf         db  0x10 ; '.'
00000000000094d0         db  0x8f ; '.'
00000000000094d1         db  0x02 ; '.'
00000000000094d2         db  0x42 ; 'B'
00000000000094d3         db  0x0e ; '.'
00000000000094d4         db  0x18 ; '.'
00000000000094d5         db  0x8e ; '.'
00000000000094d6         db  0x03 ; '.'
00000000000094d7         db  0x49 ; 'I'
00000000000094d8         db  0x0e ; '.'
00000000000094d9         db  0x20 ; ' '
00000000000094da         db  0x8d ; '.'
00000000000094db         db  0x04 ; '.'
00000000000094dc         db  0x42 ; 'B'
00000000000094dd         db  0x0e ; '.'
00000000000094de         db  0x28 ; '('
00000000000094df         db  0x8c ; '.'
00000000000094e0         db  0x05 ; '.'
00000000000094e1         db  0x44 ; 'D'
00000000000094e2         db  0x0e ; '.'
00000000000094e3         db  0x30 ; '0'
00000000000094e4         db  0x86 ; '.'
00000000000094e5         db  0x06 ; '.'
00000000000094e6         db  0x41 ; 'A'
00000000000094e7         db  0x0e ; '.'
00000000000094e8         db  0x38 ; '8'
00000000000094e9         db  0x83 ; '.'
00000000000094ea         db  0x07 ; '.'
00000000000094eb         db  0x4d ; 'M'
00000000000094ec         db  0x0e ; '.'
00000000000094ed         db  0x70 ; 'p'
00000000000094ee         db  0x65 ; 'e'
00000000000094ef         db  0x0e ; '.'
00000000000094f0         db  0x78 ; 'x'
00000000000094f1         db  0x4d ; 'M'
00000000000094f2         db  0x0e ; '.'
00000000000094f3         db  0x80 ; '.'
00000000000094f4         db  0x01 ; '.'
00000000000094f5         db  0x46 ; 'F'
00000000000094f6         db  0x0e ; '.'
00000000000094f7         db  0x88 ; '.'
00000000000094f8         db  0x01 ; '.'
00000000000094f9         db  0x42 ; 'B'
00000000000094fa         db  0x0e ; '.'
00000000000094fb         db  0x90 ; '.'
00000000000094fc         db  0x01 ; '.'
00000000000094fd         db  0x5e ; '^'
00000000000094fe         db  0x0e ; '.'
00000000000094ff         db  0x70 ; 'p'
0000000000009500         db  0x56 ; 'V'
0000000000009501         db  0x0e ; '.'
0000000000009502         db  0x78 ; 'x'
0000000000009503         db  0x43 ; 'C'
0000000000009504         db  0x0e ; '.'
0000000000009505         db  0x80 ; '.'
0000000000009506         db  0x01 ; '.'
0000000000009507         db  0x43 ; 'C'
0000000000009508         db  0x0e ; '.'
0000000000009509         db  0x88 ; '.'
000000000000950a         db  0x01 ; '.'
000000000000950b         db  0x56 ; 'V'
000000000000950c         db  0x0e ; '.'
000000000000950d         db  0x90 ; '.'
000000000000950e         db  0x01 ; '.'
000000000000950f         db  0x52 ; 'R'
0000000000009510         db  0x0e ; '.'
0000000000009511         db  0x70 ; 'p'
0000000000009512         db  0x5b ; '['
0000000000009513         db  0x0e ; '.'
0000000000009514         db  0x38 ; '8'
0000000000009515         db  0x41 ; 'A'
0000000000009516         db  0x0e ; '.'
0000000000009517         db  0x30 ; '0'
0000000000009518         db  0x41 ; 'A'
0000000000009519         db  0x0e ; '.'
000000000000951a         db  0x28 ; '('
000000000000951b         db  0x42 ; 'B'
000000000000951c         db  0x0e ; '.'
000000000000951d         db  0x20 ; ' '
000000000000951e         db  0x42 ; 'B'
000000000000951f         db  0x0e ; '.'
0000000000009520         db  0x18 ; '.'
0000000000009521         db  0x42 ; 'B'
0000000000009522         db  0x0e ; '.'
0000000000009523         db  0x10 ; '.'
0000000000009524         db  0x42 ; 'B'
0000000000009525         db  0x0e ; '.'
0000000000009526         db  0x08 ; '.'
0000000000009527         db  0x00 ; '.'
0000000000009528         dd         0x00000010                                  ; Length of the record
000000000000952c         dd         0x0000081c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009530         db         0x10, 0xc3, 2 dup (0xff)                    ; begin 0x5840
0000000000009534         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x584a)
0000000000009538         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009539         align      4
000000000000953c         dd         0x00000028                                  ; Length of the record
0000000000009540         dd         0x00000830                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009544         db         0x0c, 0xc3, 2 dup (0xff)                    ; begin 0x5850
0000000000009548         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x58e3)
000000000000954c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000954d         db  0x48 ; 'H'
000000000000954e         db  0x0e ; '.'
000000000000954f         db  0x10 ; '.'
0000000000009550         db  0x8c ; '.'
0000000000009551         db  0x02 ; '.'
0000000000009552         db  0x48 ; 'H'
0000000000009553         db  0x0e ; '.'
0000000000009554         db  0x18 ; '.'
0000000000009555         db  0x86 ; '.'
0000000000009556         db  0x03 ; '.'
0000000000009557         db  0x41 ; 'A'
0000000000009558         db  0x0e ; '.'
0000000000009559         db  0x20 ; ' '
000000000000955a         db  0x83 ; '.'
000000000000955b         db  0x04 ; '.'
000000000000955c         db  0x02 ; '.'
000000000000955d         db  0x74 ; 't'
000000000000955e         db  0x0e ; '.'
000000000000955f         db  0x18 ; '.'
0000000000009560         db  0x4b ; 'K'
0000000000009561         db  0x0e ; '.'
0000000000009562         db  0x10 ; '.'
0000000000009563         db  0x42 ; 'B'
0000000000009564         db  0x0e ; '.'
0000000000009565         db  0x08 ; '.'
0000000000009566         db  0x00 ; '.'
0000000000009567         db  0x00 ; '.'
0000000000009568         dd         0x00000010                                  ; Length of the record
000000000000956c         dd         0x0000085c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009570         db         0x80, 0xc3, 2 dup (0xff)                    ; begin 0x58f0
0000000000009574         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5903)
0000000000009578         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009579         align      4
000000000000957c         dd         0x00000010                                  ; Length of the record
0000000000009580         dd         0x00000870                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009584         db         0x8c, 0xc3, 2 dup (0xff)                    ; begin 0x5910
0000000000009588         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x591c)
000000000000958c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000958d         align      16
0000000000009590         dd         0x00000010                                  ; Length of the record
0000000000009594         dd         0x00000884                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009598         db         0x88, 0xc3, 2 dup (0xff)                    ; begin 0x5920
000000000000959c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5938)
00000000000095a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095a1         align      4
00000000000095a4         dd         0x00000010                                  ; Length of the record
00000000000095a8         dd         0x00000898                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000095ac         db         0x94, 0xc3, 2 dup (0xff)                    ; begin 0x5940
00000000000095b0         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5954)
00000000000095b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095b5         align      8
00000000000095b8         dd         0x00000018                                  ; Length of the record
00000000000095bc         dd         0x000008ac                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000095c0         db         0xa0, 0xc3, 2 dup (0xff)                    ; begin 0x5960
00000000000095c4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x59ee)
00000000000095c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095c9         db  0x44 ; 'D'
00000000000095ca         db  0x0e ; '.'
00000000000095cb         db  0x50 ; 'P'
00000000000095cc         db  0x02 ; '.'
00000000000095cd         db  0x7f ; '.'
00000000000095ce         db  0x0a ; '.'
00000000000095cf         db  0x0e ; '.'
00000000000095d0         db  0x08 ; '.'
00000000000095d1         db  0x41 ; 'A'
00000000000095d2         db  0x0b ; '.'
00000000000095d3         db  0x00 ; '.'
00000000000095d4         dd         0x00000018                                  ; Length of the record
00000000000095d8         dd         0x000008c8                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000095dc         db         0x14, 0xc4, 2 dup (0xff)                    ; begin 0x59f0
00000000000095e0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x5a7a)
00000000000095e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095e5         db  0x44 ; 'D'
00000000000095e6         db  0x0e ; '.'
00000000000095e7         db  0x50 ; 'P'
00000000000095e8         db  0x02 ; '.'
00000000000095e9         db  0x7b ; '{'
00000000000095ea         db  0x0a ; '.'
00000000000095eb         db  0x0e ; '.'
00000000000095ec         db  0x08 ; '.'
00000000000095ed         db  0x41 ; 'A'
00000000000095ee         db  0x0b ; '.'
00000000000095ef         db  0x00 ; '.'
00000000000095f0         dd         0x00000010                                  ; Length of the record
00000000000095f4         dd         0x000008e4                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000095f8         db         0x88, 0xc4, 2 dup (0xff)                    ; begin 0x5a80
00000000000095fc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5a8c)
0000000000009600         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009601         align      4
0000000000009604         dd         0x00000010                                  ; Length of the record
0000000000009608         dd         0x000008f8                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000960c         db         0x84, 0xc4, 2 dup (0xff)                    ; begin 0x5a90
0000000000009610         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x5a9f)
0000000000009614         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009615         align      8
0000000000009618         dd         0x00000018                                  ; Length of the record
000000000000961c         dd         0x0000090c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009620         db         0x80, 0xc4, 2 dup (0xff)                    ; begin 0x5aa0
0000000000009624         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5b38)
0000000000009628         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009629         db  0x44 ; 'D'
000000000000962a         db  0x0e ; '.'
000000000000962b         db  0x50 ; 'P'
000000000000962c         db  0x02 ; '.'
000000000000962d         db  0x8e ; '.'
000000000000962e         db  0x0a ; '.'
000000000000962f         db  0x0e ; '.'
0000000000009630         db  0x08 ; '.'
0000000000009631         db  0x41 ; 'A'
0000000000009632         db  0x0b ; '.'
0000000000009633         db  0x00 ; '.'
0000000000009634         dd         0x00000010                                  ; Length of the record
0000000000009638         dd         0x00000928                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000963c         db         0x04, 0xc5, 2 dup (0xff)                    ; begin 0x5b40
0000000000009640         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5b50)
0000000000009644         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009645         align      8
0000000000009648         dd         0x00000010                                  ; Length of the record
000000000000964c         dd         0x0000093c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009650         db         0x00, 0xc5, 2 dup (0xff)                    ; begin 0x5b50
0000000000009654         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5b61)
0000000000009658         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009659         align      4
000000000000965c         dd         0x00000010                                  ; Length of the record
0000000000009660         dd         0x00000950                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009664         db         0x0c, 0xc5, 2 dup (0xff)                    ; begin 0x5b70
0000000000009668         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5b7a)
000000000000966c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000966d         align      16
0000000000009670         dd         0x00000018                                  ; Length of the record
0000000000009674         dd         0x00000964                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009678         db         0x08, 0xc5, 2 dup (0xff)                    ; begin 0x5b80
000000000000967c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x5c0e)
0000000000009680         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009681         db  0x44 ; 'D'
0000000000009682         db  0x0e ; '.'
0000000000009683         db  0x50 ; 'P'
0000000000009684         db  0x02 ; '.'
0000000000009685         db  0x7f ; '.'
0000000000009686         db  0x0a ; '.'
0000000000009687         db  0x0e ; '.'
0000000000009688         db  0x08 ; '.'
0000000000009689         db  0x41 ; 'A'
000000000000968a         db  0x0b ; '.'
000000000000968b         db  0x00 ; '.'
000000000000968c         dd         0x00000018                                  ; Length of the record
0000000000009690         dd         0x00000980                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009694         db         0x7c, 0xc5, 2 dup (0xff)                    ; begin 0x5c10
0000000000009698         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5ca1)
000000000000969c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000969d         db  0x44 ; 'D'
000000000000969e         db  0x0e ; '.'
000000000000969f         db  0x50 ; 'P'
00000000000096a0         db  0x02 ; '.'
00000000000096a1         db  0x82 ; '.'
00000000000096a2         db  0x0a ; '.'
00000000000096a3         db  0x0e ; '.'
00000000000096a4         db  0x08 ; '.'
00000000000096a5         db  0x41 ; 'A'
00000000000096a6         db  0x0b ; '.'
00000000000096a7         db  0x00 ; '.'
00000000000096a8         dd         0x00000010                                  ; Length of the record
00000000000096ac         dd         0x0000099c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000096b0         db         0x00, 0xc6, 2 dup (0xff)                    ; begin 0x5cb0
00000000000096b4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5cbc)
00000000000096b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096b9         align      4
00000000000096bc         dd         0x00000010                                  ; Length of the record
00000000000096c0         dd         0x000009b0                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000096c4         db         0xfc, 0xc5, 2 dup (0xff)                    ; begin 0x5cc0
00000000000096c8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5cd7)
00000000000096cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096cd         align      16
00000000000096d0         dd         0x00000010                                  ; Length of the record
00000000000096d4         dd         0x000009c4                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000096d8         db         0x08, 0xc6, 2 dup (0xff)                    ; begin 0x5ce0
00000000000096dc         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5cf3)
00000000000096e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096e1         align      4
00000000000096e4         dd         0x00000010                                  ; Length of the record
00000000000096e8         dd         0x000009d8                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000096ec         db         0x14, 0xc6, 2 dup (0xff)                    ; begin 0x5d00
00000000000096f0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5d0c)
00000000000096f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096f5         align      8
00000000000096f8         dd         0x00000010                                  ; Length of the record
00000000000096fc         dd         0x000009ec                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009700         db         0x10, 0xc6, 2 dup (0xff)                    ; begin 0x5d10
0000000000009704         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5d24)
0000000000009708         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009709         align      4
000000000000970c         dd         0x00000010                                  ; Length of the record
0000000000009710         dd         0x00000a00                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009714         db         0x1c, 0xc6, 2 dup (0xff)                    ; begin 0x5d30
0000000000009718         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5d43)
000000000000971c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000971d         align      32
0000000000009720         dd         0x00000014                                  ; Length of the record
0000000000009724         dd         0x00000a14                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009728         db         0x28, 0xc6, 2 dup (0xff)                    ; begin 0x5d50
000000000000972c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5d68)
0000000000009730         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009731         align      8
0000000000009738         dd         0x00000014                                  ; Length of the record
000000000000973c         dd         0x00000a2c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009740         db         0x30, 0xc6, 2 dup (0xff)                    ; begin 0x5d70
0000000000009744         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x5d7e)
0000000000009748         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009749         align      16
0000000000009750         dd         0x00000110                                  ; Length of the record
0000000000009754         dd         0x00000a44                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009758         db         0x28, 0xc6, 2 dup (0xff)                    ; begin 0x5d80
000000000000975c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x6197)
0000000000009760         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009761         db  0x42 ; 'B'
0000000000009762         db  0x0e ; '.'
0000000000009763         db  0x10 ; '.'
0000000000009764         db  0x8f ; '.'
0000000000009765         db  0x02 ; '.'
0000000000009766         db  0x42 ; 'B'
0000000000009767         db  0x0e ; '.'
0000000000009768         db  0x18 ; '.'
0000000000009769         db  0x8e ; '.'
000000000000976a         db  0x03 ; '.'
000000000000976b         db  0x42 ; 'B'
000000000000976c         db  0x0e ; '.'
000000000000976d         db  0x20 ; ' '
000000000000976e         db  0x8d ; '.'
000000000000976f         db  0x04 ; '.'
0000000000009770         db  0x42 ; 'B'
0000000000009771         db  0x0e ; '.'
0000000000009772         db  0x28 ; '('
0000000000009773         db  0x8c ; '.'
0000000000009774         db  0x05 ; '.'
0000000000009775         db  0x44 ; 'D'
0000000000009776         db  0x0e ; '.'
0000000000009777         db  0x30 ; '0'
0000000000009778         db  0x86 ; '.'
0000000000009779         db  0x06 ; '.'
000000000000977a         db  0x41 ; 'A'
000000000000977b         db  0x0e ; '.'
000000000000977c         db  0x38 ; '8'
000000000000977d         db  0x83 ; '.'
000000000000977e         db  0x07 ; '.'
000000000000977f         db  0x4a ; 'J'
0000000000009780         db  0x0e ; '.'
0000000000009781         db  0x60 ; '`'
0000000000009782         db  0x02 ; '.'
0000000000009783         db  0xdd ; '.'
0000000000009784         db  0x0e ; '.'
0000000000009785         db  0x68 ; 'h'
0000000000009786         db  0x57 ; 'W'
0000000000009787         db  0x0e ; '.'
0000000000009788         db  0x70 ; 'p'
0000000000009789         db  0x42 ; 'B'
000000000000978a         db  0x0e ; '.'
000000000000978b         db  0x78 ; 'x'
000000000000978c         db  0x42 ; 'B'
000000000000978d         db  0x0e ; '.'
000000000000978e         db  0x80 ; '.'
000000000000978f         db  0x01 ; '.'
0000000000009790         db  0x42 ; 'B'
0000000000009791         db  0x0e ; '.'
0000000000009792         db  0x88 ; '.'
0000000000009793         db  0x01 ; '.'
0000000000009794         db  0x42 ; 'B'
0000000000009795         db  0x0e ; '.'
0000000000009796         db  0x90 ; '.'
0000000000009797         db  0x01 ; '.'
0000000000009798         db  0x53 ; 'S'
0000000000009799         db  0x0e ; '.'
000000000000979a         db  0x60 ; '`'
000000000000979b         db  0x44 ; 'D'
000000000000979c         db  0x0a ; '.'
000000000000979d         db  0x0e ; '.'
000000000000979e         db  0x38 ; '8'
000000000000979f         db  0x41 ; 'A'
00000000000097a0         db  0x0e ; '.'
00000000000097a1         db  0x30 ; '0'
00000000000097a2         db  0x41 ; 'A'
00000000000097a3         db  0x0e ; '.'
00000000000097a4         db  0x28 ; '('
00000000000097a5         db  0x42 ; 'B'
00000000000097a6         db  0x0e ; '.'
00000000000097a7         db  0x20 ; ' '
00000000000097a8         db  0x42 ; 'B'
00000000000097a9         db  0x0e ; '.'
00000000000097aa         db  0x18 ; '.'
00000000000097ab         db  0x42 ; 'B'
00000000000097ac         db  0x0e ; '.'
00000000000097ad         db  0x10 ; '.'
00000000000097ae         db  0x42 ; 'B'
00000000000097af         db  0x0e ; '.'
00000000000097b0         db  0x08 ; '.'
00000000000097b1         db  0x44 ; 'D'
00000000000097b2         db  0x0b ; '.'
00000000000097b3         db  0x02 ; '.'
00000000000097b4         db  0x78 ; 'x'
00000000000097b5         db  0x0a ; '.'
00000000000097b6         db  0x0e ; '.'
00000000000097b7         db  0x68 ; 'h'
00000000000097b8         db  0x48 ; 'H'
00000000000097b9         db  0x0b ; '.'
00000000000097ba         db  0x5a ; 'Z'
00000000000097bb         db  0x0a ; '.'
00000000000097bc         db  0x0e ; '.'
00000000000097bd         db  0x38 ; '8'
00000000000097be         db  0x47 ; 'G'
00000000000097bf         db  0x0e ; '.'
00000000000097c0         db  0x30 ; '0'
00000000000097c1         db  0x41 ; 'A'
00000000000097c2         db  0x0e ; '.'
00000000000097c3         db  0x28 ; '('
00000000000097c4         db  0x42 ; 'B'
00000000000097c5         db  0x0e ; '.'
00000000000097c6         db  0x20 ; ' '
00000000000097c7         db  0x42 ; 'B'
00000000000097c8         db  0x0e ; '.'
00000000000097c9         db  0x18 ; '.'
00000000000097ca         db  0x42 ; 'B'
00000000000097cb         db  0x0e ; '.'
00000000000097cc         db  0x10 ; '.'
00000000000097cd         db  0x42 ; 'B'
00000000000097ce         db  0x0e ; '.'
00000000000097cf         db  0x08 ; '.'
00000000000097d0         db  0x56 ; 'V'
00000000000097d1         db  0x0b ; '.'
00000000000097d2         db  0x5e ; '^'
00000000000097d3         db  0x0a ; '.'
00000000000097d4         db  0x0e ; '.'
00000000000097d5         db  0x38 ; '8'
00000000000097d6         db  0x52 ; 'R'
00000000000097d7         db  0x0e ; '.'
00000000000097d8         db  0x30 ; '0'
00000000000097d9         db  0x41 ; 'A'
00000000000097da         db  0x0e ; '.'
00000000000097db         db  0x28 ; '('
00000000000097dc         db  0x42 ; 'B'
00000000000097dd         db  0x0e ; '.'
00000000000097de         db  0x20 ; ' '
00000000000097df         db  0x42 ; 'B'
00000000000097e0         db  0x0e ; '.'
00000000000097e1         db  0x18 ; '.'
00000000000097e2         db  0x42 ; 'B'
00000000000097e3         db  0x0e ; '.'
00000000000097e4         db  0x10 ; '.'
00000000000097e5         db  0x42 ; 'B'
00000000000097e6         db  0x0e ; '.'
00000000000097e7         db  0x08 ; '.'
00000000000097e8         db  0x4f ; 'O'
00000000000097e9         db  0x0b ; '.'
00000000000097ea         db  0x62 ; 'b'
00000000000097eb         db  0x0a ; '.'
00000000000097ec         db  0x0e ; '.'
00000000000097ed         db  0x38 ; '8'
00000000000097ee         db  0x50 ; 'P'
00000000000097ef         db  0x0e ; '.'
00000000000097f0         db  0x30 ; '0'
00000000000097f1         db  0x41 ; 'A'
00000000000097f2         db  0x0e ; '.'
00000000000097f3         db  0x28 ; '('
00000000000097f4         db  0x42 ; 'B'
00000000000097f5         db  0x0e ; '.'
00000000000097f6         db  0x20 ; ' '
00000000000097f7         db  0x42 ; 'B'
00000000000097f8         db  0x0e ; '.'
00000000000097f9         db  0x18 ; '.'
00000000000097fa         db  0x42 ; 'B'
00000000000097fb         db  0x0e ; '.'
00000000000097fc         db  0x10 ; '.'
00000000000097fd         db  0x42 ; 'B'
00000000000097fe         db  0x0e ; '.'
00000000000097ff         db  0x08 ; '.'
0000000000009800         db  0x55 ; 'U'
0000000000009801         db  0x0b ; '.'
0000000000009802         db  0x66 ; 'f'
0000000000009803         db  0x0e ; '.'
0000000000009804         db  0x68 ; 'h'
0000000000009805         db  0x42 ; 'B'
0000000000009806         db  0x0e ; '.'
0000000000009807         db  0x70 ; 'p'
0000000000009808         db  0x5c ; '\'
0000000000009809         db  0x0e ; '.'
000000000000980a         db  0x68 ; 'h'
000000000000980b         db  0x41 ; 'A'
000000000000980c         db  0x0e ; '.'
000000000000980d         db  0x60 ; '`'
000000000000980e         db  0x44 ; 'D'
000000000000980f         db  0x0a ; '.'
0000000000009810         db  0x0e ; '.'
0000000000009811         db  0x38 ; '8'
0000000000009812         db  0x41 ; 'A'
0000000000009813         db  0x0e ; '.'
0000000000009814         db  0x30 ; '0'
0000000000009815         db  0x41 ; 'A'
0000000000009816         db  0x0e ; '.'
0000000000009817         db  0x28 ; '('
0000000000009818         db  0x42 ; 'B'
0000000000009819         db  0x0e ; '.'
000000000000981a         db  0x20 ; ' '
000000000000981b         db  0x42 ; 'B'
000000000000981c         db  0x0e ; '.'
000000000000981d         db  0x18 ; '.'
000000000000981e         db  0x42 ; 'B'
000000000000981f         db  0x0e ; '.'
0000000000009820         db  0x10 ; '.'
0000000000009821         db  0x42 ; 'B'
0000000000009822         db  0x0e ; '.'
0000000000009823         db  0x08 ; '.'
0000000000009824         db  0x45 ; 'E'
0000000000009825         db  0x0b ; '.'
0000000000009826         db  0x68 ; 'h'
0000000000009827         db  0x0a ; '.'
0000000000009828         db  0x0e ; '.'
0000000000009829         db  0x68 ; 'h'
000000000000982a         db  0x48 ; 'H'
000000000000982b         db  0x0b ; '.'
000000000000982c         db  0x72 ; 'r'
000000000000982d         db  0x0e ; '.'
000000000000982e         db  0x68 ; 'h'
000000000000982f         db  0x45 ; 'E'
0000000000009830         db  0x0e ; '.'
0000000000009831         db  0x70 ; 'p'
0000000000009832         db  0x42 ; 'B'
0000000000009833         db  0x0e ; '.'
0000000000009834         db  0x78 ; 'x'
0000000000009835         db  0x42 ; 'B'
0000000000009836         db  0x0e ; '.'
0000000000009837         db  0x80 ; '.'
0000000000009838         db  0x01 ; '.'
0000000000009839         db  0x5e ; '^'
000000000000983a         db  0x0e ; '.'
000000000000983b         db  0x60 ; '`'
000000000000983c         db  0x44 ; 'D'
000000000000983d         db  0x0a ; '.'
000000000000983e         db  0x0e ; '.'
000000000000983f         db  0x38 ; '8'
0000000000009840         db  0x41 ; 'A'
0000000000009841         db  0x0e ; '.'
0000000000009842         db  0x30 ; '0'
0000000000009843         db  0x41 ; 'A'
0000000000009844         db  0x0e ; '.'
0000000000009845         db  0x28 ; '('
0000000000009846         db  0x42 ; 'B'
0000000000009847         db  0x0e ; '.'
0000000000009848         db  0x20 ; ' '
0000000000009849         db  0x42 ; 'B'
000000000000984a         db  0x0e ; '.'
000000000000984b         db  0x18 ; '.'
000000000000984c         db  0x42 ; 'B'
000000000000984d         db  0x0e ; '.'
000000000000984e         db  0x10 ; '.'
000000000000984f         db  0x42 ; 'B'
0000000000009850         db  0x0e ; '.'
0000000000009851         db  0x08 ; '.'
0000000000009852         db  0x41 ; 'A'
0000000000009853         db  0x0b ; '.'
0000000000009854         db  0x79 ; 'y'
0000000000009855         db  0x0a ; '.'
0000000000009856         db  0x0e ; '.'
0000000000009857         db  0x68 ; 'h'
0000000000009858         db  0x42 ; 'B'
0000000000009859         db  0x0e ; '.'
000000000000985a         db  0x70 ; 'p'
000000000000985b         db  0x42 ; 'B'
000000000000985c         db  0x0e ; '.'
000000000000985d         db  0x78 ; 'x'
000000000000985e         db  0x42 ; 'B'
000000000000985f         db  0x0e ; '.'
0000000000009860         db  0x80 ; '.'
0000000000009861         db  0x01 ; '.'
0000000000009862         db  0x51 ; 'Q'
0000000000009863         db  0x0b ; '.'
0000000000009864         dd         0x00000010                                  ; Length of the record
0000000000009868         dd         0x00000b58                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000986c         db         0x34, 0xc9, 2 dup (0xff)                    ; begin 0x61a0
0000000000009870         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x61c0)
0000000000009874         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009875         align      8
0000000000009878         dd         0x00000018                                  ; Length of the record
000000000000987c         dd         0x00000b6c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009880         db         0x40, 0xc9, 2 dup (0xff)                    ; begin 0x61c0
0000000000009884         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x6238)
0000000000009888         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009889         db  0x44 ; 'D'
000000000000988a         db  0x0e ; '.'
000000000000988b         db  0x70 ; 'p'
000000000000988c         db  0x02 ; '.'
000000000000988d         db  0x60 ; '`'
000000000000988e         db  0x0a ; '.'
000000000000988f         db  0x0e ; '.'
0000000000009890         db  0x08 ; '.'
0000000000009891         db  0x41 ; 'A'
0000000000009892         db  0x0b ; '.'
0000000000009893         db  0x00 ; '.'
0000000000009894         dd         0x00000028                                  ; Length of the record
0000000000009898         dd         0x00000b88                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000989c         db         0xa4, 0xc9, 2 dup (0xff)                    ; begin 0x6240
00000000000098a0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x6315)
00000000000098a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098a5         db  0x41 ; 'A'
00000000000098a6         db  0x0e ; '.'
00000000000098a7         db  0x10 ; '.'
00000000000098a8         db  0x86 ; '.'
00000000000098a9         db  0x02 ; '.'
00000000000098aa         db  0x41 ; 'A'
00000000000098ab         db  0x0e ; '.'
00000000000098ac         db  0x18 ; '.'
00000000000098ad         db  0x83 ; '.'
00000000000098ae         db  0x03 ; '.'
00000000000098af         db  0x50 ; 'P'
00000000000098b0         db  0x0e ; '.'
00000000000098b1         db  0xd0 ; '.'
00000000000098b2         db  0x01 ; '.'
00000000000098b3         db  0x02 ; '.'
00000000000098b4         db  0xab ; '.'
00000000000098b5         db  0x0a ; '.'
00000000000098b6         db  0x0e ; '.'
00000000000098b7         db  0x18 ; '.'
00000000000098b8         db  0x41 ; 'A'
00000000000098b9         db  0x0e ; '.'
00000000000098ba         db  0x10 ; '.'
00000000000098bb         db  0x41 ; 'A'
00000000000098bc         db  0x0e ; '.'
00000000000098bd         db  0x08 ; '.'
00000000000098be         db  0x41 ; 'A'
00000000000098bf         db  0x0b ; '.'
00000000000098c0         dd         0x0000001c                                  ; Length of the record
00000000000098c4         dd         0x00000bb4                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000098c8         db         0x58, 0xca, 2 dup (0xff)                    ; begin 0x6320
00000000000098cc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x63a0)
00000000000098d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098d1         db  0x41 ; 'A'
00000000000098d2         db  0x0e ; '.'
00000000000098d3         db  0x10 ; '.'
00000000000098d4         db  0x83 ; '.'
00000000000098d5         db  0x02 ; '.'
00000000000098d6         db  0x02 ; '.'
00000000000098d7         db  0x7a ; 'z'
00000000000098d8         db  0x0e ; '.'
00000000000098d9         db  0x08 ; '.'
00000000000098da         db  0x00 ; '.'
00000000000098db         db  0x00 ; '.'
00000000000098dc         db  0x00 ; '.'
00000000000098dd         db  0x00 ; '.'
00000000000098de         db  0x00 ; '.'
00000000000098df         db  0x00 ; '.'
00000000000098e0         dd         0x00000018                                  ; Length of the record
00000000000098e4         dd         0x00000bd4                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000098e8         db         0xb8, 0xca, 2 dup (0xff)                    ; begin 0x63a0
00000000000098ec         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x63ba)
00000000000098f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098f1         db  0x41 ; 'A'
00000000000098f2         db  0x0e ; '.'
00000000000098f3         db  0x10 ; '.'
00000000000098f4         db  0x83 ; '.'
00000000000098f5         db  0x02 ; '.'
00000000000098f6         db  0x53 ; 'S'
00000000000098f7         db  0x0a ; '.'
00000000000098f8         db  0x0e ; '.'
00000000000098f9         db  0x08 ; '.'
00000000000098fa         db  0x41 ; 'A'
00000000000098fb         db  0x0b ; '.'
00000000000098fc         dd         0x00000010                                  ; Length of the record
0000000000009900         dd         0x00000bf0                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009904         db         0xbc, 0xca, 2 dup (0xff)                    ; begin 0x63c0
0000000000009908         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x63e4)
000000000000990c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000990d         db  0x5f ; '_'
000000000000990e         db  0x0e ; '.'
000000000000990f         db  0x10 ; '.'
0000000000009910         dd         0x00000010                                  ; Length of the record
0000000000009914         dd         0x00000c04                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009918         db         0xd8, 0xca, 2 dup (0xff)                    ; begin 0x63f0
000000000000991c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x63f2)
0000000000009920         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009921         align      4
0000000000009924         dd         0x00000020                                  ; Length of the record
0000000000009928         dd         0x00000c18                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000992c         db         0xd4, 0xca, 2 dup (0xff)                    ; begin 0x6400
0000000000009930         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6436)
0000000000009934         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009935         db  0x44 ; 'D'
0000000000009936         db  0x0e ; '.'
0000000000009937         db  0x10 ; '.'
0000000000009938         db  0x83 ; '.'
0000000000009939         db  0x02 ; '.'
000000000000993a         db  0x5d ; ']'
000000000000993b         db  0x0a ; '.'
000000000000993c         db  0x0e ; '.'
000000000000993d         db  0x08 ; '.'
000000000000993e         db  0x47 ; 'G'
000000000000993f         db  0x0b ; '.'
0000000000009940         db  0x48 ; 'H'
0000000000009941         db  0x0a ; '.'
0000000000009942         db  0x0e ; '.'
0000000000009943         db  0x08 ; '.'
0000000000009944         db  0x41 ; 'A'
0000000000009945         db  0x0b ; '.'
0000000000009946         db  0x00 ; '.'
0000000000009947         db  0x00 ; '.'
0000000000009948         dd         0x00000010                                  ; Length of the record
000000000000994c         dd         0x00000c3c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009950         db         0xf0, 0xca, 2 dup (0xff)                    ; begin 0x6440
0000000000009954         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6464)
0000000000009958         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009959         db  0x5f ; '_'
000000000000995a         db  0x0e ; '.'
000000000000995b         db  0x10 ; '.'
000000000000995c         dd         0x00000014                                  ; Length of the record
0000000000009960         dd         0x00000c50                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009964         db         0x0c, 0xcb, 2 dup (0xff)                    ; begin 0x6470
0000000000009968         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x64f2)
000000000000996c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000996d         db  0x02 ; '.'
000000000000996e         db  0x5f ; '_'
000000000000996f         db  0x0e ; '.'
0000000000009970         db  0x10 ; '.'
0000000000009971         db  0x49 ; 'I'
0000000000009972         db  0x0e ; '.'
0000000000009973         db  0x08 ; '.'
0000000000009974         dd         0x00000014                                  ; Length of the record
0000000000009978         dd         0x00000c68                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
000000000000997c         db         0x84, 0xcb, 2 dup (0xff)                    ; begin 0x6500
0000000000009980         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x654a)
0000000000009984         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009985         db  0x02 ; '.'
0000000000009986         db  0x45 ; 'E'
0000000000009987         db  0x0e ; '.'
0000000000009988         db  0x10 ; '.'
0000000000009989         db  0x00 ; '.'
000000000000998a         db  0x00 ; '.'
000000000000998b         db  0x00 ; '.'
000000000000998c         dd         0x00000018                                  ; Length of the record
0000000000009990         dd         0x00000c80                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009994         db         0xbc, 0xcb, 2 dup (0xff)                    ; begin 0x6550
0000000000009998         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x6567)
000000000000999c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000999d         db  0x41 ; 'A'
000000000000999e         db  0x0e ; '.'
000000000000999f         db  0x10 ; '.'
00000000000099a0         db  0x83 ; '.'
00000000000099a1         db  0x02 ; '.'
00000000000099a2         db  0x51 ; 'Q'
00000000000099a3         db  0x0e ; '.'
00000000000099a4         db  0x08 ; '.'
00000000000099a5         db  0x00 ; '.'
00000000000099a6         db  0x00 ; '.'
00000000000099a7         db  0x00 ; '.'
00000000000099a8         dd         0x00000018                                  ; Length of the record
00000000000099ac         dd         0x00000c9c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000099b0         db         0xc0, 0xcb, 2 dup (0xff)                    ; begin 0x6570
00000000000099b4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x659e)
00000000000099b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099b9         db  0x47 ; 'G'
00000000000099ba         db  0x0e ; '.'
00000000000099bb         db  0x10 ; '.'
00000000000099bc         db  0x61 ; 'a'
00000000000099bd         db  0x0a ; '.'
00000000000099be         db  0x0e ; '.'
00000000000099bf         db  0x08 ; '.'
00000000000099c0         db  0x41 ; 'A'
00000000000099c1         db  0x0b ; '.'
00000000000099c2         db  0x00 ; '.'
00000000000099c3         db  0x00 ; '.'
00000000000099c4         dd         0x00000024                                  ; Length of the record
00000000000099c8         dd         0x00000cb8                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000099cc         db         0xd4, 0xcb, 2 dup (0xff)                    ; begin 0x65a0
00000000000099d0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x65c8)
00000000000099d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099d5         db  0x41 ; 'A'
00000000000099d6         db  0x0e ; '.'
00000000000099d7         db  0x10 ; '.'
00000000000099d8         db  0x86 ; '.'
00000000000099d9         db  0x02 ; '.'
00000000000099da         db  0x41 ; 'A'
00000000000099db         db  0x0e ; '.'
00000000000099dc         db  0x18 ; '.'
00000000000099dd         db  0x83 ; '.'
00000000000099de         db  0x03 ; '.'
00000000000099df         db  0x4d ; 'M'
00000000000099e0         db  0x0e ; '.'
00000000000099e1         db  0x20 ; ' '
00000000000099e2         db  0x49 ; 'I'
00000000000099e3         db  0x0e ; '.'
00000000000099e4         db  0x18 ; '.'
00000000000099e5         db  0x47 ; 'G'
00000000000099e6         db  0x0e ; '.'
00000000000099e7         db  0x10 ; '.'
00000000000099e8         db  0x41 ; 'A'
00000000000099e9         db  0x0e ; '.'
00000000000099ea         db  0x08 ; '.'
00000000000099eb         db  0x00 ; '.'
00000000000099ec         dd         0x00000018                                  ; Length of the record
00000000000099f0         dd         0x00000ce0                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
00000000000099f4         db         0xdc, 0xcb, 2 dup (0xff)                    ; begin 0x65d0
00000000000099f8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x65e3)
00000000000099fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099fd         db  0x41 ; 'A'
00000000000099fe         db  0x0e ; '.'
00000000000099ff         db  0x10 ; '.'
0000000000009a00         db  0x83 ; '.'
0000000000009a01         db  0x02 ; '.'
0000000000009a02         db  0x50 ; 'P'
0000000000009a03         db  0x0e ; '.'
0000000000009a04         db  0x08 ; '.'
0000000000009a05         db  0x00 ; '.'
0000000000009a06         db  0x00 ; '.'
0000000000009a07         db  0x00 ; '.'
0000000000009a08         dd         0x00000014                                  ; Length of the record
0000000000009a0c         dd         0x00000cfc                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009a10         db         0xe0, 0xcb, 2 dup (0xff)                    ; begin 0x65f0
0000000000009a14         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x6625)
0000000000009a18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a19         db  0x4b ; 'K'
0000000000009a1a         db  0x0e ; '.'
0000000000009a1b         db  0x10 ; '.'
0000000000009a1c         db  0x00 ; '.'
0000000000009a1d         db  0x00 ; '.'
0000000000009a1e         db  0x00 ; '.'
0000000000009a1f         db  0x00 ; '.'
0000000000009a20         dd         0x00000038                                  ; Length of the record
0000000000009a24         dd         0x00000d14                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009a28         db         0x08, 0xcc, 2 dup (0xff)                    ; begin 0x6630
0000000000009a2c         db         0xba, 3 dup (0x00)                          ; length 0xba (end at 0x66ea)
0000000000009a30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a31         db  0x42 ; 'B'
0000000000009a32         db  0x0e ; '.'
0000000000009a33         db  0x10 ; '.'
0000000000009a34         db  0x8e ; '.'
0000000000009a35         db  0x02 ; '.'
0000000000009a36         db  0x42 ; 'B'
0000000000009a37         db  0x0e ; '.'
0000000000009a38         db  0x18 ; '.'
0000000000009a39         db  0x8d ; '.'
0000000000009a3a         db  0x03 ; '.'
0000000000009a3b         db  0x45 ; 'E'
0000000000009a3c         db  0x0e ; '.'
0000000000009a3d         db  0x20 ; ' '
0000000000009a3e         db  0x8c ; '.'
0000000000009a3f         db  0x04 ; '.'
0000000000009a40         db  0x41 ; 'A'
0000000000009a41         db  0x0e ; '.'
0000000000009a42         db  0x28 ; '('
0000000000009a43         db  0x86 ; '.'
0000000000009a44         db  0x05 ; '.'
0000000000009a45         db  0x44 ; 'D'
0000000000009a46         db  0x0e ; '.'
0000000000009a47         db  0x30 ; '0'
0000000000009a48         db  0x83 ; '.'
0000000000009a49         db  0x06 ; '.'
0000000000009a4a         db  0x02 ; '.'
0000000000009a4b         db  0x99 ; '.'
0000000000009a4c         db  0x0e ; '.'
0000000000009a4d         db  0x28 ; '('
0000000000009a4e         db  0x41 ; 'A'
0000000000009a4f         db  0x0e ; '.'
0000000000009a50         db  0x20 ; ' '
0000000000009a51         db  0x42 ; 'B'
0000000000009a52         db  0x0e ; '.'
0000000000009a53         db  0x18 ; '.'
0000000000009a54         db  0x42 ; 'B'
0000000000009a55         db  0x0e ; '.'
0000000000009a56         db  0x10 ; '.'
0000000000009a57         db  0x42 ; 'B'
0000000000009a58         db  0x0e ; '.'
0000000000009a59         db  0x08 ; '.'
0000000000009a5a         db  0x00 ; '.'
0000000000009a5b         db  0x00 ; '.'
0000000000009a5c         dd         0x00000038                                  ; Length of the record
0000000000009a60         dd         0x00000d50                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009a64         db         0x8c, 0xcc, 2 dup (0xff)                    ; begin 0x66f0
0000000000009a68         db         0x44, 3 dup (0x00)                          ; length 0x44 (end at 0x6734)
0000000000009a6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a6d         db  0x42 ; 'B'
0000000000009a6e         db  0x0e ; '.'
0000000000009a6f         db  0x10 ; '.'
0000000000009a70         db  0x8e ; '.'
0000000000009a71         db  0x02 ; '.'
0000000000009a72         db  0x42 ; 'B'
0000000000009a73         db  0x0e ; '.'
0000000000009a74         db  0x18 ; '.'
0000000000009a75         db  0x8d ; '.'
0000000000009a76         db  0x03 ; '.'
0000000000009a77         db  0x45 ; 'E'
0000000000009a78         db  0x0e ; '.'
0000000000009a79         db  0x20 ; ' '
0000000000009a7a         db  0x8c ; '.'
0000000000009a7b         db  0x04 ; '.'
0000000000009a7c         db  0x41 ; 'A'
0000000000009a7d         db  0x0e ; '.'
0000000000009a7e         db  0x28 ; '('
0000000000009a7f         db  0x86 ; '.'
0000000000009a80         db  0x05 ; '.'
0000000000009a81         db  0x44 ; 'D'
0000000000009a82         db  0x0e ; '.'
0000000000009a83         db  0x30 ; '0'
0000000000009a84         db  0x83 ; '.'
0000000000009a85         db  0x06 ; '.'
0000000000009a86         db  0x6b ; 'k'
0000000000009a87         db  0x0e ; '.'
0000000000009a88         db  0x28 ; '('
0000000000009a89         db  0x44 ; 'D'
0000000000009a8a         db  0x0e ; '.'
0000000000009a8b         db  0x20 ; ' '
0000000000009a8c         db  0x42 ; 'B'
0000000000009a8d         db  0x0e ; '.'
0000000000009a8e         db  0x18 ; '.'
0000000000009a8f         db  0x42 ; 'B'
0000000000009a90         db  0x0e ; '.'
0000000000009a91         db  0x10 ; '.'
0000000000009a92         db  0x42 ; 'B'
0000000000009a93         db  0x0e ; '.'
0000000000009a94         db  0x08 ; '.'
0000000000009a95         db  0x00 ; '.'
0000000000009a96         db  0x00 ; '.'
0000000000009a97         db  0x00 ; '.'
0000000000009a98         dd         0x0000003c                                  ; Length of the record
0000000000009a9c         dd         0x00000d8c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009aa0         db         0xa0, 0xcc, 2 dup (0xff)                    ; begin 0x6740
0000000000009aa4         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0x6786)
0000000000009aa8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009aa9         db  0x42 ; 'B'
0000000000009aaa         db  0x0e ; '.'
0000000000009aab         db  0x10 ; '.'
0000000000009aac         db  0x8e ; '.'
0000000000009aad         db  0x02 ; '.'
0000000000009aae         db  0x42 ; 'B'
0000000000009aaf         db  0x0e ; '.'
0000000000009ab0         db  0x18 ; '.'
0000000000009ab1         db  0x8d ; '.'
0000000000009ab2         db  0x03 ; '.'
0000000000009ab3         db  0x45 ; 'E'
0000000000009ab4         db  0x0e ; '.'
0000000000009ab5         db  0x20 ; ' '
0000000000009ab6         db  0x8c ; '.'
0000000000009ab7         db  0x04 ; '.'
0000000000009ab8         db  0x41 ; 'A'
0000000000009ab9         db  0x0e ; '.'
0000000000009aba         db  0x28 ; '('
0000000000009abb         db  0x86 ; '.'
0000000000009abc         db  0x05 ; '.'
0000000000009abd         db  0x44 ; 'D'
0000000000009abe         db  0x0e ; '.'
0000000000009abf         db  0x30 ; '0'
0000000000009ac0         db  0x83 ; '.'
0000000000009ac1         db  0x06 ; '.'
0000000000009ac2         db  0x6d ; 'm'
0000000000009ac3         db  0x0e ; '.'
0000000000009ac4         db  0x28 ; '('
0000000000009ac5         db  0x44 ; 'D'
0000000000009ac6         db  0x0e ; '.'
0000000000009ac7         db  0x20 ; ' '
0000000000009ac8         db  0x42 ; 'B'
0000000000009ac9         db  0x0e ; '.'
0000000000009aca         db  0x18 ; '.'
0000000000009acb         db  0x42 ; 'B'
0000000000009acc         db  0x0e ; '.'
0000000000009acd         db  0x10 ; '.'
0000000000009ace         db  0x42 ; 'B'
0000000000009acf         db  0x0e ; '.'
0000000000009ad0         db  0x08 ; '.'
0000000000009ad1         db  0x00 ; '.'
0000000000009ad2         db  0x00 ; '.'
0000000000009ad3         db  0x00 ; '.'
0000000000009ad4         db  0x00 ; '.'
0000000000009ad5         db  0x00 ; '.'
0000000000009ad6         db  0x00 ; '.'
0000000000009ad7         db  0x00 ; '.'
0000000000009ad8         dd         0x0000004c                                  ; Length of the record
0000000000009adc         dd         0x00000dcc                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009ae0         db         0xb0, 0xcc, 2 dup (0xff)                    ; begin 0x6790
0000000000009ae4         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x6bac)
0000000000009ae8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ae9         db  0x42 ; 'B'
0000000000009aea         db  0x0e ; '.'
0000000000009aeb         db  0x10 ; '.'
0000000000009aec         db  0x8f ; '.'
0000000000009aed         db  0x02 ; '.'
0000000000009aee         db  0x42 ; 'B'
0000000000009aef         db  0x0e ; '.'
0000000000009af0         db  0x18 ; '.'
0000000000009af1         db  0x8e ; '.'
0000000000009af2         db  0x03 ; '.'
0000000000009af3         db  0x42 ; 'B'
0000000000009af4         db  0x0e ; '.'
0000000000009af5         db  0x20 ; ' '
0000000000009af6         db  0x8d ; '.'
0000000000009af7         db  0x04 ; '.'
0000000000009af8         db  0x42 ; 'B'
0000000000009af9         db  0x0e ; '.'
0000000000009afa         db  0x28 ; '('
0000000000009afb         db  0x8c ; '.'
0000000000009afc         db  0x05 ; '.'
0000000000009afd         db  0x41 ; 'A'
0000000000009afe         db  0x0e ; '.'
0000000000009aff         db  0x30 ; '0'
0000000000009b00         db  0x86 ; '.'
0000000000009b01         db  0x06 ; '.'
0000000000009b02         db  0x41 ; 'A'
0000000000009b03         db  0x0e ; '.'
0000000000009b04         db  0x38 ; '8'
0000000000009b05         db  0x83 ; '.'
0000000000009b06         db  0x07 ; '.'
0000000000009b07         db  0x44 ; 'D'
0000000000009b08         db  0x0e ; '.'
0000000000009b09         db  0x60 ; '`'
0000000000009b0a         db  0x02 ; '.'
0000000000009b0b         db  0xe9 ; '.'
0000000000009b0c         db  0x0a ; '.'
0000000000009b0d         db  0x0e ; '.'
0000000000009b0e         db  0x38 ; '8'
0000000000009b0f         db  0x41 ; 'A'
0000000000009b10         db  0x0e ; '.'
0000000000009b11         db  0x30 ; '0'
0000000000009b12         db  0x41 ; 'A'
0000000000009b13         db  0x0e ; '.'
0000000000009b14         db  0x28 ; '('
0000000000009b15         db  0x42 ; 'B'
0000000000009b16         db  0x0e ; '.'
0000000000009b17         db  0x20 ; ' '
0000000000009b18         db  0x42 ; 'B'
0000000000009b19         db  0x0e ; '.'
0000000000009b1a         db  0x18 ; '.'
0000000000009b1b         db  0x42 ; 'B'
0000000000009b1c         db  0x0e ; '.'
0000000000009b1d         db  0x10 ; '.'
0000000000009b1e         db  0x42 ; 'B'
0000000000009b1f         db  0x0e ; '.'
0000000000009b20         db  0x08 ; '.'
0000000000009b21         db  0x47 ; 'G'
0000000000009b22         db  0x0b ; '.'
0000000000009b23         db  0x00 ; '.'
0000000000009b24         db  0x00 ; '.'
0000000000009b25         db  0x00 ; '.'
0000000000009b26         db  0x00 ; '.'
0000000000009b27         db  0x00 ; '.'
0000000000009b28         dd         0x00000034                                  ; Length of the record
0000000000009b2c         dd         0x00000e1c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009b30         db         0x80, 0xd0, 2 dup (0xff)                    ; begin 0x6bb0
0000000000009b34         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x6c2b)
0000000000009b38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b39         db  0x42 ; 'B'
0000000000009b3a         db  0x0e ; '.'
0000000000009b3b         db  0x10 ; '.'
0000000000009b3c         db  0x8c ; '.'
0000000000009b3d         db  0x02 ; '.'
0000000000009b3e         db  0x41 ; 'A'
0000000000009b3f         db  0x0e ; '.'
0000000000009b40         db  0x18 ; '.'
0000000000009b41         db  0x86 ; '.'
0000000000009b42         db  0x03 ; '.'
0000000000009b43         db  0x41 ; 'A'
0000000000009b44         db  0x0e ; '.'
0000000000009b45         db  0x20 ; ' '
0000000000009b46         db  0x83 ; '.'
0000000000009b47         db  0x04 ; '.'
0000000000009b48         db  0x7d ; '}'
0000000000009b49         db  0x0a ; '.'
0000000000009b4a         db  0x0e ; '.'
0000000000009b4b         db  0x18 ; '.'
0000000000009b4c         db  0x41 ; 'A'
0000000000009b4d         db  0x0e ; '.'
0000000000009b4e         db  0x10 ; '.'
0000000000009b4f         db  0x42 ; 'B'
0000000000009b50         db  0x0e ; '.'
0000000000009b51         db  0x08 ; '.'
0000000000009b52         db  0x44 ; 'D'
0000000000009b53         db  0x0b ; '.'
0000000000009b54         db  0x60 ; '`'
0000000000009b55         db  0x0a ; '.'
0000000000009b56         db  0x0e ; '.'
0000000000009b57         db  0x18 ; '.'
0000000000009b58         db  0x41 ; 'A'
0000000000009b59         db  0x0e ; '.'
0000000000009b5a         db  0x10 ; '.'
0000000000009b5b         db  0x42 ; 'B'
0000000000009b5c         db  0x0e ; '.'
0000000000009b5d         db  0x08 ; '.'
0000000000009b5e         db  0x45 ; 'E'
0000000000009b5f         db  0x0b ; '.'
0000000000009b60         dd         0x00000034                                  ; Length of the record
0000000000009b64         dd         0x00000e54                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009b68         db         0xc8, 0xd0, 2 dup (0xff)                    ; begin 0x6c30
0000000000009b6c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x6eae)
0000000000009b70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b71         db  0x42 ; 'B'
0000000000009b72         db  0x0e ; '.'
0000000000009b73         db  0x10 ; '.'
0000000000009b74         db  0x8c ; '.'
0000000000009b75         db  0x02 ; '.'
0000000000009b76         db  0x41 ; 'A'
0000000000009b77         db  0x0e ; '.'
0000000000009b78         db  0x18 ; '.'
0000000000009b79         db  0x86 ; '.'
0000000000009b7a         db  0x03 ; '.'
0000000000009b7b         db  0x43 ; 'C'
0000000000009b7c         db  0x0e ; '.'
0000000000009b7d         db  0x20 ; ' '
0000000000009b7e         db  0x83 ; '.'
0000000000009b7f         db  0x04 ; '.'
0000000000009b80         db  0x44 ; 'D'
0000000000009b81         db  0x0e ; '.'
0000000000009b82         db  0x70 ; 'p'
0000000000009b83         db  0x02 ; '.'
0000000000009b84         db  0xf0 ; '.'
0000000000009b85         db  0x0a ; '.'
0000000000009b86         db  0x0e ; '.'
0000000000009b87         db  0x20 ; ' '
0000000000009b88         db  0x41 ; 'A'
0000000000009b89         db  0x0e ; '.'
0000000000009b8a         db  0x18 ; '.'
0000000000009b8b         db  0x41 ; 'A'
0000000000009b8c         db  0x0e ; '.'
0000000000009b8d         db  0x10 ; '.'
0000000000009b8e         db  0x42 ; 'B'
0000000000009b8f         db  0x0e ; '.'
0000000000009b90         db  0x08 ; '.'
0000000000009b91         db  0x42 ; 'B'
0000000000009b92         db  0x0b ; '.'
0000000000009b93         db  0x00 ; '.'
0000000000009b94         db  0x00 ; '.'
0000000000009b95         db  0x00 ; '.'
0000000000009b96         db  0x00 ; '.'
0000000000009b97         db  0x00 ; '.'
0000000000009b98         dd         0x0000001c                                  ; Length of the record
0000000000009b9c         dd         0x00000e8c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009ba0         db         0x10, 0xd3, 2 dup (0xff)                    ; begin 0x6eb0
0000000000009ba4         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6ef0)
0000000000009ba8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ba9         db  0x44 ; 'D'
0000000000009baa         db  0x0e ; '.'
0000000000009bab         db  0x10 ; '.'
0000000000009bac         db  0x83 ; '.'
0000000000009bad         db  0x02 ; '.'
0000000000009bae         db  0x5a ; 'Z'
0000000000009baf         db  0x0a ; '.'
0000000000009bb0         db  0x0e ; '.'
0000000000009bb1         db  0x08 ; '.'
0000000000009bb2         db  0x4a ; 'J'
0000000000009bb3         db  0x0b ; '.'
0000000000009bb4         db  0x53 ; 'S'
0000000000009bb5         db  0x0e ; '.'
0000000000009bb6         db  0x08 ; '.'
0000000000009bb7         db  0x00 ; '.'
0000000000009bb8         dd         0x0000002c                                  ; Length of the record
0000000000009bbc         dd         0x00000eac                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009bc0         db         0x30, 0xd3, 2 dup (0xff)                    ; begin 0x6ef0
0000000000009bc4         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6f47)
0000000000009bc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009bc9         db  0x63 ; 'c'
0000000000009bca         db  0x0e ; '.'
0000000000009bcb         db  0x10 ; '.'
0000000000009bcc         db  0x8c ; '.'
0000000000009bcd         db  0x02 ; '.'
0000000000009bce         db  0x41 ; 'A'
0000000000009bcf         db  0x0e ; '.'
0000000000009bd0         db  0x18 ; '.'
0000000000009bd1         db  0x86 ; '.'
0000000000009bd2         db  0x03 ; '.'
0000000000009bd3         db  0x44 ; 'D'
0000000000009bd4         db  0x0e ; '.'
0000000000009bd5         db  0x20 ; ' '
0000000000009bd6         db  0x83 ; '.'
0000000000009bd7         db  0x04 ; '.'
0000000000009bd8         db  0x6b ; 'k'
0000000000009bd9         db  0x0e ; '.'
0000000000009bda         db  0x18 ; '.'
0000000000009bdb         db  0x41 ; 'A'
0000000000009bdc         db  0x0e ; '.'
0000000000009bdd         db  0x10 ; '.'
0000000000009bde         db  0x42 ; 'B'
0000000000009bdf         db  0x0e ; '.'
0000000000009be0         db  0x08 ; '.'
0000000000009be1         db  0x00 ; '.'
0000000000009be2         db  0x00 ; '.'
0000000000009be3         db  0x00 ; '.'
0000000000009be4         db  0x00 ; '.'
0000000000009be5         db  0x00 ; '.'
0000000000009be6         db  0x00 ; '.'
0000000000009be7         db  0x00 ; '.'
0000000000009be8         dd         0x0000003c                                  ; Length of the record
0000000000009bec         dd         0x00000edc                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009bf0         db         0x60, 0xd3, 2 dup (0xff)                    ; begin 0x6f50
0000000000009bf4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6fd3)
0000000000009bf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009bf9         db  0x42 ; 'B'
0000000000009bfa         db  0x0e ; '.'
0000000000009bfb         db  0x10 ; '.'
0000000000009bfc         db  0x8d ; '.'
0000000000009bfd         db  0x02 ; '.'
0000000000009bfe         db  0x42 ; 'B'
0000000000009bff         db  0x0e ; '.'
0000000000009c00         db  0x18 ; '.'
0000000000009c01         db  0x8c ; '.'
0000000000009c02         db  0x03 ; '.'
0000000000009c03         db  0x44 ; 'D'
0000000000009c04         db  0x0e ; '.'
0000000000009c05         db  0x20 ; ' '
0000000000009c06         db  0x86 ; '.'
0000000000009c07         db  0x04 ; '.'
0000000000009c08         db  0x41 ; 'A'
0000000000009c09         db  0x0e ; '.'
0000000000009c0a         db  0x28 ; '('
0000000000009c0b         db  0x83 ; '.'
0000000000009c0c         db  0x05 ; '.'
0000000000009c0d         db  0x4a ; 'J'
0000000000009c0e         db  0x0e ; '.'
0000000000009c0f         db  0x40 ; '@'
0000000000009c10         db  0x02 ; '.'
0000000000009c11         db  0x64 ; 'd'
0000000000009c12         db  0x0a ; '.'
0000000000009c13         db  0x0e ; '.'
0000000000009c14         db  0x28 ; '('
0000000000009c15         db  0x41 ; 'A'
0000000000009c16         db  0x0e ; '.'
0000000000009c17         db  0x20 ; ' '
0000000000009c18         db  0x41 ; 'A'
0000000000009c19         db  0x0e ; '.'
0000000000009c1a         db  0x18 ; '.'
0000000000009c1b         db  0x42 ; 'B'
0000000000009c1c         db  0x0e ; '.'
0000000000009c1d         db  0x10 ; '.'
0000000000009c1e         db  0x42 ; 'B'
0000000000009c1f         db  0x0e ; '.'
0000000000009c20         db  0x08 ; '.'
0000000000009c21         db  0x41 ; 'A'
0000000000009c22         db  0x0b ; '.'
0000000000009c23         db  0x00 ; '.'
0000000000009c24         db  0x00 ; '.'
0000000000009c25         db  0x00 ; '.'
0000000000009c26         db  0x00 ; '.'
0000000000009c27         db  0x00 ; '.'
0000000000009c28         dd         0x0000004c                                  ; Length of the record
0000000000009c2c         dd         0x00000f1c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009c30         db         0xb0, 0xd3, 2 dup (0xff)                    ; begin 0x6fe0
0000000000009c34         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x705d)
0000000000009c38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c39         db  0x42 ; 'B'
0000000000009c3a         db  0x0e ; '.'
0000000000009c3b         db  0x10 ; '.'
0000000000009c3c         db  0x8c ; '.'
0000000000009c3d         db  0x02 ; '.'
0000000000009c3e         db  0x41 ; 'A'
0000000000009c3f         db  0x0e ; '.'
0000000000009c40         db  0x18 ; '.'
0000000000009c41         db  0x86 ; '.'
0000000000009c42         db  0x03 ; '.'
0000000000009c43         db  0x44 ; 'D'
0000000000009c44         db  0x0e ; '.'
0000000000009c45         db  0x20 ; ' '
0000000000009c46         db  0x83 ; '.'
0000000000009c47         db  0x04 ; '.'
0000000000009c48         db  0x69 ; 'i'
0000000000009c49         db  0x0a ; '.'
0000000000009c4a         db  0x0e ; '.'
0000000000009c4b         db  0x18 ; '.'
0000000000009c4c         db  0x41 ; 'A'
0000000000009c4d         db  0x0e ; '.'
0000000000009c4e         db  0x10 ; '.'
0000000000009c4f         db  0x42 ; 'B'
0000000000009c50         db  0x0e ; '.'
0000000000009c51         db  0x08 ; '.'
0000000000009c52         db  0x45 ; 'E'
0000000000009c53         db  0x0b ; '.'
0000000000009c54         db  0x55 ; 'U'
0000000000009c55         db  0x0a ; '.'
0000000000009c56         db  0x0e ; '.'
0000000000009c57         db  0x18 ; '.'
0000000000009c58         db  0x41 ; 'A'
0000000000009c59         db  0x0e ; '.'
0000000000009c5a         db  0x10 ; '.'
0000000000009c5b         db  0x42 ; 'B'
0000000000009c5c         db  0x0e ; '.'
0000000000009c5d         db  0x08 ; '.'
0000000000009c5e         db  0x48 ; 'H'
0000000000009c5f         db  0x0b ; '.'
0000000000009c60         db  0x41 ; 'A'
0000000000009c61         db  0x0a ; '.'
0000000000009c62         db  0x0e ; '.'
0000000000009c63         db  0x18 ; '.'
0000000000009c64         db  0x46 ; 'F'
0000000000009c65         db  0x0e ; '.'
0000000000009c66         db  0x10 ; '.'
0000000000009c67         db  0x42 ; 'B'
0000000000009c68         db  0x0e ; '.'
0000000000009c69         db  0x08 ; '.'
0000000000009c6a         db  0x47 ; 'G'
0000000000009c6b         db  0x0b ; '.'
0000000000009c6c         db  0x49 ; 'I'
0000000000009c6d         db  0x0e ; '.'
0000000000009c6e         db  0x18 ; '.'
0000000000009c6f         db  0x41 ; 'A'
0000000000009c70         db  0x0e ; '.'
0000000000009c71         db  0x10 ; '.'
0000000000009c72         db  0x42 ; 'B'
0000000000009c73         db  0x0e ; '.'
0000000000009c74         db  0x08 ; '.'
0000000000009c75         db  0x00 ; '.'
0000000000009c76         db  0x00 ; '.'
0000000000009c77         db  0x00 ; '.'
0000000000009c78         dd         0x0000001c                                  ; Length of the record
0000000000009c7c         dd         0x00000f6c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009c80         db         0xe0, 0xd3, 2 dup (0xff)                    ; begin 0x7060
0000000000009c84         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x709c)
0000000000009c88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c89         db  0x44 ; 'D'
0000000000009c8a         db  0x0e ; '.'
0000000000009c8b         db  0x10 ; '.'
0000000000009c8c         db  0x61 ; 'a'
0000000000009c8d         db  0x0a ; '.'
0000000000009c8e         db  0x0e ; '.'
0000000000009c8f         db  0x08 ; '.'
0000000000009c90         db  0x4b ; 'K'
0000000000009c91         db  0x0b ; '.'
0000000000009c92         db  0x4b ; 'K'
0000000000009c93         db  0x0e ; '.'
0000000000009c94         db  0x08 ; '.'
0000000000009c95         db  0x00 ; '.'
0000000000009c96         db  0x00 ; '.'
0000000000009c97         db  0x00 ; '.'
0000000000009c98         dd         0x00000074                                  ; Length of the record
0000000000009c9c         dd         0x00000f8c                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009ca0         db         0x00, 0xd4, 2 dup (0xff)                    ; begin 0x70a0
0000000000009ca4         db         0xb4, 3 dup (0x00)                          ; length 0xb4 (end at 0x7154)
0000000000009ca8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ca9         db  0x42 ; 'B'
0000000000009caa         db  0x0e ; '.'
0000000000009cab         db  0x10 ; '.'
0000000000009cac         db  0x8f ; '.'
0000000000009cad         db  0x02 ; '.'
0000000000009cae         db  0x42 ; 'B'
0000000000009caf         db  0x0e ; '.'
0000000000009cb0         db  0x18 ; '.'
0000000000009cb1         db  0x8e ; '.'
0000000000009cb2         db  0x03 ; '.'
0000000000009cb3         db  0x45 ; 'E'
0000000000009cb4         db  0x0e ; '.'
0000000000009cb5         db  0x20 ; ' '
0000000000009cb6         db  0x8d ; '.'
0000000000009cb7         db  0x04 ; '.'
0000000000009cb8         db  0x42 ; 'B'
0000000000009cb9         db  0x0e ; '.'
0000000000009cba         db  0x28 ; '('
0000000000009cbb         db  0x8c ; '.'
0000000000009cbc         db  0x05 ; '.'
0000000000009cbd         db  0x44 ; 'D'
0000000000009cbe         db  0x0e ; '.'
0000000000009cbf         db  0x30 ; '0'
0000000000009cc0         db  0x86 ; '.'
0000000000009cc1         db  0x06 ; '.'
0000000000009cc2         db  0x41 ; 'A'
0000000000009cc3         db  0x0e ; '.'
0000000000009cc4         db  0x38 ; '8'
0000000000009cc5         db  0x83 ; '.'
0000000000009cc6         db  0x07 ; '.'
0000000000009cc7         db  0x4a ; 'J'
0000000000009cc8         db  0x0e ; '.'
0000000000009cc9         db  0x40 ; '@'
0000000000009cca         db  0x02 ; '.'
0000000000009ccb         db  0x53 ; 'S'
0000000000009ccc         db  0x0a ; '.'
0000000000009ccd         db  0x0e ; '.'
0000000000009cce         db  0x38 ; '8'
0000000000009ccf         db  0x41 ; 'A'
0000000000009cd0         db  0x0e ; '.'
0000000000009cd1         db  0x30 ; '0'
0000000000009cd2         db  0x41 ; 'A'
0000000000009cd3         db  0x0e ; '.'
0000000000009cd4         db  0x28 ; '('
0000000000009cd5         db  0x42 ; 'B'
0000000000009cd6         db  0x0e ; '.'
0000000000009cd7         db  0x20 ; ' '
0000000000009cd8         db  0x42 ; 'B'
0000000000009cd9         db  0x0e ; '.'
0000000000009cda         db  0x18 ; '.'
0000000000009cdb         db  0x42 ; 'B'
0000000000009cdc         db  0x0e ; '.'
0000000000009cdd         db  0x10 ; '.'
0000000000009cde         db  0x42 ; 'B'
0000000000009cdf         db  0x0e ; '.'
0000000000009ce0         db  0x08 ; '.'
0000000000009ce1         db  0x49 ; 'I'
0000000000009ce2         db  0x0b ; '.'
0000000000009ce3         db  0x4c ; 'L'
0000000000009ce4         db  0x0a ; '.'
0000000000009ce5         db  0x0e ; '.'
0000000000009ce6         db  0x38 ; '8'
0000000000009ce7         db  0x41 ; 'A'
0000000000009ce8         db  0x0e ; '.'
0000000000009ce9         db  0x30 ; '0'
0000000000009cea         db  0x43 ; 'C'
0000000000009ceb         db  0x0e ; '.'
0000000000009cec         db  0x28 ; '('
0000000000009ced         db  0x42 ; 'B'
0000000000009cee         db  0x0e ; '.'
0000000000009cef         db  0x20 ; ' '
0000000000009cf0         db  0x42 ; 'B'
0000000000009cf1         db  0x0e ; '.'
0000000000009cf2         db  0x18 ; '.'
0000000000009cf3         db  0x42 ; 'B'
0000000000009cf4         db  0x0e ; '.'
0000000000009cf5         db  0x10 ; '.'
0000000000009cf6         db  0x42 ; 'B'
0000000000009cf7         db  0x0e ; '.'
0000000000009cf8         db  0x08 ; '.'
0000000000009cf9         db  0x48 ; 'H'
0000000000009cfa         db  0x0b ; '.'
0000000000009cfb         db  0x44 ; 'D'
0000000000009cfc         db  0x0e ; '.'
0000000000009cfd         db  0x38 ; '8'
0000000000009cfe         db  0x46 ; 'F'
0000000000009cff         db  0x0e ; '.'
0000000000009d00         db  0x30 ; '0'
0000000000009d01         db  0x41 ; 'A'
0000000000009d02         db  0x0e ; '.'
0000000000009d03         db  0x28 ; '('
0000000000009d04         db  0x42 ; 'B'
0000000000009d05         db  0x0e ; '.'
0000000000009d06         db  0x20 ; ' '
0000000000009d07         db  0x42 ; 'B'
0000000000009d08         db  0x0e ; '.'
0000000000009d09         db  0x18 ; '.'
0000000000009d0a         db  0x42 ; 'B'
0000000000009d0b         db  0x0e ; '.'
0000000000009d0c         db  0x10 ; '.'
0000000000009d0d         db  0x42 ; 'B'
0000000000009d0e         db  0x0e ; '.'
0000000000009d0f         db  0x08 ; '.'
0000000000009d10         dd         0x00000048                                  ; Length of the record
0000000000009d14         dd         0x00001004                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009d18         db         0x48, 0xd4, 2 dup (0xff)                    ; begin 0x7160
0000000000009d1c         db         0xa9, 3 dup (0x00)                          ; length 0xa9 (end at 0x7209)
0000000000009d20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d21         db  0x42 ; 'B'
0000000000009d22         db  0x0e ; '.'
0000000000009d23         db  0x10 ; '.'
0000000000009d24         db  0x8f ; '.'
0000000000009d25         db  0x02 ; '.'
0000000000009d26         db  0x42 ; 'B'
0000000000009d27         db  0x0e ; '.'
0000000000009d28         db  0x18 ; '.'
0000000000009d29         db  0x8e ; '.'
0000000000009d2a         db  0x03 ; '.'
0000000000009d2b         db  0x45 ; 'E'
0000000000009d2c         db  0x0e ; '.'
0000000000009d2d         db  0x20 ; ' '
0000000000009d2e         db  0x8d ; '.'
0000000000009d2f         db  0x04 ; '.'
0000000000009d30         db  0x42 ; 'B'
0000000000009d31         db  0x0e ; '.'
0000000000009d32         db  0x28 ; '('
0000000000009d33         db  0x8c ; '.'
0000000000009d34         db  0x05 ; '.'
0000000000009d35         db  0x44 ; 'D'
0000000000009d36         db  0x0e ; '.'
0000000000009d37         db  0x30 ; '0'
0000000000009d38         db  0x86 ; '.'
0000000000009d39         db  0x06 ; '.'
0000000000009d3a         db  0x41 ; 'A'
0000000000009d3b         db  0x0e ; '.'
0000000000009d3c         db  0x38 ; '8'
0000000000009d3d         db  0x83 ; '.'
0000000000009d3e         db  0x07 ; '.'
0000000000009d3f         db  0x4a ; 'J'
0000000000009d40         db  0x0e ; '.'
0000000000009d41         db  0x50 ; 'P'
0000000000009d42         db  0x02 ; '.'
0000000000009d43         db  0x6b ; 'k'
0000000000009d44         db  0x0a ; '.'
0000000000009d45         db  0x0e ; '.'
0000000000009d46         db  0x38 ; '8'
0000000000009d47         db  0x43 ; 'C'
0000000000009d48         db  0x0e ; '.'
0000000000009d49         db  0x30 ; '0'
0000000000009d4a         db  0x41 ; 'A'
0000000000009d4b         db  0x0e ; '.'
0000000000009d4c         db  0x28 ; '('
0000000000009d4d         db  0x42 ; 'B'
0000000000009d4e         db  0x0e ; '.'
0000000000009d4f         db  0x20 ; ' '
0000000000009d50         db  0x42 ; 'B'
0000000000009d51         db  0x0e ; '.'
0000000000009d52         db  0x18 ; '.'
0000000000009d53         db  0x42 ; 'B'
0000000000009d54         db  0x0e ; '.'
0000000000009d55         db  0x10 ; '.'
0000000000009d56         db  0x42 ; 'B'
0000000000009d57         db  0x0e ; '.'
0000000000009d58         db  0x08 ; '.'
0000000000009d59         db  0x47 ; 'G'
0000000000009d5a         db  0x0b ; '.'
0000000000009d5b         db  0x00 ; '.'
0000000000009d5c         dd         0x00000040                                  ; Length of the record
0000000000009d60         dd         0x00001050                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009d64         db         0xac, 0xd4, 2 dup (0xff)                    ; begin 0x7210
0000000000009d68         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x726e)
0000000000009d6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d6d         db  0x42 ; 'B'
0000000000009d6e         db  0x0e ; '.'
0000000000009d6f         db  0x10 ; '.'
0000000000009d70         db  0x8c ; '.'
0000000000009d71         db  0x02 ; '.'
0000000000009d72         db  0x41 ; 'A'
0000000000009d73         db  0x0e ; '.'
0000000000009d74         db  0x18 ; '.'
0000000000009d75         db  0x86 ; '.'
0000000000009d76         db  0x03 ; '.'
0000000000009d77         db  0x44 ; 'D'
0000000000009d78         db  0x0e ; '.'
0000000000009d79         db  0x20 ; ' '
0000000000009d7a         db  0x83 ; '.'
0000000000009d7b         db  0x04 ; '.'
0000000000009d7c         db  0x4a ; 'J'
0000000000009d7d         db  0x0e ; '.'
0000000000009d7e         db  0x30 ; '0'
0000000000009d7f         db  0x62 ; 'b'
0000000000009d80         db  0x0a ; '.'
0000000000009d81         db  0x0e ; '.'
0000000000009d82         db  0x20 ; ' '
0000000000009d83         db  0x4a ; 'J'
0000000000009d84         db  0x0e ; '.'
0000000000009d85         db  0x18 ; '.'
0000000000009d86         db  0x41 ; 'A'
0000000000009d87         db  0x0e ; '.'
0000000000009d88         db  0x10 ; '.'
0000000000009d89         db  0x42 ; 'B'
0000000000009d8a         db  0x0e ; '.'
0000000000009d8b         db  0x08 ; '.'
0000000000009d8c         db  0x48 ; 'H'
0000000000009d8d         db  0x0b ; '.'
0000000000009d8e         db  0x4f ; 'O'
0000000000009d8f         db  0x0e ; '.'
0000000000009d90         db  0x20 ; ' '
0000000000009d91         db  0x43 ; 'C'
0000000000009d92         db  0x0e ; '.'
0000000000009d93         db  0x18 ; '.'
0000000000009d94         db  0x41 ; 'A'
0000000000009d95         db  0x0e ; '.'
0000000000009d96         db  0x10 ; '.'
0000000000009d97         db  0x42 ; 'B'
0000000000009d98         db  0x0e ; '.'
0000000000009d99         db  0x08 ; '.'
0000000000009d9a         db  0x00 ; '.'
0000000000009d9b         db  0x00 ; '.'
0000000000009d9c         db  0x00 ; '.'
0000000000009d9d         db  0x00 ; '.'
0000000000009d9e         db  0x00 ; '.'
0000000000009d9f         db  0x00 ; '.'
0000000000009da0         dd         0x00000044                                  ; Length of the record
0000000000009da4         dd         0x00001094                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009da8         db         0xc8, 0xd4, 2 dup (0xff)                    ; begin 0x7270
0000000000009dac         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x72d5)
0000000000009db0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009db1         db  0x42 ; 'B'
0000000000009db2         db  0x0e ; '.'
0000000000009db3         db  0x10 ; '.'
0000000000009db4         db  0x8f ; '.'
0000000000009db5         db  0x02 ; '.'
0000000000009db6         db  0x42 ; 'B'
0000000000009db7         db  0x0e ; '.'
0000000000009db8         db  0x18 ; '.'
0000000000009db9         db  0x8e ; '.'
0000000000009dba         db  0x03 ; '.'
0000000000009dbb         db  0x45 ; 'E'
0000000000009dbc         db  0x0e ; '.'
0000000000009dbd         db  0x20 ; ' '
0000000000009dbe         db  0x8d ; '.'
0000000000009dbf         db  0x04 ; '.'
0000000000009dc0         db  0x42 ; 'B'
0000000000009dc1         db  0x0e ; '.'
0000000000009dc2         db  0x28 ; '('
0000000000009dc3         db  0x8c ; '.'
0000000000009dc4         db  0x05 ; '.'
0000000000009dc5         db  0x48 ; 'H'
0000000000009dc6         db  0x0e ; '.'
0000000000009dc7         db  0x30 ; '0'
0000000000009dc8         db  0x86 ; '.'
0000000000009dc9         db  0x06 ; '.'
0000000000009dca         db  0x48 ; 'H'
0000000000009dcb         db  0x0e ; '.'
0000000000009dcc         db  0x38 ; '8'
0000000000009dcd         db  0x83 ; '.'
0000000000009dce         db  0x07 ; '.'
0000000000009dcf         db  0x4d ; 'M'
0000000000009dd0         db  0x0e ; '.'
0000000000009dd1         db  0x40 ; '@'
0000000000009dd2         db  0x72 ; 'r'
0000000000009dd3         db  0x0e ; '.'
0000000000009dd4         db  0x38 ; '8'
0000000000009dd5         db  0x41 ; 'A'
0000000000009dd6         db  0x0e ; '.'
0000000000009dd7         db  0x30 ; '0'
0000000000009dd8         db  0x41 ; 'A'
0000000000009dd9         db  0x0e ; '.'
0000000000009dda         db  0x28 ; '('
0000000000009ddb         db  0x42 ; 'B'
0000000000009ddc         db  0x0e ; '.'
0000000000009ddd         db  0x20 ; ' '
0000000000009dde         db  0x42 ; 'B'
0000000000009ddf         db  0x0e ; '.'
0000000000009de0         db  0x18 ; '.'
0000000000009de1         db  0x42 ; 'B'
0000000000009de2         db  0x0e ; '.'
0000000000009de3         db  0x10 ; '.'
0000000000009de4         db  0x42 ; 'B'
0000000000009de5         db  0x0e ; '.'
0000000000009de6         db  0x08 ; '.'
0000000000009de7         db  0x00 ; '.'
0000000000009de8         dd         0x00000014                                  ; Length of the record
0000000000009dec         dd         0x000010dc                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009df0         db         0xf0, 0xd4, 2 dup (0xff)                    ; begin 0x72e0
0000000000009df4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x72e2)
0000000000009df8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009df9         align      512
0000000000009e00         dd         0x00000010                                  ; Length of the record
0000000000009e04         dd         0x000010f4                                  ; FDE: parent CIE at 0x8d10 (FDE encoding = 0x1B)
0000000000009e08         db         0xe8, 0xd4, 2 dup (0xff)                    ; begin 0x72f0
0000000000009e0c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x72fe)
0000000000009e10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e11         align      8


        ; Segment Segment 3
        ; Range: [0x20aab0; 0x20b340[ (2192 bytes)
        ; File offset : [43696; 45216[ (1520 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20aab0; 0x20aab8[ (8 bytes)
        ; File offset : [43696; 43704[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020aab0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20aab8; 0x20aac0[ (8 bytes)
        ; File offset : [43704; 43712[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020aab8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20aac0; 0x20ac18[ (344 bytes)
        ; File offset : [43712; 44056[ (344 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
000000000020aac0         db  0x05 ; '.'                                         ; DATA XREF=main+308
000000000020aac1         db  0x7f ; '.'
000000000020aac2         db  0x00 ; '.'
000000000020aac3         db  0x00 ; '.'
000000000020aac4         db  0x00 ; '.'
000000000020aac5         db  0x00 ; '.'
000000000020aac6         db  0x00 ; '.'
000000000020aac7         db  0x00 ; '.'
000000000020aac8         db  0x00 ; '.'
000000000020aac9         db  0x00 ; '.'
000000000020aaca         db  0x00 ; '.'
000000000020aacb         db  0x00 ; '.'
000000000020aacc         db  0x00 ; '.'
000000000020aacd         db  0x00 ; '.'
000000000020aace         db  0x00 ; '.'
000000000020aacf         db  0x00 ; '.'
000000000020aad0         db  0x00 ; '.'
000000000020aad1         db  0x00 ; '.'
000000000020aad2         db  0x00 ; '.'
000000000020aad3         db  0x00 ; '.'
000000000020aad4         db  0x00 ; '.'
000000000020aad5         db  0x00 ; '.'
000000000020aad6         db  0x00 ; '.'
000000000020aad7         db  0x00 ; '.'
000000000020aad8         db  0x69 ; 'i'
000000000020aad9         db  0x00 ; '.'
000000000020aada         db  0x00 ; '.'
000000000020aadb         db  0x00 ; '.'
000000000020aadc         db  0x00 ; '.'
000000000020aadd         db  0x00 ; '.'
000000000020aade         db  0x00 ; '.'
000000000020aadf         db  0x00 ; '.'
000000000020aae0         db  0x13 ; '.'
000000000020aae1         db  0x7f ; '.'
000000000020aae2         db  0x00 ; '.'
000000000020aae3         db  0x00 ; '.'
000000000020aae4         db  0x00 ; '.'
000000000020aae5         db  0x00 ; '.'
000000000020aae6         db  0x00 ; '.'
000000000020aae7         db  0x00 ; '.'
000000000020aae8         db  0x00 ; '.'
000000000020aae9         db  0x00 ; '.'
000000000020aaea         db  0x00 ; '.'
000000000020aaeb         db  0x00 ; '.'
000000000020aaec         db  0x00 ; '.'
000000000020aaed         db  0x00 ; '.'
000000000020aaee         db  0x00 ; '.'
000000000020aaef         db  0x00 ; '.'
000000000020aaf0         db  0x00 ; '.'
000000000020aaf1         db  0x00 ; '.'
000000000020aaf2         db  0x00 ; '.'
000000000020aaf3         db  0x00 ; '.'
000000000020aaf4         db  0x00 ; '.'
000000000020aaf5         db  0x00 ; '.'
000000000020aaf6         db  0x00 ; '.'
000000000020aaf7         db  0x00 ; '.'
000000000020aaf8         db  0x80 ; '.'
000000000020aaf9         db  0x00 ; '.'
000000000020aafa         db  0x00 ; '.'
000000000020aafb         db  0x00 ; '.'
000000000020aafc         db  0x00 ; '.'
000000000020aafd         db  0x00 ; '.'
000000000020aafe         db  0x00 ; '.'
000000000020aaff         db  0x00 ; '.'
000000000020ab00         db  0x11 ; '.'
000000000020ab01         db  0x7f ; '.'
000000000020ab02         db  0x00 ; '.'
000000000020ab03         db  0x00 ; '.'
000000000020ab04         db  0x00 ; '.'
000000000020ab05         db  0x00 ; '.'
000000000020ab06         db  0x00 ; '.'
000000000020ab07         db  0x00 ; '.'
000000000020ab08         db  0x00 ; '.'
000000000020ab09         db  0x00 ; '.'
000000000020ab0a         db  0x00 ; '.'
000000000020ab0b         db  0x00 ; '.'
000000000020ab0c         db  0x00 ; '.'
000000000020ab0d         db  0x00 ; '.'
000000000020ab0e         db  0x00 ; '.'
000000000020ab0f         db  0x00 ; '.'
000000000020ab10         db  0x00 ; '.'
000000000020ab11         db  0x00 ; '.'
000000000020ab12         db  0x00 ; '.'
000000000020ab13         db  0x00 ; '.'
000000000020ab14         db  0x00 ; '.'
000000000020ab15         db  0x00 ; '.'
000000000020ab16         db  0x00 ; '.'
000000000020ab17         db  0x00 ; '.'
000000000020ab18         db  0x81 ; '.'
000000000020ab19         db  0x00 ; '.'
000000000020ab1a         db  0x00 ; '.'
000000000020ab1b         db  0x00 ; '.'
000000000020ab1c         db  0x00 ; '.'
000000000020ab1d         db  0x00 ; '.'
000000000020ab1e         db  0x00 ; '.'
000000000020ab1f         db  0x00 ; '.'
000000000020ab20         db  0x1f ; '.'
000000000020ab21         db  0x7f ; '.'
000000000020ab22         db  0x00 ; '.'
000000000020ab23         db  0x00 ; '.'
000000000020ab24         db  0x00 ; '.'
000000000020ab25         db  0x00 ; '.'
000000000020ab26         db  0x00 ; '.'
000000000020ab27         db  0x00 ; '.'
000000000020ab28         db  0x00 ; '.'
000000000020ab29         db  0x00 ; '.'
000000000020ab2a         db  0x00 ; '.'
000000000020ab2b         db  0x00 ; '.'
000000000020ab2c         db  0x00 ; '.'
000000000020ab2d         db  0x00 ; '.'
000000000020ab2e         db  0x00 ; '.'
000000000020ab2f         db  0x00 ; '.'
000000000020ab30         db  0x00 ; '.'
000000000020ab31         db  0x00 ; '.'
000000000020ab32         db  0x00 ; '.'
000000000020ab33         db  0x00 ; '.'
000000000020ab34         db  0x00 ; '.'
000000000020ab35         db  0x00 ; '.'
000000000020ab36         db  0x00 ; '.'
000000000020ab37         db  0x00 ; '.'
000000000020ab38         db  0x7a ; 'z'
000000000020ab39         db  0x00 ; '.'
000000000020ab3a         db  0x00 ; '.'
000000000020ab3b         db  0x00 ; '.'
000000000020ab3c         db  0x00 ; '.'
000000000020ab3d         db  0x00 ; '.'
000000000020ab3e         db  0x00 ; '.'
000000000020ab3f         db  0x00 ; '.'
000000000020ab40         db  0x2f ; '/'
000000000020ab41         db  0x7f ; '.'
000000000020ab42         db  0x00 ; '.'
000000000020ab43         db  0x00 ; '.'
000000000020ab44         db  0x00 ; '.'
000000000020ab45         db  0x00 ; '.'
000000000020ab46         db  0x00 ; '.'
000000000020ab47         db  0x00 ; '.'
000000000020ab48         db  0x00 ; '.'
000000000020ab49         db  0x00 ; '.'
000000000020ab4a         db  0x00 ; '.'
000000000020ab4b         db  0x00 ; '.'
000000000020ab4c         db  0x00 ; '.'
000000000020ab4d         db  0x00 ; '.'
000000000020ab4e         db  0x00 ; '.'
000000000020ab4f         db  0x00 ; '.'
000000000020ab50         db  0x00 ; '.'
000000000020ab51         db  0x00 ; '.'
000000000020ab52         db  0x00 ; '.'
000000000020ab53         db  0x00 ; '.'
000000000020ab54         db  0x00 ; '.'
000000000020ab55         db  0x00 ; '.'
000000000020ab56         db  0x00 ; '.'
000000000020ab57         db  0x00 ; '.'
000000000020ab58         db  0x82 ; '.'
000000000020ab59         db  0x00 ; '.'
000000000020ab5a         db  0x00 ; '.'
000000000020ab5b         db  0x00 ; '.'
000000000020ab5c         db  0x00 ; '.'
000000000020ab5d         db  0x00 ; '.'
000000000020ab5e         db  0x00 ; '.'
000000000020ab5f         db  0x00 ; '.'
000000000020ab60         db  0x36 ; '6'
000000000020ab61         db  0x7f ; '.'
000000000020ab62         db  0x00 ; '.'
000000000020ab63         db  0x00 ; '.'
000000000020ab64         db  0x00 ; '.'
000000000020ab65         db  0x00 ; '.'
000000000020ab66         db  0x00 ; '.'
000000000020ab67         db  0x00 ; '.'
000000000020ab68         db  0x00 ; '.'
000000000020ab69         db  0x00 ; '.'
000000000020ab6a         db  0x00 ; '.'
000000000020ab6b         db  0x00 ; '.'
000000000020ab6c         db  0x00 ; '.'
000000000020ab6d         db  0x00 ; '.'
000000000020ab6e         db  0x00 ; '.'
000000000020ab6f         db  0x00 ; '.'
000000000020ab70         db  0x00 ; '.'
000000000020ab71         db  0x00 ; '.'
000000000020ab72         db  0x00 ; '.'
000000000020ab73         db  0x00 ; '.'
000000000020ab74         db  0x00 ; '.'
000000000020ab75         db  0x00 ; '.'
000000000020ab76         db  0x00 ; '.'
000000000020ab77         db  0x00 ; '.'
000000000020ab78         db  0x7e ; '~'
000000000020ab79         db  0xff ; '.'
000000000020ab7a         db  0xff ; '.'
000000000020ab7b         db  0xff ; '.'
000000000020ab7c         db  0x00 ; '.'
000000000020ab7d         db  0x00 ; '.'
000000000020ab7e         db  0x00 ; '.'
000000000020ab7f         db  0x00 ; '.'
000000000020ab80         db  0x3b ; ';'
000000000020ab81         db  0x7f ; '.'
000000000020ab82         db  0x00 ; '.'
000000000020ab83         db  0x00 ; '.'
000000000020ab84         db  0x00 ; '.'
000000000020ab85         db  0x00 ; '.'
000000000020ab86         db  0x00 ; '.'
000000000020ab87         db  0x00 ; '.'
000000000020ab88         db  0x00 ; '.'
000000000020ab89         db  0x00 ; '.'
000000000020ab8a         db  0x00 ; '.'
000000000020ab8b         db  0x00 ; '.'
000000000020ab8c         db  0x00 ; '.'
000000000020ab8d         db  0x00 ; '.'
000000000020ab8e         db  0x00 ; '.'
000000000020ab8f         db  0x00 ; '.'
000000000020ab90         db  0x00 ; '.'
000000000020ab91         db  0x00 ; '.'
000000000020ab92         db  0x00 ; '.'
000000000020ab93         db  0x00 ; '.'
000000000020ab94         db  0x00 ; '.'
000000000020ab95         db  0x00 ; '.'
000000000020ab96         db  0x00 ; '.'
000000000020ab97         db  0x00 ; '.'
000000000020ab98         db  0x7d ; '}'
000000000020ab99         db  0xff ; '.'
000000000020ab9a         db  0xff ; '.'
000000000020ab9b         db  0xff ; '.'
000000000020ab9c         db  0x00 ; '.'
000000000020ab9d         db  0x00 ; '.'
000000000020ab9e         db  0x00 ; '.'
000000000020ab9f         db  0x00 ; '.'
000000000020aba0         db  0x00 ; '.'
000000000020aba1         db  0x00 ; '.'
000000000020aba2         db  0x00 ; '.'
000000000020aba3         db  0x00 ; '.'
000000000020aba4         db  0x00 ; '.'
000000000020aba5         db  0x00 ; '.'
000000000020aba6         db  0x00 ; '.'
000000000020aba7         db  0x00 ; '.'
000000000020aba8         db  0x00 ; '.'
000000000020aba9         db  0x00 ; '.'
000000000020abaa         db  0x00 ; '.'
000000000020abab         db  0x00 ; '.'
000000000020abac         db  0x00 ; '.'
000000000020abad         db  0x00 ; '.'
000000000020abae         db  0x00 ; '.'
000000000020abaf         db  0x00 ; '.'
000000000020abb0         db  0x00 ; '.'
000000000020abb1         db  0x00 ; '.'
000000000020abb2         db  0x00 ; '.'
000000000020abb3         db  0x00 ; '.'
000000000020abb4         db  0x00 ; '.'
000000000020abb5         db  0x00 ; '.'
000000000020abb6         db  0x00 ; '.'
000000000020abb7         db  0x00 ; '.'
000000000020abb8         db  0x00 ; '.'
000000000020abb9         db  0x00 ; '.'
000000000020abba         db  0x00 ; '.'
000000000020abbb         db  0x00 ; '.'
000000000020abbc         db  0x00 ; '.'
000000000020abbd         db  0x00 ; '.'
000000000020abbe         db  0x00 ; '.'
000000000020abbf         db  0x00 ; '.'
                     quoting_style_args:
000000000020abc0         db  0xc1 ; '.'
000000000020abc1         db  0x7f ; '.'
000000000020abc2         db  0x00 ; '.'
000000000020abc3         db  0x00 ; '.'
000000000020abc4         db  0x00 ; '.'
000000000020abc5         db  0x00 ; '.'
000000000020abc6         db  0x00 ; '.'
000000000020abc7         db  0x00 ; '.'
000000000020abc8         db  0xc9 ; '.'
000000000020abc9         db  0x7f ; '.'
000000000020abca         db  0x00 ; '.'
000000000020abcb         db  0x00 ; '.'
000000000020abcc         db  0x00 ; '.'
000000000020abcd         db  0x00 ; '.'
000000000020abce         db  0x00 ; '.'
000000000020abcf         db  0x00 ; '.'
000000000020abd0         db  0xcf ; '.'
000000000020abd1         db  0x7f ; '.'
000000000020abd2         db  0x00 ; '.'
000000000020abd3         db  0x00 ; '.'
000000000020abd4         db  0x00 ; '.'
000000000020abd5         db  0x00 ; '.'
000000000020abd6         db  0x00 ; '.'
000000000020abd7         db  0x00 ; '.'
000000000020abd8         db  0xdc ; '.'
000000000020abd9         db  0x7f ; '.'
000000000020abda         db  0x00 ; '.'
000000000020abdb         db  0x00 ; '.'
000000000020abdc         db  0x00 ; '.'
000000000020abdd         db  0x00 ; '.'
000000000020abde         db  0x00 ; '.'
000000000020abdf         db  0x00 ; '.'
000000000020abe0         db  0xe9 ; '.'
000000000020abe1         db  0x7f ; '.'
000000000020abe2         db  0x00 ; '.'
000000000020abe3         db  0x00 ; '.'
000000000020abe4         db  0x00 ; '.'
000000000020abe5         db  0x00 ; '.'
000000000020abe6         db  0x00 ; '.'
000000000020abe7         db  0x00 ; '.'
000000000020abe8         db  0xfd ; '.'
000000000020abe9         db  0x7f ; '.'
000000000020abea         db  0x00 ; '.'
000000000020abeb         db  0x00 ; '.'
000000000020abec         db  0x00 ; '.'
000000000020abed         db  0x00 ; '.'
000000000020abee         db  0x00 ; '.'
000000000020abef         db  0x00 ; '.'
000000000020abf0         db  0xff ; '.'
000000000020abf1         db  0x7f ; '.'
000000000020abf2         db  0x00 ; '.'
000000000020abf3         db  0x00 ; '.'
000000000020abf4         db  0x00 ; '.'
000000000020abf5         db  0x00 ; '.'
000000000020abf6         db  0x00 ; '.'
000000000020abf7         db  0x00 ; '.'
000000000020abf8         db  0xe2 ; '.'
000000000020abf9         db  0x7f ; '.'
000000000020abfa         db  0x00 ; '.'
000000000020abfb         db  0x00 ; '.'
000000000020abfc         db  0x00 ; '.'
000000000020abfd         db  0x00 ; '.'
000000000020abfe         db  0x00 ; '.'
000000000020abff         db  0x00 ; '.'
000000000020ac00         db  0x66 ; 'f'
000000000020ac01         db  0x7e ; '~'
000000000020ac02         db  0x00 ; '.'
000000000020ac03         db  0x00 ; '.'
000000000020ac04         db  0x00 ; '.'
000000000020ac05         db  0x00 ; '.'
000000000020ac06         db  0x00 ; '.'
000000000020ac07         db  0x00 ; '.'
000000000020ac08         db  0x07 ; '.'
000000000020ac09         db  0x80 ; '.'
000000000020ac0a         db  0x00 ; '.'
000000000020ac0b         db  0x00 ; '.'
000000000020ac0c         db  0x00 ; '.'
000000000020ac0d         db  0x00 ; '.'
000000000020ac0e         db  0x00 ; '.'
000000000020ac0f         db  0x00 ; '.'
000000000020ac10         db  0x00 ; '.'
000000000020ac11         db  0x00 ; '.'
000000000020ac12         db  0x00 ; '.'
000000000020ac13         db  0x00 ; '.'
000000000020ac14         db  0x00 ; '.'
000000000020ac15         db  0x00 ; '.'
000000000020ac16         db  0x00 ; '.'
000000000020ac17         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20ac18; 0x20ae08[ (496 bytes)
        ; File offset : [44056; 44552[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020ac18         db  0x01 ; '.'
000000000020ac19         db  0x00 ; '.'
000000000020ac1a         db  0x00 ; '.'
000000000020ac1b         db  0x00 ; '.'
000000000020ac1c         db  0x00 ; '.'
000000000020ac1d         db  0x00 ; '.'
000000000020ac1e         db  0x00 ; '.'
000000000020ac1f         db  0x00 ; '.'
000000000020ac20         db  0x01 ; '.'
000000000020ac21         db  0x00 ; '.'
000000000020ac22         db  0x00 ; '.'
000000000020ac23         db  0x00 ; '.'
000000000020ac24         db  0x00 ; '.'
000000000020ac25         db  0x00 ; '.'
000000000020ac26         db  0x00 ; '.'
000000000020ac27         db  0x00 ; '.'
000000000020ac28         db  0x0c ; '.'
000000000020ac29         db  0x00 ; '.'
000000000020ac2a         db  0x00 ; '.'
000000000020ac2b         db  0x00 ; '.'
000000000020ac2c         db  0x00 ; '.'
000000000020ac2d         db  0x00 ; '.'
000000000020ac2e         db  0x00 ; '.'
000000000020ac2f         db  0x00 ; '.'
000000000020ac30         db  0x00 ; '.'
000000000020ac31         db  0x16 ; '.'
000000000020ac32         db  0x00 ; '.'
000000000020ac33         db  0x00 ; '.'
000000000020ac34         db  0x00 ; '.'
000000000020ac35         db  0x00 ; '.'
000000000020ac36         db  0x00 ; '.'
000000000020ac37         db  0x00 ; '.'
000000000020ac38         db  0x0d ; '.'
000000000020ac39         db  0x00 ; '.'
000000000020ac3a         db  0x00 ; '.'
000000000020ac3b         db  0x00 ; '.'
000000000020ac3c         db  0x00 ; '.'
000000000020ac3d         db  0x00 ; '.'
000000000020ac3e         db  0x00 ; '.'
000000000020ac3f         db  0x00 ; '.'
000000000020ac40         db  0x00 ; '.'
000000000020ac41         db  0x73 ; 's'
000000000020ac42         db  0x00 ; '.'
000000000020ac43         db  0x00 ; '.'
000000000020ac44         db  0x00 ; '.'
000000000020ac45         db  0x00 ; '.'
000000000020ac46         db  0x00 ; '.'
000000000020ac47         db  0x00 ; '.'
000000000020ac48         db  0x19 ; '.'
000000000020ac49         db  0x00 ; '.'
000000000020ac4a         db  0x00 ; '.'
000000000020ac4b         db  0x00 ; '.'
000000000020ac4c         db  0x00 ; '.'
000000000020ac4d         db  0x00 ; '.'
000000000020ac4e         db  0x00 ; '.'
000000000020ac4f         db  0x00 ; '.'
000000000020ac50         db  0xb0 ; '.'
000000000020ac51         db  0xaa ; '.'
000000000020ac52         db  0x20 ; ' '
000000000020ac53         db  0x00 ; '.'
000000000020ac54         db  0x00 ; '.'
000000000020ac55         db  0x00 ; '.'
000000000020ac56         db  0x00 ; '.'
000000000020ac57         db  0x00 ; '.'
000000000020ac58         db  0x1b ; '.'
000000000020ac59         db  0x00 ; '.'
000000000020ac5a         db  0x00 ; '.'
000000000020ac5b         db  0x00 ; '.'
000000000020ac5c         db  0x00 ; '.'
000000000020ac5d         db  0x00 ; '.'
000000000020ac5e         db  0x00 ; '.'
000000000020ac5f         db  0x00 ; '.'
000000000020ac60         db  0x08 ; '.'
000000000020ac61         db  0x00 ; '.'
000000000020ac62         db  0x00 ; '.'
000000000020ac63         db  0x00 ; '.'
000000000020ac64         db  0x00 ; '.'
000000000020ac65         db  0x00 ; '.'
000000000020ac66         db  0x00 ; '.'
000000000020ac67         db  0x00 ; '.'
000000000020ac68         db  0x1a ; '.'
000000000020ac69         db  0x00 ; '.'
000000000020ac6a         db  0x00 ; '.'
000000000020ac6b         db  0x00 ; '.'
000000000020ac6c         db  0x00 ; '.'
000000000020ac6d         db  0x00 ; '.'
000000000020ac6e         db  0x00 ; '.'
000000000020ac6f         db  0x00 ; '.'
000000000020ac70         db  0xb8 ; '.'
000000000020ac71         db  0xaa ; '.'
000000000020ac72         db  0x20 ; ' '
000000000020ac73         db  0x00 ; '.'
000000000020ac74         db  0x00 ; '.'
000000000020ac75         db  0x00 ; '.'
000000000020ac76         db  0x00 ; '.'
000000000020ac77         db  0x00 ; '.'
000000000020ac78         db  0x1c ; '.'
000000000020ac79         db  0x00 ; '.'
000000000020ac7a         db  0x00 ; '.'
000000000020ac7b         db  0x00 ; '.'
000000000020ac7c         db  0x00 ; '.'
000000000020ac7d         db  0x00 ; '.'
000000000020ac7e         db  0x00 ; '.'
000000000020ac7f         db  0x00 ; '.'
000000000020ac80         db  0x08 ; '.'
000000000020ac81         db  0x00 ; '.'
000000000020ac82         db  0x00 ; '.'
000000000020ac83         db  0x00 ; '.'
000000000020ac84         db  0x00 ; '.'
000000000020ac85         db  0x00 ; '.'
000000000020ac86         db  0x00 ; '.'
000000000020ac87         db  0x00 ; '.'
000000000020ac88         db  0xf5 ; '.'
000000000020ac89         db  0xfe ; '.'
000000000020ac8a         db  0xff ; '.'
000000000020ac8b         db  0x6f ; 'o'
000000000020ac8c         db  0x00 ; '.'
000000000020ac8d         db  0x00 ; '.'
000000000020ac8e         db  0x00 ; '.'
000000000020ac8f         db  0x00 ; '.'
000000000020ac90         db  0x98 ; '.'
000000000020ac91         db  0x02 ; '.'
000000000020ac92         db  0x00 ; '.'
000000000020ac93         db  0x00 ; '.'
000000000020ac94         db  0x00 ; '.'
000000000020ac95         db  0x00 ; '.'
000000000020ac96         db  0x00 ; '.'
000000000020ac97         db  0x00 ; '.'
000000000020ac98         db  0x05 ; '.'
000000000020ac99         db  0x00 ; '.'
000000000020ac9a         db  0x00 ; '.'
000000000020ac9b         db  0x00 ; '.'
000000000020ac9c         db  0x00 ; '.'
000000000020ac9d         db  0x00 ; '.'
000000000020ac9e         db  0x00 ; '.'
000000000020ac9f         db  0x00 ; '.'
000000000020aca0         db  0x70 ; 'p'
000000000020aca1         db  0x09 ; '.'
000000000020aca2         db  0x00 ; '.'
000000000020aca3         db  0x00 ; '.'
000000000020aca4         db  0x00 ; '.'
000000000020aca5         db  0x00 ; '.'
000000000020aca6         db  0x00 ; '.'
000000000020aca7         db  0x00 ; '.'
000000000020aca8         db  0x06 ; '.'
000000000020aca9         db  0x00 ; '.'
000000000020acaa         db  0x00 ; '.'
000000000020acab         db  0x00 ; '.'
000000000020acac         db  0x00 ; '.'
000000000020acad         db  0x00 ; '.'
000000000020acae         db  0x00 ; '.'
000000000020acaf         db  0x00 ; '.'
000000000020acb0         db  0xe0 ; '.'
000000000020acb1         db  0x02 ; '.'
000000000020acb2         db  0x00 ; '.'
000000000020acb3         db  0x00 ; '.'
000000000020acb4         db  0x00 ; '.'
000000000020acb5         db  0x00 ; '.'
000000000020acb6         db  0x00 ; '.'
000000000020acb7         db  0x00 ; '.'
000000000020acb8         db  0x0a ; '.'
000000000020acb9         db  0x00 ; '.'
000000000020acba         db  0x00 ; '.'
000000000020acbb         db  0x00 ; '.'
000000000020acbc         db  0x00 ; '.'
000000000020acbd         db  0x00 ; '.'
000000000020acbe         db  0x00 ; '.'
000000000020acbf         db  0x00 ; '.'
000000000020acc0         db  0x18 ; '.'
000000000020acc1         db  0x03 ; '.'
000000000020acc2         db  0x00 ; '.'
000000000020acc3         db  0x00 ; '.'
000000000020acc4         db  0x00 ; '.'
000000000020acc5         db  0x00 ; '.'
000000000020acc6         db  0x00 ; '.'
000000000020acc7         db  0x00 ; '.'
000000000020acc8         db  0x0b ; '.'
000000000020acc9         db  0x00 ; '.'
000000000020acca         db  0x00 ; '.'
000000000020accb         db  0x00 ; '.'
000000000020accc         db  0x00 ; '.'
000000000020accd         db  0x00 ; '.'
000000000020acce         db  0x00 ; '.'
000000000020accf         db  0x00 ; '.'
000000000020acd0         db  0x18 ; '.'
000000000020acd1         db  0x00 ; '.'
000000000020acd2         db  0x00 ; '.'
000000000020acd3         db  0x00 ; '.'
000000000020acd4         db  0x00 ; '.'
000000000020acd5         db  0x00 ; '.'
000000000020acd6         db  0x00 ; '.'
000000000020acd7         db  0x00 ; '.'
000000000020acd8         db  0x15 ; '.'
000000000020acd9         db  0x00 ; '.'
000000000020acda         db  0x00 ; '.'
000000000020acdb         db  0x00 ; '.'
000000000020acdc         db  0x00 ; '.'
000000000020acdd         db  0x00 ; '.'
000000000020acde         db  0x00 ; '.'
000000000020acdf         db  0x00 ; '.'
000000000020ace0         db  0x00 ; '.'
000000000020ace1         db  0x00 ; '.'
000000000020ace2         db  0x00 ; '.'
000000000020ace3         db  0x00 ; '.'
000000000020ace4         db  0x00 ; '.'
000000000020ace5         db  0x00 ; '.'
000000000020ace6         db  0x00 ; '.'
000000000020ace7         db  0x00 ; '.'
000000000020ace8         db  0x03 ; '.'
000000000020ace9         db  0x00 ; '.'
000000000020acea         db  0x00 ; '.'
000000000020aceb         db  0x00 ; '.'
000000000020acec         db  0x00 ; '.'
000000000020aced         db  0x00 ; '.'
000000000020acee         db  0x00 ; '.'
000000000020acef         db  0x00 ; '.'
000000000020acf0         db  0x08 ; '.'
000000000020acf1         db  0xae ; '.'
000000000020acf2         db  0x20 ; ' '
000000000020acf3         db  0x00 ; '.'
000000000020acf4         db  0x00 ; '.'
000000000020acf5         db  0x00 ; '.'
000000000020acf6         db  0x00 ; '.'
000000000020acf7         db  0x00 ; '.'
000000000020acf8         db  0x02 ; '.'
000000000020acf9         db  0x00 ; '.'
000000000020acfa         db  0x00 ; '.'
000000000020acfb         db  0x00 ; '.'
000000000020acfc         db  0x00 ; '.'
000000000020acfd         db  0x00 ; '.'
000000000020acfe         db  0x00 ; '.'
000000000020acff         db  0x00 ; '.'
000000000020ad00         db  0x28 ; '('
000000000020ad01         db  0x05 ; '.'
000000000020ad02         db  0x00 ; '.'
000000000020ad03         db  0x00 ; '.'
000000000020ad04         db  0x00 ; '.'
000000000020ad05         db  0x00 ; '.'
000000000020ad06         db  0x00 ; '.'
000000000020ad07         db  0x00 ; '.'
000000000020ad08         db  0x14 ; '.'
000000000020ad09         db  0x00 ; '.'
000000000020ad0a         db  0x00 ; '.'
000000000020ad0b         db  0x00 ; '.'
000000000020ad0c         db  0x00 ; '.'
000000000020ad0d         db  0x00 ; '.'
000000000020ad0e         db  0x00 ; '.'
000000000020ad0f         db  0x00 ; '.'
000000000020ad10         db  0x07 ; '.'
000000000020ad11         db  0x00 ; '.'
000000000020ad12         db  0x00 ; '.'
000000000020ad13         db  0x00 ; '.'
000000000020ad14         db  0x00 ; '.'
000000000020ad15         db  0x00 ; '.'
000000000020ad16         db  0x00 ; '.'
000000000020ad17         db  0x00 ; '.'
000000000020ad18         db  0x17 ; '.'
000000000020ad19         db  0x00 ; '.'
000000000020ad1a         db  0x00 ; '.'
000000000020ad1b         db  0x00 ; '.'
000000000020ad1c         db  0x00 ; '.'
000000000020ad1d         db  0x00 ; '.'
000000000020ad1e         db  0x00 ; '.'
000000000020ad1f         db  0x00 ; '.'
000000000020ad20         db  0xd8 ; '.'
000000000020ad21         db  0x10 ; '.'
000000000020ad22         db  0x00 ; '.'
000000000020ad23         db  0x00 ; '.'
000000000020ad24         db  0x00 ; '.'
000000000020ad25         db  0x00 ; '.'
000000000020ad26         db  0x00 ; '.'
000000000020ad27         db  0x00 ; '.'
000000000020ad28         db  0x07 ; '.'
000000000020ad29         db  0x00 ; '.'
000000000020ad2a         db  0x00 ; '.'
000000000020ad2b         db  0x00 ; '.'
000000000020ad2c         db  0x00 ; '.'
000000000020ad2d         db  0x00 ; '.'
000000000020ad2e         db  0x00 ; '.'
000000000020ad2f         db  0x00 ; '.'
000000000020ad30         db  0x78 ; 'x'
000000000020ad31         db  0x0d ; '.'
000000000020ad32         db  0x00 ; '.'
000000000020ad33         db  0x00 ; '.'
000000000020ad34         db  0x00 ; '.'
000000000020ad35         db  0x00 ; '.'
000000000020ad36         db  0x00 ; '.'
000000000020ad37         db  0x00 ; '.'
000000000020ad38         db  0x08 ; '.'
000000000020ad39         db  0x00 ; '.'
000000000020ad3a         db  0x00 ; '.'
000000000020ad3b         db  0x00 ; '.'
000000000020ad3c         db  0x00 ; '.'
000000000020ad3d         db  0x00 ; '.'
000000000020ad3e         db  0x00 ; '.'
000000000020ad3f         db  0x00 ; '.'
000000000020ad40         db  0x60 ; '`'
000000000020ad41         db  0x03 ; '.'
000000000020ad42         db  0x00 ; '.'
000000000020ad43         db  0x00 ; '.'
000000000020ad44         db  0x00 ; '.'
000000000020ad45         db  0x00 ; '.'
000000000020ad46         db  0x00 ; '.'
000000000020ad47         db  0x00 ; '.'
000000000020ad48         db  0x09 ; '.'
000000000020ad49         db  0x00 ; '.'
000000000020ad4a         db  0x00 ; '.'
000000000020ad4b         db  0x00 ; '.'
000000000020ad4c         db  0x00 ; '.'
000000000020ad4d         db  0x00 ; '.'
000000000020ad4e         db  0x00 ; '.'
000000000020ad4f         db  0x00 ; '.'
000000000020ad50         db  0x18 ; '.'
000000000020ad51         db  0x00 ; '.'
000000000020ad52         db  0x00 ; '.'
000000000020ad53         db  0x00 ; '.'
000000000020ad54         db  0x00 ; '.'
000000000020ad55         db  0x00 ; '.'
000000000020ad56         db  0x00 ; '.'
000000000020ad57         db  0x00 ; '.'
000000000020ad58         db  0x1e ; '.'
000000000020ad59         db  0x00 ; '.'
000000000020ad5a         db  0x00 ; '.'
000000000020ad5b         db  0x00 ; '.'
000000000020ad5c         db  0x00 ; '.'
000000000020ad5d         db  0x00 ; '.'
000000000020ad5e         db  0x00 ; '.'
000000000020ad5f         db  0x00 ; '.'
000000000020ad60         db  0x08 ; '.'
000000000020ad61         db  0x00 ; '.'
000000000020ad62         db  0x00 ; '.'
000000000020ad63         db  0x00 ; '.'
000000000020ad64         db  0x00 ; '.'
000000000020ad65         db  0x00 ; '.'
000000000020ad66         db  0x00 ; '.'
000000000020ad67         db  0x00 ; '.'
000000000020ad68         db  0xfb ; '.'
000000000020ad69         db  0xff ; '.'
000000000020ad6a         db  0xff ; '.'
000000000020ad6b         db  0x6f ; 'o'
000000000020ad6c         db  0x00 ; '.'
000000000020ad6d         db  0x00 ; '.'
000000000020ad6e         db  0x00 ; '.'
000000000020ad6f         db  0x00 ; '.'
000000000020ad70         db  0x01 ; '.'
000000000020ad71         db  0x00 ; '.'
000000000020ad72         db  0x00 ; '.'
000000000020ad73         db  0x08 ; '.'
000000000020ad74         db  0x00 ; '.'
000000000020ad75         db  0x00 ; '.'
000000000020ad76         db  0x00 ; '.'
000000000020ad77         db  0x00 ; '.'
000000000020ad78         db  0xfe ; '.'
000000000020ad79         db  0xff ; '.'
000000000020ad7a         db  0xff ; '.'
000000000020ad7b         db  0x6f ; 'o'
000000000020ad7c         db  0x00 ; '.'
000000000020ad7d         db  0x00 ; '.'
000000000020ad7e         db  0x00 ; '.'
000000000020ad7f         db  0x00 ; '.'
000000000020ad80         db  0x18 ; '.'
000000000020ad81         db  0x0d ; '.'
000000000020ad82         db  0x00 ; '.'
000000000020ad83         db  0x00 ; '.'
000000000020ad84         db  0x00 ; '.'
000000000020ad85         db  0x00 ; '.'
000000000020ad86         db  0x00 ; '.'
000000000020ad87         db  0x00 ; '.'
000000000020ad88         db  0xff ; '.'
000000000020ad89         db  0xff ; '.'
000000000020ad8a         db  0xff ; '.'
000000000020ad8b         db  0x6f ; 'o'
000000000020ad8c         db  0x00 ; '.'
000000000020ad8d         db  0x00 ; '.'
000000000020ad8e         db  0x00 ; '.'
000000000020ad8f         db  0x00 ; '.'
000000000020ad90         db  0x01 ; '.'
000000000020ad91         db  0x00 ; '.'
000000000020ad92         db  0x00 ; '.'
000000000020ad93         db  0x00 ; '.'
000000000020ad94         db  0x00 ; '.'
000000000020ad95         db  0x00 ; '.'
000000000020ad96         db  0x00 ; '.'
000000000020ad97         db  0x00 ; '.'
000000000020ad98         db  0xf0 ; '.'
000000000020ad99         db  0xff ; '.'
000000000020ad9a         db  0xff ; '.'
000000000020ad9b         db  0x6f ; 'o'
000000000020ad9c         db  0x00 ; '.'
000000000020ad9d         db  0x00 ; '.'
000000000020ad9e         db  0x00 ; '.'
000000000020ad9f         db  0x00 ; '.'
000000000020ada0         db  0x88 ; '.'
000000000020ada1         db  0x0c ; '.'
000000000020ada2         db  0x00 ; '.'
000000000020ada3         db  0x00 ; '.'
000000000020ada4         db  0x00 ; '.'
000000000020ada5         db  0x00 ; '.'
000000000020ada6         db  0x00 ; '.'
000000000020ada7         db  0x00 ; '.'
000000000020ada8         db  0xf9 ; '.'
000000000020ada9         db  0xff ; '.'
000000000020adaa         db  0xff ; '.'
000000000020adab         db  0x6f ; 'o'
000000000020adac         db  0x00 ; '.'
000000000020adad         db  0x00 ; '.'
000000000020adae         db  0x00 ; '.'
000000000020adaf         db  0x00 ; '.'
000000000020adb0         db  0x18 ; '.'
000000000020adb1         db  0x00 ; '.'
000000000020adb2         db  0x00 ; '.'
000000000020adb3         db  0x00 ; '.'
000000000020adb4         db  0x00 ; '.'
000000000020adb5         db  0x00 ; '.'
000000000020adb6         db  0x00 ; '.'
000000000020adb7         db  0x00 ; '.'
000000000020adb8         db  0x00 ; '.'
000000000020adb9         db  0x00 ; '.'
000000000020adba         db  0x00 ; '.'
000000000020adbb         db  0x00 ; '.'
000000000020adbc         db  0x00 ; '.'
000000000020adbd         db  0x00 ; '.'
000000000020adbe         db  0x00 ; '.'
000000000020adbf         db  0x00 ; '.'
000000000020adc0         db  0x00 ; '.'
000000000020adc1         db  0x00 ; '.'
000000000020adc2         db  0x00 ; '.'
000000000020adc3         db  0x00 ; '.'
000000000020adc4         db  0x00 ; '.'
000000000020adc5         db  0x00 ; '.'
000000000020adc6         db  0x00 ; '.'
000000000020adc7         db  0x00 ; '.'
000000000020adc8         db  0x00 ; '.'
000000000020adc9         db  0x00 ; '.'
000000000020adca         db  0x00 ; '.'
000000000020adcb         db  0x00 ; '.'
000000000020adcc         db  0x00 ; '.'
000000000020adcd         db  0x00 ; '.'
000000000020adce         db  0x00 ; '.'
000000000020adcf         db  0x00 ; '.'
000000000020add0         db  0x00 ; '.'
000000000020add1         db  0x00 ; '.'
000000000020add2         db  0x00 ; '.'
000000000020add3         db  0x00 ; '.'
000000000020add4         db  0x00 ; '.'
000000000020add5         db  0x00 ; '.'
000000000020add6         db  0x00 ; '.'
000000000020add7         db  0x00 ; '.'
000000000020add8         db  0x00 ; '.'
000000000020add9         db  0x00 ; '.'
000000000020adda         db  0x00 ; '.'
000000000020addb         db  0x00 ; '.'
000000000020addc         db  0x00 ; '.'
000000000020addd         db  0x00 ; '.'
000000000020adde         db  0x00 ; '.'
000000000020addf         db  0x00 ; '.'
000000000020ade0         db  0x00 ; '.'
000000000020ade1         db  0x00 ; '.'
000000000020ade2         db  0x00 ; '.'
000000000020ade3         db  0x00 ; '.'
000000000020ade4         db  0x00 ; '.'
000000000020ade5         db  0x00 ; '.'
000000000020ade6         db  0x00 ; '.'
000000000020ade7         db  0x00 ; '.'
000000000020ade8         db  0x00 ; '.'
000000000020ade9         db  0x00 ; '.'
000000000020adea         db  0x00 ; '.'
000000000020adeb         db  0x00 ; '.'
000000000020adec         db  0x00 ; '.'
000000000020aded         db  0x00 ; '.'
000000000020adee         db  0x00 ; '.'
000000000020adef         db  0x00 ; '.'
000000000020adf0         db  0x00 ; '.'
000000000020adf1         db  0x00 ; '.'
000000000020adf2         db  0x00 ; '.'
000000000020adf3         db  0x00 ; '.'
000000000020adf4         db  0x00 ; '.'
000000000020adf5         db  0x00 ; '.'
000000000020adf6         db  0x00 ; '.'
000000000020adf7         db  0x00 ; '.'
000000000020adf8         db  0x00 ; '.'
000000000020adf9         db  0x00 ; '.'
000000000020adfa         db  0x00 ; '.'
000000000020adfb         db  0x00 ; '.'
000000000020adfc         db  0x00 ; '.'
000000000020adfd         db  0x00 ; '.'
000000000020adfe         db  0x00 ; '.'
000000000020adff         db  0x00 ; '.'
000000000020ae00         db  0x00 ; '.'
000000000020ae01         db  0x00 ; '.'
000000000020ae02         db  0x00 ; '.'
000000000020ae03         db  0x00 ; '.'
000000000020ae04         db  0x00 ; '.'
000000000020ae05         db  0x00 ; '.'
000000000020ae06         db  0x00 ; '.'
000000000020ae07         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20ae08; 0x20b000[ (504 bytes)
        ; File offset : [44552; 45056[ (504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020ae08         db  0x18 ; '.'
000000000020ae09         db  0xac ; '.'
000000000020ae0a         db  0x20 ; ' '
000000000020ae0b         db  0x00 ; '.'
000000000020ae0c         db  0x00 ; '.'
000000000020ae0d         db  0x00 ; '.'
000000000020ae0e         db  0x00 ; '.'
000000000020ae0f         db  0x00 ; '.'
                     qword_20ae10:
000000000020ae10         dq         0x0000000000000000                          ; DATA XREF=0x1620
000000000020ae18         db  0x00 ; '.'                                         ; DATA XREF=0x1626
000000000020ae19         db  0x00 ; '.'
000000000020ae1a         db  0x00 ; '.'
000000000020ae1b         db  0x00 ; '.'
000000000020ae1c         db  0x00 ; '.'
000000000020ae1d         db  0x00 ; '.'
000000000020ae1e         db  0x00 ; '.'
000000000020ae1f         db  0x00 ; '.'
                     __ctype_toupper_loc@GOT:        // __ctype_toupper_loc
000000000020ae20         dq         0x000000000020b350                          ; DATA XREF=j___ctype_toupper_loc
                     __uflow@GOT:        // __uflow
000000000020ae28         dq         0x000000000020b358                          ; DATA XREF=j___uflow
                     free@GOT:        // free
000000000020ae30         dq         0x000000000020b360                          ; DATA XREF=j_free
                     abort@GOT:        // abort
000000000020ae38         dq         0x000000000020b368                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020ae40         dq         0x000000000020b370                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000020ae48         dq         0x000000000020b378                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020ae50         dq         0x000000000020b388                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
000000000020ae58         dq         0x000000000020b390                          ; DATA XREF=j___fpending
                     fcntl@GOT:        // fcntl
000000000020ae60         dq         0x000000000020b398                          ; DATA XREF=j_fcntl
                     textdomain@GOT:        // textdomain
000000000020ae68         dq         0x000000000020b3a0                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
000000000020ae70         dq         0x000000000020b3a8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020ae78         dq         0x000000000020b3b0                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020ae80         dq         0x000000000020b3b8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020ae88         dq         0x000000000020b3c0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020ae90         dq         0x000000000020b3c8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020ae98         dq         0x000000000020b3d0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000020aea0         dq         0x000000000020b3d8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020aea8         dq         0x000000000020b3e0                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
000000000020aeb0         dq         0x000000000020b3e8                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
000000000020aeb8         dq         0x000000000020b3f0                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
000000000020aec0         dq         0x000000000020b3f8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
000000000020aec8         dq         0x000000000020b400                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000020aed0         dq         0x000000000020b408                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
000000000020aed8         dq         0x000000000020b410                          ; DATA XREF=j_memset
                     close@GOT:        // close
000000000020aee0         dq         0x000000000020b418                          ; DATA XREF=j_close
                     posix_fadvise@GOT:        // posix_fadvise
000000000020aee8         dq         0x000000000020b420                          ; DATA XREF=j_posix_fadvise
                     memchr@GOT:        // memchr
000000000020aef0         dq         0x000000000020b428                          ; DATA XREF=j_memchr
                     memcmp@GOT:        // memcmp
000000000020aef8         dq         0x000000000020b438                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020af00         dq         0x000000000020b440                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020af08         dq         0x000000000020b448                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
000000000020af10         dq         0x000000000020b450                          ; DATA XREF=j_strcmp
                     memcpy@GOT:        // memcpy
000000000020af18         dq         0x000000000020b460                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
000000000020af20         dq         0x000000000020b468                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
000000000020af28         dq         0x000000000020b470                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020af30         dq         0x000000000020b478                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020af38         dq         0x000000000020b480                          ; DATA XREF=j_nl_langinfo
                     strcoll@GOT:        // strcoll
000000000020af40         dq         0x000000000020b488                          ; DATA XREF=j_strcoll
                     strpbrk@GOT:        // strpbrk
000000000020af48         dq         0x000000000020b490                          ; DATA XREF=j_strpbrk
                     __freading@GOT:        // __freading
000000000020af50         dq         0x000000000020b498                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
000000000020af58         dq         0x000000000020b4a0                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
000000000020af60         dq         0x000000000020b4a8                          ; DATA XREF=j_realloc
                     fdopen@GOT:        // fdopen
000000000020af68         dq         0x000000000020b4b0                          ; DATA XREF=j_fdopen
                     setlocale@GOT:        // setlocale
000000000020af70         dq         0x000000000020b4b8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020af78         dq         0x000000000020b4c0                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
000000000020af80         dq         0x000000000020b4c8                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
000000000020af88         dq         0x000000000020b4d0                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
000000000020af90         dq         0x000000000020b4d8                          ; DATA XREF=j_fopen
                     strtoul@GOT:        // strtoul
000000000020af98         dq         0x000000000020b4e0                          ; DATA XREF=j_strtoul
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020afa0         dq         0x000000000020b4e8                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
000000000020afa8         dq         0x000000000020b4f0                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020afb0         dq         0x000000000020b4f8                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020afb8         dq         0x000000000020b500                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000020afc0         dq         0x000000000020b510                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000020afc8         dq         0x000000000020b518                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020afd0         dq         0x000000000020b528                          ; DATA XREF=j___ctype_b_loc
                     qword_20afd8:
000000000020afd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020afe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020afe1         db  0x00 ; '.'
000000000020afe2         db  0x00 ; '.'
000000000020afe3         db  0x00 ; '.'
000000000020afe4         db  0x00 ; '.'
000000000020afe5         db  0x00 ; '.'
000000000020afe6         db  0x00 ; '.'
000000000020afe7         db  0x00 ; '.'
                     qword_20afe8:
000000000020afe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20aff0:
000000000020aff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20aff8:
000000000020aff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_20aff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x20b000; 0x20b0a0[ (160 bytes)
        ; File offset : [45056; 45216[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020b000         align      8
                     __dso_handle:
000000000020b008         dq         0x000000000020b008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     eolchar:
000000000020b010         db         0x0a                                        ; DATA XREF=main+937, prjoin+250, get_line+67
000000000020b011         align      4
                     tab:
000000000020b014         dd         0xffffffff                                  ; DATA XREF=main+1009, main+1027, prfields+38, prjoin+11, get_line+131, get_line+681
                     join_field_2:
000000000020b018         dq         0xffffffffffffffff                          ; DATA XREF=main+428, main+555, main+1357, main+1930, main+2034, main+2259, main+2383, main+2432, main+2468, prjoin+228, prjoin+288
                     join_field_1:
000000000020b020         dq         0xffffffffffffffff                          ; DATA XREF=main+533, main+548, main+1052, main+1343, main+1937, main+2041, main+2266, main+2399, main+2415, main+2454, prjoin+67
                     outlist_end:
000000000020b028         dq         0x000000000020b160                          ; DATA XREF=add_field_list+65, add_field_list+89
                     Version:
000000000020b030         dq         0x0000000000007f43                          ; "8.31", DATA XREF=main+614
                     exit_failure:
000000000020b038         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23, collate_error+160
000000000020b03c         db  0x00 ; '.'
000000000020b03d         db  0x00 ; '.'
000000000020b03e         db  0x00 ; '.'
000000000020b03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020b040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020b041         db  0x00 ; '.'
000000000020b042         db  0x00 ; '.'
000000000020b043         db  0x00 ; '.'
000000000020b044         db  0x00 ; '.'
000000000020b045         db  0x00 ; '.'
000000000020b046         db  0x00 ; '.'
000000000020b047         db  0x00 ; '.'
000000000020b048         db  0x00 ; '.'
000000000020b049         db  0x00 ; '.'
000000000020b04a         db  0x00 ; '.'
000000000020b04b         db  0x00 ; '.'
000000000020b04c         db  0x00 ; '.'
000000000020b04d         db  0x00 ; '.'
000000000020b04e         db  0x00 ; '.'
000000000020b04f         db  0x00 ; '.'
000000000020b050         db  0x00 ; '.'
000000000020b051         db  0x00 ; '.'
000000000020b052         db  0x00 ; '.'
000000000020b053         db  0x00 ; '.'
000000000020b054         db  0x00 ; '.'
000000000020b055         db  0x00 ; '.'
000000000020b056         db  0x00 ; '.'
000000000020b057         db  0x00 ; '.'
000000000020b058         db  0x00 ; '.'
000000000020b059         db  0x00 ; '.'
000000000020b05a         db  0x00 ; '.'
000000000020b05b         db  0x00 ; '.'
000000000020b05c         db  0x00 ; '.'
000000000020b05d         db  0x00 ; '.'
000000000020b05e         db  0x00 ; '.'
000000000020b05f         db  0x00 ; '.'
000000000020b060         db  0x00 ; '.'
000000000020b061         db  0x00 ; '.'
000000000020b062         db  0x00 ; '.'
000000000020b063         db  0x00 ; '.'
000000000020b064         db  0x00 ; '.'
000000000020b065         db  0x00 ; '.'
000000000020b066         db  0x00 ; '.'
000000000020b067         db  0x00 ; '.'
000000000020b068         db  0x00 ; '.'
000000000020b069         db  0x00 ; '.'
000000000020b06a         db  0x00 ; '.'
000000000020b06b         db  0x00 ; '.'
000000000020b06c         db  0x00 ; '.'
000000000020b06d         db  0x00 ; '.'
000000000020b06e         db  0x00 ; '.'
000000000020b06f         db  0x00 ; '.'
000000000020b070         db  0x00 ; '.'
000000000020b071         db  0x00 ; '.'
000000000020b072         db  0x00 ; '.'
000000000020b073         db  0x00 ; '.'
000000000020b074         db  0x00 ; '.'
000000000020b075         db  0x00 ; '.'
000000000020b076         db  0x00 ; '.'
000000000020b077         db  0x00 ; '.'
                     nslots:
000000000020b078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020b07c         db  0x00 ; '.'
000000000020b07d         db  0x00 ; '.'
000000000020b07e         db  0x00 ; '.'
000000000020b07f         db  0x00 ; '.'
                     slotvec:
000000000020b080         dq         0x000000000020b090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020b088         db  0x00 ; '.'
000000000020b089         db  0x00 ; '.'
000000000020b08a         db  0x00 ; '.'
000000000020b08b         db  0x00 ; '.'
000000000020b08c         db  0x00 ; '.'
000000000020b08d         db  0x00 ; '.'
000000000020b08e         db  0x00 ; '.'
000000000020b08f         db  0x00 ; '.'
                     slotvec0:
000000000020b090         dq         1.26481e-321, 1.05864e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20b0a0; 0x20b340[ (672 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020b0a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020b0a1         db  0x00 ; '.'
000000000020b0a2         db  0x00 ; '.'
000000000020b0a3         db  0x00 ; '.'
000000000020b0a4         db  0x00 ; '.'
000000000020b0a5         db  0x00 ; '.'
000000000020b0a6         db  0x00 ; '.'
000000000020b0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020b0a8         db  0x00 ; '.'                                         ; DATA XREF=main+607, prfield.isra.5+21, prfield.isra.5+60, prfields+96, prfields+176, prjoin+103, prjoin+243, usage+125, usage+162, usage+199, usage+236
000000000020b0a9         db  0x00 ; '.'
000000000020b0aa         db  0x00 ; '.'
000000000020b0ab         db  0x00 ; '.'
000000000020b0ac         db  0x00 ; '.'
000000000020b0ad         db  0x00 ; '.'
000000000020b0ae         db  0x00 ; '.'
000000000020b0af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
000000000020b0b0         db  0x00 ; '.'                                         ; DATA XREF=main+1401, main+1447
000000000020b0b1         db  0x00 ; '.'
000000000020b0b2         db  0x00 ; '.'
000000000020b0b3         db  0x00 ; '.'
000000000020b0b4         db  0x00 ; '.'
000000000020b0b5         db  0x00 ; '.'
000000000020b0b6         db  0x00 ; '.'
000000000020b0b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020b0b8         db  0x00 ; '.'                                         ; DATA XREF=main+503, main+1201, main+1277, main+1291
000000000020b0b9         db  0x00 ; '.'
000000000020b0ba         db  0x00 ; '.'
000000000020b0bb         db  0x00 ; '.'
000000000020b0bc         db  0x00 ; '.'
000000000020b0bd         db  0x00 ; '.'
000000000020b0be         db  0x00 ; '.'
000000000020b0bf         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020b0c0         db  0x00 ; '.'                                         ; DATA XREF=main+416, main+479, main+671, main+752, main+836, main+879, main+984, main+1040, main+3401
000000000020b0c1         db  0x00 ; '.'
000000000020b0c2         db  0x00 ; '.'
000000000020b0c3         db  0x00 ; '.'
000000000020b0c4         db  0x00 ; '.'
000000000020b0c5         db  0x00 ; '.'
000000000020b0c6         db  0x00 ; '.'
000000000020b0c7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020b0c8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020b0c9         db  0x00 ; '.'
000000000020b0ca         db  0x00 ; '.'
000000000020b0cb         db  0x00 ; '.'
000000000020b0cc         db  0x00 ; '.'
000000000020b0cd         db  0x00 ; '.'
000000000020b0ce         db  0x00 ; '.'
000000000020b0cf         db  0x00 ; '.'
000000000020b0d0         db  0x00 ; '.'
000000000020b0d1         db  0x00 ; '.'
000000000020b0d2         db  0x00 ; '.'
000000000020b0d3         db  0x00 ; '.'
000000000020b0d4         db  0x00 ; '.'
000000000020b0d5         db  0x00 ; '.'
000000000020b0d6         db  0x00 ; '.'
000000000020b0d7         db  0x00 ; '.'
000000000020b0d8         db  0x00 ; '.'
000000000020b0d9         db  0x00 ; '.'
000000000020b0da         db  0x00 ; '.'
000000000020b0db         db  0x00 ; '.'
000000000020b0dc         db  0x00 ; '.'
000000000020b0dd         db  0x00 ; '.'
000000000020b0de         db  0x00 ; '.'
000000000020b0df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020b0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020b0e1         db  0x00 ; '.'
000000000020b0e2         db  0x00 ; '.'
000000000020b0e3         db  0x00 ; '.'
000000000020b0e4         db  0x00 ; '.'
000000000020b0e5         db  0x00 ; '.'
000000000020b0e6         db  0x00 ; '.'
000000000020b0e7         db  0x00 ; '.'
                     completed.7697:
000000000020b0e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020b0e9         db  0x00 ; '.'
000000000020b0ea         db  0x00 ; '.'
000000000020b0eb         db  0x00 ; '.'
000000000020b0ec         db  0x00 ; '.'
000000000020b0ed         db  0x00 ; '.'
000000000020b0ee         db  0x00 ; '.'
000000000020b0ef         db  0x00 ; '.'
000000000020b0f0         db  0x00 ; '.'
000000000020b0f1         db  0x00 ; '.'
000000000020b0f2         db  0x00 ; '.'
000000000020b0f3         db  0x00 ; '.'
000000000020b0f4         db  0x00 ; '.'
000000000020b0f5         db  0x00 ; '.'
000000000020b0f6         db  0x00 ; '.'
000000000020b0f7         db  0x00 ; '.'
000000000020b0f8         db  0x00 ; '.'
000000000020b0f9         db  0x00 ; '.'
000000000020b0fa         db  0x00 ; '.'
000000000020b0fb         db  0x00 ; '.'
000000000020b0fc         db  0x00 ; '.'
000000000020b0fd         db  0x00 ; '.'
000000000020b0fe         db  0x00 ; '.'
000000000020b0ff         db  0x00 ; '.'
                     join_header_lines:
000000000020b100         db  0x00 ; '.'                                         ; DATA XREF=main+290, main+1661
                     ignore_case:
000000000020b101         db  0x00 ; '.'                                         ; DATA XREF=main+1080, keycmp.isra.4+59
000000000020b102         db  0x00 ; '.'
000000000020b103         db  0x00 ; '.'
000000000020b104         db  0x00 ; '.'
000000000020b105         db  0x00 ; '.'
000000000020b106         db  0x00 ; '.'
000000000020b107         db  0x00 ; '.'
000000000020b108         db  0x00 ; '.'
000000000020b109         db  0x00 ; '.'
000000000020b10a         db  0x00 ; '.'
000000000020b10b         db  0x00 ; '.'
000000000020b10c         db  0x00 ; '.'
000000000020b10d         db  0x00 ; '.'
000000000020b10e         db  0x00 ; '.'
000000000020b10f         db  0x00 ; '.'
000000000020b110         db  0x00 ; '.'
000000000020b111         db  0x00 ; '.'
000000000020b112         db  0x00 ; '.'
000000000020b113         db  0x00 ; '.'
000000000020b114         db  0x00 ; '.'
000000000020b115         db  0x00 ; '.'
000000000020b116         db  0x00 ; '.'
000000000020b117         db  0x00 ; '.'
000000000020b118         db  0x00 ; '.'
000000000020b119         db  0x00 ; '.'
000000000020b11a         db  0x00 ; '.'
000000000020b11b         db  0x00 ; '.'
000000000020b11c         db  0x00 ; '.'
000000000020b11d         db  0x00 ; '.'
000000000020b11e         db  0x00 ; '.'
000000000020b11f         db  0x00 ; '.'
                     uni_blank:
000000000020b120         db  0x00 ; '.'                                         ; DATA XREF=main+2741, main+2940, main+3004, main+3125, main+3239, main+3273, main+3298, main+3323, prjoin+33, prjoin+160
000000000020b121         db  0x00 ; '.'
000000000020b122         db  0x00 ; '.'
000000000020b123         db  0x00 ; '.'
000000000020b124         db  0x00 ; '.'
000000000020b125         db  0x00 ; '.'
000000000020b126         db  0x00 ; '.'
000000000020b127         db  0x00 ; '.'
000000000020b128         db  0x00 ; '.'
000000000020b129         db  0x00 ; '.'
000000000020b12a         db  0x00 ; '.'
000000000020b12b         db  0x00 ; '.'
000000000020b12c         db  0x00 ; '.'
000000000020b12d         db  0x00 ; '.'
000000000020b12e         db  0x00 ; '.'
000000000020b12f         db  0x00 ; '.'
000000000020b130         db  0x00 ; '.'
000000000020b131         db  0x00 ; '.'
000000000020b132         db  0x00 ; '.'
000000000020b133         db  0x00 ; '.'
000000000020b134         db  0x00 ; '.'
000000000020b135         db  0x00 ; '.'
000000000020b136         db  0x00 ; '.'
000000000020b137         db  0x00 ; '.'
000000000020b138         db  0x00 ; '.'
000000000020b139         db  0x00 ; '.'
000000000020b13a         db  0x00 ; '.'
000000000020b13b         db  0x00 ; '.'
000000000020b13c         db  0x00 ; '.'
000000000020b13d         db  0x00 ; '.'
000000000020b13e         db  0x00 ; '.'
000000000020b13f         db  0x00 ; '.'
000000000020b140         db  0x00 ; '.'
000000000020b141         db  0x00 ; '.'
000000000020b142         db  0x00 ; '.'
000000000020b143         db  0x00 ; '.'
000000000020b144         db  0x00 ; '.'
000000000020b145         db  0x00 ; '.'
000000000020b146         db  0x00 ; '.'
000000000020b147         db  0x00 ; '.'
000000000020b148         db  0x00 ; '.'
000000000020b149         db  0x00 ; '.'
000000000020b14a         db  0x00 ; '.'
000000000020b14b         db  0x00 ; '.'
000000000020b14c         db  0x00 ; '.'
000000000020b14d         db  0x00 ; '.'
000000000020b14e         db  0x00 ; '.'
000000000020b14f         db  0x00 ; '.'
                     check_input_order:
000000000020b150         db  0x00 ; '.'                                         ; DATA XREF=main+214, main+960, main+1104, main+1702, get_line+366, get_line+571
000000000020b151         db  0x00 ; '.'
000000000020b152         db  0x00 ; '.'
000000000020b153         db  0x00 ; '.'
000000000020b154         db  0x00 ; '.'
000000000020b155         db  0x00 ; '.'
000000000020b156         db  0x00 ; '.'
000000000020b157         db  0x00 ; '.'
000000000020b158         db  0x00 ; '.'
000000000020b159         db  0x00 ; '.'
000000000020b15a         db  0x00 ; '.'
000000000020b15b         db  0x00 ; '.'
000000000020b15c         db  0x00 ; '.'
000000000020b15d         db  0x00 ; '.'
000000000020b15e         db  0x00 ; '.'
000000000020b15f         db  0x00 ; '.'
                     outlist_head:
000000000020b160         db  0x00 ; '.'                                         ; DATA XREF=outlist_end
000000000020b161         db  0x00 ; '.'
000000000020b162         db  0x00 ; '.'
000000000020b163         db  0x00 ; '.'
000000000020b164         db  0x00 ; '.'
000000000020b165         db  0x00 ; '.'
000000000020b166         db  0x00 ; '.'
000000000020b167         db  0x00 ; '.'
000000000020b168         db  0x00 ; '.'
000000000020b169         db  0x00 ; '.'
000000000020b16a         db  0x00 ; '.'
000000000020b16b         db  0x00 ; '.'
000000000020b16c         db  0x00 ; '.'
000000000020b16d         db  0x00 ; '.'
000000000020b16e         db  0x00 ; '.'
000000000020b16f         db  0x00 ; '.'
                     qword_20b170:
000000000020b170         db  0x00 ; '.'                                         ; DATA XREF=prjoin+26
000000000020b171         db  0x00 ; '.'
000000000020b172         db  0x00 ; '.'
000000000020b173         db  0x00 ; '.'
000000000020b174         db  0x00 ; '.'
000000000020b175         db  0x00 ; '.'
000000000020b176         db  0x00 ; '.'
000000000020b177         db  0x00 ; '.'
                     autocount_2:
000000000020b178         db  0x00 ; '.'                                         ; DATA XREF=main+1654, prjoin+221
000000000020b179         db  0x00 ; '.'
000000000020b17a         db  0x00 ; '.'
000000000020b17b         db  0x00 ; '.'
000000000020b17c         db  0x00 ; '.'
000000000020b17d         db  0x00 ; '.'
000000000020b17e         db  0x00 ; '.'
000000000020b17f         db  0x00 ; '.'
                     autocount_1:
000000000020b180         db  0x00 ; '.'                                         ; DATA XREF=main+1625, prjoin+199
000000000020b181         db  0x00 ; '.'
000000000020b182         db  0x00 ; '.'
000000000020b183         db  0x00 ; '.'
000000000020b184         db  0x00 ; '.'
000000000020b185         db  0x00 ; '.'
000000000020b186         db  0x00 ; '.'
000000000020b187         db  0x00 ; '.'
                     autoformat:
000000000020b188         db  0x00 ; '.'                                         ; DATA XREF=main+792, main+1594, prfields+20
000000000020b189         db  0x00 ; '.'
000000000020b18a         db  0x00 ; '.'
000000000020b18b         db  0x00 ; '.'
000000000020b18c         db  0x00 ; '.'
000000000020b18d         db  0x00 ; '.'
000000000020b18e         db  0x00 ; '.'
000000000020b18f         db  0x00 ; '.'
                     empty_filler:
000000000020b190         db  0x00 ; '.'                                         ; DATA XREF=main+872, main+907, prfield.isra.5+48
000000000020b191         db  0x00 ; '.'
000000000020b192         db  0x00 ; '.'
000000000020b193         db  0x00 ; '.'
000000000020b194         db  0x00 ; '.'
000000000020b195         db  0x00 ; '.'
000000000020b196         db  0x00 ; '.'
000000000020b197         db  0x00 ; '.'
                     issued_disorder_warning:
000000000020b198         db  0x00 ; '.'                                         ; DATA XREF=main+197, main+1720, main+1842, main+2625, main+3335, get_line+399
                     byte_20b199:
000000000020b199         db  0x00 ; '.'                                         ; DATA XREF=main+190, main+1733, main+1855, main+3044, main+3071
                     seen_unpairable:
000000000020b19a         db  0x00 ; '.'                                         ; DATA XREF=main+183, main+2362, main+2580, main+2724, main+3256, get_line+386
                     print_pairables:
000000000020b19b         db  0x00 ; '.'                                         ; DATA XREF=main+176, main+664, main+2121
                     print_unpairables_2:
000000000020b19c         db  0x00 ; '.'                                         ; DATA XREF=main+737, main+1759, main+2319, main+2634, main+2960, main+3035, main+3080, main+3381
                     print_unpairables_1:
000000000020b19d         db  0x00 ; '.'                                         ; DATA XREF=main+1121, main+1746, main+2549, main+2612, main+2686, main+3348
                     hard_LC_COLLATE:
000000000020b19e         db  0x00 ; '.'                                         ; DATA XREF=main+148, keycmp.isra.4+75
000000000020b19f         db  0x00 ; '.'
                     spareline:
000000000020b1a0         db  0x00 ; '.'                                         ; DATA XREF=free_spareline+1, get_line+784
000000000020b1a1         db  0x00 ; '.'
000000000020b1a2         db  0x00 ; '.'
000000000020b1a3         db  0x00 ; '.'
000000000020b1a4         db  0x00 ; '.'
000000000020b1a5         db  0x00 ; '.'
000000000020b1a6         db  0x00 ; '.'
000000000020b1a7         db  0x00 ; '.'
                     qword_20b1a8:
000000000020b1a8         db  0x00 ; '.'                                         ; DATA XREF=free_spareline+29
000000000020b1a9         db  0x00 ; '.'
000000000020b1aa         db  0x00 ; '.'
000000000020b1ab         db  0x00 ; '.'
000000000020b1ac         db  0x00 ; '.'
000000000020b1ad         db  0x00 ; '.'
000000000020b1ae         db  0x00 ; '.'
000000000020b1af         db  0x00 ; '.'
                     g_names:
000000000020b1b0         db  0x00 ; '.'                                         ; DATA XREF=main+1371, main+3622, main+3779, get_line+549, add_file_name.constprop.7+28, add_file_name.constprop.7+101, add_file_name.constprop.7+204
000000000020b1b1         db  0x00 ; '.'
000000000020b1b2         db  0x00 ; '.'
000000000020b1b3         db  0x00 ; '.'
000000000020b1b4         db  0x00 ; '.'
000000000020b1b5         db  0x00 ; '.'
000000000020b1b6         db  0x00 ; '.'
000000000020b1b7         db  0x00 ; '.'
                     qword_20b1b8:
000000000020b1b8         db  0x00 ; '.'                                         ; DATA XREF=main+1417, main+3527, main+3728, add_file_name.constprop.7+197
000000000020b1b9         db  0x00 ; '.'
000000000020b1ba         db  0x00 ; '.'
000000000020b1bb         db  0x00 ; '.'
000000000020b1bc         db  0x00 ; '.'
000000000020b1bd         db  0x00 ; '.'
000000000020b1be         db  0x00 ; '.'
000000000020b1bf         db  0x00 ; '.'
                     line_no:
000000000020b1c0         db  0x00 ; '.'                                         ; DATA XREF=get_line+94, get_line+519
000000000020b1c1         db  0x00 ; '.'
000000000020b1c2         db  0x00 ; '.'
000000000020b1c3         db  0x00 ; '.'
000000000020b1c4         db  0x00 ; '.'
000000000020b1c5         db  0x00 ; '.'
000000000020b1c6         db  0x00 ; '.'
000000000020b1c7         db  0x00 ; '.'
000000000020b1c8         db  0x00 ; '.'
000000000020b1c9         db  0x00 ; '.'
000000000020b1ca         db  0x00 ; '.'
000000000020b1cb         db  0x00 ; '.'
000000000020b1cc         db  0x00 ; '.'
000000000020b1cd         db  0x00 ; '.'
000000000020b1ce         db  0x00 ; '.'
000000000020b1cf         db  0x00 ; '.'
                     prevline:
000000000020b1d0         db  0x00 ; '.'                                         ; DATA XREF=main+3148, get_line+11
000000000020b1d1         db  0x00 ; '.'
000000000020b1d2         db  0x00 ; '.'
000000000020b1d3         db  0x00 ; '.'
000000000020b1d4         db  0x00 ; '.'
000000000020b1d5         db  0x00 ; '.'
000000000020b1d6         db  0x00 ; '.'
000000000020b1d7         db  0x00 ; '.'
                     qword_20b1d8:
000000000020b1d8         db  0x00 ; '.'                                         ; DATA XREF=main+3159
000000000020b1d9         db  0x00 ; '.'
000000000020b1da         db  0x00 ; '.'
000000000020b1db         db  0x00 ; '.'
000000000020b1dc         db  0x00 ; '.'
000000000020b1dd         db  0x00 ; '.'
000000000020b1de         db  0x00 ; '.'
000000000020b1df         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020b1e0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020b1e1         db  0x00 ; '.'
000000000020b1e2         db  0x00 ; '.'
000000000020b1e3         db  0x00 ; '.'
000000000020b1e4         db  0x00 ; '.'
000000000020b1e5         db  0x00 ; '.'
000000000020b1e6         db  0x00 ; '.'
000000000020b1e7         db  0x00 ; '.'
                     file_name:
000000000020b1e8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020b1e9         db  0x00 ; '.'
000000000020b1ea         db  0x00 ; '.'
000000000020b1eb         db  0x00 ; '.'
000000000020b1ec         db  0x00 ; '.'
000000000020b1ed         db  0x00 ; '.'
000000000020b1ee         db  0x00 ; '.'
000000000020b1ef         db  0x00 ; '.'
                     program_name:
000000000020b1f0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020b1f1         db  0x00 ; '.'
000000000020b1f2         db  0x00 ; '.'
000000000020b1f3         db  0x00 ; '.'
000000000020b1f4         db  0x00 ; '.'
000000000020b1f5         db  0x00 ; '.'
000000000020b1f6         db  0x00 ; '.'
000000000020b1f7         db  0x00 ; '.'
000000000020b1f8         db  0x00 ; '.'
000000000020b1f9         db  0x00 ; '.'
000000000020b1fa         db  0x00 ; '.'
000000000020b1fb         db  0x00 ; '.'
000000000020b1fc         db  0x00 ; '.'
000000000020b1fd         db  0x00 ; '.'
000000000020b1fe         db  0x00 ; '.'
000000000020b1ff         db  0x00 ; '.'
                     slot0:
000000000020b200         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020b201         db  0x00 ; '.'
000000000020b202         db  0x00 ; '.'
000000000020b203         db  0x00 ; '.'
000000000020b204         db  0x00 ; '.'
000000000020b205         db  0x00 ; '.'
000000000020b206         db  0x00 ; '.'
000000000020b207         db  0x00 ; '.'
000000000020b208         db  0x00 ; '.'
000000000020b209         db  0x00 ; '.'
000000000020b20a         db  0x00 ; '.'
000000000020b20b         db  0x00 ; '.'
000000000020b20c         db  0x00 ; '.'
000000000020b20d         db  0x00 ; '.'
000000000020b20e         db  0x00 ; '.'
000000000020b20f         db  0x00 ; '.'
000000000020b210         db  0x00 ; '.'
000000000020b211         db  0x00 ; '.'
000000000020b212         db  0x00 ; '.'
000000000020b213         db  0x00 ; '.'
000000000020b214         db  0x00 ; '.'
000000000020b215         db  0x00 ; '.'
000000000020b216         db  0x00 ; '.'
000000000020b217         db  0x00 ; '.'
000000000020b218         db  0x00 ; '.'
000000000020b219         db  0x00 ; '.'
000000000020b21a         db  0x00 ; '.'
000000000020b21b         db  0x00 ; '.'
000000000020b21c         db  0x00 ; '.'
000000000020b21d         db  0x00 ; '.'
000000000020b21e         db  0x00 ; '.'
000000000020b21f         db  0x00 ; '.'
000000000020b220         db  0x00 ; '.'
000000000020b221         db  0x00 ; '.'
000000000020b222         db  0x00 ; '.'
000000000020b223         db  0x00 ; '.'
000000000020b224         db  0x00 ; '.'
000000000020b225         db  0x00 ; '.'
000000000020b226         db  0x00 ; '.'
000000000020b227         db  0x00 ; '.'
000000000020b228         db  0x00 ; '.'
000000000020b229         db  0x00 ; '.'
000000000020b22a         db  0x00 ; '.'
000000000020b22b         db  0x00 ; '.'
000000000020b22c         db  0x00 ; '.'
000000000020b22d         db  0x00 ; '.'
000000000020b22e         db  0x00 ; '.'
000000000020b22f         db  0x00 ; '.'
000000000020b230         db  0x00 ; '.'
000000000020b231         db  0x00 ; '.'
000000000020b232         db  0x00 ; '.'
000000000020b233         db  0x00 ; '.'
000000000020b234         db  0x00 ; '.'
000000000020b235         db  0x00 ; '.'
000000000020b236         db  0x00 ; '.'
000000000020b237         db  0x00 ; '.'
000000000020b238         db  0x00 ; '.'
000000000020b239         db  0x00 ; '.'
000000000020b23a         db  0x00 ; '.'
000000000020b23b         db  0x00 ; '.'
000000000020b23c         db  0x00 ; '.'
000000000020b23d         db  0x00 ; '.'
000000000020b23e         db  0x00 ; '.'
000000000020b23f         db  0x00 ; '.'
000000000020b240         db  0x00 ; '.'
000000000020b241         db  0x00 ; '.'
000000000020b242         db  0x00 ; '.'
000000000020b243         db  0x00 ; '.'
000000000020b244         db  0x00 ; '.'
000000000020b245         db  0x00 ; '.'
000000000020b246         db  0x00 ; '.'
000000000020b247         db  0x00 ; '.'
000000000020b248         db  0x00 ; '.'
000000000020b249         db  0x00 ; '.'
000000000020b24a         db  0x00 ; '.'
000000000020b24b         db  0x00 ; '.'
000000000020b24c         db  0x00 ; '.'
000000000020b24d         db  0x00 ; '.'
000000000020b24e         db  0x00 ; '.'
000000000020b24f         db  0x00 ; '.'
000000000020b250         db  0x00 ; '.'
000000000020b251         db  0x00 ; '.'
000000000020b252         db  0x00 ; '.'
000000000020b253         db  0x00 ; '.'
000000000020b254         db  0x00 ; '.'
000000000020b255         db  0x00 ; '.'
000000000020b256         db  0x00 ; '.'
000000000020b257         db  0x00 ; '.'
000000000020b258         db  0x00 ; '.'
000000000020b259         db  0x00 ; '.'
000000000020b25a         db  0x00 ; '.'
000000000020b25b         db  0x00 ; '.'
000000000020b25c         db  0x00 ; '.'
000000000020b25d         db  0x00 ; '.'
000000000020b25e         db  0x00 ; '.'
000000000020b25f         db  0x00 ; '.'
000000000020b260         db  0x00 ; '.'
000000000020b261         db  0x00 ; '.'
000000000020b262         db  0x00 ; '.'
000000000020b263         db  0x00 ; '.'
000000000020b264         db  0x00 ; '.'
000000000020b265         db  0x00 ; '.'
000000000020b266         db  0x00 ; '.'
000000000020b267         db  0x00 ; '.'
000000000020b268         db  0x00 ; '.'
000000000020b269         db  0x00 ; '.'
000000000020b26a         db  0x00 ; '.'
000000000020b26b         db  0x00 ; '.'
000000000020b26c         db  0x00 ; '.'
000000000020b26d         db  0x00 ; '.'
000000000020b26e         db  0x00 ; '.'
000000000020b26f         db  0x00 ; '.'
000000000020b270         db  0x00 ; '.'
000000000020b271         db  0x00 ; '.'
000000000020b272         db  0x00 ; '.'
000000000020b273         db  0x00 ; '.'
000000000020b274         db  0x00 ; '.'
000000000020b275         db  0x00 ; '.'
000000000020b276         db  0x00 ; '.'
000000000020b277         db  0x00 ; '.'
000000000020b278         db  0x00 ; '.'
000000000020b279         db  0x00 ; '.'
000000000020b27a         db  0x00 ; '.'
000000000020b27b         db  0x00 ; '.'
000000000020b27c         db  0x00 ; '.'
000000000020b27d         db  0x00 ; '.'
000000000020b27e         db  0x00 ; '.'
000000000020b27f         db  0x00 ; '.'
000000000020b280         db  0x00 ; '.'
000000000020b281         db  0x00 ; '.'
000000000020b282         db  0x00 ; '.'
000000000020b283         db  0x00 ; '.'
000000000020b284         db  0x00 ; '.'
000000000020b285         db  0x00 ; '.'
000000000020b286         db  0x00 ; '.'
000000000020b287         db  0x00 ; '.'
000000000020b288         db  0x00 ; '.'
000000000020b289         db  0x00 ; '.'
000000000020b28a         db  0x00 ; '.'
000000000020b28b         db  0x00 ; '.'
000000000020b28c         db  0x00 ; '.'
000000000020b28d         db  0x00 ; '.'
000000000020b28e         db  0x00 ; '.'
000000000020b28f         db  0x00 ; '.'
000000000020b290         db  0x00 ; '.'
000000000020b291         db  0x00 ; '.'
000000000020b292         db  0x00 ; '.'
000000000020b293         db  0x00 ; '.'
000000000020b294         db  0x00 ; '.'
000000000020b295         db  0x00 ; '.'
000000000020b296         db  0x00 ; '.'
000000000020b297         db  0x00 ; '.'
000000000020b298         db  0x00 ; '.'
000000000020b299         db  0x00 ; '.'
000000000020b29a         db  0x00 ; '.'
000000000020b29b         db  0x00 ; '.'
000000000020b29c         db  0x00 ; '.'
000000000020b29d         db  0x00 ; '.'
000000000020b29e         db  0x00 ; '.'
000000000020b29f         db  0x00 ; '.'
000000000020b2a0         db  0x00 ; '.'
000000000020b2a1         db  0x00 ; '.'
000000000020b2a2         db  0x00 ; '.'
000000000020b2a3         db  0x00 ; '.'
000000000020b2a4         db  0x00 ; '.'
000000000020b2a5         db  0x00 ; '.'
000000000020b2a6         db  0x00 ; '.'
000000000020b2a7         db  0x00 ; '.'
000000000020b2a8         db  0x00 ; '.'
000000000020b2a9         db  0x00 ; '.'
000000000020b2aa         db  0x00 ; '.'
000000000020b2ab         db  0x00 ; '.'
000000000020b2ac         db  0x00 ; '.'
000000000020b2ad         db  0x00 ; '.'
000000000020b2ae         db  0x00 ; '.'
000000000020b2af         db  0x00 ; '.'
000000000020b2b0         db  0x00 ; '.'
000000000020b2b1         db  0x00 ; '.'
000000000020b2b2         db  0x00 ; '.'
000000000020b2b3         db  0x00 ; '.'
000000000020b2b4         db  0x00 ; '.'
000000000020b2b5         db  0x00 ; '.'
000000000020b2b6         db  0x00 ; '.'
000000000020b2b7         db  0x00 ; '.'
000000000020b2b8         db  0x00 ; '.'
000000000020b2b9         db  0x00 ; '.'
000000000020b2ba         db  0x00 ; '.'
000000000020b2bb         db  0x00 ; '.'
000000000020b2bc         db  0x00 ; '.'
000000000020b2bd         db  0x00 ; '.'
000000000020b2be         db  0x00 ; '.'
000000000020b2bf         db  0x00 ; '.'
000000000020b2c0         db  0x00 ; '.'
000000000020b2c1         db  0x00 ; '.'
000000000020b2c2         db  0x00 ; '.'
000000000020b2c3         db  0x00 ; '.'
000000000020b2c4         db  0x00 ; '.'
000000000020b2c5         db  0x00 ; '.'
000000000020b2c6         db  0x00 ; '.'
000000000020b2c7         db  0x00 ; '.'
000000000020b2c8         db  0x00 ; '.'
000000000020b2c9         db  0x00 ; '.'
000000000020b2ca         db  0x00 ; '.'
000000000020b2cb         db  0x00 ; '.'
000000000020b2cc         db  0x00 ; '.'
000000000020b2cd         db  0x00 ; '.'
000000000020b2ce         db  0x00 ; '.'
000000000020b2cf         db  0x00 ; '.'
000000000020b2d0         db  0x00 ; '.'
000000000020b2d1         db  0x00 ; '.'
000000000020b2d2         db  0x00 ; '.'
000000000020b2d3         db  0x00 ; '.'
000000000020b2d4         db  0x00 ; '.'
000000000020b2d5         db  0x00 ; '.'
000000000020b2d6         db  0x00 ; '.'
000000000020b2d7         db  0x00 ; '.'
000000000020b2d8         db  0x00 ; '.'
000000000020b2d9         db  0x00 ; '.'
000000000020b2da         db  0x00 ; '.'
000000000020b2db         db  0x00 ; '.'
000000000020b2dc         db  0x00 ; '.'
000000000020b2dd         db  0x00 ; '.'
000000000020b2de         db  0x00 ; '.'
000000000020b2df         db  0x00 ; '.'
000000000020b2e0         db  0x00 ; '.'
000000000020b2e1         db  0x00 ; '.'
000000000020b2e2         db  0x00 ; '.'
000000000020b2e3         db  0x00 ; '.'
000000000020b2e4         db  0x00 ; '.'
000000000020b2e5         db  0x00 ; '.'
000000000020b2e6         db  0x00 ; '.'
000000000020b2e7         db  0x00 ; '.'
000000000020b2e8         db  0x00 ; '.'
000000000020b2e9         db  0x00 ; '.'
000000000020b2ea         db  0x00 ; '.'
000000000020b2eb         db  0x00 ; '.'
000000000020b2ec         db  0x00 ; '.'
000000000020b2ed         db  0x00 ; '.'
000000000020b2ee         db  0x00 ; '.'
000000000020b2ef         db  0x00 ; '.'
000000000020b2f0         db  0x00 ; '.'
000000000020b2f1         db  0x00 ; '.'
000000000020b2f2         db  0x00 ; '.'
000000000020b2f3         db  0x00 ; '.'
000000000020b2f4         db  0x00 ; '.'
000000000020b2f5         db  0x00 ; '.'
000000000020b2f6         db  0x00 ; '.'
000000000020b2f7         db  0x00 ; '.'
000000000020b2f8         db  0x00 ; '.'
000000000020b2f9         db  0x00 ; '.'
000000000020b2fa         db  0x00 ; '.'
000000000020b2fb         db  0x00 ; '.'
000000000020b2fc         db  0x00 ; '.'
000000000020b2fd         db  0x00 ; '.'
000000000020b2fe         db  0x00 ; '.'
000000000020b2ff         db  0x00 ; '.'
                     default_quoting_options:
000000000020b300         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020b301         db  0x00 ; '.'
000000000020b302         db  0x00 ; '.'
000000000020b303         db  0x00 ; '.'
000000000020b304         db  0x00 ; '.'
000000000020b305         db  0x00 ; '.'
000000000020b306         db  0x00 ; '.'
000000000020b307         db  0x00 ; '.'
000000000020b308         db  0x00 ; '.'
000000000020b309         db  0x00 ; '.'
000000000020b30a         db  0x00 ; '.'
000000000020b30b         db  0x00 ; '.'
000000000020b30c         db  0x00 ; '.'
000000000020b30d         db  0x00 ; '.'
000000000020b30e         db  0x00 ; '.'
000000000020b30f         db  0x00 ; '.'
000000000020b310         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020b311         db  0x00 ; '.'
000000000020b312         db  0x00 ; '.'
000000000020b313         db  0x00 ; '.'
000000000020b314         db  0x00 ; '.'
000000000020b315         db  0x00 ; '.'
000000000020b316         db  0x00 ; '.'
000000000020b317         db  0x00 ; '.'
000000000020b318         db  0x00 ; '.'
000000000020b319         db  0x00 ; '.'
000000000020b31a         db  0x00 ; '.'
000000000020b31b         db  0x00 ; '.'
000000000020b31c         db  0x00 ; '.'
000000000020b31d         db  0x00 ; '.'
000000000020b31e         db  0x00 ; '.'
000000000020b31f         db  0x00 ; '.'
000000000020b320         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020b321         db  0x00 ; '.'
000000000020b322         db  0x00 ; '.'
000000000020b323         db  0x00 ; '.'
000000000020b324         db  0x00 ; '.'
000000000020b325         db  0x00 ; '.'
000000000020b326         db  0x00 ; '.'
000000000020b327         db  0x00 ; '.'
000000000020b328         db  0x00 ; '.'
000000000020b329         db  0x00 ; '.'
000000000020b32a         db  0x00 ; '.'
000000000020b32b         db  0x00 ; '.'
000000000020b32c         db  0x00 ; '.'
000000000020b32d         db  0x00 ; '.'
000000000020b32e         db  0x00 ; '.'
000000000020b32f         db  0x00 ; '.'
                     qword_20b330:
000000000020b330         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020b331         db  0x00 ; '.'
000000000020b332         db  0x00 ; '.'
000000000020b333         db  0x00 ; '.'
000000000020b334         db  0x00 ; '.'
000000000020b335         db  0x00 ; '.'
000000000020b336         db  0x00 ; '.'
000000000020b337         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000020b338         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000020b339         db  0x00 ; '.'
000000000020b33a         db  0x00 ; '.'
000000000020b33b         db  0x00 ; '.'
000000000020b33c         db  0x00 ; '.'
000000000020b33d         db  0x00 ; '.'
000000000020b33e         db  0x00 ; '.'
000000000020b33f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20b350; 0x20b710[ (960 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20b350; 0x416a60[ (2144016 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __ctype_toupper_loc:
000000000020b350         extern function code                                   ; DATA XREF=__ctype_toupper_loc@GOT
                     __uflow:
000000000020b358         extern function code                                   ; DATA XREF=__uflow@GOT
                     free:
000000000020b360         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020b368         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020b370         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020b378         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020b380         extern function code
                     _exit:
000000000020b388         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020b390         extern function code                                   ; DATA XREF=__fpending@GOT
                     fcntl:
000000000020b398         extern function code                                   ; DATA XREF=fcntl@GOT
                     textdomain:
000000000020b3a0         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020b3a8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020b3b0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020b3b8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020b3c0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020b3c8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020b3d0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020b3d8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020b3e0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020b3e8         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
000000000020b3f0         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020b3f8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020b400         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020b408         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020b410         extern function code                                   ; DATA XREF=memset@GOT
                     close:
000000000020b418         extern function code                                   ; DATA XREF=close@GOT
                     posix_fadvise:
000000000020b420         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     memchr:
000000000020b428         extern function code                                   ; DATA XREF=memchr@GOT
                     __libc_start_main:
000000000020b430         extern function code
                     memcmp:
000000000020b438         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020b440         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020b448         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020b450         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
000000000020b458         extern function code
                     memcpy:
000000000020b460         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020b468         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
000000000020b470         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020b478         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020b480         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     strcoll:
000000000020b488         extern function code                                   ; DATA XREF=strcoll@GOT
                     strpbrk:
000000000020b490         extern function code                                   ; DATA XREF=strpbrk@GOT
                     __freading:
000000000020b498         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
000000000020b4a0         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
000000000020b4a8         extern function code                                   ; DATA XREF=realloc@GOT
                     fdopen:
000000000020b4b0         extern function code                                   ; DATA XREF=fdopen@GOT
                     setlocale:
000000000020b4b8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020b4c0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
000000000020b4c8         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
000000000020b4d0         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
000000000020b4d8         extern function code                                   ; DATA XREF=fopen@GOT
                     strtoul:
000000000020b4e0         extern function code                                   ; DATA XREF=strtoul@GOT
                     __cxa_atexit:
000000000020b4e8         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020b4f0         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020b4f8         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020b500         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020b508         extern function code
                     mbsinit:
000000000020b510         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020b518         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020b520         extern function code
                     __ctype_b_loc:
000000000020b528         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __ctype_toupper_loc@@GLIBC_2.3:
000000000020b530         extern function code
                     __uflow@@GLIBC_2.2.5:
000000000020b538         extern function code
                     free@@GLIBC_2.2.5:
000000000020b540         extern function code
                     abort@@GLIBC_2.2.5:
000000000020b548         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020b550         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020b558         extern function code
                     _ITM_deregisterTMCloneTable_20b560:        // _ITM_deregisterTMCloneTable
000000000020b560         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020b568         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020b570         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000020b578         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020b580         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020b588         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020b590         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020b598         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020b5a0         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020b5a8         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020b5b0         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020b5b8         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020b5c0         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020b5c8         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020b5d0         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020b5d8         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020b5e0         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020b5e8         extern function code
                     memset@@GLIBC_2.2.5:
000000000020b5f0         extern function code
                     close@@GLIBC_2.2.5:
000000000020b5f8         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
000000000020b600         extern function code
                     memchr@@GLIBC_2.2.5:
000000000020b608         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020b610         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020b618         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020b620         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020b628         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020b630         extern function code
                     __gmon_start___20b638:        // __gmon_start__
000000000020b638         extern function code
                     memcpy@@GLIBC_2.14:
000000000020b640         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020b648         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020b650         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020b658         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020b660         extern function code
                     strcoll@@GLIBC_2.2.5:
000000000020b668         extern function code
                     strpbrk@@GLIBC_2.2.5:
000000000020b670         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020b678         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
000000000020b680         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020b688         extern function code
                     fdopen@@GLIBC_2.2.5:
000000000020b690         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020b698         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020b6a0         extern function code
                     error@@GLIBC_2.2.5:
000000000020b6a8         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020b6b0         extern function code
                     fopen@@GLIBC_2.2.5:
000000000020b6b8         extern function code
                     strtoul@@GLIBC_2.2.5:
000000000020b6c0         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020b6c8         extern function code
                     exit@@GLIBC_2.2.5:
000000000020b6d0         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020b6d8         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020b6e0         extern function code
                     _ITM_registerTMCloneTable_20b6e8:        // _ITM_registerTMCloneTable
000000000020b6e8         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020b6f0         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020b6f8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020b700         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020b708         extern function code
