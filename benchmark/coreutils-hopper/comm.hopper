
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/comm
        UUID: 7FCC24ED-74B8-A9EB-A2DF-EE7BBE786839
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x7ce8[ (31976 bytes)
        ; File offset : [0; 31976[ (31976 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x10 ; '.'
0000000000000019         db  0x1b ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x10 ; '.'
0000000000000029         db  0xb5 ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xe8 ; '.'
00000000000000d1         db  0x7c ; '|'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xe8 ; '.'
00000000000000d9         db  0x7c ; '|'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xd0 ; '.'
00000000000000f1         db  0x8a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xd0 ; '.'
00000000000000f9         db  0x8a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xd0 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x8a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0xd0 ; '.'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x90 ; '.'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x8c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x8c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0x8c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x40 ; '@'
0000000000000199         db  0x6b ; 'k'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x40 ; '@'
00000000000001a1         db  0x6b ; 'k'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x40 ; '@'
00000000000001a9         db  0x6b ; 'k'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xdc ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xdc ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0xd0 ; '.'                                         ; DATA XREF=compare_files+15, compare_files+1235
0000000000000209         db  0x8a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xd0 ; '.'
0000000000000211         db  0x8a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xd0 ; '.'
0000000000000219         db  0x8a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x30 ; '0'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x30 ; '0'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x7f ; '.'
0000000000000285         db  0xcc ; '.'
0000000000000286         db  0x24 ; '$'
0000000000000287         db  0xed ; '.'
0000000000000288         db  0x74 ; 't'
0000000000000289         db  0xb8 ; '.'
000000000000028a         db  0xa9 ; '.'
000000000000028b         db  0xeb ; '.'
000000000000028c         db  0xa2 ; '.'
000000000000028d         db  0xdf ; '.'
000000000000028e         db  0xee ; '.'
000000000000028f         db  0x7b ; '{'
0000000000000290         db  0xbe ; '.'
0000000000000291         db  0x78 ; 'x'
0000000000000292         db  0x68 ; 'h'
0000000000000293         db  0x39 ; '9'
0000000000000294         db  0x57 ; 'W'
0000000000000295         db  0x0a ; '.'
0000000000000296         db  0x6a ; 'j'
0000000000000297         db  0xad ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x36 ; '6'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x36 ; '6'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x37 ; '7'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3d ; '='
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8c8[ (1512 bytes)
        ; File offset : [736; 2248[ (1512 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x34 ; '4'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x24 ; '$'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x80 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0xe4 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x37 ; '7'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x88 ; '.'
0000000000000371         db  0x02 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x8c ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x89 ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xc8 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xd2 ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x1e ; '.'
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0xce ; '.'                                         ; DATA XREF=rpl_fcntl+288
0000000000000401         db  0x01 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x4e ; 'N'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xaa ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xd6 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x5e ; '^'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x6f ; 'o'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x29 ; ')'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x46 ; 'F'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x11 ; '.'
00000000000004c1         db  0x01 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0xdd ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x1f ; '.'
00000000000004f1         db  0x01 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xc1 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xf4 ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xf5 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x15 ; '.'
0000000000000551         db  0x02 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xcf ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xed ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0xa4 ; '.'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x20 ; ' '
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x17 ; '.'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x7b ; '{'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x25 ; '%'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x0b ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x3c ; '<'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x0d ; '.'
0000000000000629         db  0x02 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x5d ; ']'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0xdd ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x78 ; 'x'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0xb2 ; '.'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x1f ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x12 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x58 ; 'X'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x06 ; '.'
00000000000006e9         db  0x02 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x31 ; '1'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x44 ; 'D'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x8d ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x82 ; '.'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0xfc ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0xb3 ; '.'
0000000000000779         db  0x02 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x20 ; ' '
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x2c ; ','
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x6f ; 'o'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xb9 ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x22 ; '"'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x48 ; 'H'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x0a ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x11 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0xa8 ; '.'
00000000000007f9         db  0x90 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x29 ; ')'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x11 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0xa0 ; '.'
0000000000000811         db  0x90 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x86 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xb0 ; '.'
0000000000000829         db  0x90 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x92 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x21 ; '!'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0xc8 ; '.'
0000000000000841         db  0x90 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x34 ; '4'
0000000000000851         db  0x02 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xc8 ; '.'
0000000000000859         db  0x90 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x94 ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x21 ; '!'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xa0 ; '.'
0000000000000871         db  0x90 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x68 ; 'h'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xe0 ; '.'
0000000000000889         db  0x90 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x3f ; '?'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xb8 ; '.'
00000000000008a1         db  0x90 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x04 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x56 ; 'V'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xc0 ; '.'
00000000000008b9         db  0x90 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8c8; 0xb95[ (717 bytes)
        ; File offset : [2248; 2965[ (717 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x6c ; 'l'
00000000000008ca         db  0x69 ; 'i'
00000000000008cb         db  0x62 ; 'b'
00000000000008cc         db  0x63 ; 'c'
00000000000008cd         db  0x2e ; '.'
00000000000008ce         db  0x73 ; 's'
00000000000008cf         db  0x6f ; 'o'
00000000000008d0         db  0x2e ; '.'
00000000000008d1         db  0x36 ; '6'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x66 ; 'f'
00000000000008d4         db  0x66 ; 'f'
00000000000008d5         db  0x6c ; 'l'
00000000000008d6         db  0x75 ; 'u'
00000000000008d7         db  0x73 ; 's'
00000000000008d8         db  0x68 ; 'h'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x5f ; '_'
00000000000008db         db  0x5f ; '_'
00000000000008dc         db  0x70 ; 'p'
00000000000008dd         db  0x72 ; 'r'
00000000000008de         db  0x69 ; 'i'
00000000000008df         db  0x6e ; 'n'
00000000000008e0         db  0x74 ; 't'
00000000000008e1         db  0x66 ; 'f'
00000000000008e2         db  0x5f ; '_'
00000000000008e3         db  0x63 ; 'c'
00000000000008e4         db  0x68 ; 'h'
00000000000008e5         db  0x6b ; 'k'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x73 ; 's'
00000000000008e8         db  0x65 ; 'e'
00000000000008e9         db  0x74 ; 't'
00000000000008ea         db  0x6c ; 'l'
00000000000008eb         db  0x6f ; 'o'
00000000000008ec         db  0x63 ; 'c'
00000000000008ed         db  0x61 ; 'a'
00000000000008ee         db  0x6c ; 'l'
00000000000008ef         db  0x65 ; 'e'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x6d ; 'm'
00000000000008f2         db  0x62 ; 'b'
00000000000008f3         db  0x72 ; 'r'
00000000000008f4         db  0x74 ; 't'
00000000000008f5         db  0x6f ; 'o'
00000000000008f6         db  0x77 ; 'w'
00000000000008f7         db  0x63 ; 'c'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x66 ; 'f'
00000000000008fa         db  0x6f ; 'o'
00000000000008fb         db  0x70 ; 'p'
00000000000008fc         db  0x65 ; 'e'
00000000000008fd         db  0x6e ; 'n'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x73 ; 's'
                     aTrncmp:
0000000000000900         db         "trncmp", 0
0000000000000907         db  0x6f ; 'o'
0000000000000908         db  0x70 ; 'p'
0000000000000909         db  0x74 ; 't'
000000000000090a         db  0x69 ; 'i'
000000000000090b         db  0x6e ; 'n'
000000000000090c         db  0x64 ; 'd'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x73 ; 's'
000000000000090f         db  0x74 ; 't'
0000000000000910         db  0x72 ; 'r'
0000000000000911         db  0x72 ; 'r'
0000000000000912         db  0x63 ; 'c'
0000000000000913         db  0x68 ; 'h'
0000000000000914         db  0x72 ; 'r'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x64 ; 'd'
0000000000000917         db  0x63 ; 'c'
0000000000000918         db  0x67 ; 'g'
0000000000000919         db  0x65 ; 'e'
000000000000091a         db  0x74 ; 't'
000000000000091b         db  0x74 ; 't'
000000000000091c         db  0x65 ; 'e'
000000000000091d         db  0x78 ; 'x'
000000000000091e         db  0x74 ; 't'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x65 ; 'e'
0000000000000921         db  0x72 ; 'r'
0000000000000922         db  0x72 ; 'r'
0000000000000923         db  0x6f ; 'o'
0000000000000924         db  0x72 ; 'r'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x5f ; '_'
0000000000000927         db  0x5f ; '_'
0000000000000928         db  0x73 ; 's'
0000000000000929         db  0x74 ; 't'
000000000000092a         db  0x61 ; 'a'
000000000000092b         db  0x63 ; 'c'
000000000000092c         db  0x6b ; 'k'
000000000000092d         db  0x5f ; '_'
000000000000092e         db  0x63 ; 'c'
000000000000092f         db  0x68 ; 'h'
0000000000000930         db  0x6b ; 'k'
0000000000000931         db  0x5f ; '_'
0000000000000932         db  0x66 ; 'f'
0000000000000933         db  0x61 ; 'a'
0000000000000934         db  0x69 ; 'i'
0000000000000935         db  0x6c ; 'l'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x69 ; 'i'
0000000000000938         db  0x73 ; 's'
0000000000000939         db  0x77 ; 'w'
000000000000093a         db  0x70 ; 'p'
000000000000093b         db  0x72 ; 'r'
000000000000093c         db  0x69 ; 'i'
000000000000093d         db  0x6e ; 'n'
000000000000093e         db  0x74 ; 't'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x72 ; 'r'
0000000000000941         db  0x65 ; 'e'
0000000000000942         db  0x61 ; 'a'
0000000000000943         db  0x6c ; 'l'
0000000000000944         db  0x6c ; 'l'
0000000000000945         db  0x6f ; 'o'
0000000000000946         db  0x63 ; 'c'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x61 ; 'a'
0000000000000949         db  0x62 ; 'b'
000000000000094a         db  0x6f ; 'o'
000000000000094b         db  0x72 ; 'r'
000000000000094c         db  0x74 ; 't'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x73 ; 's'
000000000000094f         db  0x74 ; 't'
0000000000000950         db  0x64 ; 'd'
0000000000000951         db  0x69 ; 'i'
0000000000000952         db  0x6e ; 'n'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x5f ; '_'
0000000000000955         db  0x65 ; 'e'
0000000000000956         db  0x78 ; 'x'
0000000000000957         db  0x69 ; 'i'
0000000000000958         db  0x74 ; 't'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x70 ; 'p'
000000000000095b         db  0x72 ; 'r'
000000000000095c         db  0x6f ; 'o'
000000000000095d         db  0x67 ; 'g'
000000000000095e         db  0x72 ; 'r'
000000000000095f         db  0x61 ; 'a'
0000000000000960         db  0x6d ; 'm'
0000000000000961         db  0x5f ; '_'
0000000000000962         db  0x69 ; 'i'
0000000000000963         db  0x6e ; 'n'
0000000000000964         db  0x76 ; 'v'
0000000000000965         db  0x6f ; 'o'
0000000000000966         db  0x63 ; 'c'
0000000000000967         db  0x61 ; 'a'
0000000000000968         db  0x74 ; 't'
0000000000000969         db  0x69 ; 'i'
000000000000096a         db  0x6f ; 'o'
000000000000096b         db  0x6e ; 'n'
000000000000096c         db  0x5f ; '_'
000000000000096d         db  0x6e ; 'n'
000000000000096e         db  0x61 ; 'a'
000000000000096f         db  0x6d ; 'm'
0000000000000970         db  0x65 ; 'e'
0000000000000971         db  0x00 ; '.'
0000000000000972         db  0x5f ; '_'
0000000000000973         db  0x5f ; '_'
0000000000000974         db  0x63 ; 'c'
0000000000000975         db  0x74 ; 't'
0000000000000976         db  0x79 ; 'y'
0000000000000977         db  0x70 ; 'p'
0000000000000978         db  0x65 ; 'e'
0000000000000979         db  0x5f ; '_'
000000000000097a         db  0x67 ; 'g'
000000000000097b         db  0x65 ; 'e'
000000000000097c         db  0x74 ; 't'
000000000000097d         db  0x5f ; '_'
000000000000097e         db  0x6d ; 'm'
000000000000097f         db  0x62 ; 'b'
0000000000000980         db  0x5f ; '_'
0000000000000981         db  0x63 ; 'c'
0000000000000982         db  0x75 ; 'u'
0000000000000983         db  0x72 ; 'r'
0000000000000984         db  0x5f ; '_'
0000000000000985         db  0x6d ; 'm'
0000000000000986         db  0x61 ; 'a'
0000000000000987         db  0x78 ; 'x'
0000000000000988         db  0x00 ; '.'
0000000000000989         db  0x70 ; 'p'
000000000000098a         db  0x6f ; 'o'
000000000000098b         db  0x73 ; 's'
000000000000098c         db  0x69 ; 'i'
000000000000098d         db  0x78 ; 'x'
000000000000098e         db  0x5f ; '_'
000000000000098f         db  0x66 ; 'f'
0000000000000990         db  0x61 ; 'a'
0000000000000991         db  0x64 ; 'd'
0000000000000992         db  0x76 ; 'v'
0000000000000993         db  0x69 ; 'i'
0000000000000994         db  0x73 ; 's'
0000000000000995         db  0x65 ; 'e'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x63 ; 'c'
0000000000000998         db  0x61 ; 'a'
0000000000000999         db  0x6c ; 'l'
000000000000099a         db  0x6c ; 'l'
000000000000099b         db  0x6f ; 'o'
000000000000099c         db  0x63 ; 'c'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x73 ; 's'
000000000000099f         db  0x74 ; 't'
00000000000009a0         db  0x72 ; 'r'
00000000000009a1         db  0x6c ; 'l'
00000000000009a2         db  0x65 ; 'e'
00000000000009a3         db  0x6e ; 'n'
00000000000009a4         db  0x00 ; '.'
00000000000009a5         db  0x6d ; 'm'
00000000000009a6         db  0x65 ; 'e'
00000000000009a7         db  0x6d ; 'm'
00000000000009a8         db  0x73 ; 's'
00000000000009a9         db  0x65 ; 'e'
00000000000009aa         db  0x74 ; 't'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x5f ; '_'
00000000000009ad         db  0x5f ; '_'
00000000000009ae         db  0x65 ; 'e'
00000000000009af         db  0x72 ; 'r'
00000000000009b0         db  0x72 ; 'r'
00000000000009b1         db  0x6e ; 'n'
00000000000009b2         db  0x6f ; 'o'
00000000000009b3         db  0x5f ; '_'
00000000000009b4         db  0x6c ; 'l'
00000000000009b5         db  0x6f ; 'o'
00000000000009b6         db  0x63 ; 'c'
00000000000009b7         db  0x61 ; 'a'
00000000000009b8         db  0x74 ; 't'
00000000000009b9         db  0x69 ; 'i'
00000000000009ba         db  0x6f ; 'o'
00000000000009bb         db  0x6e ; 'n'
00000000000009bc         db  0x00 ; '.'
00000000000009bd         db  0x6d ; 'm'
00000000000009be         db  0x65 ; 'e'
00000000000009bf         db  0x6d ; 'm'
00000000000009c0         db  0x63 ; 'c'
00000000000009c1         db  0x6d ; 'm'
00000000000009c2         db  0x70 ; 'p'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x5f ; '_'
00000000000009c5         db  0x5f ; '_'
00000000000009c6         db  0x66 ; 'f'
00000000000009c7         db  0x70 ; 'p'
00000000000009c8         db  0x72 ; 'r'
00000000000009c9         db  0x69 ; 'i'
00000000000009ca         db  0x6e ; 'n'
00000000000009cb         db  0x74 ; 't'
00000000000009cc         db  0x66 ; 'f'
00000000000009cd         db  0x5f ; '_'
00000000000009ce         db  0x63 ; 'c'
00000000000009cf         db  0x68 ; 'h'
00000000000009d0         db  0x6b ; 'k'
00000000000009d1         db  0x00 ; '.'
00000000000009d2         db  0x73 ; 's'
00000000000009d3         db  0x74 ; 't'
00000000000009d4         db  0x64 ; 'd'
00000000000009d5         db  0x6f ; 'o'
00000000000009d6         db  0x75 ; 'u'
00000000000009d7         db  0x74 ; 't'
00000000000009d8         db  0x00 ; '.'
00000000000009d9         db  0x6c ; 'l'
00000000000009da         db  0x73 ; 's'
00000000000009db         db  0x65 ; 'e'
00000000000009dc         db  0x65 ; 'e'
00000000000009dd         db  0x6b ; 'k'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x6d ; 'm'
00000000000009e0         db  0x65 ; 'e'
00000000000009e1         db  0x6d ; 'm'
00000000000009e2         db  0x63 ; 'c'
00000000000009e3         db  0x70 ; 'p'
00000000000009e4         db  0x79 ; 'y'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x66 ; 'f'
00000000000009e7         db  0x63 ; 'c'
00000000000009e8         db  0x6c ; 'l'
00000000000009e9         db  0x6f ; 'o'
00000000000009ea         db  0x73 ; 's'
00000000000009eb         db  0x65 ; 'e'
00000000000009ec         db  0x00 ; '.'
00000000000009ed         db  0x6d ; 'm'
00000000000009ee         db  0x61 ; 'a'
00000000000009ef         db  0x6c ; 'l'
00000000000009f0         db  0x6c ; 'l'
00000000000009f1         db  0x6f ; 'o'
00000000000009f2         db  0x63 ; 'c'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x6d ; 'm'
00000000000009f5         db  0x62 ; 'b'
00000000000009f6         db  0x73 ; 's'
00000000000009f7         db  0x69 ; 'i'
00000000000009f8         db  0x6e ; 'n'
00000000000009f9         db  0x69 ; 'i'
00000000000009fa         db  0x74 ; 't'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x5f ; '_'
00000000000009fd         db  0x5f ; '_'
00000000000009fe         db  0x75 ; 'u'
00000000000009ff         db  0x66 ; 'f'
0000000000000a00         db  0x6c ; 'l'
0000000000000a01         db  0x6f ; 'o'
0000000000000a02         db  0x77 ; 'w'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x6e ; 'n'
0000000000000a05         db  0x6c ; 'l'
0000000000000a06         db  0x5f ; '_'
0000000000000a07         db  0x6c ; 'l'
0000000000000a08         db  0x61 ; 'a'
0000000000000a09         db  0x6e ; 'n'
0000000000000a0a         db  0x67 ; 'g'
0000000000000a0b         db  0x69 ; 'i'
0000000000000a0c         db  0x6e ; 'n'
0000000000000a0d         db  0x66 ; 'f'
0000000000000a0e         db  0x6f ; 'o'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x5f ; '_'
0000000000000a11         db  0x5f ; '_'
0000000000000a12         db  0x63 ; 'c'
0000000000000a13         db  0x74 ; 't'
0000000000000a14         db  0x79 ; 'y'
0000000000000a15         db  0x70 ; 'p'
0000000000000a16         db  0x65 ; 'e'
0000000000000a17         db  0x5f ; '_'
0000000000000a18         db  0x62 ; 'b'
0000000000000a19         db  0x5f ; '_'
0000000000000a1a         db  0x6c ; 'l'
0000000000000a1b         db  0x6f ; 'o'
0000000000000a1c         db  0x63 ; 'c'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x6f ; 'o'
0000000000000a1f         db  0x70 ; 'p'
0000000000000a20         db  0x74 ; 't'
0000000000000a21         db  0x61 ; 'a'
0000000000000a22         db  0x72 ; 'r'
0000000000000a23         db  0x67 ; 'g'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x5f ; '_'
0000000000000a26         db  0x5f ; '_'
0000000000000a27         db  0x66 ; 'f'
0000000000000a28         db  0x72 ; 'r'
0000000000000a29         db  0x65 ; 'e'
0000000000000a2a         db  0x61 ; 'a'
0000000000000a2b         db  0x64 ; 'd'
0000000000000a2c         db  0x69 ; 'i'
0000000000000a2d         db  0x6e ; 'n'
0000000000000a2e         db  0x67 ; 'g'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x73 ; 's'
0000000000000a31         db  0x74 ; 't'
0000000000000a32         db  0x64 ; 'd'
0000000000000a33         db  0x65 ; 'e'
0000000000000a34         db  0x72 ; 'r'
0000000000000a35         db  0x72 ; 'r'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x67 ; 'g'
0000000000000a38         db  0x65 ; 'e'
0000000000000a39         db  0x74 ; 't'
0000000000000a3a         db  0x6f ; 'o'
0000000000000a3b         db  0x70 ; 'p'
0000000000000a3c         db  0x74 ; 't'
0000000000000a3d         db  0x5f ; '_'
0000000000000a3e         db  0x6c ; 'l'
0000000000000a3f         db  0x6f ; 'o'
0000000000000a40         db  0x6e ; 'n'
0000000000000a41         db  0x67 ; 'g'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x66 ; 'f'
0000000000000a44         db  0x69 ; 'i'
0000000000000a45         db  0x6c ; 'l'
0000000000000a46         db  0x65 ; 'e'
0000000000000a47         db  0x6e ; 'n'
0000000000000a48         db  0x6f ; 'o'
0000000000000a49         db  0x00 ; '.'
0000000000000a4a         db  0x66 ; 'f'
0000000000000a4b         db  0x77 ; 'w'
0000000000000a4c         db  0x72 ; 'r'
0000000000000a4d         db  0x69 ; 'i'
0000000000000a4e         db  0x74 ; 't'
0000000000000a4f         db  0x65 ; 'e'
0000000000000a50         db  0x00 ; '.'
0000000000000a51         db  0x5f ; '_'
0000000000000a52         db  0x5f ; '_'
0000000000000a53         db  0x66 ; 'f'
0000000000000a54         db  0x70 ; 'p'
0000000000000a55         db  0x65 ; 'e'
0000000000000a56         db  0x6e ; 'n'
0000000000000a57         db  0x64 ; 'd'
0000000000000a58         db  0x69 ; 'i'
0000000000000a59         db  0x6e ; 'n'
0000000000000a5a         db  0x67 ; 'g'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x70 ; 'p'
0000000000000a5d         db  0x72 ; 'r'
0000000000000a5e         db  0x6f ; 'o'
0000000000000a5f         db  0x67 ; 'g'
0000000000000a60         db  0x72 ; 'r'
0000000000000a61         db  0x61 ; 'a'
0000000000000a62         db  0x6d ; 'm'
0000000000000a63         db  0x5f ; '_'
0000000000000a64         db  0x69 ; 'i'
0000000000000a65         db  0x6e ; 'n'
0000000000000a66         db  0x76 ; 'v'
0000000000000a67         db  0x6f ; 'o'
0000000000000a68         db  0x63 ; 'c'
0000000000000a69         db  0x61 ; 'a'
0000000000000a6a         db  0x74 ; 't'
0000000000000a6b         db  0x69 ; 'i'
0000000000000a6c         db  0x6f ; 'o'
0000000000000a6d         db  0x6e ; 'n'
0000000000000a6e         db  0x5f ; '_'
0000000000000a6f         db  0x73 ; 's'
0000000000000a70         db  0x68 ; 'h'
0000000000000a71         db  0x6f ; 'o'
0000000000000a72         db  0x72 ; 'r'
0000000000000a73         db  0x74 ; 't'
0000000000000a74         db  0x5f ; '_'
0000000000000a75         db  0x6e ; 'n'
0000000000000a76         db  0x61 ; 'a'
0000000000000a77         db  0x6d ; 'm'
0000000000000a78         db  0x65 ; 'e'
0000000000000a79         db  0x00 ; '.'
0000000000000a7a         db  0x66 ; 'f'
0000000000000a7b         db  0x64 ; 'd'
0000000000000a7c         db  0x6f ; 'o'
0000000000000a7d         db  0x70 ; 'p'
0000000000000a7e         db  0x65 ; 'e'
0000000000000a7f         db  0x6e ; 'n'
0000000000000a80         db  0x00 ; '.'
0000000000000a81         db  0x5f ; '_'
0000000000000a82         db  0x5f ; '_'
0000000000000a83         db  0x63 ; 'c'
0000000000000a84         db  0x78 ; 'x'
0000000000000a85         db  0x61 ; 'a'
0000000000000a86         db  0x5f ; '_'
0000000000000a87         db  0x66 ; 'f'
0000000000000a88         db  0x69 ; 'i'
0000000000000a89         db  0x6e ; 'n'
0000000000000a8a         db  0x61 ; 'a'
0000000000000a8b         db  0x6c ; 'l'
0000000000000a8c         db  0x69 ; 'i'
0000000000000a8d         db  0x7a ; 'z'
0000000000000a8e         db  0x65 ; 'e'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0x66 ; 'f'
0000000000000a91         db  0x63 ; 'c'
0000000000000a92         db  0x6e ; 'n'
0000000000000a93         db  0x74 ; 't'
0000000000000a94         db  0x6c ; 'l'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x62 ; 'b'
0000000000000a97         db  0x69 ; 'i'
0000000000000a98         db  0x6e ; 'n'
0000000000000a99         db  0x64 ; 'd'
0000000000000a9a         db  0x74 ; 't'
0000000000000a9b         db  0x65 ; 'e'
0000000000000a9c         db  0x78 ; 'x'
0000000000000a9d         db  0x74 ; 't'
0000000000000a9e         db  0x64 ; 'd'
0000000000000a9f         db  0x6f ; 'o'
0000000000000aa0         db  0x6d ; 'm'
0000000000000aa1         db  0x61 ; 'a'
0000000000000aa2         db  0x69 ; 'i'
0000000000000aa3         db  0x6e ; 'n'
0000000000000aa4         db  0x00 ; '.'
0000000000000aa5         db  0x66 ; 'f'
0000000000000aa6         db  0x77 ; 'w'
0000000000000aa7         db  0x72 ; 'r'
0000000000000aa8         db  0x69 ; 'i'
0000000000000aa9         db  0x74 ; 't'
0000000000000aaa         db  0x65 ; 'e'
0000000000000aab         db  0x5f ; '_'
0000000000000aac         db  0x75 ; 'u'
0000000000000aad         db  0x6e ; 'n'
0000000000000aae         db  0x6c ; 'l'
0000000000000aaf         db  0x6f ; 'o'
0000000000000ab0         db  0x63 ; 'c'
0000000000000ab1         db  0x6b ; 'k'
0000000000000ab2         db  0x65 ; 'e'
0000000000000ab3         db  0x64 ; 'd'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x73 ; 's'
0000000000000ab6         db  0x74 ; 't'
0000000000000ab7         db  0x72 ; 'r'
0000000000000ab8         db  0x63 ; 'c'
0000000000000ab9         db  0x6d ; 'm'
0000000000000aba         db  0x70 ; 'p'
0000000000000abb         db  0x00 ; '.'
0000000000000abc         db  0x5f ; '_'
0000000000000abd         db  0x5f ; '_'
0000000000000abe         db  0x6c ; 'l'
0000000000000abf         db  0x69 ; 'i'
0000000000000ac0         db  0x62 ; 'b'
0000000000000ac1         db  0x63 ; 'c'
0000000000000ac2         db  0x5f ; '_'
0000000000000ac3         db  0x73 ; 's'
0000000000000ac4         db  0x74 ; 't'
0000000000000ac5         db  0x61 ; 'a'
0000000000000ac6         db  0x72 ; 'r'
0000000000000ac7         db  0x74 ; 't'
0000000000000ac8         db  0x5f ; '_'
0000000000000ac9         db  0x6d ; 'm'
0000000000000aca         db  0x61 ; 'a'
0000000000000acb         db  0x69 ; 'i'
0000000000000acc         db  0x6e ; 'n'
0000000000000acd         db  0x00 ; '.'
0000000000000ace         db  0x66 ; 'f'
0000000000000acf         db  0x73 ; 's'
0000000000000ad0         db  0x65 ; 'e'
0000000000000ad1         db  0x65 ; 'e'
0000000000000ad2         db  0x6b ; 'k'
0000000000000ad3         db  0x6f ; 'o'
0000000000000ad4         db  0x00 ; '.'
0000000000000ad5         db  0x73 ; 's'
0000000000000ad6         db  0x74 ; 't'
0000000000000ad7         db  0x72 ; 'r'
0000000000000ad8         db  0x63 ; 'c'
0000000000000ad9         db  0x6f ; 'o'
0000000000000ada         db  0x6c ; 'l'
0000000000000adb         db  0x6c ; 'l'
0000000000000adc         db  0x00 ; '.'
0000000000000add         db  0x66 ; 'f'
0000000000000ade         db  0x70 ; 'p'
0000000000000adf         db  0x75 ; 'u'
0000000000000ae0         db  0x74 ; 't'
0000000000000ae1         db  0x73 ; 's'
0000000000000ae2         db  0x5f ; '_'
0000000000000ae3         db  0x75 ; 'u'
0000000000000ae4         db  0x6e ; 'n'
0000000000000ae5         db  0x6c ; 'l'
0000000000000ae6         db  0x6f ; 'o'
0000000000000ae7         db  0x63 ; 'c'
0000000000000ae8         db  0x6b ; 'k'
0000000000000ae9         db  0x65 ; 'e'
0000000000000aea         db  0x64 ; 'd'
0000000000000aeb         db  0x00 ; '.'
0000000000000aec         db  0x66 ; 'f'
0000000000000aed         db  0x72 ; 'r'
0000000000000aee         db  0x65 ; 'e'
0000000000000aef         db  0x65 ; 'e'
0000000000000af0         db  0x00 ; '.'
0000000000000af1         db  0x5f ; '_'
0000000000000af2         db  0x5f ; '_'
0000000000000af3         db  0x70 ; 'p'
0000000000000af4         db  0x72 ; 'r'
0000000000000af5         db  0x6f ; 'o'
0000000000000af6         db  0x67 ; 'g'
0000000000000af7         db  0x6e ; 'n'
0000000000000af8         db  0x61 ; 'a'
0000000000000af9         db  0x6d ; 'm'
0000000000000afa         db  0x65 ; 'e'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x5f ; '_'
0000000000000afd         db  0x5f ; '_'
0000000000000afe         db  0x70 ; 'p'
0000000000000aff         db  0x72 ; 'r'
                     aOgnamefull:
0000000000000b00         db         "ogname_full", 0
0000000000000b0c         db  0x5f ; '_'
0000000000000b0d         db  0x5f ; '_'
0000000000000b0e         db  0x63 ; 'c'
0000000000000b0f         db  0x78 ; 'x'
0000000000000b10         db  0x61 ; 'a'
0000000000000b11         db  0x5f ; '_'
0000000000000b12         db  0x61 ; 'a'
0000000000000b13         db  0x74 ; 't'
0000000000000b14         db  0x65 ; 'e'
0000000000000b15         db  0x78 ; 'x'
0000000000000b16         db  0x69 ; 'i'
0000000000000b17         db  0x74 ; 't'
0000000000000b18         db  0x00 ; '.'
0000000000000b19         db  0x47 ; 'G'
0000000000000b1a         db  0x4c ; 'L'
0000000000000b1b         db  0x49 ; 'I'
0000000000000b1c         db  0x42 ; 'B'
0000000000000b1d         db  0x43 ; 'C'
0000000000000b1e         db  0x5f ; '_'
0000000000000b1f         db  0x32 ; '2'
0000000000000b20         db  0x2e ; '.'
0000000000000b21         db  0x33 ; '3'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x47 ; 'G'
0000000000000b24         db  0x4c ; 'L'
0000000000000b25         db  0x49 ; 'I'
0000000000000b26         db  0x42 ; 'B'
0000000000000b27         db  0x43 ; 'C'
0000000000000b28         db  0x5f ; '_'
0000000000000b29         db  0x32 ; '2'
0000000000000b2a         db  0x2e ; '.'
0000000000000b2b         db  0x33 ; '3'
0000000000000b2c         db  0x2e ; '.'
0000000000000b2d         db  0x34 ; '4'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x47 ; 'G'
0000000000000b30         db  0x4c ; 'L'
0000000000000b31         db  0x49 ; 'I'
0000000000000b32         db  0x42 ; 'B'
0000000000000b33         db  0x43 ; 'C'
0000000000000b34         db  0x5f ; '_'
0000000000000b35         db  0x32 ; '2'
0000000000000b36         db  0x2e ; '.'
0000000000000b37         db  0x31 ; '1'
0000000000000b38         db  0x34 ; '4'
0000000000000b39         db  0x00 ; '.'
0000000000000b3a         db  0x47 ; 'G'
0000000000000b3b         db  0x4c ; 'L'
0000000000000b3c         db  0x49 ; 'I'
0000000000000b3d         db  0x42 ; 'B'
0000000000000b3e         db  0x43 ; 'C'
0000000000000b3f         db  0x5f ; '_'
0000000000000b40         db  0x32 ; '2'
0000000000000b41         db  0x2e ; '.'
0000000000000b42         db  0x34 ; '4'
0000000000000b43         db  0x00 ; '.'
0000000000000b44         db  0x47 ; 'G'
                     aLibc225:
0000000000000b45         db         "LIBC_2.2.5", 0
0000000000000b50         db  0x5f ; '_'
0000000000000b51         db  0x49 ; 'I'
0000000000000b52         db  0x54 ; 'T'
0000000000000b53         db  0x4d ; 'M'
0000000000000b54         db  0x5f ; '_'
0000000000000b55         db  0x64 ; 'd'
0000000000000b56         db  0x65 ; 'e'
0000000000000b57         db  0x72 ; 'r'
0000000000000b58         db  0x65 ; 'e'
0000000000000b59         db  0x67 ; 'g'
0000000000000b5a         db  0x69 ; 'i'
0000000000000b5b         db  0x73 ; 's'
0000000000000b5c         db  0x74 ; 't'
0000000000000b5d         db  0x65 ; 'e'
0000000000000b5e         db  0x72 ; 'r'
0000000000000b5f         db  0x54 ; 'T'
0000000000000b60         db  0x4d ; 'M'
0000000000000b61         db  0x43 ; 'C'
0000000000000b62         db  0x6c ; 'l'
0000000000000b63         db  0x6f ; 'o'
0000000000000b64         db  0x6e ; 'n'
0000000000000b65         db  0x65 ; 'e'
0000000000000b66         db  0x54 ; 'T'
0000000000000b67         db  0x61 ; 'a'
0000000000000b68         db  0x62 ; 'b'
0000000000000b69         db  0x6c ; 'l'
0000000000000b6a         db  0x65 ; 'e'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x5f ; '_'
0000000000000b6d         db  0x5f ; '_'
0000000000000b6e         db  0x67 ; 'g'
0000000000000b6f         db  0x6d ; 'm'
0000000000000b70         db  0x6f ; 'o'
0000000000000b71         db  0x6e ; 'n'
0000000000000b72         db  0x5f ; '_'
0000000000000b73         db  0x73 ; 's'
0000000000000b74         db  0x74 ; 't'
0000000000000b75         db  0x61 ; 'a'
0000000000000b76         db  0x72 ; 'r'
0000000000000b77         db  0x74 ; 't'
0000000000000b78         db  0x5f ; '_'
0000000000000b79         db  0x5f ; '_'
0000000000000b7a         db  0x00 ; '.'
0000000000000b7b         db  0x5f ; '_'
0000000000000b7c         db  0x49 ; 'I'
0000000000000b7d         db  0x54 ; 'T'
0000000000000b7e         db  0x4d ; 'M'
0000000000000b7f         db  0x5f ; '_'
0000000000000b80         db  0x72 ; 'r'
0000000000000b81         db  0x65 ; 'e'
0000000000000b82         db  0x67 ; 'g'
0000000000000b83         db  0x69 ; 'i'
0000000000000b84         db  0x73 ; 's'
0000000000000b85         db  0x74 ; 't'
0000000000000b86         db  0x65 ; 'e'
0000000000000b87         db  0x72 ; 'r'
0000000000000b88         db  0x54 ; 'T'
0000000000000b89         db  0x4d ; 'M'
0000000000000b8a         db  0x43 ; 'C'
0000000000000b8b         db  0x6c ; 'l'
0000000000000b8c         db  0x6f ; 'o'
0000000000000b8d         db  0x6e ; 'n'
0000000000000b8e         db  0x65 ; 'e'
0000000000000b8f         db  0x54 ; 'T'
0000000000000b90         db  0x61 ; 'a'
0000000000000b91         db  0x62 ; 'b'
0000000000000b92         db  0x6c ; 'l'
0000000000000b93         db  0x65 ; 'e'
0000000000000b94         db  0x00 ; '.'
0000000000000b95         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xb96; 0xc14[ (126 bytes)
        ; File offset : [2966; 3092[ (126 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x02 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x02 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x02 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x02 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x02 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x00 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x02 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x02 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x02 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x02 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x02 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x02 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x03 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x02 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x02 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x02 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x02 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x02 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x02 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x00 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x04 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x02 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x02 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x02 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x02 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x02 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x02 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x02 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x02 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x02 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x02 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x05 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x02 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x02 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x02 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x02 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x02 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x02 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x05 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x00 ; '.'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x02 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x02 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x02 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x06 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x02 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x02 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x02 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x02 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x02 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x02 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x02 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x02 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x02 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x00 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc18; 0xc78[ (96 bytes)
        ; File offset : [3096; 3192[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c18         db  0x01 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x05 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x01 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x00 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x10 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x13 ; '.'
0000000000000c29         db  0x69 ; 'i'
0000000000000c2a         db  0x69 ; 'i'
0000000000000c2b         db  0x0d ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x06 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x51 ; 'Q'
0000000000000c31         db  0x02 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x10 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x74 ; 't'
0000000000000c39         db  0x19 ; '.'
0000000000000c3a         db  0x69 ; 'i'
0000000000000c3b         db  0x09 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x05 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x5b ; '['
0000000000000c41         db  0x02 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x10 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x94 ; '.'
0000000000000c49         db  0x91 ; '.'
0000000000000c4a         db  0x96 ; '.'
0000000000000c4b         db  0x06 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x04 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x67 ; 'g'
0000000000000c51         db  0x02 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x10 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x14 ; '.'
0000000000000c59         db  0x69 ; 'i'
0000000000000c5a         db  0x69 ; 'i'
0000000000000c5b         db  0x0d ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x03 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x72 ; 'r'
0000000000000c61         db  0x02 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x10 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x75 ; 'u'
0000000000000c69         db  0x1a ; '.'
0000000000000c6a         db  0x69 ; 'i'
0000000000000c6b         db  0x09 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x02 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x7c ; '|'
0000000000000c71         db  0x02 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc78; 0xfd8[ (864 bytes)
        ; File offset : [3192; 4056[ (864 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c78         db  0xd0 ; '.'
0000000000000c79         db  0x8a ; '.'
0000000000000c7a         db  0x20 ; ' '
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x08 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x10 ; '.'
0000000000000c89         db  0x1c ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0xd8 ; '.'
0000000000000c91         db  0x8a ; '.'
0000000000000c92         db  0x20 ; ' '
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x08 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0xd0 ; '.'
0000000000000ca1         db  0x1b ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0xe0 ; '.'
0000000000000ca9         db  0x8a ; '.'
0000000000000caa         db  0x20 ; ' '
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x08 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0xbe ; '.'
0000000000000cb9         db  0x61 ; 'a'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x00 ; '.'
0000000000000cc1         db  0x8b ; '.'
0000000000000cc2         db  0x20 ; ' '
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x08 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0xbc ; '.'
0000000000000cd1         db  0x61 ; 'a'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x20 ; ' '
0000000000000cd9         db  0x8b ; '.'
0000000000000cda         db  0x20 ; ' '
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x08 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0xca ; '.'
0000000000000ce9         db  0x61 ; 'a'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x40 ; '@'
0000000000000cf1         db  0x8b ; '.'
0000000000000cf2         db  0x20 ; ' '
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x08 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x65 ; 'e'
0000000000000d01         db  0x60 ; '`'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x60 ; '`'
0000000000000d09         db  0x8b ; '.'
0000000000000d0a         db  0x20 ; ' '
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x08 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0xdb ; '.'
0000000000000d19         db  0x61 ; 'a'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x80 ; '.'
0000000000000d21         db  0x8b ; '.'
0000000000000d22         db  0x20 ; ' '
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x08 ; '.'
0000000000000d29         db  0x00 ; '.'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0xeb ; '.'
0000000000000d31         db  0x61 ; 'a'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0xa0 ; '.'
0000000000000d39         db  0x8b ; '.'
0000000000000d3a         db  0x20 ; ' '
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x08 ; '.'
0000000000000d41         db  0x00 ; '.'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0xf0 ; '.'
0000000000000d49         db  0x61 ; 'a'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xe0 ; '.'
0000000000000d51         db  0x8b ; '.'
0000000000000d52         db  0x20 ; ' '
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x08 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x79 ; 'y'
0000000000000d61         db  0x62 ; 'b'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0xe8 ; '.'
0000000000000d69         db  0x8b ; '.'
0000000000000d6a         db  0x20 ; ' '
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x08 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x81 ; '.'
0000000000000d79         db  0x62 ; 'b'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0xf0 ; '.'
0000000000000d81         db  0x8b ; '.'
0000000000000d82         db  0x20 ; ' '
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x08 ; '.'
0000000000000d89         db  0x00 ; '.'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x87 ; '.'
0000000000000d91         db  0x62 ; 'b'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xf8 ; '.'
0000000000000d99         db  0x8b ; '.'
0000000000000d9a         db  0x20 ; ' '
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x08 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x94 ; '.'
0000000000000da9         db  0x62 ; 'b'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x00 ; '.'
0000000000000db1         db  0x8c ; '.'
0000000000000db2         db  0x20 ; ' '
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x08 ; '.'
0000000000000db9         db  0x00 ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0xa1 ; '.'
0000000000000dc1         db  0x62 ; 'b'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x8c ; '.'
0000000000000dca         db  0x20 ; ' '
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x08 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x7a ; 'z'
0000000000000dd9         db  0x60 ; '`'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x10 ; '.'
0000000000000de1         db  0x8c ; '.'
0000000000000de2         db  0x20 ; ' '
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x08 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0xb5 ; '.'
0000000000000df1         db  0x62 ; 'b'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x18 ; '.'
0000000000000df9         db  0x8c ; '.'
0000000000000dfa         db  0x20 ; ' '
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x08 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x9a ; '.'
0000000000000e09         db  0x62 ; 'b'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x20 ; ' '
0000000000000e11         db  0x8c ; '.'
0000000000000e12         db  0x20 ; ' '
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x08 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x35 ; '5'
0000000000000e21         db  0x61 ; 'a'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x28 ; '('
0000000000000e29         db  0x8c ; '.'
0000000000000e2a         db  0x20 ; ' '
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x08 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0xbd ; '.'
0000000000000e39         db  0x62 ; 'b'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0x90 ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x08 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x90 ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x18 ; '.'
0000000000000e59         db  0x90 ; '.'
0000000000000e5a         db  0x20 ; ' '
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x08 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0xf8 ; '.'
0000000000000e69         db  0x61 ; 'a'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x20 ; ' '
0000000000000e71         db  0x90 ; '.'
0000000000000e72         db  0x20 ; ' '
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x08 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xfa ; '.'
0000000000000e81         db  0x61 ; 'a'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x80 ; '.'
0000000000000e89         db  0x90 ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x08 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x90 ; '.'
0000000000000e99         db  0x90 ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x98 ; '.'
0000000000000ea1         db  0x90 ; '.'
0000000000000ea2         db  0x20 ; ' '
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x08 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x20 ; ' '
0000000000000eb1         db  0x91 ; '.'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xc0 ; '.'
0000000000000eb9         db  0x8f ; '.'
0000000000000eba         db  0x20 ; ' '
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x06 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x06 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x00 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0xc8 ; '.'
0000000000000ed1         db  0x8f ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x06 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x18 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x00 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0xd0 ; '.'
0000000000000ee9         db  0x8f ; '.'
0000000000000eea         db  0x20 ; ' '
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x06 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x1d ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x00 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0xd8 ; '.'
0000000000000f01         db  0x8f ; '.'
0000000000000f02         db  0x20 ; ' '
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x06 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x31 ; '1'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x00 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0xe0 ; '.'
0000000000000f19         db  0x8f ; '.'
0000000000000f1a         db  0x20 ; ' '
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x06 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x34 ; '4'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x00 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0xa0 ; '.'
0000000000000f31         db  0x90 ; '.'
0000000000000f32         db  0x20 ; ' '
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x05 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x37 ; '7'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x00 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0xa8 ; '.'
0000000000000f49         db  0x90 ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x05 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x36 ; '6'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x00 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0xb0 ; '.'
0000000000000f61         db  0x90 ; '.'
0000000000000f62         db  0x20 ; ' '
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x05 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x38 ; '8'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x00 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0xb8 ; '.'
0000000000000f79         db  0x90 ; '.'
0000000000000f7a         db  0x20 ; ' '
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x05 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x3d ; '='
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x00 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0xc0 ; '.'
0000000000000f91         db  0x90 ; '.'
0000000000000f92         db  0x20 ; ' '
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x05 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x3e ; '>'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x00 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0xc8 ; '.'
0000000000000fa9         db  0x90 ; '.'
0000000000000faa         db  0x20 ; ' '
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x05 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x3a ; ':'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x00 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0xe0 ; '.'
0000000000000fc1         db  0x90 ; '.'
0000000000000fc2         db  0x20 ; ' '
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x05 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x3c ; '<'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x00 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xfd8; 0x1458[ (1152 bytes)
        ; File offset : [4056; 5208[ (1152 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000fd8         db  0x40 ; '@'
0000000000000fd9         db  0x8e ; '.'
0000000000000fda         db  0x20 ; ' '
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x07 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x01 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x00 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x48 ; 'H'
0000000000000ff1         db  0x8e ; '.'
0000000000000ff2         db  0x20 ; ' '
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x07 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x02 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x00 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x50 ; 'P'
0000000000001009         db  0x8e ; '.'
000000000000100a         db  0x20 ; ' '
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x07 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x03 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x00 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x58 ; 'X'
0000000000001021         db  0x8e ; '.'
0000000000001022         db  0x20 ; ' '
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x07 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x04 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x00 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x60 ; '`'
0000000000001039         db  0x8e ; '.'
000000000000103a         db  0x20 ; ' '
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x07 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x05 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x00 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x68 ; 'h'
0000000000001051         db  0x8e ; '.'
0000000000001052         db  0x20 ; ' '
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x07 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x07 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x00 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x70 ; 'p'
0000000000001069         db  0x8e ; '.'
000000000000106a         db  0x20 ; ' '
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x07 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x08 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x00 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x78 ; 'x'
0000000000001081         db  0x8e ; '.'
0000000000001082         db  0x20 ; ' '
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x07 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x09 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x00 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x80 ; '.'
0000000000001099         db  0x8e ; '.'
000000000000109a         db  0x20 ; ' '
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x07 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x0a ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x00 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x88 ; '.'
00000000000010b1         db  0x8e ; '.'
00000000000010b2         db  0x20 ; ' '
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x07 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x0b ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x00 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x90 ; '.'
00000000000010c9         db  0x8e ; '.'
00000000000010ca         db  0x20 ; ' '
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x07 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x0c ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x00 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x98 ; '.'
00000000000010e1         db  0x8e ; '.'
00000000000010e2         db  0x20 ; ' '
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x07 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x0d ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x00 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0xa0 ; '.'
00000000000010f9         db  0x8e ; '.'
00000000000010fa         db  0x20 ; ' '
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x07 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x0e ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x00 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0xa8 ; '.'
0000000000001111         db  0x8e ; '.'
0000000000001112         db  0x20 ; ' '
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x07 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x0f ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x00 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0xb0 ; '.'
0000000000001129         db  0x8e ; '.'
000000000000112a         db  0x20 ; ' '
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x07 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x10 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x00 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0xb8 ; '.'
0000000000001141         db  0x8e ; '.'
0000000000001142         db  0x20 ; ' '
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x07 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x11 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x00 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0xc0 ; '.'
0000000000001159         db  0x8e ; '.'
000000000000115a         db  0x20 ; ' '
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x07 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x12 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x00 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0xc8 ; '.'
0000000000001171         db  0x8e ; '.'
0000000000001172         db  0x20 ; ' '
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x07 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x13 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x00 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0xd0 ; '.'
0000000000001189         db  0x8e ; '.'
000000000000118a         db  0x20 ; ' '
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x07 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x14 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x00 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0xd8 ; '.'
00000000000011a1         db  0x8e ; '.'
00000000000011a2         db  0x20 ; ' '
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x07 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x15 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x00 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0xe0 ; '.'
00000000000011b9         db  0x8e ; '.'
00000000000011ba         db  0x20 ; ' '
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x07 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x16 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x00 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0xe8 ; '.'
00000000000011d1         db  0x8e ; '.'
00000000000011d2         db  0x20 ; ' '
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x07 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x17 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x00 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0xf0 ; '.'
00000000000011e9         db  0x8e ; '.'
00000000000011ea         db  0x20 ; ' '
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x07 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x19 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x00 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0xf8 ; '.'
0000000000001201         db  0x8e ; '.'
0000000000001202         db  0x20 ; ' '
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x07 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x1a ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x00 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x8f ; '.'
000000000000121a         db  0x20 ; ' '
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x07 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x1b ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x00 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x08 ; '.'
0000000000001231         db  0x8f ; '.'
0000000000001232         db  0x20 ; ' '
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x07 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x1c ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x00 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x10 ; '.'
0000000000001249         db  0x8f ; '.'
000000000000124a         db  0x20 ; ' '
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x07 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x1e ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x00 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x18 ; '.'
0000000000001261         db  0x8f ; '.'
0000000000001262         db  0x20 ; ' '
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x07 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x1f ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x00 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x20 ; ' '
0000000000001279         db  0x8f ; '.'
000000000000127a         db  0x20 ; ' '
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x07 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x20 ; ' '
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x00 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x28 ; '('
0000000000001291         db  0x8f ; '.'
0000000000001292         db  0x20 ; ' '
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x07 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x21 ; '!'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x00 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x30 ; '0'
00000000000012a9         db  0x8f ; '.'
00000000000012aa         db  0x20 ; ' '
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x07 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x22 ; '"'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x00 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x38 ; '8'
00000000000012c1         db  0x8f ; '.'
00000000000012c2         db  0x20 ; ' '
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x07 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x23 ; '#'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x00 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x40 ; '@'
00000000000012d9         db  0x8f ; '.'
00000000000012da         db  0x20 ; ' '
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x07 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x24 ; '$'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x00 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x48 ; 'H'
00000000000012f1         db  0x8f ; '.'
00000000000012f2         db  0x20 ; ' '
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x07 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x25 ; '%'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x00 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x50 ; 'P'
0000000000001309         db  0x8f ; '.'
000000000000130a         db  0x20 ; ' '
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x07 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x26 ; '&'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x00 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x58 ; 'X'
0000000000001321         db  0x8f ; '.'
0000000000001322         db  0x20 ; ' '
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x07 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x27 ; '''
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x00 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x60 ; '`'
0000000000001339         db  0x8f ; '.'
000000000000133a         db  0x20 ; ' '
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x07 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x28 ; '('
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x00 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x68 ; 'h'
0000000000001351         db  0x8f ; '.'
0000000000001352         db  0x20 ; ' '
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x07 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x29 ; ')'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x00 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x70 ; 'p'
0000000000001369         db  0x8f ; '.'
000000000000136a         db  0x20 ; ' '
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x07 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x2a ; '*'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x00 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x78 ; 'x'
0000000000001381         db  0x8f ; '.'
0000000000001382         db  0x20 ; ' '
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x07 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x2b ; '+'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x00 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x80 ; '.'
0000000000001399         db  0x8f ; '.'
000000000000139a         db  0x20 ; ' '
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x07 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x2c ; ','
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x00 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x88 ; '.'
00000000000013b1         db  0x8f ; '.'
00000000000013b2         db  0x20 ; ' '
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x07 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x2d ; '-'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x00 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x90 ; '.'
00000000000013c9         db  0x8f ; '.'
00000000000013ca         db  0x20 ; ' '
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x07 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x2e ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x00 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x98 ; '.'
00000000000013e1         db  0x8f ; '.'
00000000000013e2         db  0x20 ; ' '
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x07 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x2f ; '/'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x00 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0xa0 ; '.'
00000000000013f9         db  0x8f ; '.'
00000000000013fa         db  0x20 ; ' '
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x07 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x30 ; '0'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x00 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0xa8 ; '.'
0000000000001411         db  0x8f ; '.'
0000000000001412         db  0x20 ; ' '
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x07 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x32 ; '2'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x00 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0xb0 ; '.'
0000000000001429         db  0x8f ; '.'
000000000000142a         db  0x20 ; ' '
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x07 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x33 ; '3'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x00 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0xb8 ; '.'
0000000000001441         db  0x8f ; '.'
0000000000001442         db  0x20 ; ' '
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x07 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x35 ; '5'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x00 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1458; 0x146f[ (23 bytes)
        ; File offset : [5208; 5231[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001458         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000145c         mov        rax, qword [qword_208fd0]                   ; qword_208fd0
0000000000001463         test       rax, rax
0000000000001466         je         loc_146a

0000000000001468         call       rax

                     loc_146a:
000000000000146a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000146e         ret
                        ; endp
000000000000146f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1470; 0x1780[ (784 bytes)
        ; File offset : [5232; 6016[ (784 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1470:
0000000000001470         push       qword [qword_208e30]                        ; Begin of unwind block (FDE at 0x6e6c), qword_208e30, CODE XREF=sub_1486+5
0000000000001476         jmp        qword [qword_208e30+8]                      ; 0x208e38
                        ; endp
000000000000147c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
0000000000001480         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=readlinebuffer_delim+187
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0x0
000000000000148b         jmp        loc_1470


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001490         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=freebuffer+4, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0x1
000000000000149b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000014a0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3e00+383, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0x2
00000000000014ab         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000014b0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=compare_files+1303, compare_files+1369, compare_files+1421, compare_files+1468, close_stdout+22, fopen_safer+93, fopen_safer+120, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0x3
00000000000014bb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000014c0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+860, usage+1053
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0x4
00000000000014cb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000014d0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x5
00000000000014db         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000014e0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x6
00000000000014eb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
00000000000014f0         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x7
00000000000014fb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001500         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x8
000000000000150b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001510         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x9
000000000000151b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001520         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+62
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0xa
000000000000152b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001530         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+709, main+766, main+801, main+867, check_order.isra.1.part.2+86, compare_files+1078, usage+56, usage+102, usage+146, usage+183, usage+220
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0xb
000000000000153b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001540         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0xc
000000000000154b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001550         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_3490+411, sub_3490+1742, xstrdup+4, strcoll_loop+43, strcoll_loop+55
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0xd
000000000000155b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001560         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=compare_files+1398, sub_3e00+323, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, rpl_fcntl+589, rpl_mbrtowc+126
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0xe
000000000000156b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001570         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+198
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0xf
000000000000157b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001580         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x10
000000000000158b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001590         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x11
000000000000159b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000015a0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x12
00000000000015ab         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000015b0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x13
00000000000015bb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
00000000000015c0         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=fopen_safer+106, rpl_fcntl+510
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x14
00000000000015cb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
00000000000015d0         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x15
00000000000015db         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000015e0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=compare_files+441, memcmp2+25, quotearg_buffer_restyled+410, memcoll+37, memcoll0+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x16
00000000000015eb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000015f0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+416, usage+453, usage+490, usage+527
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x17
00000000000015fb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001600         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x18
000000000000160b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001610         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+395
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x19
000000000000161b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001620         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x1a
000000000000162b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001630         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, fopen_safer+23, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x1b
000000000000163b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001640         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x1c
000000000000164b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001650         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x1d
000000000000165b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001660         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x1e
000000000000166b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcoll:        // strcoll
0000000000001670         jmp        qword [strcoll@GOT]                         ; strcoll, strcoll@GOT, CODE XREF=strcoll_loop+96
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x1f
000000000000167b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001680         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x20
000000000000168b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000001690         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=writeline.isra.0+63, writeline.isra.0+97, writeline.isra.0+168
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x21
000000000000169b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000016a0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x22
00000000000016ab         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopen:        // fdopen
00000000000016b0         jmp        qword [fdopen@GOT]                          ; fdopen, fdopen@GOT, CODE XREF=fopen_safer+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x23
00000000000016bb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000016c0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+43, usage+835, usage+1028, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x24
00000000000016cb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000016d0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=compare_files+1203, usage+120, usage+581, usage+823, usage+916, usage+977, usage+1016, usage+1119, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x25
00000000000016db         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000016e0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+726, main+780, main+818, main+884, check_order.isra.1.part.2+113, compare_files+1327, compare_files+1393, compare_files+1445, compare_files+1492, close_stdout+125, close_stdout+157
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x26
00000000000016eb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000016f0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x27
00000000000016fb         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001700         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=fopen_safer+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x28
000000000000170b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001710         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x29
000000000000171b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001720         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+580, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x2a
000000000000172b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001730         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x2b
000000000000173b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001740         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x2c
000000000000174b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001750         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3490+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x2d
000000000000175b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001760         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3490+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x2e
000000000000176b         jmp        0x1470
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001770         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3230+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x2f
000000000000177b         jmp        0x1470
                        ; endp


        ; Section .plt.got
        ; Range: [0x1780; 0x1788[ (8 bytes)
        ; File offset : [6016; 6024[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_208fe0:        // qword_208fe0
0000000000001780         jmp        qword [qword_208fe0]                        ; qword, End of unwind block (FDE at 0x6e6c), Begin of unwind block (FDE at 0x6e94), qword_208fe0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001786         align      8
0000000000001788         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x6e94)
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1790; 0x5a5e[ (17102 bytes)
        ; File offset : [6032; 23134[ (17102 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     main:
0000000000001790         push       r13                                         ; Begin of unwind block (FDE at 0x6fa8), DATA XREF=_start+29
0000000000001792         push       r12
0000000000001794         mov        r12, 0xffffffffffffffff
000000000000179b         push       rbp
000000000000179c         push       rbx
000000000000179d         movsxd     rbp, edi
00000000000017a0         mov        rbx, rsi
00000000000017a3         sub        rsp, 0x8
00000000000017a7         mov        rdi, qword [rsi]
00000000000017aa         call       set_program_name                            ; set_program_name
00000000000017af         lea        rsi, qword [aVersion+9]                     ; argument "__locale" for method j_setlocale, 0x61f9
00000000000017b6         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
00000000000017bb         call       j_setlocale                                 ; setlocale
00000000000017c0         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
00000000000017c7         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
00000000000017ce         call       j_bindtextdomain                            ; bindtextdomain
00000000000017d3         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
00000000000017da         call       j_textdomain                                ; textdomain
00000000000017df         mov        edi, 0x3
00000000000017e4         call       hard_locale                                 ; hard_locale
00000000000017e9         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
00000000000017f0         mov        byte [hard_LC_COLLATE], al                  ; hard_LC_COLLATE
00000000000017f6         call       atexit                                      ; atexit
00000000000017fb         mov        byte [only_file_1], 0x1                     ; only_file_1
0000000000001802         mov        byte [only_file_2], 0x1                     ; only_file_2
0000000000001809         mov        byte [both], 0x1                            ; both
0000000000001810         mov        byte [seen_unpairable], 0x0                 ; seen_unpairable
0000000000001817         mov        byte [byte_2090fe], 0x0                     ; byte_2090fe
000000000000181e         mov        byte [issued_disorder_warning], 0x0         ; issued_disorder_warning
0000000000001825         mov        dword [check_input_order], 0x0              ; check_input_order
000000000000182f         mov        byte [total_option], 0x0                    ; total_option
0000000000001836         nop        word [cs:rax+rax]

                     loc_1840:
0000000000001840         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+260, main+314, main+345, main+362, main+454, main+471, main+487, main+503
0000000000001847         lea        rdx, qword [aRichardMStallm+20]             ; argument "__shortopts" for method j_getopt_long, 0x6160
000000000000184e         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001851         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001854         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001856         call       j_getopt_long                               ; getopt_long
000000000000185b         cmp        eax, 0xffffffff
000000000000185e         je         loc_19d9

0000000000001864         cmp        eax, 0x33
0000000000001867         je         loc_1960

000000000000186d         jle        loc_18a0

000000000000186f         cmp        eax, 0x81
0000000000001874         je         loc_18f0

0000000000001876         jg         loc_18d0

0000000000001878         cmp        eax, 0x7a
000000000000187b         je         loc_1970

0000000000001881         add        eax, 0xffffff80
0000000000001884         jne        loc_1a6b

000000000000188a         mov        dword [check_input_order], 0x1              ; check_input_order
0000000000001894         jmp        loc_1840
0000000000001896         align      32

                     loc_18a0:
00000000000018a0         cmp        eax, 0xffffff7e                             ; CODE XREF=main+221
00000000000018a5         je         loc_1a75

00000000000018ab         jle        loc_1990

00000000000018b1         cmp        eax, 0x31
00000000000018b4         je         loc_1980

00000000000018ba         cmp        eax, 0x32
00000000000018bd         jne        loc_1a6b

00000000000018c3         mov        byte [only_file_2], 0x0                     ; only_file_2
00000000000018ca         jmp        loc_1840
00000000000018cf         align      16

                     loc_18d0:
00000000000018d0         cmp        eax, 0x82                                   ; CODE XREF=main+230
00000000000018d5         je         loc_1900

00000000000018d7         cmp        eax, 0x83
00000000000018dc         jne        loc_1a6b

00000000000018e2         mov        byte [total_option], 0x1                    ; total_option
00000000000018e9         jmp        loc_1840
00000000000018ee         align      16

                     loc_18f0:
00000000000018f0         mov        dword [check_input_order], 0x2              ; check_input_order, CODE XREF=main+228
00000000000018fa         jmp        loc_1840
00000000000018ff         align      256

                     loc_1900:
0000000000001900         cmp        qword [col_sep_len], 0x0                    ; col_sep_len, CODE XREF=main+325
0000000000001908         mov        r13, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000190f         je         loc_1928

0000000000001911         mov        rdi, qword [col_sep]                        ; argument "__s1" for method j_strcmp, col_sep
0000000000001918         mov        rsi, r13                                    ; argument "__s2" for method j_strcmp
000000000000191b         call       j_strcmp                                    ; strcmp
0000000000001920         test       eax, eax
0000000000001922         jne        loc_1aa3

                     loc_1928:
0000000000001928         cmp        byte [r13], 0x0                             ; CODE XREF=main+383
000000000000192d         mov        qword [col_sep], r13                        ; col_sep
0000000000001934         mov        eax, 0x1
0000000000001939         je         loc_194f

000000000000193b         xor        eax, eax
000000000000193d         mov        rcx, r12
0000000000001940         mov        rdi, r13
0000000000001943         repne scasb al, byte [rdi]
0000000000001945         mov        rax, rcx
0000000000001948         not        rax
000000000000194b         sub        rax, 0x1

                     loc_194f:
000000000000194f         mov        qword [col_sep_len], rax                    ; col_sep_len, CODE XREF=main+425
0000000000001956         jmp        loc_1840
000000000000195b         align      32

                     loc_1960:
0000000000001960         mov        byte [both], 0x0                            ; both, CODE XREF=main+215
0000000000001967         jmp        loc_1840
000000000000196c         align      16

                     loc_1970:
0000000000001970         mov        byte [delim], 0x0                           ; delim, CODE XREF=main+235
0000000000001977         jmp        loc_1840
000000000000197c         align      128

                     loc_1980:
0000000000001980         mov        byte [only_file_1], 0x0                     ; only_file_1, CODE XREF=main+292
0000000000001987         jmp        loc_1840
000000000000198c         align      16

                     loc_1990:
0000000000001990         cmp        eax, 0xffffff7d                             ; CODE XREF=main+283
0000000000001995         jne        loc_1a6b

000000000000199b         sub        rsp, 0x8
000000000000199f         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000019a6         mov        rcx, qword [Version]                        ; Version
00000000000019ad         push       0x0
00000000000019af         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
00000000000019b6         lea        r8, qword [aRichardMStallm]                 ; "Richard M. Stallman"
00000000000019bd         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x60f7
00000000000019c4         lea        rsi, qword [aSssssssc+17]                   ; 0x607c
00000000000019cb         xor        eax, eax
00000000000019cd         call       version_etc                                 ; version_etc
00000000000019d2         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000019d4         call       j_exit                                      ; exit
                        ; endp

                     loc_19d9:
00000000000019d9         cmp        qword [col_sep_len], 0x0                    ; col_sep_len, CODE XREF=main+206
00000000000019e1         je         loc_1a2d

                     loc_19e3:
00000000000019e3         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+680
00000000000019ea         mov        edx, ebp
00000000000019ec         sub        edx, eax
00000000000019ee         cmp        edx, 0x1
00000000000019f1         jle        loc_1a7c

00000000000019f7         cmp        edx, 0x2
00000000000019fa         jne        loc_1ac7

0000000000001a00         lea        rdi, qword [rbx+rax*8]
0000000000001a04         call       compare_files                               ; compare_files
0000000000001a09         cmp        byte [issued_disorder_warning], 0x0         ; issued_disorder_warning
0000000000001a10         jne        loc_1ae5

0000000000001a16         cmp        byte [byte_2090fe], 0x0                     ; byte_2090fe
0000000000001a1d         jne        loc_1ae5

0000000000001a23         pop        rdx
0000000000001a24         xor        eax, eax
0000000000001a26         pop        rbx
0000000000001a27         pop        rbp
0000000000001a28         pop        r12
0000000000001a2a         pop        r13
0000000000001a2c         ret
                        ; endp

                     loc_1a2d:
0000000000001a2d         mov        qword [col_sep_len], 0x1                    ; col_sep_len, CODE XREF=main+593
0000000000001a38         jmp        loc_19e3

                     loc_1a3a:
0000000000001a3a         mov        rdi, qword [rbx+rbp*8-8]                    ; CODE XREF=main+750
0000000000001a3f         call       quote                                       ; quote
0000000000001a44         lea        rsi, qword [aMissingOperand_6175]           ; "missing operand after %s"
0000000000001a4b         mov        rbx, rax
0000000000001a4e         mov        edx, 0x5

                     loc_1a53:
0000000000001a53         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+848
0000000000001a55         call       j_dcgettext                                 ; dcgettext
0000000000001a5a         mov        rcx, rbx
0000000000001a5d         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001a60         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001a62         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001a64         xor        eax, eax
0000000000001a66         call       j_error                                     ; error

                     loc_1a6b:
0000000000001a6b         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+244, main+301, main+332, main+517, main+785
0000000000001a70         call       usage                                       ; usage

                     loc_1a75:
0000000000001a75         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+277
0000000000001a77         call       usage                                       ; usage

                     loc_1a7c:
0000000000001a7c         cmp        eax, ebp                                    ; CODE XREF=main+609
0000000000001a7e         jl         loc_1a3a

0000000000001a80         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand"
0000000000001a87         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001a89         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001a8e         call       j_dcgettext                                 ; dcgettext
0000000000001a93         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001a95         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001a98         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001a9a         xor        eax, eax
0000000000001a9c         call       j_error                                     ; error
0000000000001aa1         jmp        loc_1a6b

                     loc_1aa3:
0000000000001aa3         lea        rsi, qword [aMultipleOutput]                ; argument "msgid" for method j_dcgettext, "multiple output delimiters specified", CODE XREF=main+402
0000000000001aaa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001aaf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ab1         call       j_dcgettext                                 ; dcgettext
0000000000001ab6         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001ab8         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001abb         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001ac0         xor        eax, eax
0000000000001ac2         call       j_error                                     ; error

                     loc_1ac7:
0000000000001ac7         mov        rdi, qword [rbx+rax*8+0x10]                 ; CODE XREF=main+618
0000000000001acc         call       quote                                       ; quote
0000000000001ad1         mov        edx, 0x5
0000000000001ad6         mov        rbx, rax
0000000000001ad9         lea        rsi, qword [aExtraOperandS]                 ; "extra operand %s"
0000000000001ae0         jmp        loc_1a53

                     loc_1ae5:
0000000000001ae5         lea        rsi, qword [aInputIsNotInSo]                ; argument "msgid" for method j_dcgettext, "input is not in sorted order", CODE XREF=main+640, main+653
0000000000001aec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001af1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001af3         call       j_dcgettext                                 ; dcgettext
0000000000001af8         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001afa         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001afd         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001b02         xor        eax, eax
0000000000001b04         call       j_error                                     ; error
0000000000001b09         nop        dword [rax]                                 ; End of unwind block (FDE at 0x6fa8)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001b10         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x6e3c)
0000000000001b12         mov        r9, rdx
0000000000001b15         pop        rsi
0000000000001b16         mov        rdx, rsp
0000000000001b19         and        rsp, 0xfffffffffffffff0
0000000000001b1d         push       rax
0000000000001b1e         push       rsp
0000000000001b1f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001b26         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001b2d         lea        rdi, qword [main]                           ; main
0000000000001b34         call       qword [qword_208fc0+8]                      ; 0x208fc8
0000000000001b3a         hlt
                        ; endp
0000000000001b3b         align      64                                          ; End of unwind block (FDE at 0x6e3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001b40         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001b47         push       rbp
0000000000001b48         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001b4f         cmp        rax, rdi
0000000000001b52         mov        rbp, rsp
0000000000001b55         je         loc_1b70

0000000000001b57         mov        rax, qword [qword_208fc0]                   ; qword_208fc0
0000000000001b5e         test       rax, rax
0000000000001b61         je         loc_1b70

0000000000001b63         pop        rbp
0000000000001b64         jmp        rax
                        ; endp
0000000000001b66         align      16

                     loc_1b70:
0000000000001b70         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001b71         ret
                        ; endp
0000000000001b72         align      128

                     register_tm_clones:
0000000000001b80         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001b87         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001b8e         push       rbp
0000000000001b8f         sub        rsi, rdi
0000000000001b92         mov        rbp, rsp
0000000000001b95         sar        rsi, 0x3
0000000000001b99         mov        rax, rsi
0000000000001b9c         shr        rax, 0x3f
0000000000001ba0         add        rsi, rax
0000000000001ba3         sar        rsi, 0x1
0000000000001ba6         je         loc_1bc0

0000000000001ba8         mov        rax, qword [qword_208fd8]                   ; qword_208fd8
0000000000001baf         test       rax, rax
0000000000001bb2         je         loc_1bc0

0000000000001bb4         pop        rbp
0000000000001bb5         jmp        rax
                        ; endp
0000000000001bb7         align      64

                     loc_1bc0:
0000000000001bc0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001bc1         ret
                        ; endp
0000000000001bc2         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001bd0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001bd7         jne        loc_1c08

0000000000001bd9         cmp        qword [qword_208fe0], 0x0                   ; qword_208fe0
0000000000001be1         push       rbp
0000000000001be2         mov        rbp, rsp
0000000000001be5         je         loc_1bf3

0000000000001be7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001bee         call       j_qword_208fe0                              ; qword_208fe0

                     loc_1bf3:
0000000000001bf3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001bf8         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001bff         pop        rbp
0000000000001c00         ret
                        ; endp
0000000000001c01         align      8

                     loc_1c08:
0000000000001c08         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001c0a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001c10         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001c11         mov        rbp, rsp
0000000000001c14         pop        rbp
0000000000001c15         jmp        register_tm_clones                          ; register_tm_clones
0000000000001c1a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     writeline.isra.0:
0000000000001c20         cmp        ecx, 0x2                                    ; Begin of unwind block (FDE at 0x6eac), CODE XREF=compare_files+503, compare_files+887, compare_files+945
0000000000001c23         push       r12
0000000000001c25         mov        r12, rdi
0000000000001c28         push       rbp
0000000000001c29         mov        rbp, rsi
0000000000001c2c         push       rbx
0000000000001c2d         mov        rbx, rdx
0000000000001c30         je         loc_1ca0

0000000000001c32         cmp        ecx, 0x3
0000000000001c35         jne        loc_1c90

0000000000001c37         cmp        byte [both], 0x0                            ; both
0000000000001c3e         je         loc_1c99

0000000000001c40         cmp        byte [only_file_1], 0x0                     ; only_file_1
0000000000001c47         je         loc_1c64

0000000000001c49         mov        rcx, rdx                                    ; argument "__stream" for method j_fwrite_unlocked
0000000000001c4c         mov        rdi, qword [col_sep]                        ; argument "__ptr" for method j_fwrite_unlocked, col_sep
0000000000001c53         mov        rdx, qword [col_sep_len]                    ; argument "__n" for method j_fwrite_unlocked, col_sep_len
0000000000001c5a         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001c5f         call       j_fwrite_unlocked                           ; fwrite_unlocked

                     loc_1c64:
0000000000001c64         cmp        byte [only_file_2], 0x0                     ; only_file_2, CODE XREF=writeline.isra.0+39
0000000000001c6b         jne        loc_1cb2

                     loc_1c6d:
0000000000001c6d         mov        rcx, rbx                                    ; argument "__stream" for method j_fwrite_unlocked, CODE XREF=writeline.isra.0+119, writeline.isra.0+144, writeline.isra.0+173
0000000000001c70         mov        rdx, qword [r12]                            ; argument "__n" for method j_fwrite_unlocked
0000000000001c74         mov        rdi, qword [rbp]                            ; argument "__ptr" for method j_fwrite_unlocked
0000000000001c78         pop        rbx
0000000000001c79         pop        rbp
0000000000001c7a         pop        r12
0000000000001c7c         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001c81         jmp        j_fwrite_unlocked                           ; fwrite_unlocked
                        ; endp
0000000000001c86         align      16

                     loc_1c90:
0000000000001c90         cmp        byte [only_file_1], 0x0                     ; only_file_1, CODE XREF=writeline.isra.0+21
0000000000001c97         jne        loc_1c6d

                     loc_1c99:
0000000000001c99         pop        rbx                                         ; CODE XREF=writeline.isra.0+30, writeline.isra.0+135
0000000000001c9a         pop        rbp
0000000000001c9b         pop        r12
0000000000001c9d         ret
                        ; endp
0000000000001c9e         align      32

                     loc_1ca0:
0000000000001ca0         cmp        byte [only_file_2], 0x0                     ; only_file_2, CODE XREF=writeline.isra.0+16
0000000000001ca7         je         loc_1c99

0000000000001ca9         cmp        byte [only_file_1], 0x0                     ; only_file_1
0000000000001cb0         je         loc_1c6d

                     loc_1cb2:
0000000000001cb2         mov        rdx, qword [col_sep_len]                    ; argument "__n" for method j_fwrite_unlocked, col_sep_len, CODE XREF=writeline.isra.0+75
0000000000001cb9         mov        rdi, qword [col_sep]                        ; argument "__ptr" for method j_fwrite_unlocked, col_sep
0000000000001cc0         mov        rcx, rbx                                    ; argument "__stream" for method j_fwrite_unlocked
0000000000001cc3         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001cc8         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001ccd         jmp        loc_1c6d
0000000000001ccf         align      16                                          ; End of unwind block (FDE at 0x6eac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_order.isra.1.part.2:
0000000000001cd0         push       r12                                         ; Begin of unwind block (FDE at 0x6ee8), CODE XREF=compare_files+724, compare_files+830
0000000000001cd2         push       rbp
0000000000001cd3         lea        r12, qword [issued_disorder_warning]        ; issued_disorder_warning
0000000000001cda         push       rbx
0000000000001cdb         lea        ebx, dword [r8-1]
0000000000001cdf         movsxd     rbx, ebx
0000000000001ce2         cmp        byte [r12+rbx], 0x0
0000000000001ce7         jne        loc_1d4b

0000000000001ce9         mov        rax, rsi
0000000000001cec         mov        ebp, r8d
0000000000001cef         mov        rsi, qword [rdi]
0000000000001cf2         mov        r8, rcx
0000000000001cf5         mov        rcx, qword [rdx]
0000000000001cf8         mov        rdi, qword [rax]
0000000000001cfb         mov        rdx, qword [r8]
0000000000001cfe         sub        rsi, 0x1
0000000000001d02         sub        rcx, 0x1
0000000000001d06         cmp        byte [hard_LC_COLLATE], 0x0                 ; hard_LC_COLLATE
0000000000001d0d         jne        loc_1d50

0000000000001d0f         call       memcmp2                                     ; memcmp2

                     loc_1d14:
0000000000001d14         test       eax, eax                                    ; CODE XREF=check_order.isra.1.part.2+133
0000000000001d16         jle        loc_1d4b

0000000000001d18         lea        rsi, qword [aFileDIsNotInSo]                ; argument "msgid" for method j_dcgettext, "file %d is not in sorted order"
0000000000001d1f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d21         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d26         call       j_dcgettext                                 ; dcgettext
0000000000001d2b         xor        edi, edi
0000000000001d2d         cmp        dword [check_input_order], 0x1              ; check_input_order
0000000000001d34         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001d37         mov        ecx, ebp
0000000000001d39         sete       dil                                         ; argument "__status" for method j_error
0000000000001d3d         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001d3f         xor        eax, eax
0000000000001d41         call       j_error                                     ; error
0000000000001d46         mov        byte [r12+rbx], 0x1

                     loc_1d4b:
0000000000001d4b         pop        rbx                                         ; CODE XREF=check_order.isra.1.part.2+23, check_order.isra.1.part.2+70
0000000000001d4c         pop        rbp
0000000000001d4d         pop        r12
0000000000001d4f         ret
                        ; endp

                     loc_1d50:
0000000000001d50         call       xmemcoll                                    ; xmemcoll, CODE XREF=check_order.isra.1.part.2+61
0000000000001d55         jmp        loc_1d14
0000000000001d57         align      32                                          ; End of unwind block (FDE at 0x6ee8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int8_t, -88
        ;    var_78: int8_t, -120
        ;    var_98: int8_t, -152
        ;    var_158: int8_t, -344
        ;    var_198: int64_t, -408
        ;    var_1B8: int8_t, -440
        ;    var_1C0: int64_t, -448
        ;    var_1C8: int64_t, -456
        ;    var_1D0: int64_t, -464
        ;    var_1D8: int64_t, -472
        ;    var_1D9: int8_t, -473
        ;    var_1DA: int8_t, -474
        ;    var_1F0: int64_t, -496
        ;    var_1F4: int32_t, -500
        ;    var_200: int64_t, -512
        ;    var_208: int64_t, -520
        ;    var_210: int64_t, -528
        ;    var_218: int64_t, -536
        ;    var_220: int64_t, -544
        ;    var_228: int64_t, -552
        ;    var_230: int64_t, -560
        ;    var_268: int64_t, -616
        ;    var_278: int64_t, -632
        ;    var_280: int64_t, -640
        ;    var_288: int64_t, -648
        ;    var_290: int64_t, -656
        ;    var_298: int64_t, -664
        ;    var_2A0: int64_t, -672
        ;    var_2A8: int64_t, -680
        ;    var_2B0: int64_t, -688
        ;    var_2B8: int64_t, -696
        ;    var_2C0: int64_t, -704
        ;    var_2C8: int64_t, -712
        ;    var_2D0: int64_t, -720
        ;    var_2D8: int64_t, -728
        ;    var_2E0: int64_t, -736


                     compare_files:
0000000000001d60         push       r15                                         ; Begin of unwind block (FDE at 0x6f18), CODE XREF=main+628
0000000000001d62         push       r14
0000000000001d64         mov        r14, rdi
0000000000001d67         push       r13
0000000000001d69         push       r12
0000000000001d6b         push       rbp
0000000000001d6c         push       rbx
0000000000001d6d         xor        ebp, ebp
0000000000001d6f         sub        rsp, 0x208
0000000000001d76         mov        rax, qword [fs:0x28]
0000000000001d7f         mov        qword [rsp+0x238+var_40], rax
0000000000001d87         xor        eax, eax
0000000000001d89         lea        rax, qword [rsp+0x238+var_1B8]
0000000000001d91         lea        r15, qword [rsp+0x238+var_158]
0000000000001d99         mov        qword [rsp+0x238+var_1F0], rdi
0000000000001d9e         mov        qword [rsp+0x238+var_228], rax
0000000000001da3         mov        r12, rax
0000000000001da6         lea        rax, qword [rsp+0x238+var_1C8]
0000000000001dab         mov        qword [rsp+0x238+var_220], rax
0000000000001db0         lea        rax, qword [rsp+0x238+var_198]
0000000000001db8         mov        qword [rsp+0x238+var_218], rax

                     loc_1dbd:
0000000000001dbd         mov        rcx, qword [rsp+0x238+var_218]              ; CODE XREF=compare_files+312
0000000000001dc2         mov        rax, rbp
0000000000001dc5         lea        r13, qword [r15+0x60]
0000000000001dc9         shl        rax, 0x5
0000000000001dcd         mov        dword [rsp+0x238+var_230], ebp
0000000000001dd1         lea        rbx, qword [rcx+rax]

                     loc_1dd5:
0000000000001dd5         mov        rdi, r15                                    ; CODE XREF=compare_files+140
0000000000001dd8         add        rbx, 0x8
0000000000001ddc         call       initbuffer                                  ; initbuffer
0000000000001de1         mov        qword [rbx-8], r15
0000000000001de5         add        r15, 0x18
0000000000001de9         cmp        r15, r13
0000000000001dec         jne        loc_1dd5

0000000000001dee         mov        rdx, qword [r14]
0000000000001df1         lea        rdi, qword [aLibs+10]                       ; 0x6262
0000000000001df8         mov        ecx, 0x2
0000000000001dfd         mov        dword [r12], 0x0
0000000000001e05         mov        dword [r12+4], 0x0
0000000000001e0e         mov        dword [r12+8], 0x0
0000000000001e17         mov        r13, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001e1e         mov        rsi, rdx
0000000000001e21         rep  cmpsb byte [rsi], byte [rdi]
0000000000001e23         seta       al
0000000000001e26         sbb        al, 0x0
0000000000001e28         test       al, al
0000000000001e2a         jne        loc_2245

                     loc_1e30:
0000000000001e30         mov        rax, qword [rsp+0x238+var_220]              ; CODE XREF=compare_files+1271
0000000000001e35         test       r13, r13
0000000000001e38         mov        qword [rax+rbp*8], r13
0000000000001e3c         je         loc_230a

0000000000001e42         mov        esi, 0x2
0000000000001e47         mov        rdi, r13
0000000000001e4a         call       fadvise                                     ; fadvise
0000000000001e4f         movsxd     rbx, dword [rsp+0x238+var_230]
0000000000001e54         movsx      edx, byte [delim]                           ; delim
0000000000001e5b         mov        rsi, r13
0000000000001e5e         shl        rbx, 0x5
0000000000001e62         mov        rdi, qword [rsp+rbx+0x238+var_198]
0000000000001e6a         call       readlinebuffer_delim                        ; readlinebuffer_delim
0000000000001e6f         lea        rdx, qword [rsp+0x238+var_1D8]
0000000000001e74         mov        qword [rdx+rbp*8], rax
0000000000001e78         mov        eax, dword [r13]
0000000000001e7c         and        eax, 0x20
0000000000001e7f         jne        loc_22db

0000000000001e85         add        r14, 0x8
0000000000001e89         add        r12, 0xc
0000000000001e8d         cmp        rbp, 0x1
0000000000001e91         je         loc_1ea0

0000000000001e93         mov        ebp, 0x1
0000000000001e98         jmp        loc_1dbd
0000000000001e9d         align      32

                     loc_1ea0:
0000000000001ea0         mov        dword [rsp+0x238+var_1F4], eax              ; CODE XREF=compare_files+305
0000000000001ea4         mov        qword [rsp+0x238+var_218], rdx
0000000000001ea9         mov        qword [rsp+0x238+var_200], 0x0
0000000000001eb2         mov        qword [rsp+0x238+var_210], 0x0
0000000000001ebb         mov        qword [rsp+0x238+var_208], 0x0
0000000000001ec4         nop        dword [rax]

                     loc_1ec8:
0000000000001ec8         mov        rbp, qword [rsp+0x238+var_1D8]              ; CODE XREF=compare_files+545
0000000000001ecd         mov        rbx, qword [rsp+0x238+var_1D0]
0000000000001ed2         test       rbp, rbp
0000000000001ed5         je         loc_20a8

0000000000001edb         test       rbx, rbx
0000000000001ede         mov        byte [rsp+0x238+var_1DA], 0x0
0000000000001ee3         mov        byte [rsp+0x238+var_1D9], 0x0
0000000000001ee8         je         loc_20f0

0000000000001eee         cmp        byte [hard_LC_COLLATE], 0x0                 ; hard_LC_COLLATE
0000000000001ef5         mov        r14, qword [rbx+8]
0000000000001ef9         mov        rsi, qword [rbx+0x10]
0000000000001efd         mov        r15, qword [rbp+8]
0000000000001f01         mov        rdi, qword [rbp+0x10]
0000000000001f05         jne        loc_2138

0000000000001f0b         cmp        r15, r14
0000000000001f0e         mov        rdx, r14
0000000000001f11         cmovbe     rdx, r15
0000000000001f15         sub        rdx, 0x1                                    ; argument "__n" for method j_memcmp
0000000000001f19         call       j_memcmp                                    ; memcmp
0000000000001f1e         test       eax, eax
0000000000001f20         jne        loc_2120

0000000000001f26         cmp        r15, r14
0000000000001f29         jb         loc_20f0

0000000000001f2f         setne      al
0000000000001f32         movzx      eax, al

                     loc_1f35:
0000000000001f35         test       eax, eax                                    ; CODE XREF=compare_files+1003
0000000000001f37         mov        rdx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f3e         jne        loc_2127

0000000000001f44         lea        rsi, qword [rbx+0x10]
0000000000001f48         lea        rdi, qword [rbx+8]
0000000000001f4c         mov        ecx, 0x3
0000000000001f51         add        qword [rsp+0x238+var_200], 0x1
0000000000001f57         call       writeline.isra.0                            ; writeline.isra.0
0000000000001f5c         mov        byte [rsp+0x238+var_1D9], 0x1

                     loc_1f61:
0000000000001f61         mov        byte [rsp+0x238+var_1DA], 0x1               ; CODE XREF=compare_files+950
0000000000001f66         mov        eax, 0x1

                     loc_1f6b:
0000000000001f6b         xor        ebx, ebx                                    ; CODE XREF=compare_files+902
0000000000001f6d         test       al, al
0000000000001f6f         mov        rbp, qword [rsp+0x238+var_228]
0000000000001f74         mov        r14d, ebx
0000000000001f77         jne        loc_1f98

                     loc_1f79:
0000000000001f79         add        rbp, 0xc                                    ; CODE XREF=compare_files+566, compare_files+745
0000000000001f7d         cmp        rbx, 0x1
0000000000001f81         je         loc_1ec8

0000000000001f87         movzx      eax, byte [rsp+0x238+var_1D9]
0000000000001f8c         mov        ebx, 0x1
0000000000001f91         mov        r14d, ebx
0000000000001f94         test       al, al
0000000000001f96         je         loc_1f79

                     loc_1f98:
0000000000001f98         movsxd     r12, dword [rbp]                            ; CODE XREF=compare_files+535
0000000000001f9c         mov        rcx, qword [rsp+0x238+var_220]
0000000000001fa1         movsxd     r15, dword [rbp+4]
0000000000001fa5         movsx      edx, byte [delim]                           ; delim
0000000000001fac         mov        r13, qword [rcx+rbx*8]
0000000000001fb0         lea        rcx, qword [rbx*4]
0000000000001fb8         lea        eax, dword [r12+1]
0000000000001fbd         mov        dword [rbp+4], r12d
0000000000001fc1         mov        dword [rbp+8], r15d
0000000000001fc5         mov        qword [rsp+0x238+var_230], rcx
0000000000001fca         and        eax, 0x3
0000000000001fcd         mov        rsi, r13
0000000000001fd0         mov        dword [rbp], eax
0000000000001fd3         cdqe
0000000000001fd5         add        rax, rcx
0000000000001fd8         mov        rdi, qword [rsp+rax*8+0x238+var_198]
0000000000001fe0         call       readlinebuffer_delim                        ; readlinebuffer_delim
0000000000001fe5         mov        rsi, qword [rsp+0x238+var_218]
0000000000001fea         test       rax, rax
0000000000001fed         mov        rcx, qword [rsp+0x238+var_230]
0000000000001ff2         mov        qword [rsi+rbx*8], rax
0000000000001ff6         je         loc_2050

0000000000001ff8         mov        edx, dword [check_input_order]              ; check_input_order
0000000000001ffe         cmp        edx, 0x2
0000000000002001         je         loc_2039

0000000000002003         cmp        edx, 0x1
0000000000002006         je         loc_2011

0000000000002008         cmp        byte [seen_unpairable], 0x0                 ; seen_unpairable
000000000000200f         je         loc_2039

                     loc_2011:
0000000000002011         movsxd     rdx, r14d                                   ; CODE XREF=compare_files+678
0000000000002014         lea        rcx, qword [rax+0x10]
0000000000002018         lea        r8d, dword [rbx+1]
000000000000201c         lea        rdx, qword [r12+rdx*4]
0000000000002020         mov        rdi, qword [rsp+rdx*8+0x238+var_198]
0000000000002028         lea        rdx, qword [rax+8]
000000000000202c         lea        rsi, qword [rdi+0x10]
0000000000002030         add        rdi, 0x8
0000000000002034         call       check_order.isra.1.part.2                   ; check_order.isra.1.part.2

                     loc_2039:
0000000000002039         test       byte [r13], 0x20                            ; CODE XREF=compare_files+673, compare_files+687, compare_files+768, compare_files+779, compare_files+793, compare_files+835
000000000000203e         jne        loc_225c

0000000000002044         mov        byte [rsp+rbx+0x238+var_1DA], 0x0
0000000000002049         jmp        loc_1f79
000000000000204e         align      16

                     loc_2050:
0000000000002050         add        rcx, r15                                    ; CODE XREF=compare_files+662
0000000000002053         mov        rdi, qword [rsp+rcx*8+0x238+var_198]
000000000000205b         cmp        qword [rdi+0x10], 0x0
0000000000002060         je         loc_2039

0000000000002062         mov        eax, dword [check_input_order]              ; check_input_order
0000000000002068         cmp        eax, 0x2
000000000000206b         je         loc_2039

000000000000206d         cmp        eax, 0x1
0000000000002070         je         loc_207b

0000000000002072         cmp        byte [seen_unpairable], 0x0                 ; seen_unpairable
0000000000002079         je         loc_2039

                     loc_207b:
000000000000207b         movsxd     rax, r14d                                   ; CODE XREF=compare_files+784
000000000000207e         lea        rsi, qword [rdi+0x10]
0000000000002082         lea        r8d, dword [rbx+1]
0000000000002086         lea        rax, qword [r12+rax*4]
000000000000208a         add        rdi, 0x8
000000000000208e         mov        rdx, qword [rsp+rax*8+0x238+var_198]
0000000000002096         lea        rcx, qword [rdx+0x10]
000000000000209a         add        rdx, 0x8
000000000000209e         call       check_order.isra.1.part.2                   ; check_order.isra.1.part.2
00000000000020a3         jmp        loc_2039
00000000000020a5         align      8

                     loc_20a8:
00000000000020a8         test       rbx, rbx                                    ; CODE XREF=compare_files+373
00000000000020ab         je         loc_2150

00000000000020b1         mov        rdx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000020b8         mov        byte [rsp+0x238+var_1DA], 0x0
00000000000020bd         mov        byte [seen_unpairable], 0x1                 ; seen_unpairable

                     loc_20c4:
00000000000020c4         lea        rsi, qword [rbx+0x10]                       ; CODE XREF=compare_files+976
00000000000020c8         lea        rdi, qword [rbx+8]
00000000000020cc         mov        ecx, 0x2
00000000000020d1         add        qword [rsp+0x238+var_210], 0x1
00000000000020d7         call       writeline.isra.0                            ; writeline.isra.0
00000000000020dc         mov        byte [rsp+0x238+var_1D9], 0x1
00000000000020e1         movzx      eax, byte [rsp+0x238+var_1DA]
00000000000020e6         jmp        loc_1f6b
00000000000020eb         align      16

                     loc_20f0:
00000000000020f0         mov        rdx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=compare_files+392, compare_files+457
00000000000020f7         mov        byte [seen_unpairable], 0x1                 ; seen_unpairable

                     loc_20fe:
00000000000020fe         lea        rsi, qword [rbp+0x10]                       ; CODE XREF=compare_files+978
0000000000002102         lea        rdi, qword [rbp+8]
0000000000002106         mov        ecx, 0x1
000000000000210b         add        qword [rsp+0x238+var_208], 0x1
0000000000002111         call       writeline.isra.0                            ; writeline.isra.0
0000000000002116         jmp        loc_1f61
000000000000211b         align      32

                     loc_2120:
0000000000002120         mov        rdx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=compare_files+448

                     loc_2127:
0000000000002127         test       eax, eax                                    ; CODE XREF=compare_files+478
0000000000002129         mov        byte [seen_unpairable], 0x1                 ; seen_unpairable
0000000000002130         jg         loc_20c4

0000000000002132         jmp        loc_20fe
0000000000002134         align      8

                     loc_2138:
0000000000002138         sub        r15, 0x1                                    ; CODE XREF=compare_files+421
000000000000213c         lea        rcx, qword [r14-1]
0000000000002140         mov        rdx, rsi
0000000000002143         mov        rsi, r15
0000000000002146         call       xmemcoll                                    ; xmemcoll
000000000000214b         jmp        loc_1f35

                     loc_2150:
0000000000002150         mov        rdi, qword [rsp+0x238+var_1C8]              ; CODE XREF=compare_files+843
0000000000002155         call       rpl_fclose                                  ; rpl_fclose
000000000000215a         test       eax, eax
000000000000215c         jne        loc_229c

0000000000002162         mov        rdi, qword [rsp+0x238+var_1C0]
0000000000002167         call       rpl_fclose                                  ; rpl_fclose
000000000000216c         test       eax, eax
000000000000216e         jne        loc_2294

0000000000002174         cmp        byte [total_option], 0x0                    ; total_option
000000000000217b         je         loc_221c

0000000000002181         lea        rsi, qword [aTotal]                         ; argument "msgid" for method j_dcgettext, "total"
0000000000002188         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000218d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000218f         movzx      ebp, byte [delim]                           ; delim
0000000000002196         call       j_dcgettext                                 ; dcgettext
000000000000219b         mov        rdi, qword [rsp+0x238+var_200]
00000000000021a0         lea        rsi, qword [rsp+0x238+var_58]
00000000000021a8         mov        rbx, rax
00000000000021ab         mov        r15, qword [col_sep]                        ; col_sep
00000000000021b2         call       umaxtostr                                   ; umaxtostr
00000000000021b7         mov        rdi, qword [rsp+0x238+var_210]
00000000000021bc         lea        rsi, qword [rsp+0x238+var_78]
00000000000021c4         mov        r14, rax
00000000000021c7         mov        r12, qword [col_sep]                        ; col_sep
00000000000021ce         call       umaxtostr                                   ; umaxtostr
00000000000021d3         mov        rdi, qword [rsp+0x238+var_208]
00000000000021d8         lea        rsi, qword [rsp+0x238+var_98]
00000000000021e0         mov        r13, qword [col_sep]                        ; col_sep
00000000000021e7         mov        qword [rsp+0x238+var_230], rax
00000000000021ec         call       umaxtostr                                   ; umaxtostr
00000000000021f1         push       rbp
00000000000021f2         push       rbx
00000000000021f3         lea        rsi, qword [aSssssssc]                      ; "%s%s%s%s%s%s%s%c"
00000000000021fa         push       r15
00000000000021fc         push       r14
00000000000021fe         mov        rdx, rax
0000000000002201         mov        r8, qword [rsp+0x258+var_230]
0000000000002206         mov        r9, r12
0000000000002209         mov        rcx, r13
000000000000220c         mov        edi, 0x1
0000000000002211         xor        eax, eax
0000000000002213         call       j___printf_chk                              ; __printf_chk
0000000000002218         add        rsp, 0x20

                     loc_221c:
000000000000221c         mov        rax, qword [rsp+0x238+var_40]               ; CODE XREF=compare_files+1051
0000000000002224         xor        rax, qword [fs:0x28]
000000000000222d         jne        loc_22d6

0000000000002233         add        rsp, 0x208
000000000000223a         pop        rbx
000000000000223b         pop        rbp
000000000000223c         pop        r12
000000000000223e         pop        r13
0000000000002240         pop        r14
0000000000002242         pop        r15
0000000000002244         ret
                        ; endp

                     loc_2245:
0000000000002245         lea        rsi, qword [aInputIsNotInSo+27]             ; 0x61ba, CODE XREF=compare_files+202
000000000000224c         mov        rdi, rdx
000000000000224f         call       fopen_safer                                 ; fopen_safer
0000000000002254         mov        r13, rax
0000000000002257         jmp        loc_1e30

                     loc_225c:
000000000000225c         mov        rax, qword [rsp+0x238+var_1F0]              ; CODE XREF=compare_files+734
0000000000002261         movsxd     r15, r14d
0000000000002264         mov        esi, 0x3
0000000000002269         xor        edi, edi
000000000000226b         mov        rdx, qword [rax+r15*8]
000000000000226f         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002274         mov        rbx, rax
0000000000002277         call       j___errno_location                          ; __errno_location
000000000000227c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000227e         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x620f
0000000000002285         mov        rcx, rbx
0000000000002288         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000228d         xor        eax, eax
000000000000228f         call       j_error                                     ; error

                     loc_2294:
0000000000002294         mov        dword [rsp+0x238+var_1F4], 0x1              ; CODE XREF=compare_files+1038

                     loc_229c:
000000000000229c         movsxd     rax, dword [rsp+0x238+var_1F4]              ; CODE XREF=compare_files+1020
00000000000022a1         mov        rcx, qword [rsp+0x238+var_1F0]
00000000000022a6         mov        esi, 0x3
00000000000022ab         xor        edi, edi
00000000000022ad         mov        rdx, qword [rcx+rax*8]
00000000000022b1         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000022b6         mov        rbx, rax
00000000000022b9         call       j___errno_location                          ; __errno_location
00000000000022be         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000022c0         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x620f
00000000000022c7         mov        rcx, rbx
00000000000022ca         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000022cf         xor        eax, eax
00000000000022d1         call       j_error                                     ; error

                     loc_22d6:
00000000000022d6         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=compare_files+1229
                        ; endp

                     loc_22db:
00000000000022db         mov        rdx, qword [r14]                            ; CODE XREF=compare_files+287
00000000000022de         mov        esi, 0x3
00000000000022e3         xor        edi, edi
00000000000022e5         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000022ea         mov        rbx, rax
00000000000022ed         call       j___errno_location                          ; __errno_location
00000000000022f2         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000022f4         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x620f
00000000000022fb         mov        rcx, rbx
00000000000022fe         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002303         xor        eax, eax
0000000000002305         call       j_error                                     ; error

                     loc_230a:
000000000000230a         mov        rdx, qword [r14]                            ; CODE XREF=compare_files+220
000000000000230d         mov        esi, 0x3
0000000000002312         xor        edi, edi
0000000000002314         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002319         mov        rbx, rax
000000000000231c         call       j___errno_location                          ; __errno_location
0000000000002321         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002323         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x620f
000000000000232a         mov        rcx, rbx
000000000000232d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002332         xor        eax, eax
0000000000002334         call       j_error                                     ; error
0000000000002339         nop        dword [rax]                                 ; End of unwind block (FDE at 0x6f18)
                     usage:
0000000000002340         push       r13                                         ; Begin of unwind block (FDE at 0x6f7c), CODE XREF=main+736, main+743
0000000000002342         push       r12
0000000000002344         mov        edx, 0x5
0000000000002349         push       rbp
000000000000234a         push       rbx
000000000000234b         mov        ebp, edi
000000000000234d         sub        rsp, 0x88
0000000000002354         mov        rbx, qword [program_name]                   ; program_name
000000000000235b         mov        rax, qword [fs:0x28]
0000000000002364         mov        qword [rsp+0x2e0+var_268], rax
0000000000002369         xor        eax, eax
000000000000236b         test       edi, edi
000000000000236d         je         loc_239d

000000000000236f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002376         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002378         call       j_dcgettext                                 ; dcgettext
000000000000237d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002384         mov        rdx, rax
0000000000002387         mov        rcx, rbx
000000000000238a         mov        esi, 0x1
000000000000238f         xor        eax, eax
0000000000002391         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2396:
0000000000002396         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+982
0000000000002398         call       j_exit                                      ; exit
                        ; endp

                     loc_239d:
000000000000239d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... FILE1 FILE2\\n", CODE XREF=usage+45
00000000000023a4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023a6         call       j_dcgettext                                 ; dcgettext
00000000000023ab         mov        rdx, rbx
00000000000023ae         mov        rsi, rax
00000000000023b1         mov        edi, 0x1
00000000000023b6         xor        eax, eax
00000000000023b8         call       j___printf_chk                              ; __printf_chk
00000000000023bd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000023c4         lea        rsi, qword [aCompareSortedF]                ; argument "msgid" for method j_dcgettext, "Compare sorted files FILE1 and FILE2 line by line.\\n"
00000000000023cb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023d0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023d2         call       j_dcgettext                                 ; dcgettext
00000000000023d7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000023da         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000023dd         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000023e2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000023e9         lea        rsi, qword [aNwhenFile1OrFi]                ; argument "msgid" for method j_dcgettext, "\\nWhen FILE1 or FILE2 (not both) is -, read standard input.\\n"
00000000000023f0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023f5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023f7         call       j_dcgettext                                 ; dcgettext
00000000000023fc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000023ff         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002402         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002407         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000240e         lea        rsi, qword [aNwithNoOptions]                ; argument "msgid" for method j_dcgettext, "\\nWith no options, produce three-column output.  Column one contains\\nlines unique to FILE1, column two contains lines unique to FILE2,\\nand column three contains lines common to both files.\\n"
0000000000002415         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000241a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000241c         call       j_dcgettext                                 ; dcgettext
0000000000002421         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002424         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002427         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000242c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002433         lea        rsi, qword [aN1SuppressColu]                ; argument "msgid" for method j_dcgettext, "\\n  -1              suppress column 1 (lines unique to FILE1)\\n  -2              suppress column 2 (lines unique to FILE2)\\n  -3              suppress column 3 (lines that appear in both files)\\n"
000000000000243a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000243f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002441         call       j_dcgettext                                 ; dcgettext
0000000000002446         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002449         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000244c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002451         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002458         lea        rsi, qword [aNCheckorderChe]                ; argument "msgid" for method j_dcgettext, "\\n  --check-order     check that the input is correctly sorted, even\\n                      if all input lines are pairable\\n  --nocheck-order   do not check that the input is correctly sorted\\n"
000000000000245f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002464         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002466         call       j_dcgettext                                 ; dcgettext
000000000000246b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000246e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002471         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002476         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000247d         lea        rsi, qword [aOutputdelimite]                ; argument "msgid" for method j_dcgettext, "  --output-delimiter=STR  separate columns with STR\\n"
0000000000002484         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002489         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000248b         call       j_dcgettext                                 ; dcgettext
0000000000002490         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002493         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002496         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000249b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024a2         lea        rsi, qword [aTotalOutputASu]                ; argument "msgid" for method j_dcgettext, "  --total           output a summary\\n"
00000000000024a9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024ae         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024b0         call       j_dcgettext                                 ; dcgettext
00000000000024b5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024b8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024bb         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024c0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024c7         lea        rsi, qword [aZZeroterminate]                ; argument "msgid" for method j_dcgettext, "  -z, --zero-terminated    line delimiter is NUL, not newline\\n"
00000000000024ce         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024d3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024d5         call       j_dcgettext                                 ; dcgettext
00000000000024da         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024dd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024e0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024e5         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024ec         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000024f3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024fa         call       j_dcgettext                                 ; dcgettext
00000000000024ff         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002502         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002505         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000250a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002511         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002518         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000251d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000251f         call       j_dcgettext                                 ; dcgettext
0000000000002524         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002527         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000252a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000252f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002536         lea        rsi, qword [aNnoteCompariso]                ; argument "msgid" for method j_dcgettext, "\\nNote, comparisons honor the rules specified by 'LC_COLLATE'.\\n"
000000000000253d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002542         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002544         call       j_dcgettext                                 ; dcgettext
0000000000002549         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000254c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000254f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002554         mov        rbx, qword [program_name]                   ; program_name
000000000000255b         lea        rsi, qword [aNexamplesnS12F]                ; argument "msgid" for method j_dcgettext, "\\nExamples:\\n  %s -12 file1 file2  Print only lines present in both file1 and file2.\\n  %s -3 file1 file2  Print lines in file1 not in file2, and vice versa.\\n"
0000000000002562         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002567         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002569         call       j_dcgettext                                 ; dcgettext
000000000000256e         mov        rcx, rbx
0000000000002571         mov        rdx, rbx
0000000000002574         mov        rsi, rax
0000000000002577         mov        edi, 0x1
000000000000257c         xor        eax, eax
000000000000257e         lea        rbx, qword [aSssssssc+17]                   ; 0x607c
0000000000002585         call       j___printf_chk                              ; __printf_chk
000000000000258a         lea        rax, qword [aSssssssc+22]                   ; 0x6081
0000000000002591         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002598         mov        qword [rsp+0x2e0+var_280], 0x0
00000000000025a1         mov        qword [rsp+0x2e0+var_278], 0x0
00000000000025aa         mov        rdx, rsp
00000000000025ad         mov        qword [rsp+0x2e0+var_2E0], rax
00000000000025b1         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000025b8         mov        qword [rsp+0x2e0+var_2B0], rcx
00000000000025bd         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000025c4         mov        qword [rsp+0x2e0+var_2D8], rax
00000000000025c9         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000025d0         mov        qword [rsp+0x2e0+var_2A0], rcx
00000000000025d5         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000025dc         mov        qword [rsp+0x2e0+var_2D0], rax
00000000000025e1         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000025e8         mov        qword [rsp+0x2e0+var_290], rcx
00000000000025ed         mov        qword [rsp+0x2e0+var_2C8], rax
00000000000025f2         lea        rax, qword [aSha224sum]                     ; "sha224sum"
00000000000025f9         mov        qword [rsp+0x2e0+var_2C0], rax
00000000000025fe         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000002605         mov        qword [rsp+0x2e0+var_2B8], rax
000000000000260a         mov        qword [rsp+0x2e0+var_2A8], rax
000000000000260f         mov        qword [rsp+0x2e0+var_298], rax
0000000000002614         mov        qword [rsp+0x2e0+var_288], rax
0000000000002619         nop        dword [rax]

                     loc_2620:
0000000000002620         add        rdx, 0x10                                   ; CODE XREF=usage+765
0000000000002624         mov        rdi, qword [rdx]
0000000000002627         test       rdi, rdi
000000000000262a         je         loc_263f

000000000000262c         mov        ecx, 0x5
0000000000002631         mov        rsi, rbx
0000000000002634         rep  cmpsb byte [rsi], byte [rdi]
0000000000002636         seta       al
0000000000002639         sbb        al, 0x0
000000000000263b         test       al, al
000000000000263d         jne        loc_2620

                     loc_263f:
000000000000263f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+746
0000000000002643         xor        edi, edi
0000000000002645         mov        edx, 0x5
000000000000264a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002651         test       r12, r12
0000000000002654         je         loc_271b

000000000000265a         call       j_dcgettext                                 ; dcgettext
000000000000265f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002666         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x60f7
000000000000266d         mov        rsi, rax
0000000000002670         mov        edi, 0x1
0000000000002675         xor        eax, eax
0000000000002677         call       j___printf_chk                              ; __printf_chk
000000000000267c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000267e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002683         call       j_setlocale                                 ; setlocale
0000000000002688         test       rax, rax
000000000000268b         je         loc_26a9

000000000000268d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6105
0000000000002694         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002699         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000269c         call       j_strncmp                                   ; strncmp
00000000000026a1         test       eax, eax
00000000000026a3         jne        loc_27b0

                     loc_26a9:
00000000000026a9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+843, usage+1173
00000000000026b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026b7         call       j_dcgettext                                 ; dcgettext
00000000000026bc         lea        rcx, qword [aSssssssc+17]                   ; 0x607c
00000000000026c3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000026ca         mov        rsi, rax
00000000000026cd         mov        edi, 0x1
00000000000026d2         xor        eax, eax
00000000000026d4         call       j___printf_chk                              ; __printf_chk
00000000000026d9         cmp        r12, rbx
00000000000026dc         lea        rcx, qword [aMulticallInvoc+10]             ; 0x609d
00000000000026e3         lea        rbx, qword [aVersion+9]                     ; 0x61f9
00000000000026ea         cmove      rbx, rcx

                     loc_26ee:
00000000000026ee         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1124
00000000000026f5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026fc         call       j_dcgettext                                 ; dcgettext
0000000000002701         mov        rcx, rbx
0000000000002704         mov        rsi, rax
0000000000002707         mov        rdx, r12
000000000000270a         mov        edi, 0x1
000000000000270f         xor        eax, eax
0000000000002711         call       j___printf_chk                              ; __printf_chk
0000000000002716         jmp        loc_2396

                     loc_271b:
000000000000271b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+788
0000000000002720         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002727         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x60f7
000000000000272e         mov        rsi, rax
0000000000002731         mov        edi, 0x1
0000000000002736         xor        eax, eax
0000000000002738         call       j___printf_chk                              ; __printf_chk
000000000000273d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000273f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002744         call       j_setlocale                                 ; setlocale
0000000000002749         test       rax, rax
000000000000274c         je         loc_2766

000000000000274e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6105
0000000000002755         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000275a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000275d         call       j_strncmp                                   ; strncmp
0000000000002762         test       eax, eax
0000000000002764         jne        loc_27a9

                     loc_2766:
0000000000002766         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1036
000000000000276d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002772         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002774         lea        r12, qword [aSssssssc+17]                   ; 0x607c
000000000000277b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x609d
0000000000002782         call       j_dcgettext                                 ; dcgettext
0000000000002787         lea        rcx, qword [aSssssssc+17]                   ; 0x607c
000000000000278e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002795         mov        rsi, rax
0000000000002798         mov        edi, 0x1
000000000000279d         xor        eax, eax
000000000000279f         call       j___printf_chk                              ; __printf_chk
00000000000027a4         jmp        loc_26ee

                     loc_27a9:
00000000000027a9         lea        r12, qword [aSssssssc+17]                   ; 0x607c, CODE XREF=usage+1060

                     loc_27b0:
00000000000027b0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+867
00000000000027b7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000027be         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027c0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027c5         call       j_dcgettext                                 ; dcgettext
00000000000027ca         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000027cd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000027d0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000027d5         jmp        loc_26a9
00000000000027da         align      32                                          ; End of unwind block (FDE at 0x6f7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
00000000000027e0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x6ff4), file_name
00000000000027e7         ret
                        ; endp
00000000000027e8         align      16                                          ; End of unwind block (FDE at 0x6ff4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
00000000000027f0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x7008), ignore_EPIPE
00000000000027f7         ret
                        ; endp
00000000000027f8         align      2048                                        ; End of unwind block (FDE at 0x7008)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002800         push       rbp                                         ; Begin of unwind block (FDE at 0x701c), DATA XREF=main+89
0000000000002801         push       rbx
0000000000002802         sub        rsp, 0x8
0000000000002806         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000280d         call       close_stream                                ; close_stream
0000000000002812         test       eax, eax
0000000000002814         je         loc_282c

0000000000002816         call       j___errno_location                          ; __errno_location
000000000000281b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002822         mov        rbx, rax
0000000000002825         je         loc_2843

0000000000002827         cmp        dword [rax], 0x20
000000000000282a         jne        loc_2843

                     loc_282c:
000000000000282c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002833         call       close_stream                                ; close_stream
0000000000002838         test       eax, eax
000000000000283a         jne        loc_2882

000000000000283c         add        rsp, 0x8
0000000000002840         pop        rbx
0000000000002841         pop        rbp
0000000000002842         ret
                        ; endp

                     loc_2843:
0000000000002843         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000284a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000284c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002851         call       j_dcgettext                                 ; dcgettext
0000000000002856         mov        rdi, qword [file_name]                      ; file_name
000000000000285d         mov        rbp, rax
0000000000002860         test       rdi, rdi
0000000000002863         je         loc_288d

0000000000002865         call       quotearg_colon                              ; quotearg_colon
000000000000286a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000286c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002873         mov        rcx, rax
0000000000002876         mov        r8, rbp
0000000000002879         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000287b         xor        eax, eax
000000000000287d         call       j_error                                     ; error

                     loc_2882:
0000000000002882         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002888         call       j__exit                                     ; _exit
                        ; endp

                     loc_288d:
000000000000288d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000288f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x620f
0000000000002896         mov        rcx, rax
0000000000002899         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000289b         xor        eax, eax
000000000000289d         call       j_error                                     ; error
00000000000028a2         jmp        loc_2882
00000000000028a4         align      16                                          ; End of unwind block (FDE at 0x701c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
00000000000028b0         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x704c)
                        ; endp
00000000000028b5         align      64                                          ; End of unwind block (FDE at 0x704c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
00000000000028c0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7060), CODE XREF=compare_files+234
00000000000028c3         je         loc_28e0

00000000000028c5         push       rbx
00000000000028c6         mov        ebx, esi
00000000000028c8         call       j_fileno                                    ; fileno
00000000000028cd         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
00000000000028cf         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
00000000000028d1         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
00000000000028d3         pop        rbx
00000000000028d4         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
00000000000028d6         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
00000000000028db         align      32

                     loc_28e0:
00000000000028e0         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
00000000000028e2         align      16                                          ; End of unwind block (FDE at 0x7060)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fopen_safer:
00000000000028f0         push       r12                                         ; Begin of unwind block (FDE at 0x707c), CODE XREF=compare_files+1263
00000000000028f2         push       rbp
00000000000028f3         mov        rbp, rsi
00000000000028f6         push       rbx
00000000000028f7         call       j_fopen                                     ; fopen
00000000000028fc         test       rax, rax
00000000000028ff         mov        rbx, rax
0000000000002902         je         loc_2911

0000000000002904         mov        rdi, rax                                    ; argument "__stream" for method j_fileno
0000000000002907         call       j_fileno                                    ; fileno
000000000000290c         cmp        eax, 0x2
000000000000290f         jbe        loc_2920

                     loc_2911:
0000000000002911         mov        rax, rbx                                    ; CODE XREF=fopen_safer+18, fopen_safer+91, fopen_safer+115, fopen_safer+145
0000000000002914         pop        rbx
0000000000002915         pop        rbp
0000000000002916         pop        r12
0000000000002918         ret
                        ; endp
0000000000002919         align      32

                     loc_2920:
0000000000002920         mov        edi, eax                                    ; CODE XREF=fopen_safer+31
0000000000002922         call       dup_safer                                   ; dup_safer
0000000000002927         test       eax, eax
0000000000002929         mov        r12d, eax
000000000000292c         js         loc_2968

000000000000292e         mov        rdi, rbx
0000000000002931         call       rpl_fclose                                  ; rpl_fclose
0000000000002936         test       eax, eax
0000000000002938         jne        loc_294d

000000000000293a         mov        rsi, rbp                                    ; argument "__modes" for method j_fdopen
000000000000293d         mov        edi, r12d                                   ; argument "__fd" for method j_fdopen
0000000000002940         call       j_fdopen                                    ; fdopen
0000000000002945         test       rax, rax
0000000000002948         mov        rbx, rax
000000000000294b         jne        loc_2911

                     loc_294d:
000000000000294d         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+72
0000000000002952         mov        ebp, dword [rax]
0000000000002954         mov        rbx, rax
0000000000002957         mov        edi, r12d                                   ; argument "__fd" for method j_close
000000000000295a         call       j_close                                     ; close
000000000000295f         mov        dword [rbx], ebp
0000000000002961         xor        ebx, ebx
0000000000002963         jmp        loc_2911
0000000000002965         align      8

                     loc_2968:
0000000000002968         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+60
000000000000296d         mov        r12d, dword [rax]
0000000000002970         mov        rbp, rax
0000000000002973         mov        rdi, rbx
0000000000002976         call       rpl_fclose                                  ; rpl_fclose
000000000000297b         xor        ebx, ebx
000000000000297d         mov        dword [rbp], r12d
0000000000002981         jmp        loc_2911
0000000000002983         align      16                                          ; End of unwind block (FDE at 0x707c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000002990         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x70ac), CODE XREF=main+84, rpl_mbrtowc+71
0000000000002994         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002996         call       j_setlocale                                 ; setlocale
000000000000299b         mov        rdx, rax
000000000000299e         mov        eax, 0x1
00000000000029a3         test       rdx, rdx
00000000000029a6         je         loc_29c5

00000000000029a8         lea        rdi, qword [aSS+7]                          ; 0x6212
00000000000029af         mov        ecx, 0x2
00000000000029b4         mov        rsi, rdx
00000000000029b7         rep  cmpsb byte [rsi], byte [rdi]
00000000000029b9         seta       cl
00000000000029bc         sbb        cl, 0x0
00000000000029bf         xor        eax, eax
00000000000029c1         test       cl, cl
00000000000029c3         jne        loc_29d0

                     loc_29c5:
00000000000029c5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000029c9         ret
                        ; endp
00000000000029ca         align      16

                     loc_29d0:
00000000000029d0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
00000000000029d7         mov        ecx, 0x6
00000000000029dc         mov        rsi, rdx
00000000000029df         rep  cmpsb byte [rsi], byte [rdi]
00000000000029e1         seta       al
00000000000029e4         sbb        al, 0x0
00000000000029e6         test       al, al
00000000000029e8         setne      al
00000000000029eb         add        rsp, 0x8
00000000000029ef         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     umaxtostr:
00000000000029f0         lea        rcx, qword [rsi+0x14]                       ; End of unwind block (FDE at 0x70ac), Begin of unwind block (FDE at 0x70cc), CODE XREF=compare_files+1106, compare_files+1134, compare_files+1164
00000000000029f4         mov        byte [rsi+0x14], 0x0
00000000000029f8         movabs     rsi, 0xcccccccccccccccd
0000000000002a02         nop        word [rax+rax]

                     loc_2a08:
0000000000002a08         mov        rax, rdi                                    ; CODE XREF=umaxtostr+60
0000000000002a0b         sub        rcx, 0x1
0000000000002a0f         mul        rsi
0000000000002a12         shr        rdx, 0x3
0000000000002a16         lea        rax, qword [rdx+rdx*4]
0000000000002a1a         add        rax, rax
0000000000002a1d         sub        rdi, rax
0000000000002a20         add        edi, 0x30
0000000000002a23         test       rdx, rdx
0000000000002a26         mov        byte [rcx], dil
0000000000002a29         mov        rdi, rdx
0000000000002a2c         jne        loc_2a08

0000000000002a2e         mov        rax, rcx
0000000000002a31         ret
                        ; endp
0000000000002a32         align      64                                          ; End of unwind block (FDE at 0x70cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     initbuffer:
0000000000002a40         pxor       xmm0, xmm0                                  ; Begin of unwind block (FDE at 0x70e4), CODE XREF=compare_files+124
0000000000002a44         mov        qword [rdi+0x10], 0x0
0000000000002a4c         movups     xmmword [rdi], xmm0
0000000000002a4f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_48: int64_t, -72


                     readlinebuffer_delim:
0000000000002a50         push       r15                                         ; End of unwind block (FDE at 0x70e4), Begin of unwind block (FDE at 0x70f8), CODE XREF=compare_files+266, compare_files+640, readlinebuffer+5
0000000000002a52         push       r14
0000000000002a54         push       r13
0000000000002a56         push       r12
0000000000002a58         push       rbp
0000000000002a59         push       rbx
0000000000002a5a         sub        rsp, 0x18
0000000000002a5e         mov        r13, qword [rdi+0x10]
0000000000002a62         mov        r8, qword [rdi]
0000000000002a65         add        r8, r13
0000000000002a68         test       byte [rsi], 0x10
0000000000002a6b         jne        loc_2b40

0000000000002a71         mov        r14, rdi
0000000000002a74         mov        rbp, rsi
0000000000002a77         mov        rbx, r13
0000000000002a7a         movsx      r15d, dl
0000000000002a7e         jmp        loc_2a8b

                     loc_2a80:
0000000000002a80         cmp        r12d, r15d                                  ; CODE XREF=readlinebuffer_delim+90
0000000000002a83         lea        rbx, qword [rsi+1]
0000000000002a87         mov        byte [rsi], cl
0000000000002a89         je         loc_2ae6

                     loc_2a8b:
0000000000002a8b         mov        rcx, qword [rbp+8]                          ; CODE XREF=readlinebuffer_delim+46, readlinebuffer_delim+148
0000000000002a8f         cmp        rcx, qword [rbp+0x10]
0000000000002a93         jae        loc_2b00

0000000000002a95         lea        rax, qword [rcx+1]
0000000000002a99         mov        qword [rbp+8], rax
0000000000002a9d         movzx      r12d, byte [rcx]
0000000000002aa1         mov        ecx, r12d

                     loc_2aa4:
0000000000002aa4         cmp        rbx, r8                                     ; CODE XREF=readlinebuffer_delim+230, readlinebuffer_delim+259
0000000000002aa7         mov        rsi, rbx
0000000000002aaa         jne        loc_2a80

0000000000002aac         mov        rbx, qword [r14]
0000000000002aaf         mov        rsi, r14
0000000000002ab2         mov        rdi, r13
0000000000002ab5         mov        byte [rsp+0x48+var_39], dl
0000000000002ab9         mov        byte [rsp+0x48+var_48], cl
0000000000002abc         call       x2realloc                                   ; x2realloc
0000000000002ac1         mov        r8, qword [r14]
0000000000002ac4         movzx      ecx, byte [rsp+0x48+var_48]
0000000000002ac8         lea        rsi, qword [rax+rbx]
0000000000002acc         mov        qword [r14+0x10], rax
0000000000002ad0         mov        r13, rax
0000000000002ad3         movzx      edx, byte [rsp+0x48+var_39]
0000000000002ad8         lea        rbx, qword [rsi+1]
0000000000002adc         add        r8, rax
0000000000002adf         cmp        r12d, r15d
0000000000002ae2         mov        byte [rsi], cl
0000000000002ae4         jne        loc_2a8b

                     loc_2ae6:
0000000000002ae6         sub        rbx, r13                                    ; CODE XREF=readlinebuffer_delim+57, readlinebuffer_delim+223
0000000000002ae9         mov        rax, r14
0000000000002aec         mov        qword [r14+8], rbx
0000000000002af0         add        rsp, 0x18
0000000000002af4         pop        rbx
0000000000002af5         pop        rbp
0000000000002af6         pop        r12
0000000000002af8         pop        r13
0000000000002afa         pop        r14
0000000000002afc         pop        r15
0000000000002afe         ret
                        ; endp
0000000000002aff         align      256

                     loc_2b00:
0000000000002b00         mov        rdi, rbp                                    ; argument #1 for method j___uflow, CODE XREF=readlinebuffer_delim+67
0000000000002b03         mov        byte [rsp+0x48+var_39], dl
0000000000002b07         mov        qword [rsp+0x48+var_48], r8
0000000000002b0b         call       j___uflow                                   ; __uflow
0000000000002b10         cmp        eax, 0xffffffff
0000000000002b13         mov        r12d, eax
0000000000002b16         mov        r8, qword [rsp+0x48+var_48]
0000000000002b1a         movzx      edx, byte [rsp+0x48+var_39]
0000000000002b1f         jne        loc_2b51

0000000000002b21         cmp        r13, rbx
0000000000002b24         je         loc_2b40

0000000000002b26         test       byte [rbp], 0x20
0000000000002b2a         jne        loc_2b40

0000000000002b2c         cmp        byte [rbx-1], dl
0000000000002b2f         je         loc_2ae6

0000000000002b31         mov        r12d, r15d
0000000000002b34         mov        ecx, edx
0000000000002b36         jmp        loc_2aa4
0000000000002b3b         align      64

                     loc_2b40:
0000000000002b40         add        rsp, 0x18                                   ; CODE XREF=readlinebuffer_delim+27, readlinebuffer_delim+212, readlinebuffer_delim+218
0000000000002b44         xor        eax, eax
0000000000002b46         pop        rbx
0000000000002b47         pop        rbp
0000000000002b48         pop        r12
0000000000002b4a         pop        r13
0000000000002b4c         pop        r14
0000000000002b4e         pop        r15
0000000000002b50         ret
                        ; endp

                     loc_2b51:
0000000000002b51         mov        ecx, eax                                    ; CODE XREF=readlinebuffer_delim+207
0000000000002b53         jmp        loc_2aa4
0000000000002b58         align      32                                          ; End of unwind block (FDE at 0x70f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     readlinebuffer:
0000000000002b60         mov        edx, 0xa                                    ; Begin of unwind block (FDE at 0x715c)
0000000000002b65         jmp        readlinebuffer_delim                        ; readlinebuffer_delim
                        ; endp
0000000000002b6a         align      16                                          ; End of unwind block (FDE at 0x715c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     freebuffer:
0000000000002b70         mov        rdi, qword [rdi+0x10]                       ; Begin of unwind block (FDE at 0x7170), argument "__ptr" for method j_free
0000000000002b74         jmp        j_free                                      ; free
                        ; endp
0000000000002b79         align      128                                         ; End of unwind block (FDE at 0x7170)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     memcmp2:
0000000000002b80         push       rbp                                         ; Begin of unwind block (FDE at 0x7184), CODE XREF=check_order.isra.1.part.2+63
0000000000002b81         push       rbx
0000000000002b82         mov        rbp, rsi
0000000000002b85         mov        rsi, rdx                                    ; argument "__s2" for method j_memcmp
0000000000002b88         mov        rdx, rcx
0000000000002b8b         mov        rbx, rcx
0000000000002b8e         sub        rsp, 0x8
0000000000002b92         cmp        rbp, rcx
0000000000002b95         cmovbe     rdx, rbp                                    ; argument "__n" for method j_memcmp
0000000000002b99         call       j_memcmp                                    ; memcmp
0000000000002b9e         test       eax, eax
0000000000002ba0         jne        loc_2bad

0000000000002ba2         cmp        rbp, rbx
0000000000002ba5         jb         loc_2bb8

0000000000002ba7         seta       al
0000000000002baa         movzx      eax, al

                     loc_2bad:
0000000000002bad         add        rsp, 0x8                                    ; CODE XREF=memcmp2+32, memcmp2+61
0000000000002bb1         pop        rbx
0000000000002bb2         pop        rbp
0000000000002bb3         ret
                        ; endp
0000000000002bb4         align      8

                     loc_2bb8:
0000000000002bb8         mov        eax, 0xffffffff                             ; CODE XREF=memcmp2+37
0000000000002bbd         jmp        loc_2bad
0000000000002bbf         align      64                                          ; End of unwind block (FDE at 0x7184)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002bc0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x71b4), CODE XREF=main+26
0000000000002bc3         push       rbx
0000000000002bc4         je         loc_2c3d

0000000000002bc6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002bcb         mov        rbx, rdi
0000000000002bce         call       j_strrchr                                   ; strrchr
0000000000002bd3         test       rax, rax
0000000000002bd6         je         loc_2c2d

0000000000002bd8         lea        r8, qword [rax+1]
0000000000002bdc         mov        rdx, r8
0000000000002bdf         sub        rdx, rbx
0000000000002be2         cmp        rdx, 0x6
0000000000002be6         jle        loc_2c2d

0000000000002be8         lea        rsi, qword [rax-6]
0000000000002bec         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002bf3         mov        ecx, 0x7
0000000000002bf8         rep  cmpsb byte [rsi], byte [rdi]
0000000000002bfa         seta       dl
0000000000002bfd         sbb        dl, 0x0
0000000000002c00         test       dl, dl
0000000000002c02         jne        loc_2c2d

0000000000002c04         lea        rdi, qword [aLibs+8]                        ; 0x6260
0000000000002c0b         mov        ecx, 0x3
0000000000002c10         mov        rsi, r8
0000000000002c13         mov        rbx, r8
0000000000002c16         rep  cmpsb byte [rsi], byte [rdi]
0000000000002c18         seta       dl
0000000000002c1b         sbb        dl, 0x0
0000000000002c1e         test       dl, dl
0000000000002c20         jne        loc_2c2d

0000000000002c22         lea        rbx, qword [rax+4]
0000000000002c26         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2c2d:
0000000000002c2d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002c34         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002c3b         pop        rbx
0000000000002c3c         ret
                        ; endp

                     loc_2c3d:
0000000000002c3d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002c44         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002c4b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002c50         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002c55         call       j_fwrite                                    ; fwrite
0000000000002c5a         call       j_abort                                     ; abort
                        ; endp
0000000000002c5f         align      32                                          ; End of unwind block (FDE at 0x71b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002c60         push       rbp                                         ; Begin of unwind block (FDE at 0x71d4), CODE XREF=sub_3e00+181, sub_3e00+203
0000000000002c61         push       rbx
0000000000002c62         mov        rbp, rdi
0000000000002c65         mov        ebx, esi
0000000000002c67         sub        rsp, 0x8
0000000000002c6b         call       locale_charset                              ; locale_charset
0000000000002c70         movzx      edx, byte [rax]
0000000000002c73         and        edx, 0xffffffdf
0000000000002c76         cmp        dl, 0x55
0000000000002c79         je         loc_2cf0

0000000000002c7b         cmp        dl, 0x47
0000000000002c7e         je         loc_2ca0

                     loc_2c80:
0000000000002c80         lea        rax, qword [aLibs+27]                       ; 0x6273, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002c87         lea        rdx, qword [aLibs+29]                       ; 0x6275
0000000000002c8e         cmp        ebx, 0x9
0000000000002c91         cmovne     rax, rdx
0000000000002c95         add        rsp, 0x8
0000000000002c99         pop        rbx
0000000000002c9a         pop        rbp
0000000000002c9b         ret
                        ; endp
0000000000002c9c         align      32

                     loc_2ca0:
0000000000002ca0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002ca4         and        edx, 0xffffffdf
0000000000002ca7         cmp        dl, 0x42
0000000000002caa         jne        loc_2c80

0000000000002cac         cmp        byte [rax+2], 0x31
0000000000002cb0         jne        loc_2c80

0000000000002cb2         cmp        byte [rax+3], 0x38
0000000000002cb6         jne        loc_2c80

0000000000002cb8         cmp        byte [rax+4], 0x30
0000000000002cbc         jne        loc_2c80

0000000000002cbe         cmp        byte [rax+5], 0x33
0000000000002cc2         jne        loc_2c80

0000000000002cc4         cmp        byte [rax+6], 0x30
0000000000002cc8         jne        loc_2c80

0000000000002cca         cmp        byte [rax+7], 0x0
0000000000002cce         jne        loc_2c80

0000000000002cd0         cmp        byte [rbp], 0x60
0000000000002cd4         lea        rax, qword [aLibs+20]                       ; 0x626c
0000000000002cdb         lea        rdx, qword [aLibs+24]                       ; 0x6270
0000000000002ce2         cmovne     rax, rdx
0000000000002ce6         add        rsp, 0x8
0000000000002cea         pop        rbx
0000000000002ceb         pop        rbp
0000000000002cec         ret
                        ; endp
0000000000002ced         align      16

                     loc_2cf0:
0000000000002cf0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002cf4         and        edx, 0xffffffdf
0000000000002cf7         cmp        dl, 0x54
0000000000002cfa         jne        loc_2c80

0000000000002cfc         movzx      edx, byte [rax+2]
0000000000002d00         and        edx, 0xffffffdf
0000000000002d03         cmp        dl, 0x46
0000000000002d06         jne        loc_2c80

0000000000002d0c         cmp        byte [rax+3], 0x2d
0000000000002d10         jne        loc_2c80

0000000000002d16         cmp        byte [rax+4], 0x38
0000000000002d1a         jne        loc_2c80

0000000000002d20         cmp        byte [rax+5], 0x0
0000000000002d24         jne        loc_2c80

0000000000002d2a         cmp        byte [rbp], 0x60
0000000000002d2e         lea        rax, qword [aLibs+12]                       ; 0x6264
0000000000002d35         lea        rdx, qword [aLibs+16]                       ; 0x6268
0000000000002d3c         cmovne     rax, rdx
0000000000002d40         add        rsp, 0x8
0000000000002d44         pop        rbx
0000000000002d45         pop        rbp
0000000000002d46         ret
                        ; endp
0000000000002d47         align      16                                          ; End of unwind block (FDE at 0x71d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002d50         push       r15                                         ; Begin of unwind block (FDE at 0x7218), CODE XREF=sub_3490+1165, sub_3e00+283, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002d52         push       r14
0000000000002d54         mov        r15d, r8d
0000000000002d57         push       r13
0000000000002d59         push       r12
0000000000002d5b         mov        r14, rdi
0000000000002d5e         push       rbp
0000000000002d5f         push       rbx
0000000000002d60         mov        ebx, r9d
0000000000002d63         mov        r13, rsi
0000000000002d66         mov        rbp, rcx
0000000000002d69         and        ebx, 0x2
0000000000002d6c         sub        rsp, 0xb8
0000000000002d73         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002d7b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002d80         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002d85         mov        dword [rsp+0xe8+var_70], r9d
0000000000002d8a         mov        qword [rsp+0xe8+var_C8], rax
0000000000002d8f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002d97         mov        qword [rsp+0xe8+var_80], rax
0000000000002d9c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002da4         mov        qword [rsp+0xe8+var_88], rax
0000000000002da9         mov        rax, qword [fs:0x28]
0000000000002db2         mov        qword [rsp+0xe8+var_40], rax
0000000000002dba         xor        eax, eax
0000000000002dbc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002dc1         cmp        r15d, 0xa
0000000000002dc5         mov        qword [rsp+0xe8+var_90], rax
0000000000002dca         ja         loc_3f7f

0000000000002dd0         lea        rcx, qword [switch_table_62e0]              ; switch_table_62e0
0000000000002dd7         mov        edx, r15d
0000000000002dda         movsxd     rax, dword [rcx+rdx*4]
0000000000002dde         add        rax, rcx
0000000000002de1         jmp        rax                                         ; switch statement using table at 0x62e0, with 11 cases, 0x2de3,0x39b4,0x3a10,0x3a65,0x3aaa,0x3ae4,0x3b8a,0x3bc4,0x3db8

                     loc_2de3:
0000000000002de3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3490+1318
0000000000002de8         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002ded         xor        r12d, r12d
0000000000002df0         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002df9         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002dfe         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2e03:
0000000000002e03         lea        rax, qword [aLibs+29]                       ; 0x6275, CODE XREF=sub_3490+1876
0000000000002e0a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002e13         xor        r15d, r15d
0000000000002e16         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002e1e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2e23:
0000000000002e23         xor        r11d, r11d                                  ; CODE XREF=sub_3490+180, sub_3490+1400, sub_3490+1488, sub_3490+1557, sub_3490+1615, sub_3490+1781, sub_3490+1839, sub_3490+2408, sub_3e00+69
0000000000002e26         mov        rax, rbp
0000000000002e29         mov        r8d, r12d
0000000000002e2c         mov        rbp, r11
0000000000002e2f         mov        r11, rax
0000000000002e32         nop        word [rax+rax]

                     loc_2e38:
0000000000002e38         cmp        r11, rbp                                    ; CODE XREF=sub_2f40+194
0000000000002e3b         setne      r12b
0000000000002e3f         cmp        r11, 0xffffffffffffffff
0000000000002e43         jne        loc_2e52

0000000000002e45         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002e4a         cmp        byte [rax+rbp], 0x0
0000000000002e4e         setne      r12b

                     loc_2e52:
0000000000002e52         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002e55         je         loc_34b0

0000000000002e5b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002e60         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002e65         lea        r9, qword [rdi+rbp]
0000000000002e69         setne      al
0000000000002e6c         and        al, byte [rsp+0xe8+var_DB]
0000000000002e70         mov        r10d, eax
0000000000002e73         je         loc_2f20

0000000000002e79         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002e7e         test       rax, rax
0000000000002e81         je         loc_32b0

0000000000002e87         cmp        r11, 0xffffffffffffffff
0000000000002e8b         lea        rbx, qword [rbp+rax]
0000000000002e90         jne        loc_2ec0

0000000000002e92         cmp        rax, 0x1
0000000000002e96         jbe        loc_2ec0

0000000000002e98         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002e9d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002ea2         mov        qword [rsp+0xe8+var_C0], r9
0000000000002ea7         call       j_strlen                                    ; strlen
0000000000002eac         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002eb2         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002eb8         mov        r11, rax
0000000000002ebb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_2ec0:
0000000000002ec0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000002ec3         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002ec8         ja         loc_3480

0000000000002ece         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000002ed3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000002ed8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000002edb         mov        qword [rsp+0xe8+var_A8], r11
0000000000002ee0         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002ee5         mov        qword [rsp+0xe8+var_B8], r9
0000000000002eea         call       j_memcmp                                    ; memcmp
0000000000002eef         test       eax, eax
0000000000002ef1         mov        r9, qword [rsp+0xe8+var_B8]
0000000000002ef6         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002efc         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002f01         jne        loc_3480

0000000000002f07         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002f0c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002f12         jne        loc_3e95

0000000000002f18         nop        dword [rax+rax]

                     loc_2f20:
0000000000002f20         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3470+19
0000000000002f24         cmp        bl, 0x7e
0000000000002f27         ja         loc_3248

0000000000002f2d         lea        rcx, qword [switch_table_62e0+44]           ; 0x630c
0000000000002f34         movzx      edx, bl
0000000000002f37         movsxd     rax, dword [rcx+rdx*4]
0000000000002f3b         add        rax, rcx
0000000000002f3e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2f40:
0000000000002f40         xor        r10d, r10d
0000000000002f43         cmp        r11, 0x1
0000000000002f47         setne      al
0000000000002f4a         cmp        r11, 0xffffffffffffffff
0000000000002f4e         jne        loc_2f5c

0000000000002f50         mov        rax, qword [rsp+arg_8]
0000000000002f55         cmp        byte [rax+1], 0x0
0000000000002f59         setne      al

                     loc_2f5c:
0000000000002f5c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2f40+14
0000000000002f61         sete       dl
0000000000002f64         test       al, al
0000000000002f66         je         loc_31b8

                     loc_2f6c:
0000000000002f6c         xor        r12d, r12d                                  ; CODE XREF=sub_31b0+11
0000000000002f6f         xor        eax, eax
0000000000002f71         nop        dword [rax]
                        ; endp

                     loc_2f78:
0000000000002f78         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3160+50, sub_3230+119
0000000000002f7d         jne        loc_3092

0000000000002f83         test       dl, dl
0000000000002f85         jne        loc_3092

                     loc_2f8b:
0000000000002f8b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3040+87
0000000000002f90         test       rsi, rsi
0000000000002f93         je         loc_2fa9

0000000000002f95         mov        edx, ebx
0000000000002f97         shr        dl, 0x5
0000000000002f9a         movzx      edx, dl
0000000000002f9d         mov        edx, dword [rsi+rdx*4]
0000000000002fa0         bt         edx, ebx
0000000000002fa3         jb         loc_30f3

                     loc_2fa9:
0000000000002fa9         test       r10b, r10b                                  ; CODE XREF=sub_2f40+83, sub_3040+93
0000000000002fac         jne        loc_30f3

0000000000002fb2         xor        eax, 0x1
0000000000002fb5         add        rbp, 0x1
0000000000002fb9         and        eax, r8d

                     loc_2fbc:
0000000000002fbc         test       al, al                                      ; CODE XREF=sub_3490+936
0000000000002fbe         je         loc_2fe0

0000000000002fc0         cmp        r13, r15
0000000000002fc3         jbe        loc_2fca

0000000000002fc5         mov        byte [r14+r15], 0x27

                     loc_2fca:
0000000000002fca         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2f40+131
0000000000002fce         cmp        r13, rax
0000000000002fd1         jbe        loc_2fd9

0000000000002fd3         mov        byte [r14+r15+1], 0x27

                     loc_2fd9:
0000000000002fd9         add        r15, 0x2                                    ; CODE XREF=sub_2f40+145
0000000000002fdd         xor        r8d, r8d

                     loc_2fe0:
0000000000002fe0         cmp        r15, r13                                    ; CODE XREF=sub_2f40+126, sub_3040+275, sub_3490+869
0000000000002fe3         jae        loc_2fe9

0000000000002fe5         mov        byte [r14+r15], bl

                     loc_2fe9:
0000000000002fe9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2f40+163
0000000000002fee         add        r15, 0x1
0000000000002ff2         mov        eax, 0x0
0000000000002ff7         test       r12b, r12b
0000000000002ffa         cmove      edi, eax
0000000000002ffd         mov        byte [rsp+0xe8+var_DA], dil
0000000000003002         jmp        loc_2e38
0000000000003007         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3010:
0000000000003010         xor        r10d, r10d
0000000000003013         mov        eax, dword [rsp+arg_0]
0000000000003017         cmp        eax, 0x2
000000000000301a         je         loc_35d8

0000000000003020         cmp        eax, 0x5
0000000000003023         je         loc_3598

0000000000003029         cmp        eax, 0x2
000000000000302c         mov        ebx, 0x3f
0000000000003031         sete       dl
0000000000003034         xor        r12d, r12d
0000000000003037         xor        eax, eax
0000000000003039         jmp        sub_2f40+56
                        ; endp
000000000000303e         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3040:
0000000000003040         xor        r10d, r10d
0000000000003043         cmp        dword [rsp+arg_0], 0x2
0000000000003048         je         loc_3550

000000000000304e         mov        byte [rsp+arg_74], r12b
0000000000003053         xor        edx, edx
0000000000003055         xor        eax, eax
0000000000003057         mov        ebx, 0x27
000000000000305c         jmp        sub_2f40+56
                        ; endp
0000000000003061         nop        dword [rax]
0000000000003068         mov        edx, 0x9
000000000000306d         mov        ebx, 0x74

                     loc_3072:
0000000000003072         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3200+10, sub_32f0+37, sub_3430+53
0000000000003077         sete       al
000000000000307a         and        al, byte [rsp+arg_7]
000000000000307e         jne        sub_31b0+30

0000000000003084         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3040+114
0000000000003089         jne        loc_30f0

                     loc_308b:
000000000000308b         mov        ebx, edx                                    ; CODE XREF=sub_3160+18
000000000000308d         xor        r12d, r12d
0000000000003090         xor        eax, eax
                        ; endp

                     loc_3092:
0000000000003092         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2f40+61, sub_2f40+69
0000000000003097         jne        loc_2f8b

000000000000309d         jmp        loc_2fa9
00000000000030a2         nop        word [rax+rax]
00000000000030a8         mov        edx, 0x8
00000000000030ad         mov        ebx, 0x62
00000000000030b2         jmp        sub_3040+68
00000000000030b4         nop        dword [rax]
00000000000030b8         cmp        dword [rsp+8], 0x2
00000000000030bd         je         sub_3490                                    ; sub_3490
00000000000030c3         cmp        byte [rsp+0xd], 0x0
00000000000030c8         je         sub_32d0+16

                     loc_30ce:
00000000000030ce         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_32d0+8
00000000000030d3         je         loc_32e0

00000000000030d9         cmp        qword [rsp+arg_10], 0x0
00000000000030df         jne        loc_349b

00000000000030e5         mov        ebx, 0x5c
00000000000030ea         nop        word [rax+rax]
                        ; endp

                     loc_30f0:
00000000000030f0         xor        r12d, r12d                                  ; CODE XREF=sub_3040+73, sub_3430+29
                        ; endp

                     loc_30f3:
00000000000030f3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2f40+99, sub_2f40+108
00000000000030f8         sete       dl
00000000000030fb         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003100         mov        eax, edx
0000000000003102         jne        loc_3958

0000000000003108         mov        eax, r8d
000000000000310b         xor        eax, 0x1
000000000000310e         and        al, dl
0000000000003110         je         loc_3141

0000000000003112         cmp        r13, r15
0000000000003115         jbe        loc_311c

0000000000003117         mov        byte [r14+r15], 0x27

                     loc_311c:
000000000000311c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3040+213
0000000000003120         cmp        r13, rdx
0000000000003123         jbe        loc_312b

0000000000003125         mov        byte [r14+r15+1], 0x24

                     loc_312b:
000000000000312b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3040+227
000000000000312f         cmp        r13, rdx
0000000000003132         jbe        loc_313a

0000000000003134         mov        byte [r14+r15+2], 0x27

                     loc_313a:
000000000000313a         add        r15, 0x3                                    ; CODE XREF=sub_3040+242
000000000000313e         mov        r8d, eax

                     loc_3141:
0000000000003141         cmp        r13, r15                                    ; CODE XREF=sub_3040+208
0000000000003144         jbe        loc_314b

0000000000003146         mov        byte [r14+r15], 0x5c

                     loc_314b:
000000000000314b         add        r15, 0x1                                    ; CODE XREF=sub_3040+260
000000000000314f         add        rbp, 0x1
0000000000003153         jmp        loc_2fe0
0000000000003158         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3160:
0000000000003160         cmp        byte [rsp+arg_5], 0x0
0000000000003165         jne        loc_3333

000000000000316b         xor        edx, edx
000000000000316d         test       byte [rsp+arg_70], 0x1
0000000000003172         je         loc_308b

0000000000003178         add        rbp, 0x1
000000000000317c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003181         nop        dword [rax]
0000000000003188         cmp        dword [rsp+8], 0x2
000000000000318d         sete       dl
0000000000003190         xor        eax, eax
0000000000003192         jmp        sub_2f40+56
0000000000003197         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_31a0:
00000000000031a0         mov        edx, 0x7
00000000000031a5         mov        ebx, 0x61
00000000000031aa         jmp        sub_3040+68
                        ; endp
00000000000031af         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_31b0:
00000000000031b0         cmp        dword [rsp+8], 0x2
00000000000031b5         sete       dl
                        ; endp

                     loc_31b8:
00000000000031b8         test       rbp, rbp                                    ; CODE XREF=sub_2f40+38, sub_33d0+35
00000000000031bb         jne        loc_2f6c

00000000000031c1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3400+43
00000000000031c6         and        al, dl
00000000000031c8         je         sub_2f40+56

00000000000031ce         mov        rbp, r11
00000000000031d1         mov        dword [rsp+arg_0], 0x2
00000000000031d9         jmp        sub_3490+1097
                        ; endp
00000000000031de         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_31e0:
00000000000031e0         cmp        dword [rsp+arg_0], 0x2
00000000000031e5         sete       dl
00000000000031e8         xor        r12d, r12d
00000000000031eb         jmp        sub_31b0+17
                        ; endp
00000000000031ed         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_31f0:
00000000000031f0         cmp        dword [rsp+arg_0], 0x2
00000000000031f5         mov        ebx, 0x20
00000000000031fa         sete       dl
00000000000031fd         jmp        sub_31b0+17
                        ; endp
00000000000031ff         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3200:
0000000000003200         mov        edx, 0xd
0000000000003205         mov        ebx, 0x72
000000000000320a         jmp        loc_3072
000000000000320f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3210:
0000000000003210         mov        edx, 0xc
0000000000003215         mov        ebx, 0x66
000000000000321a         jmp        sub_3040+68
                        ; endp
000000000000321f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3220:
0000000000003220         mov        edx, 0xb
0000000000003225         mov        ebx, 0x76
000000000000322a         jmp        sub_3040+68
                        ; endp
000000000000322f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3230:
0000000000003230         mov        edx, 0xa
0000000000003235         mov        ebx, 0x6e
000000000000323a         jmp        sub_3040+50
                        ; endp
000000000000323f         align      64

                     loc_3240:
0000000000003240         xor        r10d, r10d                                  ; CODE XREF=sub_3230+135
0000000000003243         nop        dword [rax+rax]

                     loc_3248:
0000000000003248         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000324e         jne        loc_35f8

0000000000003254         mov        qword [rsp+0xe8+var_B0], r11
0000000000003259         mov        byte [rsp+0xe8+var_B8], r8b
000000000000325e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003263         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003268         mov        rcx, qword [rax]
000000000000326b         movzx      edx, bl
000000000000326e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003274         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000327a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000327f         mov        edi, 0x1
0000000000003284         movzx      eax, word [rcx+rdx*2]
0000000000003288         and        ax, 0x4000
000000000000328c         setne      r12b
0000000000003290         sete       al
0000000000003293         and        al, byte [rsp+0xe8+var_DB]

                     loc_3297:
0000000000003297         test       al, al                                      ; CODE XREF=sub_3490+2221
0000000000003299         jne        loc_3c31

000000000000329f         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000032a4         sete       dl
00000000000032a7         jmp        loc_2f78
00000000000032ac         align      16

                     loc_32b0:
00000000000032b0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
00000000000032b4         cmp        bl, 0x7e
00000000000032b7         ja         loc_3240

00000000000032b9         lea        rcx, qword [switch_table_62e0+552]          ; 0x6508
00000000000032c0         movzx      edx, bl
00000000000032c3         movsxd     rax, dword [rcx+rdx*4]
00000000000032c7         add        rax, rcx
00000000000032ca         jmp        rax
                        ; endp
00000000000032cc         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_32d0:
00000000000032d0         xor        r10d, r10d
00000000000032d3         cmp        byte [rsp+arg_5], 0x0
00000000000032d8         jne        loc_30ce

00000000000032de         nop

                     loc_32e0:
00000000000032e0         mov        edx, 0x5c                                   ; CODE XREF=sub_3040+136, sub_3040+147
00000000000032e5         mov        ebx, 0x5c
00000000000032ea         jmp        sub_3040+68
                        ; endp
00000000000032ef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32f0:
00000000000032f0         mov        edx, 0xc
00000000000032f5         xor        r10d, r10d
00000000000032f8         mov        ebx, 0x66
00000000000032fd         jmp        sub_3040+68
                        ; endp
0000000000003302         nop        word [rax+rax]
0000000000003308         mov        edx, 0xa
000000000000330d         xor        r10d, r10d
0000000000003310         mov        ebx, 0x6e
0000000000003315         jmp        sub_3040+50
000000000000331a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3320:
0000000000003320         mov        ebx, 0x61
0000000000003325         jmp        sub_3040+176
                        ; endp
000000000000332a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3330:
0000000000003330         xor        r10d, r10d
                        ; endp

                     loc_3333:
0000000000003333         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3160+5
0000000000003338         sete       dl
000000000000333b         cmp        byte [rsp+arg_7], 0x0
0000000000003340         jne        loc_3eda

0000000000003346         mov        eax, r8d
0000000000003349         mov        rcx, r15
000000000000334c         xor        eax, 0x1
000000000000334f         and        al, dl
0000000000003351         je         loc_3380

0000000000003353         cmp        r13, r15
0000000000003356         jbe        loc_335d

0000000000003358         mov        byte [r14+r15], 0x27

                     loc_335d:
000000000000335d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3330+38
0000000000003361         cmp        r13, rcx
0000000000003364         jbe        loc_336c

0000000000003366         mov        byte [r14+r15+1], 0x24

                     loc_336c:
000000000000336c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3330+52
0000000000003370         cmp        r13, rcx
0000000000003373         ja         loc_39a9

                     loc_3379:
0000000000003379         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3490+1311
000000000000337d         mov        r8d, eax

                     loc_3380:
0000000000003380         cmp        r13, rcx                                    ; CODE XREF=sub_3330+33
0000000000003383         jbe        loc_338a

0000000000003385         mov        byte [r14+rcx], 0x5c

                     loc_338a:
000000000000338a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3330+83
000000000000338f         lea        r15, qword [rcx+1]
0000000000003393         je         loc_3999

0000000000003399         lea        rax, qword [rbp+1]
000000000000339d         cmp        rax, r11
00000000000033a0         jae        loc_33bb

00000000000033a2         mov        rax, qword [rsp+arg_8]
00000000000033a7         movzx      eax, byte [rax+rbp+1]
00000000000033ac         mov        byte [rsp+arg_20], al
00000000000033b0         sub        eax, 0x30
00000000000033b3         cmp        al, 0x9
00000000000033b5         jbe        loc_3be9

                     loc_33bb:
00000000000033bb         mov        eax, r12d                                   ; CODE XREF=sub_3330+112
00000000000033be         mov        ebx, 0x30
00000000000033c3         xor        r12d, r12d
00000000000033c6         jmp        sub_2f40+56
                        ; endp
00000000000033cb         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_33d0:
00000000000033d0         cmp        dword [rsp+arg_0], 0x2
00000000000033d5         mov        r12d, r10d
00000000000033d8         sete       dl
00000000000033db         xor        r10d, r10d
00000000000033de         xor        eax, eax
00000000000033e0         jmp        sub_2f40+56
                        ; endp
00000000000033e5         nop        dword [rax]
00000000000033e8         cmp        dword [rsp+8], 0x2
00000000000033ed         sete       dl
00000000000033f0         xor        r10d, r10d
00000000000033f3         jmp        sub_31b0+8
00000000000033f8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3400:
0000000000003400         cmp        dword [rsp+8], 0x2
0000000000003405         sete       dl
0000000000003408         xor        r10d, r10d
000000000000340b         xor        r12d, r12d
000000000000340e         jmp        sub_31b0+17
                        ; endp
0000000000003413         nop        dword [rax+rax]
0000000000003418         cmp        dword [rsp+8], 0x2
000000000000341d         mov        r12d, r10d
0000000000003420         mov        ebx, 0x20
0000000000003425         sete       dl
0000000000003428         xor        r10d, r10d
000000000000342b         jmp        sub_31b0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3430:
0000000000003430         mov        edx, 0xd
0000000000003435         xor        r10d, r10d
0000000000003438         mov        ebx, 0x72
000000000000343d         jmp        sub_3040+50
                        ; endp
0000000000003442         nop        word [rax+rax]
0000000000003448         mov        ebx, 0x76
000000000000344d         jmp        sub_3040+176
0000000000003452         nop        word [rax+rax]
0000000000003458         mov        edx, 0x9
000000000000345d         xor        r10d, r10d
0000000000003460         mov        ebx, 0x74
0000000000003465         jmp        sub_3040+50
000000000000346a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3470:
0000000000003470         mov        ebx, 0x62
0000000000003475         jmp        sub_3040+176
                        ; endp
000000000000347a         nop        word [rax+rax]

                     loc_3480:
0000000000003480         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003483         jmp        loc_2f20
0000000000003488         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3490:
0000000000003490         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3040+125
0000000000003495         jne        sub_3e00                                    ; sub_3e00
                        ; endp

                     loc_349b:
000000000000349b         add        rbp, 0x1                                    ; CODE XREF=sub_3040+159
000000000000349f         mov        eax, r8d
00000000000034a2         xor        r12d, r12d
00000000000034a5         mov        ebx, 0x5c
00000000000034aa         jmp        sub_2f40+124
                        ; endp
00000000000034af         align      16

                     loc_34b0:
00000000000034b0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000034b5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000034ba         mov        r12d, r8d
00000000000034bd         mov        rbp, r11
00000000000034c0         sete       dl
00000000000034c3         mov        eax, ebx
00000000000034c5         test       r15, r15
00000000000034c8         sete       cl
00000000000034cb         and        eax, edx
00000000000034cd         and        al, cl
00000000000034cf         jne        loc_3f36

00000000000034d5         mov        eax, ebx
00000000000034d7         xor        eax, 0x1
00000000000034da         and        dl, al
00000000000034dc         je         loc_3e4c

00000000000034e2         cmp        byte [rsp+0xe8+var_6C], 0x0
00000000000034e7         je         loc_3e4a

00000000000034ed         cmp        byte [rsp+0xe8+var_DA], 0x0
00000000000034f2         jne        loc_3eed

00000000000034f8         test       r13, r13
00000000000034fb         sete       al
00000000000034fe         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003504         setne      dl
0000000000003507         and        al, dl
0000000000003509         je         loc_3f2c

000000000000350f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3514:
0000000000003514         lea        rbx, qword [aLibs+29]                       ; 0x6275, CODE XREF=sub_3e00+365
000000000000351b         mov        byte [r14], 0x27
000000000000351f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003527         mov        r15d, 0x1
000000000000352d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003536         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000353b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003540         mov        byte [rsp+0xe8+var_6C], al
0000000000003544         jmp        loc_2e23
0000000000003549         align      16

                     loc_3550:
0000000000003550         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3040+8
0000000000003555         jne        sub_3e00                                    ; sub_3e00

000000000000355b         test       r13, r13
000000000000355e         je         loc_3960

0000000000003564         xor        edx, edx
0000000000003566         cmp        qword [rsp+arg_48], 0x0
000000000000356c         jne        loc_3960

                     loc_3572:
0000000000003572         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3490+1284, sub_3e00+378
0000000000003577         add        r15, 0x3
000000000000357b         xor        eax, eax
000000000000357d         mov        byte [rsp+arg_74], r12b
0000000000003582         xor        r8d, r8d
0000000000003585         mov        r13, rdx
0000000000003588         mov        ebx, 0x27
000000000000358d         jmp        sub_2f40+105
                        ; endp
0000000000003592         align      8

                     loc_3598:
0000000000003598         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3010+19
000000000000359d         je         loc_35c0

000000000000359f         lea        rcx, qword [rbp+2]
00000000000035a3         cmp        rcx, r11
00000000000035a6         jae        loc_35c0

00000000000035a8         mov        rax, qword [rsp+arg_8]
00000000000035ad         cmp        byte [rax+rbp+1], 0x3f
00000000000035b2         je         loc_3d42

00000000000035b8         nop        dword [rax+rax]

                     loc_35c0:
00000000000035c0         xor        edx, edx                                    ; CODE XREF=sub_3490+269, sub_3490+278, sub_3490+2233, sub_3490+2253
00000000000035c2         xor        r12d, r12d
00000000000035c5         xor        eax, eax
00000000000035c7         mov        ebx, 0x3f
00000000000035cc         jmp        sub_2f40+56
                        ; endp
00000000000035d1         align      8

                     loc_35d8:
00000000000035d8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3010+10
00000000000035dd         jne        sub_3e00                                    ; sub_3e00

00000000000035e3         xor        r12d, r12d
00000000000035e6         xor        eax, eax
00000000000035e8         mov        ebx, 0x3f
00000000000035ed         jmp        sub_2f40+105
                        ; endp
00000000000035f2         align      8

                     loc_35f8:
00000000000035f8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3230+30
0000000000003600         cmp        r11, 0xffffffffffffffff
0000000000003604         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003610         mov        qword [rsp+0xe8+var_C0], rax
0000000000003615         jne        loc_3644

0000000000003617         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000361c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003621         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003626         mov        qword [rsp+0xe8+var_B8], r9
000000000000362b         call       j_strlen                                    ; strlen
0000000000003630         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003636         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000363c         mov        r11, rax
000000000000363f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3644:
0000000000003644         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3490+389
000000000000364c         xor        ecx, ecx
000000000000364e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003652         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003657         mov        rbx, rcx
000000000000365a         mov        qword [rsp+0xe8+var_60], r9
0000000000003662         mov        qword [rsp+0xe8+var_B0], rax
0000000000003667         mov        byte [rsp+0xe8+var_69], r10b
000000000000366c         mov        qword [rsp+0xe8+var_68], r15
0000000000003674         mov        qword [rsp+0xe8+var_A8], r14
0000000000003679         mov        qword [rsp+0xe8+var_78], r13
000000000000367e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3683:
0000000000003683         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3490+623
0000000000003688         lea        r14, qword [rbp+rbx]
000000000000368d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003692         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003697         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000369c         lea        r13, qword [rax+r14]
00000000000036a0         sub        rdx, r14
00000000000036a3         mov        rsi, r13
00000000000036a6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000036ab         test       rax, rax
00000000000036ae         mov        r15, rax
00000000000036b1         je         loc_3701

00000000000036b3         cmp        rax, 0xffffffffffffffff
00000000000036b7         je         loc_3cd5

00000000000036bd         cmp        rax, 0xfffffffffffffffe
00000000000036c1         je         loc_3c61

00000000000036c7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000036cc         sete       al
00000000000036cf         and        al, byte [rsp+0xe8+var_D9]
00000000000036d3         jne        loc_3870

                     loc_36d9:
00000000000036d9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3490+996, sub_3490+1031
00000000000036e0         call       j_iswprint                                  ; iswprint
00000000000036e5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
00000000000036ea         test       eax, eax
00000000000036ec         mov        eax, 0x0
00000000000036f1         cmove      r12d, eax
00000000000036f5         add        rbx, r15
00000000000036f8         call       j_mbsinit                                   ; mbsinit
00000000000036fd         test       eax, eax
00000000000036ff         je         loc_3683

                     loc_3701:
0000000000003701         mov        edx, r12d                                   ; CODE XREF=sub_3490+545
0000000000003704         mov        rdi, rbx
0000000000003707         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000370d         xor        edx, 0x1
0000000000003710         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003715         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000371b         and        dl, byte [rsp+0xe8+var_DB]
000000000000371f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003727         mov        r14, qword [rsp+0xe8+var_A8]
000000000000372c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003731         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3736:
0000000000003736         cmp        rdi, 0x1                                    ; CODE XREF=sub_3490+2112, sub_3490+2168
000000000000373a         jbe        loc_3d3b

                     loc_3740:
0000000000003740         mov        rcx, rdi                                    ; CODE XREF=sub_3490+1961
0000000000003743         xor        esi, esi
0000000000003745         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000374b         add        rcx, rbp
000000000000374e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003753         jmp        loc_380e
0000000000003758         align      32

                     loc_3760:
0000000000003760         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3490+896
0000000000003765         sete       al
0000000000003768         test       r9b, r9b
000000000000376b         jne        loc_3c20

0000000000003771         mov        esi, r8d
0000000000003774         xor        esi, 0x1
0000000000003777         and        al, sil
000000000000377a         je         loc_37ab

000000000000377c         cmp        r13, r15
000000000000377f         jbe        loc_3786

0000000000003781         mov        byte [r14+r15], 0x27

                     loc_3786:
0000000000003786         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3490+751
000000000000378a         cmp        r13, rsi
000000000000378d         jbe        loc_3795

000000000000378f         mov        byte [r14+r15+1], 0x24

                     loc_3795:
0000000000003795         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3490+765
0000000000003799         cmp        r13, rsi
000000000000379c         jbe        loc_37a4

000000000000379e         mov        byte [r14+r15+2], 0x27

                     loc_37a4:
00000000000037a4         add        r15, 0x3                                    ; CODE XREF=sub_3490+780
00000000000037a8         mov        r8d, eax

                     loc_37ab:
00000000000037ab         cmp        r13, r15                                    ; CODE XREF=sub_3490+746
00000000000037ae         jbe        loc_37b5

00000000000037b0         mov        byte [r14+r15], 0x5c

                     loc_37b5:
00000000000037b5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3490+798
00000000000037b9         cmp        r13, rax
00000000000037bc         jbe        loc_37cb

00000000000037be         mov        eax, ebx
00000000000037c0         shr        al, 0x6
00000000000037c3         add        eax, 0x30
00000000000037c6         mov        byte [r14+r15+1], al

                     loc_37cb:
00000000000037cb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3490+812
00000000000037cf         cmp        r13, rax
00000000000037d2         jbe        loc_37e4

00000000000037d4         mov        eax, ebx
00000000000037d6         shr        al, 0x3
00000000000037d9         and        eax, 0x7
00000000000037dc         add        eax, 0x30
00000000000037df         mov        byte [r14+r15+2], al

                     loc_37e4:
00000000000037e4         and        ebx, 0x7                                    ; CODE XREF=sub_3490+834
00000000000037e7         add        rbp, 0x1
00000000000037eb         add        r15, 0x3
00000000000037ef         add        ebx, 0x30
00000000000037f2         cmp        rbp, rcx
00000000000037f5         jae        loc_2fe0

00000000000037fb         mov        esi, edx

                     loc_37fd:
00000000000037fd         cmp        r13, r15                                    ; CODE XREF=sub_3490+985, sub_3490+1969
0000000000003800         jbe        loc_3806

0000000000003802         mov        byte [r14+r15], bl

                     loc_3806:
0000000000003806         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3490+880
000000000000380a         add        r15, 0x1

                     loc_380e:
000000000000380e         test       dl, dl                                      ; CODE XREF=sub_3490+707
0000000000003810         jne        loc_3760

0000000000003816         mov        eax, esi
0000000000003818         xor        eax, 0x1
000000000000381b         and        eax, r8d
000000000000381e         test       r10b, r10b
0000000000003821         je         loc_3831

0000000000003823         cmp        r13, r15
0000000000003826         jbe        loc_382d

0000000000003828         mov        byte [r14+r15], 0x5c

                     loc_382d:
000000000000382d         add        r15, 0x1                                    ; CODE XREF=sub_3490+918

                     loc_3831:
0000000000003831         add        rbp, 0x1                                    ; CODE XREF=sub_3490+913
0000000000003835         cmp        rbp, rcx
0000000000003838         jae        loc_2fbc

000000000000383e         test       al, al
0000000000003840         je         loc_3c3e

0000000000003846         cmp        r13, r15
0000000000003849         jbe        loc_3850

000000000000384b         mov        byte [r14+r15], 0x27

                     loc_3850:
0000000000003850         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3490+953
0000000000003854         cmp        r13, rax
0000000000003857         jbe        loc_385f

0000000000003859         mov        byte [r14+r15+1], 0x27

                     loc_385f:
000000000000385f         add        r15, 0x2                                    ; CODE XREF=sub_3490+967
0000000000003863         xor        r10d, r10d
0000000000003866         xor        r8d, r8d
0000000000003869         jmp        loc_37fd
000000000000386b         align      16

                     loc_3870:
0000000000003870         cmp        r15, 0x1                                    ; CODE XREF=sub_3490+579
0000000000003874         je         loc_36d9

000000000000387a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000387f         lea        rcx, qword [rdi+r15]
0000000000003883         lea        rdx, qword [rdi+r14+1]
0000000000003888         lea        r8, qword [rcx+r14]
000000000000388c         jmp        loc_389d
000000000000388e         align      16

                     loc_3890:
0000000000003890         add        rdx, 0x1                                    ; CODE XREF=sub_3490+1046, sub_3490+1072
0000000000003894         cmp        r8, rdx
0000000000003897         je         loc_36d9

                     loc_389d:
000000000000389d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3490+1020
00000000000038a0         sub        ecx, 0x5b
00000000000038a3         cmp        cl, 0x21
00000000000038a6         ja         loc_3890

00000000000038a8         mov        esi, 0x1
00000000000038ad         shl        rsi, cl
00000000000038b0         mov        rcx, rsi
00000000000038b3         movabs     rsi, 0x20000002b
00000000000038bd         test       rcx, rsi
00000000000038c0         je         loc_3890

00000000000038c2         mov        r14, qword [rsp+0xe8+var_A8]
00000000000038c7         mov        r13, qword [rsp+0xe8+var_78]
00000000000038cc         mov        rbp, qword [rsp+0xe8+var_B8]
00000000000038d1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_38d9:
00000000000038d9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3490+1227, sub_3490+1948, sub_3e00+169, sub_3e00+318
00000000000038de         je         loc_38f0

00000000000038e0         test       al, al
00000000000038e2         mov        eax, 0x4
00000000000038e7         cmove      eax, dword [rsp+0xe8+var_E0]
00000000000038ec         mov        dword [rsp+0xe8+var_E0], eax

                     loc_38f0:
00000000000038f0         sub        rsp, 0x8                                    ; CODE XREF=sub_3490+1102
00000000000038f4         mov        rcx, rbp
00000000000038f7         mov        rsi, r13
00000000000038fa         push       qword [rsp+0xf0+var_88]
00000000000038fe         push       qword [rsp+0xf8+var_80]
0000000000003902         mov        rdi, r14
0000000000003905         push       0x0
0000000000003907         mov        r9d, dword [rsp+0x108+var_70]
000000000000390f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003914         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003919         and        r9d, 0xfffffffd
000000000000391d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003922         add        rsp, 0x20
0000000000003926         mov        r15, rax

                     loc_3929:
0000000000003929         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3e00+133, sub_3e00+144, sub_3e00+295
0000000000003931         xor        rbx, qword [fs:0x28]
000000000000393a         mov        rax, r15
000000000000393d         jne        loc_3f43

0000000000003943         add        rsp, 0xb8
000000000000394a         pop        rbx
000000000000394b         pop        rbp
000000000000394c         pop        r12
000000000000394e         pop        r13
0000000000003950         pop        r14
0000000000003952         pop        r15
0000000000003954         ret
                        ; endp
0000000000003955         align      8

                     loc_3958:
0000000000003958         mov        rbp, r11                                    ; CODE XREF=sub_3040+194
000000000000395b         jmp        loc_38d9

                     loc_3960:
0000000000003960         cmp        r13, r15                                    ; CODE XREF=sub_3490+206, sub_3490+220
0000000000003963         jbe        loc_396a

0000000000003965         mov        byte [r14+r15], 0x27

                     loc_396a:
000000000000396a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3490+1235
000000000000396e         cmp        r13, rax
0000000000003971         jbe        loc_3979

0000000000003973         mov        byte [r14+r15+1], 0x5c

                     loc_3979:
0000000000003979         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3490+1249
000000000000397d         cmp        r13, rax
0000000000003980         jbe        loc_3f72

0000000000003986         mov        rdx, r13
0000000000003989         mov        byte [r14+r15+2], 0x27
000000000000398f         mov        r13, qword [rsp+arg_48]
0000000000003994         jmp        loc_3572

                     loc_3999:
0000000000003999         mov        eax, r12d                                   ; CODE XREF=sub_3330+99
000000000000399c         mov        ebx, 0x30
00000000000039a1         xor        r12d, r12d
00000000000039a4         jmp        sub_2f40+105
                        ; endp

                     loc_39a9:
00000000000039a9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3330+67
00000000000039af         jmp        loc_3379

                     loc_39b4:
00000000000039b4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000039b6         jne        loc_2de3

00000000000039bc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_39c1:
00000000000039c1         test       r13, r13                                    ; CODE XREF=sub_3e00+333
00000000000039c4         jne        loc_3f5a

00000000000039ca         lea        rax, qword [aLibs+29]                       ; 0x6275
00000000000039d1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000039da         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000039df         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000039e4         xor        r12d, r12d
00000000000039e7         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000039ec         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000039f5         mov        qword [rsp+0xe8+var_A0], rax
00000000000039fa         mov        r15d, 0x1
0000000000003a00         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003a08         jmp        loc_2e23
0000000000003a0d         align      16

                     loc_3a10:
0000000000003a10         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003a12         jne        loc_3e0d

0000000000003a18         test       r13, r13
0000000000003a1b         je         loc_3c46

0000000000003a21         mov        byte [r14], 0x22
0000000000003a25         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003a2a         xor        r12d, r12d
0000000000003a2d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a32         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_3a3b:
0000000000003a3b         lea        rax, qword [aLibs+27]                       ; 0x6273, CODE XREF=sub_3490+1996
0000000000003a42         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003a47         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003a4c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003a55         mov        r15d, 0x1
0000000000003a5b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003a60         jmp        loc_2e23

                     loc_3a65:
0000000000003a65         lea        rax, qword [aLibs+27]                       ; case 6, 0x6273, CODE XREF=quotearg_buffer_restyled+145
0000000000003a6c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003a71         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a76         xor        r12d, r12d
0000000000003a79         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a82         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003a87         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003a8c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003a95         xor        r15d, r15d
0000000000003a98         mov        qword [rsp+0xe8+var_A0], rax
0000000000003a9d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003aa5         jmp        loc_2e23

                     loc_3aaa:
0000000000003aaa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000003aaf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003ab4         xor        r12d, r12d
0000000000003ab7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ac0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003ac5         xor        r15d, r15d
0000000000003ac8         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003acd         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003ad6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003adf         jmp        loc_2e23

                     loc_3ae4:
0000000000003ae4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003ae9         je         loc_3b41

0000000000003aeb         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x6277
0000000000003af2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003af4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003af9         call       j_dcgettext                                 ; dcgettext
0000000000003afe         mov        rcx, rax
0000000000003b01         mov        qword [rsp+0xe8+var_80], rax
0000000000003b06         lea        rax, qword [aLibs+31]                       ; 0x6277
0000000000003b0d         cmp        rcx, rax
0000000000003b10         je         loc_3eae

                     loc_3b16:
0000000000003b16         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x6275, CODE XREF=sub_3e00+191
0000000000003b1d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003b1f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003b24         call       j_dcgettext                                 ; dcgettext
0000000000003b29         mov        rcx, rax
0000000000003b2c         mov        qword [rsp+0xe8+var_88], rax
0000000000003b31         lea        rax, qword [aLibs+29]                       ; 0x6275
0000000000003b38         cmp        rcx, rax
0000000000003b3b         je         loc_3ec4

                     loc_3b41:
0000000000003b41         xor        r15d, r15d                                  ; CODE XREF=sub_3490+1625, sub_3e00+213
0000000000003b44         test       ebx, ebx
0000000000003b46         je         loc_3d0d

                     loc_3b4c:
0000000000003b4c         test       ebx, ebx                                    ; CODE XREF=sub_3490+2183, sub_3490+2214
0000000000003b4e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003b53         setne      byte [rsp+0xe8+var_D9]
0000000000003b58         xor        r12d, r12d
0000000000003b5b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003b5e         call       j_strlen                                    ; strlen
0000000000003b63         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003b68         mov        qword [rsp+0xe8+var_D0], rax
0000000000003b6d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b72         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b77         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b80         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003b85         jmp        loc_2e23

                     loc_3b8a:
0000000000003b8a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003b8f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b94         xor        r12d, r12d
0000000000003b97         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ba0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003ba5         xor        r15d, r15d
0000000000003ba8         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003bad         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003bb6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003bbf         jmp        loc_2e23

                     loc_3bc4:
0000000000003bc4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003bc9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003bce         xor        r12d, r12d
0000000000003bd1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003bda         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003bdf         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003be4         jmp        loc_2e03

                     loc_3be9:
0000000000003be9         cmp        r13, r15                                    ; CODE XREF=sub_3330+133
0000000000003bec         jbe        loc_3bf3

0000000000003bee         mov        byte [r14+r15], 0x30

                     loc_3bf3:
0000000000003bf3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3490+1884
0000000000003bf7         cmp        r13, rax
0000000000003bfa         jbe        loc_3c02

0000000000003bfc         mov        byte [r14+rcx+2], 0x30

                     loc_3c02:
0000000000003c02         mov        eax, r12d                                   ; CODE XREF=sub_3490+1898
0000000000003c05         lea        r15, qword [rcx+3]
0000000000003c09         xor        r12d, r12d
0000000000003c0c         mov        ebx, 0x30
0000000000003c11         jmp        sub_2f40+56
                        ; endp
0000000000003c16         align      32

                     loc_3c20:
0000000000003c20         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3490+731
0000000000003c25         mov        rbp, r11
0000000000003c28         mov        byte [rsp+0xe8+var_DB], bl
0000000000003c2c         jmp        loc_38d9

                     loc_3c31:
0000000000003c31         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3230+105
0000000000003c36         xor        r12d, r12d
0000000000003c39         jmp        loc_3740

                     loc_3c3e:
0000000000003c3e         xor        r10d, r10d                                  ; CODE XREF=sub_3490+944
0000000000003c41         jmp        loc_37fd

                     loc_3c46:
0000000000003c46         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3490+1419
0000000000003c4f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c54         xor        r12d, r12d
0000000000003c57         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c5c         jmp        loc_3a3b

                     loc_3c61:
0000000000003c61         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3490+561
0000000000003c66         mov        rsi, r14
0000000000003c69         mov        rcx, r13
0000000000003c6c         mov        rax, rbx
0000000000003c6f         mov        rdi, rbx
0000000000003c72         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003c78         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003c7d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003c85         cmp        rsi, r11
0000000000003c88         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003c8e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003c96         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003c9b         mov        r13, qword [rsp+0xe8+var_78]
0000000000003ca0         jae        loc_3cc8

0000000000003ca2         cmp        byte [rcx], 0x0
0000000000003ca5         jne        loc_3cb7

0000000000003ca7         jmp        loc_3cc8
0000000000003ca9         align      16

                     loc_3cb0:
0000000000003cb0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3490+2099
0000000000003cb5         je         loc_3cc5

                     loc_3cb7:
0000000000003cb7         add        rax, 0x1                                    ; CODE XREF=sub_3490+2069
0000000000003cbb         lea        rdx, qword [rbp+rax]
0000000000003cc0         cmp        r11, rdx
0000000000003cc3         ja         loc_3cb0

                     loc_3cc5:
0000000000003cc5         mov        rdi, rax                                    ; CODE XREF=sub_3490+2085

                     loc_3cc8:
0000000000003cc8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3490+2064, sub_3490+2071
0000000000003ccd         xor        r12d, r12d
0000000000003cd0         jmp        loc_3736

                     loc_3cd5:
0000000000003cd5         mov        rdi, rbx                                    ; CODE XREF=sub_3490+551
0000000000003cd8         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003cde         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003ce3         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003ce9         mov        r15, qword [rsp+0xe8+var_68]
0000000000003cf1         xor        r12d, r12d
0000000000003cf4         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003cf9         mov        r13, qword [rsp+0xe8+var_78]
0000000000003cfe         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003d03         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003d08         jmp        loc_3736

                     loc_3d0d:
0000000000003d0d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3490+1718
0000000000003d12         movzx      eax, byte [rdx]
0000000000003d15         test       al, al
0000000000003d17         je         loc_3b4c

0000000000003d1d         nop        dword [rax]

                     loc_3d20:
0000000000003d20         cmp        r13, r15                                    ; CODE XREF=sub_3490+2212
0000000000003d23         jbe        loc_3d29

0000000000003d25         mov        byte [r14+r15], al

                     loc_3d29:
0000000000003d29         add        r15, 0x1                                    ; CODE XREF=sub_3490+2195
0000000000003d2d         movzx      eax, byte [rdx+r15]
0000000000003d32         test       al, al
0000000000003d34         jne        loc_3d20

0000000000003d36         jmp        loc_3b4c

                     loc_3d3b:
0000000000003d3b         mov        eax, edx                                    ; CODE XREF=sub_3490+682
0000000000003d3d         jmp        loc_3297

                     loc_3d42:
0000000000003d42         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3490+290
0000000000003d46         cmp        bl, 0x3e
0000000000003d49         ja         loc_35c0

0000000000003d4f         movabs     rax, 0x7000a38200000000
0000000000003d59         bt         rax, rbx
0000000000003d5d         jae        loc_35c0

0000000000003d63         cmp        byte [rsp+arg_7], 0x0
0000000000003d68         jne        loc_3f52

0000000000003d6e         cmp        r13, r15
0000000000003d71         jbe        loc_3d78

0000000000003d73         mov        byte [r14+r15], 0x3f

                     loc_3d78:
0000000000003d78         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3490+2273
0000000000003d7c         cmp        r13, rax
0000000000003d7f         jbe        loc_3d87

0000000000003d81         mov        byte [r14+r15+1], 0x22

                     loc_3d87:
0000000000003d87         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3490+2287
0000000000003d8b         cmp        r13, rax
0000000000003d8e         jbe        loc_3d96

0000000000003d90         mov        byte [r14+r15+2], 0x22

                     loc_3d96:
0000000000003d96         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3490+2302
0000000000003d9a         cmp        r13, rax
0000000000003d9d         jbe        loc_3da5

0000000000003d9f         mov        byte [r14+r15+3], 0x3f

                     loc_3da5:
0000000000003da5         add        r15, 0x4                                    ; CODE XREF=sub_3490+2317
0000000000003da9         xor        edx, edx
0000000000003dab         xor        r12d, r12d
0000000000003dae         xor        eax, eax
0000000000003db0         mov        rbp, rcx
0000000000003db3         jmp        sub_2f40+56
                        ; endp

                     loc_3db8:
0000000000003db8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003dba         je         loc_3f48

0000000000003dc0         lea        rax, qword [aLibs+29]                       ; 0x6275
0000000000003dc7         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003dcc         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003dd1         xor        r12d, r12d
0000000000003dd4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ddd         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003de2         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003de7         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003df0         xor        r15d, r15d
0000000000003df3         mov        qword [rsp+0xe8+var_A0], rax
0000000000003df8         jmp        loc_2e23
0000000000003dfd         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3e00:
0000000000003e00         mov        rbp, r11
0000000000003e03         movzx      eax, byte [rsp+arg_7]
0000000000003e08         jmp        sub_3490+1097
                        ; endp

                     loc_3e0d:
0000000000003e0d         lea        rax, qword [aLibs+27]                       ; 0x6273, CODE XREF=sub_3490+1410
0000000000003e14         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003e19         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003e1e         xor        r12d, r12d
0000000000003e21         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003e2a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003e2f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003e34         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003e3d         xor        r15d, r15d
0000000000003e40         mov        qword [rsp+0xe8+var_A0], rax
0000000000003e45         jmp        loc_2e23

                     loc_3e4a:
0000000000003e4a         mov        eax, edx                                    ; CODE XREF=sub_3490+87

                     loc_3e4c:
0000000000003e4c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3490+76, sub_3e00+305
0000000000003e51         test       rbx, rbx
0000000000003e54         je         loc_3e82

0000000000003e56         test       al, al
0000000000003e58         je         loc_3e82

0000000000003e5a         movzx      ecx, byte [rbx]
0000000000003e5d         mov        rax, rbx
0000000000003e60         test       cl, cl
0000000000003e62         je         loc_3e82

0000000000003e64         mov        rdx, r15
0000000000003e67         sub        rax, r15

                     loc_3e6a:
0000000000003e6a         cmp        r13, rdx                                    ; CODE XREF=sub_3e00+125
0000000000003e6d         jbe        loc_3e73

0000000000003e6f         mov        byte [r14+rdx], cl

                     loc_3e73:
0000000000003e73         add        rdx, 0x1                                    ; CODE XREF=sub_3e00+109
0000000000003e77         movzx      ecx, byte [rax+rdx]
0000000000003e7b         test       cl, cl
0000000000003e7d         jne        loc_3e6a

0000000000003e7f         mov        r15, rdx

                     loc_3e82:
0000000000003e82         cmp        r13, r15                                    ; CODE XREF=sub_3e00+84, sub_3e00+88, sub_3e00+98
0000000000003e85         jbe        loc_3929

0000000000003e8b         mov        byte [r14+r15], 0x0
0000000000003e90         jmp        loc_3929

                     loc_3e95:
0000000000003e95         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003e9a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003e9f         mov        rbp, r11
0000000000003ea2         sete       al
0000000000003ea5         mov        byte [rsp+0xe8+var_DB], bl
0000000000003ea9         jmp        loc_38d9

                     loc_3eae:
0000000000003eae         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3490+1664
0000000000003eb2         mov        rdi, rcx
0000000000003eb5         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003eba         mov        qword [rsp+0xe8+var_80], rax
0000000000003ebf         jmp        loc_3b16

                     loc_3ec4:
0000000000003ec4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3490+1707
0000000000003ec8         mov        rdi, rcx
0000000000003ecb         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003ed0         mov        qword [rsp+0xe8+var_88], rax
0000000000003ed5         jmp        loc_3b41

                     loc_3eda:
0000000000003eda         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3330+16
0000000000003edf         mov        rbp, r11
0000000000003ee2         mov        eax, edx
0000000000003ee4         mov        byte [rsp+arg_5], bl
0000000000003ee8         jmp        sub_3490+1097
                        ; endp

                     loc_3eed:
0000000000003eed         sub        rsp, 0x8                                    ; CODE XREF=sub_3490+98
0000000000003ef1         mov        r8d, 0x5
0000000000003ef7         mov        rcx, r11
0000000000003efa         push       qword [rsp+0xf0+var_88]
0000000000003efe         push       qword [rsp+0xf8+var_80]
0000000000003f02         mov        rdi, r14
0000000000003f05         push       qword [rsp+0x100+var_C8]
0000000000003f09         mov        r9d, dword [rsp+0x108+var_70]
0000000000003f11         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003f16         mov        rsi, qword [rsp+0x108+var_98]
0000000000003f1b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003f20         add        rsp, 0x20
0000000000003f24         mov        r15, rax
0000000000003f27         jmp        loc_3929

                     loc_3f2c:
0000000000003f2c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3490+121
0000000000003f31         jmp        loc_3e4c

                     loc_3f36:
0000000000003f36         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3490+63
0000000000003f3e         jmp        loc_38d9

                     loc_3f43:
0000000000003f43         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3490+1197
                        ; endp

                     loc_3f48:
0000000000003f48         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3490+2346
0000000000003f4d         jmp        loc_39c1

                     loc_3f52:
0000000000003f52         mov        rbp, r11                                    ; CODE XREF=sub_3490+2264
0000000000003f55         jmp        sub_3490+1120
                        ; endp

                     loc_3f5a:
0000000000003f5a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3490+1332
0000000000003f5f         xor        eax, eax
0000000000003f61         xor        r12d, r12d
0000000000003f64         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003f6d         jmp        loc_3514

                     loc_3f72:
0000000000003f72         mov        rdx, r13                                    ; CODE XREF=sub_3490+1264
0000000000003f75         mov        r13, qword [rsp+arg_48]
0000000000003f7a         jmp        loc_3572

                     loc_3f7f:
0000000000003f7f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003f84         align      16                                          ; End of unwind block (FDE at 0x7218)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003f90         push       r15                                         ; Begin of unwind block (FDE at 0x7290), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003f92         push       r14
0000000000003f94         movsxd     r15, edi
0000000000003f97         push       r13
0000000000003f99         push       r12
0000000000003f9b         mov        r14, rdx
0000000000003f9e         push       rbp
0000000000003f9f         push       rbx
0000000000003fa0         mov        rbp, rcx
0000000000003fa3         sub        rsp, 0x28
0000000000003fa7         mov        qword [rsp+0x58+var_50], rsi
0000000000003fac         call       j___errno_location                          ; __errno_location
0000000000003fb1         mov        r13, rax
0000000000003fb4         mov        eax, dword [rax]
0000000000003fb6         test       r15d, r15d
0000000000003fb9         mov        rbx, qword [nslots+8]                       ; 0x209080
0000000000003fc0         mov        dword [rsp+0x58+var_40], eax
0000000000003fc4         js         loc_4131

0000000000003fca         cmp        dword [nslots], r15d                        ; nslots
0000000000003fd1         jg         loc_4035

0000000000003fd3         cmp        r15d, 0x7fffffff
0000000000003fda         je         loc_4136

0000000000003fe0         lea        r12d, dword [r15+1]
0000000000003fe4         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000003feb         movsxd     rsi, r12d
0000000000003fee         shl        rsi, 0x4
0000000000003ff2         cmp        rbx, rax
0000000000003ff5         je         loc_4110

0000000000003ffb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000003ffe         call       xrealloc                                    ; xrealloc
0000000000004003         mov        rbx, rax
0000000000004006         mov        qword [nslots+8], rax                       ; 0x209080

                     loc_400d:
000000000000400d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004014         mov        edx, r12d
0000000000004017         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004019         sub        edx, edi
000000000000401b         shl        rdi, 0x4
000000000000401f         movsxd     rdx, edx
0000000000004022         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004025         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004029         call       j_memset                                    ; memset
000000000000402e         mov        dword [nslots], r12d                        ; nslots

                     loc_4035:
0000000000004035         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004038         shl        r15, 0x4
000000000000403c         sub        rsp, 0x8
0000000000004040         add        rbx, r15
0000000000004043         lea        r15, qword [rbp+8]
0000000000004047         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000404b         mov        r11, qword [rbx]
000000000000404e         mov        r12, qword [rbx+8]
0000000000004052         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004055         or         eax, 0x1
0000000000004058         mov        dword [rsp+0x60+var_3C], eax
000000000000405c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000405f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004062         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004065         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004067         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000406a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000406f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004072         mov        qword [rsp+0x78+var_48], r11
0000000000004077         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000407c         add        rsp, 0x20
0000000000004080         mov        r11, qword [rsp+0x58+var_48]
0000000000004085         cmp        r11, rax
0000000000004088         ja         loc_40f1

000000000000408a         lea        rsi, qword [rax+1]
000000000000408e         lea        rax, qword [slot0]                          ; slot0
0000000000004095         cmp        r12, rax
0000000000004098         mov        qword [rbx], rsi
000000000000409b         je         loc_40af

000000000000409d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000040a0         mov        qword [rsp+0x58+var_48], rsi
00000000000040a5         call       j_free                                      ; free
00000000000040aa         mov        rsi, qword [rsp+0x58+var_48]

                     loc_40af:
00000000000040af         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
00000000000040b2         mov        qword [rsp+0x58+var_48], rsi
00000000000040b7         call       xmalloc                                     ; xmalloc
00000000000040bc         sub        rsp, 0x8
00000000000040c0         mov        qword [rbx+8], rax
00000000000040c4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000040c8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000040cb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000040ce         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000040d1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000040d3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
00000000000040d8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
00000000000040db         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000040e0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
00000000000040e5         mov        r12, rax
00000000000040e8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000040ed         add        rsp, 0x20

                     loc_40f1:
00000000000040f1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
00000000000040f5         mov        dword [r13], eax
00000000000040f9         add        rsp, 0x28
00000000000040fd         mov        rax, r12
0000000000004100         pop        rbx
0000000000004101         pop        rbp
0000000000004102         pop        r12
0000000000004104         pop        r13
0000000000004106         pop        r14
0000000000004108         pop        r15
000000000000410a         ret
                        ; endp
000000000000410b         align      16

                     loc_4110:
0000000000004110         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004112         call       xrealloc                                    ; xrealloc
0000000000004117         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000411f         mov        rbx, rax
0000000000004122         mov        qword [nslots+8], rax                       ; 0x209080
0000000000004129         movups     xmmword [rax], xmm0
000000000000412c         jmp        loc_400d

                     loc_4131:
0000000000004131         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4136:
0000000000004136         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_413b:
000000000000413b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x7290)
                     clone_quoting_options:
0000000000004140         push       r12                                         ; Begin of unwind block (FDE at 0x72fc)
0000000000004142         push       rbp
0000000000004143         push       rbx
0000000000004144         mov        rbx, rdi
0000000000004147         call       j___errno_location                          ; __errno_location
000000000000414c         mov        r12d, dword [rax]
000000000000414f         mov        rbp, rax
0000000000004152         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004159         test       rbx, rbx
000000000000415c         mov        esi, 0x38
0000000000004161         cmove      rbx, rax
0000000000004165         mov        rdi, rbx
0000000000004168         call       xmemdup                                     ; xmemdup
000000000000416d         mov        dword [rbp], r12d
0000000000004171         pop        rbx
0000000000004172         pop        rbp
0000000000004173         pop        r12
0000000000004175         ret
                        ; endp
0000000000004176         align      128                                         ; End of unwind block (FDE at 0x72fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004180         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7328), default_quoting_options
0000000000004187         test       rdi, rdi
000000000000418a         cmove      rdi, rax
000000000000418e         mov        eax, dword [rdi]
0000000000004190         ret
                        ; endp
0000000000004191         align      32                                          ; End of unwind block (FDE at 0x7328)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
00000000000041a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x733c), default_quoting_options
00000000000041a7         test       rdi, rdi
00000000000041aa         cmove      rdi, rax
00000000000041ae         mov        dword [rdi], esi
00000000000041b0         ret
                        ; endp
00000000000041b1         align      64                                          ; End of unwind block (FDE at 0x733c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000041c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7350), default_quoting_options
00000000000041c7         test       rdi, rdi
00000000000041ca         mov        ecx, esi
00000000000041cc         cmove      rdi, rax
00000000000041d0         mov        eax, esi
00000000000041d2         and        ecx, 0x1f
00000000000041d5         shr        al, 0x5
00000000000041d8         movzx      eax, al
00000000000041db         lea        rdi, qword [rdi+rax*4+8]
00000000000041e0         mov        esi, dword [rdi]
00000000000041e2         mov        eax, esi
00000000000041e4         shr        eax, cl
00000000000041e6         xor        edx, eax
00000000000041e8         and        eax, 0x1
00000000000041eb         and        edx, 0x1
00000000000041ee         shl        edx, cl
00000000000041f0         xor        edx, esi
00000000000041f2         mov        dword [rdi], edx
00000000000041f4         ret
                        ; endp
00000000000041f5         align      512                                         ; End of unwind block (FDE at 0x7350)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004200         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7364), default_quoting_options
0000000000004207         test       rdi, rdi
000000000000420a         cmove      rdi, rax
000000000000420e         mov        eax, dword [rdi+4]
0000000000004211         mov        dword [rdi+4], esi
0000000000004214         ret
                        ; endp
0000000000004215         align      32                                          ; End of unwind block (FDE at 0x7364)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004220         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7378), default_quoting_options
0000000000004227         test       rdi, rdi
000000000000422a         cmove      rdi, rax
000000000000422e         test       rsi, rsi
0000000000004231         mov        dword [rdi], 0xa
0000000000004237         je         loc_4247

0000000000004239         test       rdx, rdx
000000000000423c         je         loc_4247

000000000000423e         mov        qword [rdi+0x28], rsi
0000000000004242         mov        qword [rdi+0x30], rdx
0000000000004246         ret
                        ; endp

                     loc_4247:
0000000000004247         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000424b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004250         push       r15                                         ; End of unwind block (FDE at 0x7378), Begin of unwind block (FDE at 0x738c)
0000000000004252         push       r14
0000000000004254         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000425b         push       r13
000000000000425d         push       r12
000000000000425f         mov        r13, rdi
0000000000004262         push       rbp
0000000000004263         push       rbx
0000000000004264         mov        rbx, r8
0000000000004267         mov        r14, rsi
000000000000426a         mov        r15, rdx
000000000000426d         sub        rsp, 0x18
0000000000004271         test       r8, r8
0000000000004274         cmove      rbx, rax
0000000000004278         mov        qword [rsp+0x48+var_40], rcx
000000000000427d         call       j___errno_location                          ; __errno_location
0000000000004282         mov        r12d, dword [rax]
0000000000004285         mov        rbp, rax
0000000000004288         lea        rax, qword [rbx+8]
000000000000428c         sub        rsp, 0x8
0000000000004290         mov        r9d, dword [rbx+4]
0000000000004294         push       qword [rbx+0x30]
0000000000004297         mov        r8d, dword [rbx]
000000000000429a         push       qword [rbx+0x28]
000000000000429d         mov        rdx, r15
00000000000042a0         push       rax
00000000000042a1         mov        rcx, qword [rsp+0x68+var_40]
00000000000042a6         mov        rsi, r14
00000000000042a9         mov        rdi, r13
00000000000042ac         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000042b1         mov        dword [rbp], r12d
00000000000042b5         add        rsp, 0x38
00000000000042b9         pop        rbx
00000000000042ba         pop        rbp
00000000000042bb         pop        r12
00000000000042bd         pop        r13
00000000000042bf         pop        r14
00000000000042c1         pop        r15
00000000000042c3         ret
                        ; endp
00000000000042c4         align      16                                          ; End of unwind block (FDE at 0x738c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000042d0         push       r15                                         ; Begin of unwind block (FDE at 0x73e0), CODE XREF=quotearg_alloc+5
00000000000042d2         push       r14
00000000000042d4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000042db         push       r13
00000000000042dd         push       r12
00000000000042df         mov        r12, rdx
00000000000042e2         push       rbp
00000000000042e3         push       rbx
00000000000042e4         mov        rbx, rcx
00000000000042e7         mov        r14, rdi
00000000000042ea         mov        r15, rsi
00000000000042ed         sub        rsp, 0x38
00000000000042f1         test       rcx, rcx
00000000000042f4         cmove      rbx, rax
00000000000042f8         xor        ebp, ebp
00000000000042fa         call       j___errno_location                          ; __errno_location
00000000000042ff         test       r12, r12
0000000000004302         mov        r13, rax
0000000000004305         mov        eax, dword [rax]
0000000000004307         sete       bpl
000000000000430b         or         ebp, dword [rbx+4]
000000000000430e         lea        r10, qword [rbx+8]
0000000000004312         sub        rsp, 0x8
0000000000004316         mov        r8d, dword [rbx]
0000000000004319         mov        rcx, r15
000000000000431c         mov        dword [rsp+0x70+var_5C], eax
0000000000004320         push       qword [rbx+0x30]
0000000000004323         mov        rdx, r14
0000000000004326         push       qword [rbx+0x28]
0000000000004329         push       r10
000000000000432b         xor        esi, esi
000000000000432d         mov        r9d, ebp
0000000000004330         xor        edi, edi
0000000000004332         mov        qword [rsp+0x88+var_48], r10
0000000000004337         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000433c         lea        rsi, qword [rax+1]
0000000000004340         mov        qword [rsp+0x88+var_40], rax
0000000000004345         add        rsp, 0x20
0000000000004349         mov        rdi, rsi
000000000000434c         mov        qword [rsp+0x68+var_50], rsi
0000000000004351         call       xmalloc                                     ; xmalloc
0000000000004356         mov        qword [rsp+0x68+var_58], rax
000000000000435b         sub        rsp, 0x8
000000000000435f         push       qword [rbx+0x30]
0000000000004362         push       qword [rbx+0x28]
0000000000004365         mov        r10, qword [rsp+0x80+var_48]
000000000000436a         mov        r9d, ebp
000000000000436d         mov        r8d, dword [rbx]
0000000000004370         mov        rcx, r15
0000000000004373         mov        rdx, r14
0000000000004376         mov        rdi, rax
0000000000004379         push       r10
000000000000437b         mov        rsi, qword [rsp+0x88+var_50]
0000000000004380         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004385         mov        eax, dword [rsp+0x88+var_5C]
0000000000004389         add        rsp, 0x20
000000000000438d         test       r12, r12
0000000000004390         mov        dword [r13], eax
0000000000004394         je         loc_439f

0000000000004396         mov        r11, qword [rsp+0x68+var_40]
000000000000439b         mov        qword [r12], r11

                     loc_439f:
000000000000439f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000043a4         add        rsp, 0x38
00000000000043a8         pop        rbx
00000000000043a9         pop        rbp
00000000000043aa         pop        r12
00000000000043ac         pop        r13
00000000000043ae         pop        r14
00000000000043b0         pop        r15
00000000000043b2         ret
                        ; endp
00000000000043b3         align      64                                          ; End of unwind block (FDE at 0x73e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000043c0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x744c)
00000000000043c3         xor        edx, edx
00000000000043c5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000043ca         align      16                                          ; End of unwind block (FDE at 0x744c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000043d0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x7460), nslots
00000000000043d6         push       r12
00000000000043d8         mov        r12, qword [nslots+8]                       ; 0x209080
00000000000043df         push       rbp
00000000000043e0         push       rbx
00000000000043e1         cmp        eax, 0x1
00000000000043e4         jle        loc_4411

00000000000043e6         sub        eax, 0x2
00000000000043e9         lea        rbx, qword [r12+0x18]
00000000000043ee         shl        rax, 0x4
00000000000043f2         lea        rbp, qword [r12+rax+0x28]
00000000000043f7         nop        word [rax+rax]

                     loc_4400:
0000000000004400         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004403         add        rbx, 0x10
0000000000004407         call       j_free                                      ; free
000000000000440c         cmp        rbx, rbp
000000000000440f         jne        loc_4400

                     loc_4411:
0000000000004411         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004416         lea        rbx, qword [slot0]                          ; slot0
000000000000441d         cmp        rdi, rbx
0000000000004420         je         loc_4439

0000000000004422         call       j_free                                      ; free
0000000000004427         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004432         mov        qword [slotvec0+8], rbx                     ; 0x209098

                     loc_4439:
0000000000004439         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004440         cmp        r12, rbx
0000000000004443         je         loc_4454

0000000000004445         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004448         call       j_free                                      ; free
000000000000444d         mov        qword [nslots+8], rbx                       ; 0x209080

                     loc_4454:
0000000000004454         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004455         mov        dword [nslots], 0x1                         ; nslots
000000000000445f         pop        rbp
0000000000004460         pop        r12
0000000000004462         ret
                        ; endp
0000000000004463         align      16                                          ; End of unwind block (FDE at 0x7460)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004470         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x748c), default_quoting_options
0000000000004477         mov        rdx, 0xffffffffffffffff
000000000000447e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004483         align      16                                          ; End of unwind block (FDE at 0x748c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004490         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x74a0), default_quoting_options
0000000000004497         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000449c         align      32                                          ; End of unwind block (FDE at 0x74a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000044a0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x74b4), default_quoting_options
00000000000044a7         mov        rsi, rdi
00000000000044aa         mov        rdx, 0xffffffffffffffff
00000000000044b1         xor        edi, edi
00000000000044b3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000044b8         align      64                                          ; End of unwind block (FDE at 0x74b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000044c0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x74c8), default_quoting_options
00000000000044c7         mov        rdx, rsi
00000000000044ca         mov        rsi, rdi
00000000000044cd         xor        edi, edi
00000000000044cf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000044d4         align      32                                          ; End of unwind block (FDE at 0x74c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
00000000000044e0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x74dc)
00000000000044e4         mov        rax, rdx
00000000000044e7         mov        rdx, qword [fs:0x28]
00000000000044f0         mov        qword [rsp+0x48+var_10], rdx
00000000000044f5         xor        edx, edx
00000000000044f7         cmp        esi, 0xa
00000000000044fa         je         loc_4564

00000000000044fc         mov        dword [rsp+0x48+var_48], esi
00000000000044ff         mov        rcx, rsp
0000000000004502         mov        rdx, 0xffffffffffffffff
0000000000004509         mov        rsi, rax
000000000000450c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004515         mov        qword [rsp+0x48+var_3C], 0x0
000000000000451e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004527         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004530         mov        qword [rsp+0x48+var_24], 0x0
0000000000004539         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004542         mov        dword [rsp+0x48+var_14], 0x0
000000000000454a         call       quotearg_n_options                          ; quotearg_n_options
000000000000454f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004554         xor        rcx, qword [fs:0x28]
000000000000455d         jne        loc_4569

000000000000455f         add        rsp, 0x48
0000000000004563         ret
                        ; endp

                     loc_4564:
0000000000004564         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4569:
0000000000004569         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000456e         align      16                                          ; End of unwind block (FDE at 0x74dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004570         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x74f8), CODE XREF=quotearg_style_mem+10, collate_error+106, collate_error+127
0000000000004574         mov        rax, rdx
0000000000004577         mov        rdx, rcx
000000000000457a         mov        rcx, qword [fs:0x28]
0000000000004583         mov        qword [rsp+0x48+var_10], rcx
0000000000004588         xor        ecx, ecx
000000000000458a         cmp        esi, 0xa
000000000000458d         je         loc_45f0

000000000000458f         mov        dword [rsp+0x48+var_48], esi
0000000000004592         mov        rcx, rsp
0000000000004595         mov        rsi, rax
0000000000004598         mov        qword [rsp+0x48+var_44], 0x0
00000000000045a1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000045aa         mov        qword [rsp+0x48+var_34], 0x0
00000000000045b3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000045bc         mov        qword [rsp+0x48+var_24], 0x0
00000000000045c5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000045ce         mov        dword [rsp+0x48+var_14], 0x0
00000000000045d6         call       quotearg_n_options                          ; quotearg_n_options
00000000000045db         mov        rdx, qword [rsp+0x48+var_10]
00000000000045e0         xor        rdx, qword [fs:0x28]
00000000000045e9         jne        loc_45f5

00000000000045eb         add        rsp, 0x48
00000000000045ef         ret
                        ; endp

                     loc_45f0:
00000000000045f0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_45f5:
00000000000045f5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000045fa         align      512                                         ; End of unwind block (FDE at 0x74f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004600         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x7514)
0000000000004603         mov        esi, edi
0000000000004605         xor        edi, edi
0000000000004607         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000460c         align      16                                          ; End of unwind block (FDE at 0x7514)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004610         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7528)
0000000000004613         mov        rdx, rsi
0000000000004616         mov        esi, edi
0000000000004618         xor        edi, edi
000000000000461a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000461f         align      32                                          ; End of unwind block (FDE at 0x7528)

                     quotearg_char_mem:
0000000000004620         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x753c), CODE XREF=quotearg_char+11
0000000000004624         mov        ecx, edx
0000000000004626         mov        rax, qword [fs:0x28]
000000000000462f         mov        qword [rsp+0x48+var_10], rax
0000000000004634         xor        eax, eax
0000000000004636         mov        rax, qword [qword_209250]                   ; qword_209250
000000000000463d         mov        r8, rsp
0000000000004640         and        ecx, 0x1f
0000000000004643         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000464b         mov        qword [rsp+0x48+var_18], rax
0000000000004650         mov        eax, edx
0000000000004652         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004656         shr        al, 0x5
0000000000004659         movzx      eax, al
000000000000465c         lea        r9, qword [r8+rax*4+8]
0000000000004661         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209230
0000000000004669         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000466e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209240
0000000000004676         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000467b         mov        edx, dword [r9]
000000000000467e         mov        eax, edx
0000000000004680         shr        eax, cl
0000000000004682         not        eax
0000000000004684         and        eax, 0x1
0000000000004687         shl        eax, cl
0000000000004689         mov        rcx, r8
000000000000468c         xor        eax, edx
000000000000468e         mov        rdx, rsi
0000000000004691         mov        rsi, rdi
0000000000004694         mov        dword [r9], eax
0000000000004697         xor        edi, edi
0000000000004699         call       quotearg_n_options                          ; quotearg_n_options
000000000000469e         mov        rsi, qword [rsp+0x48+var_10]
00000000000046a3         xor        rsi, qword [fs:0x28]
00000000000046ac         jne        loc_46b3

00000000000046ae         add        rsp, 0x48
00000000000046b2         ret
                        ; endp

                     loc_46b3:
00000000000046b3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000046b8         align      64                                          ; End of unwind block (FDE at 0x753c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
00000000000046c0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x7558)
00000000000046c4         mov        rsi, 0xffffffffffffffff
00000000000046cb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
00000000000046d0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x7558), Begin of unwind block (FDE at 0x756c), CODE XREF=close_stdout+101
00000000000046d5         mov        rsi, 0xffffffffffffffff
00000000000046dc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000046e1         align      16                                          ; End of unwind block (FDE at 0x756c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
00000000000046f0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x7580)
00000000000046f5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000046fa         align      256                                         ; End of unwind block (FDE at 0x7580)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004700         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7594), CODE XREF=compare_files+1295, compare_files+1361, compare_files+1413, compare_files+1460
0000000000004704         mov        rax, rdx
0000000000004707         mov        rdx, qword [fs:0x28]
0000000000004710         mov        qword [rsp+0x48+var_10], rdx
0000000000004715         xor        edx, edx
0000000000004717         cmp        esi, 0xa
000000000000471a         je         loc_4784

000000000000471c         mov        dword [rsp+0x48+var_48], esi
000000000000471f         mov        rcx, rsp
0000000000004722         mov        rdx, 0xffffffffffffffff
0000000000004729         mov        rsi, rax
000000000000472c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004735         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000473e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004747         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004750         mov        qword [rsp+0x48+var_24], 0x0
0000000000004759         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004762         mov        dword [rsp+0x48+var_14], 0x0
000000000000476a         call       quotearg_n_options                          ; quotearg_n_options
000000000000476f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004774         xor        rcx, qword [fs:0x28]
000000000000477d         jne        loc_4789

000000000000477f         add        rsp, 0x48
0000000000004783         ret
                        ; endp

                     loc_4784:
0000000000004784         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4789:
0000000000004789         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000478e         align      16                                          ; End of unwind block (FDE at 0x7594)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000004790         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x75b0), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004794         mov        r9, rcx
0000000000004797         mov        rcx, qword [qword_209250]                   ; qword_209250
000000000000479e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000047a6         mov        rax, qword [fs:0x28]
00000000000047af         mov        qword [rsp+0x48+var_10], rax
00000000000047b4         xor        eax, eax
00000000000047b6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000047ba         test       rsi, rsi
00000000000047bd         mov        qword [rsp+0x48+var_18], rcx
00000000000047c2         mov        dword [rsp+0x48+var_48], 0xa
00000000000047c9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209230
00000000000047d1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000047d6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209240
00000000000047de         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000047e3         je         loc_4817

00000000000047e5         test       rdx, rdx
00000000000047e8         je         loc_4817

00000000000047ea         mov        qword [rsp+0x48+var_20], rsi
00000000000047ef         mov        qword [rsp+0x48+var_18], rdx
00000000000047f4         mov        rcx, rsp
00000000000047f7         mov        rdx, r8
00000000000047fa         mov        rsi, r9
00000000000047fd         call       quotearg_n_options                          ; quotearg_n_options
0000000000004802         mov        rdi, qword [rsp+0x48+var_10]
0000000000004807         xor        rdi, qword [fs:0x28]
0000000000004810         jne        loc_481c

0000000000004812         add        rsp, 0x48
0000000000004816         ret
                        ; endp

                     loc_4817:
0000000000004817         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_481c:
000000000000481c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004821         align      16                                          ; End of unwind block (FDE at 0x75b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000004830         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x75cc)
0000000000004837         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000483c         align      64                                          ; End of unwind block (FDE at 0x75cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004840         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x75e0)
0000000000004843         mov        r8, 0xffffffffffffffff
000000000000484a         mov        rdx, rsi
000000000000484d         mov        rsi, rdi
0000000000004850         xor        edi, edi
0000000000004852         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004857         align      32                                          ; End of unwind block (FDE at 0x75e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004860         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x75f4)
0000000000004863         mov        rcx, rdx
0000000000004866         mov        rdx, rsi
0000000000004869         mov        rsi, rdi
000000000000486c         xor        edi, edi
000000000000486e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004873         align      128                                         ; End of unwind block (FDE at 0x75f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004880         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7608), quote_quoting_options
0000000000004887         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000488c         align      16                                          ; End of unwind block (FDE at 0x7608)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004890         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x761c), quote_quoting_options
0000000000004897         mov        rdx, rsi
000000000000489a         mov        rsi, rdi
000000000000489d         xor        edi, edi
000000000000489f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000048a4         align      16                                          ; End of unwind block (FDE at 0x761c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000048b0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7630), quote_quoting_options
00000000000048b7         mov        rdx, 0xffffffffffffffff
00000000000048be         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000048c3         align      16                                          ; End of unwind block (FDE at 0x7630)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
00000000000048d0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7644), quote_quoting_options, CODE XREF=main+687, main+828
00000000000048d7         mov        rsi, rdi
00000000000048da         mov        rdx, 0xffffffffffffffff
00000000000048e1         xor        edi, edi
00000000000048e3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000048e8         align      16                                          ; End of unwind block (FDE at 0x7644)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     dup_safer:
00000000000048f0         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0x765c), CODE XREF=fopen_safer+50
00000000000048f5         xor        esi, esi
00000000000048f7         xor        eax, eax
00000000000048f9         jmp        rpl_fcntl                                   ; rpl_fcntl
00000000000048fe         align      256                                         ; End of unwind block (FDE at 0x765c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000004900         push       r15                                         ; Begin of unwind block (FDE at 0x7674), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000004902         push       r14
0000000000004904         push       r13
0000000000004906         push       r12
0000000000004908         mov        r12, r9
000000000000490b         push       rbp
000000000000490c         push       rbx
000000000000490d         mov        rbp, rdi
0000000000004910         mov        rbx, r8
0000000000004913         sub        rsp, 0x28
0000000000004917         test       rsi, rsi
000000000000491a         je         loc_4a38

0000000000004920         mov        r8, rdx
0000000000004923         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000492a         mov        r9, rcx
000000000000492d         xor        eax, eax
000000000000492f         mov        rcx, rsi
0000000000004932         mov        esi, 0x1
0000000000004937         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_493c:
000000000000493c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x675b, CODE XREF=version_etc_arn+337
0000000000004943         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004945         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000494a         call       j_dcgettext                                 ; dcgettext
000000000000494f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004956         mov        rcx, rax
0000000000004959         mov        r8d, 0x7e3
000000000000495f         mov        esi, 0x1
0000000000004964         mov        rdi, rbp
0000000000004967         xor        eax, eax
0000000000004969         call       j___fprintf_chk                             ; __fprintf_chk
000000000000496e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004975         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004977         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000497c         call       j_dcgettext                                 ; dcgettext
0000000000004981         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004984         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004987         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000498c         cmp        r12, 0x9
0000000000004990         ja         loc_4cd0

0000000000004996         lea        rdx, qword [switch_table_6a44]              ; switch_table_6a44
000000000000499d         movsxd     rax, dword [rdx+r12*4]
00000000000049a1         add        rax, rdx
00000000000049a4         jmp        rax                                         ; switch statement using table at 0x6a44, with 10 cases, 0x49b0,0x4a26,0x4a60,0x4ab8,0x4af8,0x4b40,0x4b90,0x4be8,0x4c18,0x4c80
00000000000049a6         align      16

                     loc_49b0:
00000000000049b0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
00000000000049b4         mov        rax, qword [rbx+0x10]
00000000000049b8         lea        rsi, qword [aWrittenBySSSns_6958]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000049bf         mov        r8, qword [rbx+8]
00000000000049c3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000049c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000049ca         mov        r13, qword [rbx+0x30]
00000000000049ce         mov        r12, qword [rbx+0x28]
00000000000049d2         mov        qword [rsp+0x58+var_48], r9
00000000000049d7         mov        r15, qword [rbx+0x20]
00000000000049db         mov        r14, qword [rbx+0x18]
00000000000049df         mov        qword [rsp+0x58+var_58], rax
00000000000049e3         mov        qword [rsp+0x58+var_50], r8
00000000000049e8         mov        rbx, qword [rbx]
00000000000049eb         call       j_dcgettext                                 ; dcgettext
00000000000049f0         sub        rsp, 0x8

                     loc_49f4:
00000000000049f4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000049f9         mov        rdx, rax
00000000000049fc         mov        rcx, rbx
00000000000049ff         mov        esi, 0x1
0000000000004a04         mov        rdi, rbp
0000000000004a07         xor        eax, eax
0000000000004a09         push       r9
0000000000004a0b         push       r13
0000000000004a0d         push       r12
0000000000004a0f         push       r15
0000000000004a11         push       r14
0000000000004a13         mov        r9, qword [rsp+0x88+var_58]
0000000000004a18         mov        r8, qword [rsp+0x88+var_50]
0000000000004a1d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004a22         add        rsp, 0x30

                     loc_4a26:
0000000000004a26         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000004a2a         pop        rbx
0000000000004a2b         pop        rbp
0000000000004a2c         pop        r12
0000000000004a2e         pop        r13
0000000000004a30         pop        r14
0000000000004a32         pop        r15
0000000000004a34         ret
                        ; endp
0000000000004a35         align      8

                     loc_4a38:
0000000000004a38         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000004a3b         mov        rcx, rdx
0000000000004a3e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004a45         mov        esi, 0x1
0000000000004a4a         xor        eax, eax
0000000000004a4c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004a51         jmp        loc_493c
0000000000004a56         align      32

                     loc_4a60:
0000000000004a60         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004a64         mov        r9, qword [rbx+0x38]
0000000000004a68         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000004a6f         mov        rax, qword [rbx+0x10]
0000000000004a73         mov        r8, qword [rbx+8]
0000000000004a77         mov        edx, 0x5
0000000000004a7c         mov        r13, qword [rbx+0x30]
0000000000004a80         mov        r12, qword [rbx+0x28]
0000000000004a84         mov        r15, qword [rbx+0x20]
0000000000004a88         mov        r14, qword [rbx+0x18]
0000000000004a8c         mov        rbx, qword [rbx]
0000000000004a8f         mov        qword [rsp+0x58+var_40], r10
0000000000004a94         mov        qword [rsp+0x58+var_48], r9
0000000000004a99         mov        qword [rsp+0x58+var_58], rax
0000000000004a9d         mov        qword [rsp+0x58+var_50], r8

                     loc_4aa2:
0000000000004aa2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004aa4         call       j_dcgettext                                 ; dcgettext
0000000000004aa9         mov        r10, qword [rsp+0x58+var_40]
0000000000004aae         push       r10
0000000000004ab0         jmp        loc_49f4
0000000000004ab5         align      8

                     loc_4ab8:
0000000000004ab8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000004abb         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004ac2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ac7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ac9         call       j_dcgettext                                 ; dcgettext
0000000000004ace         add        rsp, 0x28
0000000000004ad2         mov        rcx, rbx
0000000000004ad5         mov        rdi, rbp
0000000000004ad8         pop        rbx
0000000000004ad9         pop        rbp
0000000000004ada         pop        r12
0000000000004adc         pop        r13
0000000000004ade         pop        r14
0000000000004ae0         pop        r15
0000000000004ae2         mov        rdx, rax
0000000000004ae5         mov        esi, 0x1
0000000000004aea         xor        eax, eax
0000000000004aec         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004af1         align      8

                     loc_4af8:
0000000000004af8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000004afc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004b03         mov        rbx, qword [rbx]
0000000000004b06         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b0b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b0d         call       j_dcgettext                                 ; dcgettext
0000000000004b12         add        rsp, 0x28
0000000000004b16         mov        r8, r12
0000000000004b19         mov        rcx, rbx
0000000000004b1c         mov        rdi, rbp
0000000000004b1f         mov        rdx, rax
0000000000004b22         mov        esi, 0x1
0000000000004b27         pop        rbx
0000000000004b28         pop        rbp
0000000000004b29         pop        r12
0000000000004b2b         pop        r13
0000000000004b2d         pop        r14
0000000000004b2f         pop        r15
0000000000004b31         xor        eax, eax
0000000000004b33         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004b38         align      64

                     loc_4b40:
0000000000004b40         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004b44         mov        r12, qword [rbx+8]
0000000000004b48         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004b4f         mov        rbx, qword [rbx]
0000000000004b52         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b57         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b59         call       j_dcgettext                                 ; dcgettext
0000000000004b5e         add        rsp, 0x28
0000000000004b62         mov        r9, r13
0000000000004b65         mov        r8, r12
0000000000004b68         mov        rcx, rbx
0000000000004b6b         mov        rdi, rbp
0000000000004b6e         mov        rdx, rax
0000000000004b71         pop        rbx
0000000000004b72         pop        rbp
0000000000004b73         pop        r12
0000000000004b75         pop        r13
0000000000004b77         pop        r14
0000000000004b79         pop        r15
0000000000004b7b         mov        esi, 0x1
0000000000004b80         xor        eax, eax
0000000000004b82         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004b87         align      16

                     loc_4b90:
0000000000004b90         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004b97         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b9c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b9e         mov        r14, qword [rbx+0x18]
0000000000004ba2         mov        r13, qword [rbx+0x10]
0000000000004ba6         mov        r12, qword [rbx+8]
0000000000004baa         mov        rbx, qword [rbx]
0000000000004bad         call       j_dcgettext                                 ; dcgettext
0000000000004bb2         sub        rsp, 0x8

                     loc_4bb6:
0000000000004bb6         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004bb8         mov        rdx, rax
0000000000004bbb         mov        r9, r13
0000000000004bbe         mov        r8, r12
0000000000004bc1         mov        rcx, rbx
0000000000004bc4         mov        rdi, rbp
0000000000004bc7         mov        esi, 0x1
0000000000004bcc         xor        eax, eax
0000000000004bce         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004bd3         pop        rax
0000000000004bd4         pop        rdx
0000000000004bd5         add        rsp, 0x28
0000000000004bd9         pop        rbx
0000000000004bda         pop        rbp
0000000000004bdb         pop        r12
0000000000004bdd         pop        r13
0000000000004bdf         pop        r14
0000000000004be1         pop        r15
0000000000004be3         ret
                        ; endp
0000000000004be4         align      8

                     loc_4be8:
0000000000004be8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004bec         lea        rsi, qword [aWrittenBySSSns_68d8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004bf3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bf8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bfa         mov        r14, qword [rbx+0x18]
0000000000004bfe         mov        r13, qword [rbx+0x10]
0000000000004c02         mov        r12, qword [rbx+8]
0000000000004c06         mov        rbx, qword [rbx]
0000000000004c09         call       j_dcgettext                                 ; dcgettext
0000000000004c0e         push       r15
0000000000004c10         jmp        loc_4bb6
0000000000004c12         align      8

                     loc_4c18:
0000000000004c18         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004c1c         mov        r12, qword [rbx+0x28]
0000000000004c20         lea        rsi, qword [aWrittenBySSSns_6900]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004c27         mov        r15, qword [rbx+0x20]
0000000000004c2b         mov        r14, qword [rbx+0x18]
0000000000004c2f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c34         mov        r13, qword [rbx+0x10]
0000000000004c38         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c3a         mov        rbx, qword [rbx]
0000000000004c3d         mov        qword [rsp+0x58+var_58], r8
0000000000004c41         call       j_dcgettext                                 ; dcgettext
0000000000004c46         sub        rsp, 0x8
0000000000004c4a         mov        r9, r13
0000000000004c4d         push       r12
0000000000004c4f         push       r15
0000000000004c51         push       r14

                     loc_4c53:
0000000000004c53         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004c58         mov        rcx, rbx
0000000000004c5b         mov        rdx, rax
0000000000004c5e         mov        rdi, rbp
0000000000004c61         mov        esi, 0x1
0000000000004c66         xor        eax, eax
0000000000004c68         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004c6d         add        rsp, 0x20
0000000000004c71         add        rsp, 0x28
0000000000004c75         pop        rbx
0000000000004c76         pop        rbp
0000000000004c77         pop        r12
0000000000004c79         pop        r13
0000000000004c7b         pop        r14
0000000000004c7d         pop        r15
0000000000004c7f         ret
                        ; endp

                     loc_4c80:
0000000000004c80         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004c84         mov        r13, qword [rbx+0x30]
0000000000004c88         lea        rsi, qword [aWrittenBySSSns_6928]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004c8f         mov        r12, qword [rbx+0x28]
0000000000004c93         mov        r15, qword [rbx+0x20]
0000000000004c97         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c9c         mov        r14, qword [rbx+0x18]
0000000000004ca0         mov        r8, qword [rbx+8]
0000000000004ca4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ca6         mov        qword [rsp+0x58+var_50], r9
0000000000004cab         mov        rbx, qword [rbx]
0000000000004cae         mov        qword [rsp+0x58+var_58], r8
0000000000004cb2         call       j_dcgettext                                 ; dcgettext
0000000000004cb7         push       r13
0000000000004cb9         push       r12
0000000000004cbb         push       r15
0000000000004cbd         push       r14
0000000000004cbf         mov        r9, qword [rsp+0x78+var_50]
0000000000004cc4         jmp        loc_4c53
0000000000004cc6         align      16

                     loc_4cd0:
0000000000004cd0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004cd4         mov        r9, qword [rbx+0x38]
0000000000004cd8         mov        edx, 0x5
0000000000004cdd         mov        rax, qword [rbx+0x10]
0000000000004ce1         mov        r8, qword [rbx+8]
0000000000004ce5         lea        rsi, qword [aWrittenBySSSns_69c0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004cec         mov        r13, qword [rbx+0x30]
0000000000004cf0         mov        r12, qword [rbx+0x28]
0000000000004cf4         mov        r15, qword [rbx+0x20]
0000000000004cf8         mov        r14, qword [rbx+0x18]
0000000000004cfc         mov        qword [rsp+0x58+var_40], r10
0000000000004d01         mov        qword [rsp+0x58+var_48], r9
0000000000004d06         mov        qword [rsp+0x58+var_58], rax
0000000000004d0a         mov        qword [rsp+0x58+var_50], r8
0000000000004d0f         mov        rbx, qword [rbx]
0000000000004d12         jmp        loc_4aa2
0000000000004d17         align      32                                          ; End of unwind block (FDE at 0x7674)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004d20         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x7788)
0000000000004d23         cmp        qword [r8], 0x0
0000000000004d27         je         j_version_etc_arn                           ; version_etc_arn

0000000000004d29         nop        dword [rax]

                     loc_4d30:
0000000000004d30         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004d34         cmp        qword [r8+r9*8], 0x0
0000000000004d39         jne        loc_4d30

                     j_version_etc_arn:        // version_etc_arn
0000000000004d3b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004d40         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x7788), Begin of unwind block (FDE at 0x779c)
0000000000004d44         mov        r10, r8
0000000000004d47         xor        r9d, r9d
0000000000004d4a         mov        rax, qword [fs:0x28]
0000000000004d53         mov        qword [rsp+0x68+var_10], rax
0000000000004d58         xor        eax, eax
0000000000004d5a         mov        r8, rsp
0000000000004d5d         nop        dword [rax]

                     loc_4d60:
0000000000004d60         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004d63         cmp        eax, 0x2f
0000000000004d66         ja         loc_4daa

0000000000004d68         mov        r11d, eax
0000000000004d6b         add        r11, qword [r10+0x10]
0000000000004d6f         add        eax, 0x8
0000000000004d72         mov        dword [r10], eax

                     loc_4d75:
0000000000004d75         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004d78         test       rax, rax
0000000000004d7b         mov        qword [r8+r9*8], rax
0000000000004d7f         je         loc_4d8b

0000000000004d81         add        r9, 0x1
0000000000004d85         cmp        r9, 0xa
0000000000004d89         jne        loc_4d60

                     loc_4d8b:
0000000000004d8b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004d90         mov        rax, qword [rsp+0x68+var_10]
0000000000004d95         xor        rax, qword [fs:0x28]
0000000000004d9e         jne        loc_4da5

0000000000004da0         add        rsp, 0x68
0000000000004da4         ret
                        ; endp

                     loc_4da5:
0000000000004da5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4daa:
0000000000004daa         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004dae         lea        rax, qword [r11+8]
0000000000004db2         mov        qword [r10+8], rax
0000000000004db6         jmp        loc_4d75
0000000000004db8         align      64                                          ; End of unwind block (FDE at 0x779c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004dc0         push       rbp                                         ; Begin of unwind block (FDE at 0x77b8), CODE XREF=main+573
0000000000004dc1         push       rbx
0000000000004dc2         mov        r10d, 0x20
0000000000004dc8         xor        r11d, r11d
0000000000004dcb         sub        rsp, 0xb8
0000000000004dd2         mov        rax, qword [fs:0x28]
0000000000004ddb         mov        qword [rsp+0xc8+var_50], rax
0000000000004de0         xor        eax, eax
0000000000004de2         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004dea         mov        qword [rsp+0xc8+var_28], r8
0000000000004df2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000004dfa         lea        r8, qword [rsp+0xc8+var_A8]
0000000000004dff         mov        qword [rsp+0xc8+var_20], r9
0000000000004e07         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000004e0f         mov        qword [rsp+0xc8+var_B8], rax
0000000000004e14         lea        rax, qword [rsp+0xc8+var_48]
0000000000004e1c         xor        r9d, r9d
0000000000004e1f         mov        qword [rsp+0xc8+var_B0], rax
0000000000004e24         mov        rbp, rax
0000000000004e27         nop        word [rax+rax]

                     loc_4e30:
0000000000004e30         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004e34         ja         loc_4e8c

0000000000004e36         mov        eax, r10d
0000000000004e39         mov        r11d, 0x1
0000000000004e3f         add        r10d, 0x8
0000000000004e43         add        rax, rbp

                     loc_4e46:
0000000000004e46         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004e49         test       rax, rax
0000000000004e4c         mov        qword [r8+r9*8], rax
0000000000004e50         je         loc_4e5c

0000000000004e52         add        r9, 0x1
0000000000004e56         cmp        r9, 0xa
0000000000004e5a         jne        loc_4e30

                     loc_4e5c:
0000000000004e5c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000004e5f         jne        loc_4e85

                     loc_4e61:
0000000000004e61         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004e66         mov        rax, qword [rsp+0xc8+var_50]
0000000000004e6b         xor        rax, qword [fs:0x28]
0000000000004e74         jne        loc_4e80

0000000000004e76         add        rsp, 0xb8
0000000000004e7d         pop        rbx
0000000000004e7e         pop        rbp
0000000000004e7f         ret
                        ; endp

                     loc_4e80:
0000000000004e80         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4e85:
0000000000004e85         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000004e8a         jmp        loc_4e61

                     loc_4e8c:
0000000000004e8c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000004e8f         add        rbx, 0x8
0000000000004e93         jmp        loc_4e46
0000000000004e95         align      32                                          ; End of unwind block (FDE at 0x77b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004ea0         push       rbx                                         ; Begin of unwind block (FDE at 0x77e4)
0000000000004ea1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004ea8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ead         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004eaf         call       j_dcgettext                                 ; dcgettext
0000000000004eb4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000004ebb         mov        rsi, rax
0000000000004ebe         mov        edi, 0x1
0000000000004ec3         xor        eax, eax
0000000000004ec5         call       j___printf_chk                              ; __printf_chk
0000000000004eca         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000004ed1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ed6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ed8         call       j_dcgettext                                 ; dcgettext
0000000000004edd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004ee4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x60f7
0000000000004eeb         mov        rsi, rax
0000000000004eee         mov        edi, 0x1
0000000000004ef3         xor        eax, eax
0000000000004ef5         call       j___printf_chk                              ; __printf_chk
0000000000004efa         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004f01         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000004f08         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f0a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f0f         call       j_dcgettext                                 ; dcgettext
0000000000004f14         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004f17         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004f1a         pop        rbx
0000000000004f1b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004f20         push       rbx                                         ; End of unwind block (FDE at 0x77e4), Begin of unwind block (FDE at 0x7804), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004f21         mov        rbx, rdi
0000000000004f24         call       j_malloc                                    ; malloc
0000000000004f29         test       rax, rax
0000000000004f2c         jne        loc_4f33

0000000000004f2e         test       rbx, rbx
0000000000004f31         jne        loc_4f35

                     loc_4f33:
0000000000004f33         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004f34         ret
                        ; endp

                     loc_4f35:
0000000000004f35         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f3a:
0000000000004f3a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7804)
                     xnmalloc:
0000000000004f40         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7820)
0000000000004f43         mul        rsi
0000000000004f46         mov        rdi, rax
0000000000004f49         seto       al
0000000000004f4c         test       rdi, rdi
0000000000004f4f         js         loc_4f5b

0000000000004f51         movzx      eax, al
0000000000004f54         test       rax, rax
0000000000004f57         jne        loc_4f5b

0000000000004f59         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_4f5b:
0000000000004f5b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000004f5f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f64:
0000000000004f64         nop                                                    ; End of unwind block (FDE at 0x7820)
0000000000004f66         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000004f70         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x7834)
                        ; endp
0000000000004f72         align      128                                         ; End of unwind block (FDE at 0x7834)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000004f80         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x7848), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000004f83         push       rbx
0000000000004f84         mov        rbx, rsi
0000000000004f87         jne        loc_4f8e

0000000000004f89         test       rdi, rdi
0000000000004f8c         jne        loc_4fa8

                     loc_4f8e:
0000000000004f8e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000004f91         call       j_realloc                                   ; realloc
0000000000004f96         test       rax, rax
0000000000004f99         jne        loc_4fa0

0000000000004f9b         test       rbx, rbx
0000000000004f9e         jne        loc_4fb1

                     loc_4fa0:
0000000000004fa0         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000004fa1         ret
                        ; endp
0000000000004fa2         align      8

                     loc_4fa8:
0000000000004fa8         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000004fad         xor        eax, eax
0000000000004faf         pop        rbx
0000000000004fb0         ret
                        ; endp

                     loc_4fb1:
0000000000004fb1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4fb6:
0000000000004fb6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7848)
                     xnrealloc:
0000000000004fc0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x786c)
0000000000004fc3         mul        rdx
0000000000004fc6         mov        rsi, rax
0000000000004fc9         seto       al
0000000000004fcc         test       rsi, rsi
0000000000004fcf         js         loc_4fdb

0000000000004fd1         movzx      eax, al
0000000000004fd4         test       rax, rax
0000000000004fd7         jne        loc_4fdb

0000000000004fd9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_4fdb:
0000000000004fdb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000004fdf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4fe4:
0000000000004fe4         nop                                                    ; End of unwind block (FDE at 0x786c)
0000000000004fe6         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000004ff0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7880)
0000000000004ff3         mov        r9, rdx
0000000000004ff6         mov        rcx, qword [rsi]
0000000000004ff9         je         loc_5030

0000000000004ffb         xor        edx, edx
0000000000004ffd         movabs     rax, 0x5555555555555554
0000000000005007         div        r9
000000000000500a         cmp        rax, rcx
000000000000500d         jbe        loc_504b

000000000000500f         mov        rax, rcx
0000000000005012         shr        rax, 0x1
0000000000005015         lea        rcx, qword [rax+rcx+1]

                     loc_501a:
000000000000501a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000501d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005021         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005024         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005029         align      16

                     loc_5030:
0000000000005030         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005033         je         loc_5058

                     loc_5035:
0000000000005035         mov        rax, rcx                                    ; CODE XREF=sub_5054+28
0000000000005038         mul        r9
000000000000503b         seto       dl
000000000000503e         test       rax, rax
0000000000005041         movzx      edx, dl
0000000000005044         js         loc_504b

0000000000005046         test       rdx, rdx
0000000000005049         je         loc_501a

                     loc_504b:
000000000000504b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000504f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5054:
0000000000005054         nop        dword [rax]
                        ; endp

                     loc_5058:
0000000000005058         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000505a         mov        eax, 0x80
000000000000505f         xor        r8d, r8d
0000000000005062         div        r9
0000000000005065         test       rax, rax
0000000000005068         sete       r8b
000000000000506c         lea        rcx, qword [r8+rax]
0000000000005070         jmp        loc_5035
0000000000005072         align      128                                         ; End of unwind block (FDE at 0x7880)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005080         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7898), CODE XREF=readlinebuffer_delim+108
0000000000005083         mov        rax, qword [rsi]
0000000000005086         je         loc_50b0

0000000000005088         movabs     rdx, 0x5555555555555553
0000000000005092         cmp        rax, rdx
0000000000005095         ja         loc_50c1

0000000000005097         mov        rdx, rax
000000000000509a         shr        rdx, 0x1
000000000000509d         lea        rax, qword [rdx+rax+1]

                     loc_50a2:
00000000000050a2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
00000000000050a5         mov        rsi, rax                                    ; argument #2 for method xrealloc
00000000000050a8         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000050ad         align      16

                     loc_50b0:
00000000000050b0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000050b3         mov        edx, 0x80
00000000000050b8         cmove      rax, rdx
00000000000050bc         test       rax, rax
00000000000050bf         jns        loc_50a2

                     loc_50c1:
00000000000050c1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000050c5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_50ca:
00000000000050ca         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7898)
                     xzalloc:
00000000000050d0         push       rbx                                         ; Begin of unwind block (FDE at 0x78b0)
00000000000050d1         mov        rbx, rdi
00000000000050d4         call       xmalloc                                     ; xmalloc
00000000000050d9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000050dc         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000050de         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000050e1         pop        rbx
00000000000050e2         jmp        j_memset                                    ; memset
                        ; endp
00000000000050e7         align      16                                          ; End of unwind block (FDE at 0x78b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000050f0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x78cc)
00000000000050f3         sub        rsp, 0x8
00000000000050f7         mul        rsi
00000000000050fa         seto       dl
00000000000050fd         test       rax, rax
0000000000005100         js         loc_5119

0000000000005102         movzx      edx, dl
0000000000005105         test       rdx, rdx
0000000000005108         jne        loc_5119

000000000000510a         call       j_calloc                                    ; calloc
000000000000510f         test       rax, rax
0000000000005112         je         loc_5119

0000000000005114         add        rsp, 0x8
0000000000005118         ret
                        ; endp

                     loc_5119:
0000000000005119         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_511e:
000000000000511e         nop                                                    ; End of unwind block (FDE at 0x78cc)
                        ; endp

                     xmemdup:
0000000000005120         push       rbp                                         ; Begin of unwind block (FDE at 0x78e8), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000005121         push       rbx
0000000000005122         mov        rbp, rdi
0000000000005125         mov        rdi, rsi
0000000000005128         mov        rbx, rsi
000000000000512b         sub        rsp, 0x8
000000000000512f         call       xmalloc                                     ; xmalloc
0000000000005134         add        rsp, 0x8
0000000000005138         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000513b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000513e         pop        rbx
000000000000513f         pop        rbp
0000000000005140         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005143         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005148         align      16                                          ; End of unwind block (FDE at 0x78e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005150         push       rbx                                         ; Begin of unwind block (FDE at 0x7910)
0000000000005151         mov        rbx, rdi
0000000000005154         call       j_strlen                                    ; strlen
0000000000005159         mov        rdi, rbx
000000000000515c         lea        rsi, qword [rax+1]
0000000000005160         pop        rbx
0000000000005161         jmp        xmemdup                                     ; xmemdup
0000000000005163         align      16                                          ; End of unwind block (FDE at 0x7910)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005170         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x792c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000005177         sub        rsp, 0x8
000000000000517b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005180         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005182         call       j_dcgettext                                 ; dcgettext
0000000000005187         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000518d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x620f
0000000000005194         mov        rcx, rax
0000000000005197         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005199         xor        eax, eax
000000000000519b         call       j_error                                     ; error
00000000000051a0         call       j_abort                                     ; abort
                        ; endp
00000000000051a5         align      16                                          ; End of unwind block (FDE at 0x792c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     collate_error:
00000000000051b0         push       r14                                         ; Begin of unwind block (FDE at 0x7944), CODE XREF=xmemcoll+51, xmemcoll0+53
00000000000051b2         push       r13
00000000000051b4         mov        r14d, edi
00000000000051b7         push       r12
00000000000051b9         push       rbp
00000000000051ba         mov        r12, rdx
00000000000051bd         push       rbx
00000000000051be         mov        rbx, rsi
00000000000051c1         lea        rsi, qword [aStringComparis]                ; argument "msgid" for method j_dcgettext, "string comparison failed"
00000000000051c8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051cd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000051cf         mov        r13, r8
00000000000051d2         mov        rbp, rcx
00000000000051d5         call       j_dcgettext                                 ; dcgettext
00000000000051da         mov        esi, r14d                                   ; argument "__errnum" for method j_error
00000000000051dd         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000051e0         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000051e2         xor        eax, eax
00000000000051e4         call       j_error                                     ; error
00000000000051e9         lea        rsi, qword [aSetLcallcToWor]                ; argument "msgid" for method j_dcgettext, "Set LC_ALL='C' to work around the problem."
00000000000051f0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051f5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000051f7         call       j_dcgettext                                 ; dcgettext
00000000000051fc         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000051fe         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000005201         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005203         xor        eax, eax
0000000000005205         call       j_error                                     ; error
000000000000520a         mov        rcx, r13
000000000000520d         mov        rdx, rbp
0000000000005210         mov        esi, 0x8
0000000000005215         mov        edi, 0x1
000000000000521a         call       quotearg_n_style_mem                        ; quotearg_n_style_mem
000000000000521f         mov        rcx, r12
0000000000005222         mov        rdx, rbx
0000000000005225         mov        esi, 0x8
000000000000522a         xor        edi, edi
000000000000522c         mov        rbp, rax
000000000000522f         call       quotearg_n_style_mem                        ; quotearg_n_style_mem
0000000000005234         lea        rsi, qword [aTheStringsComp]                ; argument "msgid" for method j_dcgettext, "The strings compared were %s and %s."
000000000000523b         mov        rbx, rax
000000000000523e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005243         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005245         call       j_dcgettext                                 ; dcgettext
000000000000524a         mov        r8, rbp
000000000000524d         mov        rcx, rbx
0000000000005250         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000005256         pop        rbx
0000000000005257         pop        rbp
0000000000005258         pop        r12
000000000000525a         pop        r13
000000000000525c         pop        r14
000000000000525e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000005261         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005263         xor        eax, eax
0000000000005265         jmp        j_error                                     ; error
                        ; endp
000000000000526a         align      16                                          ; End of unwind block (FDE at 0x7944)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemcoll:
0000000000005270         push       r14                                         ; Begin of unwind block (FDE at 0x7980), CODE XREF=check_order.isra.1.part.2+128, compare_files+998
0000000000005272         push       r13
0000000000005274         mov        r13, rcx
0000000000005277         push       r12
0000000000005279         push       rbp
000000000000527a         mov        r12, rdx
000000000000527d         push       rbx
000000000000527e         mov        rbp, rsi
0000000000005281         mov        rbx, rdi
0000000000005284         call       memcoll                                     ; memcoll
0000000000005289         mov        r14d, eax
000000000000528c         call       j___errno_location                          ; __errno_location
0000000000005291         mov        edi, dword [rax]
0000000000005293         test       edi, edi
0000000000005295         je         loc_52a8

0000000000005297         mov        r8, r13
000000000000529a         mov        rcx, r12
000000000000529d         mov        rdx, rbp
00000000000052a0         mov        rsi, rbx
00000000000052a3         call       collate_error                               ; collate_error

                     loc_52a8:
00000000000052a8         pop        rbx                                         ; CODE XREF=xmemcoll+37
00000000000052a9         mov        eax, r14d
00000000000052ac         pop        rbp
00000000000052ad         pop        r12
00000000000052af         pop        r13
00000000000052b1         pop        r14
00000000000052b3         ret
                        ; endp
00000000000052b4         align      64                                          ; End of unwind block (FDE at 0x7980)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemcoll0:
00000000000052c0         push       r14                                         ; Begin of unwind block (FDE at 0x79bc)
00000000000052c2         push       r13
00000000000052c4         mov        r14, rcx
00000000000052c7         push       r12
00000000000052c9         push       rbp
00000000000052ca         mov        r12, rdx
00000000000052cd         push       rbx
00000000000052ce         mov        rbp, rdi
00000000000052d1         mov        rbx, rsi
00000000000052d4         call       memcoll0                                    ; memcoll0
00000000000052d9         mov        r13d, eax
00000000000052dc         call       j___errno_location                          ; __errno_location
00000000000052e1         mov        edi, dword [rax]
00000000000052e3         test       edi, edi
00000000000052e5         je         loc_52fa

00000000000052e7         lea        rdx, qword [rbx-1]
00000000000052eb         lea        r8, qword [r14-1]
00000000000052ef         mov        rcx, r12
00000000000052f2         mov        rsi, rbp
00000000000052f5         call       collate_error                               ; collate_error

                     loc_52fa:
00000000000052fa         pop        rbx                                         ; CODE XREF=xmemcoll0+37
00000000000052fb         mov        eax, r13d
00000000000052fe         pop        rbp
00000000000052ff         pop        r12
0000000000005301         pop        r13
0000000000005303         pop        r14
0000000000005305         ret
                        ; endp
0000000000005306         align      16                                          ; End of unwind block (FDE at 0x79bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005310         push       r12                                         ; Begin of unwind block (FDE at 0x79fc), CODE XREF=compare_files+1013, compare_files+1031, fopen_safer+65, fopen_safer+134, close_stream+21
0000000000005312         push       rbp
0000000000005313         push       rbx
0000000000005314         mov        rbx, rdi
0000000000005317         call       j_fileno                                    ; fileno
000000000000531c         test       eax, eax
000000000000531e         mov        rdi, rbx
0000000000005321         js         loc_5377

0000000000005323         call       j___freading                                ; __freading
0000000000005328         test       eax, eax
000000000000532a         jne        loc_5358

                     loc_532c:
000000000000532c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000532f         call       rpl_fflush                                  ; rpl_fflush
0000000000005334         test       eax, eax
0000000000005336         je         loc_5374

0000000000005338         call       j___errno_location                          ; __errno_location
000000000000533d         mov        r12d, dword [rax]
0000000000005340         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000005343         mov        rbp, rax
0000000000005346         call       j_fclose                                    ; fclose
000000000000534b         test       r12d, r12d
000000000000534e         jne        loc_5380

                     loc_5350:
0000000000005350         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000005351         pop        rbp
0000000000005352         pop        r12
0000000000005354         ret
                        ; endp
0000000000005355         align      8

                     loc_5358:
0000000000005358         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000535b         call       j_fileno                                    ; fileno
0000000000005360         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000005362         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005367         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005369         call       j_lseek                                     ; lseek
000000000000536e         cmp        rax, 0xffffffffffffffff
0000000000005372         jne        loc_532c

                     loc_5374:
0000000000005374         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_5377:
0000000000005377         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000005378         pop        rbp
0000000000005379         pop        r12
000000000000537b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_5380:
0000000000005380         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000005384         mov        eax, 0xffffffff
0000000000005389         jmp        loc_5350
000000000000538b         align      16                                          ; End of unwind block (FDE at 0x79fc)

                     rpl_fcntl:
0000000000005390         push       r12                                         ; Begin of unwind block (FDE at 0x7a34), CODE XREF=dup_safer+9
0000000000005392         push       rbp
0000000000005393         mov        ebp, edi
0000000000005395         push       rbx
0000000000005396         sub        rsp, 0x50
000000000000539a         mov        rax, qword [fs:0x28]
00000000000053a3         mov        qword [rsp+0x68+var_50], rax
00000000000053a8         xor        eax, eax
00000000000053aa         lea        rax, qword [rsp+0x68+arg_0]
00000000000053af         test       esi, esi
00000000000053b1         mov        qword [rsp+0x68+var_38], rdx
00000000000053b6         mov        qword [rsp+0x68+var_30], rcx
00000000000053bb         mov        qword [rsp+0x68+var_28], r8
00000000000053c0         mov        qword [rsp+0x68+var_60], rax
00000000000053c5         lea        rax, qword [rsp+0x68+var_48]
00000000000053ca         mov        qword [rsp+0x68+var_20], r9
00000000000053cf         mov        dword [rsp+0x68+var_68], 0x10
00000000000053d6         mov        qword [rsp+0x68+var_58], rax
00000000000053db         je         loc_55e2

00000000000053e1         cmp        esi, 0x406
00000000000053e7         jne        loc_5430

00000000000053e9         mov        rax, qword [rsp+0x68+var_58]
00000000000053ee         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
00000000000053f5         mov        dword [rsp+0x68+var_68], 0x18
00000000000053fc         mov        r12d, dword [rax+0x10]
0000000000005400         mov        edx, r12d
0000000000005403         js         loc_5533

0000000000005409         xor        eax, eax
000000000000540b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000005410         call       j_fcntl                                     ; fcntl
0000000000005415         test       eax, eax
0000000000005417         mov        ebx, eax
0000000000005419         js         loc_55a8

                     loc_541f:
000000000000541f         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
0000000000005429         jmp        loc_5470
000000000000542b         align      16

                     loc_5430:
0000000000005430         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
0000000000005433         je         loc_5460

0000000000005435         jg         loc_5490

0000000000005437         cmp        esi, 0x4
000000000000543a         je         loc_5510

0000000000005440         jg         loc_5500

0000000000005446         cmp        esi, 0x2
0000000000005449         je         loc_5510

000000000000544f         jg         loc_5460

0000000000005451         cmp        esi, 0x1
0000000000005454         jne        loc_54b8

0000000000005456         nop        word [cs:rax+rax]

                     loc_5460:
0000000000005460         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
0000000000005462         xor        eax, eax
0000000000005464         call       j_fcntl                                     ; fcntl
0000000000005469         mov        ebx, eax
000000000000546b         nop        dword [rax+rax]

                     loc_5470:
0000000000005470         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
0000000000005475         xor        rcx, qword [fs:0x28]
000000000000547e         mov        eax, ebx
0000000000005480         jne        loc_55dd

0000000000005486         add        rsp, 0x50
000000000000548a         pop        rbx
000000000000548b         pop        rbp
000000000000548c         pop        r12
000000000000548e         ret
                        ; endp
000000000000548f         align      16

                     loc_5490:
0000000000005490         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000005496         jg         loc_54e0

0000000000005498         cmp        esi, 0x406
000000000000549e         jge        loc_5510

00000000000054a0         cmp        esi, 0x401
00000000000054a6         je         loc_5460

00000000000054a8         cmp        esi, 0x402
00000000000054ae         je         loc_5510

00000000000054b0         cmp        esi, 0x400
00000000000054b6         je         loc_5510

                     loc_54b8:
00000000000054b8         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
00000000000054bb         cmp        eax, 0x2f
00000000000054be         ja         loc_55fa

00000000000054c4         add        rax, qword [rsp+0x68+var_58]

                     loc_54c9:
00000000000054c9         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
00000000000054cc         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000054ce         xor        eax, eax
00000000000054d0         call       j_fcntl                                     ; fcntl
00000000000054d5         mov        ebx, eax
00000000000054d7         jmp        loc_5470
00000000000054d9         align      32

                     loc_54e0:
00000000000054e0         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
00000000000054e6         je         loc_5510

00000000000054e8         jl         loc_5460

00000000000054ee         cmp        esi, 0x40a
00000000000054f4         jne        loc_54b8

00000000000054f6         jmp        loc_5460
00000000000054fb         align      256

                     loc_5500:
0000000000005500         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000005503         je         loc_5460

0000000000005509         jg         loc_5510

000000000000550b         cmp        esi, 0x8
000000000000550e         jne        loc_54b8

                     loc_5510:
0000000000005510         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
0000000000005513         cmp        eax, 0x2f
0000000000005516         ja         loc_5604

000000000000551c         add        rax, qword [rsp+0x68+var_58]

                     loc_5521:
0000000000005521         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
0000000000005523         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000005525         xor        eax, eax
0000000000005527         call       j_fcntl                                     ; fcntl
000000000000552c         mov        ebx, eax
000000000000552e         jmp        loc_5470

                     loc_5533:
0000000000005533         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
0000000000005535         xor        eax, eax
0000000000005537         call       j_fcntl                                     ; fcntl
000000000000553c         test       eax, eax
000000000000553e         mov        ebx, eax
0000000000005540         js         loc_5470

0000000000005546         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
000000000000554d         jne        loc_5470

                     loc_5553:
0000000000005553         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
0000000000005555         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
000000000000555a         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000555c         call       j_fcntl                                     ; fcntl
0000000000005561         test       eax, eax
0000000000005563         js         loc_5581

0000000000005565         or         eax, 0x1
0000000000005568         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
000000000000556d         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000556f         mov        edx, eax
0000000000005571         xor        eax, eax
0000000000005573         call       j_fcntl                                     ; fcntl
0000000000005578         cmp        eax, 0xffffffff
000000000000557b         jne        loc_5470

                     loc_5581:
0000000000005581         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000005586         mov        r12d, dword [rax]
0000000000005589         mov        rbp, rax
000000000000558c         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000558e         call       j_close                                     ; close
0000000000005593         mov        ebx, 0xffffffff
0000000000005598         mov        dword [rbp], r12d
000000000000559c         jmp        loc_5470
00000000000055a1         align      8

                     loc_55a8:
00000000000055a8         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
00000000000055ad         cmp        dword [rax], 0x16
00000000000055b0         jne        loc_541f

00000000000055b6         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
00000000000055b8         xor        eax, eax
00000000000055ba         mov        edx, r12d
00000000000055bd         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000055bf         call       j_fcntl                                     ; fcntl
00000000000055c4         test       eax, eax
00000000000055c6         mov        ebx, eax
00000000000055c8         js         loc_5470

00000000000055ce         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
00000000000055d8         jmp        loc_5553

                     loc_55dd:
00000000000055dd         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_55e2:
00000000000055e2         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
00000000000055e7         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
00000000000055e9         mov        edx, dword [rax+0x10]
00000000000055ec         xor        eax, eax
00000000000055ee         call       j_fcntl                                     ; fcntl
00000000000055f3         mov        ebx, eax
00000000000055f5         jmp        loc_5470

                     loc_55fa:
00000000000055fa         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
00000000000055ff         jmp        loc_54c9

                     loc_5604:
0000000000005604         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000005609         jmp        loc_5521
000000000000560e         align      16                                          ; End of unwind block (FDE at 0x7a34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000005610         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7a6c), CODE XREF=rpl_fclose+31
0000000000005613         push       rbx
0000000000005614         mov        rbx, rdi
0000000000005617         je         loc_562a

0000000000005619         call       j___freading                                ; __freading
000000000000561e         test       eax, eax
0000000000005620         je         loc_562a

0000000000005622         test       dword [rbx], 0x100
0000000000005628         jne        loc_5638

                     loc_562a:
000000000000562a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000562d         pop        rbx
000000000000562e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005633         align      8

                     loc_5638:
0000000000005638         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000563b         mov        edx, 0x1
0000000000005640         xor        esi, esi
0000000000005642         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005647         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000564a         pop        rbx
000000000000564b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005650         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x7a6c), Begin of unwind block (FDE at 0x7a8c), CODE XREF=rpl_fflush+50
0000000000005654         cmp        qword [rdi+0x10], rax
0000000000005658         je         loc_5660

                     j_j_fseeko:        // fseeko
000000000000565a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000565f         align      32

                     loc_5660:
0000000000005660         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005664         cmp        qword [rdi+0x28], rax
0000000000005668         jne        j_j_fseeko                                  ; fseeko

000000000000566a         cmp        qword [rdi+0x48], 0x0
000000000000566f         jne        j_j_fseeko                                  ; fseeko

0000000000005671         push       r12
0000000000005673         push       rbp
0000000000005674         mov        r12d, edx
0000000000005677         push       rbx
0000000000005678         mov        rbp, rsi
000000000000567b         mov        rbx, rdi
000000000000567e         call       j_fileno                                    ; fileno
0000000000005683         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005686         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005689         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000568b         call       j_lseek                                     ; lseek
0000000000005690         cmp        rax, 0xffffffffffffffff
0000000000005694         je         loc_56a2

0000000000005696         and        dword [rbx], 0xffffffef
0000000000005699         mov        qword [rbx+0x90], rax
00000000000056a0         xor        eax, eax

                     loc_56a2:
00000000000056a2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
00000000000056a3         pop        rbp
00000000000056a4         pop        r12
00000000000056a6         ret
                        ; endp
00000000000056a7         align      16                                          ; End of unwind block (FDE at 0x7a8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
00000000000056b0         push       r13                                         ; Begin of unwind block (FDE at 0x7abc), CODE XREF=sub_3490+534
00000000000056b2         push       r12
00000000000056b4         mov        r13, rsi
00000000000056b7         push       rbp
00000000000056b8         push       rbx
00000000000056b9         mov        rbx, rdi
00000000000056bc         mov        r12, rdx
00000000000056bf         sub        rsp, 0x18
00000000000056c3         mov        rax, qword [fs:0x28]
00000000000056cc         mov        qword [rsp+0x38+var_30], rax
00000000000056d1         xor        eax, eax
00000000000056d3         lea        rax, qword [rsp+0x38+var_34]
00000000000056d8         test       rdi, rdi
00000000000056db         cmove      rbx, rax
00000000000056df         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000056e2         call       j_mbrtowc                                   ; mbrtowc
00000000000056e7         cmp        rax, 0xfffffffffffffffd
00000000000056eb         mov        rbp, rax
00000000000056ee         jbe        loc_5710

00000000000056f0         test       r12, r12
00000000000056f3         je         loc_5710

00000000000056f5         xor        edi, edi
00000000000056f7         call       hard_locale                                 ; hard_locale
00000000000056fc         test       al, al
00000000000056fe         jne        loc_5710

0000000000005700         movzx      eax, byte [r13]
0000000000005705         mov        ebp, 0x1
000000000000570a         mov        dword [rbx], eax
000000000000570c         nop        dword [rax]

                     loc_5710:
0000000000005710         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005715         xor        rdx, qword [fs:0x28]
000000000000571e         mov        rax, rbp
0000000000005721         jne        loc_572e

0000000000005723         add        rsp, 0x18
0000000000005727         pop        rbx
0000000000005728         pop        rbp
0000000000005729         pop        r12
000000000000572b         pop        r13
000000000000572d         ret
                        ; endp

                     loc_572e:
000000000000572e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005733         align      64                                          ; End of unwind block (FDE at 0x7abc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005740         push       r12                                         ; Begin of unwind block (FDE at 0x7afc), CODE XREF=close_stdout+13, close_stdout+51
0000000000005742         push       rbp
0000000000005743         mov        rbp, rdi
0000000000005746         push       rbx
0000000000005747         call       j___fpending                                ; __fpending
000000000000574c         mov        ebx, dword [rbp]
000000000000574f         mov        rdi, rbp
0000000000005752         mov        r12, rax
0000000000005755         call       rpl_fclose                                  ; rpl_fclose
000000000000575a         and        ebx, 0x20
000000000000575d         test       ebx, ebx
000000000000575f         jne        loc_5778

0000000000005761         test       eax, eax
0000000000005763         je         loc_576f

0000000000005765         test       r12, r12
0000000000005768         mov        eax, 0xffffffff
000000000000576d         je         loc_57a8

                     loc_576f:
000000000000576f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005770         pop        rbp
0000000000005771         pop        r12
0000000000005773         ret
                        ; endp
0000000000005774         align      8

                     loc_5778:
0000000000005778         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000577a         jne        loc_5798

000000000000577c         call       j___errno_location                          ; __errno_location
0000000000005781         mov        dword [rax], 0x0
0000000000005787         mov        eax, 0xffffffff
000000000000578c         pop        rbx
000000000000578d         pop        rbp
000000000000578e         pop        r12
0000000000005790         ret
                        ; endp
0000000000005791         align      8

                     loc_5798:
0000000000005798         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005799         mov        eax, 0xffffffff
000000000000579e         pop        rbp
000000000000579f         pop        r12
00000000000057a1         ret
                        ; endp
00000000000057a2         align      8

                     loc_57a8:
00000000000057a8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000057ad         cmp        dword [rax], 0x9
00000000000057b0         pop        rbx
00000000000057b1         pop        rbp
00000000000057b2         pop        r12
00000000000057b4         setne      al
00000000000057b7         movzx      eax, al
00000000000057ba         neg        eax
00000000000057bc         ret
                        ; endp
00000000000057bd         align      64                                          ; End of unwind block (FDE at 0x7afc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
00000000000057c0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x7b4c), CODE XREF=gettext_quote.part.1+11
00000000000057c4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
00000000000057c9         call       j_nl_langinfo                               ; nl_langinfo
00000000000057ce         test       rax, rax
00000000000057d1         je         loc_57f0

00000000000057d3         cmp        byte [rax], 0x0
00000000000057d6         lea        rdx, qword [aAscii]                         ; "ASCII"
00000000000057dd         cmove      rax, rdx
00000000000057e1         add        rsp, 0x8
00000000000057e5         ret
                        ; endp
00000000000057e6         align      16

                     loc_57f0:
00000000000057f0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
00000000000057f7         add        rsp, 0x8
00000000000057fb         ret
                        ; endp
00000000000057fc         align      2048                                        ; End of unwind block (FDE at 0x7b4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcoll_loop:
0000000000005800         push       r15                                         ; Begin of unwind block (FDE at 0x7b6c), CODE XREF=memcoll+102, memcoll0+64
0000000000005802         push       r14
0000000000005804         mov        r14, rcx
0000000000005807         push       r13
0000000000005809         push       r12
000000000000580b         mov        r13, rsi
000000000000580e         push       rbp
000000000000580f         push       rbx
0000000000005810         mov        r12, rdi
0000000000005813         mov        rbp, rdx
0000000000005816         sub        rsp, 0x8
000000000000581a         call       j___errno_location                          ; __errno_location
000000000000581f         mov        r15, rax
0000000000005822         jmp        loc_5853
0000000000005824         align      8

                     loc_5828:
0000000000005828         mov        rdi, r12                                    ; argument "__s" for method j_strlen, CODE XREF=strcoll_loop+103
000000000000582b         call       j_strlen                                    ; strlen
0000000000005830         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
0000000000005833         lea        rbx, qword [rax+1]
0000000000005837         call       j_strlen                                    ; strlen
000000000000583c         add        rax, 0x1
0000000000005840         add        r12, rbx
0000000000005843         add        rbp, rax
0000000000005846         sub        r14, rax
0000000000005849         sub        r13, rbx
000000000000584c         je         loc_5880

000000000000584e         test       r14, r14
0000000000005851         je         loc_58a0

                     loc_5853:
0000000000005853         mov        dword [r15], 0x0                            ; CODE XREF=strcoll_loop+34
000000000000585a         mov        rsi, rbp                                    ; argument "__s2" for method j_strcoll
000000000000585d         mov        rdi, r12                                    ; argument "__s1" for method j_strcoll
0000000000005860         call       j_strcoll                                   ; strcoll
0000000000005865         test       eax, eax
0000000000005867         je         loc_5828

0000000000005869         add        rsp, 0x8
000000000000586d         pop        rbx
000000000000586e         pop        rbp
000000000000586f         pop        r12
0000000000005871         pop        r13
0000000000005873         pop        r14
0000000000005875         pop        r15
0000000000005877         ret
                        ; endp
0000000000005878         align      128

                     loc_5880:
0000000000005880         xor        eax, eax                                    ; CODE XREF=strcoll_loop+76
0000000000005882         test       r14, r14
0000000000005885         setne      al
0000000000005888         add        rsp, 0x8
000000000000588c         pop        rbx
000000000000588d         neg        eax
000000000000588f         pop        rbp
0000000000005890         pop        r12
0000000000005892         pop        r13
0000000000005894         pop        r14
0000000000005896         pop        r15
0000000000005898         ret
                        ; endp
0000000000005899         align      32

                     loc_58a0:
00000000000058a0         add        rsp, 0x8                                    ; CODE XREF=strcoll_loop+81
00000000000058a4         mov        eax, 0x1
00000000000058a9         pop        rbx
00000000000058aa         pop        rbp
00000000000058ab         pop        r12
00000000000058ad         pop        r13
00000000000058af         pop        r14
00000000000058b1         pop        r15
00000000000058b3         ret
                        ; endp
00000000000058b4         align      64                                          ; End of unwind block (FDE at 0x7b6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_40: int32_t, -64


                     memcoll:
00000000000058c0         push       r15                                         ; Begin of unwind block (FDE at 0x7be4), CODE XREF=xmemcoll+20
00000000000058c2         push       r14
00000000000058c4         mov        r15, rdx
00000000000058c7         push       r13
00000000000058c9         push       r12
00000000000058cb         mov        r14, rdi
00000000000058ce         push       rbp
00000000000058cf         push       rbx
00000000000058d0         mov        rbp, rcx
00000000000058d3         mov        rbx, rsi
00000000000058d6         sub        rsp, 0x18
00000000000058da         cmp        rsi, rcx
00000000000058dd         jne        loc_58f2

00000000000058df         mov        rdx, rsi                                    ; argument "__n" for method j_memcmp
00000000000058e2         mov        rsi, r15                                    ; argument "__s2" for method j_memcmp
00000000000058e5         call       j_memcmp                                    ; memcmp
00000000000058ea         test       eax, eax
00000000000058ec         mov        dword [rsp+0x48+var_40], eax
00000000000058f0         je         loc_5958

                     loc_58f2:
00000000000058f2         lea        r13, qword [r14+rbx]                        ; CODE XREF=memcoll+29
00000000000058f6         lea        r12, qword [r15+rbp]
00000000000058fa         lea        rcx, qword [rbp+1]
00000000000058fe         lea        rsi, qword [rbx+1]
0000000000005902         mov        rdx, r15
0000000000005905         mov        rdi, r14
0000000000005908         movzx      r9d, byte [r13]
000000000000590d         movzx      r8d, byte [r12]
0000000000005912         mov        byte [r13], 0x0
0000000000005917         mov        byte [r12], 0x0
000000000000591c         mov        byte [rsp+0x48+var_39], r9b
0000000000005921         mov        byte [rsp+0x48+var_40], r8b
0000000000005926         call       strcoll_loop                                ; strcoll_loop
000000000000592b         movzx      r9d, byte [rsp+0x48+var_39]
0000000000005931         movzx      r8d, byte [rsp+0x48+var_40]
0000000000005937         mov        edx, eax
0000000000005939         mov        byte [r13], r9b
000000000000593d         mov        byte [r12], r8b

                     loc_5941:
0000000000005941         add        rsp, 0x18                                   ; CODE XREF=memcoll+167
0000000000005945         mov        eax, edx
0000000000005947         pop        rbx
0000000000005948         pop        rbp
0000000000005949         pop        r12
000000000000594b         pop        r13
000000000000594d         pop        r14
000000000000594f         pop        r15
0000000000005951         ret
                        ; endp
0000000000005952         align      8

                     loc_5958:
0000000000005958         call       j___errno_location                          ; __errno_location, CODE XREF=memcoll+48
000000000000595d         mov        edx, dword [rsp+0x48+var_40]
0000000000005961         mov        dword [rax], 0x0
0000000000005967         jmp        loc_5941
0000000000005969         align      16                                          ; End of unwind block (FDE at 0x7be4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     memcoll0:
0000000000005970         push       r12                                         ; Begin of unwind block (FDE at 0x7c30), CODE XREF=xmemcoll0+20
0000000000005972         push       rbp
0000000000005973         mov        r12, rdx
0000000000005976         push       rbx
0000000000005977         mov        rbp, rdi
000000000000597a         mov        rbx, rsi
000000000000597d         sub        rsp, 0x10
0000000000005981         cmp        rsi, rcx
0000000000005984         jne        loc_599f

0000000000005986         mov        rdx, rsi                                    ; argument "__n" for method j_memcmp
0000000000005989         mov        rsi, r12                                    ; argument "__s2" for method j_memcmp
000000000000598c         mov        qword [rsp+0x28+var_20], rcx
0000000000005991         call       j_memcmp                                    ; memcmp
0000000000005996         test       eax, eax
0000000000005998         mov        rcx, qword [rsp+0x28+var_20]
000000000000599d         je         loc_59b8

                     loc_599f:
000000000000599f         add        rsp, 0x10                                   ; CODE XREF=memcoll0+20
00000000000059a3         mov        rdx, r12
00000000000059a6         mov        rsi, rbx
00000000000059a9         mov        rdi, rbp
00000000000059ac         pop        rbx
00000000000059ad         pop        rbp
00000000000059ae         pop        r12
00000000000059b0         jmp        strcoll_loop                                ; strcoll_loop
                        ; endp
00000000000059b5         align      8

                     loc_59b8:
00000000000059b8         call       j___errno_location                          ; __errno_location, CODE XREF=memcoll0+45
00000000000059bd         mov        dword [rax], 0x0
00000000000059c3         add        rsp, 0x10
00000000000059c7         xor        eax, eax
00000000000059c9         pop        rbx
00000000000059ca         pop        rbp
00000000000059cb         pop        r12
00000000000059cd         ret
                        ; endp
00000000000059ce         align      16                                          ; End of unwind block (FDE at 0x7c30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
00000000000059d0         push       r15                                         ; Begin of unwind block (FDE at 0x7c74), DATA XREF=_start+22
00000000000059d2         push       r14
00000000000059d4         mov        r15, rdx
00000000000059d7         push       r13
00000000000059d9         push       r12
00000000000059db         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000059e2         push       rbp
00000000000059e3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000059ea         push       rbx
00000000000059eb         mov        r13d, edi
00000000000059ee         mov        r14, rsi
00000000000059f1         sub        rbp, r12
00000000000059f4         sub        rsp, 0x8
00000000000059f8         sar        rbp, 0x3
00000000000059fc         call       _init                                       ; _init
0000000000005a01         test       rbp, rbp
0000000000005a04         je         loc_5a26

0000000000005a06         xor        ebx, ebx
0000000000005a08         nop        dword [rax+rax]

                     loc_5a10:
0000000000005a10         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000005a13         mov        rsi, r14
0000000000005a16         mov        edi, r13d
0000000000005a19         call       qword [r12+rbx*8]
0000000000005a1d         add        rbx, 0x1
0000000000005a21         cmp        rbp, rbx
0000000000005a24         jne        loc_5a10

                     loc_5a26:
0000000000005a26         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000005a2a         pop        rbx
0000000000005a2b         pop        rbp
0000000000005a2c         pop        r12
0000000000005a2e         pop        r13
0000000000005a30         pop        r14
0000000000005a32         pop        r15
0000000000005a34         ret
                        ; endp
0000000000005a35         align      64                                          ; End of unwind block (FDE at 0x7c74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000005a40         ret                                                    ; Begin of unwind block (FDE at 0x7cbc), DATA XREF=_start+15
                        ; endp
0000000000005a42         align      16                                          ; End of unwind block (FDE at 0x7cbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000005a50         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x7cd4), __dso_handle, CODE XREF=main+102
0000000000005a57         xor        esi, esi
0000000000005a59         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000005a5e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7cd4)
0000000000005a5f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x5a60; 0x5a69[ (9 bytes)
        ; File offset : [23136; 23145[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000005a60         sub        rsp, 0x8
0000000000005a64         add        rsp, 0x8
0000000000005a68         ret
                        ; endp
0000000000005a69         db  0x00 ; '.'
0000000000005a6a         db  0x00 ; '.'
0000000000005a6b         db  0x00 ; '.'
0000000000005a6c         db  0x00 ; '.'
0000000000005a6d         db  0x00 ; '.'
0000000000005a6e         db  0x00 ; '.'
0000000000005a6f         db  0x00 ; '.'
0000000000005a70         db  0x00 ; '.'
0000000000005a71         db  0x00 ; '.'
0000000000005a72         db  0x00 ; '.'
0000000000005a73         db  0x00 ; '.'
0000000000005a74         db  0x00 ; '.'
0000000000005a75         db  0x00 ; '.'
0000000000005a76         db  0x00 ; '.'
0000000000005a77         db  0x00 ; '.'
0000000000005a78         db  0x00 ; '.'
0000000000005a79         db  0x00 ; '.'
0000000000005a7a         db  0x00 ; '.'
0000000000005a7b         db  0x00 ; '.'
0000000000005a7c         db  0x00 ; '.'
0000000000005a7d         db  0x00 ; '.'
0000000000005a7e         db  0x00 ; '.'
0000000000005a7f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5a80; 0x6b3e[ (4286 bytes)
        ; File offset : [23168; 27454[ (4286 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005a80         db  0x01 ; '.'
0000000000005a81         db  0x00 ; '.'
0000000000005a82         db  0x02 ; '.'
0000000000005a83         db  0x00 ; '.'
0000000000005a84         db  0x00 ; '.'
0000000000005a85         db  0x00 ; '.'
0000000000005a86         db  0x00 ; '.'
0000000000005a87         db  0x00 ; '.'
                     aFileDIsNotInSo:
0000000000005a88         db         "file %d is not in sorted order", 0         ; DATA XREF=check_order.isra.1.part.2+72
0000000000005aa7         align      8
                     aTrySHelpForMor:
0000000000005aa8         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000005acf         align      16
                     aUsageSOptionFi:
0000000000005ad0         db         "Usage: %s [OPTION]... FILE1 FILE2\n", 0    ; DATA XREF=usage+93
0000000000005af3         align      8
                     aCompareSortedF:
0000000000005af8         db         "Compare sorted files FILE1 and FILE2 line by line.\n", 0 ; DATA XREF=usage+132
0000000000005b2c         align      16
                     aNwhenFile1OrFi:
0000000000005b30         db         "\nWhen FILE1 or FILE2 (not both) is -, read standard input.\n", 0 ; DATA XREF=usage+169
0000000000005b6c         align      16
                     aNwithNoOptions:
0000000000005b70         db         "\nWith no options, produce three-column output.  Column one contains\nlines unique to FILE1, column two contains lines unique to FILE2,\nand column three contains lines common to both files.\n", 0 ; DATA XREF=usage+206
0000000000005c2d         align      16
                     aN1SuppressColu:
0000000000005c30         db         "\n  -1              suppress column 1 (lines unique to FILE1)\n  -2              suppress column 2 (lines unique to FILE2)\n  -3              suppress column 3 (lines that appear in both files)\n", 0 ; DATA XREF=usage+243
                     aNCheckorderChe:
0000000000005cf0         db         "\n  --check-order     check that the input is correctly sorted, even\n                      if all input lines are pairable\n  --nocheck-order   do not check that the input is correctly sorted\n", 0 ; DATA XREF=usage+280
0000000000005daf         align      16
                     aOutputdelimite:
0000000000005db0         db         "  --output-delimiter=STR  separate columns with STR\n", 0 ; DATA XREF=usage+317
0000000000005de5         align      8
                     aTotalOutputASu:
0000000000005de8         db         "  --total           output a summary\n", 0 ; DATA XREF=usage+354
0000000000005e0e         align      16
                     aZZeroterminate:
0000000000005e10         db         "  -z, --zero-terminated    line delimiter is NUL, not newline\n", 0 ; DATA XREF=usage+391
0000000000005e4f         align      16
                     aHelpDisplayThi:
0000000000005e50         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+428
0000000000005e7d         align      128
                     aVersionOutputV:
0000000000005e80         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+465
0000000000005eb6         align      8
                     aNnoteCompariso:
0000000000005eb8         db         "\nNote, comparisons honor the rules specified by 'LC_COLLATE'.\n", 0 ; DATA XREF=usage+502
0000000000005ef7         align      8
                     aNexamplesnS12F:
0000000000005ef8         db         "\nExamples:\n  %s -12 file1 file2  Print only lines present in both file1 and file2.\n  %s -3 file1 file2  Print lines in file1 not in file2, and vice versa.\n", 0 ; DATA XREF=usage+539
0000000000005f94         align      8
                     aHttpswwwgnuorg:
0000000000005f98         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+799, usage+899, usage+992, usage+1102, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000005fc0         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1143
0000000000006007         align      8
                     aOrAvailableLoc:
0000000000006008         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+942
000000000000603b         align      64
                     aMultipleOutput:
0000000000006040         db         "multiple output delimiters specified", 0   ; DATA XREF=main+787
                     aTotal:
0000000000006065         db         "total", 0                                  ; DATA XREF=compare_files+1057
                     aSssssssc:
000000000000606b         db         "%s%s%s%s%s%s%s%c", 0                       ; DATA XREF=compare_files+1171
000000000000607c         db  0x63 ; 'c'                                         ; DATA XREF=main+564, usage+574, usage+892, usage+1076, usage+1095, usage+1129
000000000000607d         db  0x6f ; 'o'
000000000000607e         db  0x6d ; 'm'
000000000000607f         db  0x6d ; 'm'
0000000000006080         db  0x00 ; '.'
0000000000006081         db  0x5b ; '['                                         ; DATA XREF=usage+586
0000000000006082         db  0x00 ; '.'
                     aTestInvocation:
0000000000006083         db         "test invocation", 0                        ; DATA XREF=usage+625
                     aMulticallInvoc:
0000000000006093         db         "Multi-call invocation", 0                  ; DATA XREF=usage+673
                     aSha224sum:
00000000000060a9         db         "sha224sum", 0                              ; DATA XREF=usage+690
                     aSha2Utilities:
00000000000060b3         db         "sha2 utilities", 0                         ; DATA XREF=usage+702
                     aSha256sum:
00000000000060c2         db         "sha256sum", 0                              ; DATA XREF=usage+593
                     aSha384sum:
00000000000060cc         db         "sha384sum", 0                              ; DATA XREF=usage+637
                     aSha512sum:
00000000000060d6         db         "sha512sum", 0                              ; DATA XREF=usage+661
                     aNsOnlineHelpSn:
00000000000060e0         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+778
00000000000060f7         db  0x47 ; 'G'                                         ; DATA XREF=main+557, usage+806, usage+999, emit_bug_reporting_address+68
00000000000060f8         db  0x4e ; 'N'
00000000000060f9         db  0x55 ; 'U'
00000000000060fa         db  0x20 ; ' '
                     aCoreutils:
00000000000060fb         db         "coreutils", 0                              ; DATA XREF=main+55, main+67, usage+649
0000000000006105         db  0x65 ; 'e'                                         ; DATA XREF=usage+845, usage+1038
0000000000006106         db  0x6e ; 'n'
0000000000006107         db  0x5f ; '_'
0000000000006108         db  0x00 ; '.'
                     aFullDocumentat:
0000000000006109         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+873, usage+1062
                     aUsrlocalsharel:
0000000000006124         db         "/usr/local/share/locale", 0                ; DATA XREF=main+48
                     aDavidMackenzie:
000000000000613c         db         "David MacKenzie", 0                        ; DATA XREF=main+543
                     aRichardMStallm:
000000000000614c         db         "Richard M. Stallman", 0                    ; DATA XREF=main+550
0000000000006160         db  0x31 ; '1'                                         ; DATA XREF=main+183
0000000000006161         db  0x32 ; '2'
0000000000006162         db  0x33 ; '3'
0000000000006163         db  0x7a ; 'z'
0000000000006164         db  0x00 ; '.'
                     aMissingOperand:
0000000000006165         db         "missing operand", 0                        ; DATA XREF=main+752
                     aMissingOperand_6175:        // aMissingOperand
0000000000006175         db         "missing operand after %s", 0               ; DATA XREF=main+692
                     aExtraOperandS:
000000000000618e         db         "extra operand %s", 0                       ; DATA XREF=main+841
                     aInputIsNotInSo:
000000000000619f         db         "input is not in sorted order", 0           ; DATA XREF=main+853
00000000000061bc         db  0x6e ; 'n'
00000000000061bd         db  0x6f ; 'o'
                     aCheckorder:
00000000000061be         db         "check-order", 0
                     aOutputdelimite_61ca:        // aOutputdelimite
00000000000061ca         db         "output-delimiter", 0
                     aZeroterminated:
00000000000061db         db         "zero-terminated", 0
                     aHelp:
00000000000061eb         db         "help", 0
                     aVersion:
00000000000061f0         db         "version", 0
00000000000061f8         db  0x09 ; '.'                                         ; DATA XREF=col_sep
00000000000061f9         db  0x00 ; '.'                                         ; DATA XREF=main+31, usage+931
                     a831:
00000000000061fa         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
00000000000061ff         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
000000000000620b         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000006212         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000006213         db  0x00 ; '.'
                     aPosix:
0000000000006214         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
000000000000621a         align      32
                     aANullArgv0WasP:
0000000000006220         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000006258         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000006260         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000006261         db  0x74 ; 't'
0000000000006262         db  0x2d ; '-'                                         ; DATA XREF=compare_files+145
0000000000006263         db  0x00 ; '.'
0000000000006264         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000006265         db  0x80 ; '.'
0000000000006266         db  0x98 ; '.'
0000000000006267         db  0x00 ; '.'
0000000000006268         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000006269         db  0x80 ; '.'
000000000000626a         db  0x99 ; '.'
000000000000626b         db  0x00 ; '.'
000000000000626c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000626d         db  0x07 ; '.'
000000000000626e         db  0x65 ; 'e'
000000000000626f         db  0x00 ; '.'
0000000000006270         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000006271         db  0xaf ; '.'
0000000000006272         db  0x00 ; '.'
0000000000006273         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3490+1451, sub_3490+1493, sub_3e00+13
0000000000006274         db  0x00 ; '.'
0000000000006275         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3490+132, sub_3490+1338, sub_3490+1670, sub_3490+1697, sub_3490+2352
0000000000006276         db  0x00 ; '.'
0000000000006277         db  0x60 ; '`'                                         ; DATA XREF=sub_3490+1627, sub_3490+1654
0000000000006278         db  0x00 ; '.'
                     aLiteral:
0000000000006279         db         "literal", 0
                     aShell:
0000000000006281         db         "shell", 0
                     aShellalways:
0000000000006287         db         "shell-always", 0
0000000000006294         db  0x73 ; 's'
0000000000006295         db  0x68 ; 'h'
0000000000006296         db  0x65 ; 'e'
0000000000006297         db  0x6c ; 'l'
0000000000006298         db  0x6c ; 'l'
0000000000006299         db  0x2d ; '-'
                     aEscape:
000000000000629a         db         "escape", 0
                     aShellescapealw:
00000000000062a1         db         "shell-escape-always", 0
                     aCmaybe:
00000000000062b5         db         "c-maybe", 0
                     aClocale:
00000000000062bd         db         "clocale", 0
00000000000062c5         align      32
                     switch_table_62e0:        // switch_table
00000000000062e0         dd         quotearg_buffer_restyled.loc_3b8a-switch_table_62e0, quotearg_buffer_restyled.loc_2de3-switch_table_62e0, quotearg_buffer_restyled.loc_3db8-switch_table_62e0, quotearg_buffer_restyled.loc_3bc4-switch_table_62e0 ; switch table used at 0x2de1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
00000000000062f0         dd         quotearg_buffer_restyled.loc_39b4-switch_table_62e0, quotearg_buffer_restyled.loc_3a10-switch_table_62e0, quotearg_buffer_restyled.loc_3a65-switch_table_62e0, quotearg_buffer_restyled.loc_3aaa-switch_table_62e0
0000000000006300         dd         3 dup (quotearg_buffer_restyled.loc_3ae4-switch_table_62e0)
000000000000630c         db  0x54 ; 'T'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000630d         db  0xce ; '.'
000000000000630e         db  0xff ; '.'
000000000000630f         db  0xff ; '.'
0000000000006310         db  0x3c ; '<'
0000000000006311         db  0xcf ; '.'
0000000000006312         db  0xff ; '.'
0000000000006313         db  0xff ; '.'
0000000000006314         db  0x3c ; '<'
0000000000006315         db  0xcf ; '.'
0000000000006316         db  0xff ; '.'
0000000000006317         db  0xff ; '.'
0000000000006318         db  0x3c ; '<'
0000000000006319         db  0xcf ; '.'
000000000000631a         db  0xff ; '.'
000000000000631b         db  0xff ; '.'
000000000000631c         db  0x3c ; '<'
000000000000631d         db  0xcf ; '.'
000000000000631e         db  0xff ; '.'
000000000000631f         db  0xff ; '.'
0000000000006320         db  0x3c ; '<'
0000000000006321         db  0xcf ; '.'
0000000000006322         db  0xff ; '.'
0000000000006323         db  0xff ; '.'
0000000000006324         db  0x3c ; '<'
0000000000006325         db  0xcf ; '.'
0000000000006326         db  0xff ; '.'
0000000000006327         db  0xff ; '.'
0000000000006328         db  0x94 ; '.'
0000000000006329         db  0xce ; '.'
000000000000632a         db  0xff ; '.'
000000000000632b         db  0xff ; '.'
000000000000632c         db  0x9c ; '.'
000000000000632d         db  0xcd ; '.'
000000000000632e         db  0xff ; '.'
000000000000632f         db  0xff ; '.'
0000000000006330         db  0x5c ; '\'
0000000000006331         db  0xcd ; '.'
0000000000006332         db  0xff ; '.'
0000000000006333         db  0xff ; '.'
0000000000006334         db  0x24 ; '$'
0000000000006335         db  0xcf ; '.'
0000000000006336         db  0xff ; '.'
0000000000006337         db  0xff ; '.'
0000000000006338         db  0x14 ; '.'
0000000000006339         db  0xcf ; '.'
000000000000633a         db  0xff ; '.'
000000000000633b         db  0xff ; '.'
000000000000633c         db  0x04 ; '.'
000000000000633d         db  0xcf ; '.'
000000000000633e         db  0xff ; '.'
000000000000633f         db  0xff ; '.'
0000000000006340         db  0xf4 ; '.'
0000000000006341         db  0xce ; '.'
0000000000006342         db  0xff ; '.'
0000000000006343         db  0xff ; '.'
0000000000006344         db  0x3c ; '<'
0000000000006345         db  0xcf ; '.'
0000000000006346         db  0xff ; '.'
0000000000006347         db  0xff ; '.'
0000000000006348         db  0x3c ; '<'
0000000000006349         db  0xcf ; '.'
000000000000634a         db  0xff ; '.'
000000000000634b         db  0xff ; '.'
000000000000634c         db  0x3c ; '<'
000000000000634d         db  0xcf ; '.'
000000000000634e         db  0xff ; '.'
000000000000634f         db  0xff ; '.'
0000000000006350         db  0x3c ; '<'
0000000000006351         db  0xcf ; '.'
0000000000006352         db  0xff ; '.'
0000000000006353         db  0xff ; '.'
0000000000006354         db  0x3c ; '<'
0000000000006355         db  0xcf ; '.'
0000000000006356         db  0xff ; '.'
0000000000006357         db  0xff ; '.'
0000000000006358         db  0x3c ; '<'
0000000000006359         db  0xcf ; '.'
000000000000635a         db  0xff ; '.'
000000000000635b         db  0xff ; '.'
000000000000635c         db  0x3c ; '<'
000000000000635d         db  0xcf ; '.'
000000000000635e         db  0xff ; '.'
000000000000635f         db  0xff ; '.'
0000000000006360         db  0x3c ; '<'
0000000000006361         db  0xcf ; '.'
0000000000006362         db  0xff ; '.'
0000000000006363         db  0xff ; '.'
0000000000006364         db  0x3c ; '<'
0000000000006365         db  0xcf ; '.'
0000000000006366         db  0xff ; '.'
0000000000006367         db  0xff ; '.'
0000000000006368         db  0x3c ; '<'
0000000000006369         db  0xcf ; '.'
000000000000636a         db  0xff ; '.'
000000000000636b         db  0xff ; '.'
000000000000636c         db  0x3c ; '<'
000000000000636d         db  0xcf ; '.'
000000000000636e         db  0xff ; '.'
000000000000636f         db  0xff ; '.'
0000000000006370         db  0x3c ; '<'
0000000000006371         db  0xcf ; '.'
0000000000006372         db  0xff ; '.'
0000000000006373         db  0xff ; '.'
0000000000006374         db  0x3c ; '<'
0000000000006375         db  0xcf ; '.'
0000000000006376         db  0xff ; '.'
0000000000006377         db  0xff ; '.'
0000000000006378         db  0x3c ; '<'
0000000000006379         db  0xcf ; '.'
000000000000637a         db  0xff ; '.'
000000000000637b         db  0xff ; '.'
000000000000637c         db  0x3c ; '<'
000000000000637d         db  0xcf ; '.'
000000000000637e         db  0xff ; '.'
000000000000637f         db  0xff ; '.'
0000000000006380         db  0x3c ; '<'
0000000000006381         db  0xcf ; '.'
0000000000006382         db  0xff ; '.'
0000000000006383         db  0xff ; '.'
0000000000006384         db  0x3c ; '<'
0000000000006385         db  0xcf ; '.'
0000000000006386         db  0xff ; '.'
0000000000006387         db  0xff ; '.'
0000000000006388         db  0x3c ; '<'
0000000000006389         db  0xcf ; '.'
000000000000638a         db  0xff ; '.'
000000000000638b         db  0xff ; '.'
000000000000638c         db  0xe4 ; '.'
000000000000638d         db  0xce ; '.'
000000000000638e         db  0xff ; '.'
000000000000638f         db  0xff ; '.'
0000000000006390         db  0xd4 ; '.'
0000000000006391         db  0xce ; '.'
0000000000006392         db  0xff ; '.'
0000000000006393         db  0xff ; '.'
0000000000006394         db  0xd4 ; '.'
0000000000006395         db  0xce ; '.'
0000000000006396         db  0xff ; '.'
0000000000006397         db  0xff ; '.'
0000000000006398         db  0xa4 ; '.'
0000000000006399         db  0xce ; '.'
000000000000639a         db  0xff ; '.'
000000000000639b         db  0xff ; '.'
000000000000639c         db  0xd4 ; '.'
000000000000639d         db  0xce ; '.'
000000000000639e         db  0xff ; '.'
000000000000639f         db  0xff ; '.'
00000000000063a0         db  0x7c ; '|'
00000000000063a1         db  0xce ; '.'
00000000000063a2         db  0xff ; '.'
00000000000063a3         db  0xff ; '.'
00000000000063a4         db  0xd4 ; '.'
00000000000063a5         db  0xce ; '.'
00000000000063a6         db  0xff ; '.'
00000000000063a7         db  0xff ; '.'
00000000000063a8         db  0x37 ; '7'
00000000000063a9         db  0xcd ; '.'
00000000000063aa         db  0xff ; '.'
00000000000063ab         db  0xff ; '.'
00000000000063ac         db  0xd4 ; '.'
00000000000063ad         db  0xce ; '.'
00000000000063ae         db  0xff ; '.'
00000000000063af         db  0xff ; '.'
00000000000063b0         db  0xd4 ; '.'
00000000000063b1         db  0xce ; '.'
00000000000063b2         db  0xff ; '.'
00000000000063b3         db  0xff ; '.'
00000000000063b4         db  0xd4 ; '.'
00000000000063b5         db  0xce ; '.'
00000000000063b6         db  0xff ; '.'
00000000000063b7         db  0xff ; '.'
00000000000063b8         db  0x7c ; '|'
00000000000063b9         db  0xce ; '.'
00000000000063ba         db  0xff ; '.'
00000000000063bb         db  0xff ; '.'
00000000000063bc         db  0x7c ; '|'
00000000000063bd         db  0xce ; '.'
00000000000063be         db  0xff ; '.'
00000000000063bf         db  0xff ; '.'
00000000000063c0         db  0x7c ; '|'
00000000000063c1         db  0xce ; '.'
00000000000063c2         db  0xff ; '.'
00000000000063c3         db  0xff ; '.'
00000000000063c4         db  0x7c ; '|'
00000000000063c5         db  0xce ; '.'
00000000000063c6         db  0xff ; '.'
00000000000063c7         db  0xff ; '.'
00000000000063c8         db  0x7c ; '|'
00000000000063c9         db  0xce ; '.'
00000000000063ca         db  0xff ; '.'
00000000000063cb         db  0xff ; '.'
00000000000063cc         db  0x7c ; '|'
00000000000063cd         db  0xce ; '.'
00000000000063ce         db  0xff ; '.'
00000000000063cf         db  0xff ; '.'
00000000000063d0         db  0x7c ; '|'
00000000000063d1         db  0xce ; '.'
00000000000063d2         db  0xff ; '.'
00000000000063d3         db  0xff ; '.'
00000000000063d4         db  0x7c ; '|'
00000000000063d5         db  0xce ; '.'
00000000000063d6         db  0xff ; '.'
00000000000063d7         db  0xff ; '.'
00000000000063d8         db  0x7c ; '|'
00000000000063d9         db  0xce ; '.'
00000000000063da         db  0xff ; '.'
00000000000063db         db  0xff ; '.'
00000000000063dc         db  0x7c ; '|'
00000000000063dd         db  0xce ; '.'
00000000000063de         db  0xff ; '.'
00000000000063df         db  0xff ; '.'
00000000000063e0         db  0x7c ; '|'
00000000000063e1         db  0xce ; '.'
00000000000063e2         db  0xff ; '.'
00000000000063e3         db  0xff ; '.'
00000000000063e4         db  0x7c ; '|'
00000000000063e5         db  0xce ; '.'
00000000000063e6         db  0xff ; '.'
00000000000063e7         db  0xff ; '.'
00000000000063e8         db  0x7c ; '|'
00000000000063e9         db  0xce ; '.'
00000000000063ea         db  0xff ; '.'
00000000000063eb         db  0xff ; '.'
00000000000063ec         db  0x7c ; '|'
00000000000063ed         db  0xce ; '.'
00000000000063ee         db  0xff ; '.'
00000000000063ef         db  0xff ; '.'
00000000000063f0         db  0x7c ; '|'
00000000000063f1         db  0xce ; '.'
00000000000063f2         db  0xff ; '.'
00000000000063f3         db  0xff ; '.'
00000000000063f4         db  0x7c ; '|'
00000000000063f5         db  0xce ; '.'
00000000000063f6         db  0xff ; '.'
00000000000063f7         db  0xff ; '.'
00000000000063f8         db  0xd4 ; '.'
00000000000063f9         db  0xce ; '.'
00000000000063fa         db  0xff ; '.'
00000000000063fb         db  0xff ; '.'
00000000000063fc         db  0xd4 ; '.'
00000000000063fd         db  0xce ; '.'
00000000000063fe         db  0xff ; '.'
00000000000063ff         db  0xff ; '.'
0000000000006400         db  0xd4 ; '.'
0000000000006401         db  0xce ; '.'
0000000000006402         db  0xff ; '.'
0000000000006403         db  0xff ; '.'
0000000000006404         db  0xd4 ; '.'
0000000000006405         db  0xce ; '.'
0000000000006406         db  0xff ; '.'
0000000000006407         db  0xff ; '.'
0000000000006408         db  0x07 ; '.'
0000000000006409         db  0xcd ; '.'
000000000000640a         db  0xff ; '.'
000000000000640b         db  0xff ; '.'
000000000000640c         db  0x3c ; '<'
000000000000640d         db  0xcf ; '.'
000000000000640e         db  0xff ; '.'
000000000000640f         db  0xff ; '.'
0000000000006410         db  0x7c ; '|'
0000000000006411         db  0xce ; '.'
0000000000006412         db  0xff ; '.'
0000000000006413         db  0xff ; '.'
0000000000006414         db  0x7c ; '|'
0000000000006415         db  0xce ; '.'
0000000000006416         db  0xff ; '.'
0000000000006417         db  0xff ; '.'
0000000000006418         db  0x7c ; '|'
0000000000006419         db  0xce ; '.'
000000000000641a         db  0xff ; '.'
000000000000641b         db  0xff ; '.'
000000000000641c         db  0x7c ; '|'
000000000000641d         db  0xce ; '.'
000000000000641e         db  0xff ; '.'
000000000000641f         db  0xff ; '.'
0000000000006420         db  0x7c ; '|'
0000000000006421         db  0xce ; '.'
0000000000006422         db  0xff ; '.'
0000000000006423         db  0xff ; '.'
0000000000006424         db  0x7c ; '|'
0000000000006425         db  0xce ; '.'
0000000000006426         db  0xff ; '.'
0000000000006427         db  0xff ; '.'
0000000000006428         db  0x7c ; '|'
0000000000006429         db  0xce ; '.'
000000000000642a         db  0xff ; '.'
000000000000642b         db  0xff ; '.'
000000000000642c         db  0x7c ; '|'
000000000000642d         db  0xce ; '.'
000000000000642e         db  0xff ; '.'
000000000000642f         db  0xff ; '.'
0000000000006430         db  0x7c ; '|'
0000000000006431         db  0xce ; '.'
0000000000006432         db  0xff ; '.'
0000000000006433         db  0xff ; '.'
0000000000006434         db  0x7c ; '|'
0000000000006435         db  0xce ; '.'
0000000000006436         db  0xff ; '.'
0000000000006437         db  0xff ; '.'
0000000000006438         db  0x7c ; '|'
0000000000006439         db  0xce ; '.'
000000000000643a         db  0xff ; '.'
000000000000643b         db  0xff ; '.'
000000000000643c         db  0x7c ; '|'
000000000000643d         db  0xce ; '.'
000000000000643e         db  0xff ; '.'
000000000000643f         db  0xff ; '.'
0000000000006440         db  0x7c ; '|'
0000000000006441         db  0xce ; '.'
0000000000006442         db  0xff ; '.'
0000000000006443         db  0xff ; '.'
0000000000006444         db  0x7c ; '|'
0000000000006445         db  0xce ; '.'
0000000000006446         db  0xff ; '.'
0000000000006447         db  0xff ; '.'
0000000000006448         db  0x7c ; '|'
0000000000006449         db  0xce ; '.'
000000000000644a         db  0xff ; '.'
000000000000644b         db  0xff ; '.'
000000000000644c         db  0x7c ; '|'
000000000000644d         db  0xce ; '.'
000000000000644e         db  0xff ; '.'
000000000000644f         db  0xff ; '.'
0000000000006450         db  0x7c ; '|'
0000000000006451         db  0xce ; '.'
0000000000006452         db  0xff ; '.'
0000000000006453         db  0xff ; '.'
0000000000006454         db  0x7c ; '|'
0000000000006455         db  0xce ; '.'
0000000000006456         db  0xff ; '.'
0000000000006457         db  0xff ; '.'
0000000000006458         db  0x7c ; '|'
0000000000006459         db  0xce ; '.'
000000000000645a         db  0xff ; '.'
000000000000645b         db  0xff ; '.'
000000000000645c         db  0x7c ; '|'
000000000000645d         db  0xce ; '.'
000000000000645e         db  0xff ; '.'
000000000000645f         db  0xff ; '.'
0000000000006460         db  0x7c ; '|'
0000000000006461         db  0xce ; '.'
0000000000006462         db  0xff ; '.'
0000000000006463         db  0xff ; '.'
0000000000006464         db  0x7c ; '|'
0000000000006465         db  0xce ; '.'
0000000000006466         db  0xff ; '.'
0000000000006467         db  0xff ; '.'
0000000000006468         db  0x7c ; '|'
0000000000006469         db  0xce ; '.'
000000000000646a         db  0xff ; '.'
000000000000646b         db  0xff ; '.'
000000000000646c         db  0x7c ; '|'
000000000000646d         db  0xce ; '.'
000000000000646e         db  0xff ; '.'
000000000000646f         db  0xff ; '.'
0000000000006470         db  0x7c ; '|'
0000000000006471         db  0xce ; '.'
0000000000006472         db  0xff ; '.'
0000000000006473         db  0xff ; '.'
0000000000006474         db  0x7c ; '|'
0000000000006475         db  0xce ; '.'
0000000000006476         db  0xff ; '.'
0000000000006477         db  0xff ; '.'
0000000000006478         db  0xd4 ; '.'
0000000000006479         db  0xce ; '.'
000000000000647a         db  0xff ; '.'
000000000000647b         db  0xff ; '.'
000000000000647c         db  0xac ; '.'
000000000000647d         db  0xcd ; '.'
000000000000647e         db  0xff ; '.'
000000000000647f         db  0xff ; '.'
0000000000006480         db  0x7c ; '|'
0000000000006481         db  0xce ; '.'
0000000000006482         db  0xff ; '.'
0000000000006483         db  0xff ; '.'
0000000000006484         db  0xd4 ; '.'
0000000000006485         db  0xce ; '.'
0000000000006486         db  0xff ; '.'
0000000000006487         db  0xff ; '.'
0000000000006488         db  0x7c ; '|'
0000000000006489         db  0xce ; '.'
000000000000648a         db  0xff ; '.'
000000000000648b         db  0xff ; '.'
000000000000648c         db  0xd4 ; '.'
000000000000648d         db  0xce ; '.'
000000000000648e         db  0xff ; '.'
000000000000648f         db  0xff ; '.'
0000000000006490         db  0x7c ; '|'
0000000000006491         db  0xce ; '.'
0000000000006492         db  0xff ; '.'
0000000000006493         db  0xff ; '.'
0000000000006494         db  0x7c ; '|'
0000000000006495         db  0xce ; '.'
0000000000006496         db  0xff ; '.'
0000000000006497         db  0xff ; '.'
0000000000006498         db  0x7c ; '|'
0000000000006499         db  0xce ; '.'
000000000000649a         db  0xff ; '.'
000000000000649b         db  0xff ; '.'
000000000000649c         db  0x7c ; '|'
000000000000649d         db  0xce ; '.'
000000000000649e         db  0xff ; '.'
000000000000649f         db  0xff ; '.'
00000000000064a0         db  0x7c ; '|'
00000000000064a1         db  0xce ; '.'
00000000000064a2         db  0xff ; '.'
00000000000064a3         db  0xff ; '.'
00000000000064a4         db  0x7c ; '|'
00000000000064a5         db  0xce ; '.'
00000000000064a6         db  0xff ; '.'
00000000000064a7         db  0xff ; '.'
00000000000064a8         db  0x7c ; '|'
00000000000064a9         db  0xce ; '.'
00000000000064aa         db  0xff ; '.'
00000000000064ab         db  0xff ; '.'
00000000000064ac         db  0x7c ; '|'
00000000000064ad         db  0xce ; '.'
00000000000064ae         db  0xff ; '.'
00000000000064af         db  0xff ; '.'
00000000000064b0         db  0x7c ; '|'
00000000000064b1         db  0xce ; '.'
00000000000064b2         db  0xff ; '.'
00000000000064b3         db  0xff ; '.'
00000000000064b4         db  0x7c ; '|'
00000000000064b5         db  0xce ; '.'
00000000000064b6         db  0xff ; '.'
00000000000064b7         db  0xff ; '.'
00000000000064b8         db  0x7c ; '|'
00000000000064b9         db  0xce ; '.'
00000000000064ba         db  0xff ; '.'
00000000000064bb         db  0xff ; '.'
00000000000064bc         db  0x7c ; '|'
00000000000064bd         db  0xce ; '.'
00000000000064be         db  0xff ; '.'
00000000000064bf         db  0xff ; '.'
00000000000064c0         db  0x7c ; '|'
00000000000064c1         db  0xce ; '.'
00000000000064c2         db  0xff ; '.'
00000000000064c3         db  0xff ; '.'
00000000000064c4         db  0x7c ; '|'
00000000000064c5         db  0xce ; '.'
00000000000064c6         db  0xff ; '.'
00000000000064c7         db  0xff ; '.'
00000000000064c8         db  0x7c ; '|'
00000000000064c9         db  0xce ; '.'
00000000000064ca         db  0xff ; '.'
00000000000064cb         db  0xff ; '.'
00000000000064cc         db  0x7c ; '|'
00000000000064cd         db  0xce ; '.'
00000000000064ce         db  0xff ; '.'
00000000000064cf         db  0xff ; '.'
00000000000064d0         db  0x7c ; '|'
00000000000064d1         db  0xce ; '.'
00000000000064d2         db  0xff ; '.'
00000000000064d3         db  0xff ; '.'
00000000000064d4         db  0x7c ; '|'
00000000000064d5         db  0xce ; '.'
00000000000064d6         db  0xff ; '.'
00000000000064d7         db  0xff ; '.'
00000000000064d8         db  0x7c ; '|'
00000000000064d9         db  0xce ; '.'
00000000000064da         db  0xff ; '.'
00000000000064db         db  0xff ; '.'
00000000000064dc         db  0x7c ; '|'
00000000000064dd         db  0xce ; '.'
00000000000064de         db  0xff ; '.'
00000000000064df         db  0xff ; '.'
00000000000064e0         db  0x7c ; '|'
00000000000064e1         db  0xce ; '.'
00000000000064e2         db  0xff ; '.'
00000000000064e3         db  0xff ; '.'
00000000000064e4         db  0x7c ; '|'
00000000000064e5         db  0xce ; '.'
00000000000064e6         db  0xff ; '.'
00000000000064e7         db  0xff ; '.'
00000000000064e8         db  0x7c ; '|'
00000000000064e9         db  0xce ; '.'
00000000000064ea         db  0xff ; '.'
00000000000064eb         db  0xff ; '.'
00000000000064ec         db  0x7c ; '|'
00000000000064ed         db  0xce ; '.'
00000000000064ee         db  0xff ; '.'
00000000000064ef         db  0xff ; '.'
00000000000064f0         db  0x7c ; '|'
00000000000064f1         db  0xce ; '.'
00000000000064f2         db  0xff ; '.'
00000000000064f3         db  0xff ; '.'
00000000000064f4         db  0x7c ; '|'
00000000000064f5         db  0xce ; '.'
00000000000064f6         db  0xff ; '.'
00000000000064f7         db  0xff ; '.'
00000000000064f8         db  0x37 ; '7'
00000000000064f9         db  0xcc ; '.'
00000000000064fa         db  0xff ; '.'
00000000000064fb         db  0xff ; '.'
00000000000064fc         db  0xd4 ; '.'
00000000000064fd         db  0xce ; '.'
00000000000064fe         db  0xff ; '.'
00000000000064ff         db  0xff ; '.'
0000000000006500         db  0x37 ; '7'
0000000000006501         db  0xcc ; '.'
0000000000006502         db  0xff ; '.'
0000000000006503         db  0xff ; '.'
0000000000006504         db  0xa4 ; '.'
0000000000006505         db  0xce ; '.'
0000000000006506         db  0xff ; '.'
0000000000006507         db  0xff ; '.'
0000000000006508         db  0x28 ; '('                                         ; DATA XREF=sub_3230+137
0000000000006509         db  0xce ; '.'
000000000000650a         db  0xff ; '.'
000000000000650b         db  0xff ; '.'
000000000000650c         db  0x38 ; '8'
000000000000650d         db  0xcd ; '.'
000000000000650e         db  0xff ; '.'
000000000000650f         db  0xff ; '.'
0000000000006510         db  0x38 ; '8'
0000000000006511         db  0xcd ; '.'
0000000000006512         db  0xff ; '.'
0000000000006513         db  0xff ; '.'
0000000000006514         db  0x38 ; '8'
0000000000006515         db  0xcd ; '.'
0000000000006516         db  0xff ; '.'
0000000000006517         db  0xff ; '.'
0000000000006518         db  0x38 ; '8'
0000000000006519         db  0xcd ; '.'
000000000000651a         db  0xff ; '.'
000000000000651b         db  0xff ; '.'
000000000000651c         db  0x38 ; '8'
000000000000651d         db  0xcd ; '.'
000000000000651e         db  0xff ; '.'
000000000000651f         db  0xff ; '.'
0000000000006520         db  0x38 ; '8'
0000000000006521         db  0xcd ; '.'
0000000000006522         db  0xff ; '.'
0000000000006523         db  0xff ; '.'
0000000000006524         db  0x18 ; '.'
0000000000006525         db  0xce ; '.'
0000000000006526         db  0xff ; '.'
0000000000006527         db  0xff ; '.'
0000000000006528         db  0x68 ; 'h'
0000000000006529         db  0xcf ; '.'
000000000000652a         db  0xff ; '.'
000000000000652b         db  0xff ; '.'
000000000000652c         db  0x50 ; 'P'
000000000000652d         db  0xcf ; '.'
000000000000652e         db  0xff ; '.'
000000000000652f         db  0xff ; '.'
0000000000006530         db  0x00 ; '.'
0000000000006531         db  0xce ; '.'
0000000000006532         db  0xff ; '.'
0000000000006533         db  0xff ; '.'
0000000000006534         db  0x40 ; '@'
0000000000006535         db  0xcf ; '.'
0000000000006536         db  0xff ; '.'
0000000000006537         db  0xff ; '.'
0000000000006538         db  0xe8 ; '.'
0000000000006539         db  0xcd ; '.'
000000000000653a         db  0xff ; '.'
000000000000653b         db  0xff ; '.'
000000000000653c         db  0x28 ; '('
000000000000653d         db  0xcf ; '.'
000000000000653e         db  0xff ; '.'
000000000000653f         db  0xff ; '.'
0000000000006540         db  0x38 ; '8'
0000000000006541         db  0xcd ; '.'
0000000000006542         db  0xff ; '.'
0000000000006543         db  0xff ; '.'
0000000000006544         db  0x38 ; '8'
0000000000006545         db  0xcd ; '.'
0000000000006546         db  0xff ; '.'
0000000000006547         db  0xff ; '.'
0000000000006548         db  0x38 ; '8'
0000000000006549         db  0xcd ; '.'
000000000000654a         db  0xff ; '.'
000000000000654b         db  0xff ; '.'
000000000000654c         db  0x38 ; '8'
000000000000654d         db  0xcd ; '.'
000000000000654e         db  0xff ; '.'
000000000000654f         db  0xff ; '.'
0000000000006550         db  0x38 ; '8'
0000000000006551         db  0xcd ; '.'
0000000000006552         db  0xff ; '.'
0000000000006553         db  0xff ; '.'
0000000000006554         db  0x38 ; '8'
0000000000006555         db  0xcd ; '.'
0000000000006556         db  0xff ; '.'
0000000000006557         db  0xff ; '.'
0000000000006558         db  0x38 ; '8'
0000000000006559         db  0xcd ; '.'
000000000000655a         db  0xff ; '.'
000000000000655b         db  0xff ; '.'
000000000000655c         db  0x38 ; '8'
000000000000655d         db  0xcd ; '.'
000000000000655e         db  0xff ; '.'
000000000000655f         db  0xff ; '.'
0000000000006560         db  0x38 ; '8'
0000000000006561         db  0xcd ; '.'
0000000000006562         db  0xff ; '.'
0000000000006563         db  0xff ; '.'
0000000000006564         db  0x38 ; '8'
0000000000006565         db  0xcd ; '.'
0000000000006566         db  0xff ; '.'
0000000000006567         db  0xff ; '.'
0000000000006568         db  0x38 ; '8'
0000000000006569         db  0xcd ; '.'
000000000000656a         db  0xff ; '.'
000000000000656b         db  0xff ; '.'
000000000000656c         db  0x38 ; '8'
000000000000656d         db  0xcd ; '.'
000000000000656e         db  0xff ; '.'
000000000000656f         db  0xff ; '.'
0000000000006570         db  0x38 ; '8'
0000000000006571         db  0xcd ; '.'
0000000000006572         db  0xff ; '.'
0000000000006573         db  0xff ; '.'
0000000000006574         db  0x38 ; '8'
0000000000006575         db  0xcd ; '.'
0000000000006576         db  0xff ; '.'
0000000000006577         db  0xff ; '.'
0000000000006578         db  0x38 ; '8'
0000000000006579         db  0xcd ; '.'
000000000000657a         db  0xff ; '.'
000000000000657b         db  0xff ; '.'
000000000000657c         db  0x38 ; '8'
000000000000657d         db  0xcd ; '.'
000000000000657e         db  0xff ; '.'
000000000000657f         db  0xff ; '.'
0000000000006580         db  0x38 ; '8'
0000000000006581         db  0xcd ; '.'
0000000000006582         db  0xff ; '.'
0000000000006583         db  0xff ; '.'
0000000000006584         db  0x38 ; '8'
0000000000006585         db  0xcd ; '.'
0000000000006586         db  0xff ; '.'
0000000000006587         db  0xff ; '.'
0000000000006588         db  0x10 ; '.'
0000000000006589         db  0xcf ; '.'
000000000000658a         db  0xff ; '.'
000000000000658b         db  0xff ; '.'
000000000000658c         db  0xf8 ; '.'
000000000000658d         db  0xce ; '.'
000000000000658e         db  0xff ; '.'
000000000000658f         db  0xff ; '.'
0000000000006590         db  0xf8 ; '.'
0000000000006591         db  0xce ; '.'
0000000000006592         db  0xff ; '.'
0000000000006593         db  0xff ; '.'
0000000000006594         db  0xe0 ; '.'
0000000000006595         db  0xce ; '.'
0000000000006596         db  0xff ; '.'
0000000000006597         db  0xff ; '.'
0000000000006598         db  0xf8 ; '.'
0000000000006599         db  0xce ; '.'
000000000000659a         db  0xff ; '.'
000000000000659b         db  0xff ; '.'
000000000000659c         db  0xc8 ; '.'
000000000000659d         db  0xce ; '.'
000000000000659e         db  0xff ; '.'
000000000000659f         db  0xff ; '.'
00000000000065a0         db  0xf8 ; '.'
00000000000065a1         db  0xce ; '.'
00000000000065a2         db  0xff ; '.'
00000000000065a3         db  0xff ; '.'
00000000000065a4         db  0x38 ; '8'
00000000000065a5         db  0xcb ; '.'
00000000000065a6         db  0xff ; '.'
00000000000065a7         db  0xff ; '.'
00000000000065a8         db  0xf8 ; '.'
00000000000065a9         db  0xce ; '.'
00000000000065aa         db  0xff ; '.'
00000000000065ab         db  0xff ; '.'
00000000000065ac         db  0xf8 ; '.'
00000000000065ad         db  0xce ; '.'
00000000000065ae         db  0xff ; '.'
00000000000065af         db  0xff ; '.'
00000000000065b0         db  0xf8 ; '.'
00000000000065b1         db  0xce ; '.'
00000000000065b2         db  0xff ; '.'
00000000000065b3         db  0xff ; '.'
00000000000065b4         db  0xc8 ; '.'
00000000000065b5         db  0xce ; '.'
00000000000065b6         db  0xff ; '.'
00000000000065b7         db  0xff ; '.'
00000000000065b8         db  0xc8 ; '.'
00000000000065b9         db  0xce ; '.'
00000000000065ba         db  0xff ; '.'
00000000000065bb         db  0xff ; '.'
00000000000065bc         db  0xc8 ; '.'
00000000000065bd         db  0xce ; '.'
00000000000065be         db  0xff ; '.'
00000000000065bf         db  0xff ; '.'
00000000000065c0         db  0xc8 ; '.'
00000000000065c1         db  0xce ; '.'
00000000000065c2         db  0xff ; '.'
00000000000065c3         db  0xff ; '.'
00000000000065c4         db  0xc8 ; '.'
00000000000065c5         db  0xce ; '.'
00000000000065c6         db  0xff ; '.'
00000000000065c7         db  0xff ; '.'
00000000000065c8         db  0xc8 ; '.'
00000000000065c9         db  0xce ; '.'
00000000000065ca         db  0xff ; '.'
00000000000065cb         db  0xff ; '.'
00000000000065cc         db  0xc8 ; '.'
00000000000065cd         db  0xce ; '.'
00000000000065ce         db  0xff ; '.'
00000000000065cf         db  0xff ; '.'
00000000000065d0         db  0xc8 ; '.'
00000000000065d1         db  0xce ; '.'
00000000000065d2         db  0xff ; '.'
00000000000065d3         db  0xff ; '.'
00000000000065d4         db  0xc8 ; '.'
00000000000065d5         db  0xce ; '.'
00000000000065d6         db  0xff ; '.'
00000000000065d7         db  0xff ; '.'
00000000000065d8         db  0xc8 ; '.'
00000000000065d9         db  0xce ; '.'
00000000000065da         db  0xff ; '.'
00000000000065db         db  0xff ; '.'
00000000000065dc         db  0xc8 ; '.'
00000000000065dd         db  0xce ; '.'
00000000000065de         db  0xff ; '.'
00000000000065df         db  0xff ; '.'
00000000000065e0         db  0xc8 ; '.'
00000000000065e1         db  0xce ; '.'
00000000000065e2         db  0xff ; '.'
00000000000065e3         db  0xff ; '.'
00000000000065e4         db  0xc8 ; '.'
00000000000065e5         db  0xce ; '.'
00000000000065e6         db  0xff ; '.'
00000000000065e7         db  0xff ; '.'
00000000000065e8         db  0xc8 ; '.'
00000000000065e9         db  0xce ; '.'
00000000000065ea         db  0xff ; '.'
00000000000065eb         db  0xff ; '.'
00000000000065ec         db  0xc8 ; '.'
00000000000065ed         db  0xce ; '.'
00000000000065ee         db  0xff ; '.'
00000000000065ef         db  0xff ; '.'
00000000000065f0         db  0xc8 ; '.'
00000000000065f1         db  0xce ; '.'
00000000000065f2         db  0xff ; '.'
00000000000065f3         db  0xff ; '.'
00000000000065f4         db  0xf8 ; '.'
00000000000065f5         db  0xce ; '.'
00000000000065f6         db  0xff ; '.'
00000000000065f7         db  0xff ; '.'
00000000000065f8         db  0xf8 ; '.'
00000000000065f9         db  0xce ; '.'
00000000000065fa         db  0xff ; '.'
00000000000065fb         db  0xff ; '.'
00000000000065fc         db  0xf8 ; '.'
00000000000065fd         db  0xce ; '.'
00000000000065fe         db  0xff ; '.'
00000000000065ff         db  0xff ; '.'
0000000000006600         db  0xf8 ; '.'
0000000000006601         db  0xce ; '.'
0000000000006602         db  0xff ; '.'
0000000000006603         db  0xff ; '.'
0000000000006604         db  0x08 ; '.'
0000000000006605         db  0xcb ; '.'
0000000000006606         db  0xff ; '.'
0000000000006607         db  0xff ; '.'
0000000000006608         db  0x38 ; '8'
0000000000006609         db  0xcd ; '.'
000000000000660a         db  0xff ; '.'
000000000000660b         db  0xff ; '.'
000000000000660c         db  0xc8 ; '.'
000000000000660d         db  0xce ; '.'
000000000000660e         db  0xff ; '.'
000000000000660f         db  0xff ; '.'
0000000000006610         db  0xc8 ; '.'
0000000000006611         db  0xce ; '.'
0000000000006612         db  0xff ; '.'
0000000000006613         db  0xff ; '.'
0000000000006614         db  0xc8 ; '.'
0000000000006615         db  0xce ; '.'
0000000000006616         db  0xff ; '.'
0000000000006617         db  0xff ; '.'
0000000000006618         db  0xc8 ; '.'
0000000000006619         db  0xce ; '.'
000000000000661a         db  0xff ; '.'
000000000000661b         db  0xff ; '.'
000000000000661c         db  0xc8 ; '.'
000000000000661d         db  0xce ; '.'
000000000000661e         db  0xff ; '.'
000000000000661f         db  0xff ; '.'
0000000000006620         db  0xc8 ; '.'
0000000000006621         db  0xce ; '.'
0000000000006622         db  0xff ; '.'
0000000000006623         db  0xff ; '.'
0000000000006624         db  0xc8 ; '.'
0000000000006625         db  0xce ; '.'
0000000000006626         db  0xff ; '.'
0000000000006627         db  0xff ; '.'
0000000000006628         db  0xc8 ; '.'
0000000000006629         db  0xce ; '.'
000000000000662a         db  0xff ; '.'
000000000000662b         db  0xff ; '.'
000000000000662c         db  0xc8 ; '.'
000000000000662d         db  0xce ; '.'
000000000000662e         db  0xff ; '.'
000000000000662f         db  0xff ; '.'
0000000000006630         db  0xc8 ; '.'
0000000000006631         db  0xce ; '.'
0000000000006632         db  0xff ; '.'
0000000000006633         db  0xff ; '.'
0000000000006634         db  0xc8 ; '.'
0000000000006635         db  0xce ; '.'
0000000000006636         db  0xff ; '.'
0000000000006637         db  0xff ; '.'
0000000000006638         db  0xc8 ; '.'
0000000000006639         db  0xce ; '.'
000000000000663a         db  0xff ; '.'
000000000000663b         db  0xff ; '.'
000000000000663c         db  0xc8 ; '.'
000000000000663d         db  0xce ; '.'
000000000000663e         db  0xff ; '.'
000000000000663f         db  0xff ; '.'
0000000000006640         db  0xc8 ; '.'
0000000000006641         db  0xce ; '.'
0000000000006642         db  0xff ; '.'
0000000000006643         db  0xff ; '.'
0000000000006644         db  0xc8 ; '.'
0000000000006645         db  0xce ; '.'
0000000000006646         db  0xff ; '.'
0000000000006647         db  0xff ; '.'
0000000000006648         db  0xc8 ; '.'
0000000000006649         db  0xce ; '.'
000000000000664a         db  0xff ; '.'
000000000000664b         db  0xff ; '.'
000000000000664c         db  0xc8 ; '.'
000000000000664d         db  0xce ; '.'
000000000000664e         db  0xff ; '.'
000000000000664f         db  0xff ; '.'
0000000000006650         db  0xc8 ; '.'
0000000000006651         db  0xce ; '.'
0000000000006652         db  0xff ; '.'
0000000000006653         db  0xff ; '.'
0000000000006654         db  0xc8 ; '.'
0000000000006655         db  0xce ; '.'
0000000000006656         db  0xff ; '.'
0000000000006657         db  0xff ; '.'
0000000000006658         db  0xc8 ; '.'
0000000000006659         db  0xce ; '.'
000000000000665a         db  0xff ; '.'
000000000000665b         db  0xff ; '.'
000000000000665c         db  0xc8 ; '.'
000000000000665d         db  0xce ; '.'
000000000000665e         db  0xff ; '.'
000000000000665f         db  0xff ; '.'
0000000000006660         db  0xc8 ; '.'
0000000000006661         db  0xce ; '.'
0000000000006662         db  0xff ; '.'
0000000000006663         db  0xff ; '.'
0000000000006664         db  0xc8 ; '.'
0000000000006665         db  0xce ; '.'
0000000000006666         db  0xff ; '.'
0000000000006667         db  0xff ; '.'
0000000000006668         db  0xc8 ; '.'
0000000000006669         db  0xce ; '.'
000000000000666a         db  0xff ; '.'
000000000000666b         db  0xff ; '.'
000000000000666c         db  0xc8 ; '.'
000000000000666d         db  0xce ; '.'
000000000000666e         db  0xff ; '.'
000000000000666f         db  0xff ; '.'
0000000000006670         db  0xc8 ; '.'
0000000000006671         db  0xce ; '.'
0000000000006672         db  0xff ; '.'
0000000000006673         db  0xff ; '.'
0000000000006674         db  0xf8 ; '.'
0000000000006675         db  0xce ; '.'
0000000000006676         db  0xff ; '.'
0000000000006677         db  0xff ; '.'
0000000000006678         db  0xc8 ; '.'
0000000000006679         db  0xcd ; '.'
000000000000667a         db  0xff ; '.'
000000000000667b         db  0xff ; '.'
000000000000667c         db  0xc8 ; '.'
000000000000667d         db  0xce ; '.'
000000000000667e         db  0xff ; '.'
000000000000667f         db  0xff ; '.'
0000000000006680         db  0xf8 ; '.'
0000000000006681         db  0xce ; '.'
0000000000006682         db  0xff ; '.'
0000000000006683         db  0xff ; '.'
0000000000006684         db  0xc8 ; '.'
0000000000006685         db  0xce ; '.'
0000000000006686         db  0xff ; '.'
0000000000006687         db  0xff ; '.'
0000000000006688         db  0xf8 ; '.'
0000000000006689         db  0xce ; '.'
000000000000668a         db  0xff ; '.'
000000000000668b         db  0xff ; '.'
000000000000668c         db  0xc8 ; '.'
000000000000668d         db  0xce ; '.'
000000000000668e         db  0xff ; '.'
000000000000668f         db  0xff ; '.'
0000000000006690         db  0xc8 ; '.'
0000000000006691         db  0xce ; '.'
0000000000006692         db  0xff ; '.'
0000000000006693         db  0xff ; '.'
0000000000006694         db  0xc8 ; '.'
0000000000006695         db  0xce ; '.'
0000000000006696         db  0xff ; '.'
0000000000006697         db  0xff ; '.'
0000000000006698         db  0xc8 ; '.'
0000000000006699         db  0xce ; '.'
000000000000669a         db  0xff ; '.'
000000000000669b         db  0xff ; '.'
000000000000669c         db  0xc8 ; '.'
000000000000669d         db  0xce ; '.'
000000000000669e         db  0xff ; '.'
000000000000669f         db  0xff ; '.'
00000000000066a0         db  0xc8 ; '.'
00000000000066a1         db  0xce ; '.'
00000000000066a2         db  0xff ; '.'
00000000000066a3         db  0xff ; '.'
00000000000066a4         db  0xc8 ; '.'
00000000000066a5         db  0xce ; '.'
00000000000066a6         db  0xff ; '.'
00000000000066a7         db  0xff ; '.'
00000000000066a8         db  0xc8 ; '.'
00000000000066a9         db  0xce ; '.'
00000000000066aa         db  0xff ; '.'
00000000000066ab         db  0xff ; '.'
00000000000066ac         db  0xc8 ; '.'
00000000000066ad         db  0xce ; '.'
00000000000066ae         db  0xff ; '.'
00000000000066af         db  0xff ; '.'
00000000000066b0         db  0xc8 ; '.'
00000000000066b1         db  0xce ; '.'
00000000000066b2         db  0xff ; '.'
00000000000066b3         db  0xff ; '.'
00000000000066b4         db  0xc8 ; '.'
00000000000066b5         db  0xce ; '.'
00000000000066b6         db  0xff ; '.'
00000000000066b7         db  0xff ; '.'
00000000000066b8         db  0xc8 ; '.'
00000000000066b9         db  0xce ; '.'
00000000000066ba         db  0xff ; '.'
00000000000066bb         db  0xff ; '.'
00000000000066bc         db  0xc8 ; '.'
00000000000066bd         db  0xce ; '.'
00000000000066be         db  0xff ; '.'
00000000000066bf         db  0xff ; '.'
00000000000066c0         db  0xc8 ; '.'
00000000000066c1         db  0xce ; '.'
00000000000066c2         db  0xff ; '.'
00000000000066c3         db  0xff ; '.'
00000000000066c4         db  0xc8 ; '.'
00000000000066c5         db  0xce ; '.'
00000000000066c6         db  0xff ; '.'
00000000000066c7         db  0xff ; '.'
00000000000066c8         db  0xc8 ; '.'
00000000000066c9         db  0xce ; '.'
00000000000066ca         db  0xff ; '.'
00000000000066cb         db  0xff ; '.'
00000000000066cc         db  0xc8 ; '.'
00000000000066cd         db  0xce ; '.'
00000000000066ce         db  0xff ; '.'
00000000000066cf         db  0xff ; '.'
00000000000066d0         db  0xc8 ; '.'
00000000000066d1         db  0xce ; '.'
00000000000066d2         db  0xff ; '.'
00000000000066d3         db  0xff ; '.'
00000000000066d4         db  0xc8 ; '.'
00000000000066d5         db  0xce ; '.'
00000000000066d6         db  0xff ; '.'
00000000000066d7         db  0xff ; '.'
00000000000066d8         db  0xc8 ; '.'
00000000000066d9         db  0xce ; '.'
00000000000066da         db  0xff ; '.'
00000000000066db         db  0xff ; '.'
00000000000066dc         db  0xc8 ; '.'
00000000000066dd         db  0xce ; '.'
00000000000066de         db  0xff ; '.'
00000000000066df         db  0xff ; '.'
00000000000066e0         db  0xc8 ; '.'
00000000000066e1         db  0xce ; '.'
00000000000066e2         db  0xff ; '.'
00000000000066e3         db  0xff ; '.'
00000000000066e4         db  0xc8 ; '.'
00000000000066e5         db  0xce ; '.'
00000000000066e6         db  0xff ; '.'
00000000000066e7         db  0xff ; '.'
00000000000066e8         db  0xc8 ; '.'
00000000000066e9         db  0xce ; '.'
00000000000066ea         db  0xff ; '.'
00000000000066eb         db  0xff ; '.'
00000000000066ec         db  0xc8 ; '.'
00000000000066ed         db  0xce ; '.'
00000000000066ee         db  0xff ; '.'
00000000000066ef         db  0xff ; '.'
00000000000066f0         db  0xc8 ; '.'
00000000000066f1         db  0xce ; '.'
00000000000066f2         db  0xff ; '.'
00000000000066f3         db  0xff ; '.'
00000000000066f4         db  0x38 ; '8'
00000000000066f5         db  0xca ; '.'
00000000000066f6         db  0xff ; '.'
00000000000066f7         db  0xff ; '.'
00000000000066f8         db  0xf8 ; '.'
00000000000066f9         db  0xce ; '.'
00000000000066fa         db  0xff ; '.'
00000000000066fb         db  0xff ; '.'
00000000000066fc         db  0x38 ; '8'
00000000000066fd         db  0xca ; '.'
00000000000066fe         db  0xff ; '.'
00000000000066ff         db  0xff ; '.'
0000000000006700         db  0xe0 ; '.'
0000000000006701         db  0xce ; '.'
0000000000006702         db  0xff ; '.'
0000000000006703         db  0xff ; '.'
0000000000006704         db  0x00 ; '.'
0000000000006705         db  0x00 ; '.'
0000000000006706         db  0x00 ; '.'
0000000000006707         db  0x00 ; '.'
0000000000006708         db  0x00 ; '.'
0000000000006709         db  0x00 ; '.'
000000000000670a         db  0x00 ; '.'
000000000000670b         db  0x00 ; '.'
000000000000670c         db  0x00 ; '.'
000000000000670d         db  0x00 ; '.'
000000000000670e         db  0x00 ; '.'
000000000000670f         db  0x00 ; '.'
0000000000006710         db  0x00 ; '.'
0000000000006711         db  0x00 ; '.'
0000000000006712         db  0x00 ; '.'
0000000000006713         db  0x00 ; '.'
0000000000006714         db  0x00 ; '.'
0000000000006715         db  0x00 ; '.'
0000000000006716         db  0x00 ; '.'
0000000000006717         db  0x00 ; '.'
0000000000006718         db  0x00 ; '.'
0000000000006719         db  0x00 ; '.'
000000000000671a         db  0x00 ; '.'
000000000000671b         db  0x00 ; '.'
000000000000671c         db  0x00 ; '.'
000000000000671d         db  0x00 ; '.'
000000000000671e         db  0x00 ; '.'
000000000000671f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000006720         db  0x00 ; '.'
0000000000006721         db  0x00 ; '.'
0000000000006722         db  0x00 ; '.'
0000000000006723         db  0x00 ; '.'
0000000000006724         db  0x01 ; '.'
0000000000006725         db  0x00 ; '.'
0000000000006726         db  0x00 ; '.'
0000000000006727         db  0x00 ; '.'
0000000000006728         db  0x02 ; '.'
0000000000006729         db  0x00 ; '.'
000000000000672a         db  0x00 ; '.'
000000000000672b         db  0x00 ; '.'
000000000000672c         db  0x03 ; '.'
000000000000672d         db  0x00 ; '.'
000000000000672e         db  0x00 ; '.'
000000000000672f         db  0x00 ; '.'
0000000000006730         db  0x04 ; '.'
0000000000006731         db  0x00 ; '.'
0000000000006732         db  0x00 ; '.'
0000000000006733         db  0x00 ; '.'
0000000000006734         db  0x05 ; '.'
0000000000006735         db  0x00 ; '.'
0000000000006736         db  0x00 ; '.'
0000000000006737         db  0x00 ; '.'
0000000000006738         db  0x06 ; '.'
0000000000006739         db  0x00 ; '.'
000000000000673a         db  0x00 ; '.'
000000000000673b         db  0x00 ; '.'
000000000000673c         db  0x07 ; '.'
000000000000673d         db  0x00 ; '.'
000000000000673e         db  0x00 ; '.'
000000000000673f         db  0x00 ; '.'
0000000000006740         db  0x08 ; '.'
0000000000006741         db  0x00 ; '.'
0000000000006742         db  0x00 ; '.'
0000000000006743         db  0x00 ; '.'
0000000000006744         db  0x09 ; '.'
0000000000006745         db  0x00 ; '.'
0000000000006746         db  0x00 ; '.'
0000000000006747         db  0x00 ; '.'
                     aSSSn:
0000000000006748         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000006754         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000675b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000675c         db  0x43 ; 'C'
000000000000675d         db  0x29 ; ')'
000000000000675e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000675f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000676f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000006786         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000067a2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000067b7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
00000000000067cd         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
00000000000067e1         align      8
                     aNlicenseGplv3G:
00000000000067e8         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000068b4         align      8
                     aWrittenBySSSna:
00000000000068b8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_68d8:        // aWrittenBySSSns
00000000000068d8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
00000000000068fc         align      256
                     aWrittenBySSSns_6900:        // aWrittenBySSSns
0000000000006900         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_6928:        // aWrittenBySSSns
0000000000006928         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000006954         align      8
                     aWrittenBySSSns_6958:        // aWrittenBySSSns
0000000000006958         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000006988         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000069bc         align      64
                     aWrittenBySSSns_69c0:        // aWrittenBySSSns
00000000000069c0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
00000000000069fc         align      512
                     aGeneralHelpUsi:
0000000000006a00         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000006a41         align      4
                     switch_table_6a44:        // switch_table
0000000000006a44         dd         version_etc_arn.loc_4a26-switch_table_6a44, version_etc_arn.loc_4ab8-switch_table_6a44, version_etc_arn.loc_4af8-switch_table_6a44, version_etc_arn.loc_4b40-switch_table_6a44 ; switch table used at 0x49a4 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000006a54         dd         version_etc_arn.loc_4b90-switch_table_6a44, version_etc_arn.loc_4be8-switch_table_6a44, version_etc_arn.loc_4c18-switch_table_6a44, version_etc_arn.loc_4c80-switch_table_6a44
0000000000006a64         dd         version_etc_arn.loc_49b0-switch_table_6a44, version_etc_arn.loc_4a60-switch_table_6a44
0000000000006a6c         align      128
                     version_etc_copyright:
0000000000006a80         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000006aaf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aStringComparis:
0000000000006ac0         db         "string comparison failed", 0               ; DATA XREF=collate_error+17
0000000000006ad9         align      32
                     aSetLcallcToWor:
0000000000006ae0         db         "Set LC_ALL='C' to work around the problem.", 0 ; DATA XREF=collate_error+57
0000000000006b0b         align      16
                     aTheStringsComp:
0000000000006b10         db         "The strings compared were %s and %s.", 0   ; DATA XREF=collate_error+132
0000000000006b35         align      8
                     aAscii:
0000000000006b38         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000006b3e         db  0x00 ; '.'
0000000000006b3f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x6b40; 0x6e1c[ (732 bytes)
        ; File offset : [27456; 28188[ (732 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006b40         db  0x01 ; '.'
0000000000006b41         db  0x1b ; '.'
0000000000006b42         db  0x03 ; '.'
0000000000006b43         db  0x3b ; ';'
0000000000006b44         db  0xdc ; '.'
0000000000006b45         db  0x02 ; '.'
0000000000006b46         db  0x00 ; '.'
0000000000006b47         db  0x00 ; '.'
0000000000006b48         db  0x5a ; 'Z'
0000000000006b49         db  0x00 ; '.'
0000000000006b4a         db  0x00 ; '.'
0000000000006b4b         db  0x00 ; '.'
0000000000006b4c         db  0x30 ; '0'
0000000000006b4d         db  0xa9 ; '.'
0000000000006b4e         db  0xff ; '.'
0000000000006b4f         db  0xff ; '.'
0000000000006b50         db  0x28 ; '('
0000000000006b51         db  0x03 ; '.'
0000000000006b52         db  0x00 ; '.'
0000000000006b53         db  0x00 ; '.'
0000000000006b54         db  0x40 ; '@'
0000000000006b55         db  0xac ; '.'
0000000000006b56         db  0xff ; '.'
0000000000006b57         db  0xff ; '.'
0000000000006b58         db  0x50 ; 'P'
0000000000006b59         db  0x03 ; '.'
0000000000006b5a         db  0x00 ; '.'
0000000000006b5b         db  0x00 ; '.'
0000000000006b5c         db  0x50 ; 'P'
0000000000006b5d         db  0xac ; '.'
0000000000006b5e         db  0xff ; '.'
0000000000006b5f         db  0xff ; '.'
0000000000006b60         db  0x64 ; 'd'
0000000000006b61         db  0x04 ; '.'
0000000000006b62         db  0x00 ; '.'
0000000000006b63         db  0x00 ; '.'
0000000000006b64         db  0xd0 ; '.'
0000000000006b65         db  0xaf ; '.'
0000000000006b66         db  0xff ; '.'
0000000000006b67         db  0xff ; '.'
0000000000006b68         db  0xf8 ; '.'
0000000000006b69         db  0x02 ; '.'
0000000000006b6a         db  0x00 ; '.'
0000000000006b6b         db  0x00 ; '.'
0000000000006b6c         db  0xe0 ; '.'
0000000000006b6d         db  0xb0 ; '.'
0000000000006b6e         db  0xff ; '.'
0000000000006b6f         db  0xff ; '.'
0000000000006b70         db  0x68 ; 'h'
0000000000006b71         db  0x03 ; '.'
0000000000006b72         db  0x00 ; '.'
0000000000006b73         db  0x00 ; '.'
0000000000006b74         db  0x90 ; '.'
0000000000006b75         db  0xb1 ; '.'
0000000000006b76         db  0xff ; '.'
0000000000006b77         db  0xff ; '.'
0000000000006b78         db  0xa4 ; '.'
0000000000006b79         db  0x03 ; '.'
0000000000006b7a         db  0x00 ; '.'
0000000000006b7b         db  0x00 ; '.'
0000000000006b7c         db  0x20 ; ' '
0000000000006b7d         db  0xb2 ; '.'
0000000000006b7e         db  0xff ; '.'
0000000000006b7f         db  0xff ; '.'
0000000000006b80         db  0xd4 ; '.'
0000000000006b81         db  0x03 ; '.'
0000000000006b82         db  0x00 ; '.'
0000000000006b83         db  0x00 ; '.'
0000000000006b84         db  0x00 ; '.'
0000000000006b85         db  0xb8 ; '.'
0000000000006b86         db  0xff ; '.'
0000000000006b87         db  0xff ; '.'
0000000000006b88         db  0x38 ; '8'
0000000000006b89         db  0x04 ; '.'
0000000000006b8a         db  0x00 ; '.'
0000000000006b8b         db  0x00 ; '.'
0000000000006b8c         db  0xa0 ; '.'
0000000000006b8d         db  0xbc ; '.'
0000000000006b8e         db  0xff ; '.'
0000000000006b8f         db  0xff ; '.'
0000000000006b90         db  0xb0 ; '.'
0000000000006b91         db  0x04 ; '.'
0000000000006b92         db  0x00 ; '.'
0000000000006b93         db  0x00 ; '.'
0000000000006b94         db  0xb0 ; '.'
0000000000006b95         db  0xbc ; '.'
0000000000006b96         db  0xff ; '.'
0000000000006b97         db  0xff ; '.'
0000000000006b98         db  0xc4 ; '.'
0000000000006b99         db  0x04 ; '.'
0000000000006b9a         db  0x00 ; '.'
0000000000006b9b         db  0x00 ; '.'
0000000000006b9c         db  0xc0 ; '.'
0000000000006b9d         db  0xbc ; '.'
0000000000006b9e         db  0xff ; '.'
0000000000006b9f         db  0xff ; '.'
0000000000006ba0         db  0xd8 ; '.'
0000000000006ba1         db  0x04 ; '.'
0000000000006ba2         db  0x00 ; '.'
0000000000006ba3         db  0x00 ; '.'
0000000000006ba4         db  0x70 ; 'p'
0000000000006ba5         db  0xbd ; '.'
0000000000006ba6         db  0xff ; '.'
0000000000006ba7         db  0xff ; '.'
0000000000006ba8         db  0x08 ; '.'
0000000000006ba9         db  0x05 ; '.'
0000000000006baa         db  0x00 ; '.'
0000000000006bab         db  0x00 ; '.'
0000000000006bac         db  0x80 ; '.'
0000000000006bad         db  0xbd ; '.'
0000000000006bae         db  0xff ; '.'
0000000000006baf         db  0xff ; '.'
0000000000006bb0         db  0x1c ; '.'
0000000000006bb1         db  0x05 ; '.'
0000000000006bb2         db  0x00 ; '.'
0000000000006bb3         db  0x00 ; '.'
0000000000006bb4         db  0xb0 ; '.'
0000000000006bb5         db  0xbd ; '.'
0000000000006bb6         db  0xff ; '.'
0000000000006bb7         db  0xff ; '.'
0000000000006bb8         db  0x38 ; '8'
0000000000006bb9         db  0x05 ; '.'
0000000000006bba         db  0x00 ; '.'
0000000000006bbb         db  0x00 ; '.'
0000000000006bbc         db  0x50 ; 'P'
0000000000006bbd         db  0xbe ; '.'
0000000000006bbe         db  0xff ; '.'
0000000000006bbf         db  0xff ; '.'
0000000000006bc0         db  0x68 ; 'h'
0000000000006bc1         db  0x05 ; '.'
0000000000006bc2         db  0x00 ; '.'
0000000000006bc3         db  0x00 ; '.'
0000000000006bc4         db  0xb0 ; '.'
0000000000006bc5         db  0xbe ; '.'
0000000000006bc6         db  0xff ; '.'
0000000000006bc7         db  0xff ; '.'
0000000000006bc8         db  0x88 ; '.'
0000000000006bc9         db  0x05 ; '.'
0000000000006bca         db  0x00 ; '.'
0000000000006bcb         db  0x00 ; '.'
0000000000006bcc         db  0x00 ; '.'
0000000000006bcd         db  0xbf ; '.'
0000000000006bce         db  0xff ; '.'
0000000000006bcf         db  0xff ; '.'
0000000000006bd0         db  0xa0 ; '.'
0000000000006bd1         db  0x05 ; '.'
0000000000006bd2         db  0x00 ; '.'
0000000000006bd3         db  0x00 ; '.'
0000000000006bd4         db  0x10 ; '.'
0000000000006bd5         db  0xbf ; '.'
0000000000006bd6         db  0xff ; '.'
0000000000006bd7         db  0xff ; '.'
0000000000006bd8         db  0xb4 ; '.'
0000000000006bd9         db  0x05 ; '.'
0000000000006bda         db  0x00 ; '.'
0000000000006bdb         db  0x00 ; '.'
0000000000006bdc         db  0x20 ; ' '
0000000000006bdd         db  0xc0 ; '.'
0000000000006bde         db  0xff ; '.'
0000000000006bdf         db  0xff ; '.'
0000000000006be0         db  0x18 ; '.'
0000000000006be1         db  0x06 ; '.'
0000000000006be2         db  0x00 ; '.'
0000000000006be3         db  0x00 ; '.'
0000000000006be4         db  0x30 ; '0'
0000000000006be5         db  0xc0 ; '.'
0000000000006be6         db  0xff ; '.'
0000000000006be7         db  0xff ; '.'
0000000000006be8         db  0x2c ; ','
0000000000006be9         db  0x06 ; '.'
0000000000006bea         db  0x00 ; '.'
0000000000006beb         db  0x00 ; '.'
0000000000006bec         db  0x40 ; '@'
0000000000006bed         db  0xc0 ; '.'
0000000000006bee         db  0xff ; '.'
0000000000006bef         db  0xff ; '.'
0000000000006bf0         db  0x40 ; '@'
0000000000006bf1         db  0x06 ; '.'
0000000000006bf2         db  0x00 ; '.'
0000000000006bf3         db  0x00 ; '.'
0000000000006bf4         db  0x80 ; '.'
0000000000006bf5         db  0xc0 ; '.'
0000000000006bf6         db  0xff ; '.'
0000000000006bf7         db  0xff ; '.'
0000000000006bf8         db  0x70 ; 'p'
0000000000006bf9         db  0x06 ; '.'
0000000000006bfa         db  0x00 ; '.'
0000000000006bfb         db  0x00 ; '.'
0000000000006bfc         db  0x20 ; ' '
0000000000006bfd         db  0xc1 ; '.'
0000000000006bfe         db  0xff ; '.'
0000000000006bff         db  0xff ; '.'
0000000000006c00         db  0x90 ; '.'
0000000000006c01         db  0x06 ; '.'
0000000000006c02         db  0x00 ; '.'
0000000000006c03         db  0x00 ; '.'
0000000000006c04         db  0x10 ; '.'
0000000000006c05         db  0xc2 ; '.'
0000000000006c06         db  0xff ; '.'
0000000000006c07         db  0xff ; '.'
0000000000006c08         db  0xd4 ; '.'
0000000000006c09         db  0x06 ; '.'
0000000000006c0a         db  0x00 ; '.'
0000000000006c0b         db  0x00 ; '.'
0000000000006c0c         db  0x50 ; 'P'
0000000000006c0d         db  0xd4 ; '.'
0000000000006c0e         db  0xff ; '.'
0000000000006c0f         db  0xff ; '.'
0000000000006c10         db  0x4c ; 'L'
0000000000006c11         db  0x07 ; '.'
0000000000006c12         db  0x00 ; '.'
0000000000006c13         db  0x00 ; '.'
0000000000006c14         db  0x00 ; '.'
0000000000006c15         db  0xd6 ; '.'
0000000000006c16         db  0xff ; '.'
0000000000006c17         db  0xff ; '.'
0000000000006c18         db  0xb8 ; '.'
0000000000006c19         db  0x07 ; '.'
0000000000006c1a         db  0x00 ; '.'
0000000000006c1b         db  0x00 ; '.'
0000000000006c1c         db  0x40 ; '@'
0000000000006c1d         db  0xd6 ; '.'
0000000000006c1e         db  0xff ; '.'
0000000000006c1f         db  0xff ; '.'
0000000000006c20         db  0xe4 ; '.'
0000000000006c21         db  0x07 ; '.'
0000000000006c22         db  0x00 ; '.'
0000000000006c23         db  0x00 ; '.'
0000000000006c24         db  0x60 ; '`'
0000000000006c25         db  0xd6 ; '.'
0000000000006c26         db  0xff ; '.'
0000000000006c27         db  0xff ; '.'
0000000000006c28         db  0xf8 ; '.'
0000000000006c29         db  0x07 ; '.'
0000000000006c2a         db  0x00 ; '.'
0000000000006c2b         db  0x00 ; '.'
0000000000006c2c         db  0x80 ; '.'
0000000000006c2d         db  0xd6 ; '.'
0000000000006c2e         db  0xff ; '.'
0000000000006c2f         db  0xff ; '.'
0000000000006c30         db  0x0c ; '.'
0000000000006c31         db  0x08 ; '.'
0000000000006c32         db  0x00 ; '.'
0000000000006c33         db  0x00 ; '.'
0000000000006c34         db  0xc0 ; '.'
0000000000006c35         db  0xd6 ; '.'
0000000000006c36         db  0xff ; '.'
0000000000006c37         db  0xff ; '.'
0000000000006c38         db  0x20 ; ' '
0000000000006c39         db  0x08 ; '.'
0000000000006c3a         db  0x00 ; '.'
0000000000006c3b         db  0x00 ; '.'
0000000000006c3c         db  0xe0 ; '.'
0000000000006c3d         db  0xd6 ; '.'
0000000000006c3e         db  0xff ; '.'
0000000000006c3f         db  0xff ; '.'
0000000000006c40         db  0x34 ; '4'
0000000000006c41         db  0x08 ; '.'
0000000000006c42         db  0x00 ; '.'
0000000000006c43         db  0x00 ; '.'
0000000000006c44         db  0x10 ; '.'
0000000000006c45         db  0xd7 ; '.'
0000000000006c46         db  0xff ; '.'
0000000000006c47         db  0xff ; '.'
0000000000006c48         db  0x48 ; 'H'
0000000000006c49         db  0x08 ; '.'
0000000000006c4a         db  0x00 ; '.'
0000000000006c4b         db  0x00 ; '.'
0000000000006c4c         db  0x90 ; '.'
0000000000006c4d         db  0xd7 ; '.'
0000000000006c4e         db  0xff ; '.'
0000000000006c4f         db  0xff ; '.'
0000000000006c50         db  0x9c ; '.'
0000000000006c51         db  0x08 ; '.'
0000000000006c52         db  0x00 ; '.'
0000000000006c53         db  0x00 ; '.'
0000000000006c54         db  0x80 ; '.'
0000000000006c55         db  0xd8 ; '.'
0000000000006c56         db  0xff ; '.'
0000000000006c57         db  0xff ; '.'
0000000000006c58         db  0x08 ; '.'
0000000000006c59         db  0x09 ; '.'
0000000000006c5a         db  0x00 ; '.'
0000000000006c5b         db  0x00 ; '.'
0000000000006c5c         db  0x90 ; '.'
0000000000006c5d         db  0xd8 ; '.'
0000000000006c5e         db  0xff ; '.'
0000000000006c5f         db  0xff ; '.'
0000000000006c60         db  0x1c ; '.'
0000000000006c61         db  0x09 ; '.'
0000000000006c62         db  0x00 ; '.'
0000000000006c63         db  0x00 ; '.'
0000000000006c64         db  0x30 ; '0'
0000000000006c65         db  0xd9 ; '.'
0000000000006c66         db  0xff ; '.'
0000000000006c67         db  0xff ; '.'
0000000000006c68         db  0x48 ; 'H'
0000000000006c69         db  0x09 ; '.'
0000000000006c6a         db  0x00 ; '.'
0000000000006c6b         db  0x00 ; '.'
0000000000006c6c         db  0x50 ; 'P'
0000000000006c6d         db  0xd9 ; '.'
0000000000006c6e         db  0xff ; '.'
0000000000006c6f         db  0xff ; '.'
0000000000006c70         db  0x5c ; '\'
0000000000006c71         db  0x09 ; '.'
0000000000006c72         db  0x00 ; '.'
0000000000006c73         db  0x00 ; '.'
0000000000006c74         db  0x60 ; '`'
0000000000006c75         db  0xd9 ; '.'
0000000000006c76         db  0xff ; '.'
0000000000006c77         db  0xff ; '.'
0000000000006c78         db  0x70 ; 'p'
0000000000006c79         db  0x09 ; '.'
0000000000006c7a         db  0x00 ; '.'
0000000000006c7b         db  0x00 ; '.'
0000000000006c7c         db  0x80 ; '.'
0000000000006c7d         db  0xd9 ; '.'
0000000000006c7e         db  0xff ; '.'
0000000000006c7f         db  0xff ; '.'
0000000000006c80         db  0x84 ; '.'
0000000000006c81         db  0x09 ; '.'
0000000000006c82         db  0x00 ; '.'
0000000000006c83         db  0x00 ; '.'
0000000000006c84         db  0xa0 ; '.'
0000000000006c85         db  0xd9 ; '.'
0000000000006c86         db  0xff ; '.'
0000000000006c87         db  0xff ; '.'
0000000000006c88         db  0x98 ; '.'
0000000000006c89         db  0x09 ; '.'
0000000000006c8a         db  0x00 ; '.'
0000000000006c8b         db  0x00 ; '.'
0000000000006c8c         db  0x30 ; '0'
0000000000006c8d         db  0xda ; '.'
0000000000006c8e         db  0xff ; '.'
0000000000006c8f         db  0xff ; '.'
0000000000006c90         db  0xb4 ; '.'
0000000000006c91         db  0x09 ; '.'
0000000000006c92         db  0x00 ; '.'
0000000000006c93         db  0x00 ; '.'
0000000000006c94         db  0xc0 ; '.'
0000000000006c95         db  0xda ; '.'
0000000000006c96         db  0xff ; '.'
0000000000006c97         db  0xff ; '.'
0000000000006c98         db  0xd0 ; '.'
0000000000006c99         db  0x09 ; '.'
0000000000006c9a         db  0x00 ; '.'
0000000000006c9b         db  0x00 ; '.'
0000000000006c9c         db  0xd0 ; '.'
0000000000006c9d         db  0xda ; '.'
0000000000006c9e         db  0xff ; '.'
0000000000006c9f         db  0xff ; '.'
0000000000006ca0         db  0xe4 ; '.'
0000000000006ca1         db  0x09 ; '.'
0000000000006ca2         db  0x00 ; '.'
0000000000006ca3         db  0x00 ; '.'
0000000000006ca4         db  0xe0 ; '.'
0000000000006ca5         db  0xda ; '.'
0000000000006ca6         db  0xff ; '.'
0000000000006ca7         db  0xff ; '.'
0000000000006ca8         db  0xf8 ; '.'
0000000000006ca9         db  0x09 ; '.'
0000000000006caa         db  0x00 ; '.'
0000000000006cab         db  0x00 ; '.'
0000000000006cac         db  0x80 ; '.'
0000000000006cad         db  0xdb ; '.'
0000000000006cae         db  0xff ; '.'
0000000000006caf         db  0xff ; '.'
0000000000006cb0         db  0x14 ; '.'
0000000000006cb1         db  0x0a ; '.'
0000000000006cb2         db  0x00 ; '.'
0000000000006cb3         db  0x00 ; '.'
0000000000006cb4         db  0x90 ; '.'
0000000000006cb5         db  0xdb ; '.'
0000000000006cb6         db  0xff ; '.'
0000000000006cb7         db  0xff ; '.'
0000000000006cb8         db  0x28 ; '('
0000000000006cb9         db  0x0a ; '.'
0000000000006cba         db  0x00 ; '.'
0000000000006cbb         db  0x00 ; '.'
0000000000006cbc         db  0xb0 ; '.'
0000000000006cbd         db  0xdb ; '.'
0000000000006cbe         db  0xff ; '.'
0000000000006cbf         db  0xff ; '.'
0000000000006cc0         db  0x3c ; '<'
0000000000006cc1         db  0x0a ; '.'
0000000000006cc2         db  0x00 ; '.'
0000000000006cc3         db  0x00 ; '.'
0000000000006cc4         db  0xc0 ; '.'
0000000000006cc5         db  0xdb ; '.'
0000000000006cc6         db  0xff ; '.'
0000000000006cc7         db  0xff ; '.'
0000000000006cc8         db  0x50 ; 'P'
0000000000006cc9         db  0x0a ; '.'
0000000000006cca         db  0x00 ; '.'
0000000000006ccb         db  0x00 ; '.'
0000000000006ccc         db  0x50 ; 'P'
0000000000006ccd         db  0xdc ; '.'
0000000000006cce         db  0xff ; '.'
0000000000006ccf         db  0xff ; '.'
0000000000006cd0         db  0x6c ; 'l'
0000000000006cd1         db  0x0a ; '.'
0000000000006cd2         db  0x00 ; '.'
0000000000006cd3         db  0x00 ; '.'
0000000000006cd4         db  0xf0 ; '.'
0000000000006cd5         db  0xdc ; '.'
0000000000006cd6         db  0xff ; '.'
0000000000006cd7         db  0xff ; '.'
0000000000006cd8         db  0x88 ; '.'
0000000000006cd9         db  0x0a ; '.'
0000000000006cda         db  0x00 ; '.'
0000000000006cdb         db  0x00 ; '.'
0000000000006cdc         db  0x00 ; '.'
0000000000006cdd         db  0xdd ; '.'
0000000000006cde         db  0xff ; '.'
0000000000006cdf         db  0xff ; '.'
0000000000006ce0         db  0x9c ; '.'
0000000000006ce1         db  0x0a ; '.'
0000000000006ce2         db  0x00 ; '.'
0000000000006ce3         db  0x00 ; '.'
0000000000006ce4         db  0x20 ; ' '
0000000000006ce5         db  0xdd ; '.'
0000000000006ce6         db  0xff ; '.'
0000000000006ce7         db  0xff ; '.'
0000000000006ce8         db  0xb0 ; '.'
0000000000006ce9         db  0x0a ; '.'
0000000000006cea         db  0x00 ; '.'
0000000000006ceb         db  0x00 ; '.'
0000000000006cec         db  0x40 ; '@'
0000000000006ced         db  0xdd ; '.'
0000000000006cee         db  0xff ; '.'
0000000000006cef         db  0xff ; '.'
0000000000006cf0         db  0xc4 ; '.'
0000000000006cf1         db  0x0a ; '.'
0000000000006cf2         db  0x00 ; '.'
0000000000006cf3         db  0x00 ; '.'
0000000000006cf4         db  0x50 ; 'P'
0000000000006cf5         db  0xdd ; '.'
0000000000006cf6         db  0xff ; '.'
0000000000006cf7         db  0xff ; '.'
0000000000006cf8         db  0xd8 ; '.'
0000000000006cf9         db  0x0a ; '.'
0000000000006cfa         db  0x00 ; '.'
0000000000006cfb         db  0x00 ; '.'
0000000000006cfc         db  0x70 ; 'p'
0000000000006cfd         db  0xdd ; '.'
0000000000006cfe         db  0xff ; '.'
0000000000006cff         db  0xff ; '.'
0000000000006d00         db  0xec ; '.'
0000000000006d01         db  0x0a ; '.'
0000000000006d02         db  0x00 ; '.'
0000000000006d03         db  0x00 ; '.'
0000000000006d04         db  0x90 ; '.'
0000000000006d05         db  0xdd ; '.'
0000000000006d06         db  0xff ; '.'
0000000000006d07         db  0xff ; '.'
0000000000006d08         db  0x00 ; '.'
0000000000006d09         db  0x0b ; '.'
0000000000006d0a         db  0x00 ; '.'
0000000000006d0b         db  0x00 ; '.'
0000000000006d0c         db  0xb0 ; '.'
0000000000006d0d         db  0xdd ; '.'
0000000000006d0e         db  0xff ; '.'
0000000000006d0f         db  0xff ; '.'
0000000000006d10         db  0x18 ; '.'
0000000000006d11         db  0x0b ; '.'
0000000000006d12         db  0x00 ; '.'
0000000000006d13         db  0x00 ; '.'
0000000000006d14         db  0xc0 ; '.'
0000000000006d15         db  0xdd ; '.'
0000000000006d16         db  0xff ; '.'
0000000000006d17         db  0xff ; '.'
0000000000006d18         db  0x30 ; '0'
0000000000006d19         db  0x0b ; '.'
0000000000006d1a         db  0x00 ; '.'
0000000000006d1b         db  0x00 ; '.'
0000000000006d1c         db  0xe0 ; '.'
0000000000006d1d         db  0xe1 ; '.'
0000000000006d1e         db  0xff ; '.'
0000000000006d1f         db  0xff ; '.'
0000000000006d20         db  0x44 ; 'D'
0000000000006d21         db  0x0c ; '.'
0000000000006d22         db  0x00 ; '.'
0000000000006d23         db  0x00 ; '.'
0000000000006d24         db  0x00 ; '.'
0000000000006d25         db  0xe2 ; '.'
0000000000006d26         db  0xff ; '.'
0000000000006d27         db  0xff ; '.'
0000000000006d28         db  0x58 ; 'X'
0000000000006d29         db  0x0c ; '.'
0000000000006d2a         db  0x00 ; '.'
0000000000006d2b         db  0x00 ; '.'
0000000000006d2c         db  0x80 ; '.'
0000000000006d2d         db  0xe2 ; '.'
0000000000006d2e         db  0xff ; '.'
0000000000006d2f         db  0xff ; '.'
0000000000006d30         db  0x74 ; 't'
0000000000006d31         db  0x0c ; '.'
0000000000006d32         db  0x00 ; '.'
0000000000006d33         db  0x00 ; '.'
0000000000006d34         db  0x60 ; '`'
0000000000006d35         db  0xe3 ; '.'
0000000000006d36         db  0xff ; '.'
0000000000006d37         db  0xff ; '.'
0000000000006d38         db  0xa0 ; '.'
0000000000006d39         db  0x0c ; '.'
0000000000006d3a         db  0x00 ; '.'
0000000000006d3b         db  0x00 ; '.'
0000000000006d3c         db  0xe0 ; '.'
0000000000006d3d         db  0xe3 ; '.'
0000000000006d3e         db  0xff ; '.'
0000000000006d3f         db  0xff ; '.'
0000000000006d40         db  0xc0 ; '.'
0000000000006d41         db  0x0c ; '.'
0000000000006d42         db  0x00 ; '.'
0000000000006d43         db  0x00 ; '.'
0000000000006d44         db  0x00 ; '.'
0000000000006d45         db  0xe4 ; '.'
0000000000006d46         db  0xff ; '.'
0000000000006d47         db  0xff ; '.'
0000000000006d48         db  0xdc ; '.'
0000000000006d49         db  0x0c ; '.'
0000000000006d4a         db  0x00 ; '.'
0000000000006d4b         db  0x00 ; '.'
0000000000006d4c         db  0x30 ; '0'
0000000000006d4d         db  0xe4 ; '.'
0000000000006d4e         db  0xff ; '.'
0000000000006d4f         db  0xff ; '.'
0000000000006d50         db  0xf0 ; '.'
0000000000006d51         db  0x0c ; '.'
0000000000006d52         db  0x00 ; '.'
0000000000006d53         db  0x00 ; '.'
0000000000006d54         db  0x40 ; '@'
0000000000006d55         db  0xe4 ; '.'
0000000000006d56         db  0xff ; '.'
0000000000006d57         db  0xff ; '.'
0000000000006d58         db  0x04 ; '.'
0000000000006d59         db  0x0d ; '.'
0000000000006d5a         db  0x00 ; '.'
0000000000006d5b         db  0x00 ; '.'
0000000000006d5c         db  0x80 ; '.'
0000000000006d5d         db  0xe4 ; '.'
0000000000006d5e         db  0xff ; '.'
0000000000006d5f         db  0xff ; '.'
0000000000006d60         db  0x28 ; '('
0000000000006d61         db  0x0d ; '.'
0000000000006d62         db  0x00 ; '.'
0000000000006d63         db  0x00 ; '.'
0000000000006d64         db  0xb0 ; '.'
0000000000006d65         db  0xe4 ; '.'
0000000000006d66         db  0xff ; '.'
0000000000006d67         db  0xff ; '.'
0000000000006d68         db  0x3c ; '<'
0000000000006d69         db  0x0d ; '.'
0000000000006d6a         db  0x00 ; '.'
0000000000006d6b         db  0x00 ; '.'
0000000000006d6c         db  0x40 ; '@'
0000000000006d6d         db  0xe5 ; '.'
0000000000006d6e         db  0xff ; '.'
0000000000006d6f         db  0xff ; '.'
0000000000006d70         db  0x54 ; 'T'
0000000000006d71         db  0x0d ; '.'
0000000000006d72         db  0x00 ; '.'
0000000000006d73         db  0x00 ; '.'
0000000000006d74         db  0x90 ; '.'
0000000000006d75         db  0xe5 ; '.'
0000000000006d76         db  0xff ; '.'
0000000000006d77         db  0xff ; '.'
0000000000006d78         db  0x6c ; 'l'
0000000000006d79         db  0x0d ; '.'
0000000000006d7a         db  0x00 ; '.'
0000000000006d7b         db  0x00 ; '.'
0000000000006d7c         db  0xb0 ; '.'
0000000000006d7d         db  0xe5 ; '.'
0000000000006d7e         db  0xff ; '.'
0000000000006d7f         db  0xff ; '.'
0000000000006d80         db  0x88 ; '.'
0000000000006d81         db  0x0d ; '.'
0000000000006d82         db  0x00 ; '.'
0000000000006d83         db  0x00 ; '.'
0000000000006d84         db  0xe0 ; '.'
0000000000006d85         db  0xe5 ; '.'
0000000000006d86         db  0xff ; '.'
0000000000006d87         db  0xff ; '.'
0000000000006d88         db  0xa4 ; '.'
0000000000006d89         db  0x0d ; '.'
0000000000006d8a         db  0x00 ; '.'
0000000000006d8b         db  0x00 ; '.'
0000000000006d8c         db  0x10 ; '.'
0000000000006d8d         db  0xe6 ; '.'
0000000000006d8e         db  0xff ; '.'
0000000000006d8f         db  0xff ; '.'
0000000000006d90         db  0xcc ; '.'
0000000000006d91         db  0x0d ; '.'
0000000000006d92         db  0x00 ; '.'
0000000000006d93         db  0x00 ; '.'
0000000000006d94         db  0x30 ; '0'
0000000000006d95         db  0xe6 ; '.'
0000000000006d96         db  0xff ; '.'
0000000000006d97         db  0xff ; '.'
0000000000006d98         db  0xe8 ; '.'
0000000000006d99         db  0x0d ; '.'
0000000000006d9a         db  0x00 ; '.'
0000000000006d9b         db  0x00 ; '.'
0000000000006d9c         db  0x70 ; 'p'
0000000000006d9d         db  0xe6 ; '.'
0000000000006d9e         db  0xff ; '.'
0000000000006d9f         db  0xff ; '.'
0000000000006da0         db  0x00 ; '.'
0000000000006da1         db  0x0e ; '.'
0000000000006da2         db  0x00 ; '.'
0000000000006da3         db  0x00 ; '.'
0000000000006da4         db  0x30 ; '0'
0000000000006da5         db  0xe7 ; '.'
0000000000006da6         db  0xff ; '.'
0000000000006da7         db  0xff ; '.'
0000000000006da8         db  0x3c ; '<'
0000000000006da9         db  0x0e ; '.'
0000000000006daa         db  0x00 ; '.'
0000000000006dab         db  0x00 ; '.'
0000000000006dac         db  0x80 ; '.'
0000000000006dad         db  0xe7 ; '.'
0000000000006dae         db  0xff ; '.'
0000000000006daf         db  0xff ; '.'
0000000000006db0         db  0x78 ; 'x'
0000000000006db1         db  0x0e ; '.'
0000000000006db2         db  0x00 ; '.'
0000000000006db3         db  0x00 ; '.'
0000000000006db4         db  0xd0 ; '.'
0000000000006db5         db  0xe7 ; '.'
0000000000006db6         db  0xff ; '.'
0000000000006db7         db  0xff ; '.'
0000000000006db8         db  0xb8 ; '.'
0000000000006db9         db  0x0e ; '.'
0000000000006dba         db  0x00 ; '.'
0000000000006dbb         db  0x00 ; '.'
0000000000006dbc         db  0x50 ; 'P'
0000000000006dbd         db  0xe8 ; '.'
0000000000006dbe         db  0xff ; '.'
0000000000006dbf         db  0xff ; '.'
0000000000006dc0         db  0xf0 ; '.'
0000000000006dc1         db  0x0e ; '.'
0000000000006dc2         db  0x00 ; '.'
0000000000006dc3         db  0x00 ; '.'
0000000000006dc4         db  0xd0 ; '.'
0000000000006dc5         db  0xea ; '.'
0000000000006dc6         db  0xff ; '.'
0000000000006dc7         db  0xff ; '.'
0000000000006dc8         db  0x28 ; '('
0000000000006dc9         db  0x0f ; '.'
0000000000006dca         db  0x00 ; '.'
0000000000006dcb         db  0x00 ; '.'
0000000000006dcc         db  0x10 ; '.'
0000000000006dcd         db  0xeb ; '.'
0000000000006dce         db  0xff ; '.'
0000000000006dcf         db  0xff ; '.'
0000000000006dd0         db  0x48 ; 'H'
0000000000006dd1         db  0x0f ; '.'
0000000000006dd2         db  0x00 ; '.'
0000000000006dd3         db  0x00 ; '.'
0000000000006dd4         db  0x70 ; 'p'
0000000000006dd5         db  0xeb ; '.'
0000000000006dd6         db  0xff ; '.'
0000000000006dd7         db  0xff ; '.'
0000000000006dd8         db  0x78 ; 'x'
0000000000006dd9         db  0x0f ; '.'
0000000000006dda         db  0x00 ; '.'
0000000000006ddb         db  0x00 ; '.'
0000000000006ddc         db  0x00 ; '.'
0000000000006ddd         db  0xec ; '.'
0000000000006dde         db  0xff ; '.'
0000000000006ddf         db  0xff ; '.'
0000000000006de0         db  0xb8 ; '.'
0000000000006de1         db  0x0f ; '.'
0000000000006de2         db  0x00 ; '.'
0000000000006de3         db  0x00 ; '.'
0000000000006de4         db  0x80 ; '.'
0000000000006de5         db  0xec ; '.'
0000000000006de6         db  0xff ; '.'
0000000000006de7         db  0xff ; '.'
0000000000006de8         db  0x08 ; '.'
0000000000006de9         db  0x10 ; '.'
0000000000006dea         db  0x00 ; '.'
0000000000006deb         db  0x00 ; '.'
0000000000006dec         db  0xc0 ; '.'
0000000000006ded         db  0xec ; '.'
0000000000006dee         db  0xff ; '.'
0000000000006def         db  0xff ; '.'
0000000000006df0         db  0x28 ; '('
0000000000006df1         db  0x10 ; '.'
0000000000006df2         db  0x00 ; '.'
0000000000006df3         db  0x00 ; '.'
0000000000006df4         db  0x80 ; '.'
0000000000006df5         db  0xed ; '.'
0000000000006df6         db  0xff ; '.'
0000000000006df7         db  0xff ; '.'
0000000000006df8         db  0xa0 ; '.'
0000000000006df9         db  0x10 ; '.'
0000000000006dfa         db  0x00 ; '.'
0000000000006dfb         db  0x00 ; '.'
0000000000006dfc         db  0x30 ; '0'
0000000000006dfd         db  0xee ; '.'
0000000000006dfe         db  0xff ; '.'
0000000000006dff         db  0xff ; '.'
0000000000006e00         db  0xec ; '.'
0000000000006e01         db  0x10 ; '.'
0000000000006e02         db  0x00 ; '.'
0000000000006e03         db  0x00 ; '.'
0000000000006e04         db  0x90 ; '.'
0000000000006e05         db  0xee ; '.'
0000000000006e06         db  0xff ; '.'
0000000000006e07         db  0xff ; '.'
0000000000006e08         db  0x30 ; '0'
0000000000006e09         db  0x11 ; '.'
0000000000006e0a         db  0x00 ; '.'
0000000000006e0b         db  0x00 ; '.'
0000000000006e0c         db  0x00 ; '.'
0000000000006e0d         db  0xef ; '.'
0000000000006e0e         db  0xff ; '.'
0000000000006e0f         db  0xff ; '.'
0000000000006e10         db  0x78 ; 'x'
0000000000006e11         db  0x11 ; '.'
0000000000006e12         db  0x00 ; '.'
0000000000006e13         db  0x00 ; '.'
0000000000006e14         db  0x10 ; '.'
0000000000006e15         db  0xef ; '.'
0000000000006e16         db  0xff ; '.'
0000000000006e17         db  0xff ; '.'
0000000000006e18         db  0x90 ; '.'
0000000000006e19         db  0x11 ; '.'
0000000000006e1a         db  0x00 ; '.'
0000000000006e1b         db  0x00 ; '.'
0000000000006e1c         db  0x00 ; '.'
0000000000006e1d         db  0x00 ; '.'
0000000000006e1e         db  0x00 ; '.'
0000000000006e1f         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6e20; 0x7ce8[ (3784 bytes)
        ; File offset : [28192; 31976[ (3784 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006e20         dd         0x00000014                                  ; Length of the record
0000000000006e24         dd         0x00000000                                  ; CIE ID
0000000000006e28         db         0x01                                        ; Version
0000000000006e29         db         "zR", 0                                     ; Augmentation String
0000000000006e2c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006e2d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006e2e         db         0x10                                        ; Return address register
0000000000006e2f         db         0x01                                        ; Augmentation data length
0000000000006e30         db         0x1b                                        ; FDE encoding
0000000000006e31         db  0x0c ; '.'
0000000000006e32         db  0x07 ; '.'
0000000000006e33         db  0x08 ; '.'
0000000000006e34         db  0x90 ; '.'
0000000000006e35         db  0x01 ; '.'
0000000000006e36         db  0x07 ; '.'
0000000000006e37         db  0x10 ; '.'
0000000000006e38         dd         0x00000014                                  ; Length of the record
0000000000006e3c         dd         0x0000001c                                  ; FDE: parent CIE at 0x6e20 (FDE encoding = 0x1B)
0000000000006e40         db         0xd0, 0xac, 2 dup (0xff)                    ; begin 0x1b10
0000000000006e44         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1b3b)
0000000000006e48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e49         align      16
0000000000006e50         dd         0x00000014                                  ; Length of the record
0000000000006e54         dd         0x00000000                                  ; CIE ID
0000000000006e58         db         0x01                                        ; Version
0000000000006e59         db         "zR", 0                                     ; Augmentation String
0000000000006e5c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006e5d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006e5e         db         0x10                                        ; Return address register
0000000000006e5f         db         0x01                                        ; Augmentation data length
0000000000006e60         db         0x1b                                        ; FDE encoding
0000000000006e61         db  0x0c ; '.'
0000000000006e62         db  0x07 ; '.'
0000000000006e63         db  0x08 ; '.'
0000000000006e64         db  0x90 ; '.'
0000000000006e65         db  0x01 ; '.'
0000000000006e66         db  0x00 ; '.'
0000000000006e67         db  0x00 ; '.'
0000000000006e68         dd         0x00000024                                  ; Length of the record
0000000000006e6c         dd         0x0000001c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000006e70         db         0x00, 0xa6, 2 dup (0xff)                    ; begin 0x1470
0000000000006e74         db         0x10, 0x03, 2 dup (0x00)                    ; length 0x310 (end at 0x1780)
0000000000006e78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e79         db  0x0e ; '.'
0000000000006e7a         db  0x10 ; '.'
0000000000006e7b         db  0x46 ; 'F'
0000000000006e7c         db  0x0e ; '.'
0000000000006e7d         db  0x18 ; '.'
0000000000006e7e         db  0x4a ; 'J'
0000000000006e7f         db  0x0f ; '.'
0000000000006e80         db  0x0b ; '.'
0000000000006e81         db  0x77 ; 'w'
0000000000006e82         db  0x08 ; '.'
0000000000006e83         db  0x80 ; '.'
0000000000006e84         db  0x00 ; '.'
0000000000006e85         db  0x3f ; '?'
0000000000006e86         db  0x1a ; '.'
0000000000006e87         db  0x3b ; ';'
0000000000006e88         db  0x2a ; '*'
0000000000006e89         db  0x33 ; '3'
0000000000006e8a         db  0x24 ; '$'
0000000000006e8b         db  0x22 ; '"'
0000000000006e8c         db  0x00 ; '.'
0000000000006e8d         db  0x00 ; '.'
0000000000006e8e         db  0x00 ; '.'
0000000000006e8f         db  0x00 ; '.'
0000000000006e90         dd         0x00000014                                  ; Length of the record
0000000000006e94         dd         0x00000044                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000006e98         db         0xe8, 0xa8, 2 dup (0xff)                    ; begin 0x1780
0000000000006e9c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1788)
0000000000006ea0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ea1         align      8
0000000000006ea8         dd         0x00000038                                  ; Length of the record
0000000000006eac         dd         0x0000005c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000006eb0         db         0x70, 0xad, 2 dup (0xff)                    ; begin 0x1c20
0000000000006eb4         db         0xaf, 3 dup (0x00)                          ; length 0xaf (end at 0x1ccf)
0000000000006eb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006eb9         db  0x45 ; 'E'
0000000000006eba         db  0x0e ; '.'
0000000000006ebb         db  0x10 ; '.'
0000000000006ebc         db  0x8c ; '.'
0000000000006ebd         db  0x02 ; '.'
0000000000006ebe         db  0x44 ; 'D'
0000000000006ebf         db  0x0e ; '.'
0000000000006ec0         db  0x18 ; '.'
0000000000006ec1         db  0x86 ; '.'
0000000000006ec2         db  0x03 ; '.'
0000000000006ec3         db  0x44 ; 'D'
0000000000006ec4         db  0x0e ; '.'
0000000000006ec5         db  0x20 ; ' '
0000000000006ec6         db  0x83 ; '.'
0000000000006ec7         db  0x04 ; '.'
0000000000006ec8         db  0x02 ; '.'
0000000000006ec9         db  0x4c ; 'L'
0000000000006eca         db  0x0a ; '.'
0000000000006ecb         db  0x0e ; '.'
0000000000006ecc         db  0x18 ; '.'
0000000000006ecd         db  0x41 ; 'A'
0000000000006ece         db  0x0e ; '.'
0000000000006ecf         db  0x10 ; '.'
0000000000006ed0         db  0x42 ; 'B'
0000000000006ed1         db  0x0e ; '.'
0000000000006ed2         db  0x08 ; '.'
0000000000006ed3         db  0x54 ; 'T'
0000000000006ed4         db  0x0b ; '.'
0000000000006ed5         db  0x4a ; 'J'
0000000000006ed6         db  0x0a ; '.'
0000000000006ed7         db  0x0e ; '.'
0000000000006ed8         db  0x18 ; '.'
0000000000006ed9         db  0x41 ; 'A'
0000000000006eda         db  0x0e ; '.'
0000000000006edb         db  0x10 ; '.'
0000000000006edc         db  0x42 ; 'B'
0000000000006edd         db  0x0e ; '.'
0000000000006ede         db  0x08 ; '.'
0000000000006edf         db  0x43 ; 'C'
0000000000006ee0         db  0x0b ; '.'
0000000000006ee1         db  0x00 ; '.'
0000000000006ee2         db  0x00 ; '.'
0000000000006ee3         db  0x00 ; '.'
0000000000006ee4         dd         0x0000002c                                  ; Length of the record
0000000000006ee8         dd         0x00000098                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000006eec         db         0xe4, 0xad, 2 dup (0xff)                    ; begin 0x1cd0
0000000000006ef0         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0x1d57)
0000000000006ef4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ef5         db  0x42 ; 'B'
0000000000006ef6         db  0x0e ; '.'
0000000000006ef7         db  0x10 ; '.'
0000000000006ef8         db  0x8c ; '.'
0000000000006ef9         db  0x02 ; '.'
0000000000006efa         db  0x41 ; 'A'
0000000000006efb         db  0x0e ; '.'
0000000000006efc         db  0x18 ; '.'
0000000000006efd         db  0x86 ; '.'
0000000000006efe         db  0x03 ; '.'
0000000000006eff         db  0x48 ; 'H'
0000000000006f00         db  0x0e ; '.'
0000000000006f01         db  0x20 ; ' '
0000000000006f02         db  0x83 ; '.'
0000000000006f03         db  0x04 ; '.'
0000000000006f04         db  0x02 ; '.'
0000000000006f05         db  0x71 ; 'q'
0000000000006f06         db  0x0a ; '.'
0000000000006f07         db  0x0e ; '.'
0000000000006f08         db  0x18 ; '.'
0000000000006f09         db  0x41 ; 'A'
0000000000006f0a         db  0x0e ; '.'
0000000000006f0b         db  0x10 ; '.'
0000000000006f0c         db  0x42 ; 'B'
0000000000006f0d         db  0x0e ; '.'
0000000000006f0e         db  0x08 ; '.'
0000000000006f0f         db  0x41 ; 'A'
0000000000006f10         db  0x0b ; '.'
0000000000006f11         db  0x00 ; '.'
0000000000006f12         db  0x00 ; '.'
0000000000006f13         db  0x00 ; '.'
0000000000006f14         dd         0x00000060                                  ; Length of the record
0000000000006f18         dd         0x000000c8                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000006f1c         db         0x44, 0xae, 2 dup (0xff)                    ; begin 0x1d60
0000000000006f20         db         0xd9, 0x05, 2 dup (0x00)                    ; length 0x5d9 (end at 0x2339)
0000000000006f24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f25         db  0x42 ; 'B'
0000000000006f26         db  0x0e ; '.'
0000000000006f27         db  0x10 ; '.'
0000000000006f28         db  0x8f ; '.'
0000000000006f29         db  0x02 ; '.'
0000000000006f2a         db  0x42 ; 'B'
0000000000006f2b         db  0x0e ; '.'
0000000000006f2c         db  0x18 ; '.'
0000000000006f2d         db  0x8e ; '.'
0000000000006f2e         db  0x03 ; '.'
0000000000006f2f         db  0x45 ; 'E'
0000000000006f30         db  0x0e ; '.'
0000000000006f31         db  0x20 ; ' '
0000000000006f32         db  0x8d ; '.'
0000000000006f33         db  0x04 ; '.'
0000000000006f34         db  0x42 ; 'B'
0000000000006f35         db  0x0e ; '.'
0000000000006f36         db  0x28 ; '('
0000000000006f37         db  0x8c ; '.'
0000000000006f38         db  0x05 ; '.'
0000000000006f39         db  0x41 ; 'A'
0000000000006f3a         db  0x0e ; '.'
0000000000006f3b         db  0x30 ; '0'
0000000000006f3c         db  0x86 ; '.'
0000000000006f3d         db  0x06 ; '.'
0000000000006f3e         db  0x41 ; 'A'
0000000000006f3f         db  0x0e ; '.'
0000000000006f40         db  0x38 ; '8'
0000000000006f41         db  0x83 ; '.'
0000000000006f42         db  0x07 ; '.'
0000000000006f43         db  0x49 ; 'I'
0000000000006f44         db  0x0e ; '.'
0000000000006f45         db  0xc0 ; '.'
0000000000006f46         db  0x04 ; '.'
0000000000006f47         db  0x03 ; '.'
0000000000006f48         db  0x7c ; '|'
0000000000006f49         db  0x04 ; '.'
0000000000006f4a         db  0x0e ; '.'
0000000000006f4b         db  0xc8 ; '.'
0000000000006f4c         db  0x04 ; '.'
0000000000006f4d         db  0x41 ; 'A'
0000000000006f4e         db  0x0e ; '.'
0000000000006f4f         db  0xd0 ; '.'
0000000000006f50         db  0x04 ; '.'
0000000000006f51         db  0x49 ; 'I'
0000000000006f52         db  0x0e ; '.'
0000000000006f53         db  0xd8 ; '.'
0000000000006f54         db  0x04 ; '.'
0000000000006f55         db  0x42 ; 'B'
0000000000006f56         db  0x0e ; '.'
0000000000006f57         db  0xe0 ; '.'
0000000000006f58         db  0x04 ; '.'
0000000000006f59         db  0x5e ; '^'
0000000000006f5a         db  0x0e ; '.'
0000000000006f5b         db  0xc0 ; '.'
0000000000006f5c         db  0x04 ; '.'
0000000000006f5d         db  0x5e ; '^'
0000000000006f5e         db  0x0a ; '.'
0000000000006f5f         db  0x0e ; '.'
0000000000006f60         db  0x38 ; '8'
0000000000006f61         db  0x41 ; 'A'
0000000000006f62         db  0x0e ; '.'
0000000000006f63         db  0x30 ; '0'
0000000000006f64         db  0x41 ; 'A'
0000000000006f65         db  0x0e ; '.'
0000000000006f66         db  0x28 ; '('
0000000000006f67         db  0x42 ; 'B'
0000000000006f68         db  0x0e ; '.'
0000000000006f69         db  0x20 ; ' '
0000000000006f6a         db  0x42 ; 'B'
0000000000006f6b         db  0x0e ; '.'
0000000000006f6c         db  0x18 ; '.'
0000000000006f6d         db  0x42 ; 'B'
0000000000006f6e         db  0x0e ; '.'
0000000000006f6f         db  0x10 ; '.'
0000000000006f70         db  0x42 ; 'B'
0000000000006f71         db  0x0e ; '.'
0000000000006f72         db  0x08 ; '.'
0000000000006f73         db  0x41 ; 'A'
0000000000006f74         db  0x0b ; '.'
0000000000006f75         db  0x00 ; '.'
0000000000006f76         db  0x00 ; '.'
0000000000006f77         db  0x00 ; '.'
0000000000006f78         dd         0x00000028                                  ; Length of the record
0000000000006f7c         dd         0x0000012c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000006f80         db         0xc0, 0xb3, 2 dup (0xff)                    ; begin 0x2340
0000000000006f84         db         0x9a, 0x04, 2 dup (0x00)                    ; length 0x49a (end at 0x27da)
0000000000006f88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f89         db  0x42 ; 'B'
0000000000006f8a         db  0x0e ; '.'
0000000000006f8b         db  0x10 ; '.'
0000000000006f8c         db  0x8d ; '.'
0000000000006f8d         db  0x02 ; '.'
0000000000006f8e         db  0x42 ; 'B'
0000000000006f8f         db  0x0e ; '.'
0000000000006f90         db  0x18 ; '.'
0000000000006f91         db  0x8c ; '.'
0000000000006f92         db  0x03 ; '.'
0000000000006f93         db  0x46 ; 'F'
0000000000006f94         db  0x0e ; '.'
0000000000006f95         db  0x20 ; ' '
0000000000006f96         db  0x86 ; '.'
0000000000006f97         db  0x04 ; '.'
0000000000006f98         db  0x41 ; 'A'
0000000000006f99         db  0x0e ; '.'
0000000000006f9a         db  0x28 ; '('
0000000000006f9b         db  0x83 ; '.'
0000000000006f9c         db  0x05 ; '.'
0000000000006f9d         db  0x49 ; 'I'
0000000000006f9e         db  0x0e ; '.'
0000000000006f9f         db  0xb0 ; '.'
0000000000006fa0         db  0x01 ; '.'
0000000000006fa1         db  0x00 ; '.'
0000000000006fa2         db  0x00 ; '.'
0000000000006fa3         db  0x00 ; '.'
0000000000006fa4         dd         0x00000048                                  ; Length of the record
0000000000006fa8         dd         0x00000158                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000006fac         db         0xe4, 0xa7, 2 dup (0xff)                    ; begin 0x1790
0000000000006fb0         db         0x79, 0x03, 2 dup (0x00)                    ; length 0x379 (end at 0x1b09)
0000000000006fb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fb5         db  0x42 ; 'B'
0000000000006fb6         db  0x0e ; '.'
0000000000006fb7         db  0x10 ; '.'
0000000000006fb8         db  0x8d ; '.'
0000000000006fb9         db  0x02 ; '.'
0000000000006fba         db  0x42 ; 'B'
0000000000006fbb         db  0x0e ; '.'
0000000000006fbc         db  0x18 ; '.'
0000000000006fbd         db  0x8c ; '.'
0000000000006fbe         db  0x03 ; '.'
0000000000006fbf         db  0x48 ; 'H'
0000000000006fc0         db  0x0e ; '.'
0000000000006fc1         db  0x20 ; ' '
0000000000006fc2         db  0x86 ; '.'
0000000000006fc3         db  0x04 ; '.'
0000000000006fc4         db  0x41 ; 'A'
0000000000006fc5         db  0x0e ; '.'
0000000000006fc6         db  0x28 ; '('
0000000000006fc7         db  0x83 ; '.'
0000000000006fc8         db  0x05 ; '.'
0000000000006fc9         db  0x4a ; 'J'
0000000000006fca         db  0x0e ; '.'
0000000000006fcb         db  0x30 ; '0'
0000000000006fcc         db  0x03 ; '.'
0000000000006fcd         db  0xf8 ; '.'
0000000000006fce         db  0x01 ; '.'
0000000000006fcf         db  0x0a ; '.'
0000000000006fd0         db  0x0e ; '.'
0000000000006fd1         db  0x38 ; '8'
0000000000006fd2         db  0x50 ; 'P'
0000000000006fd3         db  0x0e ; '.'
0000000000006fd4         db  0x40 ; '@'
0000000000006fd5         db  0x6a ; 'j'
0000000000006fd6         db  0x0b ; '.'
0000000000006fd7         db  0x02 ; '.'
0000000000006fd8         db  0x4b ; 'K'
0000000000006fd9         db  0x0a ; '.'
0000000000006fda         db  0x0e ; '.'
0000000000006fdb         db  0x28 ; '('
0000000000006fdc         db  0x43 ; 'C'
0000000000006fdd         db  0x0e ; '.'
0000000000006fde         db  0x20 ; ' '
0000000000006fdf         db  0x41 ; 'A'
0000000000006fe0         db  0x0e ; '.'
0000000000006fe1         db  0x18 ; '.'
0000000000006fe2         db  0x42 ; 'B'
0000000000006fe3         db  0x0e ; '.'
0000000000006fe4         db  0x10 ; '.'
0000000000006fe5         db  0x42 ; 'B'
0000000000006fe6         db  0x0e ; '.'
0000000000006fe7         db  0x08 ; '.'
0000000000006fe8         db  0x41 ; 'A'
0000000000006fe9         db  0x0b ; '.'
0000000000006fea         db  0x00 ; '.'
0000000000006feb         db  0x00 ; '.'
0000000000006fec         db  0x00 ; '.'
0000000000006fed         db  0x00 ; '.'
0000000000006fee         db  0x00 ; '.'
0000000000006fef         db  0x00 ; '.'
0000000000006ff0         dd         0x00000010                                  ; Length of the record
0000000000006ff4         dd         0x000001a4                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000006ff8         db         0xe8, 0xb7, 2 dup (0xff)                    ; begin 0x27e0
0000000000006ffc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x27e8)
0000000000007000         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007001         align      4
0000000000007004         dd         0x00000010                                  ; Length of the record
0000000000007008         dd         0x000001b8                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000700c         db         0xe4, 0xb7, 2 dup (0xff)                    ; begin 0x27f0
0000000000007010         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x27f8)
0000000000007014         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007015         align      8
0000000000007018         dd         0x0000002c                                  ; Length of the record
000000000000701c         dd         0x000001cc                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007020         db         0xe0, 0xb7, 2 dup (0xff)                    ; begin 0x2800
0000000000007024         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x28a4)
0000000000007028         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007029         db  0x41 ; 'A'
000000000000702a         db  0x0e ; '.'
000000000000702b         db  0x10 ; '.'
000000000000702c         db  0x86 ; '.'
000000000000702d         db  0x02 ; '.'
000000000000702e         db  0x41 ; 'A'
000000000000702f         db  0x0e ; '.'
0000000000007030         db  0x18 ; '.'
0000000000007031         db  0x83 ; '.'
0000000000007032         db  0x03 ; '.'
0000000000007033         db  0x44 ; 'D'
0000000000007034         db  0x0e ; '.'
0000000000007035         db  0x20 ; ' '
0000000000007036         db  0x7a ; 'z'
0000000000007037         db  0x0a ; '.'
0000000000007038         db  0x0e ; '.'
0000000000007039         db  0x18 ; '.'
000000000000703a         db  0x41 ; 'A'
000000000000703b         db  0x0e ; '.'
000000000000703c         db  0x10 ; '.'
000000000000703d         db  0x41 ; 'A'
000000000000703e         db  0x0e ; '.'
000000000000703f         db  0x08 ; '.'
0000000000007040         db  0x41 ; 'A'
0000000000007041         db  0x0b ; '.'
0000000000007042         db  0x00 ; '.'
0000000000007043         db  0x00 ; '.'
0000000000007044         db  0x00 ; '.'
0000000000007045         db  0x00 ; '.'
0000000000007046         db  0x00 ; '.'
0000000000007047         db  0x00 ; '.'
0000000000007048         dd         0x00000010                                  ; Length of the record
000000000000704c         dd         0x000001fc                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007050         db         0x60, 0xb8, 2 dup (0xff)                    ; begin 0x28b0
0000000000007054         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x28b5)
0000000000007058         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007059         align      4
000000000000705c         dd         0x00000018                                  ; Length of the record
0000000000007060         dd         0x00000210                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007064         db         0x5c, 0xb8, 2 dup (0xff)                    ; begin 0x28c0
0000000000007068         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x28e2)
000000000000706c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000706d         db  0x46 ; 'F'
000000000000706e         db  0x0e ; '.'
000000000000706f         db  0x10 ; '.'
0000000000007070         db  0x83 ; '.'
0000000000007071         db  0x02 ; '.'
0000000000007072         db  0x4e ; 'N'
0000000000007073         db  0xc3 ; '.'
0000000000007074         db  0x0e ; '.'
0000000000007075         db  0x08 ; '.'
0000000000007076         db  0x00 ; '.'
0000000000007077         db  0x00 ; '.'
0000000000007078         dd         0x0000002c                                  ; Length of the record
000000000000707c         dd         0x0000022c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007080         db         0x70, 0xb8, 2 dup (0xff)                    ; begin 0x28f0
0000000000007084         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x2983)
0000000000007088         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007089         db  0x42 ; 'B'
000000000000708a         db  0x0e ; '.'
000000000000708b         db  0x10 ; '.'
000000000000708c         db  0x8c ; '.'
000000000000708d         db  0x02 ; '.'
000000000000708e         db  0x41 ; 'A'
000000000000708f         db  0x0e ; '.'
0000000000007090         db  0x18 ; '.'
0000000000007091         db  0x86 ; '.'
0000000000007092         db  0x03 ; '.'
0000000000007093         db  0x44 ; 'D'
0000000000007094         db  0x0e ; '.'
0000000000007095         db  0x20 ; ' '
0000000000007096         db  0x83 ; '.'
0000000000007097         db  0x04 ; '.'
0000000000007098         db  0x5e ; '^'
0000000000007099         db  0x0a ; '.'
000000000000709a         db  0x0e ; '.'
000000000000709b         db  0x18 ; '.'
000000000000709c         db  0x41 ; 'A'
000000000000709d         db  0x0e ; '.'
000000000000709e         db  0x10 ; '.'
000000000000709f         db  0x42 ; 'B'
00000000000070a0         db  0x0e ; '.'
00000000000070a1         db  0x08 ; '.'
00000000000070a2         db  0x48 ; 'H'
00000000000070a3         db  0x0b ; '.'
00000000000070a4         db  0x00 ; '.'
00000000000070a5         db  0x00 ; '.'
00000000000070a6         db  0x00 ; '.'
00000000000070a7         db  0x00 ; '.'
00000000000070a8         dd         0x0000001c                                  ; Length of the record
00000000000070ac         dd         0x0000025c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000070b0         db         0xe0, 0xb8, 2 dup (0xff)                    ; begin 0x2990
00000000000070b4         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x29f0)
00000000000070b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070b9         db  0x44 ; 'D'
00000000000070ba         db  0x0e ; '.'
00000000000070bb         db  0x10 ; '.'
00000000000070bc         db  0x75 ; 'u'
00000000000070bd         db  0x0a ; '.'
00000000000070be         db  0x0e ; '.'
00000000000070bf         db  0x08 ; '.'
00000000000070c0         db  0x47 ; 'G'
00000000000070c1         db  0x0b ; '.'
00000000000070c2         db  0x5f ; '_'
00000000000070c3         db  0x0e ; '.'
00000000000070c4         db  0x08 ; '.'
00000000000070c5         db  0x00 ; '.'
00000000000070c6         db  0x00 ; '.'
00000000000070c7         db  0x00 ; '.'
00000000000070c8         dd         0x00000014                                  ; Length of the record
00000000000070cc         dd         0x0000027c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000070d0         db         0x20, 0xb9, 2 dup (0xff)                    ; begin 0x29f0
00000000000070d4         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x2a32)
00000000000070d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070d9         align      32
00000000000070e0         dd         0x00000010                                  ; Length of the record
00000000000070e4         dd         0x00000294                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000070e8         db         0x58, 0xb9, 2 dup (0xff)                    ; begin 0x2a40
00000000000070ec         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x2a50)
00000000000070f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070f1         align      4
00000000000070f4         dd         0x00000060                                  ; Length of the record
00000000000070f8         dd         0x000002a8                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000070fc         db         0x54, 0xb9, 2 dup (0xff)                    ; begin 0x2a50
0000000000007100         db         0x08, 0x01, 2 dup (0x00)                    ; length 0x108 (end at 0x2b58)
0000000000007104         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007105         db  0x42 ; 'B'
0000000000007106         db  0x0e ; '.'
0000000000007107         db  0x10 ; '.'
0000000000007108         db  0x8f ; '.'
0000000000007109         db  0x02 ; '.'
000000000000710a         db  0x42 ; 'B'
000000000000710b         db  0x0e ; '.'
000000000000710c         db  0x18 ; '.'
000000000000710d         db  0x8e ; '.'
000000000000710e         db  0x03 ; '.'
000000000000710f         db  0x42 ; 'B'
0000000000007110         db  0x0e ; '.'
0000000000007111         db  0x20 ; ' '
0000000000007112         db  0x8d ; '.'
0000000000007113         db  0x04 ; '.'
0000000000007114         db  0x42 ; 'B'
0000000000007115         db  0x0e ; '.'
0000000000007116         db  0x28 ; '('
0000000000007117         db  0x8c ; '.'
0000000000007118         db  0x05 ; '.'
0000000000007119         db  0x41 ; 'A'
000000000000711a         db  0x0e ; '.'
000000000000711b         db  0x30 ; '0'
000000000000711c         db  0x86 ; '.'
000000000000711d         db  0x06 ; '.'
000000000000711e         db  0x41 ; 'A'
000000000000711f         db  0x0e ; '.'
0000000000007120         db  0x38 ; '8'
0000000000007121         db  0x83 ; '.'
0000000000007122         db  0x07 ; '.'
0000000000007123         db  0x44 ; 'D'
0000000000007124         db  0x0e ; '.'
0000000000007125         db  0x50 ; 'P'
0000000000007126         db  0x02 ; '.'
0000000000007127         db  0x96 ; '.'
0000000000007128         db  0x0a ; '.'
0000000000007129         db  0x0e ; '.'
000000000000712a         db  0x38 ; '8'
000000000000712b         db  0x41 ; 'A'
000000000000712c         db  0x0e ; '.'
000000000000712d         db  0x30 ; '0'
000000000000712e         db  0x41 ; 'A'
000000000000712f         db  0x0e ; '.'
0000000000007130         db  0x28 ; '('
0000000000007131         db  0x42 ; 'B'
0000000000007132         db  0x0e ; '.'
0000000000007133         db  0x20 ; ' '
0000000000007134         db  0x42 ; 'B'
0000000000007135         db  0x0e ; '.'
0000000000007136         db  0x18 ; '.'
0000000000007137         db  0x42 ; 'B'
0000000000007138         db  0x0e ; '.'
0000000000007139         db  0x10 ; '.'
000000000000713a         db  0x42 ; 'B'
000000000000713b         db  0x0e ; '.'
000000000000713c         db  0x08 ; '.'
000000000000713d         db  0x42 ; 'B'
000000000000713e         db  0x0b ; '.'
000000000000713f         db  0x02 ; '.'
0000000000007140         db  0x44 ; 'D'
0000000000007141         db  0x0a ; '.'
0000000000007142         db  0x0e ; '.'
0000000000007143         db  0x38 ; '8'
0000000000007144         db  0x43 ; 'C'
0000000000007145         db  0x0e ; '.'
0000000000007146         db  0x30 ; '0'
0000000000007147         db  0x41 ; 'A'
0000000000007148         db  0x0e ; '.'
0000000000007149         db  0x28 ; '('
000000000000714a         db  0x42 ; 'B'
000000000000714b         db  0x0e ; '.'
000000000000714c         db  0x20 ; ' '
000000000000714d         db  0x42 ; 'B'
000000000000714e         db  0x0e ; '.'
000000000000714f         db  0x18 ; '.'
0000000000007150         db  0x42 ; 'B'
0000000000007151         db  0x0e ; '.'
0000000000007152         db  0x10 ; '.'
0000000000007153         db  0x42 ; 'B'
0000000000007154         db  0x0e ; '.'
0000000000007155         db  0x08 ; '.'
0000000000007156         db  0x41 ; 'A'
0000000000007157         db  0x0b ; '.'
0000000000007158         dd         0x00000010                                  ; Length of the record
000000000000715c         dd         0x0000030c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007160         db         0x00, 0xba, 2 dup (0xff)                    ; begin 0x2b60
0000000000007164         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x2b6a)
0000000000007168         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007169         align      4
000000000000716c         dd         0x00000010                                  ; Length of the record
0000000000007170         dd         0x00000320                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007174         db         0xfc, 0xb9, 2 dup (0xff)                    ; begin 0x2b70
0000000000007178         db         0x09, 3 dup (0x00)                          ; length 0x9 (end at 0x2b79)
000000000000717c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000717d         align      128
0000000000007180         dd         0x0000002c                                  ; Length of the record
0000000000007184         dd         0x00000334                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007188         db         0xf8, 0xb9, 2 dup (0xff)                    ; begin 0x2b80
000000000000718c         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x2bbf)
0000000000007190         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007191         db  0x41 ; 'A'
0000000000007192         db  0x0e ; '.'
0000000000007193         db  0x10 ; '.'
0000000000007194         db  0x86 ; '.'
0000000000007195         db  0x02 ; '.'
0000000000007196         db  0x41 ; 'A'
0000000000007197         db  0x0e ; '.'
0000000000007198         db  0x18 ; '.'
0000000000007199         db  0x83 ; '.'
000000000000719a         db  0x03 ; '.'
000000000000719b         db  0x50 ; 'P'
000000000000719c         db  0x0e ; '.'
000000000000719d         db  0x20 ; ' '
000000000000719e         db  0x5f ; '_'
000000000000719f         db  0x0a ; '.'
00000000000071a0         db  0x0e ; '.'
00000000000071a1         db  0x18 ; '.'
00000000000071a2         db  0x41 ; 'A'
00000000000071a3         db  0x0e ; '.'
00000000000071a4         db  0x10 ; '.'
00000000000071a5         db  0x41 ; 'A'
00000000000071a6         db  0x0e ; '.'
00000000000071a7         db  0x08 ; '.'
00000000000071a8         db  0x45 ; 'E'
00000000000071a9         db  0x0b ; '.'
00000000000071aa         db  0x00 ; '.'
00000000000071ab         db  0x00 ; '.'
00000000000071ac         db  0x00 ; '.'
00000000000071ad         db  0x00 ; '.'
00000000000071ae         db  0x00 ; '.'
00000000000071af         db  0x00 ; '.'
00000000000071b0         dd         0x0000001c                                  ; Length of the record
00000000000071b4         dd         0x00000364                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000071b8         db         0x08, 0xba, 2 dup (0xff)                    ; begin 0x2bc0
00000000000071bc         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2c5f)
00000000000071c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071c1         db  0x44 ; 'D'
00000000000071c2         db  0x0e ; '.'
00000000000071c3         db  0x10 ; '.'
00000000000071c4         db  0x83 ; '.'
00000000000071c5         db  0x02 ; '.'
00000000000071c6         db  0x02 ; '.'
00000000000071c7         db  0x78 ; 'x'
00000000000071c8         db  0x0a ; '.'
00000000000071c9         db  0x0e ; '.'
00000000000071ca         db  0x08 ; '.'
00000000000071cb         db  0x41 ; 'A'
00000000000071cc         db  0x0b ; '.'
00000000000071cd         db  0x00 ; '.'
00000000000071ce         db  0x00 ; '.'
00000000000071cf         db  0x00 ; '.'
00000000000071d0         dd         0x00000040                                  ; Length of the record
00000000000071d4         dd         0x00000384                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000071d8         db         0x88, 0xba, 2 dup (0xff)                    ; begin 0x2c60
00000000000071dc         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2d47)
00000000000071e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071e1         db  0x41 ; 'A'
00000000000071e2         db  0x0e ; '.'
00000000000071e3         db  0x10 ; '.'
00000000000071e4         db  0x86 ; '.'
00000000000071e5         db  0x02 ; '.'
00000000000071e6         db  0x41 ; 'A'
00000000000071e7         db  0x0e ; '.'
00000000000071e8         db  0x18 ; '.'
00000000000071e9         db  0x83 ; '.'
00000000000071ea         db  0x03 ; '.'
00000000000071eb         db  0x49 ; 'I'
00000000000071ec         db  0x0e ; '.'
00000000000071ed         db  0x20 ; ' '
00000000000071ee         db  0x6e ; 'n'
00000000000071ef         db  0x0a ; '.'
00000000000071f0         db  0x0e ; '.'
00000000000071f1         db  0x18 ; '.'
00000000000071f2         db  0x41 ; 'A'
00000000000071f3         db  0x0e ; '.'
00000000000071f4         db  0x10 ; '.'
00000000000071f5         db  0x41 ; 'A'
00000000000071f6         db  0x0e ; '.'
00000000000071f7         db  0x08 ; '.'
00000000000071f8         db  0x45 ; 'E'
00000000000071f9         db  0x0b ; '.'
00000000000071fa         db  0x02 ; '.'
00000000000071fb         db  0x4a ; 'J'
00000000000071fc         db  0x0a ; '.'
00000000000071fd         db  0x0e ; '.'
00000000000071fe         db  0x18 ; '.'
00000000000071ff         db  0x41 ; 'A'
0000000000007200         db  0x0e ; '.'
0000000000007201         db  0x10 ; '.'
0000000000007202         db  0x41 ; 'A'
0000000000007203         db  0x0e ; '.'
0000000000007204         db  0x08 ; '.'
0000000000007205         db  0x44 ; 'D'
0000000000007206         db  0x0b ; '.'
0000000000007207         db  0x02 ; '.'
0000000000007208         db  0x54 ; 'T'
0000000000007209         db  0x0e ; '.'
000000000000720a         db  0x18 ; '.'
000000000000720b         db  0x41 ; 'A'
000000000000720c         db  0x0e ; '.'
000000000000720d         db  0x10 ; '.'
000000000000720e         db  0x41 ; 'A'
000000000000720f         db  0x0e ; '.'
0000000000007210         db  0x08 ; '.'
0000000000007211         db  0x00 ; '.'
0000000000007212         db  0x00 ; '.'
0000000000007213         db  0x00 ; '.'
0000000000007214         dd         0x00000074                                  ; Length of the record
0000000000007218         dd         0x000003c8                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000721c         db         0x34, 0xbb, 2 dup (0xff)                    ; begin 0x2d50
0000000000007220         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3f84)
0000000000007224         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007225         db  0x42 ; 'B'
0000000000007226         db  0x0e ; '.'
0000000000007227         db  0x10 ; '.'
0000000000007228         db  0x8f ; '.'
0000000000007229         db  0x02 ; '.'
000000000000722a         db  0x42 ; 'B'
000000000000722b         db  0x0e ; '.'
000000000000722c         db  0x18 ; '.'
000000000000722d         db  0x8e ; '.'
000000000000722e         db  0x03 ; '.'
000000000000722f         db  0x45 ; 'E'
0000000000007230         db  0x0e ; '.'
0000000000007231         db  0x20 ; ' '
0000000000007232         db  0x8d ; '.'
0000000000007233         db  0x04 ; '.'
0000000000007234         db  0x42 ; 'B'
0000000000007235         db  0x0e ; '.'
0000000000007236         db  0x28 ; '('
0000000000007237         db  0x8c ; '.'
0000000000007238         db  0x05 ; '.'
0000000000007239         db  0x44 ; 'D'
000000000000723a         db  0x0e ; '.'
000000000000723b         db  0x30 ; '0'
000000000000723c         db  0x86 ; '.'
000000000000723d         db  0x06 ; '.'
000000000000723e         db  0x41 ; 'A'
000000000000723f         db  0x0e ; '.'
0000000000007240         db  0x38 ; '8'
0000000000007241         db  0x83 ; '.'
0000000000007242         db  0x07 ; '.'
0000000000007243         db  0x53 ; 'S'
0000000000007244         db  0x0e ; '.'
0000000000007245         db  0xf0 ; '.'
0000000000007246         db  0x01 ; '.'
0000000000007247         db  0x03 ; '.'
0000000000007248         db  0x81 ; '.'
0000000000007249         db  0x0b ; '.'
000000000000724a         db  0x0e ; '.'
000000000000724b         db  0xf8 ; '.'
000000000000724c         db  0x01 ; '.'
000000000000724d         db  0x4a ; 'J'
000000000000724e         db  0x0e ; '.'
000000000000724f         db  0x80 ; '.'
0000000000007250         db  0x02 ; '.'
0000000000007251         db  0x44 ; 'D'
0000000000007252         db  0x0e ; '.'
0000000000007253         db  0x88 ; '.'
0000000000007254         db  0x02 ; '.'
0000000000007255         db  0x45 ; 'E'
0000000000007256         db  0x0e ; '.'
0000000000007257         db  0x90 ; '.'
0000000000007258         db  0x02 ; '.'
0000000000007259         db  0x5f ; '_'
000000000000725a         db  0x0e ; '.'
000000000000725b         db  0xf0 ; '.'
000000000000725c         db  0x01 ; '.'
000000000000725d         db  0x64 ; 'd'
000000000000725e         db  0x0a ; '.'
000000000000725f         db  0x0e ; '.'
0000000000007260         db  0x38 ; '8'
0000000000007261         db  0x41 ; 'A'
0000000000007262         db  0x0e ; '.'
0000000000007263         db  0x30 ; '0'
0000000000007264         db  0x41 ; 'A'
0000000000007265         db  0x0e ; '.'
0000000000007266         db  0x28 ; '('
0000000000007267         db  0x42 ; 'B'
0000000000007268         db  0x0e ; '.'
0000000000007269         db  0x20 ; ' '
000000000000726a         db  0x42 ; 'B'
000000000000726b         db  0x0e ; '.'
000000000000726c         db  0x18 ; '.'
000000000000726d         db  0x42 ; 'B'
000000000000726e         db  0x0e ; '.'
000000000000726f         db  0x10 ; '.'
0000000000007270         db  0x42 ; 'B'
0000000000007271         db  0x0e ; '.'
0000000000007272         db  0x08 ; '.'
0000000000007273         db  0x44 ; 'D'
0000000000007274         db  0x0b ; '.'
0000000000007275         db  0x03 ; '.'
0000000000007276         db  0x99 ; '.'
0000000000007277         db  0x05 ; '.'
0000000000007278         db  0x0e ; '.'
0000000000007279         db  0xf8 ; '.'
000000000000727a         db  0x01 ; '.'
000000000000727b         db  0x4d ; 'M'
000000000000727c         db  0x0e ; '.'
000000000000727d         db  0x80 ; '.'
000000000000727e         db  0x02 ; '.'
000000000000727f         db  0x44 ; 'D'
0000000000007280         db  0x0e ; '.'
0000000000007281         db  0x88 ; '.'
0000000000007282         db  0x02 ; '.'
0000000000007283         db  0x47 ; 'G'
0000000000007284         db  0x0e ; '.'
0000000000007285         db  0x90 ; '.'
0000000000007286         db  0x02 ; '.'
0000000000007287         db  0x5b ; '['
0000000000007288         db  0x0e ; '.'
0000000000007289         db  0xf0 ; '.'
000000000000728a         db  0x01 ; '.'
000000000000728b         db  0x00 ; '.'
000000000000728c         dd         0x00000068                                  ; Length of the record
0000000000007290         dd         0x00000440                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007294         db         0xfc, 0xcc, 2 dup (0xff)                    ; begin 0x3f90
0000000000007298         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x413b)
000000000000729c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000729d         db  0x42 ; 'B'
000000000000729e         db  0x0e ; '.'
000000000000729f         db  0x10 ; '.'
00000000000072a0         db  0x8f ; '.'
00000000000072a1         db  0x02 ; '.'
00000000000072a2         db  0x42 ; 'B'
00000000000072a3         db  0x0e ; '.'
00000000000072a4         db  0x18 ; '.'
00000000000072a5         db  0x8e ; '.'
00000000000072a6         db  0x03 ; '.'
00000000000072a7         db  0x45 ; 'E'
00000000000072a8         db  0x0e ; '.'
00000000000072a9         db  0x20 ; ' '
00000000000072aa         db  0x8d ; '.'
00000000000072ab         db  0x04 ; '.'
00000000000072ac         db  0x42 ; 'B'
00000000000072ad         db  0x0e ; '.'
00000000000072ae         db  0x28 ; '('
00000000000072af         db  0x8c ; '.'
00000000000072b0         db  0x05 ; '.'
00000000000072b1         db  0x44 ; 'D'
00000000000072b2         db  0x0e ; '.'
00000000000072b3         db  0x30 ; '0'
00000000000072b4         db  0x86 ; '.'
00000000000072b5         db  0x06 ; '.'
00000000000072b6         db  0x41 ; 'A'
00000000000072b7         db  0x0e ; '.'
00000000000072b8         db  0x38 ; '8'
00000000000072b9         db  0x83 ; '.'
00000000000072ba         db  0x07 ; '.'
00000000000072bb         db  0x47 ; 'G'
00000000000072bc         db  0x0e ; '.'
00000000000072bd         db  0x60 ; '`'
00000000000072be         db  0x02 ; '.'
00000000000072bf         db  0x99 ; '.'
00000000000072c0         db  0x0e ; '.'
00000000000072c1         db  0x68 ; 'h'
00000000000072c2         db  0x5f ; '_'
00000000000072c3         db  0x0e ; '.'
00000000000072c4         db  0x70 ; 'p'
00000000000072c5         db  0x46 ; 'F'
00000000000072c6         db  0x0e ; '.'
00000000000072c7         db  0x78 ; 'x'
00000000000072c8         db  0x42 ; 'B'
00000000000072c9         db  0x0e ; '.'
00000000000072ca         db  0x80 ; '.'
00000000000072cb         db  0x01 ; '.'
00000000000072cc         db  0x59 ; 'Y'
00000000000072cd         db  0x0e ; '.'
00000000000072ce         db  0x60 ; '`'
00000000000072cf         db  0x02 ; '.'
00000000000072d0         db  0x40 ; '@'
00000000000072d1         db  0x0e ; '.'
00000000000072d2         db  0x68 ; 'h'
00000000000072d3         db  0x4b ; 'K'
00000000000072d4         db  0x0e ; '.'
00000000000072d5         db  0x70 ; 'p'
00000000000072d6         db  0x43 ; 'C'
00000000000072d7         db  0x0e ; '.'
00000000000072d8         db  0x78 ; 'x'
00000000000072d9         db  0x45 ; 'E'
00000000000072da         db  0x0e ; '.'
00000000000072db         db  0x80 ; '.'
00000000000072dc         db  0x01 ; '.'
00000000000072dd         db  0x5e ; '^'
00000000000072de         db  0x0e ; '.'
00000000000072df         db  0x60 ; '`'
00000000000072e0         db  0x4c ; 'L'
00000000000072e1         db  0x0a ; '.'
00000000000072e2         db  0x0e ; '.'
00000000000072e3         db  0x38 ; '8'
00000000000072e4         db  0x44 ; 'D'
00000000000072e5         db  0x0e ; '.'
00000000000072e6         db  0x30 ; '0'
00000000000072e7         db  0x41 ; 'A'
00000000000072e8         db  0x0e ; '.'
00000000000072e9         db  0x28 ; '('
00000000000072ea         db  0x42 ; 'B'
00000000000072eb         db  0x0e ; '.'
00000000000072ec         db  0x20 ; ' '
00000000000072ed         db  0x42 ; 'B'
00000000000072ee         db  0x0e ; '.'
00000000000072ef         db  0x18 ; '.'
00000000000072f0         db  0x42 ; 'B'
00000000000072f1         db  0x0e ; '.'
00000000000072f2         db  0x10 ; '.'
00000000000072f3         db  0x42 ; 'B'
00000000000072f4         db  0x0e ; '.'
00000000000072f5         db  0x08 ; '.'
00000000000072f6         db  0x46 ; 'F'
00000000000072f7         db  0x0b ; '.'
00000000000072f8         dd         0x00000028                                  ; Length of the record
00000000000072fc         dd         0x000004ac                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007300         db         0x40, 0xce, 2 dup (0xff)                    ; begin 0x4140
0000000000007304         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4176)
0000000000007308         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007309         db  0x42 ; 'B'
000000000000730a         db  0x0e ; '.'
000000000000730b         db  0x10 ; '.'
000000000000730c         db  0x8c ; '.'
000000000000730d         db  0x02 ; '.'
000000000000730e         db  0x41 ; 'A'
000000000000730f         db  0x0e ; '.'
0000000000007310         db  0x18 ; '.'
0000000000007311         db  0x86 ; '.'
0000000000007312         db  0x03 ; '.'
0000000000007313         db  0x41 ; 'A'
0000000000007314         db  0x0e ; '.'
0000000000007315         db  0x20 ; ' '
0000000000007316         db  0x83 ; '.'
0000000000007317         db  0x04 ; '.'
0000000000007318         db  0x6e ; 'n'
0000000000007319         db  0x0e ; '.'
000000000000731a         db  0x18 ; '.'
000000000000731b         db  0x41 ; 'A'
000000000000731c         db  0x0e ; '.'
000000000000731d         db  0x10 ; '.'
000000000000731e         db  0x42 ; 'B'
000000000000731f         db  0x0e ; '.'
0000000000007320         db  0x08 ; '.'
0000000000007321         db  0x00 ; '.'
0000000000007322         db  0x00 ; '.'
0000000000007323         db  0x00 ; '.'
0000000000007324         dd         0x00000010                                  ; Length of the record
0000000000007328         dd         0x000004d8                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000732c         db         0x54, 0xce, 2 dup (0xff)                    ; begin 0x4180
0000000000007330         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4191)
0000000000007334         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007335         align      8
0000000000007338         dd         0x00000010                                  ; Length of the record
000000000000733c         dd         0x000004ec                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007340         db         0x60, 0xce, 2 dup (0xff)                    ; begin 0x41a0
0000000000007344         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x41b1)
0000000000007348         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007349         align      4
000000000000734c         dd         0x00000010                                  ; Length of the record
0000000000007350         dd         0x00000500                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007354         db         0x6c, 0xce, 2 dup (0xff)                    ; begin 0x41c0
0000000000007358         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x41f5)
000000000000735c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000735d         align      32
0000000000007360         dd         0x00000010                                  ; Length of the record
0000000000007364         dd         0x00000514                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007368         db         0x98, 0xce, 2 dup (0xff)                    ; begin 0x4200
000000000000736c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4215)
0000000000007370         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007371         align      4
0000000000007374         dd         0x00000010                                  ; Length of the record
0000000000007378         dd         0x00000528                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000737c         db         0xa4, 0xce, 2 dup (0xff)                    ; begin 0x4220
0000000000007380         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4250)
0000000000007384         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007385         db  0x6b ; 'k'
0000000000007386         db  0x0e ; '.'
0000000000007387         db  0x10 ; '.'
0000000000007388         dd         0x00000050                                  ; Length of the record
000000000000738c         dd         0x0000053c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007390         db         0xc0, 0xce, 2 dup (0xff)                    ; begin 0x4250
0000000000007394         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x42c4)
0000000000007398         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007399         db  0x42 ; 'B'
000000000000739a         db  0x0e ; '.'
000000000000739b         db  0x10 ; '.'
000000000000739c         db  0x8f ; '.'
000000000000739d         db  0x02 ; '.'
000000000000739e         db  0x42 ; 'B'
000000000000739f         db  0x0e ; '.'
00000000000073a0         db  0x18 ; '.'
00000000000073a1         db  0x8e ; '.'
00000000000073a2         db  0x03 ; '.'
00000000000073a3         db  0x49 ; 'I'
00000000000073a4         db  0x0e ; '.'
00000000000073a5         db  0x20 ; ' '
00000000000073a6         db  0x8d ; '.'
00000000000073a7         db  0x04 ; '.'
00000000000073a8         db  0x42 ; 'B'
00000000000073a9         db  0x0e ; '.'
00000000000073aa         db  0x28 ; '('
00000000000073ab         db  0x8c ; '.'
00000000000073ac         db  0x05 ; '.'
00000000000073ad         db  0x44 ; 'D'
00000000000073ae         db  0x0e ; '.'
00000000000073af         db  0x30 ; '0'
00000000000073b0         db  0x86 ; '.'
00000000000073b1         db  0x06 ; '.'
00000000000073b2         db  0x41 ; 'A'
00000000000073b3         db  0x0e ; '.'
00000000000073b4         db  0x38 ; '8'
00000000000073b5         db  0x83 ; '.'
00000000000073b6         db  0x07 ; '.'
00000000000073b7         db  0x4d ; 'M'
00000000000073b8         db  0x0e ; '.'
00000000000073b9         db  0x50 ; 'P'
00000000000073ba         db  0x5f ; '_'
00000000000073bb         db  0x0e ; '.'
00000000000073bc         db  0x58 ; 'X'
00000000000073bd         db  0x47 ; 'G'
00000000000073be         db  0x0e ; '.'
00000000000073bf         db  0x60 ; '`'
00000000000073c0         db  0x46 ; 'F'
00000000000073c1         db  0x0e ; '.'
00000000000073c2         db  0x68 ; 'h'
00000000000073c3         db  0x44 ; 'D'
00000000000073c4         db  0x0e ; '.'
00000000000073c5         db  0x70 ; 'p'
00000000000073c6         db  0x58 ; 'X'
00000000000073c7         db  0x0e ; '.'
00000000000073c8         db  0x38 ; '8'
00000000000073c9         db  0x41 ; 'A'
00000000000073ca         db  0x0e ; '.'
00000000000073cb         db  0x30 ; '0'
00000000000073cc         db  0x41 ; 'A'
00000000000073cd         db  0x0e ; '.'
00000000000073ce         db  0x28 ; '('
00000000000073cf         db  0x42 ; 'B'
00000000000073d0         db  0x0e ; '.'
00000000000073d1         db  0x20 ; ' '
00000000000073d2         db  0x42 ; 'B'
00000000000073d3         db  0x0e ; '.'
00000000000073d4         db  0x18 ; '.'
00000000000073d5         db  0x42 ; 'B'
00000000000073d6         db  0x0e ; '.'
00000000000073d7         db  0x10 ; '.'
00000000000073d8         db  0x42 ; 'B'
00000000000073d9         db  0x0e ; '.'
00000000000073da         db  0x08 ; '.'
00000000000073db         db  0x00 ; '.'
00000000000073dc         dd         0x00000068                                  ; Length of the record
00000000000073e0         dd         0x00000590                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000073e4         db         0xec, 0xce, 2 dup (0xff)                    ; begin 0x42d0
00000000000073e8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x43b3)
00000000000073ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073ed         db  0x42 ; 'B'
00000000000073ee         db  0x0e ; '.'
00000000000073ef         db  0x10 ; '.'
00000000000073f0         db  0x8f ; '.'
00000000000073f1         db  0x02 ; '.'
00000000000073f2         db  0x42 ; 'B'
00000000000073f3         db  0x0e ; '.'
00000000000073f4         db  0x18 ; '.'
00000000000073f5         db  0x8e ; '.'
00000000000073f6         db  0x03 ; '.'
00000000000073f7         db  0x49 ; 'I'
00000000000073f8         db  0x0e ; '.'
00000000000073f9         db  0x20 ; ' '
00000000000073fa         db  0x8d ; '.'
00000000000073fb         db  0x04 ; '.'
00000000000073fc         db  0x42 ; 'B'
00000000000073fd         db  0x0e ; '.'
00000000000073fe         db  0x28 ; '('
00000000000073ff         db  0x8c ; '.'
0000000000007400         db  0x05 ; '.'
0000000000007401         db  0x44 ; 'D'
0000000000007402         db  0x0e ; '.'
0000000000007403         db  0x30 ; '0'
0000000000007404         db  0x86 ; '.'
0000000000007405         db  0x06 ; '.'
0000000000007406         db  0x41 ; 'A'
0000000000007407         db  0x0e ; '.'
0000000000007408         db  0x38 ; '8'
0000000000007409         db  0x83 ; '.'
000000000000740a         db  0x07 ; '.'
000000000000740b         db  0x4d ; 'M'
000000000000740c         db  0x0e ; '.'
000000000000740d         db  0x70 ; 'p'
000000000000740e         db  0x65 ; 'e'
000000000000740f         db  0x0e ; '.'
0000000000007410         db  0x78 ; 'x'
0000000000007411         db  0x4d ; 'M'
0000000000007412         db  0x0e ; '.'
0000000000007413         db  0x80 ; '.'
0000000000007414         db  0x01 ; '.'
0000000000007415         db  0x46 ; 'F'
0000000000007416         db  0x0e ; '.'
0000000000007417         db  0x88 ; '.'
0000000000007418         db  0x01 ; '.'
0000000000007419         db  0x42 ; 'B'
000000000000741a         db  0x0e ; '.'
000000000000741b         db  0x90 ; '.'
000000000000741c         db  0x01 ; '.'
000000000000741d         db  0x5e ; '^'
000000000000741e         db  0x0e ; '.'
000000000000741f         db  0x70 ; 'p'
0000000000007420         db  0x56 ; 'V'
0000000000007421         db  0x0e ; '.'
0000000000007422         db  0x78 ; 'x'
0000000000007423         db  0x43 ; 'C'
0000000000007424         db  0x0e ; '.'
0000000000007425         db  0x80 ; '.'
0000000000007426         db  0x01 ; '.'
0000000000007427         db  0x43 ; 'C'
0000000000007428         db  0x0e ; '.'
0000000000007429         db  0x88 ; '.'
000000000000742a         db  0x01 ; '.'
000000000000742b         db  0x56 ; 'V'
000000000000742c         db  0x0e ; '.'
000000000000742d         db  0x90 ; '.'
000000000000742e         db  0x01 ; '.'
000000000000742f         db  0x52 ; 'R'
0000000000007430         db  0x0e ; '.'
0000000000007431         db  0x70 ; 'p'
0000000000007432         db  0x5b ; '['
0000000000007433         db  0x0e ; '.'
0000000000007434         db  0x38 ; '8'
0000000000007435         db  0x41 ; 'A'
0000000000007436         db  0x0e ; '.'
0000000000007437         db  0x30 ; '0'
0000000000007438         db  0x41 ; 'A'
0000000000007439         db  0x0e ; '.'
000000000000743a         db  0x28 ; '('
000000000000743b         db  0x42 ; 'B'
000000000000743c         db  0x0e ; '.'
000000000000743d         db  0x20 ; ' '
000000000000743e         db  0x42 ; 'B'
000000000000743f         db  0x0e ; '.'
0000000000007440         db  0x18 ; '.'
0000000000007441         db  0x42 ; 'B'
0000000000007442         db  0x0e ; '.'
0000000000007443         db  0x10 ; '.'
0000000000007444         db  0x42 ; 'B'
0000000000007445         db  0x0e ; '.'
0000000000007446         db  0x08 ; '.'
0000000000007447         db  0x00 ; '.'
0000000000007448         dd         0x00000010                                  ; Length of the record
000000000000744c         dd         0x000005fc                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007450         db         0x70, 0xcf, 2 dup (0xff)                    ; begin 0x43c0
0000000000007454         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x43ca)
0000000000007458         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007459         align      4
000000000000745c         dd         0x00000028                                  ; Length of the record
0000000000007460         dd         0x00000610                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007464         db         0x6c, 0xcf, 2 dup (0xff)                    ; begin 0x43d0
0000000000007468         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4463)
000000000000746c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000746d         db  0x48 ; 'H'
000000000000746e         db  0x0e ; '.'
000000000000746f         db  0x10 ; '.'
0000000000007470         db  0x8c ; '.'
0000000000007471         db  0x02 ; '.'
0000000000007472         db  0x48 ; 'H'
0000000000007473         db  0x0e ; '.'
0000000000007474         db  0x18 ; '.'
0000000000007475         db  0x86 ; '.'
0000000000007476         db  0x03 ; '.'
0000000000007477         db  0x41 ; 'A'
0000000000007478         db  0x0e ; '.'
0000000000007479         db  0x20 ; ' '
000000000000747a         db  0x83 ; '.'
000000000000747b         db  0x04 ; '.'
000000000000747c         db  0x02 ; '.'
000000000000747d         db  0x74 ; 't'
000000000000747e         db  0x0e ; '.'
000000000000747f         db  0x18 ; '.'
0000000000007480         db  0x4b ; 'K'
0000000000007481         db  0x0e ; '.'
0000000000007482         db  0x10 ; '.'
0000000000007483         db  0x42 ; 'B'
0000000000007484         db  0x0e ; '.'
0000000000007485         db  0x08 ; '.'
0000000000007486         db  0x00 ; '.'
0000000000007487         db  0x00 ; '.'
0000000000007488         dd         0x00000010                                  ; Length of the record
000000000000748c         dd         0x0000063c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007490         db         0xe0, 0xcf, 2 dup (0xff)                    ; begin 0x4470
0000000000007494         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4483)
0000000000007498         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007499         align      4
000000000000749c         dd         0x00000010                                  ; Length of the record
00000000000074a0         dd         0x00000650                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000074a4         db         0xec, 0xcf, 2 dup (0xff)                    ; begin 0x4490
00000000000074a8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x449c)
00000000000074ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074ad         align      16
00000000000074b0         dd         0x00000010                                  ; Length of the record
00000000000074b4         dd         0x00000664                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000074b8         db         0xe8, 0xcf, 2 dup (0xff)                    ; begin 0x44a0
00000000000074bc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x44b8)
00000000000074c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074c1         align      4
00000000000074c4         dd         0x00000010                                  ; Length of the record
00000000000074c8         dd         0x00000678                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000074cc         db         0xf4, 0xcf, 2 dup (0xff)                    ; begin 0x44c0
00000000000074d0         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x44d4)
00000000000074d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074d5         align      8
00000000000074d8         dd         0x00000018                                  ; Length of the record
00000000000074dc         dd         0x0000068c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000074e0         db         0x00, 0xd0, 2 dup (0xff)                    ; begin 0x44e0
00000000000074e4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x456e)
00000000000074e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074e9         db  0x44 ; 'D'
00000000000074ea         db  0x0e ; '.'
00000000000074eb         db  0x50 ; 'P'
00000000000074ec         db  0x02 ; '.'
00000000000074ed         db  0x7f ; '.'
00000000000074ee         db  0x0a ; '.'
00000000000074ef         db  0x0e ; '.'
00000000000074f0         db  0x08 ; '.'
00000000000074f1         db  0x41 ; 'A'
00000000000074f2         db  0x0b ; '.'
00000000000074f3         db  0x00 ; '.'
00000000000074f4         dd         0x00000018                                  ; Length of the record
00000000000074f8         dd         0x000006a8                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000074fc         db         0x74, 0xd0, 2 dup (0xff)                    ; begin 0x4570
0000000000007500         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x45fa)
0000000000007504         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007505         db  0x44 ; 'D'
0000000000007506         db  0x0e ; '.'
0000000000007507         db  0x50 ; 'P'
0000000000007508         db  0x02 ; '.'
0000000000007509         db  0x7b ; '{'
000000000000750a         db  0x0a ; '.'
000000000000750b         db  0x0e ; '.'
000000000000750c         db  0x08 ; '.'
000000000000750d         db  0x41 ; 'A'
000000000000750e         db  0x0b ; '.'
000000000000750f         db  0x00 ; '.'
0000000000007510         dd         0x00000010                                  ; Length of the record
0000000000007514         dd         0x000006c4                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007518         db         0xe8, 0xd0, 2 dup (0xff)                    ; begin 0x4600
000000000000751c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x460c)
0000000000007520         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007521         align      4
0000000000007524         dd         0x00000010                                  ; Length of the record
0000000000007528         dd         0x000006d8                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000752c         db         0xe4, 0xd0, 2 dup (0xff)                    ; begin 0x4610
0000000000007530         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x461f)
0000000000007534         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007535         align      8
0000000000007538         dd         0x00000018                                  ; Length of the record
000000000000753c         dd         0x000006ec                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007540         db         0xe0, 0xd0, 2 dup (0xff)                    ; begin 0x4620
0000000000007544         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x46b8)
0000000000007548         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007549         db  0x44 ; 'D'
000000000000754a         db  0x0e ; '.'
000000000000754b         db  0x50 ; 'P'
000000000000754c         db  0x02 ; '.'
000000000000754d         db  0x8e ; '.'
000000000000754e         db  0x0a ; '.'
000000000000754f         db  0x0e ; '.'
0000000000007550         db  0x08 ; '.'
0000000000007551         db  0x41 ; 'A'
0000000000007552         db  0x0b ; '.'
0000000000007553         db  0x00 ; '.'
0000000000007554         dd         0x00000010                                  ; Length of the record
0000000000007558         dd         0x00000708                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000755c         db         0x64, 0xd1, 2 dup (0xff)                    ; begin 0x46c0
0000000000007560         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x46d0)
0000000000007564         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007565         align      8
0000000000007568         dd         0x00000010                                  ; Length of the record
000000000000756c         dd         0x0000071c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007570         db         0x60, 0xd1, 2 dup (0xff)                    ; begin 0x46d0
0000000000007574         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x46e1)
0000000000007578         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007579         align      4
000000000000757c         dd         0x00000010                                  ; Length of the record
0000000000007580         dd         0x00000730                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007584         db         0x6c, 0xd1, 2 dup (0xff)                    ; begin 0x46f0
0000000000007588         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x46fa)
000000000000758c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000758d         align      16
0000000000007590         dd         0x00000018                                  ; Length of the record
0000000000007594         dd         0x00000744                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007598         db         0x68, 0xd1, 2 dup (0xff)                    ; begin 0x4700
000000000000759c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x478e)
00000000000075a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075a1         db  0x44 ; 'D'
00000000000075a2         db  0x0e ; '.'
00000000000075a3         db  0x50 ; 'P'
00000000000075a4         db  0x02 ; '.'
00000000000075a5         db  0x7f ; '.'
00000000000075a6         db  0x0a ; '.'
00000000000075a7         db  0x0e ; '.'
00000000000075a8         db  0x08 ; '.'
00000000000075a9         db  0x41 ; 'A'
00000000000075aa         db  0x0b ; '.'
00000000000075ab         db  0x00 ; '.'
00000000000075ac         dd         0x00000018                                  ; Length of the record
00000000000075b0         dd         0x00000760                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000075b4         db         0xdc, 0xd1, 2 dup (0xff)                    ; begin 0x4790
00000000000075b8         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4821)
00000000000075bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075bd         db  0x44 ; 'D'
00000000000075be         db  0x0e ; '.'
00000000000075bf         db  0x50 ; 'P'
00000000000075c0         db  0x02 ; '.'
00000000000075c1         db  0x82 ; '.'
00000000000075c2         db  0x0a ; '.'
00000000000075c3         db  0x0e ; '.'
00000000000075c4         db  0x08 ; '.'
00000000000075c5         db  0x41 ; 'A'
00000000000075c6         db  0x0b ; '.'
00000000000075c7         db  0x00 ; '.'
00000000000075c8         dd         0x00000010                                  ; Length of the record
00000000000075cc         dd         0x0000077c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000075d0         db         0x60, 0xd2, 2 dup (0xff)                    ; begin 0x4830
00000000000075d4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x483c)
00000000000075d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075d9         align      4
00000000000075dc         dd         0x00000010                                  ; Length of the record
00000000000075e0         dd         0x00000790                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000075e4         db         0x5c, 0xd2, 2 dup (0xff)                    ; begin 0x4840
00000000000075e8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4857)
00000000000075ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075ed         align      16
00000000000075f0         dd         0x00000010                                  ; Length of the record
00000000000075f4         dd         0x000007a4                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000075f8         db         0x68, 0xd2, 2 dup (0xff)                    ; begin 0x4860
00000000000075fc         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4873)
0000000000007600         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007601         align      4
0000000000007604         dd         0x00000010                                  ; Length of the record
0000000000007608         dd         0x000007b8                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000760c         db         0x74, 0xd2, 2 dup (0xff)                    ; begin 0x4880
0000000000007610         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x488c)
0000000000007614         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007615         align      8
0000000000007618         dd         0x00000010                                  ; Length of the record
000000000000761c         dd         0x000007cc                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007620         db         0x70, 0xd2, 2 dup (0xff)                    ; begin 0x4890
0000000000007624         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x48a4)
0000000000007628         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007629         align      4
000000000000762c         dd         0x00000010                                  ; Length of the record
0000000000007630         dd         0x000007e0                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007634         db         0x7c, 0xd2, 2 dup (0xff)                    ; begin 0x48b0
0000000000007638         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x48c3)
000000000000763c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000763d         align      64
0000000000007640         dd         0x00000014                                  ; Length of the record
0000000000007644         dd         0x000007f4                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007648         db         0x88, 0xd2, 2 dup (0xff)                    ; begin 0x48d0
000000000000764c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x48e8)
0000000000007650         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007651         align      8
0000000000007658         dd         0x00000014                                  ; Length of the record
000000000000765c         dd         0x0000080c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007660         db         0x90, 0xd2, 2 dup (0xff)                    ; begin 0x48f0
0000000000007664         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x48fe)
0000000000007668         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007669         align      16
0000000000007670         dd         0x00000110                                  ; Length of the record
0000000000007674         dd         0x00000824                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007678         db         0x88, 0xd2, 2 dup (0xff)                    ; begin 0x4900
000000000000767c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4d17)
0000000000007680         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007681         db  0x42 ; 'B'
0000000000007682         db  0x0e ; '.'
0000000000007683         db  0x10 ; '.'
0000000000007684         db  0x8f ; '.'
0000000000007685         db  0x02 ; '.'
0000000000007686         db  0x42 ; 'B'
0000000000007687         db  0x0e ; '.'
0000000000007688         db  0x18 ; '.'
0000000000007689         db  0x8e ; '.'
000000000000768a         db  0x03 ; '.'
000000000000768b         db  0x42 ; 'B'
000000000000768c         db  0x0e ; '.'
000000000000768d         db  0x20 ; ' '
000000000000768e         db  0x8d ; '.'
000000000000768f         db  0x04 ; '.'
0000000000007690         db  0x42 ; 'B'
0000000000007691         db  0x0e ; '.'
0000000000007692         db  0x28 ; '('
0000000000007693         db  0x8c ; '.'
0000000000007694         db  0x05 ; '.'
0000000000007695         db  0x44 ; 'D'
0000000000007696         db  0x0e ; '.'
0000000000007697         db  0x30 ; '0'
0000000000007698         db  0x86 ; '.'
0000000000007699         db  0x06 ; '.'
000000000000769a         db  0x41 ; 'A'
000000000000769b         db  0x0e ; '.'
000000000000769c         db  0x38 ; '8'
000000000000769d         db  0x83 ; '.'
000000000000769e         db  0x07 ; '.'
000000000000769f         db  0x4a ; 'J'
00000000000076a0         db  0x0e ; '.'
00000000000076a1         db  0x60 ; '`'
00000000000076a2         db  0x02 ; '.'
00000000000076a3         db  0xdd ; '.'
00000000000076a4         db  0x0e ; '.'
00000000000076a5         db  0x68 ; 'h'
00000000000076a6         db  0x57 ; 'W'
00000000000076a7         db  0x0e ; '.'
00000000000076a8         db  0x70 ; 'p'
00000000000076a9         db  0x42 ; 'B'
00000000000076aa         db  0x0e ; '.'
00000000000076ab         db  0x78 ; 'x'
00000000000076ac         db  0x42 ; 'B'
00000000000076ad         db  0x0e ; '.'
00000000000076ae         db  0x80 ; '.'
00000000000076af         db  0x01 ; '.'
00000000000076b0         db  0x42 ; 'B'
00000000000076b1         db  0x0e ; '.'
00000000000076b2         db  0x88 ; '.'
00000000000076b3         db  0x01 ; '.'
00000000000076b4         db  0x42 ; 'B'
00000000000076b5         db  0x0e ; '.'
00000000000076b6         db  0x90 ; '.'
00000000000076b7         db  0x01 ; '.'
00000000000076b8         db  0x53 ; 'S'
00000000000076b9         db  0x0e ; '.'
00000000000076ba         db  0x60 ; '`'
00000000000076bb         db  0x44 ; 'D'
00000000000076bc         db  0x0a ; '.'
00000000000076bd         db  0x0e ; '.'
00000000000076be         db  0x38 ; '8'
00000000000076bf         db  0x41 ; 'A'
00000000000076c0         db  0x0e ; '.'
00000000000076c1         db  0x30 ; '0'
00000000000076c2         db  0x41 ; 'A'
00000000000076c3         db  0x0e ; '.'
00000000000076c4         db  0x28 ; '('
00000000000076c5         db  0x42 ; 'B'
00000000000076c6         db  0x0e ; '.'
00000000000076c7         db  0x20 ; ' '
00000000000076c8         db  0x42 ; 'B'
00000000000076c9         db  0x0e ; '.'
00000000000076ca         db  0x18 ; '.'
00000000000076cb         db  0x42 ; 'B'
00000000000076cc         db  0x0e ; '.'
00000000000076cd         db  0x10 ; '.'
00000000000076ce         db  0x42 ; 'B'
00000000000076cf         db  0x0e ; '.'
00000000000076d0         db  0x08 ; '.'
00000000000076d1         db  0x44 ; 'D'
00000000000076d2         db  0x0b ; '.'
00000000000076d3         db  0x02 ; '.'
00000000000076d4         db  0x78 ; 'x'
00000000000076d5         db  0x0a ; '.'
00000000000076d6         db  0x0e ; '.'
00000000000076d7         db  0x68 ; 'h'
00000000000076d8         db  0x48 ; 'H'
00000000000076d9         db  0x0b ; '.'
00000000000076da         db  0x5a ; 'Z'
00000000000076db         db  0x0a ; '.'
00000000000076dc         db  0x0e ; '.'
00000000000076dd         db  0x38 ; '8'
00000000000076de         db  0x47 ; 'G'
00000000000076df         db  0x0e ; '.'
00000000000076e0         db  0x30 ; '0'
00000000000076e1         db  0x41 ; 'A'
00000000000076e2         db  0x0e ; '.'
00000000000076e3         db  0x28 ; '('
00000000000076e4         db  0x42 ; 'B'
00000000000076e5         db  0x0e ; '.'
00000000000076e6         db  0x20 ; ' '
00000000000076e7         db  0x42 ; 'B'
00000000000076e8         db  0x0e ; '.'
00000000000076e9         db  0x18 ; '.'
00000000000076ea         db  0x42 ; 'B'
00000000000076eb         db  0x0e ; '.'
00000000000076ec         db  0x10 ; '.'
00000000000076ed         db  0x42 ; 'B'
00000000000076ee         db  0x0e ; '.'
00000000000076ef         db  0x08 ; '.'
00000000000076f0         db  0x56 ; 'V'
00000000000076f1         db  0x0b ; '.'
00000000000076f2         db  0x5e ; '^'
00000000000076f3         db  0x0a ; '.'
00000000000076f4         db  0x0e ; '.'
00000000000076f5         db  0x38 ; '8'
00000000000076f6         db  0x52 ; 'R'
00000000000076f7         db  0x0e ; '.'
00000000000076f8         db  0x30 ; '0'
00000000000076f9         db  0x41 ; 'A'
00000000000076fa         db  0x0e ; '.'
00000000000076fb         db  0x28 ; '('
00000000000076fc         db  0x42 ; 'B'
00000000000076fd         db  0x0e ; '.'
00000000000076fe         db  0x20 ; ' '
00000000000076ff         db  0x42 ; 'B'
0000000000007700         db  0x0e ; '.'
0000000000007701         db  0x18 ; '.'
0000000000007702         db  0x42 ; 'B'
0000000000007703         db  0x0e ; '.'
0000000000007704         db  0x10 ; '.'
0000000000007705         db  0x42 ; 'B'
0000000000007706         db  0x0e ; '.'
0000000000007707         db  0x08 ; '.'
0000000000007708         db  0x4f ; 'O'
0000000000007709         db  0x0b ; '.'
000000000000770a         db  0x62 ; 'b'
000000000000770b         db  0x0a ; '.'
000000000000770c         db  0x0e ; '.'
000000000000770d         db  0x38 ; '8'
000000000000770e         db  0x50 ; 'P'
000000000000770f         db  0x0e ; '.'
0000000000007710         db  0x30 ; '0'
0000000000007711         db  0x41 ; 'A'
0000000000007712         db  0x0e ; '.'
0000000000007713         db  0x28 ; '('
0000000000007714         db  0x42 ; 'B'
0000000000007715         db  0x0e ; '.'
0000000000007716         db  0x20 ; ' '
0000000000007717         db  0x42 ; 'B'
0000000000007718         db  0x0e ; '.'
0000000000007719         db  0x18 ; '.'
000000000000771a         db  0x42 ; 'B'
000000000000771b         db  0x0e ; '.'
000000000000771c         db  0x10 ; '.'
000000000000771d         db  0x42 ; 'B'
000000000000771e         db  0x0e ; '.'
000000000000771f         db  0x08 ; '.'
0000000000007720         db  0x55 ; 'U'
0000000000007721         db  0x0b ; '.'
0000000000007722         db  0x66 ; 'f'
0000000000007723         db  0x0e ; '.'
0000000000007724         db  0x68 ; 'h'
0000000000007725         db  0x42 ; 'B'
0000000000007726         db  0x0e ; '.'
0000000000007727         db  0x70 ; 'p'
0000000000007728         db  0x5c ; '\'
0000000000007729         db  0x0e ; '.'
000000000000772a         db  0x68 ; 'h'
000000000000772b         db  0x41 ; 'A'
000000000000772c         db  0x0e ; '.'
000000000000772d         db  0x60 ; '`'
000000000000772e         db  0x44 ; 'D'
000000000000772f         db  0x0a ; '.'
0000000000007730         db  0x0e ; '.'
0000000000007731         db  0x38 ; '8'
0000000000007732         db  0x41 ; 'A'
0000000000007733         db  0x0e ; '.'
0000000000007734         db  0x30 ; '0'
0000000000007735         db  0x41 ; 'A'
0000000000007736         db  0x0e ; '.'
0000000000007737         db  0x28 ; '('
0000000000007738         db  0x42 ; 'B'
0000000000007739         db  0x0e ; '.'
000000000000773a         db  0x20 ; ' '
000000000000773b         db  0x42 ; 'B'
000000000000773c         db  0x0e ; '.'
000000000000773d         db  0x18 ; '.'
000000000000773e         db  0x42 ; 'B'
000000000000773f         db  0x0e ; '.'
0000000000007740         db  0x10 ; '.'
0000000000007741         db  0x42 ; 'B'
0000000000007742         db  0x0e ; '.'
0000000000007743         db  0x08 ; '.'
0000000000007744         db  0x45 ; 'E'
0000000000007745         db  0x0b ; '.'
0000000000007746         db  0x68 ; 'h'
0000000000007747         db  0x0a ; '.'
0000000000007748         db  0x0e ; '.'
0000000000007749         db  0x68 ; 'h'
000000000000774a         db  0x48 ; 'H'
000000000000774b         db  0x0b ; '.'
000000000000774c         db  0x72 ; 'r'
000000000000774d         db  0x0e ; '.'
000000000000774e         db  0x68 ; 'h'
000000000000774f         db  0x45 ; 'E'
0000000000007750         db  0x0e ; '.'
0000000000007751         db  0x70 ; 'p'
0000000000007752         db  0x42 ; 'B'
0000000000007753         db  0x0e ; '.'
0000000000007754         db  0x78 ; 'x'
0000000000007755         db  0x42 ; 'B'
0000000000007756         db  0x0e ; '.'
0000000000007757         db  0x80 ; '.'
0000000000007758         db  0x01 ; '.'
0000000000007759         db  0x5e ; '^'
000000000000775a         db  0x0e ; '.'
000000000000775b         db  0x60 ; '`'
000000000000775c         db  0x44 ; 'D'
000000000000775d         db  0x0a ; '.'
000000000000775e         db  0x0e ; '.'
000000000000775f         db  0x38 ; '8'
0000000000007760         db  0x41 ; 'A'
0000000000007761         db  0x0e ; '.'
0000000000007762         db  0x30 ; '0'
0000000000007763         db  0x41 ; 'A'
0000000000007764         db  0x0e ; '.'
0000000000007765         db  0x28 ; '('
0000000000007766         db  0x42 ; 'B'
0000000000007767         db  0x0e ; '.'
0000000000007768         db  0x20 ; ' '
0000000000007769         db  0x42 ; 'B'
000000000000776a         db  0x0e ; '.'
000000000000776b         db  0x18 ; '.'
000000000000776c         db  0x42 ; 'B'
000000000000776d         db  0x0e ; '.'
000000000000776e         db  0x10 ; '.'
000000000000776f         db  0x42 ; 'B'
0000000000007770         db  0x0e ; '.'
0000000000007771         db  0x08 ; '.'
0000000000007772         db  0x41 ; 'A'
0000000000007773         db  0x0b ; '.'
0000000000007774         db  0x79 ; 'y'
0000000000007775         db  0x0a ; '.'
0000000000007776         db  0x0e ; '.'
0000000000007777         db  0x68 ; 'h'
0000000000007778         db  0x42 ; 'B'
0000000000007779         db  0x0e ; '.'
000000000000777a         db  0x70 ; 'p'
000000000000777b         db  0x42 ; 'B'
000000000000777c         db  0x0e ; '.'
000000000000777d         db  0x78 ; 'x'
000000000000777e         db  0x42 ; 'B'
000000000000777f         db  0x0e ; '.'
0000000000007780         db  0x80 ; '.'
0000000000007781         db  0x01 ; '.'
0000000000007782         db  0x51 ; 'Q'
0000000000007783         db  0x0b ; '.'
0000000000007784         dd         0x00000010                                  ; Length of the record
0000000000007788         dd         0x00000938                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000778c         db         0x94, 0xd5, 2 dup (0xff)                    ; begin 0x4d20
0000000000007790         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4d40)
0000000000007794         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007795         align      8
0000000000007798         dd         0x00000018                                  ; Length of the record
000000000000779c         dd         0x0000094c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000077a0         db         0xa0, 0xd5, 2 dup (0xff)                    ; begin 0x4d40
00000000000077a4         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4db8)
00000000000077a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077a9         db  0x44 ; 'D'
00000000000077aa         db  0x0e ; '.'
00000000000077ab         db  0x70 ; 'p'
00000000000077ac         db  0x02 ; '.'
00000000000077ad         db  0x60 ; '`'
00000000000077ae         db  0x0a ; '.'
00000000000077af         db  0x0e ; '.'
00000000000077b0         db  0x08 ; '.'
00000000000077b1         db  0x41 ; 'A'
00000000000077b2         db  0x0b ; '.'
00000000000077b3         db  0x00 ; '.'
00000000000077b4         dd         0x00000028                                  ; Length of the record
00000000000077b8         dd         0x00000968                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000077bc         db         0x04, 0xd6, 2 dup (0xff)                    ; begin 0x4dc0
00000000000077c0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4e95)
00000000000077c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077c5         db  0x41 ; 'A'
00000000000077c6         db  0x0e ; '.'
00000000000077c7         db  0x10 ; '.'
00000000000077c8         db  0x86 ; '.'
00000000000077c9         db  0x02 ; '.'
00000000000077ca         db  0x41 ; 'A'
00000000000077cb         db  0x0e ; '.'
00000000000077cc         db  0x18 ; '.'
00000000000077cd         db  0x83 ; '.'
00000000000077ce         db  0x03 ; '.'
00000000000077cf         db  0x50 ; 'P'
00000000000077d0         db  0x0e ; '.'
00000000000077d1         db  0xd0 ; '.'
00000000000077d2         db  0x01 ; '.'
00000000000077d3         db  0x02 ; '.'
00000000000077d4         db  0xab ; '.'
00000000000077d5         db  0x0a ; '.'
00000000000077d6         db  0x0e ; '.'
00000000000077d7         db  0x18 ; '.'
00000000000077d8         db  0x41 ; 'A'
00000000000077d9         db  0x0e ; '.'
00000000000077da         db  0x10 ; '.'
00000000000077db         db  0x41 ; 'A'
00000000000077dc         db  0x0e ; '.'
00000000000077dd         db  0x08 ; '.'
00000000000077de         db  0x41 ; 'A'
00000000000077df         db  0x0b ; '.'
00000000000077e0         dd         0x0000001c                                  ; Length of the record
00000000000077e4         dd         0x00000994                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000077e8         db         0xb8, 0xd6, 2 dup (0xff)                    ; begin 0x4ea0
00000000000077ec         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4f20)
00000000000077f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077f1         db  0x41 ; 'A'
00000000000077f2         db  0x0e ; '.'
00000000000077f3         db  0x10 ; '.'
00000000000077f4         db  0x83 ; '.'
00000000000077f5         db  0x02 ; '.'
00000000000077f6         db  0x02 ; '.'
00000000000077f7         db  0x7a ; 'z'
00000000000077f8         db  0x0e ; '.'
00000000000077f9         db  0x08 ; '.'
00000000000077fa         db  0x00 ; '.'
00000000000077fb         db  0x00 ; '.'
00000000000077fc         db  0x00 ; '.'
00000000000077fd         db  0x00 ; '.'
00000000000077fe         db  0x00 ; '.'
00000000000077ff         db  0x00 ; '.'
0000000000007800         dd         0x00000018                                  ; Length of the record
0000000000007804         dd         0x000009b4                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007808         db         0x18, 0xd7, 2 dup (0xff)                    ; begin 0x4f20
000000000000780c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x4f3a)
0000000000007810         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007811         db  0x41 ; 'A'
0000000000007812         db  0x0e ; '.'
0000000000007813         db  0x10 ; '.'
0000000000007814         db  0x83 ; '.'
0000000000007815         db  0x02 ; '.'
0000000000007816         db  0x53 ; 'S'
0000000000007817         db  0x0a ; '.'
0000000000007818         db  0x0e ; '.'
0000000000007819         db  0x08 ; '.'
000000000000781a         db  0x41 ; 'A'
000000000000781b         db  0x0b ; '.'
000000000000781c         dd         0x00000010                                  ; Length of the record
0000000000007820         dd         0x000009d0                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007824         db         0x1c, 0xd7, 2 dup (0xff)                    ; begin 0x4f40
0000000000007828         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4f64)
000000000000782c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000782d         db  0x5f ; '_'
000000000000782e         db  0x0e ; '.'
000000000000782f         db  0x10 ; '.'
0000000000007830         dd         0x00000010                                  ; Length of the record
0000000000007834         dd         0x000009e4                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007838         db         0x38, 0xd7, 2 dup (0xff)                    ; begin 0x4f70
000000000000783c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x4f72)
0000000000007840         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007841         align      4
0000000000007844         dd         0x00000020                                  ; Length of the record
0000000000007848         dd         0x000009f8                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000784c         db         0x34, 0xd7, 2 dup (0xff)                    ; begin 0x4f80
0000000000007850         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4fb6)
0000000000007854         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007855         db  0x44 ; 'D'
0000000000007856         db  0x0e ; '.'
0000000000007857         db  0x10 ; '.'
0000000000007858         db  0x83 ; '.'
0000000000007859         db  0x02 ; '.'
000000000000785a         db  0x5d ; ']'
000000000000785b         db  0x0a ; '.'
000000000000785c         db  0x0e ; '.'
000000000000785d         db  0x08 ; '.'
000000000000785e         db  0x47 ; 'G'
000000000000785f         db  0x0b ; '.'
0000000000007860         db  0x48 ; 'H'
0000000000007861         db  0x0a ; '.'
0000000000007862         db  0x0e ; '.'
0000000000007863         db  0x08 ; '.'
0000000000007864         db  0x41 ; 'A'
0000000000007865         db  0x0b ; '.'
0000000000007866         db  0x00 ; '.'
0000000000007867         db  0x00 ; '.'
0000000000007868         dd         0x00000010                                  ; Length of the record
000000000000786c         dd         0x00000a1c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007870         db         0x50, 0xd7, 2 dup (0xff)                    ; begin 0x4fc0
0000000000007874         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4fe4)
0000000000007878         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007879         db  0x5f ; '_'
000000000000787a         db  0x0e ; '.'
000000000000787b         db  0x10 ; '.'
000000000000787c         dd         0x00000014                                  ; Length of the record
0000000000007880         dd         0x00000a30                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007884         db         0x6c, 0xd7, 2 dup (0xff)                    ; begin 0x4ff0
0000000000007888         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5072)
000000000000788c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000788d         db  0x02 ; '.'
000000000000788e         db  0x5f ; '_'
000000000000788f         db  0x0e ; '.'
0000000000007890         db  0x10 ; '.'
0000000000007891         db  0x49 ; 'I'
0000000000007892         db  0x0e ; '.'
0000000000007893         db  0x08 ; '.'
0000000000007894         dd         0x00000014                                  ; Length of the record
0000000000007898         dd         0x00000a48                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
000000000000789c         db         0xe4, 0xd7, 2 dup (0xff)                    ; begin 0x5080
00000000000078a0         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x50ca)
00000000000078a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078a5         db  0x02 ; '.'
00000000000078a6         db  0x45 ; 'E'
00000000000078a7         db  0x0e ; '.'
00000000000078a8         db  0x10 ; '.'
00000000000078a9         db  0x00 ; '.'
00000000000078aa         db  0x00 ; '.'
00000000000078ab         db  0x00 ; '.'
00000000000078ac         dd         0x00000018                                  ; Length of the record
00000000000078b0         dd         0x00000a60                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000078b4         db         0x1c, 0xd8, 2 dup (0xff)                    ; begin 0x50d0
00000000000078b8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x50e7)
00000000000078bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078bd         db  0x41 ; 'A'
00000000000078be         db  0x0e ; '.'
00000000000078bf         db  0x10 ; '.'
00000000000078c0         db  0x83 ; '.'
00000000000078c1         db  0x02 ; '.'
00000000000078c2         db  0x51 ; 'Q'
00000000000078c3         db  0x0e ; '.'
00000000000078c4         db  0x08 ; '.'
00000000000078c5         db  0x00 ; '.'
00000000000078c6         db  0x00 ; '.'
00000000000078c7         db  0x00 ; '.'
00000000000078c8         dd         0x00000018                                  ; Length of the record
00000000000078cc         dd         0x00000a7c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000078d0         db         0x20, 0xd8, 2 dup (0xff)                    ; begin 0x50f0
00000000000078d4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x511e)
00000000000078d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078d9         db  0x47 ; 'G'
00000000000078da         db  0x0e ; '.'
00000000000078db         db  0x10 ; '.'
00000000000078dc         db  0x61 ; 'a'
00000000000078dd         db  0x0a ; '.'
00000000000078de         db  0x0e ; '.'
00000000000078df         db  0x08 ; '.'
00000000000078e0         db  0x41 ; 'A'
00000000000078e1         db  0x0b ; '.'
00000000000078e2         db  0x00 ; '.'
00000000000078e3         db  0x00 ; '.'
00000000000078e4         dd         0x00000024                                  ; Length of the record
00000000000078e8         dd         0x00000a98                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000078ec         db         0x34, 0xd8, 2 dup (0xff)                    ; begin 0x5120
00000000000078f0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5148)
00000000000078f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078f5         db  0x41 ; 'A'
00000000000078f6         db  0x0e ; '.'
00000000000078f7         db  0x10 ; '.'
00000000000078f8         db  0x86 ; '.'
00000000000078f9         db  0x02 ; '.'
00000000000078fa         db  0x41 ; 'A'
00000000000078fb         db  0x0e ; '.'
00000000000078fc         db  0x18 ; '.'
00000000000078fd         db  0x83 ; '.'
00000000000078fe         db  0x03 ; '.'
00000000000078ff         db  0x4d ; 'M'
0000000000007900         db  0x0e ; '.'
0000000000007901         db  0x20 ; ' '
0000000000007902         db  0x49 ; 'I'
0000000000007903         db  0x0e ; '.'
0000000000007904         db  0x18 ; '.'
0000000000007905         db  0x47 ; 'G'
0000000000007906         db  0x0e ; '.'
0000000000007907         db  0x10 ; '.'
0000000000007908         db  0x41 ; 'A'
0000000000007909         db  0x0e ; '.'
000000000000790a         db  0x08 ; '.'
000000000000790b         db  0x00 ; '.'
000000000000790c         dd         0x00000018                                  ; Length of the record
0000000000007910         dd         0x00000ac0                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007914         db         0x3c, 0xd8, 2 dup (0xff)                    ; begin 0x5150
0000000000007918         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5163)
000000000000791c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000791d         db  0x41 ; 'A'
000000000000791e         db  0x0e ; '.'
000000000000791f         db  0x10 ; '.'
0000000000007920         db  0x83 ; '.'
0000000000007921         db  0x02 ; '.'
0000000000007922         db  0x50 ; 'P'
0000000000007923         db  0x0e ; '.'
0000000000007924         db  0x08 ; '.'
0000000000007925         db  0x00 ; '.'
0000000000007926         db  0x00 ; '.'
0000000000007927         db  0x00 ; '.'
0000000000007928         dd         0x00000014                                  ; Length of the record
000000000000792c         dd         0x00000adc                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007930         db         0x40, 0xd8, 2 dup (0xff)                    ; begin 0x5170
0000000000007934         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x51a5)
0000000000007938         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007939         db  0x4b ; 'K'
000000000000793a         db  0x0e ; '.'
000000000000793b         db  0x10 ; '.'
000000000000793c         db  0x00 ; '.'
000000000000793d         db  0x00 ; '.'
000000000000793e         db  0x00 ; '.'
000000000000793f         db  0x00 ; '.'
0000000000007940         dd         0x00000038                                  ; Length of the record
0000000000007944         dd         0x00000af4                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007948         db         0x68, 0xd8, 2 dup (0xff)                    ; begin 0x51b0
000000000000794c         db         0xba, 3 dup (0x00)                          ; length 0xba (end at 0x526a)
0000000000007950         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007951         db  0x42 ; 'B'
0000000000007952         db  0x0e ; '.'
0000000000007953         db  0x10 ; '.'
0000000000007954         db  0x8e ; '.'
0000000000007955         db  0x02 ; '.'
0000000000007956         db  0x42 ; 'B'
0000000000007957         db  0x0e ; '.'
0000000000007958         db  0x18 ; '.'
0000000000007959         db  0x8d ; '.'
000000000000795a         db  0x03 ; '.'
000000000000795b         db  0x45 ; 'E'
000000000000795c         db  0x0e ; '.'
000000000000795d         db  0x20 ; ' '
000000000000795e         db  0x8c ; '.'
000000000000795f         db  0x04 ; '.'
0000000000007960         db  0x41 ; 'A'
0000000000007961         db  0x0e ; '.'
0000000000007962         db  0x28 ; '('
0000000000007963         db  0x86 ; '.'
0000000000007964         db  0x05 ; '.'
0000000000007965         db  0x44 ; 'D'
0000000000007966         db  0x0e ; '.'
0000000000007967         db  0x30 ; '0'
0000000000007968         db  0x83 ; '.'
0000000000007969         db  0x06 ; '.'
000000000000796a         db  0x02 ; '.'
000000000000796b         db  0x99 ; '.'
000000000000796c         db  0x0e ; '.'
000000000000796d         db  0x28 ; '('
000000000000796e         db  0x41 ; 'A'
000000000000796f         db  0x0e ; '.'
0000000000007970         db  0x20 ; ' '
0000000000007971         db  0x42 ; 'B'
0000000000007972         db  0x0e ; '.'
0000000000007973         db  0x18 ; '.'
0000000000007974         db  0x42 ; 'B'
0000000000007975         db  0x0e ; '.'
0000000000007976         db  0x10 ; '.'
0000000000007977         db  0x42 ; 'B'
0000000000007978         db  0x0e ; '.'
0000000000007979         db  0x08 ; '.'
000000000000797a         db  0x00 ; '.'
000000000000797b         db  0x00 ; '.'
000000000000797c         dd         0x00000038                                  ; Length of the record
0000000000007980         dd         0x00000b30                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007984         db         0xec, 0xd8, 2 dup (0xff)                    ; begin 0x5270
0000000000007988         db         0x44, 3 dup (0x00)                          ; length 0x44 (end at 0x52b4)
000000000000798c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000798d         db  0x42 ; 'B'
000000000000798e         db  0x0e ; '.'
000000000000798f         db  0x10 ; '.'
0000000000007990         db  0x8e ; '.'
0000000000007991         db  0x02 ; '.'
0000000000007992         db  0x42 ; 'B'
0000000000007993         db  0x0e ; '.'
0000000000007994         db  0x18 ; '.'
0000000000007995         db  0x8d ; '.'
0000000000007996         db  0x03 ; '.'
0000000000007997         db  0x45 ; 'E'
0000000000007998         db  0x0e ; '.'
0000000000007999         db  0x20 ; ' '
000000000000799a         db  0x8c ; '.'
000000000000799b         db  0x04 ; '.'
000000000000799c         db  0x41 ; 'A'
000000000000799d         db  0x0e ; '.'
000000000000799e         db  0x28 ; '('
000000000000799f         db  0x86 ; '.'
00000000000079a0         db  0x05 ; '.'
00000000000079a1         db  0x44 ; 'D'
00000000000079a2         db  0x0e ; '.'
00000000000079a3         db  0x30 ; '0'
00000000000079a4         db  0x83 ; '.'
00000000000079a5         db  0x06 ; '.'
00000000000079a6         db  0x6b ; 'k'
00000000000079a7         db  0x0e ; '.'
00000000000079a8         db  0x28 ; '('
00000000000079a9         db  0x44 ; 'D'
00000000000079aa         db  0x0e ; '.'
00000000000079ab         db  0x20 ; ' '
00000000000079ac         db  0x42 ; 'B'
00000000000079ad         db  0x0e ; '.'
00000000000079ae         db  0x18 ; '.'
00000000000079af         db  0x42 ; 'B'
00000000000079b0         db  0x0e ; '.'
00000000000079b1         db  0x10 ; '.'
00000000000079b2         db  0x42 ; 'B'
00000000000079b3         db  0x0e ; '.'
00000000000079b4         db  0x08 ; '.'
00000000000079b5         db  0x00 ; '.'
00000000000079b6         db  0x00 ; '.'
00000000000079b7         db  0x00 ; '.'
00000000000079b8         dd         0x0000003c                                  ; Length of the record
00000000000079bc         dd         0x00000b6c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
00000000000079c0         db         0x00, 0xd9, 2 dup (0xff)                    ; begin 0x52c0
00000000000079c4         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0x5306)
00000000000079c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079c9         db  0x42 ; 'B'
00000000000079ca         db  0x0e ; '.'
00000000000079cb         db  0x10 ; '.'
00000000000079cc         db  0x8e ; '.'
00000000000079cd         db  0x02 ; '.'
00000000000079ce         db  0x42 ; 'B'
00000000000079cf         db  0x0e ; '.'
00000000000079d0         db  0x18 ; '.'
00000000000079d1         db  0x8d ; '.'
00000000000079d2         db  0x03 ; '.'
00000000000079d3         db  0x45 ; 'E'
00000000000079d4         db  0x0e ; '.'
00000000000079d5         db  0x20 ; ' '
00000000000079d6         db  0x8c ; '.'
00000000000079d7         db  0x04 ; '.'
00000000000079d8         db  0x41 ; 'A'
00000000000079d9         db  0x0e ; '.'
00000000000079da         db  0x28 ; '('
00000000000079db         db  0x86 ; '.'
00000000000079dc         db  0x05 ; '.'
00000000000079dd         db  0x44 ; 'D'
00000000000079de         db  0x0e ; '.'
00000000000079df         db  0x30 ; '0'
00000000000079e0         db  0x83 ; '.'
00000000000079e1         db  0x06 ; '.'
00000000000079e2         db  0x6d ; 'm'
00000000000079e3         db  0x0e ; '.'
00000000000079e4         db  0x28 ; '('
00000000000079e5         db  0x44 ; 'D'
00000000000079e6         db  0x0e ; '.'
00000000000079e7         db  0x20 ; ' '
00000000000079e8         db  0x42 ; 'B'
00000000000079e9         db  0x0e ; '.'
00000000000079ea         db  0x18 ; '.'
00000000000079eb         db  0x42 ; 'B'
00000000000079ec         db  0x0e ; '.'
00000000000079ed         db  0x10 ; '.'
00000000000079ee         db  0x42 ; 'B'
00000000000079ef         db  0x0e ; '.'
00000000000079f0         db  0x08 ; '.'
00000000000079f1         db  0x00 ; '.'
00000000000079f2         db  0x00 ; '.'
00000000000079f3         db  0x00 ; '.'
00000000000079f4         db  0x00 ; '.'
00000000000079f5         db  0x00 ; '.'
00000000000079f6         db  0x00 ; '.'
00000000000079f7         db  0x00 ; '.'
00000000000079f8         dd         0x00000034                                  ; Length of the record
00000000000079fc         dd         0x00000bac                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007a00         db         0x10, 0xd9, 2 dup (0xff)                    ; begin 0x5310
0000000000007a04         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x538b)
0000000000007a08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a09         db  0x42 ; 'B'
0000000000007a0a         db  0x0e ; '.'
0000000000007a0b         db  0x10 ; '.'
0000000000007a0c         db  0x8c ; '.'
0000000000007a0d         db  0x02 ; '.'
0000000000007a0e         db  0x41 ; 'A'
0000000000007a0f         db  0x0e ; '.'
0000000000007a10         db  0x18 ; '.'
0000000000007a11         db  0x86 ; '.'
0000000000007a12         db  0x03 ; '.'
0000000000007a13         db  0x41 ; 'A'
0000000000007a14         db  0x0e ; '.'
0000000000007a15         db  0x20 ; ' '
0000000000007a16         db  0x83 ; '.'
0000000000007a17         db  0x04 ; '.'
0000000000007a18         db  0x7d ; '}'
0000000000007a19         db  0x0a ; '.'
0000000000007a1a         db  0x0e ; '.'
0000000000007a1b         db  0x18 ; '.'
0000000000007a1c         db  0x41 ; 'A'
0000000000007a1d         db  0x0e ; '.'
0000000000007a1e         db  0x10 ; '.'
0000000000007a1f         db  0x42 ; 'B'
0000000000007a20         db  0x0e ; '.'
0000000000007a21         db  0x08 ; '.'
0000000000007a22         db  0x44 ; 'D'
0000000000007a23         db  0x0b ; '.'
0000000000007a24         db  0x60 ; '`'
0000000000007a25         db  0x0a ; '.'
0000000000007a26         db  0x0e ; '.'
0000000000007a27         db  0x18 ; '.'
0000000000007a28         db  0x41 ; 'A'
0000000000007a29         db  0x0e ; '.'
0000000000007a2a         db  0x10 ; '.'
0000000000007a2b         db  0x42 ; 'B'
0000000000007a2c         db  0x0e ; '.'
0000000000007a2d         db  0x08 ; '.'
0000000000007a2e         db  0x45 ; 'E'
0000000000007a2f         db  0x0b ; '.'
0000000000007a30         dd         0x00000034                                  ; Length of the record
0000000000007a34         dd         0x00000be4                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007a38         db         0x58, 0xd9, 2 dup (0xff)                    ; begin 0x5390
0000000000007a3c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x560e)
0000000000007a40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a41         db  0x42 ; 'B'
0000000000007a42         db  0x0e ; '.'
0000000000007a43         db  0x10 ; '.'
0000000000007a44         db  0x8c ; '.'
0000000000007a45         db  0x02 ; '.'
0000000000007a46         db  0x41 ; 'A'
0000000000007a47         db  0x0e ; '.'
0000000000007a48         db  0x18 ; '.'
0000000000007a49         db  0x86 ; '.'
0000000000007a4a         db  0x03 ; '.'
0000000000007a4b         db  0x43 ; 'C'
0000000000007a4c         db  0x0e ; '.'
0000000000007a4d         db  0x20 ; ' '
0000000000007a4e         db  0x83 ; '.'
0000000000007a4f         db  0x04 ; '.'
0000000000007a50         db  0x44 ; 'D'
0000000000007a51         db  0x0e ; '.'
0000000000007a52         db  0x70 ; 'p'
0000000000007a53         db  0x02 ; '.'
0000000000007a54         db  0xf0 ; '.'
0000000000007a55         db  0x0a ; '.'
0000000000007a56         db  0x0e ; '.'
0000000000007a57         db  0x20 ; ' '
0000000000007a58         db  0x41 ; 'A'
0000000000007a59         db  0x0e ; '.'
0000000000007a5a         db  0x18 ; '.'
0000000000007a5b         db  0x41 ; 'A'
0000000000007a5c         db  0x0e ; '.'
0000000000007a5d         db  0x10 ; '.'
0000000000007a5e         db  0x42 ; 'B'
0000000000007a5f         db  0x0e ; '.'
0000000000007a60         db  0x08 ; '.'
0000000000007a61         db  0x42 ; 'B'
0000000000007a62         db  0x0b ; '.'
0000000000007a63         db  0x00 ; '.'
0000000000007a64         db  0x00 ; '.'
0000000000007a65         db  0x00 ; '.'
0000000000007a66         db  0x00 ; '.'
0000000000007a67         db  0x00 ; '.'
0000000000007a68         dd         0x0000001c                                  ; Length of the record
0000000000007a6c         dd         0x00000c1c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007a70         db         0xa0, 0xdb, 2 dup (0xff)                    ; begin 0x5610
0000000000007a74         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5650)
0000000000007a78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a79         db  0x44 ; 'D'
0000000000007a7a         db  0x0e ; '.'
0000000000007a7b         db  0x10 ; '.'
0000000000007a7c         db  0x83 ; '.'
0000000000007a7d         db  0x02 ; '.'
0000000000007a7e         db  0x5a ; 'Z'
0000000000007a7f         db  0x0a ; '.'
0000000000007a80         db  0x0e ; '.'
0000000000007a81         db  0x08 ; '.'
0000000000007a82         db  0x4a ; 'J'
0000000000007a83         db  0x0b ; '.'
0000000000007a84         db  0x53 ; 'S'
0000000000007a85         db  0x0e ; '.'
0000000000007a86         db  0x08 ; '.'
0000000000007a87         db  0x00 ; '.'
0000000000007a88         dd         0x0000002c                                  ; Length of the record
0000000000007a8c         dd         0x00000c3c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007a90         db         0xc0, 0xdb, 2 dup (0xff)                    ; begin 0x5650
0000000000007a94         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x56a7)
0000000000007a98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a99         db  0x63 ; 'c'
0000000000007a9a         db  0x0e ; '.'
0000000000007a9b         db  0x10 ; '.'
0000000000007a9c         db  0x8c ; '.'
0000000000007a9d         db  0x02 ; '.'
0000000000007a9e         db  0x41 ; 'A'
0000000000007a9f         db  0x0e ; '.'
0000000000007aa0         db  0x18 ; '.'
0000000000007aa1         db  0x86 ; '.'
0000000000007aa2         db  0x03 ; '.'
0000000000007aa3         db  0x44 ; 'D'
0000000000007aa4         db  0x0e ; '.'
0000000000007aa5         db  0x20 ; ' '
0000000000007aa6         db  0x83 ; '.'
0000000000007aa7         db  0x04 ; '.'
0000000000007aa8         db  0x6b ; 'k'
0000000000007aa9         db  0x0e ; '.'
0000000000007aaa         db  0x18 ; '.'
0000000000007aab         db  0x41 ; 'A'
0000000000007aac         db  0x0e ; '.'
0000000000007aad         db  0x10 ; '.'
0000000000007aae         db  0x42 ; 'B'
0000000000007aaf         db  0x0e ; '.'
0000000000007ab0         db  0x08 ; '.'
0000000000007ab1         db  0x00 ; '.'
0000000000007ab2         db  0x00 ; '.'
0000000000007ab3         db  0x00 ; '.'
0000000000007ab4         db  0x00 ; '.'
0000000000007ab5         db  0x00 ; '.'
0000000000007ab6         db  0x00 ; '.'
0000000000007ab7         db  0x00 ; '.'
0000000000007ab8         dd         0x0000003c                                  ; Length of the record
0000000000007abc         dd         0x00000c6c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007ac0         db         0xf0, 0xdb, 2 dup (0xff)                    ; begin 0x56b0
0000000000007ac4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5733)
0000000000007ac8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ac9         db  0x42 ; 'B'
0000000000007aca         db  0x0e ; '.'
0000000000007acb         db  0x10 ; '.'
0000000000007acc         db  0x8d ; '.'
0000000000007acd         db  0x02 ; '.'
0000000000007ace         db  0x42 ; 'B'
0000000000007acf         db  0x0e ; '.'
0000000000007ad0         db  0x18 ; '.'
0000000000007ad1         db  0x8c ; '.'
0000000000007ad2         db  0x03 ; '.'
0000000000007ad3         db  0x44 ; 'D'
0000000000007ad4         db  0x0e ; '.'
0000000000007ad5         db  0x20 ; ' '
0000000000007ad6         db  0x86 ; '.'
0000000000007ad7         db  0x04 ; '.'
0000000000007ad8         db  0x41 ; 'A'
0000000000007ad9         db  0x0e ; '.'
0000000000007ada         db  0x28 ; '('
0000000000007adb         db  0x83 ; '.'
0000000000007adc         db  0x05 ; '.'
0000000000007add         db  0x4a ; 'J'
0000000000007ade         db  0x0e ; '.'
0000000000007adf         db  0x40 ; '@'
0000000000007ae0         db  0x02 ; '.'
0000000000007ae1         db  0x64 ; 'd'
0000000000007ae2         db  0x0a ; '.'
0000000000007ae3         db  0x0e ; '.'
0000000000007ae4         db  0x28 ; '('
0000000000007ae5         db  0x41 ; 'A'
0000000000007ae6         db  0x0e ; '.'
0000000000007ae7         db  0x20 ; ' '
0000000000007ae8         db  0x41 ; 'A'
0000000000007ae9         db  0x0e ; '.'
0000000000007aea         db  0x18 ; '.'
0000000000007aeb         db  0x42 ; 'B'
0000000000007aec         db  0x0e ; '.'
0000000000007aed         db  0x10 ; '.'
0000000000007aee         db  0x42 ; 'B'
0000000000007aef         db  0x0e ; '.'
0000000000007af0         db  0x08 ; '.'
0000000000007af1         db  0x41 ; 'A'
0000000000007af2         db  0x0b ; '.'
0000000000007af3         db  0x00 ; '.'
0000000000007af4         db  0x00 ; '.'
0000000000007af5         db  0x00 ; '.'
0000000000007af6         db  0x00 ; '.'
0000000000007af7         db  0x00 ; '.'
0000000000007af8         dd         0x0000004c                                  ; Length of the record
0000000000007afc         dd         0x00000cac                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007b00         db         0x40, 0xdc, 2 dup (0xff)                    ; begin 0x5740
0000000000007b04         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x57bd)
0000000000007b08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b09         db  0x42 ; 'B'
0000000000007b0a         db  0x0e ; '.'
0000000000007b0b         db  0x10 ; '.'
0000000000007b0c         db  0x8c ; '.'
0000000000007b0d         db  0x02 ; '.'
0000000000007b0e         db  0x41 ; 'A'
0000000000007b0f         db  0x0e ; '.'
0000000000007b10         db  0x18 ; '.'
0000000000007b11         db  0x86 ; '.'
0000000000007b12         db  0x03 ; '.'
0000000000007b13         db  0x44 ; 'D'
0000000000007b14         db  0x0e ; '.'
0000000000007b15         db  0x20 ; ' '
0000000000007b16         db  0x83 ; '.'
0000000000007b17         db  0x04 ; '.'
0000000000007b18         db  0x69 ; 'i'
0000000000007b19         db  0x0a ; '.'
0000000000007b1a         db  0x0e ; '.'
0000000000007b1b         db  0x18 ; '.'
0000000000007b1c         db  0x41 ; 'A'
0000000000007b1d         db  0x0e ; '.'
0000000000007b1e         db  0x10 ; '.'
0000000000007b1f         db  0x42 ; 'B'
0000000000007b20         db  0x0e ; '.'
0000000000007b21         db  0x08 ; '.'
0000000000007b22         db  0x45 ; 'E'
0000000000007b23         db  0x0b ; '.'
0000000000007b24         db  0x55 ; 'U'
0000000000007b25         db  0x0a ; '.'
0000000000007b26         db  0x0e ; '.'
0000000000007b27         db  0x18 ; '.'
0000000000007b28         db  0x41 ; 'A'
0000000000007b29         db  0x0e ; '.'
0000000000007b2a         db  0x10 ; '.'
0000000000007b2b         db  0x42 ; 'B'
0000000000007b2c         db  0x0e ; '.'
0000000000007b2d         db  0x08 ; '.'
0000000000007b2e         db  0x48 ; 'H'
0000000000007b2f         db  0x0b ; '.'
0000000000007b30         db  0x41 ; 'A'
0000000000007b31         db  0x0a ; '.'
0000000000007b32         db  0x0e ; '.'
0000000000007b33         db  0x18 ; '.'
0000000000007b34         db  0x46 ; 'F'
0000000000007b35         db  0x0e ; '.'
0000000000007b36         db  0x10 ; '.'
0000000000007b37         db  0x42 ; 'B'
0000000000007b38         db  0x0e ; '.'
0000000000007b39         db  0x08 ; '.'
0000000000007b3a         db  0x47 ; 'G'
0000000000007b3b         db  0x0b ; '.'
0000000000007b3c         db  0x49 ; 'I'
0000000000007b3d         db  0x0e ; '.'
0000000000007b3e         db  0x18 ; '.'
0000000000007b3f         db  0x41 ; 'A'
0000000000007b40         db  0x0e ; '.'
0000000000007b41         db  0x10 ; '.'
0000000000007b42         db  0x42 ; 'B'
0000000000007b43         db  0x0e ; '.'
0000000000007b44         db  0x08 ; '.'
0000000000007b45         db  0x00 ; '.'
0000000000007b46         db  0x00 ; '.'
0000000000007b47         db  0x00 ; '.'
0000000000007b48         dd         0x0000001c                                  ; Length of the record
0000000000007b4c         dd         0x00000cfc                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007b50         db         0x70, 0xdc, 2 dup (0xff)                    ; begin 0x57c0
0000000000007b54         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x57fc)
0000000000007b58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b59         db  0x44 ; 'D'
0000000000007b5a         db  0x0e ; '.'
0000000000007b5b         db  0x10 ; '.'
0000000000007b5c         db  0x61 ; 'a'
0000000000007b5d         db  0x0a ; '.'
0000000000007b5e         db  0x0e ; '.'
0000000000007b5f         db  0x08 ; '.'
0000000000007b60         db  0x4b ; 'K'
0000000000007b61         db  0x0b ; '.'
0000000000007b62         db  0x4b ; 'K'
0000000000007b63         db  0x0e ; '.'
0000000000007b64         db  0x08 ; '.'
0000000000007b65         db  0x00 ; '.'
0000000000007b66         db  0x00 ; '.'
0000000000007b67         db  0x00 ; '.'
0000000000007b68         dd         0x00000074                                  ; Length of the record
0000000000007b6c         dd         0x00000d1c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007b70         db         0x90, 0xdc, 2 dup (0xff)                    ; begin 0x5800
0000000000007b74         db         0xb4, 3 dup (0x00)                          ; length 0xb4 (end at 0x58b4)
0000000000007b78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b79         db  0x42 ; 'B'
0000000000007b7a         db  0x0e ; '.'
0000000000007b7b         db  0x10 ; '.'
0000000000007b7c         db  0x8f ; '.'
0000000000007b7d         db  0x02 ; '.'
0000000000007b7e         db  0x42 ; 'B'
0000000000007b7f         db  0x0e ; '.'
0000000000007b80         db  0x18 ; '.'
0000000000007b81         db  0x8e ; '.'
0000000000007b82         db  0x03 ; '.'
0000000000007b83         db  0x45 ; 'E'
0000000000007b84         db  0x0e ; '.'
0000000000007b85         db  0x20 ; ' '
0000000000007b86         db  0x8d ; '.'
0000000000007b87         db  0x04 ; '.'
0000000000007b88         db  0x42 ; 'B'
0000000000007b89         db  0x0e ; '.'
0000000000007b8a         db  0x28 ; '('
0000000000007b8b         db  0x8c ; '.'
0000000000007b8c         db  0x05 ; '.'
0000000000007b8d         db  0x44 ; 'D'
0000000000007b8e         db  0x0e ; '.'
0000000000007b8f         db  0x30 ; '0'
0000000000007b90         db  0x86 ; '.'
0000000000007b91         db  0x06 ; '.'
0000000000007b92         db  0x41 ; 'A'
0000000000007b93         db  0x0e ; '.'
0000000000007b94         db  0x38 ; '8'
0000000000007b95         db  0x83 ; '.'
0000000000007b96         db  0x07 ; '.'
0000000000007b97         db  0x4a ; 'J'
0000000000007b98         db  0x0e ; '.'
0000000000007b99         db  0x40 ; '@'
0000000000007b9a         db  0x02 ; '.'
0000000000007b9b         db  0x53 ; 'S'
0000000000007b9c         db  0x0a ; '.'
0000000000007b9d         db  0x0e ; '.'
0000000000007b9e         db  0x38 ; '8'
0000000000007b9f         db  0x41 ; 'A'
0000000000007ba0         db  0x0e ; '.'
0000000000007ba1         db  0x30 ; '0'
0000000000007ba2         db  0x41 ; 'A'
0000000000007ba3         db  0x0e ; '.'
0000000000007ba4         db  0x28 ; '('
0000000000007ba5         db  0x42 ; 'B'
0000000000007ba6         db  0x0e ; '.'
0000000000007ba7         db  0x20 ; ' '
0000000000007ba8         db  0x42 ; 'B'
0000000000007ba9         db  0x0e ; '.'
0000000000007baa         db  0x18 ; '.'
0000000000007bab         db  0x42 ; 'B'
0000000000007bac         db  0x0e ; '.'
0000000000007bad         db  0x10 ; '.'
0000000000007bae         db  0x42 ; 'B'
0000000000007baf         db  0x0e ; '.'
0000000000007bb0         db  0x08 ; '.'
0000000000007bb1         db  0x49 ; 'I'
0000000000007bb2         db  0x0b ; '.'
0000000000007bb3         db  0x4c ; 'L'
0000000000007bb4         db  0x0a ; '.'
0000000000007bb5         db  0x0e ; '.'
0000000000007bb6         db  0x38 ; '8'
0000000000007bb7         db  0x41 ; 'A'
0000000000007bb8         db  0x0e ; '.'
0000000000007bb9         db  0x30 ; '0'
0000000000007bba         db  0x43 ; 'C'
0000000000007bbb         db  0x0e ; '.'
0000000000007bbc         db  0x28 ; '('
0000000000007bbd         db  0x42 ; 'B'
0000000000007bbe         db  0x0e ; '.'
0000000000007bbf         db  0x20 ; ' '
0000000000007bc0         db  0x42 ; 'B'
0000000000007bc1         db  0x0e ; '.'
0000000000007bc2         db  0x18 ; '.'
0000000000007bc3         db  0x42 ; 'B'
0000000000007bc4         db  0x0e ; '.'
0000000000007bc5         db  0x10 ; '.'
0000000000007bc6         db  0x42 ; 'B'
0000000000007bc7         db  0x0e ; '.'
0000000000007bc8         db  0x08 ; '.'
0000000000007bc9         db  0x48 ; 'H'
0000000000007bca         db  0x0b ; '.'
0000000000007bcb         db  0x44 ; 'D'
0000000000007bcc         db  0x0e ; '.'
0000000000007bcd         db  0x38 ; '8'
0000000000007bce         db  0x46 ; 'F'
0000000000007bcf         db  0x0e ; '.'
0000000000007bd0         db  0x30 ; '0'
0000000000007bd1         db  0x41 ; 'A'
0000000000007bd2         db  0x0e ; '.'
0000000000007bd3         db  0x28 ; '('
0000000000007bd4         db  0x42 ; 'B'
0000000000007bd5         db  0x0e ; '.'
0000000000007bd6         db  0x20 ; ' '
0000000000007bd7         db  0x42 ; 'B'
0000000000007bd8         db  0x0e ; '.'
0000000000007bd9         db  0x18 ; '.'
0000000000007bda         db  0x42 ; 'B'
0000000000007bdb         db  0x0e ; '.'
0000000000007bdc         db  0x10 ; '.'
0000000000007bdd         db  0x42 ; 'B'
0000000000007bde         db  0x0e ; '.'
0000000000007bdf         db  0x08 ; '.'
0000000000007be0         dd         0x00000048                                  ; Length of the record
0000000000007be4         dd         0x00000d94                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007be8         db         0xd8, 0xdc, 2 dup (0xff)                    ; begin 0x58c0
0000000000007bec         db         0xa9, 3 dup (0x00)                          ; length 0xa9 (end at 0x5969)
0000000000007bf0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bf1         db  0x42 ; 'B'
0000000000007bf2         db  0x0e ; '.'
0000000000007bf3         db  0x10 ; '.'
0000000000007bf4         db  0x8f ; '.'
0000000000007bf5         db  0x02 ; '.'
0000000000007bf6         db  0x42 ; 'B'
0000000000007bf7         db  0x0e ; '.'
0000000000007bf8         db  0x18 ; '.'
0000000000007bf9         db  0x8e ; '.'
0000000000007bfa         db  0x03 ; '.'
0000000000007bfb         db  0x45 ; 'E'
0000000000007bfc         db  0x0e ; '.'
0000000000007bfd         db  0x20 ; ' '
0000000000007bfe         db  0x8d ; '.'
0000000000007bff         db  0x04 ; '.'
0000000000007c00         db  0x42 ; 'B'
0000000000007c01         db  0x0e ; '.'
0000000000007c02         db  0x28 ; '('
0000000000007c03         db  0x8c ; '.'
0000000000007c04         db  0x05 ; '.'
0000000000007c05         db  0x44 ; 'D'
0000000000007c06         db  0x0e ; '.'
0000000000007c07         db  0x30 ; '0'
0000000000007c08         db  0x86 ; '.'
0000000000007c09         db  0x06 ; '.'
0000000000007c0a         db  0x41 ; 'A'
0000000000007c0b         db  0x0e ; '.'
0000000000007c0c         db  0x38 ; '8'
0000000000007c0d         db  0x83 ; '.'
0000000000007c0e         db  0x07 ; '.'
0000000000007c0f         db  0x4a ; 'J'
0000000000007c10         db  0x0e ; '.'
0000000000007c11         db  0x50 ; 'P'
0000000000007c12         db  0x02 ; '.'
0000000000007c13         db  0x6b ; 'k'
0000000000007c14         db  0x0a ; '.'
0000000000007c15         db  0x0e ; '.'
0000000000007c16         db  0x38 ; '8'
0000000000007c17         db  0x43 ; 'C'
0000000000007c18         db  0x0e ; '.'
0000000000007c19         db  0x30 ; '0'
0000000000007c1a         db  0x41 ; 'A'
0000000000007c1b         db  0x0e ; '.'
0000000000007c1c         db  0x28 ; '('
0000000000007c1d         db  0x42 ; 'B'
0000000000007c1e         db  0x0e ; '.'
0000000000007c1f         db  0x20 ; ' '
0000000000007c20         db  0x42 ; 'B'
0000000000007c21         db  0x0e ; '.'
0000000000007c22         db  0x18 ; '.'
0000000000007c23         db  0x42 ; 'B'
0000000000007c24         db  0x0e ; '.'
0000000000007c25         db  0x10 ; '.'
0000000000007c26         db  0x42 ; 'B'
0000000000007c27         db  0x0e ; '.'
0000000000007c28         db  0x08 ; '.'
0000000000007c29         db  0x47 ; 'G'
0000000000007c2a         db  0x0b ; '.'
0000000000007c2b         db  0x00 ; '.'
0000000000007c2c         dd         0x00000040                                  ; Length of the record
0000000000007c30         dd         0x00000de0                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007c34         db         0x3c, 0xdd, 2 dup (0xff)                    ; begin 0x5970
0000000000007c38         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x59ce)
0000000000007c3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c3d         db  0x42 ; 'B'
0000000000007c3e         db  0x0e ; '.'
0000000000007c3f         db  0x10 ; '.'
0000000000007c40         db  0x8c ; '.'
0000000000007c41         db  0x02 ; '.'
0000000000007c42         db  0x41 ; 'A'
0000000000007c43         db  0x0e ; '.'
0000000000007c44         db  0x18 ; '.'
0000000000007c45         db  0x86 ; '.'
0000000000007c46         db  0x03 ; '.'
0000000000007c47         db  0x44 ; 'D'
0000000000007c48         db  0x0e ; '.'
0000000000007c49         db  0x20 ; ' '
0000000000007c4a         db  0x83 ; '.'
0000000000007c4b         db  0x04 ; '.'
0000000000007c4c         db  0x4a ; 'J'
0000000000007c4d         db  0x0e ; '.'
0000000000007c4e         db  0x30 ; '0'
0000000000007c4f         db  0x62 ; 'b'
0000000000007c50         db  0x0a ; '.'
0000000000007c51         db  0x0e ; '.'
0000000000007c52         db  0x20 ; ' '
0000000000007c53         db  0x4a ; 'J'
0000000000007c54         db  0x0e ; '.'
0000000000007c55         db  0x18 ; '.'
0000000000007c56         db  0x41 ; 'A'
0000000000007c57         db  0x0e ; '.'
0000000000007c58         db  0x10 ; '.'
0000000000007c59         db  0x42 ; 'B'
0000000000007c5a         db  0x0e ; '.'
0000000000007c5b         db  0x08 ; '.'
0000000000007c5c         db  0x48 ; 'H'
0000000000007c5d         db  0x0b ; '.'
0000000000007c5e         db  0x4f ; 'O'
0000000000007c5f         db  0x0e ; '.'
0000000000007c60         db  0x20 ; ' '
0000000000007c61         db  0x43 ; 'C'
0000000000007c62         db  0x0e ; '.'
0000000000007c63         db  0x18 ; '.'
0000000000007c64         db  0x41 ; 'A'
0000000000007c65         db  0x0e ; '.'
0000000000007c66         db  0x10 ; '.'
0000000000007c67         db  0x42 ; 'B'
0000000000007c68         db  0x0e ; '.'
0000000000007c69         db  0x08 ; '.'
0000000000007c6a         db  0x00 ; '.'
0000000000007c6b         db  0x00 ; '.'
0000000000007c6c         db  0x00 ; '.'
0000000000007c6d         db  0x00 ; '.'
0000000000007c6e         db  0x00 ; '.'
0000000000007c6f         db  0x00 ; '.'
0000000000007c70         dd         0x00000044                                  ; Length of the record
0000000000007c74         dd         0x00000e24                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007c78         db         0x58, 0xdd, 2 dup (0xff)                    ; begin 0x59d0
0000000000007c7c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x5a35)
0000000000007c80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c81         db  0x42 ; 'B'
0000000000007c82         db  0x0e ; '.'
0000000000007c83         db  0x10 ; '.'
0000000000007c84         db  0x8f ; '.'
0000000000007c85         db  0x02 ; '.'
0000000000007c86         db  0x42 ; 'B'
0000000000007c87         db  0x0e ; '.'
0000000000007c88         db  0x18 ; '.'
0000000000007c89         db  0x8e ; '.'
0000000000007c8a         db  0x03 ; '.'
0000000000007c8b         db  0x45 ; 'E'
0000000000007c8c         db  0x0e ; '.'
0000000000007c8d         db  0x20 ; ' '
0000000000007c8e         db  0x8d ; '.'
0000000000007c8f         db  0x04 ; '.'
0000000000007c90         db  0x42 ; 'B'
0000000000007c91         db  0x0e ; '.'
0000000000007c92         db  0x28 ; '('
0000000000007c93         db  0x8c ; '.'
0000000000007c94         db  0x05 ; '.'
0000000000007c95         db  0x48 ; 'H'
0000000000007c96         db  0x0e ; '.'
0000000000007c97         db  0x30 ; '0'
0000000000007c98         db  0x86 ; '.'
0000000000007c99         db  0x06 ; '.'
0000000000007c9a         db  0x48 ; 'H'
0000000000007c9b         db  0x0e ; '.'
0000000000007c9c         db  0x38 ; '8'
0000000000007c9d         db  0x83 ; '.'
0000000000007c9e         db  0x07 ; '.'
0000000000007c9f         db  0x4d ; 'M'
0000000000007ca0         db  0x0e ; '.'
0000000000007ca1         db  0x40 ; '@'
0000000000007ca2         db  0x72 ; 'r'
0000000000007ca3         db  0x0e ; '.'
0000000000007ca4         db  0x38 ; '8'
0000000000007ca5         db  0x41 ; 'A'
0000000000007ca6         db  0x0e ; '.'
0000000000007ca7         db  0x30 ; '0'
0000000000007ca8         db  0x41 ; 'A'
0000000000007ca9         db  0x0e ; '.'
0000000000007caa         db  0x28 ; '('
0000000000007cab         db  0x42 ; 'B'
0000000000007cac         db  0x0e ; '.'
0000000000007cad         db  0x20 ; ' '
0000000000007cae         db  0x42 ; 'B'
0000000000007caf         db  0x0e ; '.'
0000000000007cb0         db  0x18 ; '.'
0000000000007cb1         db  0x42 ; 'B'
0000000000007cb2         db  0x0e ; '.'
0000000000007cb3         db  0x10 ; '.'
0000000000007cb4         db  0x42 ; 'B'
0000000000007cb5         db  0x0e ; '.'
0000000000007cb6         db  0x08 ; '.'
0000000000007cb7         db  0x00 ; '.'
0000000000007cb8         dd         0x00000014                                  ; Length of the record
0000000000007cbc         dd         0x00000e6c                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007cc0         db         0x80, 0xdd, 2 dup (0xff)                    ; begin 0x5a40
0000000000007cc4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5a42)
0000000000007cc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007cc9         align      16
0000000000007cd0         dd         0x00000010                                  ; Length of the record
0000000000007cd4         dd         0x00000e84                                  ; FDE: parent CIE at 0x6e50 (FDE encoding = 0x1B)
0000000000007cd8         db         0x78, 0xdd, 2 dup (0xff)                    ; begin 0x5a50
0000000000007cdc         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x5a5e)
0000000000007ce0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ce1         align      8


        ; Segment Segment 3
        ; Range: [0x208ad0; 0x209260[ (1936 bytes)
        ; File offset : [35536; 37024[ (1488 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x208ad0; 0x208ad8[ (8 bytes)
        ; File offset : [35536; 35544[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000208ad0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x208ad8; 0x208ae0[ (8 bytes)
        ; File offset : [35544; 35552[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000208ad8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x208ae0; 0x208c38[ (344 bytes)
        ; File offset : [35552; 35896[ (344 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
0000000000208ae0         db  0xbe ; '.'                                         ; DATA XREF=main+176
0000000000208ae1         db  0x61 ; 'a'
0000000000208ae2         db  0x00 ; '.'
0000000000208ae3         db  0x00 ; '.'
0000000000208ae4         db  0x00 ; '.'
0000000000208ae5         db  0x00 ; '.'
0000000000208ae6         db  0x00 ; '.'
0000000000208ae7         db  0x00 ; '.'
0000000000208ae8         db  0x00 ; '.'
0000000000208ae9         db  0x00 ; '.'
0000000000208aea         db  0x00 ; '.'
0000000000208aeb         db  0x00 ; '.'
0000000000208aec         db  0x00 ; '.'
0000000000208aed         db  0x00 ; '.'
0000000000208aee         db  0x00 ; '.'
0000000000208aef         db  0x00 ; '.'
0000000000208af0         db  0x00 ; '.'
0000000000208af1         db  0x00 ; '.'
0000000000208af2         db  0x00 ; '.'
0000000000208af3         db  0x00 ; '.'
0000000000208af4         db  0x00 ; '.'
0000000000208af5         db  0x00 ; '.'
0000000000208af6         db  0x00 ; '.'
0000000000208af7         db  0x00 ; '.'
0000000000208af8         db  0x80 ; '.'
0000000000208af9         db  0x00 ; '.'
0000000000208afa         db  0x00 ; '.'
0000000000208afb         db  0x00 ; '.'
0000000000208afc         db  0x00 ; '.'
0000000000208afd         db  0x00 ; '.'
0000000000208afe         db  0x00 ; '.'
0000000000208aff         db  0x00 ; '.'
0000000000208b00         db  0xbc ; '.'
0000000000208b01         db  0x61 ; 'a'
0000000000208b02         db  0x00 ; '.'
0000000000208b03         db  0x00 ; '.'
0000000000208b04         db  0x00 ; '.'
0000000000208b05         db  0x00 ; '.'
0000000000208b06         db  0x00 ; '.'
0000000000208b07         db  0x00 ; '.'
0000000000208b08         db  0x00 ; '.'
0000000000208b09         db  0x00 ; '.'
0000000000208b0a         db  0x00 ; '.'
0000000000208b0b         db  0x00 ; '.'
0000000000208b0c         db  0x00 ; '.'
0000000000208b0d         db  0x00 ; '.'
0000000000208b0e         db  0x00 ; '.'
0000000000208b0f         db  0x00 ; '.'
0000000000208b10         db  0x00 ; '.'
0000000000208b11         db  0x00 ; '.'
0000000000208b12         db  0x00 ; '.'
0000000000208b13         db  0x00 ; '.'
0000000000208b14         db  0x00 ; '.'
0000000000208b15         db  0x00 ; '.'
0000000000208b16         db  0x00 ; '.'
0000000000208b17         db  0x00 ; '.'
0000000000208b18         db  0x81 ; '.'
0000000000208b19         db  0x00 ; '.'
0000000000208b1a         db  0x00 ; '.'
0000000000208b1b         db  0x00 ; '.'
0000000000208b1c         db  0x00 ; '.'
0000000000208b1d         db  0x00 ; '.'
0000000000208b1e         db  0x00 ; '.'
0000000000208b1f         db  0x00 ; '.'
0000000000208b20         db  0xca ; '.'
0000000000208b21         db  0x61 ; 'a'
0000000000208b22         db  0x00 ; '.'
0000000000208b23         db  0x00 ; '.'
0000000000208b24         db  0x00 ; '.'
0000000000208b25         db  0x00 ; '.'
0000000000208b26         db  0x00 ; '.'
0000000000208b27         db  0x00 ; '.'
0000000000208b28         db  0x01 ; '.'
0000000000208b29         db  0x00 ; '.'
0000000000208b2a         db  0x00 ; '.'
0000000000208b2b         db  0x00 ; '.'
0000000000208b2c         db  0x00 ; '.'
0000000000208b2d         db  0x00 ; '.'
0000000000208b2e         db  0x00 ; '.'
0000000000208b2f         db  0x00 ; '.'
0000000000208b30         db  0x00 ; '.'
0000000000208b31         db  0x00 ; '.'
0000000000208b32         db  0x00 ; '.'
0000000000208b33         db  0x00 ; '.'
0000000000208b34         db  0x00 ; '.'
0000000000208b35         db  0x00 ; '.'
0000000000208b36         db  0x00 ; '.'
0000000000208b37         db  0x00 ; '.'
0000000000208b38         db  0x82 ; '.'
0000000000208b39         db  0x00 ; '.'
0000000000208b3a         db  0x00 ; '.'
0000000000208b3b         db  0x00 ; '.'
0000000000208b3c         db  0x00 ; '.'
0000000000208b3d         db  0x00 ; '.'
0000000000208b3e         db  0x00 ; '.'
0000000000208b3f         db  0x00 ; '.'
0000000000208b40         db  0x65 ; 'e'
0000000000208b41         db  0x60 ; '`'
0000000000208b42         db  0x00 ; '.'
0000000000208b43         db  0x00 ; '.'
0000000000208b44         db  0x00 ; '.'
0000000000208b45         db  0x00 ; '.'
0000000000208b46         db  0x00 ; '.'
0000000000208b47         db  0x00 ; '.'
0000000000208b48         db  0x00 ; '.'
0000000000208b49         db  0x00 ; '.'
0000000000208b4a         db  0x00 ; '.'
0000000000208b4b         db  0x00 ; '.'
0000000000208b4c         db  0x00 ; '.'
0000000000208b4d         db  0x00 ; '.'
0000000000208b4e         db  0x00 ; '.'
0000000000208b4f         db  0x00 ; '.'
0000000000208b50         db  0x00 ; '.'
0000000000208b51         db  0x00 ; '.'
0000000000208b52         db  0x00 ; '.'
0000000000208b53         db  0x00 ; '.'
0000000000208b54         db  0x00 ; '.'
0000000000208b55         db  0x00 ; '.'
0000000000208b56         db  0x00 ; '.'
0000000000208b57         db  0x00 ; '.'
0000000000208b58         db  0x83 ; '.'
0000000000208b59         db  0x00 ; '.'
0000000000208b5a         db  0x00 ; '.'
0000000000208b5b         db  0x00 ; '.'
0000000000208b5c         db  0x00 ; '.'
0000000000208b5d         db  0x00 ; '.'
0000000000208b5e         db  0x00 ; '.'
0000000000208b5f         db  0x00 ; '.'
0000000000208b60         db  0xdb ; '.'
0000000000208b61         db  0x61 ; 'a'
0000000000208b62         db  0x00 ; '.'
0000000000208b63         db  0x00 ; '.'
0000000000208b64         db  0x00 ; '.'
0000000000208b65         db  0x00 ; '.'
0000000000208b66         db  0x00 ; '.'
0000000000208b67         db  0x00 ; '.'
0000000000208b68         db  0x00 ; '.'
0000000000208b69         db  0x00 ; '.'
0000000000208b6a         db  0x00 ; '.'
0000000000208b6b         db  0x00 ; '.'
0000000000208b6c         db  0x00 ; '.'
0000000000208b6d         db  0x00 ; '.'
0000000000208b6e         db  0x00 ; '.'
0000000000208b6f         db  0x00 ; '.'
0000000000208b70         db  0x00 ; '.'
0000000000208b71         db  0x00 ; '.'
0000000000208b72         db  0x00 ; '.'
0000000000208b73         db  0x00 ; '.'
0000000000208b74         db  0x00 ; '.'
0000000000208b75         db  0x00 ; '.'
0000000000208b76         db  0x00 ; '.'
0000000000208b77         db  0x00 ; '.'
0000000000208b78         db  0x7a ; 'z'
0000000000208b79         db  0x00 ; '.'
0000000000208b7a         db  0x00 ; '.'
0000000000208b7b         db  0x00 ; '.'
0000000000208b7c         db  0x00 ; '.'
0000000000208b7d         db  0x00 ; '.'
0000000000208b7e         db  0x00 ; '.'
0000000000208b7f         db  0x00 ; '.'
0000000000208b80         db  0xeb ; '.'
0000000000208b81         db  0x61 ; 'a'
0000000000208b82         db  0x00 ; '.'
0000000000208b83         db  0x00 ; '.'
0000000000208b84         db  0x00 ; '.'
0000000000208b85         db  0x00 ; '.'
0000000000208b86         db  0x00 ; '.'
0000000000208b87         db  0x00 ; '.'
0000000000208b88         db  0x00 ; '.'
0000000000208b89         db  0x00 ; '.'
0000000000208b8a         db  0x00 ; '.'
0000000000208b8b         db  0x00 ; '.'
0000000000208b8c         db  0x00 ; '.'
0000000000208b8d         db  0x00 ; '.'
0000000000208b8e         db  0x00 ; '.'
0000000000208b8f         db  0x00 ; '.'
0000000000208b90         db  0x00 ; '.'
0000000000208b91         db  0x00 ; '.'
0000000000208b92         db  0x00 ; '.'
0000000000208b93         db  0x00 ; '.'
0000000000208b94         db  0x00 ; '.'
0000000000208b95         db  0x00 ; '.'
0000000000208b96         db  0x00 ; '.'
0000000000208b97         db  0x00 ; '.'
0000000000208b98         db  0x7e ; '~'
0000000000208b99         db  0xff ; '.'
0000000000208b9a         db  0xff ; '.'
0000000000208b9b         db  0xff ; '.'
0000000000208b9c         db  0x00 ; '.'
0000000000208b9d         db  0x00 ; '.'
0000000000208b9e         db  0x00 ; '.'
0000000000208b9f         db  0x00 ; '.'
0000000000208ba0         db  0xf0 ; '.'
0000000000208ba1         db  0x61 ; 'a'
0000000000208ba2         db  0x00 ; '.'
0000000000208ba3         db  0x00 ; '.'
0000000000208ba4         db  0x00 ; '.'
0000000000208ba5         db  0x00 ; '.'
0000000000208ba6         db  0x00 ; '.'
0000000000208ba7         db  0x00 ; '.'
0000000000208ba8         db  0x00 ; '.'
0000000000208ba9         db  0x00 ; '.'
0000000000208baa         db  0x00 ; '.'
0000000000208bab         db  0x00 ; '.'
0000000000208bac         db  0x00 ; '.'
0000000000208bad         db  0x00 ; '.'
0000000000208bae         db  0x00 ; '.'
0000000000208baf         db  0x00 ; '.'
0000000000208bb0         db  0x00 ; '.'
0000000000208bb1         db  0x00 ; '.'
0000000000208bb2         db  0x00 ; '.'
0000000000208bb3         db  0x00 ; '.'
0000000000208bb4         db  0x00 ; '.'
0000000000208bb5         db  0x00 ; '.'
0000000000208bb6         db  0x00 ; '.'
0000000000208bb7         db  0x00 ; '.'
0000000000208bb8         db  0x7d ; '}'
0000000000208bb9         db  0xff ; '.'
0000000000208bba         db  0xff ; '.'
0000000000208bbb         db  0xff ; '.'
0000000000208bbc         db  0x00 ; '.'
0000000000208bbd         db  0x00 ; '.'
0000000000208bbe         db  0x00 ; '.'
0000000000208bbf         db  0x00 ; '.'
0000000000208bc0         db  0x00 ; '.'
0000000000208bc1         db  0x00 ; '.'
0000000000208bc2         db  0x00 ; '.'
0000000000208bc3         db  0x00 ; '.'
0000000000208bc4         db  0x00 ; '.'
0000000000208bc5         db  0x00 ; '.'
0000000000208bc6         db  0x00 ; '.'
0000000000208bc7         db  0x00 ; '.'
0000000000208bc8         db  0x00 ; '.'
0000000000208bc9         db  0x00 ; '.'
0000000000208bca         db  0x00 ; '.'
0000000000208bcb         db  0x00 ; '.'
0000000000208bcc         db  0x00 ; '.'
0000000000208bcd         db  0x00 ; '.'
0000000000208bce         db  0x00 ; '.'
0000000000208bcf         db  0x00 ; '.'
0000000000208bd0         db  0x00 ; '.'
0000000000208bd1         db  0x00 ; '.'
0000000000208bd2         db  0x00 ; '.'
0000000000208bd3         db  0x00 ; '.'
0000000000208bd4         db  0x00 ; '.'
0000000000208bd5         db  0x00 ; '.'
0000000000208bd6         db  0x00 ; '.'
0000000000208bd7         db  0x00 ; '.'
0000000000208bd8         db  0x00 ; '.'
0000000000208bd9         db  0x00 ; '.'
0000000000208bda         db  0x00 ; '.'
0000000000208bdb         db  0x00 ; '.'
0000000000208bdc         db  0x00 ; '.'
0000000000208bdd         db  0x00 ; '.'
0000000000208bde         db  0x00 ; '.'
0000000000208bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000208be0         db  0x79 ; 'y'
0000000000208be1         db  0x62 ; 'b'
0000000000208be2         db  0x00 ; '.'
0000000000208be3         db  0x00 ; '.'
0000000000208be4         db  0x00 ; '.'
0000000000208be5         db  0x00 ; '.'
0000000000208be6         db  0x00 ; '.'
0000000000208be7         db  0x00 ; '.'
0000000000208be8         db  0x81 ; '.'
0000000000208be9         db  0x62 ; 'b'
0000000000208bea         db  0x00 ; '.'
0000000000208beb         db  0x00 ; '.'
0000000000208bec         db  0x00 ; '.'
0000000000208bed         db  0x00 ; '.'
0000000000208bee         db  0x00 ; '.'
0000000000208bef         db  0x00 ; '.'
0000000000208bf0         db  0x87 ; '.'
0000000000208bf1         db  0x62 ; 'b'
0000000000208bf2         db  0x00 ; '.'
0000000000208bf3         db  0x00 ; '.'
0000000000208bf4         db  0x00 ; '.'
0000000000208bf5         db  0x00 ; '.'
0000000000208bf6         db  0x00 ; '.'
0000000000208bf7         db  0x00 ; '.'
0000000000208bf8         db  0x94 ; '.'
0000000000208bf9         db  0x62 ; 'b'
0000000000208bfa         db  0x00 ; '.'
0000000000208bfb         db  0x00 ; '.'
0000000000208bfc         db  0x00 ; '.'
0000000000208bfd         db  0x00 ; '.'
0000000000208bfe         db  0x00 ; '.'
0000000000208bff         db  0x00 ; '.'
0000000000208c00         db  0xa1 ; '.'
0000000000208c01         db  0x62 ; 'b'
0000000000208c02         db  0x00 ; '.'
0000000000208c03         db  0x00 ; '.'
0000000000208c04         db  0x00 ; '.'
0000000000208c05         db  0x00 ; '.'
0000000000208c06         db  0x00 ; '.'
0000000000208c07         db  0x00 ; '.'
0000000000208c08         db  0x7a ; 'z'
0000000000208c09         db  0x60 ; '`'
0000000000208c0a         db  0x00 ; '.'
0000000000208c0b         db  0x00 ; '.'
0000000000208c0c         db  0x00 ; '.'
0000000000208c0d         db  0x00 ; '.'
0000000000208c0e         db  0x00 ; '.'
0000000000208c0f         db  0x00 ; '.'
0000000000208c10         db  0xb5 ; '.'
0000000000208c11         db  0x62 ; 'b'
0000000000208c12         db  0x00 ; '.'
0000000000208c13         db  0x00 ; '.'
0000000000208c14         db  0x00 ; '.'
0000000000208c15         db  0x00 ; '.'
0000000000208c16         db  0x00 ; '.'
0000000000208c17         db  0x00 ; '.'
0000000000208c18         db  0x9a ; '.'
0000000000208c19         db  0x62 ; 'b'
0000000000208c1a         db  0x00 ; '.'
0000000000208c1b         db  0x00 ; '.'
0000000000208c1c         db  0x00 ; '.'
0000000000208c1d         db  0x00 ; '.'
0000000000208c1e         db  0x00 ; '.'
0000000000208c1f         db  0x00 ; '.'
0000000000208c20         db  0x35 ; '5'
0000000000208c21         db  0x61 ; 'a'
0000000000208c22         db  0x00 ; '.'
0000000000208c23         db  0x00 ; '.'
0000000000208c24         db  0x00 ; '.'
0000000000208c25         db  0x00 ; '.'
0000000000208c26         db  0x00 ; '.'
0000000000208c27         db  0x00 ; '.'
0000000000208c28         db  0xbd ; '.'
0000000000208c29         db  0x62 ; 'b'
0000000000208c2a         db  0x00 ; '.'
0000000000208c2b         db  0x00 ; '.'
0000000000208c2c         db  0x00 ; '.'
0000000000208c2d         db  0x00 ; '.'
0000000000208c2e         db  0x00 ; '.'
0000000000208c2f         db  0x00 ; '.'
0000000000208c30         db  0x00 ; '.'
0000000000208c31         db  0x00 ; '.'
0000000000208c32         db  0x00 ; '.'
0000000000208c33         db  0x00 ; '.'
0000000000208c34         db  0x00 ; '.'
0000000000208c35         db  0x00 ; '.'
0000000000208c36         db  0x00 ; '.'
0000000000208c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x208c38; 0x208e28[ (496 bytes)
        ; File offset : [35896; 36392[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000208c38         db  0x01 ; '.'
0000000000208c39         db  0x00 ; '.'
0000000000208c3a         db  0x00 ; '.'
0000000000208c3b         db  0x00 ; '.'
0000000000208c3c         db  0x00 ; '.'
0000000000208c3d         db  0x00 ; '.'
0000000000208c3e         db  0x00 ; '.'
0000000000208c3f         db  0x00 ; '.'
0000000000208c40         db  0x01 ; '.'
0000000000208c41         db  0x00 ; '.'
0000000000208c42         db  0x00 ; '.'
0000000000208c43         db  0x00 ; '.'
0000000000208c44         db  0x00 ; '.'
0000000000208c45         db  0x00 ; '.'
0000000000208c46         db  0x00 ; '.'
0000000000208c47         db  0x00 ; '.'
0000000000208c48         db  0x0c ; '.'
0000000000208c49         db  0x00 ; '.'
0000000000208c4a         db  0x00 ; '.'
0000000000208c4b         db  0x00 ; '.'
0000000000208c4c         db  0x00 ; '.'
0000000000208c4d         db  0x00 ; '.'
0000000000208c4e         db  0x00 ; '.'
0000000000208c4f         db  0x00 ; '.'
0000000000208c50         db  0x58 ; 'X'
0000000000208c51         db  0x14 ; '.'
0000000000208c52         db  0x00 ; '.'
0000000000208c53         db  0x00 ; '.'
0000000000208c54         db  0x00 ; '.'
0000000000208c55         db  0x00 ; '.'
0000000000208c56         db  0x00 ; '.'
0000000000208c57         db  0x00 ; '.'
0000000000208c58         db  0x0d ; '.'
0000000000208c59         db  0x00 ; '.'
0000000000208c5a         db  0x00 ; '.'
0000000000208c5b         db  0x00 ; '.'
0000000000208c5c         db  0x00 ; '.'
0000000000208c5d         db  0x00 ; '.'
0000000000208c5e         db  0x00 ; '.'
0000000000208c5f         db  0x00 ; '.'
0000000000208c60         db  0x60 ; '`'
0000000000208c61         db  0x5a ; 'Z'
0000000000208c62         db  0x00 ; '.'
0000000000208c63         db  0x00 ; '.'
0000000000208c64         db  0x00 ; '.'
0000000000208c65         db  0x00 ; '.'
0000000000208c66         db  0x00 ; '.'
0000000000208c67         db  0x00 ; '.'
0000000000208c68         db  0x19 ; '.'
0000000000208c69         db  0x00 ; '.'
0000000000208c6a         db  0x00 ; '.'
0000000000208c6b         db  0x00 ; '.'
0000000000208c6c         db  0x00 ; '.'
0000000000208c6d         db  0x00 ; '.'
0000000000208c6e         db  0x00 ; '.'
0000000000208c6f         db  0x00 ; '.'
0000000000208c70         db  0xd0 ; '.'
0000000000208c71         db  0x8a ; '.'
0000000000208c72         db  0x20 ; ' '
0000000000208c73         db  0x00 ; '.'
0000000000208c74         db  0x00 ; '.'
0000000000208c75         db  0x00 ; '.'
0000000000208c76         db  0x00 ; '.'
0000000000208c77         db  0x00 ; '.'
0000000000208c78         db  0x1b ; '.'
0000000000208c79         db  0x00 ; '.'
0000000000208c7a         db  0x00 ; '.'
0000000000208c7b         db  0x00 ; '.'
0000000000208c7c         db  0x00 ; '.'
0000000000208c7d         db  0x00 ; '.'
0000000000208c7e         db  0x00 ; '.'
0000000000208c7f         db  0x00 ; '.'
0000000000208c80         db  0x08 ; '.'
0000000000208c81         db  0x00 ; '.'
0000000000208c82         db  0x00 ; '.'
0000000000208c83         db  0x00 ; '.'
0000000000208c84         db  0x00 ; '.'
0000000000208c85         db  0x00 ; '.'
0000000000208c86         db  0x00 ; '.'
0000000000208c87         db  0x00 ; '.'
0000000000208c88         db  0x1a ; '.'
0000000000208c89         db  0x00 ; '.'
0000000000208c8a         db  0x00 ; '.'
0000000000208c8b         db  0x00 ; '.'
0000000000208c8c         db  0x00 ; '.'
0000000000208c8d         db  0x00 ; '.'
0000000000208c8e         db  0x00 ; '.'
0000000000208c8f         db  0x00 ; '.'
0000000000208c90         db  0xd8 ; '.'
0000000000208c91         db  0x8a ; '.'
0000000000208c92         db  0x20 ; ' '
0000000000208c93         db  0x00 ; '.'
0000000000208c94         db  0x00 ; '.'
0000000000208c95         db  0x00 ; '.'
0000000000208c96         db  0x00 ; '.'
0000000000208c97         db  0x00 ; '.'
0000000000208c98         db  0x1c ; '.'
0000000000208c99         db  0x00 ; '.'
0000000000208c9a         db  0x00 ; '.'
0000000000208c9b         db  0x00 ; '.'
0000000000208c9c         db  0x00 ; '.'
0000000000208c9d         db  0x00 ; '.'
0000000000208c9e         db  0x00 ; '.'
0000000000208c9f         db  0x00 ; '.'
0000000000208ca0         db  0x08 ; '.'
0000000000208ca1         db  0x00 ; '.'
0000000000208ca2         db  0x00 ; '.'
0000000000208ca3         db  0x00 ; '.'
0000000000208ca4         db  0x00 ; '.'
0000000000208ca5         db  0x00 ; '.'
0000000000208ca6         db  0x00 ; '.'
0000000000208ca7         db  0x00 ; '.'
0000000000208ca8         db  0xf5 ; '.'
0000000000208ca9         db  0xfe ; '.'
0000000000208caa         db  0xff ; '.'
0000000000208cab         db  0x6f ; 'o'
0000000000208cac         db  0x00 ; '.'
0000000000208cad         db  0x00 ; '.'
0000000000208cae         db  0x00 ; '.'
0000000000208caf         db  0x00 ; '.'
0000000000208cb0         db  0x98 ; '.'
0000000000208cb1         db  0x02 ; '.'
0000000000208cb2         db  0x00 ; '.'
0000000000208cb3         db  0x00 ; '.'
0000000000208cb4         db  0x00 ; '.'
0000000000208cb5         db  0x00 ; '.'
0000000000208cb6         db  0x00 ; '.'
0000000000208cb7         db  0x00 ; '.'
0000000000208cb8         db  0x05 ; '.'
0000000000208cb9         db  0x00 ; '.'
0000000000208cba         db  0x00 ; '.'
0000000000208cbb         db  0x00 ; '.'
0000000000208cbc         db  0x00 ; '.'
0000000000208cbd         db  0x00 ; '.'
0000000000208cbe         db  0x00 ; '.'
0000000000208cbf         db  0x00 ; '.'
0000000000208cc0         db  0xc8 ; '.'
0000000000208cc1         db  0x08 ; '.'
0000000000208cc2         db  0x00 ; '.'
0000000000208cc3         db  0x00 ; '.'
0000000000208cc4         db  0x00 ; '.'
0000000000208cc5         db  0x00 ; '.'
0000000000208cc6         db  0x00 ; '.'
0000000000208cc7         db  0x00 ; '.'
0000000000208cc8         db  0x06 ; '.'
0000000000208cc9         db  0x00 ; '.'
0000000000208cca         db  0x00 ; '.'
0000000000208ccb         db  0x00 ; '.'
0000000000208ccc         db  0x00 ; '.'
0000000000208ccd         db  0x00 ; '.'
0000000000208cce         db  0x00 ; '.'
0000000000208ccf         db  0x00 ; '.'
0000000000208cd0         db  0xe0 ; '.'
0000000000208cd1         db  0x02 ; '.'
0000000000208cd2         db  0x00 ; '.'
0000000000208cd3         db  0x00 ; '.'
0000000000208cd4         db  0x00 ; '.'
0000000000208cd5         db  0x00 ; '.'
0000000000208cd6         db  0x00 ; '.'
0000000000208cd7         db  0x00 ; '.'
0000000000208cd8         db  0x0a ; '.'
0000000000208cd9         db  0x00 ; '.'
0000000000208cda         db  0x00 ; '.'
0000000000208cdb         db  0x00 ; '.'
0000000000208cdc         db  0x00 ; '.'
0000000000208cdd         db  0x00 ; '.'
0000000000208cde         db  0x00 ; '.'
0000000000208cdf         db  0x00 ; '.'
0000000000208ce0         db  0xcd ; '.'
0000000000208ce1         db  0x02 ; '.'
0000000000208ce2         db  0x00 ; '.'
0000000000208ce3         db  0x00 ; '.'
0000000000208ce4         db  0x00 ; '.'
0000000000208ce5         db  0x00 ; '.'
0000000000208ce6         db  0x00 ; '.'
0000000000208ce7         db  0x00 ; '.'
0000000000208ce8         db  0x0b ; '.'
0000000000208ce9         db  0x00 ; '.'
0000000000208cea         db  0x00 ; '.'
0000000000208ceb         db  0x00 ; '.'
0000000000208cec         db  0x00 ; '.'
0000000000208ced         db  0x00 ; '.'
0000000000208cee         db  0x00 ; '.'
0000000000208cef         db  0x00 ; '.'
0000000000208cf0         db  0x18 ; '.'
0000000000208cf1         db  0x00 ; '.'
0000000000208cf2         db  0x00 ; '.'
0000000000208cf3         db  0x00 ; '.'
0000000000208cf4         db  0x00 ; '.'
0000000000208cf5         db  0x00 ; '.'
0000000000208cf6         db  0x00 ; '.'
0000000000208cf7         db  0x00 ; '.'
0000000000208cf8         db  0x15 ; '.'
0000000000208cf9         db  0x00 ; '.'
0000000000208cfa         db  0x00 ; '.'
0000000000208cfb         db  0x00 ; '.'
0000000000208cfc         db  0x00 ; '.'
0000000000208cfd         db  0x00 ; '.'
0000000000208cfe         db  0x00 ; '.'
0000000000208cff         db  0x00 ; '.'
0000000000208d00         db  0x00 ; '.'
0000000000208d01         db  0x00 ; '.'
0000000000208d02         db  0x00 ; '.'
0000000000208d03         db  0x00 ; '.'
0000000000208d04         db  0x00 ; '.'
0000000000208d05         db  0x00 ; '.'
0000000000208d06         db  0x00 ; '.'
0000000000208d07         db  0x00 ; '.'
0000000000208d08         db  0x03 ; '.'
0000000000208d09         db  0x00 ; '.'
0000000000208d0a         db  0x00 ; '.'
0000000000208d0b         db  0x00 ; '.'
0000000000208d0c         db  0x00 ; '.'
0000000000208d0d         db  0x00 ; '.'
0000000000208d0e         db  0x00 ; '.'
0000000000208d0f         db  0x00 ; '.'
0000000000208d10         db  0x28 ; '('
0000000000208d11         db  0x8e ; '.'
0000000000208d12         db  0x20 ; ' '
0000000000208d13         db  0x00 ; '.'
0000000000208d14         db  0x00 ; '.'
0000000000208d15         db  0x00 ; '.'
0000000000208d16         db  0x00 ; '.'
0000000000208d17         db  0x00 ; '.'
0000000000208d18         db  0x02 ; '.'
0000000000208d19         db  0x00 ; '.'
0000000000208d1a         db  0x00 ; '.'
0000000000208d1b         db  0x00 ; '.'
0000000000208d1c         db  0x00 ; '.'
0000000000208d1d         db  0x00 ; '.'
0000000000208d1e         db  0x00 ; '.'
0000000000208d1f         db  0x00 ; '.'
0000000000208d20         db  0x80 ; '.'
0000000000208d21         db  0x04 ; '.'
0000000000208d22         db  0x00 ; '.'
0000000000208d23         db  0x00 ; '.'
0000000000208d24         db  0x00 ; '.'
0000000000208d25         db  0x00 ; '.'
0000000000208d26         db  0x00 ; '.'
0000000000208d27         db  0x00 ; '.'
0000000000208d28         db  0x14 ; '.'
0000000000208d29         db  0x00 ; '.'
0000000000208d2a         db  0x00 ; '.'
0000000000208d2b         db  0x00 ; '.'
0000000000208d2c         db  0x00 ; '.'
0000000000208d2d         db  0x00 ; '.'
0000000000208d2e         db  0x00 ; '.'
0000000000208d2f         db  0x00 ; '.'
0000000000208d30         db  0x07 ; '.'
0000000000208d31         db  0x00 ; '.'
0000000000208d32         db  0x00 ; '.'
0000000000208d33         db  0x00 ; '.'
0000000000208d34         db  0x00 ; '.'
0000000000208d35         db  0x00 ; '.'
0000000000208d36         db  0x00 ; '.'
0000000000208d37         db  0x00 ; '.'
0000000000208d38         db  0x17 ; '.'
0000000000208d39         db  0x00 ; '.'
0000000000208d3a         db  0x00 ; '.'
0000000000208d3b         db  0x00 ; '.'
0000000000208d3c         db  0x00 ; '.'
0000000000208d3d         db  0x00 ; '.'
0000000000208d3e         db  0x00 ; '.'
0000000000208d3f         db  0x00 ; '.'
0000000000208d40         db  0xd8 ; '.'
0000000000208d41         db  0x0f ; '.'
0000000000208d42         db  0x00 ; '.'
0000000000208d43         db  0x00 ; '.'
0000000000208d44         db  0x00 ; '.'
0000000000208d45         db  0x00 ; '.'
0000000000208d46         db  0x00 ; '.'
0000000000208d47         db  0x00 ; '.'
0000000000208d48         db  0x07 ; '.'
0000000000208d49         db  0x00 ; '.'
0000000000208d4a         db  0x00 ; '.'
0000000000208d4b         db  0x00 ; '.'
0000000000208d4c         db  0x00 ; '.'
0000000000208d4d         db  0x00 ; '.'
0000000000208d4e         db  0x00 ; '.'
0000000000208d4f         db  0x00 ; '.'
0000000000208d50         db  0x78 ; 'x'
0000000000208d51         db  0x0c ; '.'
0000000000208d52         db  0x00 ; '.'
0000000000208d53         db  0x00 ; '.'
0000000000208d54         db  0x00 ; '.'
0000000000208d55         db  0x00 ; '.'
0000000000208d56         db  0x00 ; '.'
0000000000208d57         db  0x00 ; '.'
0000000000208d58         db  0x08 ; '.'
0000000000208d59         db  0x00 ; '.'
0000000000208d5a         db  0x00 ; '.'
0000000000208d5b         db  0x00 ; '.'
0000000000208d5c         db  0x00 ; '.'
0000000000208d5d         db  0x00 ; '.'
0000000000208d5e         db  0x00 ; '.'
0000000000208d5f         db  0x00 ; '.'
0000000000208d60         db  0x60 ; '`'
0000000000208d61         db  0x03 ; '.'
0000000000208d62         db  0x00 ; '.'
0000000000208d63         db  0x00 ; '.'
0000000000208d64         db  0x00 ; '.'
0000000000208d65         db  0x00 ; '.'
0000000000208d66         db  0x00 ; '.'
0000000000208d67         db  0x00 ; '.'
0000000000208d68         db  0x09 ; '.'
0000000000208d69         db  0x00 ; '.'
0000000000208d6a         db  0x00 ; '.'
0000000000208d6b         db  0x00 ; '.'
0000000000208d6c         db  0x00 ; '.'
0000000000208d6d         db  0x00 ; '.'
0000000000208d6e         db  0x00 ; '.'
0000000000208d6f         db  0x00 ; '.'
0000000000208d70         db  0x18 ; '.'
0000000000208d71         db  0x00 ; '.'
0000000000208d72         db  0x00 ; '.'
0000000000208d73         db  0x00 ; '.'
0000000000208d74         db  0x00 ; '.'
0000000000208d75         db  0x00 ; '.'
0000000000208d76         db  0x00 ; '.'
0000000000208d77         db  0x00 ; '.'
0000000000208d78         db  0x1e ; '.'
0000000000208d79         db  0x00 ; '.'
0000000000208d7a         db  0x00 ; '.'
0000000000208d7b         db  0x00 ; '.'
0000000000208d7c         db  0x00 ; '.'
0000000000208d7d         db  0x00 ; '.'
0000000000208d7e         db  0x00 ; '.'
0000000000208d7f         db  0x00 ; '.'
0000000000208d80         db  0x08 ; '.'
0000000000208d81         db  0x00 ; '.'
0000000000208d82         db  0x00 ; '.'
0000000000208d83         db  0x00 ; '.'
0000000000208d84         db  0x00 ; '.'
0000000000208d85         db  0x00 ; '.'
0000000000208d86         db  0x00 ; '.'
0000000000208d87         db  0x00 ; '.'
0000000000208d88         db  0xfb ; '.'
0000000000208d89         db  0xff ; '.'
0000000000208d8a         db  0xff ; '.'
0000000000208d8b         db  0x6f ; 'o'
0000000000208d8c         db  0x00 ; '.'
0000000000208d8d         db  0x00 ; '.'
0000000000208d8e         db  0x00 ; '.'
0000000000208d8f         db  0x00 ; '.'
0000000000208d90         db  0x01 ; '.'
0000000000208d91         db  0x00 ; '.'
0000000000208d92         db  0x00 ; '.'
0000000000208d93         db  0x08 ; '.'
0000000000208d94         db  0x00 ; '.'
0000000000208d95         db  0x00 ; '.'
0000000000208d96         db  0x00 ; '.'
0000000000208d97         db  0x00 ; '.'
0000000000208d98         db  0xfe ; '.'
0000000000208d99         db  0xff ; '.'
0000000000208d9a         db  0xff ; '.'
0000000000208d9b         db  0x6f ; 'o'
0000000000208d9c         db  0x00 ; '.'
0000000000208d9d         db  0x00 ; '.'
0000000000208d9e         db  0x00 ; '.'
0000000000208d9f         db  0x00 ; '.'
0000000000208da0         db  0x18 ; '.'
0000000000208da1         db  0x0c ; '.'
0000000000208da2         db  0x00 ; '.'
0000000000208da3         db  0x00 ; '.'
0000000000208da4         db  0x00 ; '.'
0000000000208da5         db  0x00 ; '.'
0000000000208da6         db  0x00 ; '.'
0000000000208da7         db  0x00 ; '.'
0000000000208da8         db  0xff ; '.'
0000000000208da9         db  0xff ; '.'
0000000000208daa         db  0xff ; '.'
0000000000208dab         db  0x6f ; 'o'
0000000000208dac         db  0x00 ; '.'
0000000000208dad         db  0x00 ; '.'
0000000000208dae         db  0x00 ; '.'
0000000000208daf         db  0x00 ; '.'
0000000000208db0         db  0x01 ; '.'
0000000000208db1         db  0x00 ; '.'
0000000000208db2         db  0x00 ; '.'
0000000000208db3         db  0x00 ; '.'
0000000000208db4         db  0x00 ; '.'
0000000000208db5         db  0x00 ; '.'
0000000000208db6         db  0x00 ; '.'
0000000000208db7         db  0x00 ; '.'
0000000000208db8         db  0xf0 ; '.'
0000000000208db9         db  0xff ; '.'
0000000000208dba         db  0xff ; '.'
0000000000208dbb         db  0x6f ; 'o'
0000000000208dbc         db  0x00 ; '.'
0000000000208dbd         db  0x00 ; '.'
0000000000208dbe         db  0x00 ; '.'
0000000000208dbf         db  0x00 ; '.'
0000000000208dc0         db  0x96 ; '.'
0000000000208dc1         db  0x0b ; '.'
0000000000208dc2         db  0x00 ; '.'
0000000000208dc3         db  0x00 ; '.'
0000000000208dc4         db  0x00 ; '.'
0000000000208dc5         db  0x00 ; '.'
0000000000208dc6         db  0x00 ; '.'
0000000000208dc7         db  0x00 ; '.'
0000000000208dc8         db  0xf9 ; '.'
0000000000208dc9         db  0xff ; '.'
0000000000208dca         db  0xff ; '.'
0000000000208dcb         db  0x6f ; 'o'
0000000000208dcc         db  0x00 ; '.'
0000000000208dcd         db  0x00 ; '.'
0000000000208dce         db  0x00 ; '.'
0000000000208dcf         db  0x00 ; '.'
0000000000208dd0         db  0x18 ; '.'
0000000000208dd1         db  0x00 ; '.'
0000000000208dd2         db  0x00 ; '.'
0000000000208dd3         db  0x00 ; '.'
0000000000208dd4         db  0x00 ; '.'
0000000000208dd5         db  0x00 ; '.'
0000000000208dd6         db  0x00 ; '.'
0000000000208dd7         db  0x00 ; '.'
0000000000208dd8         db  0x00 ; '.'
0000000000208dd9         db  0x00 ; '.'
0000000000208dda         db  0x00 ; '.'
0000000000208ddb         db  0x00 ; '.'
0000000000208ddc         db  0x00 ; '.'
0000000000208ddd         db  0x00 ; '.'
0000000000208dde         db  0x00 ; '.'
0000000000208ddf         db  0x00 ; '.'
0000000000208de0         db  0x00 ; '.'
0000000000208de1         db  0x00 ; '.'
0000000000208de2         db  0x00 ; '.'
0000000000208de3         db  0x00 ; '.'
0000000000208de4         db  0x00 ; '.'
0000000000208de5         db  0x00 ; '.'
0000000000208de6         db  0x00 ; '.'
0000000000208de7         db  0x00 ; '.'
0000000000208de8         db  0x00 ; '.'
0000000000208de9         db  0x00 ; '.'
0000000000208dea         db  0x00 ; '.'
0000000000208deb         db  0x00 ; '.'
0000000000208dec         db  0x00 ; '.'
0000000000208ded         db  0x00 ; '.'
0000000000208dee         db  0x00 ; '.'
0000000000208def         db  0x00 ; '.'
0000000000208df0         db  0x00 ; '.'
0000000000208df1         db  0x00 ; '.'
0000000000208df2         db  0x00 ; '.'
0000000000208df3         db  0x00 ; '.'
0000000000208df4         db  0x00 ; '.'
0000000000208df5         db  0x00 ; '.'
0000000000208df6         db  0x00 ; '.'
0000000000208df7         db  0x00 ; '.'
0000000000208df8         db  0x00 ; '.'
0000000000208df9         db  0x00 ; '.'
0000000000208dfa         db  0x00 ; '.'
0000000000208dfb         db  0x00 ; '.'
0000000000208dfc         db  0x00 ; '.'
0000000000208dfd         db  0x00 ; '.'
0000000000208dfe         db  0x00 ; '.'
0000000000208dff         db  0x00 ; '.'
0000000000208e00         db  0x00 ; '.'
0000000000208e01         db  0x00 ; '.'
0000000000208e02         db  0x00 ; '.'
0000000000208e03         db  0x00 ; '.'
0000000000208e04         db  0x00 ; '.'
0000000000208e05         db  0x00 ; '.'
0000000000208e06         db  0x00 ; '.'
0000000000208e07         db  0x00 ; '.'
0000000000208e08         db  0x00 ; '.'
0000000000208e09         db  0x00 ; '.'
0000000000208e0a         db  0x00 ; '.'
0000000000208e0b         db  0x00 ; '.'
0000000000208e0c         db  0x00 ; '.'
0000000000208e0d         db  0x00 ; '.'
0000000000208e0e         db  0x00 ; '.'
0000000000208e0f         db  0x00 ; '.'
0000000000208e10         db  0x00 ; '.'
0000000000208e11         db  0x00 ; '.'
0000000000208e12         db  0x00 ; '.'
0000000000208e13         db  0x00 ; '.'
0000000000208e14         db  0x00 ; '.'
0000000000208e15         db  0x00 ; '.'
0000000000208e16         db  0x00 ; '.'
0000000000208e17         db  0x00 ; '.'
0000000000208e18         db  0x00 ; '.'
0000000000208e19         db  0x00 ; '.'
0000000000208e1a         db  0x00 ; '.'
0000000000208e1b         db  0x00 ; '.'
0000000000208e1c         db  0x00 ; '.'
0000000000208e1d         db  0x00 ; '.'
0000000000208e1e         db  0x00 ; '.'
0000000000208e1f         db  0x00 ; '.'
0000000000208e20         db  0x00 ; '.'
0000000000208e21         db  0x00 ; '.'
0000000000208e22         db  0x00 ; '.'
0000000000208e23         db  0x00 ; '.'
0000000000208e24         db  0x00 ; '.'
0000000000208e25         db  0x00 ; '.'
0000000000208e26         db  0x00 ; '.'
0000000000208e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x208e28; 0x208fe8[ (448 bytes)
        ; File offset : [36392; 36840[ (448 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000208e28         db  0x38 ; '8'
0000000000208e29         db  0x8c ; '.'
0000000000208e2a         db  0x20 ; ' '
0000000000208e2b         db  0x00 ; '.'
0000000000208e2c         db  0x00 ; '.'
0000000000208e2d         db  0x00 ; '.'
0000000000208e2e         db  0x00 ; '.'
0000000000208e2f         db  0x00 ; '.'
                     qword_208e30:
0000000000208e30         dq         0x0000000000000000                          ; DATA XREF=0x1470
0000000000208e38         db  0x00 ; '.'                                         ; DATA XREF=0x1476
0000000000208e39         db  0x00 ; '.'
0000000000208e3a         db  0x00 ; '.'
0000000000208e3b         db  0x00 ; '.'
0000000000208e3c         db  0x00 ; '.'
0000000000208e3d         db  0x00 ; '.'
0000000000208e3e         db  0x00 ; '.'
0000000000208e3f         db  0x00 ; '.'
                     __uflow@GOT:        // __uflow
0000000000208e40         dq         0x0000000000209270                          ; DATA XREF=j___uflow
                     free@GOT:        // free
0000000000208e48         dq         0x0000000000209278                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000208e50         dq         0x0000000000209280                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000208e58         dq         0x0000000000209288                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000208e60         dq         0x0000000000209290                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000208e68         dq         0x00000000002092a0                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000208e70         dq         0x00000000002092a8                          ; DATA XREF=j___fpending
                     fcntl@GOT:        // fcntl
0000000000208e78         dq         0x00000000002092b0                          ; DATA XREF=j_fcntl
                     textdomain@GOT:        // textdomain
0000000000208e80         dq         0x00000000002092b8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000208e88         dq         0x00000000002092c0                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000208e90         dq         0x00000000002092c8                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000208e98         dq         0x00000000002092d0                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000208ea0         dq         0x00000000002092d8                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000208ea8         dq         0x00000000002092e0                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000208eb0         dq         0x00000000002092e8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000208eb8         dq         0x00000000002092f0                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000208ec0         dq         0x00000000002092f8                          ; DATA XREF=j_mbrtowc
                     strrchr@GOT:        // strrchr
0000000000208ec8         dq         0x0000000000209300                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000208ed0         dq         0x0000000000209308                          ; DATA XREF=j_lseek
                     memset@GOT:        // memset
0000000000208ed8         dq         0x0000000000209310                          ; DATA XREF=j_memset
                     close@GOT:        // close
0000000000208ee0         dq         0x0000000000209318                          ; DATA XREF=j_close
                     posix_fadvise@GOT:        // posix_fadvise
0000000000208ee8         dq         0x0000000000209320                          ; DATA XREF=j_posix_fadvise
                     memcmp@GOT:        // memcmp
0000000000208ef0         dq         0x0000000000209330                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000208ef8         dq         0x0000000000209338                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000208f00         dq         0x0000000000209340                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000208f08         dq         0x0000000000209348                          ; DATA XREF=j_strcmp
                     memcpy@GOT:        // memcpy
0000000000208f10         dq         0x0000000000209358                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000208f18         dq         0x0000000000209360                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000208f20         dq         0x0000000000209368                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000208f28         dq         0x0000000000209370                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000208f30         dq         0x0000000000209378                          ; DATA XREF=j_nl_langinfo
                     strcoll@GOT:        // strcoll
0000000000208f38         dq         0x0000000000209380                          ; DATA XREF=j_strcoll
                     __freading@GOT:        // __freading
0000000000208f40         dq         0x0000000000209388                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000208f48         dq         0x0000000000209390                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000208f50         dq         0x0000000000209398                          ; DATA XREF=j_realloc
                     fdopen@GOT:        // fdopen
0000000000208f58         dq         0x00000000002093a0                          ; DATA XREF=j_fdopen
                     setlocale@GOT:        // setlocale
0000000000208f60         dq         0x00000000002093a8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000208f68         dq         0x00000000002093b0                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000208f70         dq         0x00000000002093b8                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000208f78         dq         0x00000000002093c0                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000208f80         dq         0x00000000002093c8                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000208f88         dq         0x00000000002093d0                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000208f90         dq         0x00000000002093d8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000208f98         dq         0x00000000002093e0                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000208fa0         dq         0x00000000002093e8                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000208fa8         dq         0x00000000002093f8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000208fb0         dq         0x0000000000209400                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000208fb8         dq         0x0000000000209410                          ; DATA XREF=j___ctype_b_loc
                     qword_208fc0:
0000000000208fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000208fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000208fc9         db  0x00 ; '.'
0000000000208fca         db  0x00 ; '.'
0000000000208fcb         db  0x00 ; '.'
0000000000208fcc         db  0x00 ; '.'
0000000000208fcd         db  0x00 ; '.'
0000000000208fce         db  0x00 ; '.'
0000000000208fcf         db  0x00 ; '.'
                     qword_208fd0:
0000000000208fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_208fd8:
0000000000208fd8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_208fe0:
0000000000208fe0         dq         0x0000000000000000                          ; DATA XREF=j_qword_208fe0, __do_global_dtors_aux+9
0000000000208fe8         db  0x00 ; '.'
0000000000208fe9         db  0x00 ; '.'
0000000000208fea         db  0x00 ; '.'
0000000000208feb         db  0x00 ; '.'
0000000000208fec         db  0x00 ; '.'
0000000000208fed         db  0x00 ; '.'
0000000000208fee         db  0x00 ; '.'
0000000000208fef         db  0x00 ; '.'
0000000000208ff0         db  0x00 ; '.'
0000000000208ff1         db  0x00 ; '.'
0000000000208ff2         db  0x00 ; '.'
0000000000208ff3         db  0x00 ; '.'
0000000000208ff4         db  0x00 ; '.'
0000000000208ff5         db  0x00 ; '.'
0000000000208ff6         db  0x00 ; '.'
0000000000208ff7         db  0x00 ; '.'
0000000000208ff8         db  0x00 ; '.'
0000000000208ff9         db  0x00 ; '.'
0000000000208ffa         db  0x00 ; '.'
0000000000208ffb         db  0x00 ; '.'
0000000000208ffc         db  0x00 ; '.'
0000000000208ffd         db  0x00 ; '.'
0000000000208ffe         db  0x00 ; '.'
0000000000208fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x209000; 0x2090a0[ (160 bytes)
        ; File offset : [36864; 37024[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000209000         db  0x00 ; '.'
0000000000209001         db  0x00 ; '.'
0000000000209002         db  0x00 ; '.'
0000000000209003         db  0x00 ; '.'
0000000000209004         db  0x00 ; '.'
0000000000209005         db  0x00 ; '.'
0000000000209006         db  0x00 ; '.'
0000000000209007         db  0x00 ; '.'
                     __dso_handle:
0000000000209008         dq         0x0000000000209008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     delim:
0000000000209010         db         0x0a                                        ; DATA XREF=main+480, compare_files+244, compare_files+581, compare_files+1071
0000000000209011         align      8
                     col_sep:
0000000000209018         dq         0x00000000000061f8                          ; DATA XREF=main+385, main+413, writeline.isra.0+44, writeline.isra.0+153, compare_files+1099, compare_files+1127, compare_files+1152
                     Version:
0000000000209020         dq         0x00000000000061fa                          ; "8.31", DATA XREF=main+534
                     exit_failure:
0000000000209028         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23, collate_error+160
000000000020902c         db  0x00 ; '.'
000000000020902d         db  0x00 ; '.'
000000000020902e         db  0x00 ; '.'
000000000020902f         db  0x00 ; '.'
0000000000209030         db  0x00 ; '.'
0000000000209031         db  0x00 ; '.'
0000000000209032         db  0x00 ; '.'
0000000000209033         db  0x00 ; '.'
0000000000209034         db  0x00 ; '.'
0000000000209035         db  0x00 ; '.'
0000000000209036         db  0x00 ; '.'
0000000000209037         db  0x00 ; '.'
0000000000209038         db  0x00 ; '.'
0000000000209039         db  0x00 ; '.'
000000000020903a         db  0x00 ; '.'
000000000020903b         db  0x00 ; '.'
000000000020903c         db  0x00 ; '.'
000000000020903d         db  0x00 ; '.'
000000000020903e         db  0x00 ; '.'
000000000020903f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000209040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000209041         db  0x00 ; '.'
0000000000209042         db  0x00 ; '.'
0000000000209043         db  0x00 ; '.'
0000000000209044         db  0x00 ; '.'
0000000000209045         db  0x00 ; '.'
0000000000209046         db  0x00 ; '.'
0000000000209047         db  0x00 ; '.'
0000000000209048         db  0x00 ; '.'
0000000000209049         db  0x00 ; '.'
000000000020904a         db  0x00 ; '.'
000000000020904b         db  0x00 ; '.'
000000000020904c         db  0x00 ; '.'
000000000020904d         db  0x00 ; '.'
000000000020904e         db  0x00 ; '.'
000000000020904f         db  0x00 ; '.'
0000000000209050         db  0x00 ; '.'
0000000000209051         db  0x00 ; '.'
0000000000209052         db  0x00 ; '.'
0000000000209053         db  0x00 ; '.'
0000000000209054         db  0x00 ; '.'
0000000000209055         db  0x00 ; '.'
0000000000209056         db  0x00 ; '.'
0000000000209057         db  0x00 ; '.'
0000000000209058         db  0x00 ; '.'
0000000000209059         db  0x00 ; '.'
000000000020905a         db  0x00 ; '.'
000000000020905b         db  0x00 ; '.'
000000000020905c         db  0x00 ; '.'
000000000020905d         db  0x00 ; '.'
000000000020905e         db  0x00 ; '.'
000000000020905f         db  0x00 ; '.'
0000000000209060         db  0x00 ; '.'
0000000000209061         db  0x00 ; '.'
0000000000209062         db  0x00 ; '.'
0000000000209063         db  0x00 ; '.'
0000000000209064         db  0x00 ; '.'
0000000000209065         db  0x00 ; '.'
0000000000209066         db  0x00 ; '.'
0000000000209067         db  0x00 ; '.'
0000000000209068         db  0x00 ; '.'
0000000000209069         db  0x00 ; '.'
000000000020906a         db  0x00 ; '.'
000000000020906b         db  0x00 ; '.'
000000000020906c         db  0x00 ; '.'
000000000020906d         db  0x00 ; '.'
000000000020906e         db  0x00 ; '.'
000000000020906f         db  0x00 ; '.'
0000000000209070         db  0x00 ; '.'
0000000000209071         db  0x00 ; '.'
0000000000209072         db  0x00 ; '.'
0000000000209073         db  0x00 ; '.'
0000000000209074         db  0x00 ; '.'
0000000000209075         db  0x00 ; '.'
0000000000209076         db  0x00 ; '.'
0000000000209077         db  0x00 ; '.'
                     nslots:
0000000000209078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020907c         align      2
0000000000209082         db  0x20 ; ' '
0000000000209083         db  0x00 ; '.'
0000000000209084         db  0x00 ; '.'
0000000000209085         db  0x00 ; '.'
0000000000209086         db  0x00 ; '.'
0000000000209087         db  0x00 ; '.'
0000000000209088         db  0x00 ; '.'
0000000000209089         db  0x00 ; '.'
000000000020908a         db  0x00 ; '.'
000000000020908b         db  0x00 ; '.'
000000000020908c         db  0x00 ; '.'
000000000020908d         db  0x00 ; '.'
000000000020908e         db  0x00 ; '.'
000000000020908f         db  0x00 ; '.'
                     slotvec0:
0000000000209090         dq         1.26481e-321, 1.05449e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105


        ; Section .bss
        ; Range: [0x2090a0; 0x209260[ (448 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002090a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
00000000002090a1         db  0x00 ; '.'
00000000002090a2         db  0x00 ; '.'
00000000002090a3         db  0x00 ; '.'
00000000002090a4         db  0x00 ; '.'
00000000002090a5         db  0x00 ; '.'
00000000002090a6         db  0x00 ; '.'
00000000002090a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002090a8         db  0x00 ; '.'                                         ; DATA XREF=main+527, compare_files+471, compare_files+849, compare_files+912, compare_files+960, usage+125, usage+162, usage+199, usage+236, usage+273, usage+310
00000000002090a9         db  0x00 ; '.'
00000000002090aa         db  0x00 ; '.'
00000000002090ab         db  0x00 ; '.'
00000000002090ac         db  0x00 ; '.'
00000000002090ad         db  0x00 ; '.'
00000000002090ae         db  0x00 ; '.'
00000000002090af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
00000000002090b0         db  0x00 ; '.'                                         ; DATA XREF=compare_files+183
00000000002090b1         db  0x00 ; '.'
00000000002090b2         db  0x00 ; '.'
00000000002090b3         db  0x00 ; '.'
00000000002090b4         db  0x00 ; '.'
00000000002090b5         db  0x00 ; '.'
00000000002090b6         db  0x00 ; '.'
00000000002090b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002090b8         db  0x00 ; '.'                                         ; DATA XREF=main+595
00000000002090b9         db  0x00 ; '.'
00000000002090ba         db  0x00 ; '.'
00000000002090bb         db  0x00 ; '.'
00000000002090bc         db  0x00 ; '.'
00000000002090bd         db  0x00 ; '.'
00000000002090be         db  0x00 ; '.'
00000000002090bf         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002090c0         db  0x00 ; '.'                                         ; DATA XREF=main+376
00000000002090c1         db  0x00 ; '.'
00000000002090c2         db  0x00 ; '.'
00000000002090c3         db  0x00 ; '.'
00000000002090c4         db  0x00 ; '.'
00000000002090c5         db  0x00 ; '.'
00000000002090c6         db  0x00 ; '.'
00000000002090c7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002090c8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002090c9         db  0x00 ; '.'
00000000002090ca         db  0x00 ; '.'
00000000002090cb         db  0x00 ; '.'
00000000002090cc         db  0x00 ; '.'
00000000002090cd         db  0x00 ; '.'
00000000002090ce         db  0x00 ; '.'
00000000002090cf         db  0x00 ; '.'
00000000002090d0         db  0x00 ; '.'
00000000002090d1         db  0x00 ; '.'
00000000002090d2         db  0x00 ; '.'
00000000002090d3         db  0x00 ; '.'
00000000002090d4         db  0x00 ; '.'
00000000002090d5         db  0x00 ; '.'
00000000002090d6         db  0x00 ; '.'
00000000002090d7         db  0x00 ; '.'
00000000002090d8         db  0x00 ; '.'
00000000002090d9         db  0x00 ; '.'
00000000002090da         db  0x00 ; '.'
00000000002090db         db  0x00 ; '.'
00000000002090dc         db  0x00 ; '.'
00000000002090dd         db  0x00 ; '.'
00000000002090de         db  0x00 ; '.'
00000000002090df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002090e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002090e1         db  0x00 ; '.'
00000000002090e2         db  0x00 ; '.'
00000000002090e3         db  0x00 ; '.'
00000000002090e4         db  0x00 ; '.'
00000000002090e5         db  0x00 ; '.'
00000000002090e6         db  0x00 ; '.'
00000000002090e7         db  0x00 ; '.'
                     completed.7697:
00000000002090e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002090e9         db  0x00 ; '.'
00000000002090ea         db  0x00 ; '.'
00000000002090eb         db  0x00 ; '.'
00000000002090ec         db  0x00 ; '.'
00000000002090ed         db  0x00 ; '.'
00000000002090ee         db  0x00 ; '.'
00000000002090ef         db  0x00 ; '.'
                     col_sep_len:
00000000002090f0         db  0x00 ; '.'                                         ; DATA XREF=main+368, main+447, main+585, main+669, writeline.isra.0+51, writeline.isra.0+146
00000000002090f1         db  0x00 ; '.'
00000000002090f2         db  0x00 ; '.'
00000000002090f3         db  0x00 ; '.'
00000000002090f4         db  0x00 ; '.'
00000000002090f5         db  0x00 ; '.'
00000000002090f6         db  0x00 ; '.'
00000000002090f7         db  0x00 ; '.'
                     check_input_order:
00000000002090f8         db  0x00 ; '.'                                         ; DATA XREF=main+149, main+250, main+352, check_order.isra.1.part.2+93, compare_files+664, compare_files+770
00000000002090f9         db  0x00 ; '.'
00000000002090fa         db  0x00 ; '.'
00000000002090fb         db  0x00 ; '.'
                     total_option:
00000000002090fc         db  0x00 ; '.'                                         ; DATA XREF=main+159, main+338, compare_files+1044
                     issued_disorder_warning:
00000000002090fd         db  0x00 ; '.'                                         ; DATA XREF=main+142, main+633, check_order.isra.1.part.2+3
                     byte_2090fe:
00000000002090fe         db  0x00 ; '.'                                         ; DATA XREF=main+135, main+646
                     seen_unpairable:
00000000002090ff         db  0x00 ; '.'                                         ; DATA XREF=main+128, compare_files+680, compare_files+786, compare_files+861, compare_files+919, compare_files+969
                     both:
0000000000209100         db  0x00 ; '.'                                         ; DATA XREF=main+121, main+464, writeline.isra.0+23
                     only_file_2:
0000000000209101         db  0x00 ; '.'                                         ; DATA XREF=main+114, main+307, writeline.isra.0+68, writeline.isra.0+128
                     only_file_1:
0000000000209102         db  0x00 ; '.'                                         ; DATA XREF=main+107, main+496, writeline.isra.0+32, writeline.isra.0+112, writeline.isra.0+137
                     hard_LC_COLLATE:
0000000000209103         db  0x00 ; '.'                                         ; DATA XREF=main+96, check_order.isra.1.part.2+54, compare_files+398
0000000000209104         db  0x00 ; '.'
0000000000209105         db  0x00 ; '.'
0000000000209106         db  0x00 ; '.'
0000000000209107         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000209108         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000209109         db  0x00 ; '.'
000000000020910a         db  0x00 ; '.'
000000000020910b         db  0x00 ; '.'
000000000020910c         db  0x00 ; '.'
000000000020910d         db  0x00 ; '.'
000000000020910e         db  0x00 ; '.'
000000000020910f         db  0x00 ; '.'
                     file_name:
0000000000209110         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000209111         db  0x00 ; '.'
0000000000209112         db  0x00 ; '.'
0000000000209113         db  0x00 ; '.'
0000000000209114         db  0x00 ; '.'
0000000000209115         db  0x00 ; '.'
0000000000209116         db  0x00 ; '.'
0000000000209117         db  0x00 ; '.'
                     program_name:
0000000000209118         db  0x00 ; '.'                                         ; DATA XREF=usage+20, usage+532, set_program_name+109
0000000000209119         db  0x00 ; '.'
000000000020911a         db  0x00 ; '.'
000000000020911b         db  0x00 ; '.'
000000000020911c         db  0x00 ; '.'
000000000020911d         db  0x00 ; '.'
000000000020911e         db  0x00 ; '.'
000000000020911f         db  0x00 ; '.'
                     slot0:
0000000000209120         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000209121         db  0x00 ; '.'
0000000000209122         db  0x00 ; '.'
0000000000209123         db  0x00 ; '.'
0000000000209124         db  0x00 ; '.'
0000000000209125         db  0x00 ; '.'
0000000000209126         db  0x00 ; '.'
0000000000209127         db  0x00 ; '.'
0000000000209128         db  0x00 ; '.'
0000000000209129         db  0x00 ; '.'
000000000020912a         db  0x00 ; '.'
000000000020912b         db  0x00 ; '.'
000000000020912c         db  0x00 ; '.'
000000000020912d         db  0x00 ; '.'
000000000020912e         db  0x00 ; '.'
000000000020912f         db  0x00 ; '.'
0000000000209130         db  0x00 ; '.'
0000000000209131         db  0x00 ; '.'
0000000000209132         db  0x00 ; '.'
0000000000209133         db  0x00 ; '.'
0000000000209134         db  0x00 ; '.'
0000000000209135         db  0x00 ; '.'
0000000000209136         db  0x00 ; '.'
0000000000209137         db  0x00 ; '.'
0000000000209138         db  0x00 ; '.'
0000000000209139         db  0x00 ; '.'
000000000020913a         db  0x00 ; '.'
000000000020913b         db  0x00 ; '.'
000000000020913c         db  0x00 ; '.'
000000000020913d         db  0x00 ; '.'
000000000020913e         db  0x00 ; '.'
000000000020913f         db  0x00 ; '.'
0000000000209140         db  0x00 ; '.'
0000000000209141         db  0x00 ; '.'
0000000000209142         db  0x00 ; '.'
0000000000209143         db  0x00 ; '.'
0000000000209144         db  0x00 ; '.'
0000000000209145         db  0x00 ; '.'
0000000000209146         db  0x00 ; '.'
0000000000209147         db  0x00 ; '.'
0000000000209148         db  0x00 ; '.'
0000000000209149         db  0x00 ; '.'
000000000020914a         db  0x00 ; '.'
000000000020914b         db  0x00 ; '.'
000000000020914c         db  0x00 ; '.'
000000000020914d         db  0x00 ; '.'
000000000020914e         db  0x00 ; '.'
000000000020914f         db  0x00 ; '.'
0000000000209150         db  0x00 ; '.'
0000000000209151         db  0x00 ; '.'
0000000000209152         db  0x00 ; '.'
0000000000209153         db  0x00 ; '.'
0000000000209154         db  0x00 ; '.'
0000000000209155         db  0x00 ; '.'
0000000000209156         db  0x00 ; '.'
0000000000209157         db  0x00 ; '.'
0000000000209158         db  0x00 ; '.'
0000000000209159         db  0x00 ; '.'
000000000020915a         db  0x00 ; '.'
000000000020915b         db  0x00 ; '.'
000000000020915c         db  0x00 ; '.'
000000000020915d         db  0x00 ; '.'
000000000020915e         db  0x00 ; '.'
000000000020915f         db  0x00 ; '.'
0000000000209160         db  0x00 ; '.'
0000000000209161         db  0x00 ; '.'
0000000000209162         db  0x00 ; '.'
0000000000209163         db  0x00 ; '.'
0000000000209164         db  0x00 ; '.'
0000000000209165         db  0x00 ; '.'
0000000000209166         db  0x00 ; '.'
0000000000209167         db  0x00 ; '.'
0000000000209168         db  0x00 ; '.'
0000000000209169         db  0x00 ; '.'
000000000020916a         db  0x00 ; '.'
000000000020916b         db  0x00 ; '.'
000000000020916c         db  0x00 ; '.'
000000000020916d         db  0x00 ; '.'
000000000020916e         db  0x00 ; '.'
000000000020916f         db  0x00 ; '.'
0000000000209170         db  0x00 ; '.'
0000000000209171         db  0x00 ; '.'
0000000000209172         db  0x00 ; '.'
0000000000209173         db  0x00 ; '.'
0000000000209174         db  0x00 ; '.'
0000000000209175         db  0x00 ; '.'
0000000000209176         db  0x00 ; '.'
0000000000209177         db  0x00 ; '.'
0000000000209178         db  0x00 ; '.'
0000000000209179         db  0x00 ; '.'
000000000020917a         db  0x00 ; '.'
000000000020917b         db  0x00 ; '.'
000000000020917c         db  0x00 ; '.'
000000000020917d         db  0x00 ; '.'
000000000020917e         db  0x00 ; '.'
000000000020917f         db  0x00 ; '.'
0000000000209180         db  0x00 ; '.'
0000000000209181         db  0x00 ; '.'
0000000000209182         db  0x00 ; '.'
0000000000209183         db  0x00 ; '.'
0000000000209184         db  0x00 ; '.'
0000000000209185         db  0x00 ; '.'
0000000000209186         db  0x00 ; '.'
0000000000209187         db  0x00 ; '.'
0000000000209188         db  0x00 ; '.'
0000000000209189         db  0x00 ; '.'
000000000020918a         db  0x00 ; '.'
000000000020918b         db  0x00 ; '.'
000000000020918c         db  0x00 ; '.'
000000000020918d         db  0x00 ; '.'
000000000020918e         db  0x00 ; '.'
000000000020918f         db  0x00 ; '.'
0000000000209190         db  0x00 ; '.'
0000000000209191         db  0x00 ; '.'
0000000000209192         db  0x00 ; '.'
0000000000209193         db  0x00 ; '.'
0000000000209194         db  0x00 ; '.'
0000000000209195         db  0x00 ; '.'
0000000000209196         db  0x00 ; '.'
0000000000209197         db  0x00 ; '.'
0000000000209198         db  0x00 ; '.'
0000000000209199         db  0x00 ; '.'
000000000020919a         db  0x00 ; '.'
000000000020919b         db  0x00 ; '.'
000000000020919c         db  0x00 ; '.'
000000000020919d         db  0x00 ; '.'
000000000020919e         db  0x00 ; '.'
000000000020919f         db  0x00 ; '.'
00000000002091a0         db  0x00 ; '.'
00000000002091a1         db  0x00 ; '.'
00000000002091a2         db  0x00 ; '.'
00000000002091a3         db  0x00 ; '.'
00000000002091a4         db  0x00 ; '.'
00000000002091a5         db  0x00 ; '.'
00000000002091a6         db  0x00 ; '.'
00000000002091a7         db  0x00 ; '.'
00000000002091a8         db  0x00 ; '.'
00000000002091a9         db  0x00 ; '.'
00000000002091aa         db  0x00 ; '.'
00000000002091ab         db  0x00 ; '.'
00000000002091ac         db  0x00 ; '.'
00000000002091ad         db  0x00 ; '.'
00000000002091ae         db  0x00 ; '.'
00000000002091af         db  0x00 ; '.'
00000000002091b0         db  0x00 ; '.'
00000000002091b1         db  0x00 ; '.'
00000000002091b2         db  0x00 ; '.'
00000000002091b3         db  0x00 ; '.'
00000000002091b4         db  0x00 ; '.'
00000000002091b5         db  0x00 ; '.'
00000000002091b6         db  0x00 ; '.'
00000000002091b7         db  0x00 ; '.'
00000000002091b8         db  0x00 ; '.'
00000000002091b9         db  0x00 ; '.'
00000000002091ba         db  0x00 ; '.'
00000000002091bb         db  0x00 ; '.'
00000000002091bc         db  0x00 ; '.'
00000000002091bd         db  0x00 ; '.'
00000000002091be         db  0x00 ; '.'
00000000002091bf         db  0x00 ; '.'
00000000002091c0         db  0x00 ; '.'
00000000002091c1         db  0x00 ; '.'
00000000002091c2         db  0x00 ; '.'
00000000002091c3         db  0x00 ; '.'
00000000002091c4         db  0x00 ; '.'
00000000002091c5         db  0x00 ; '.'
00000000002091c6         db  0x00 ; '.'
00000000002091c7         db  0x00 ; '.'
00000000002091c8         db  0x00 ; '.'
00000000002091c9         db  0x00 ; '.'
00000000002091ca         db  0x00 ; '.'
00000000002091cb         db  0x00 ; '.'
00000000002091cc         db  0x00 ; '.'
00000000002091cd         db  0x00 ; '.'
00000000002091ce         db  0x00 ; '.'
00000000002091cf         db  0x00 ; '.'
00000000002091d0         db  0x00 ; '.'
00000000002091d1         db  0x00 ; '.'
00000000002091d2         db  0x00 ; '.'
00000000002091d3         db  0x00 ; '.'
00000000002091d4         db  0x00 ; '.'
00000000002091d5         db  0x00 ; '.'
00000000002091d6         db  0x00 ; '.'
00000000002091d7         db  0x00 ; '.'
00000000002091d8         db  0x00 ; '.'
00000000002091d9         db  0x00 ; '.'
00000000002091da         db  0x00 ; '.'
00000000002091db         db  0x00 ; '.'
00000000002091dc         db  0x00 ; '.'
00000000002091dd         db  0x00 ; '.'
00000000002091de         db  0x00 ; '.'
00000000002091df         db  0x00 ; '.'
00000000002091e0         db  0x00 ; '.'
00000000002091e1         db  0x00 ; '.'
00000000002091e2         db  0x00 ; '.'
00000000002091e3         db  0x00 ; '.'
00000000002091e4         db  0x00 ; '.'
00000000002091e5         db  0x00 ; '.'
00000000002091e6         db  0x00 ; '.'
00000000002091e7         db  0x00 ; '.'
00000000002091e8         db  0x00 ; '.'
00000000002091e9         db  0x00 ; '.'
00000000002091ea         db  0x00 ; '.'
00000000002091eb         db  0x00 ; '.'
00000000002091ec         db  0x00 ; '.'
00000000002091ed         db  0x00 ; '.'
00000000002091ee         db  0x00 ; '.'
00000000002091ef         db  0x00 ; '.'
00000000002091f0         db  0x00 ; '.'
00000000002091f1         db  0x00 ; '.'
00000000002091f2         db  0x00 ; '.'
00000000002091f3         db  0x00 ; '.'
00000000002091f4         db  0x00 ; '.'
00000000002091f5         db  0x00 ; '.'
00000000002091f6         db  0x00 ; '.'
00000000002091f7         db  0x00 ; '.'
00000000002091f8         db  0x00 ; '.'
00000000002091f9         db  0x00 ; '.'
00000000002091fa         db  0x00 ; '.'
00000000002091fb         db  0x00 ; '.'
00000000002091fc         db  0x00 ; '.'
00000000002091fd         db  0x00 ; '.'
00000000002091fe         db  0x00 ; '.'
00000000002091ff         db  0x00 ; '.'
0000000000209200         db  0x00 ; '.'
0000000000209201         db  0x00 ; '.'
0000000000209202         db  0x00 ; '.'
0000000000209203         db  0x00 ; '.'
0000000000209204         db  0x00 ; '.'
0000000000209205         db  0x00 ; '.'
0000000000209206         db  0x00 ; '.'
0000000000209207         db  0x00 ; '.'
0000000000209208         db  0x00 ; '.'
0000000000209209         db  0x00 ; '.'
000000000020920a         db  0x00 ; '.'
000000000020920b         db  0x00 ; '.'
000000000020920c         db  0x00 ; '.'
000000000020920d         db  0x00 ; '.'
000000000020920e         db  0x00 ; '.'
000000000020920f         db  0x00 ; '.'
0000000000209210         db  0x00 ; '.'
0000000000209211         db  0x00 ; '.'
0000000000209212         db  0x00 ; '.'
0000000000209213         db  0x00 ; '.'
0000000000209214         db  0x00 ; '.'
0000000000209215         db  0x00 ; '.'
0000000000209216         db  0x00 ; '.'
0000000000209217         db  0x00 ; '.'
0000000000209218         db  0x00 ; '.'
0000000000209219         db  0x00 ; '.'
000000000020921a         db  0x00 ; '.'
000000000020921b         db  0x00 ; '.'
000000000020921c         db  0x00 ; '.'
000000000020921d         db  0x00 ; '.'
000000000020921e         db  0x00 ; '.'
000000000020921f         db  0x00 ; '.'
                     default_quoting_options:
0000000000209220         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000209221         db  0x00 ; '.'
0000000000209222         db  0x00 ; '.'
0000000000209223         db  0x00 ; '.'
0000000000209224         db  0x00 ; '.'
0000000000209225         db  0x00 ; '.'
0000000000209226         db  0x00 ; '.'
0000000000209227         db  0x00 ; '.'
0000000000209228         db  0x00 ; '.'
0000000000209229         db  0x00 ; '.'
000000000020922a         db  0x00 ; '.'
000000000020922b         db  0x00 ; '.'
000000000020922c         db  0x00 ; '.'
000000000020922d         db  0x00 ; '.'
000000000020922e         db  0x00 ; '.'
000000000020922f         db  0x00 ; '.'
0000000000209230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000209231         db  0x00 ; '.'
0000000000209232         db  0x00 ; '.'
0000000000209233         db  0x00 ; '.'
0000000000209234         db  0x00 ; '.'
0000000000209235         db  0x00 ; '.'
0000000000209236         db  0x00 ; '.'
0000000000209237         db  0x00 ; '.'
0000000000209238         db  0x00 ; '.'
0000000000209239         db  0x00 ; '.'
000000000020923a         db  0x00 ; '.'
000000000020923b         db  0x00 ; '.'
000000000020923c         db  0x00 ; '.'
000000000020923d         db  0x00 ; '.'
000000000020923e         db  0x00 ; '.'
000000000020923f         db  0x00 ; '.'
0000000000209240         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000209241         db  0x00 ; '.'
0000000000209242         db  0x00 ; '.'
0000000000209243         db  0x00 ; '.'
0000000000209244         db  0x00 ; '.'
0000000000209245         db  0x00 ; '.'
0000000000209246         db  0x00 ; '.'
0000000000209247         db  0x00 ; '.'
0000000000209248         db  0x00 ; '.'
0000000000209249         db  0x00 ; '.'
000000000020924a         db  0x00 ; '.'
000000000020924b         db  0x00 ; '.'
000000000020924c         db  0x00 ; '.'
000000000020924d         db  0x00 ; '.'
000000000020924e         db  0x00 ; '.'
000000000020924f         db  0x00 ; '.'
                     qword_209250:
0000000000209250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000209251         db  0x00 ; '.'
0000000000209252         db  0x00 ; '.'
0000000000209253         db  0x00 ; '.'
0000000000209254         db  0x00 ; '.'
0000000000209255         db  0x00 ; '.'
0000000000209256         db  0x00 ; '.'
0000000000209257         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
0000000000209258         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
0000000000209259         db  0x00 ; '.'
000000000020925a         db  0x00 ; '.'
000000000020925b         db  0x00 ; '.'
000000000020925c         db  0x00 ; '.'
000000000020925d         db  0x00 ; '.'
000000000020925e         db  0x00 ; '.'
000000000020925f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x209270; 0x2095c0[ (848 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x209270; 0x412830[ (2135488 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __uflow:
0000000000209270         extern function code                                   ; DATA XREF=__uflow@GOT
                     free:
0000000000209278         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000209280         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000209288         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000209290         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000209298         extern function code
                     _exit:
00000000002092a0         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
00000000002092a8         extern function code                                   ; DATA XREF=__fpending@GOT
                     fcntl:
00000000002092b0         extern function code                                   ; DATA XREF=fcntl@GOT
                     textdomain:
00000000002092b8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
00000000002092c0         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
00000000002092c8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
00000000002092d0         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002092d8         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002092e0         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002092e8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002092f0         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002092f8         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strrchr:
0000000000209300         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
0000000000209308         extern function code                                   ; DATA XREF=lseek@GOT
                     memset:
0000000000209310         extern function code                                   ; DATA XREF=memset@GOT
                     close:
0000000000209318         extern function code                                   ; DATA XREF=close@GOT
                     posix_fadvise:
0000000000209320         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     __libc_start_main:
0000000000209328         extern function code
                     memcmp:
0000000000209330         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000209338         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000209340         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
0000000000209348         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
0000000000209350         extern function code
                     memcpy:
0000000000209358         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000209360         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
0000000000209368         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000209370         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000209378         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     strcoll:
0000000000209380         extern function code                                   ; DATA XREF=strcoll@GOT
                     __freading:
0000000000209388         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
0000000000209390         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
0000000000209398         extern function code                                   ; DATA XREF=realloc@GOT
                     fdopen:
00000000002093a0         extern function code                                   ; DATA XREF=fdopen@GOT
                     setlocale:
00000000002093a8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
00000000002093b0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
00000000002093b8         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
00000000002093c0         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
00000000002093c8         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
00000000002093d0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
00000000002093d8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
00000000002093e0         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
00000000002093e8         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
00000000002093f0         extern function code
                     mbsinit:
00000000002093f8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
0000000000209400         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000209408         extern function code
                     __ctype_b_loc:
0000000000209410         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __uflow@@GLIBC_2.2.5:
0000000000209418         extern function code
                     free@@GLIBC_2.2.5:
0000000000209420         extern function code
                     abort@@GLIBC_2.2.5:
0000000000209428         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000209430         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000209438         extern function code
                     _ITM_deregisterTMCloneTable_209440:        // _ITM_deregisterTMCloneTable
0000000000209440         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000209448         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000209450         extern function code
                     fcntl@@GLIBC_2.2.5:
0000000000209458         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000209460         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000209468         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000209470         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000209478         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000209480         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000209488         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000209490         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000209498         extern function code
                     mbrtowc@@GLIBC_2.2.5:
00000000002094a0         extern function code
                     strrchr@@GLIBC_2.2.5:
00000000002094a8         extern function code
                     lseek@@GLIBC_2.2.5:
00000000002094b0         extern function code
                     memset@@GLIBC_2.2.5:
00000000002094b8         extern function code
                     close@@GLIBC_2.2.5:
00000000002094c0         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
00000000002094c8         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
00000000002094d0         extern function code
                     memcmp@@GLIBC_2.2.5:
00000000002094d8         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
00000000002094e0         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002094e8         extern function code
                     strcmp@@GLIBC_2.2.5:
00000000002094f0         extern function code
                     __gmon_start___2094f8:        // __gmon_start__
00000000002094f8         extern function code
                     memcpy@@GLIBC_2.14:
0000000000209500         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000209508         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000209510         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000209518         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000209520         extern function code
                     strcoll@@GLIBC_2.2.5:
0000000000209528         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000209530         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
0000000000209538         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000209540         extern function code
                     fdopen@@GLIBC_2.2.5:
0000000000209548         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000209550         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000209558         extern function code
                     error@@GLIBC_2.2.5:
0000000000209560         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000209568         extern function code
                     fopen@@GLIBC_2.2.5:
0000000000209570         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000209578         extern function code
                     exit@@GLIBC_2.2.5:
0000000000209580         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000209588         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000209590         extern function code
                     _ITM_registerTMCloneTable_209598:        // _ITM_registerTMCloneTable
0000000000209598         extern function code
                     mbsinit@@GLIBC_2.2.5:
00000000002095a0         extern function code
                     iswprint@@GLIBC_2.2.5:
00000000002095a8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
00000000002095b0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
00000000002095b8         extern function code
