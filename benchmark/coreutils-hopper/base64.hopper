
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/base64
        UUID: B3FBAB99-88F5-F2D7-7C51-F48D27369EE7
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x7bb8[ (31672 bytes)
        ; File offset : [0; 31672[ (31672 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x00 ; '.'
0000000000000019         db  0x20 ; ' '
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xe8 ; '.'
0000000000000029         db  0xc1 ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xb8 ; '.'
00000000000000d1         db  0x7b ; '{'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xb8 ; '.'
00000000000000d9         db  0x7b ; '{'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x10 ; '.'
00000000000000f1         db  0x8b ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x10 ; '.'
00000000000000f9         db  0x8b ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x10 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x8b ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x28 ; '('
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x8c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x8c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0x8c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x5c ; '\'
0000000000000199         db  0x6c ; 'l'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x5c ; '\'
00000000000001a1         db  0x6c ; 'l'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x5c ; '\'
00000000000001a9         db  0x6c ; 'l'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x9c ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x9c ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x10 ; '.'
0000000000000209         db  0x8b ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x10 ; '.'
0000000000000211         db  0x8b ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x10 ; '.'
0000000000000219         db  0x8b ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xf0 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xf0 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xb3 ; '.'
0000000000000285         db  0xfb ; '.'
0000000000000286         db  0xab ; '.'
0000000000000287         db  0x99 ; '.'
0000000000000288         db  0x88 ; '.'
0000000000000289         db  0xf5 ; '.'
000000000000028a         db  0xf2 ; '.'
000000000000028b         db  0xd7 ; '.'
000000000000028c         db  0x7c ; '|'
000000000000028d         db  0x51 ; 'Q'
000000000000028e         db  0xf4 ; '.'
000000000000028f         db  0x8d ; '.'
0000000000000290         db  0x27 ; '''
0000000000000291         db  0x36 ; '6'
0000000000000292         db  0x9e ; '.'
0000000000000293         db  0xe7 ; '.'
0000000000000294         db  0x75 ; 'u'
0000000000000295         db  0x9a ; '.'
0000000000000296         db  0x89 ; '.'
0000000000000297         db  0x78 ; 'x'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x38 ; '8'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x38 ; '8'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x39 ; '9'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3f ; '?'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8f8[ (1560 bytes)
        ; File offset : [736; 2296[ (1560 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x58 ; 'X'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x80 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x08 ; '.'
0000000000000329         db  0x01 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x37 ; '7'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xbc ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x8c ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xa5 ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xf2 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xf0 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x42 ; 'B'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xec ; '.'                                         ; DATA XREF=xstrtoumax+420
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x4e ; 'N'                                         ; DATA XREF=xstrtoumax+437, xstrtoumax+806, xstrtoumax+878
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xbf ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xeb ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x5e ; '^'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x8b ; '.'
0000000000000461         db  0x01 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x29 ; ')'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xb0 ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x2b ; '+'
00000000000004a9         db  0x02 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x46 ; 'F'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x35 ; '5'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xb1 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x36 ; '6'
0000000000000509         db  0x02 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x01 ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xd6 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x92 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x12 ; '.'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x19 ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x49 ; 'I'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xe4 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x0b ; '.'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xd8 ; '.'
00000000000005e1         db  0x02 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x20 ; ' '
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x3b ; ';'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x97 ; '.'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x49 ; 'I'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x0b ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x58 ; 'X'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x79 ; 'y'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0xfb ; '.'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x78 ; 'x'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x1f ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x12 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0xe4 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x58 ; 'X'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x24 ; '$'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x31 ; '1'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x78 ; 'x'
0000000000000749         db  0x02 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x8d ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x9e ; '.'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x20 ; ' '
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xe7 ; '.'
00000000000007a9         db  0x02 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x20 ; ' '
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x50 ; 'P'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x6f ; 'o'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xd5 ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x22 ; '"'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x64 ; 'd'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x2e ; '.'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x88 ; '.'
0000000000000829         db  0x90 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x5d ; ']'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x11 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x80 ; '.'
0000000000000841         db  0x90 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x86 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x90 ; '.'
0000000000000859         db  0x90 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x99 ; '.'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x21 ; '!'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xa8 ; '.'
0000000000000871         db  0x90 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x68 ; 'h'
0000000000000881         db  0x02 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xa8 ; '.'
0000000000000889         db  0x90 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0xb7 ; '.'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x21 ; '!'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x80 ; '.'
00000000000008a1         db  0x90 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x84 ; '.'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xc0 ; '.'
00000000000008b9         db  0x90 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x3f ; '?'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x11 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x98 ; '.'
00000000000008d1         db  0x90 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x04 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x72 ; 'r'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x11 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x19 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0xa0 ; '.'
00000000000008e9         db  0x90 ; '.'
00000000000008ea         db  0x20 ; ' '
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x08 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8f8; 0xbf9[ (769 bytes)
        ; File offset : [2296; 3065[ (769 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x6c ; 'l'
00000000000008fa         db  0x69 ; 'i'
00000000000008fb         db  0x62 ; 'b'
00000000000008fc         db  0x63 ; 'c'
00000000000008fd         db  0x2e ; '.'
00000000000008fe         db  0x73 ; 's'
00000000000008ff         db  0x6f ; 'o'
0000000000000900         db  0x2e ; '.'
0000000000000901         db  0x36 ; '6'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x66 ; 'f'
0000000000000904         db  0x66 ; 'f'
0000000000000905         db  0x6c ; 'l'
0000000000000906         db  0x75 ; 'u'
0000000000000907         db  0x73 ; 's'
0000000000000908         db  0x68 ; 'h'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x5f ; '_'
000000000000090b         db  0x5f ; '_'
000000000000090c         db  0x70 ; 'p'
000000000000090d         db  0x72 ; 'r'
000000000000090e         db  0x69 ; 'i'
000000000000090f         db  0x6e ; 'n'
0000000000000910         db  0x74 ; 't'
0000000000000911         db  0x66 ; 'f'
0000000000000912         db  0x5f ; '_'
0000000000000913         db  0x63 ; 'c'
0000000000000914         db  0x68 ; 'h'
0000000000000915         db  0x6b ; 'k'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x73 ; 's'
0000000000000918         db  0x65 ; 'e'
0000000000000919         db  0x74 ; 't'
000000000000091a         db  0x6c ; 'l'
000000000000091b         db  0x6f ; 'o'
000000000000091c         db  0x63 ; 'c'
000000000000091d         db  0x61 ; 'a'
000000000000091e         db  0x6c ; 'l'
000000000000091f         db  0x65 ; 'e'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x6d ; 'm'
0000000000000922         db  0x62 ; 'b'
0000000000000923         db  0x72 ; 'r'
0000000000000924         db  0x74 ; 't'
0000000000000925         db  0x6f ; 'o'
0000000000000926         db  0x77 ; 'w'
0000000000000927         db  0x63 ; 'c'
0000000000000928         db  0x00 ; '.'
0000000000000929         db  0x66 ; 'f'
000000000000092a         db  0x6f ; 'o'
000000000000092b         db  0x70 ; 'p'
000000000000092c         db  0x65 ; 'e'
000000000000092d         db  0x6e ; 'n'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x73 ; 's'
0000000000000930         db  0x74 ; 't'
0000000000000931         db  0x72 ; 'r'
0000000000000932         db  0x6e ; 'n'
0000000000000933         db  0x63 ; 'c'
0000000000000934         db  0x6d ; 'm'
0000000000000935         db  0x70 ; 'p'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x6f ; 'o'
0000000000000938         db  0x70 ; 'p'
0000000000000939         db  0x74 ; 't'
000000000000093a         db  0x69 ; 'i'
000000000000093b         db  0x6e ; 'n'
000000000000093c         db  0x64 ; 'd'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x73 ; 's'
000000000000093f         db  0x74 ; 't'
0000000000000940         db  0x72 ; 'r'
0000000000000941         db  0x72 ; 'r'
0000000000000942         db  0x63 ; 'c'
0000000000000943         db  0x68 ; 'h'
0000000000000944         db  0x72 ; 'r'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x64 ; 'd'
0000000000000947         db  0x63 ; 'c'
0000000000000948         db  0x67 ; 'g'
0000000000000949         db  0x65 ; 'e'
000000000000094a         db  0x74 ; 't'
000000000000094b         db  0x74 ; 't'
000000000000094c         db  0x65 ; 'e'
000000000000094d         db  0x78 ; 'x'
000000000000094e         db  0x74 ; 't'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x65 ; 'e'
0000000000000951         db  0x72 ; 'r'
0000000000000952         db  0x72 ; 'r'
0000000000000953         db  0x6f ; 'o'
0000000000000954         db  0x72 ; 'r'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x5f ; '_'
0000000000000957         db  0x5f ; '_'
0000000000000958         db  0x73 ; 's'
0000000000000959         db  0x74 ; 't'
000000000000095a         db  0x61 ; 'a'
000000000000095b         db  0x63 ; 'c'
000000000000095c         db  0x6b ; 'k'
000000000000095d         db  0x5f ; '_'
000000000000095e         db  0x63 ; 'c'
000000000000095f         db  0x68 ; 'h'
0000000000000960         db  0x6b ; 'k'
0000000000000961         db  0x5f ; '_'
0000000000000962         db  0x66 ; 'f'
0000000000000963         db  0x61 ; 'a'
0000000000000964         db  0x69 ; 'i'
0000000000000965         db  0x6c ; 'l'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x69 ; 'i'
0000000000000968         db  0x73 ; 's'
0000000000000969         db  0x77 ; 'w'
000000000000096a         db  0x70 ; 'p'
000000000000096b         db  0x72 ; 'r'
000000000000096c         db  0x69 ; 'i'
000000000000096d         db  0x6e ; 'n'
000000000000096e         db  0x74 ; 't'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x72 ; 'r'
0000000000000971         db  0x65 ; 'e'
0000000000000972         db  0x61 ; 'a'
0000000000000973         db  0x6c ; 'l'
0000000000000974         db  0x6c ; 'l'
0000000000000975         db  0x6f ; 'o'
0000000000000976         db  0x63 ; 'c'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x61 ; 'a'
0000000000000979         db  0x62 ; 'b'
000000000000097a         db  0x6f ; 'o'
000000000000097b         db  0x72 ; 'r'
000000000000097c         db  0x74 ; 't'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x73 ; 's'
000000000000097f         db  0x74 ; 't'
0000000000000980         db  0x64 ; 'd'
0000000000000981         db  0x69 ; 'i'
0000000000000982         db  0x6e ; 'n'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x5f ; '_'
0000000000000985         db  0x65 ; 'e'
0000000000000986         db  0x78 ; 'x'
0000000000000987         db  0x69 ; 'i'
0000000000000988         db  0x74 ; 't'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x6d ; 'm'
000000000000098b         db  0x65 ; 'e'
000000000000098c         db  0x6d ; 'm'
000000000000098d         db  0x63 ; 'c'
000000000000098e         db  0x68 ; 'h'
000000000000098f         db  0x72 ; 'r'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x70 ; 'p'
0000000000000992         db  0x72 ; 'r'
0000000000000993         db  0x6f ; 'o'
0000000000000994         db  0x67 ; 'g'
0000000000000995         db  0x72 ; 'r'
0000000000000996         db  0x61 ; 'a'
0000000000000997         db  0x6d ; 'm'
0000000000000998         db  0x5f ; '_'
0000000000000999         db  0x69 ; 'i'
000000000000099a         db  0x6e ; 'n'
000000000000099b         db  0x76 ; 'v'
000000000000099c         db  0x6f ; 'o'
000000000000099d         db  0x63 ; 'c'
000000000000099e         db  0x61 ; 'a'
000000000000099f         db  0x74 ; 't'
00000000000009a0         db  0x69 ; 'i'
00000000000009a1         db  0x6f ; 'o'
00000000000009a2         db  0x6e ; 'n'
00000000000009a3         db  0x5f ; '_'
00000000000009a4         db  0x6e ; 'n'
00000000000009a5         db  0x61 ; 'a'
00000000000009a6         db  0x6d ; 'm'
00000000000009a7         db  0x65 ; 'e'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x5f ; '_'
00000000000009aa         db  0x5f ; '_'
00000000000009ab         db  0x61 ; 'a'
00000000000009ac         db  0x73 ; 's'
00000000000009ad         db  0x73 ; 's'
00000000000009ae         db  0x65 ; 'e'
00000000000009af         db  0x72 ; 'r'
00000000000009b0         db  0x74 ; 't'
00000000000009b1         db  0x5f ; '_'
00000000000009b2         db  0x66 ; 'f'
00000000000009b3         db  0x61 ; 'a'
00000000000009b4         db  0x69 ; 'i'
00000000000009b5         db  0x6c ; 'l'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x5f ; '_'
00000000000009b8         db  0x5f ; '_'
00000000000009b9         db  0x63 ; 'c'
00000000000009ba         db  0x74 ; 't'
00000000000009bb         db  0x79 ; 'y'
00000000000009bc         db  0x70 ; 'p'
00000000000009bd         db  0x65 ; 'e'
00000000000009be         db  0x5f ; '_'
00000000000009bf         db  0x67 ; 'g'
00000000000009c0         db  0x65 ; 'e'
00000000000009c1         db  0x74 ; 't'
00000000000009c2         db  0x5f ; '_'
00000000000009c3         db  0x6d ; 'm'
00000000000009c4         db  0x62 ; 'b'
00000000000009c5         db  0x5f ; '_'
00000000000009c6         db  0x63 ; 'c'
00000000000009c7         db  0x75 ; 'u'
00000000000009c8         db  0x72 ; 'r'
00000000000009c9         db  0x5f ; '_'
00000000000009ca         db  0x6d ; 'm'
00000000000009cb         db  0x61 ; 'a'
00000000000009cc         db  0x78 ; 'x'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x70 ; 'p'
00000000000009cf         db  0x6f ; 'o'
00000000000009d0         db  0x73 ; 's'
00000000000009d1         db  0x69 ; 'i'
00000000000009d2         db  0x78 ; 'x'
00000000000009d3         db  0x5f ; '_'
00000000000009d4         db  0x66 ; 'f'
00000000000009d5         db  0x61 ; 'a'
00000000000009d6         db  0x64 ; 'd'
00000000000009d7         db  0x76 ; 'v'
00000000000009d8         db  0x69 ; 'i'
00000000000009d9         db  0x73 ; 's'
00000000000009da         db  0x65 ; 'e'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x63 ; 'c'
00000000000009dd         db  0x61 ; 'a'
00000000000009de         db  0x6c ; 'l'
00000000000009df         db  0x6c ; 'l'
00000000000009e0         db  0x6f ; 'o'
00000000000009e1         db  0x63 ; 'c'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x73 ; 's'
00000000000009e4         db  0x74 ; 't'
00000000000009e5         db  0x72 ; 'r'
00000000000009e6         db  0x6c ; 'l'
00000000000009e7         db  0x65 ; 'e'
00000000000009e8         db  0x6e ; 'n'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x66 ; 'f'
00000000000009eb         db  0x72 ; 'r'
00000000000009ec         db  0x65 ; 'e'
00000000000009ed         db  0x61 ; 'a'
00000000000009ee         db  0x64 ; 'd'
00000000000009ef         db  0x5f ; '_'
00000000000009f0         db  0x75 ; 'u'
00000000000009f1         db  0x6e ; 'n'
00000000000009f2         db  0x6c ; 'l'
00000000000009f3         db  0x6f ; 'o'
00000000000009f4         db  0x63 ; 'c'
00000000000009f5         db  0x6b ; 'k'
00000000000009f6         db  0x65 ; 'e'
00000000000009f7         db  0x64 ; 'd'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x6d ; 'm'
00000000000009fa         db  0x65 ; 'e'
00000000000009fb         db  0x6d ; 'm'
00000000000009fc         db  0x73 ; 's'
00000000000009fd         db  0x65 ; 'e'
00000000000009fe         db  0x74 ; 't'
00000000000009ff         db  0x00 ; '.'
                     aErrnolocation:
0000000000000a00         db         "__errno_location", 0
0000000000000a11         db  0x6d ; 'm'
0000000000000a12         db  0x65 ; 'e'
0000000000000a13         db  0x6d ; 'm'
0000000000000a14         db  0x63 ; 'c'
0000000000000a15         db  0x6d ; 'm'
0000000000000a16         db  0x70 ; 'p'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x5f ; '_'
0000000000000a19         db  0x5f ; '_'
0000000000000a1a         db  0x66 ; 'f'
0000000000000a1b         db  0x70 ; 'p'
0000000000000a1c         db  0x72 ; 'r'
0000000000000a1d         db  0x69 ; 'i'
0000000000000a1e         db  0x6e ; 'n'
0000000000000a1f         db  0x74 ; 't'
0000000000000a20         db  0x66 ; 'f'
0000000000000a21         db  0x5f ; '_'
0000000000000a22         db  0x63 ; 'c'
0000000000000a23         db  0x68 ; 'h'
0000000000000a24         db  0x6b ; 'k'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x73 ; 's'
0000000000000a27         db  0x74 ; 't'
0000000000000a28         db  0x64 ; 'd'
0000000000000a29         db  0x6f ; 'o'
0000000000000a2a         db  0x75 ; 'u'
0000000000000a2b         db  0x74 ; 't'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x6c ; 'l'
0000000000000a2e         db  0x73 ; 's'
0000000000000a2f         db  0x65 ; 'e'
0000000000000a30         db  0x65 ; 'e'
0000000000000a31         db  0x6b ; 'k'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x6d ; 'm'
0000000000000a34         db  0x65 ; 'e'
0000000000000a35         db  0x6d ; 'm'
0000000000000a36         db  0x63 ; 'c'
0000000000000a37         db  0x70 ; 'p'
0000000000000a38         db  0x79 ; 'y'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x66 ; 'f'
0000000000000a3b         db  0x63 ; 'c'
0000000000000a3c         db  0x6c ; 'l'
0000000000000a3d         db  0x6f ; 'o'
0000000000000a3e         db  0x73 ; 's'
0000000000000a3f         db  0x65 ; 'e'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x6d ; 'm'
0000000000000a42         db  0x61 ; 'a'
0000000000000a43         db  0x6c ; 'l'
0000000000000a44         db  0x6c ; 'l'
0000000000000a45         db  0x6f ; 'o'
0000000000000a46         db  0x63 ; 'c'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x6d ; 'm'
0000000000000a49         db  0x62 ; 'b'
0000000000000a4a         db  0x73 ; 's'
0000000000000a4b         db  0x69 ; 'i'
0000000000000a4c         db  0x6e ; 'n'
0000000000000a4d         db  0x69 ; 'i'
0000000000000a4e         db  0x74 ; 't'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x6e ; 'n'
0000000000000a51         db  0x6c ; 'l'
0000000000000a52         db  0x5f ; '_'
0000000000000a53         db  0x6c ; 'l'
0000000000000a54         db  0x61 ; 'a'
0000000000000a55         db  0x6e ; 'n'
0000000000000a56         db  0x67 ; 'g'
0000000000000a57         db  0x69 ; 'i'
0000000000000a58         db  0x6e ; 'n'
0000000000000a59         db  0x66 ; 'f'
0000000000000a5a         db  0x6f ; 'o'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x5f ; '_'
0000000000000a5d         db  0x5f ; '_'
0000000000000a5e         db  0x63 ; 'c'
0000000000000a5f         db  0x74 ; 't'
0000000000000a60         db  0x79 ; 'y'
0000000000000a61         db  0x70 ; 'p'
0000000000000a62         db  0x65 ; 'e'
0000000000000a63         db  0x5f ; '_'
0000000000000a64         db  0x62 ; 'b'
0000000000000a65         db  0x5f ; '_'
0000000000000a66         db  0x6c ; 'l'
0000000000000a67         db  0x6f ; 'o'
0000000000000a68         db  0x63 ; 'c'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x6f ; 'o'
0000000000000a6b         db  0x70 ; 'p'
0000000000000a6c         db  0x74 ; 't'
0000000000000a6d         db  0x61 ; 'a'
0000000000000a6e         db  0x72 ; 'r'
0000000000000a6f         db  0x67 ; 'g'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x5f ; '_'
0000000000000a72         db  0x5f ; '_'
0000000000000a73         db  0x66 ; 'f'
0000000000000a74         db  0x72 ; 'r'
0000000000000a75         db  0x65 ; 'e'
0000000000000a76         db  0x61 ; 'a'
0000000000000a77         db  0x64 ; 'd'
0000000000000a78         db  0x69 ; 'i'
0000000000000a79         db  0x6e ; 'n'
0000000000000a7a         db  0x67 ; 'g'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x73 ; 's'
0000000000000a7d         db  0x74 ; 't'
0000000000000a7e         db  0x64 ; 'd'
0000000000000a7f         db  0x65 ; 'e'
0000000000000a80         db  0x72 ; 'r'
0000000000000a81         db  0x72 ; 'r'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x67 ; 'g'
0000000000000a84         db  0x65 ; 'e'
0000000000000a85         db  0x74 ; 't'
0000000000000a86         db  0x6f ; 'o'
0000000000000a87         db  0x70 ; 'p'
0000000000000a88         db  0x74 ; 't'
0000000000000a89         db  0x5f ; '_'
0000000000000a8a         db  0x6c ; 'l'
0000000000000a8b         db  0x6f ; 'o'
0000000000000a8c         db  0x6e ; 'n'
0000000000000a8d         db  0x67 ; 'g'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x66 ; 'f'
0000000000000a90         db  0x69 ; 'i'
0000000000000a91         db  0x6c ; 'l'
0000000000000a92         db  0x65 ; 'e'
0000000000000a93         db  0x6e ; 'n'
0000000000000a94         db  0x6f ; 'o'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x66 ; 'f'
0000000000000a97         db  0x77 ; 'w'
0000000000000a98         db  0x72 ; 'r'
0000000000000a99         db  0x69 ; 'i'
0000000000000a9a         db  0x74 ; 't'
0000000000000a9b         db  0x65 ; 'e'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x5f ; '_'
0000000000000a9e         db  0x5f ; '_'
0000000000000a9f         db  0x66 ; 'f'
0000000000000aa0         db  0x70 ; 'p'
0000000000000aa1         db  0x65 ; 'e'
0000000000000aa2         db  0x6e ; 'n'
0000000000000aa3         db  0x64 ; 'd'
0000000000000aa4         db  0x69 ; 'i'
0000000000000aa5         db  0x6e ; 'n'
0000000000000aa6         db  0x67 ; 'g'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0x73 ; 's'
0000000000000aa9         db  0x74 ; 't'
0000000000000aaa         db  0x72 ; 'r'
0000000000000aab         db  0x63 ; 'c'
0000000000000aac         db  0x68 ; 'h'
0000000000000aad         db  0x72 ; 'r'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x70 ; 'p'
0000000000000ab0         db  0x72 ; 'r'
0000000000000ab1         db  0x6f ; 'o'
0000000000000ab2         db  0x67 ; 'g'
0000000000000ab3         db  0x72 ; 'r'
0000000000000ab4         db  0x61 ; 'a'
0000000000000ab5         db  0x6d ; 'm'
0000000000000ab6         db  0x5f ; '_'
0000000000000ab7         db  0x69 ; 'i'
0000000000000ab8         db  0x6e ; 'n'
0000000000000ab9         db  0x76 ; 'v'
0000000000000aba         db  0x6f ; 'o'
0000000000000abb         db  0x63 ; 'c'
0000000000000abc         db  0x61 ; 'a'
0000000000000abd         db  0x74 ; 't'
0000000000000abe         db  0x69 ; 'i'
0000000000000abf         db  0x6f ; 'o'
0000000000000ac0         db  0x6e ; 'n'
0000000000000ac1         db  0x5f ; '_'
0000000000000ac2         db  0x73 ; 's'
0000000000000ac3         db  0x68 ; 'h'
0000000000000ac4         db  0x6f ; 'o'
0000000000000ac5         db  0x72 ; 'r'
0000000000000ac6         db  0x74 ; 't'
0000000000000ac7         db  0x5f ; '_'
0000000000000ac8         db  0x6e ; 'n'
0000000000000ac9         db  0x61 ; 'a'
0000000000000aca         db  0x6d ; 'm'
0000000000000acb         db  0x65 ; 'e'
0000000000000acc         db  0x00 ; '.'
0000000000000acd         db  0x5f ; '_'
0000000000000ace         db  0x5f ; '_'
0000000000000acf         db  0x63 ; 'c'
0000000000000ad0         db  0x78 ; 'x'
0000000000000ad1         db  0x61 ; 'a'
0000000000000ad2         db  0x5f ; '_'
0000000000000ad3         db  0x66 ; 'f'
0000000000000ad4         db  0x69 ; 'i'
0000000000000ad5         db  0x6e ; 'n'
0000000000000ad6         db  0x61 ; 'a'
0000000000000ad7         db  0x6c ; 'l'
0000000000000ad8         db  0x69 ; 'i'
0000000000000ad9         db  0x7a ; 'z'
0000000000000ada         db  0x65 ; 'e'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x6d ; 'm'
0000000000000add         db  0x65 ; 'e'
0000000000000ade         db  0x6d ; 'm'
0000000000000adf         db  0x6d ; 'm'
0000000000000ae0         db  0x6f ; 'o'
0000000000000ae1         db  0x76 ; 'v'
0000000000000ae2         db  0x65 ; 'e'
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x62 ; 'b'
0000000000000ae5         db  0x69 ; 'i'
0000000000000ae6         db  0x6e ; 'n'
0000000000000ae7         db  0x64 ; 'd'
0000000000000ae8         db  0x74 ; 't'
0000000000000ae9         db  0x65 ; 'e'
0000000000000aea         db  0x78 ; 'x'
0000000000000aeb         db  0x74 ; 't'
0000000000000aec         db  0x64 ; 'd'
0000000000000aed         db  0x6f ; 'o'
0000000000000aee         db  0x6d ; 'm'
0000000000000aef         db  0x61 ; 'a'
0000000000000af0         db  0x69 ; 'i'
0000000000000af1         db  0x6e ; 'n'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x66 ; 'f'
0000000000000af4         db  0x77 ; 'w'
0000000000000af5         db  0x72 ; 'r'
0000000000000af6         db  0x69 ; 'i'
0000000000000af7         db  0x74 ; 't'
0000000000000af8         db  0x65 ; 'e'
0000000000000af9         db  0x5f ; '_'
0000000000000afa         db  0x75 ; 'u'
0000000000000afb         db  0x6e ; 'n'
0000000000000afc         db  0x6c ; 'l'
0000000000000afd         db  0x6f ; 'o'
0000000000000afe         db  0x63 ; 'c'
0000000000000aff         db  0x6b ; 'k'
0000000000000b00         db  0x65 ; 'e'
0000000000000b01         db  0x64 ; 'd'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x73 ; 's'
0000000000000b04         db  0x74 ; 't'
0000000000000b05         db  0x72 ; 'r'
0000000000000b06         db  0x63 ; 'c'
0000000000000b07         db  0x6d ; 'm'
0000000000000b08         db  0x70 ; 'p'
0000000000000b09         db  0x00 ; '.'
0000000000000b0a         db  0x5f ; '_'
0000000000000b0b         db  0x5f ; '_'
0000000000000b0c         db  0x6c ; 'l'
0000000000000b0d         db  0x69 ; 'i'
0000000000000b0e         db  0x62 ; 'b'
0000000000000b0f         db  0x63 ; 'c'
0000000000000b10         db  0x5f ; '_'
0000000000000b11         db  0x73 ; 's'
0000000000000b12         db  0x74 ; 't'
0000000000000b13         db  0x61 ; 'a'
0000000000000b14         db  0x72 ; 'r'
0000000000000b15         db  0x74 ; 't'
0000000000000b16         db  0x5f ; '_'
0000000000000b17         db  0x6d ; 'm'
0000000000000b18         db  0x61 ; 'a'
0000000000000b19         db  0x69 ; 'i'
0000000000000b1a         db  0x6e ; 'n'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x66 ; 'f'
0000000000000b1d         db  0x73 ; 's'
0000000000000b1e         db  0x65 ; 'e'
0000000000000b1f         db  0x65 ; 'e'
0000000000000b20         db  0x6b ; 'k'
0000000000000b21         db  0x6f ; 'o'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x5f ; '_'
0000000000000b24         db  0x5f ; '_'
0000000000000b25         db  0x6f ; 'o'
0000000000000b26         db  0x76 ; 'v'
0000000000000b27         db  0x65 ; 'e'
0000000000000b28         db  0x72 ; 'r'
0000000000000b29         db  0x66 ; 'f'
0000000000000b2a         db  0x6c ; 'l'
0000000000000b2b         db  0x6f ; 'o'
0000000000000b2c         db  0x77 ; 'w'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x5f ; '_'
0000000000000b2f         db  0x5f ; '_'
0000000000000b30         db  0x73 ; 's'
0000000000000b31         db  0x74 ; 't'
0000000000000b32         db  0x72 ; 'r'
0000000000000b33         db  0x74 ; 't'
0000000000000b34         db  0x6f ; 'o'
0000000000000b35         db  0x75 ; 'u'
0000000000000b36         db  0x6c ; 'l'
0000000000000b37         db  0x5f ; '_'
0000000000000b38         db  0x69 ; 'i'
0000000000000b39         db  0x6e ; 'n'
0000000000000b3a         db  0x74 ; 't'
0000000000000b3b         db  0x65 ; 'e'
0000000000000b3c         db  0x72 ; 'r'
0000000000000b3d         db  0x6e ; 'n'
0000000000000b3e         db  0x61 ; 'a'
0000000000000b3f         db  0x6c ; 'l'
0000000000000b40         db  0x00 ; '.'
                     aFputsunlocked:
0000000000000b41         db         "fputs_unlocked", 0
0000000000000b50         db  0x66 ; 'f'
0000000000000b51         db  0x72 ; 'r'
0000000000000b52         db  0x65 ; 'e'
0000000000000b53         db  0x65 ; 'e'
0000000000000b54         db  0x00 ; '.'
0000000000000b55         db  0x5f ; '_'
0000000000000b56         db  0x5f ; '_'
0000000000000b57         db  0x70 ; 'p'
0000000000000b58         db  0x72 ; 'r'
0000000000000b59         db  0x6f ; 'o'
0000000000000b5a         db  0x67 ; 'g'
0000000000000b5b         db  0x6e ; 'n'
0000000000000b5c         db  0x61 ; 'a'
0000000000000b5d         db  0x6d ; 'm'
0000000000000b5e         db  0x65 ; 'e'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x5f ; '_'
0000000000000b61         db  0x5f ; '_'
0000000000000b62         db  0x70 ; 'p'
0000000000000b63         db  0x72 ; 'r'
0000000000000b64         db  0x6f ; 'o'
0000000000000b65         db  0x67 ; 'g'
0000000000000b66         db  0x6e ; 'n'
0000000000000b67         db  0x61 ; 'a'
0000000000000b68         db  0x6d ; 'm'
0000000000000b69         db  0x65 ; 'e'
0000000000000b6a         db  0x5f ; '_'
0000000000000b6b         db  0x66 ; 'f'
0000000000000b6c         db  0x75 ; 'u'
0000000000000b6d         db  0x6c ; 'l'
0000000000000b6e         db  0x6c ; 'l'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x5f ; '_'
0000000000000b71         db  0x5f ; '_'
0000000000000b72         db  0x63 ; 'c'
0000000000000b73         db  0x78 ; 'x'
0000000000000b74         db  0x61 ; 'a'
0000000000000b75         db  0x5f ; '_'
0000000000000b76         db  0x61 ; 'a'
0000000000000b77         db  0x74 ; 't'
0000000000000b78         db  0x65 ; 'e'
0000000000000b79         db  0x78 ; 'x'
0000000000000b7a         db  0x69 ; 'i'
0000000000000b7b         db  0x74 ; 't'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x47 ; 'G'
0000000000000b7e         db  0x4c ; 'L'
0000000000000b7f         db  0x49 ; 'I'
0000000000000b80         db  0x42 ; 'B'
0000000000000b81         db  0x43 ; 'C'
0000000000000b82         db  0x5f ; '_'
0000000000000b83         db  0x32 ; '2'
0000000000000b84         db  0x2e ; '.'
0000000000000b85         db  0x33 ; '3'
0000000000000b86         db  0x00 ; '.'
0000000000000b87         db  0x47 ; 'G'
0000000000000b88         db  0x4c ; 'L'
0000000000000b89         db  0x49 ; 'I'
0000000000000b8a         db  0x42 ; 'B'
0000000000000b8b         db  0x43 ; 'C'
0000000000000b8c         db  0x5f ; '_'
0000000000000b8d         db  0x32 ; '2'
0000000000000b8e         db  0x2e ; '.'
0000000000000b8f         db  0x33 ; '3'
0000000000000b90         db  0x2e ; '.'
0000000000000b91         db  0x34 ; '4'
0000000000000b92         db  0x00 ; '.'
0000000000000b93         db  0x47 ; 'G'
0000000000000b94         db  0x4c ; 'L'
0000000000000b95         db  0x49 ; 'I'
0000000000000b96         db  0x42 ; 'B'
0000000000000b97         db  0x43 ; 'C'
0000000000000b98         db  0x5f ; '_'
0000000000000b99         db  0x32 ; '2'
0000000000000b9a         db  0x2e ; '.'
0000000000000b9b         db  0x31 ; '1'
0000000000000b9c         db  0x34 ; '4'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x47 ; 'G'
0000000000000b9f         db  0x4c ; 'L'
0000000000000ba0         db  0x49 ; 'I'
0000000000000ba1         db  0x42 ; 'B'
0000000000000ba2         db  0x43 ; 'C'
0000000000000ba3         db  0x5f ; '_'
0000000000000ba4         db  0x32 ; '2'
0000000000000ba5         db  0x2e ; '.'
0000000000000ba6         db  0x34 ; '4'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x47 ; 'G'
0000000000000ba9         db  0x4c ; 'L'
0000000000000baa         db  0x49 ; 'I'
0000000000000bab         db  0x42 ; 'B'
0000000000000bac         db  0x43 ; 'C'
0000000000000bad         db  0x5f ; '_'
0000000000000bae         db  0x32 ; '2'
0000000000000baf         db  0x2e ; '.'
0000000000000bb0         db  0x32 ; '2'
0000000000000bb1         db  0x2e ; '.'
0000000000000bb2         db  0x35 ; '5'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x5f ; '_'
0000000000000bb5         db  0x49 ; 'I'
0000000000000bb6         db  0x54 ; 'T'
0000000000000bb7         db  0x4d ; 'M'
0000000000000bb8         db  0x5f ; '_'
0000000000000bb9         db  0x64 ; 'd'
0000000000000bba         db  0x65 ; 'e'
0000000000000bbb         db  0x72 ; 'r'
0000000000000bbc         db  0x65 ; 'e'
0000000000000bbd         db  0x67 ; 'g'
0000000000000bbe         db  0x69 ; 'i'
0000000000000bbf         db  0x73 ; 's'
0000000000000bc0         db  0x74 ; 't'
0000000000000bc1         db  0x65 ; 'e'
0000000000000bc2         db  0x72 ; 'r'
0000000000000bc3         db  0x54 ; 'T'
0000000000000bc4         db  0x4d ; 'M'
0000000000000bc5         db  0x43 ; 'C'
0000000000000bc6         db  0x6c ; 'l'
0000000000000bc7         db  0x6f ; 'o'
0000000000000bc8         db  0x6e ; 'n'
0000000000000bc9         db  0x65 ; 'e'
0000000000000bca         db  0x54 ; 'T'
0000000000000bcb         db  0x61 ; 'a'
0000000000000bcc         db  0x62 ; 'b'
0000000000000bcd         db  0x6c ; 'l'
0000000000000bce         db  0x65 ; 'e'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x5f ; '_'
0000000000000bd1         db  0x5f ; '_'
0000000000000bd2         db  0x67 ; 'g'
0000000000000bd3         db  0x6d ; 'm'
0000000000000bd4         db  0x6f ; 'o'
0000000000000bd5         db  0x6e ; 'n'
0000000000000bd6         db  0x5f ; '_'
0000000000000bd7         db  0x73 ; 's'
0000000000000bd8         db  0x74 ; 't'
0000000000000bd9         db  0x61 ; 'a'
0000000000000bda         db  0x72 ; 'r'
0000000000000bdb         db  0x74 ; 't'
0000000000000bdc         db  0x5f ; '_'
0000000000000bdd         db  0x5f ; '_'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x5f ; '_'
0000000000000be0         db  0x49 ; 'I'
0000000000000be1         db  0x54 ; 'T'
0000000000000be2         db  0x4d ; 'M'
0000000000000be3         db  0x5f ; '_'
0000000000000be4         db  0x72 ; 'r'
0000000000000be5         db  0x65 ; 'e'
0000000000000be6         db  0x67 ; 'g'
0000000000000be7         db  0x69 ; 'i'
0000000000000be8         db  0x73 ; 's'
0000000000000be9         db  0x74 ; 't'
0000000000000bea         db  0x65 ; 'e'
0000000000000beb         db  0x72 ; 'r'
0000000000000bec         db  0x54 ; 'T'
0000000000000bed         db  0x4d ; 'M'
0000000000000bee         db  0x43 ; 'C'
0000000000000bef         db  0x6c ; 'l'
0000000000000bf0         db  0x6f ; 'o'
0000000000000bf1         db  0x6e ; 'n'
0000000000000bf2         db  0x65 ; 'e'
0000000000000bf3         db  0x54 ; 'T'
0000000000000bf4         db  0x61 ; 'a'
0000000000000bf5         db  0x62 ; 'b'
0000000000000bf6         db  0x6c ; 'l'
0000000000000bf7         db  0x65 ; 'e'
0000000000000bf8         db  0x00 ; '.'
0000000000000bf9         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xbfa; 0xc7c[ (130 bytes)
        ; File offset : [3066; 3196[ (130 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x02 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x02 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x02 ; '.'                                         ; DATA XREF=main+525, main+846, main+946
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x02 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x02 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x02 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x02 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x02 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x02 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x02 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x02 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x02 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x02 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x03 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x02 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x02 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x02 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x02 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x02 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x02 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x02 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x02 ; '.'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x02 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x02 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x02 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x02 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x02 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x02 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x02 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x02 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x04 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x02 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x02 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x02 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x02 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x02 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x02 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x02 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x02 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x05 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x02 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x02 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x02 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x02 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x02 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x02 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x02 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x05 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x00 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x02 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x02 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x02 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x06 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x02 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x02 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x02 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x02 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x02 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x02 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x02 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x02 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x02 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc80; 0xce0[ (96 bytes)
        ; File offset : [3200; 3296[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c80         db  0x01 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x05 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x01 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x10 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x13 ; '.'
0000000000000c91         db  0x69 ; 'i'
0000000000000c92         db  0x69 ; 'i'
0000000000000c93         db  0x0d ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x06 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x85 ; '.'
0000000000000c99         db  0x02 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x10 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x74 ; 't'
0000000000000ca1         db  0x19 ; '.'
0000000000000ca2         db  0x69 ; 'i'
0000000000000ca3         db  0x09 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x05 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x8f ; '.'
0000000000000ca9         db  0x02 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x10 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x94 ; '.'
0000000000000cb1         db  0x91 ; '.'
0000000000000cb2         db  0x96 ; '.'
0000000000000cb3         db  0x06 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x04 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x9b ; '.'
0000000000000cb9         db  0x02 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x10 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x14 ; '.'
0000000000000cc1         db  0x69 ; 'i'
0000000000000cc2         db  0x69 ; 'i'
0000000000000cc3         db  0x0d ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x03 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0xa6 ; '.'
0000000000000cc9         db  0x02 ; '.'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x10 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x75 ; 'u'
0000000000000cd1         db  0x1a ; '.'
0000000000000cd2         db  0x69 ; 'i'
0000000000000cd3         db  0x09 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x02 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0xb0 ; '.'
0000000000000cd9         db  0x02 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xce0; 0xff8[ (792 bytes)
        ; File offset : [3296; 4088[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000ce0         db  0x10 ; '.'
0000000000000ce1         db  0x8b ; '.'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x00 ; '.'
0000000000000cf1         db  0x21 ; '!'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x18 ; '.'
0000000000000cf9         db  0x8b ; '.'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0xc0 ; '.'
0000000000000d09         db  0x20 ; ' '
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x20 ; ' '
0000000000000d11         db  0x8b ; '.'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0xfb ; '.'
0000000000000d21         db  0x5c ; '\'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x40 ; '@'
0000000000000d29         db  0x8b ; '.'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x02 ; '.'
0000000000000d39         db  0x5d ; ']'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x60 ; '`'
0000000000000d41         db  0x8b ; '.'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x07 ; '.'
0000000000000d51         db  0x5d ; ']'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x80 ; '.'
0000000000000d59         db  0x8b ; '.'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x16 ; '.'
0000000000000d69         db  0x5d ; ']'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0xa0 ; '.'
0000000000000d71         db  0x8b ; '.'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x1b ; '.'
0000000000000d81         db  0x5d ; ']'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xe0 ; '.'
0000000000000d89         db  0x8b ; '.'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xe1 ; '.'
0000000000000d99         db  0x62 ; 'b'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xe8 ; '.'
0000000000000da1         db  0x8b ; '.'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0xe9 ; '.'
0000000000000db1         db  0x62 ; 'b'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xf0 ; '.'
0000000000000db9         db  0x8b ; '.'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0xef ; '.'
0000000000000dc9         db  0x62 ; 'b'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0xf8 ; '.'
0000000000000dd1         db  0x8b ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xfc ; '.'
0000000000000de1         db  0x62 ; 'b'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x00 ; '.'
0000000000000de9         db  0x8c ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x09 ; '.'
0000000000000df9         db  0x63 ; 'c'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x08 ; '.'
0000000000000e01         db  0x8c ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x1d ; '.'
0000000000000e11         db  0x63 ; 'c'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x10 ; '.'
0000000000000e19         db  0x8c ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x1f ; '.'
0000000000000e29         db  0x63 ; 'c'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x18 ; '.'
0000000000000e31         db  0x8c ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x02 ; '.'
0000000000000e41         db  0x63 ; 'c'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x20 ; ' '
0000000000000e49         db  0x8c ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x7d ; '}'
0000000000000e59         db  0x5c ; '\'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x28 ; '('
0000000000000e61         db  0x8c ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x27 ; '''
0000000000000e71         db  0x63 ; 'c'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x08 ; '.'
0000000000000e79         db  0x90 ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x08 ; '.'
0000000000000e89         db  0x90 ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x10 ; '.'
0000000000000e91         db  0x90 ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x33 ; '3'
0000000000000ea1         db  0x61 ; 'a'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x60 ; '`'
0000000000000ea9         db  0x90 ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x08 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x70 ; 'p'
0000000000000eb9         db  0x90 ; '.'
0000000000000eba         db  0x20 ; ' '
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x78 ; 'x'
0000000000000ec1         db  0x90 ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x08 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x91 ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0xd0 ; '.'
0000000000000ed9         db  0x8f ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x06 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x05 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0xd8 ; '.'
0000000000000ef1         db  0x8f ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x06 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x1b ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0xe0 ; '.'
0000000000000f09         db  0x8f ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x06 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x20 ; ' '
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xe8 ; '.'
0000000000000f21         db  0x8f ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x06 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x33 ; '3'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0xf0 ; '.'
0000000000000f39         db  0x8f ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x06 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x36 ; '6'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x80 ; '.'
0000000000000f51         db  0x90 ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x05 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x39 ; '9'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x88 ; '.'
0000000000000f69         db  0x90 ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x05 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x38 ; '8'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x90 ; '.'
0000000000000f81         db  0x90 ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x05 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x3a ; ':'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x98 ; '.'
0000000000000f99         db  0x90 ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x05 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x3f ; '?'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0xa0 ; '.'
0000000000000fb1         db  0x90 ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x05 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x40 ; '@'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0xa8 ; '.'
0000000000000fc9         db  0x90 ; '.'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x05 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x3c ; '<'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0xc0 ; '.'
0000000000000fe1         db  0x90 ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x05 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x3e ; '>'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xff8; 0x14a8[ (1200 bytes)
        ; File offset : [4088; 5288[ (1200 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000ff8         db  0x40 ; '@'
0000000000000ff9         db  0x8e ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=main+615
0000000000001000         db  0x07 ; '.'                                         ; DATA XREF=main+510, main+646
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x01 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x48 ; 'H'
0000000000001011         db  0x8e ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x07 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x02 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x50 ; 'P'
0000000000001029         db  0x8e ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x07 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x03 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x58 ; 'X'
0000000000001041         db  0x8e ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x07 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x04 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x60 ; '`'
0000000000001059         db  0x8e ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x07 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x06 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x68 ; 'h'
0000000000001071         db  0x8e ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x07 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x70 ; 'p'
0000000000001089         db  0x8e ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x08 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x78 ; 'x'
00000000000010a1         db  0x8e ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x09 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x80 ; '.'
00000000000010b9         db  0x8e ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x0a ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x88 ; '.'
00000000000010d1         db  0x8e ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x0b ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x90 ; '.'
00000000000010e9         db  0x8e ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x0c ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x98 ; '.'
0000000000001101         db  0x8e ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x0d ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xa0 ; '.'
0000000000001119         db  0x8e ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x0e ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xa8 ; '.'
0000000000001131         db  0x8e ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x0f ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xb0 ; '.'
0000000000001149         db  0x8e ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x10 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xb8 ; '.'
0000000000001161         db  0x8e ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x11 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0xc0 ; '.'
0000000000001179         db  0x8e ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x12 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0xc8 ; '.'
0000000000001191         db  0x8e ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x13 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0xd0 ; '.'
00000000000011a9         db  0x8e ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x14 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0xd8 ; '.'
00000000000011c1         db  0x8e ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x15 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0xe0 ; '.'
00000000000011d9         db  0x8e ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x16 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0xe8 ; '.'
00000000000011f1         db  0x8e ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x17 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0xf0 ; '.'
0000000000001209         db  0x8e ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x18 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0xf8 ; '.'
0000000000001221         db  0x8e ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x19 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x8f ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x1a ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x08 ; '.'
0000000000001251         db  0x8f ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x1c ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x10 ; '.'
0000000000001269         db  0x8f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x1d ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x18 ; '.'
0000000000001281         db  0x8f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x1e ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x20 ; ' '
0000000000001299         db  0x8f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x1f ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x28 ; '('
00000000000012b1         db  0x8f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x21 ; '!'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x30 ; '0'
00000000000012c9         db  0x8f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x22 ; '"'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x38 ; '8'
00000000000012e1         db  0x8f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x23 ; '#'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x40 ; '@'
00000000000012f9         db  0x8f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x24 ; '$'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x48 ; 'H'
0000000000001311         db  0x8f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x25 ; '%'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x50 ; 'P'
0000000000001329         db  0x8f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x26 ; '&'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x58 ; 'X'
0000000000001341         db  0x8f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x27 ; '''
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x60 ; '`'
0000000000001359         db  0x8f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x28 ; '('
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x68 ; 'h'
0000000000001371         db  0x8f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x29 ; ')'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x70 ; 'p'
0000000000001389         db  0x8f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x2a ; '*'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x78 ; 'x'
00000000000013a1         db  0x8f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x2b ; '+'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x80 ; '.'
00000000000013b9         db  0x8f ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x2c ; ','
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x88 ; '.'
00000000000013d1         db  0x8f ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x2d ; '-'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x90 ; '.'
00000000000013e9         db  0x8f ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x2e ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x98 ; '.'
0000000000001401         db  0x8f ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x2f ; '/'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0xa0 ; '.'
0000000000001419         db  0x8f ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x30 ; '0'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0xa8 ; '.'
0000000000001431         db  0x8f ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x31 ; '1'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0xb0 ; '.'
0000000000001449         db  0x8f ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x32 ; '2'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0xb8 ; '.'
0000000000001461         db  0x8f ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x34 ; '4'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0xc0 ; '.'
0000000000001479         db  0x8f ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x35 ; '5'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0xc8 ; '.'
0000000000001491         db  0x8f ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x37 ; '7'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x14a8; 0x14bf[ (23 bytes)
        ; File offset : [5288; 5311[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000014a8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000014ac         mov        rax, qword [qword_208fe0]                   ; qword_208fe0
00000000000014b3         test       rax, rax
00000000000014b6         je         loc_14ba

00000000000014b8         call       rax

                     loc_14ba:
00000000000014ba         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000014be         ret
                        ; endp
00000000000014bf         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x14c0; 0x17f0[ (816 bytes)
        ; File offset : [5312; 6128[ (816 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_14c0:
00000000000014c0         push       qword [qword_208e30]                        ; Begin of unwind block (FDE at 0x6f44), qword_208e30, CODE XREF=sub_14d6+5
00000000000014c6         jmp        qword [qword_208e30+8]                      ; 0x208e38
                        ; endp
00000000000014cc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000014d0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=base64_decode_alloc_ctx+167, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x0
00000000000014db         jmp        loc_14c0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000014e0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_35d0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x1
00000000000014eb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000014f0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+434, main+1209, main+1533, main+1599, main+1640, main+1787, main+1831, main+1880, main+2019, close_stdout+22, quotearg_n_options+28
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x2
00000000000014fb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001500         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+668, usage+861
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x3
000000000000150b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001510         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x4
000000000000151b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001520         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x5
000000000000152b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fread_unlocked:        // fread_unlocked
0000000000001530         jmp        qword [fread_unlocked@GOT]                  ; fread_unlocked, fread_unlocked@GOT, CODE XREF=main+663, main+1104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x6
000000000000153b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001540         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+94
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x7
000000000000154b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001550         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x8
000000000000155b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001560         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x9
000000000000156b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001570         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+188, main+1201, main+1525, main+1591, main+1666, main+1743, main+1779, main+1823, main+1872, main+1943, main+2011
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0xa
000000000000157b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001580         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0xb
000000000000158b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001590         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_35d0+411, sub_35d0+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0xc
000000000000159b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000015a0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+1853, base64_decode_ctx+680, base64_decode_alloc_ctx+186, sub_35d0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0xd
00000000000015ab         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000015b0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+139
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0xe
00000000000015bb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000015c0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0xf
00000000000015cb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
00000000000015d0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x10
00000000000015db         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
00000000000015e0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+1563, main+1983
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x11
00000000000015eb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000015f0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x12
00000000000015fb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001600         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x13
000000000000160b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001610         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x14
000000000000161b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
0000000000001620         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x15
000000000000162b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001630         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x16
000000000000163b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000001640         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x17
000000000000164b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memchr:        // memchr
0000000000001650         jmp        qword [memchr@GOT]                          ; memchr, memchr@GOT, CODE XREF=base64_decode_ctx+522
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x18
000000000000165b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001660         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x19
000000000000166b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001670         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+196, usage+233, usage+270, usage+307, usage+351, usage+976, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x1a
000000000000167b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001680         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x1b
000000000000168b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001690         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+380, main+1633
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x1c
000000000000169b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000016a0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x1d
00000000000016ab         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000016b0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x1e
00000000000016bb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000016c0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=base64_encode_alloc+89, base64_decode_alloc_ctx+60, xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x1f
00000000000016cb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000016d0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x20
00000000000016db         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000016e0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x21
00000000000016eb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000016f0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x22
00000000000016fb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000001700         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=main+895, main+1411, main+1501
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x23
000000000000170b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001710         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x24
000000000000171b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001720         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+63, usage+643, usage+836, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x25
000000000000172b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001730         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+159, usage+395, usage+631, usage+724, usage+785, usage+824, usage+927, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x26
000000000000173b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000001740         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=main+780
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x27
000000000000174b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001750         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+458, main+1226, main+1550, main+1616, main+1683, main+1724, main+1760, main+1804, main+1848, main+1897, main+1960
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x28
000000000000175b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001760         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x29
000000000000176b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001770         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=main+401
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x2a
000000000000177b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001780         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x2b
000000000000178b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001790         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+330, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x2c
000000000000179b         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
00000000000017a0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x2d
00000000000017ab         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000017b0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x2e
00000000000017bb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000017c0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_35d0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x2f
00000000000017cb         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000017d0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_35d0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x30
00000000000017db         jmp        0x14c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000017e0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3370+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x31
00000000000017eb         jmp        0x14c0
                        ; endp


        ; Section .plt.got
        ; Range: [0x17f0; 0x17f8[ (8 bytes)
        ; File offset : [6128; 6136[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_208ff0:        // qword_208ff0
00000000000017f0         jmp        qword [qword_208ff0]                        ; qword, End of unwind block (FDE at 0x6f44), Begin of unwind block (FDE at 0x6f6c), qword_208ff0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000017f6         align      8
00000000000017f8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x6f6c)
00000000000017f9         db  0x00 ; '.'
00000000000017fa         db  0x00 ; '.'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1800; 0x5b8e[ (17294 bytes)
        ; File offset : [6144; 23438[ (17294 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int32_t, -72
        ;    var_50: int64_t, -80
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160


                     main:
0000000000001800         push       r15                                         ; Begin of unwind block (FDE at 0x6fb0), DATA XREF=_start+29
0000000000001802         push       r14
0000000000001804         push       r13
0000000000001806         push       r12
0000000000001808         mov        r13d, edi
000000000000180b         push       rbp
000000000000180c         push       rbx
000000000000180d         mov        r12, rsi
0000000000001810         mov        ebp, 0x4c
0000000000001815         xor        ebx, ebx
0000000000001817         sub        rsp, 0x78
000000000000181b         mov        rdi, qword [rsi]
000000000000181e         mov        rax, qword [fs:0x28]
0000000000001827         mov        qword [rsp+0xa8+var_40], rax
000000000000182c         xor        eax, eax
000000000000182e         call       set_program_name                            ; set_program_name
0000000000001833         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x6801
000000000000183a         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
000000000000183f         call       j_setlocale                                 ; setlocale
0000000000001844         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000184b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001852         call       j_bindtextdomain                            ; bindtextdomain
0000000000001857         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000185e         call       j_textdomain                                ; textdomain
0000000000001863         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
000000000000186a         call       atexit                                      ; atexit
000000000000186f         mov        byte [rsp+0xa8+var_78], 0x0

                     loc_1874:
0000000000001874         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+230, main+245, main+261
000000000000187b         lea        rdx, qword [aSimonJosefsson+16]             ; argument "__shortopts" for method j_getopt_long, 0x5ca6
0000000000001882         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001885         mov        rsi, r12                                    ; argument "___argv" for method j_getopt_long
0000000000001888         mov        edi, r13d                                   ; argument "___argc" for method j_getopt_long
000000000000188b         call       j_getopt_long                               ; getopt_long
0000000000001890         cmp        eax, 0xffffffff
0000000000001893         je         loc_194f

0000000000001899         cmp        eax, 0x64
000000000000189c         je         loc_18f0

000000000000189e         jle        loc_1910

00000000000018a0         cmp        eax, 0x69
00000000000018a3         je         loc_1900

00000000000018a5         cmp        eax, 0x77
00000000000018a8         jne        loc_1fad

00000000000018ae         lea        rsi, qword [aInvalidWrapSiz]                ; argument "msgid" for method j_dcgettext, "invalid wrap size"
00000000000018b5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000018ba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000018bc         call       j_dcgettext                                 ; dcgettext
00000000000018c1         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000018c8         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0x6801
00000000000018cf         mov        r8, rax
00000000000018d2         xor        r9d, r9d
00000000000018d5         mov        rdx, 0xffffffffffffffff
00000000000018dc         xor        esi, esi
00000000000018de         call       xdectoumax                                  ; xdectoumax
00000000000018e3         mov        rbp, rax
00000000000018e6         jmp        loc_1874
00000000000018e8         align      16

                     loc_18f0:
00000000000018f0         mov        ebx, 0x1                                    ; CODE XREF=main+156
00000000000018f5         jmp        loc_1874
00000000000018fa         align      256

                     loc_1900:
0000000000001900         mov        byte [rsp+0xa8+var_78], 0x1                 ; CODE XREF=main+163
0000000000001905         jmp        loc_1874
000000000000190a         align      16

                     loc_1910:
0000000000001910         cmp        eax, 0xffffff7d                             ; CODE XREF=main+158
0000000000001915         jne        loc_1f6e

000000000000191b         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001922         mov        rcx, qword [Version]                        ; Version
0000000000001929         lea        r8, qword [aSimonJosefsson]                 ; "Simon Josefsson"
0000000000001930         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5c3f
0000000000001937         lea        rsi, qword [aBase64]                        ; "base64"
000000000000193e         xor        r9d, r9d
0000000000001941         xor        eax, eax
0000000000001943         call       version_etc                                 ; version_etc
0000000000001948         xor        edi, edi                                    ; argument "__status" for method j_exit
000000000000194a         call       j_exit                                      ; exit
                        ; endp

                     loc_194f:
000000000000194f         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+147
0000000000001956         mov        edx, r13d
0000000000001959         sub        edx, eax
000000000000195b         sub        edx, 0x1
000000000000195e         jg         loc_1f7c

0000000000001964         cmp        eax, r13d
0000000000001967         jge        loc_19cf

0000000000001969         mov        rax, qword [r12+rax*8]
000000000000196d         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x62ca
0000000000001974         mov        rdi, rax                                    ; argument "__s1" for method j_strcmp
0000000000001977         mov        qword [rsp+0xa8+var_60], rax
000000000000197c         call       j_strcmp                                    ; strcmp
0000000000001981         test       eax, eax
0000000000001983         je         loc_19db

0000000000001985         mov        rdi, qword [rsp+0xa8+var_60]                ; argument "__filename" for method j_fopen
000000000000198a         lea        rsi, qword [aExtraOperandS+17]              ; argument "__modes" for method j_fopen, 0x5cbc
0000000000001991         call       j_fopen                                     ; fopen
0000000000001996         test       rax, rax
0000000000001999         mov        r12, rax
000000000000199c         jne        loc_19e2

000000000000199e         mov        rdx, qword [rsp+0xa8+var_60]
00000000000019a3         mov        esi, 0x3
00000000000019a8         xor        edi, edi
00000000000019aa         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000019af         mov        rbx, rax
00000000000019b2         call       j___errno_location                          ; __errno_location
00000000000019b7         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000019b9         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6284
00000000000019c0         mov        rcx, rbx
00000000000019c3         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000019c8         xor        eax, eax
00000000000019ca         call       j_error                                     ; error

                     loc_19cf:
00000000000019cf         lea        rax, qword [aLibs+10]                       ; 0x62ca, CODE XREF=main+359
00000000000019d6         mov        qword [rsp+0xa8+var_60], rax

                     loc_19db:
00000000000019db         mov        r12, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+387

                     loc_19e2:
00000000000019e2         mov        esi, 0x2                                    ; CODE XREF=main+412
00000000000019e7         mov        rdi, r12
00000000000019ea         call       fadvise                                     ; fadvise
00000000000019ef         test       bl, bl
00000000000019f1         mov        rax, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000019f8         je         loc_1bf8

00000000000019fe         mov        edi, 0x1000
0000000000001a03         mov        qword [rsp+0xa8+var_70], rax
0000000000001a08         call       xmalloc                                     ; xmalloc
0000000000001a0d         mov        edi, 0xc00
0000000000001a12         mov        rbp, rax
0000000000001a15         call       xmalloc                                     ; xmalloc
0000000000001a1a         mov        qword [rsp+0xa8+var_68], rax
0000000000001a1f         lea        rax, qword [rsp+0xa8+var_48]
0000000000001a24         mov        rdi, rax
0000000000001a27         mov        qword [rsp+0xa8+var_90], rax
0000000000001a2c         call       base64_decode_ctx_init                      ; base64_decode_ctx_init
0000000000001a31         lea        rax, qword [rsp+0xa8+var_50]
0000000000001a36         mov        qword [rsp+0xa8+var_98], r12
0000000000001a3b         mov        qword [rsp+0xa8+var_A0], rbp
0000000000001a40         mov        qword [rsp+0xa8+var_88], rax
0000000000001a45         nop        dword [rax]

                     loc_1a48:
0000000000001a48         xor        ebx, ebx                                    ; CODE XREF=main+835
0000000000001a4a         jmp        loc_1a7c
0000000000001a4c         align      16

                     loc_1a50:
0000000000001a50         mov        rax, qword [rsp+0xa8+var_98]                ; CODE XREF=main+681, main+689, main+694, main+739
0000000000001a55         add        rbx, r12
0000000000001a58         mov        eax, dword [rax]
0000000000001a5a         test       al, 0x20
0000000000001a5c         jne        loc_1f11

0000000000001a62         mov        edx, eax
0000000000001a64         and        edx, 0x10
0000000000001a67         cmp        rbx, 0xfff
0000000000001a6e         ja         loc_1b18

0000000000001a74         test       edx, edx
0000000000001a76         jne        loc_1b18

                     loc_1a7c:
0000000000001a7c         mov        rax, qword [rsp+0xa8+var_A0]                ; CODE XREF=main+586
0000000000001a81         mov        rcx, qword [rsp+0xa8+var_98]                ; argument "__stream" for method j_fread_unlocked
0000000000001a86         mov        edx, 0x1000
0000000000001a8b         sub        rdx, rbx                                    ; argument "__n" for method j_fread_unlocked
0000000000001a8e         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
0000000000001a93         lea        rdi, qword [rax+rbx]                        ; argument "__ptr" for method j_fread_unlocked
0000000000001a97         call       j_fread_unlocked                            ; fread_unlocked
0000000000001a9c         cmp        byte [rsp+0xa8+var_78], 0x0
0000000000001aa1         mov        r12, rax
0000000000001aa4         mov        qword [rsp+0xa8+var_50], rax
0000000000001aa9         je         loc_1a50

0000000000001aab         xor        r13d, r13d

                     loc_1aae:
0000000000001aae         test       r12, r12                                    ; CODE XREF=main+785
0000000000001ab1         je         loc_1a50

                     loc_1ab3:
0000000000001ab3         cmp        r13, r12                                    ; CODE XREF=main+737
0000000000001ab6         jae        loc_1a50

0000000000001ab8         mov        rax, qword [rsp+0xa8+var_A0]
0000000000001abd         lea        r15, qword [rbx+r13]
0000000000001ac1         lea        r14, qword [rax+r15]
0000000000001ac5         movsx      edi, byte [r14]
0000000000001ac9         mov        ebp, edi
0000000000001acb         call       isbase64                                    ; isbase64
0000000000001ad0         cmp        bpl, 0x3d
0000000000001ad4         je         loc_1ada

0000000000001ad6         test       al, al
0000000000001ad8         je         loc_1af0

                     loc_1ada:
0000000000001ada         add        r13, 0x1                                    ; CODE XREF=main+724
0000000000001ade         test       r12, r12
0000000000001ae1         jne        loc_1ab3

0000000000001ae3         jmp        loc_1a50
0000000000001ae8         align      16

                     loc_1af0:
0000000000001af0         mov        rax, qword [rsp+0xa8+var_A0]                ; CODE XREF=main+728
0000000000001af5         sub        r12, 0x1
0000000000001af9         mov        rdi, r14                                    ; argument "__dest" for method j_memmove
0000000000001afc         mov        rdx, r12
0000000000001aff         mov        qword [rsp+0xa8+var_50], r12
0000000000001b04         sub        rdx, r13                                    ; argument "__n" for method j_memmove
0000000000001b07         lea        rsi, qword [rax+r15+1]                      ; argument "__src" for method j_memmove
0000000000001b0c         call       j_memmove                                   ; memmove
0000000000001b11         jmp        loc_1aae
0000000000001b13         align      8

                     loc_1b18:
0000000000001b18         xor        r15d, r15d                                  ; CODE XREF=main+622, main+630
0000000000001b1b         mov        qword [rsp+0xa8+var_80], rbx
0000000000001b20         mov        rbp, qword [rsp+0xa8+var_A0]
0000000000001b25         mov        r14d, r15d
0000000000001b28         mov        r12, qword [rsp+0xa8+var_68]
0000000000001b2d         mov        rbx, qword [rsp+0xa8+var_98]
0000000000001b32         mov        r15, qword [rsp+0xa8+var_70]
0000000000001b37         jmp        loc_1b9e
0000000000001b39         align      64

                     loc_1b40:
0000000000001b40         test       r14d, r14d                                  ; CODE XREF=main+928
0000000000001b43         jne        loc_1a48

                     loc_1b49:
0000000000001b49         mov        rdx, qword [rsp+0xa8+var_80]                ; CODE XREF=main+936
0000000000001b4e         mov        qword [rsp+0xa8+var_50], 0xc00

                     loc_1b57:
0000000000001b57         mov        r8, qword [rsp+0xa8+var_88]                 ; CODE XREF=main+957
0000000000001b5c         mov        rdi, qword [rsp+0xa8+var_90]
0000000000001b61         mov        rcx, r12
0000000000001b64         mov        rsi, rbp
0000000000001b67         call       base64_decode_ctx                           ; base64_decode_ctx
0000000000001b6c         mov        rdx, qword [rsp+0xa8+var_50]                ; argument "__n" for method j_fwrite_unlocked
0000000000001b71         mov        rcx, r15                                    ; argument "__stream" for method j_fwrite_unlocked
0000000000001b74         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001b79         mov        rdi, r12                                    ; argument "__ptr" for method j_fwrite_unlocked
0000000000001b7c         mov        r13d, eax
0000000000001b7f         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001b84         cmp        rax, qword [rsp+0xa8+var_50]
0000000000001b89         jb         loc_1ee5

0000000000001b8f         test       r13b, r13b
0000000000001b92         je         loc_1ec1

0000000000001b98         mov        eax, dword [rbx]
0000000000001b9a         add        r14d, 0x1

                     loc_1b9e:
0000000000001b9e         test       al, 0x10                                    ; CODE XREF=main+823
0000000000001ba0         je         loc_1b40

0000000000001ba2         cmp        r14d, 0x1
0000000000001ba6         ja         loc_1bbf

0000000000001ba8         jne        loc_1b49

0000000000001baa         mov        eax, dword [rsp+0xa8+var_48]
0000000000001bae         test       eax, eax
0000000000001bb0         je         loc_1bbf

0000000000001bb2         mov        qword [rsp+0xa8+var_50], 0xc00
0000000000001bbb         xor        edx, edx
0000000000001bbd         jmp        loc_1b57

                     loc_1bbf:
0000000000001bbf         mov        r12, rbx                                    ; CODE XREF=main+934, main+944

                     loc_1bc2:
0000000000001bc2         mov        rdi, r12                                    ; CODE XREF=main+1181
0000000000001bc5         call       rpl_fclose                                  ; rpl_fclose
0000000000001bca         add        eax, 0x1
0000000000001bcd         je         loc_1e55

0000000000001bd3         xor        eax, eax
0000000000001bd5         mov        rcx, qword [rsp+0xa8+var_40]
0000000000001bda         xor        rcx, qword [fs:0x28]
0000000000001be3         jne        loc_1f3d

0000000000001be9         add        rsp, 0x78
0000000000001bed         pop        rbx
0000000000001bee         pop        rbp
0000000000001bef         pop        r12
0000000000001bf1         pop        r13
0000000000001bf3         pop        r14
0000000000001bf5         pop        r15
0000000000001bf7         ret
                        ; endp

                     loc_1bf8:
0000000000001bf8         mov        edi, 0x7800                                 ; CODE XREF=main+504
0000000000001bfd         mov        qword [rsp+0xa8+var_90], rax
0000000000001c02         xor        ebx, ebx
0000000000001c04         call       xmalloc                                     ; xmalloc
0000000000001c09         mov        edi, 0xa000
0000000000001c0e         mov        r13, rax
0000000000001c11         mov        r14d, 0x7800
0000000000001c17         call       xmalloc                                     ; xmalloc
0000000000001c1c         mov        qword [rsp+0xa8+var_A0], rbp
0000000000001c21         mov        qword [rsp+0xa8+var_98], rax

                     loc_1c26:
0000000000001c26         xor        ebp, ebp                                    ; CODE XREF=main+1470
0000000000001c28         jmp        loc_1c3d
0000000000001c2a         align      16

                     loc_1c30:
0000000000001c30         cmp        rbp, 0x77ff                                 ; CODE XREF=main+1118
0000000000001c37         ja         loc_1ccf

                     loc_1c3d:
0000000000001c3d         lea        rdi, qword [r13+rbp]                        ; argument "__ptr" for method j_fread_unlocked, CODE XREF=main+1064
0000000000001c42         mov        rdx, r14
0000000000001c45         mov        rcx, r12                                    ; argument "__stream" for method j_fread_unlocked
0000000000001c48         sub        rdx, rbp                                    ; argument "__n" for method j_fread_unlocked
0000000000001c4b         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
0000000000001c50         call       j_fread_unlocked                            ; fread_unlocked
0000000000001c55         add        rbp, rax
0000000000001c58         mov        eax, dword [r12]
0000000000001c5c         test       al, 0x30
0000000000001c5e         je         loc_1c30

0000000000001c60         test       rbp, rbp
0000000000001c63         jne        loc_1ccf

                     loc_1c65:
0000000000001c65         test       rbx, rbx                                    ; CODE XREF=main+1457, main+1476
0000000000001c68         mov        rbp, qword [rsp+0xa8+var_A0]
0000000000001c6d         je         loc_1c9b

0000000000001c6f         test       rbp, rbp
0000000000001c72         je         loc_1c9b

0000000000001c74         mov        rcx, qword [rsp+0xa8+var_90]
0000000000001c79         mov        rax, qword [rcx+0x28]
0000000000001c7d         cmp        rax, qword [rcx+0x30]
0000000000001c81         jae        loc_1fb7

0000000000001c87         mov        rcx, qword [rsp+0xa8+var_90]
0000000000001c8c         lea        rdx, qword [rax+1]
0000000000001c90         mov        qword [rcx+0x28], rdx
0000000000001c94         mov        byte [rax], 0xa

                     loc_1c97:
0000000000001c97         mov        eax, dword [r12]                            ; CODE XREF=main+1991

                     loc_1c9b:
0000000000001c9b         test       al, 0x20                                    ; CODE XREF=main+1133, main+1138
0000000000001c9d         je         loc_1bc2

0000000000001ca3         lea        rsi, qword [aReadError]                     ; argument "msgid" for method j_dcgettext, "read error"
0000000000001caa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001caf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cb1         call       j_dcgettext                                 ; dcgettext
0000000000001cb6         mov        rbx, rax
0000000000001cb9         call       j___errno_location                          ; __errno_location
0000000000001cbe         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001cc0         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001cc3         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001cc8         xor        eax, eax
0000000000001cca         call       j_error                                     ; error

                     loc_1ccf:
0000000000001ccf         lea        rax, qword [rbp+2]                          ; CODE XREF=main+1079, main+1123
0000000000001cd3         mov        ecx, 0x3
0000000000001cd8         xor        edx, edx
0000000000001cda         mov        rsi, rbp
0000000000001cdd         mov        rdi, r13
0000000000001ce0         div        rcx
0000000000001ce3         mov        rdx, qword [rsp+0xa8+var_98]
0000000000001ce8         lea        r15, qword [rax*4]
0000000000001cf0         mov        rcx, r15
0000000000001cf3         call       base64_encode                               ; base64_encode
0000000000001cf8         cmp        qword [rsp+0xa8+var_A0], 0x0
0000000000001cfe         je         loc_1dc9

0000000000001d04         xor        r10d, r10d
0000000000001d07         test       r15, r15
0000000000001d0a         je         loc_1dab

0000000000001d10         mov        qword [rsp+0xa8+var_80], r13
0000000000001d15         mov        qword [rsp+0xa8+var_78], rbp
0000000000001d1a         mov        r13, rbx
0000000000001d1d         mov        rbp, r15
0000000000001d20         mov        qword [rsp+0xa8+var_88], r12
0000000000001d25         mov        r15, qword [rsp+0xa8+var_90]
0000000000001d2a         mov        rbx, r10
0000000000001d2d         jmp        loc_1d51
0000000000001d2f         align      16

                     loc_1d30:
0000000000001d30         mov        rax, qword [r15+0x28]                       ; CODE XREF=main+1385
0000000000001d34         cmp        rax, qword [r15+0x30]
0000000000001d38         jae        loc_1e13

0000000000001d3e         lea        rdx, qword [rax+1]
0000000000001d42         mov        qword [r15+0x28], rdx
0000000000001d46         mov        byte [rax], 0xa

                     loc_1d49:
0000000000001d49         xor        r13d, r13d                                  ; CODE XREF=main+1571

                     loc_1d4c:
0000000000001d4c         cmp        rbp, rbx                                    ; CODE XREF=main+1431
0000000000001d4f         jbe        loc_1d99

                     loc_1d51:
0000000000001d51         mov        r12, qword [rsp+0xa8+var_A0]                ; CODE XREF=main+1325
0000000000001d56         mov        rax, rbp
0000000000001d59         sub        rax, rbx
0000000000001d5c         sub        r12, r13
0000000000001d5f         cmp        r12, rax
0000000000001d62         cmova      r12, rax
0000000000001d66         test       r12, r12
0000000000001d69         je         loc_1d30

0000000000001d6b         mov        rax, qword [rsp+0xa8+var_98]
0000000000001d70         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000001d77         mov        rdx, r12                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001d7a         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001d7f         lea        rdi, qword [rax+rbx]                        ; argument "__ptr" for method j_fwrite_unlocked
0000000000001d83         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001d88         cmp        r12, rax
0000000000001d8b         ja         loc_1f42

0000000000001d91         add        r13, r12
0000000000001d94         add        rbx, r12
0000000000001d97         jmp        loc_1d4c

                     loc_1d99:
0000000000001d99         mov        rbx, r13                                    ; CODE XREF=main+1359
0000000000001d9c         mov        r12, qword [rsp+0xa8+var_88]
0000000000001da1         mov        r13, qword [rsp+0xa8+var_80]
0000000000001da6         mov        rbp, qword [rsp+0xa8+var_78]

                     loc_1dab:
0000000000001dab         mov        eax, dword [r12]                            ; CODE XREF=main+1290, main+1509
0000000000001daf         test       al, 0x30
0000000000001db1         jne        loc_1c65

0000000000001db7         cmp        rbp, 0x7800
0000000000001dbe         je         loc_1c26

0000000000001dc4         jmp        loc_1c65

                     loc_1dc9:
0000000000001dc9         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=main+1278
0000000000001dd0         mov        rdi, qword [rsp+0xa8+var_98]                ; argument "__ptr" for method j_fwrite_unlocked
0000000000001dd5         mov        rdx, r15                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001dd8         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001ddd         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001de2         cmp        r15, rax
0000000000001de5         jbe        loc_1dab

0000000000001de7         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000001dee         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001df3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001df5         call       j_dcgettext                                 ; dcgettext
0000000000001dfa         mov        rbx, rax
0000000000001dfd         call       j___errno_location                          ; __errno_location
0000000000001e02         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001e04         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001e07         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001e0c         xor        eax, eax
0000000000001e0e         call       j_error                                     ; error

                     loc_1e13:
0000000000001e13         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1336
0000000000001e18         mov        rdi, r15                                    ; argument #1 for method j___overflow
0000000000001e1b         call       j___overflow                                ; __overflow
0000000000001e20         add        eax, 0x1
0000000000001e23         jne        loc_1d49

0000000000001e29         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000001e30         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e35         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e37         call       j_dcgettext                                 ; dcgettext
0000000000001e3c         mov        rbx, rax
0000000000001e3f         call       j___errno_location                          ; __errno_location
0000000000001e44         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001e46         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001e49         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001e4e         xor        eax, eax
0000000000001e50         call       j_error                                     ; error

                     loc_1e55:
0000000000001e55         mov        rdi, qword [rsp+0xa8+var_60]                ; argument "__s1" for method j_strcmp, CODE XREF=main+973
0000000000001e5a         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x62ca
0000000000001e61         call       j_strcmp                                    ; strcmp
0000000000001e66         mov        ebp, eax
0000000000001e68         call       j___errno_location                          ; __errno_location
0000000000001e6d         test       ebp, ebp
0000000000001e6f         mov        rbx, rax
0000000000001e72         jne        loc_1e98

0000000000001e74         lea        rsi, qword [aClosingStandar]                ; argument "msgid" for method j_dcgettext, "closing standard input"
0000000000001e7b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e80         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e82         call       j_dcgettext                                 ; dcgettext
0000000000001e87         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000001e89         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001e8c         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001e91         xor        eax, eax
0000000000001e93         call       j_error                                     ; error

                     loc_1e98:
0000000000001e98         mov        rdx, qword [rsp+0xa8+var_60]                ; CODE XREF=main+1650
0000000000001e9d         mov        esi, 0x3
0000000000001ea2         xor        edi, edi
0000000000001ea4         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001ea9         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000001eab         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6284
0000000000001eb2         mov        rcx, rax
0000000000001eb5         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001eba         xor        eax, eax
0000000000001ebc         call       j_error                                     ; error

                     loc_1ec1:
0000000000001ec1         lea        rsi, qword [aInvalidInput]                  ; argument "msgid" for method j_dcgettext, "invalid input", CODE XREF=main+914
0000000000001ec8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ecd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ecf         call       j_dcgettext                                 ; dcgettext
0000000000001ed4         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001ed6         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001ed9         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001ede         xor        eax, eax
0000000000001ee0         call       j_error                                     ; error

                     loc_1ee5:
0000000000001ee5         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=main+905
0000000000001eec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ef1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ef3         call       j_dcgettext                                 ; dcgettext
0000000000001ef8         mov        rbx, rax
0000000000001efb         call       j___errno_location                          ; __errno_location
0000000000001f00         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f02         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001f05         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f0a         xor        eax, eax
0000000000001f0c         call       j_error                                     ; error

                     loc_1f11:
0000000000001f11         lea        rsi, qword [aReadError]                     ; argument "msgid" for method j_dcgettext, "read error", CODE XREF=main+604
0000000000001f18         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f1d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f1f         call       j_dcgettext                                 ; dcgettext
0000000000001f24         mov        rbx, rax
0000000000001f27         call       j___errno_location                          ; __errno_location
0000000000001f2c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f2e         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001f31         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f36         xor        eax, eax
0000000000001f38         call       j_error                                     ; error

                     loc_1f3d:
0000000000001f3d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+995
                        ; endp

                     loc_1f42:
0000000000001f42         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=main+1419
0000000000001f49         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f4e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f50         call       j_dcgettext                                 ; dcgettext
0000000000001f55         mov        rbx, rax
0000000000001f58         call       j___errno_location                          ; __errno_location
0000000000001f5d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f5f         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001f62         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f67         xor        eax, eax
0000000000001f69         call       j_error                                     ; error

                     loc_1f6e:
0000000000001f6e         cmp        eax, 0xffffff7e                             ; CODE XREF=main+277
0000000000001f73         jne        loc_1fad

0000000000001f75         xor        edi, edi                                    ; argument #1 for method usage
0000000000001f77         call       usage                                       ; usage

                     loc_1f7c:
0000000000001f7c         mov        rdi, qword [r12+rax*8+8]                    ; CODE XREF=main+350
0000000000001f81         call       quote                                       ; quote
0000000000001f86         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
0000000000001f8d         mov        rbx, rax
0000000000001f90         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f95         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f97         call       j_dcgettext                                 ; dcgettext
0000000000001f9c         mov        rcx, rbx
0000000000001f9f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001fa2         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001fa4         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001fa6         xor        eax, eax
0000000000001fa8         call       j_error                                     ; error

                     loc_1fad:
0000000000001fad         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+168, main+1907
0000000000001fb2         call       usage                                       ; usage

                     loc_1fb7:
0000000000001fb7         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1153
0000000000001fbc         mov        rdi, rcx                                    ; argument #1 for method j___overflow
0000000000001fbf         call       j___overflow                                ; __overflow
0000000000001fc4         add        eax, 0x1
0000000000001fc7         jne        loc_1c97

0000000000001fcd         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000001fd4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fd9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fdb         call       j_dcgettext                                 ; dcgettext
0000000000001fe0         mov        rbx, rax
0000000000001fe3         call       j___errno_location                          ; __errno_location
0000000000001fe8         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001fea         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001fed         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001ff2         xor        eax, eax
0000000000001ff4         call       j_error                                     ; error
0000000000001ff9         nop        dword [rax]                                 ; End of unwind block (FDE at 0x6fb0)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002000         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x6f14)
0000000000002002         mov        r9, rdx
0000000000002005         pop        rsi
0000000000002006         mov        rdx, rsp
0000000000002009         and        rsp, 0xfffffffffffffff0
000000000000200d         push       rax
000000000000200e         push       rsp
000000000000200f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002016         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000201d         lea        rdi, qword [main]                           ; main
0000000000002024         call       qword [qword_208fd0+8]                      ; 0x208fd8
000000000000202a         hlt
                        ; endp
000000000000202b         align      16                                          ; End of unwind block (FDE at 0x6f14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002030         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002037         push       rbp
0000000000002038         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000203f         cmp        rax, rdi
0000000000002042         mov        rbp, rsp
0000000000002045         je         loc_2060

0000000000002047         mov        rax, qword [qword_208fd0]                   ; qword_208fd0
000000000000204e         test       rax, rax
0000000000002051         je         loc_2060

0000000000002053         pop        rbp
0000000000002054         jmp        rax
                        ; endp
0000000000002056         align      32

                     loc_2060:
0000000000002060         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002061         ret
                        ; endp
0000000000002062         align      16

                     register_tm_clones:
0000000000002070         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002077         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000207e         push       rbp
000000000000207f         sub        rsi, rdi
0000000000002082         mov        rbp, rsp
0000000000002085         sar        rsi, 0x3
0000000000002089         mov        rax, rsi
000000000000208c         shr        rax, 0x3f
0000000000002090         add        rsi, rax
0000000000002093         sar        rsi, 0x1
0000000000002096         je         loc_20b0

0000000000002098         mov        rax, qword [qword_208fe8]                   ; qword_208fe8
000000000000209f         test       rax, rax
00000000000020a2         je         loc_20b0

00000000000020a4         pop        rbp
00000000000020a5         jmp        rax
                        ; endp
00000000000020a7         align      16

                     loc_20b0:
00000000000020b0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
00000000000020b1         ret
                        ; endp
00000000000020b2         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
00000000000020c0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
00000000000020c7         jne        loc_20f8

00000000000020c9         cmp        qword [qword_208ff0], 0x0                   ; qword_208ff0
00000000000020d1         push       rbp
00000000000020d2         mov        rbp, rsp
00000000000020d5         je         loc_20e3

00000000000020d7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
00000000000020de         call       j_qword_208ff0                              ; qword_208ff0

                     loc_20e3:
00000000000020e3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
00000000000020e8         mov        byte [completed.7697], 0x1                  ; completed.7697
00000000000020ef         pop        rbp
00000000000020f0         ret
                        ; endp
00000000000020f1         align      8

                     loc_20f8:
00000000000020f8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
00000000000020fa         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002100         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002101         mov        rbp, rsp
0000000000002104         pop        rbp
0000000000002105         jmp        register_tm_clones                          ; register_tm_clones
000000000000210a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002110         push       r13                                         ; Begin of unwind block (FDE at 0x6f84), CODE XREF=main+1911, main+1970
0000000000002112         push       r12
0000000000002114         mov        edx, 0x5
0000000000002119         push       rbp
000000000000211a         push       rbx
000000000000211b         mov        ebp, edi
000000000000211d         sub        rsp, 0x88
0000000000002124         mov        rbx, qword [program_name]                   ; program_name
000000000000212b         mov        rax, qword [fs:0x28]
0000000000002134         mov        qword [rsp+0xa8+var_30], rax
0000000000002139         xor        eax, eax
000000000000213b         test       edi, edi
000000000000213d         je         loc_216d

000000000000213f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002146         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002148         call       j_dcgettext                                 ; dcgettext
000000000000214d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002154         mov        rdx, rax
0000000000002157         mov        rcx, rbx
000000000000215a         mov        esi, 0x1
000000000000215f         xor        eax, eax
0000000000002161         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2166:
0000000000002166         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+790
0000000000002168         call       j_exit                                      ; exit
                        ; endp

                     loc_216d:
000000000000216d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]\\n", CODE XREF=usage+45
0000000000002174         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002176         call       j_dcgettext                                 ; dcgettext
000000000000217b         mov        rdx, rbx
000000000000217e         mov        rsi, rax
0000000000002181         mov        edi, 0x1
0000000000002186         xor        eax, eax
0000000000002188         call       j___printf_chk                              ; __printf_chk
000000000000218d         lea        rsi, qword [aBasedEncodeOrD]                ; argument "msgid" for method j_dcgettext, "Base%d encode or decode FILE, or standard input, to standard output.\\n"
0000000000002194         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002199         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000219b         call       j_dcgettext                                 ; dcgettext
00000000000021a0         mov        edx, 0x40
00000000000021a5         mov        rsi, rax
00000000000021a8         mov        edi, 0x1
00000000000021ad         xor        eax, eax
00000000000021af         call       j___printf_chk                              ; __printf_chk
00000000000021b4         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021bb         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
00000000000021c2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021c7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021c9         call       j_dcgettext                                 ; dcgettext
00000000000021ce         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021d1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021d4         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021d9         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021e0         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
00000000000021e7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021ec         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021ee         call       j_dcgettext                                 ; dcgettext
00000000000021f3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021f6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021f9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021fe         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002205         lea        rsi, qword [aDDecodeDecodeD]                ; argument "msgid" for method j_dcgettext, "  -d, --decode          decode data\\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\\n                          Use 0 to disable line wrapping\\n\\n"
000000000000220c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002211         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002213         call       j_dcgettext                                 ; dcgettext
0000000000002218         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000221b         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000221e         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002223         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000222a         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000002231         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002236         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002238         call       j_dcgettext                                 ; dcgettext
000000000000223d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002240         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002243         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002248         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000224f         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002256         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000225b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000225d         call       j_dcgettext                                 ; dcgettext
0000000000002262         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002265         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002268         lea        rbx, qword [aBase64]                        ; "base64"
000000000000226f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002274         lea        rsi, qword [aNtheDataAreEnc]                ; argument "msgid" for method j_dcgettext, "\\nThe data are encoded as described for the %s alphabet in RFC 4648.\\nWhen decoding, the input may contain newlines in addition to the bytes of\\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\\nfrom any other non-alphabet bytes in the encod…"
000000000000227b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002280         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002282         call       j_dcgettext                                 ; dcgettext
0000000000002287         lea        rcx, qword [aBase64]                        ; "base64"
000000000000228e         mov        rsi, rax
0000000000002291         mov        edi, 0x1
0000000000002296         xor        eax, eax
0000000000002298         mov        rdx, rcx
000000000000229b         call       j___printf_chk                              ; __printf_chk
00000000000022a0         lea        rax, qword [aUsageSOptionFi+30]             ; 0x5bc9
00000000000022a7         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000022ae         mov        qword [rsp+0xa8+var_48], 0x0
00000000000022b7         mov        qword [rsp+0xa8+var_40], 0x0
00000000000022c0         mov        rdx, rsp
00000000000022c3         mov        qword [rsp+0xa8+var_A8], rax
00000000000022c7         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000022ce         mov        qword [rsp+0xa8+var_78], rcx
00000000000022d3         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000022da         mov        qword [rsp+0xa8+var_A0], rax
00000000000022df         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000022e6         mov        qword [rsp+0xa8+var_68], rcx
00000000000022eb         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000022f2         mov        qword [rsp+0xa8+var_98], rax
00000000000022f7         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000022fe         mov        qword [rsp+0xa8+var_58], rcx
0000000000002303         mov        qword [rsp+0xa8+var_90], rax
0000000000002308         lea        rax, qword [aSha224sum]                     ; "sha224sum"
000000000000230f         mov        qword [rsp+0xa8+var_88], rax
0000000000002314         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000231b         mov        qword [rsp+0xa8+var_80], rax
0000000000002320         mov        qword [rsp+0xa8+var_70], rax
0000000000002325         mov        qword [rsp+0xa8+var_60], rax
000000000000232a         mov        qword [rsp+0xa8+var_50], rax
000000000000232f         nop

                     loc_2330:
0000000000002330         add        rdx, 0x10                                   ; CODE XREF=usage+573
0000000000002334         mov        rdi, qword [rdx]
0000000000002337         test       rdi, rdi
000000000000233a         je         loc_234f

000000000000233c         mov        ecx, 0x7
0000000000002341         mov        rsi, rbx
0000000000002344         rep  cmpsb byte [rsi], byte [rdi]
0000000000002346         seta       al
0000000000002349         sbb        al, 0x0
000000000000234b         test       al, al
000000000000234d         jne        loc_2330

                     loc_234f:
000000000000234f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+554
0000000000002353         xor        edi, edi
0000000000002355         mov        edx, 0x5
000000000000235a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002361         test       r12, r12
0000000000002364         je         loc_242b

000000000000236a         call       j_dcgettext                                 ; dcgettext
000000000000236f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002376         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5c3f
000000000000237d         mov        rsi, rax
0000000000002380         mov        edi, 0x1
0000000000002385         xor        eax, eax
0000000000002387         call       j___printf_chk                              ; __printf_chk
000000000000238c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000238e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002393         call       j_setlocale                                 ; setlocale
0000000000002398         test       rax, rax
000000000000239b         je         loc_23b9

000000000000239d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5c4d
00000000000023a4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000023a9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000023ac         call       j_strncmp                                   ; strncmp
00000000000023b1         test       eax, eax
00000000000023b3         jne        loc_24c0

                     loc_23b9:
00000000000023b9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+651, usage+981
00000000000023c0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023c2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023c7         call       j_dcgettext                                 ; dcgettext
00000000000023cc         lea        rcx, qword [aBase64]                        ; "base64"
00000000000023d3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000023da         mov        rsi, rax
00000000000023dd         mov        edi, 0x1
00000000000023e2         xor        eax, eax
00000000000023e4         call       j___printf_chk                              ; __printf_chk
00000000000023e9         cmp        r12, rbx
00000000000023ec         lea        rcx, qword [aMulticallInvoc+10]             ; 0x5be5
00000000000023f3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x6801
00000000000023fa         cmove      rbx, rcx

                     loc_23fe:
00000000000023fe         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+932
0000000000002405         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002407         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000240c         call       j_dcgettext                                 ; dcgettext
0000000000002411         mov        rcx, rbx
0000000000002414         mov        rsi, rax
0000000000002417         mov        rdx, r12
000000000000241a         mov        edi, 0x1
000000000000241f         xor        eax, eax
0000000000002421         call       j___printf_chk                              ; __printf_chk
0000000000002426         jmp        loc_2166

                     loc_242b:
000000000000242b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+596
0000000000002430         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002437         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5c3f
000000000000243e         mov        rsi, rax
0000000000002441         mov        edi, 0x1
0000000000002446         xor        eax, eax
0000000000002448         call       j___printf_chk                              ; __printf_chk
000000000000244d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000244f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002454         call       j_setlocale                                 ; setlocale
0000000000002459         test       rax, rax
000000000000245c         je         loc_2476

000000000000245e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5c4d
0000000000002465         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000246a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000246d         call       j_strncmp                                   ; strncmp
0000000000002472         test       eax, eax
0000000000002474         jne        loc_24b9

                     loc_2476:
0000000000002476         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+844
000000000000247d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002482         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002484         lea        r12, qword [aBase64]                        ; "base64"
000000000000248b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x5be5
0000000000002492         call       j_dcgettext                                 ; dcgettext
0000000000002497         lea        rcx, qword [aBase64]                        ; "base64"
000000000000249e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000024a5         mov        rsi, rax
00000000000024a8         mov        edi, 0x1
00000000000024ad         xor        eax, eax
00000000000024af         call       j___printf_chk                              ; __printf_chk
00000000000024b4         jmp        loc_23fe

                     loc_24b9:
00000000000024b9         lea        r12, qword [aBase64]                        ; "base64", CODE XREF=usage+868

                     loc_24c0:
00000000000024c0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+675
00000000000024c7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000024ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024d0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024d5         call       j_dcgettext                                 ; dcgettext
00000000000024da         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024dd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024e0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024e5         jmp        loc_23b9
00000000000024ea         align      16                                          ; End of unwind block (FDE at 0x6f84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     decode_4:
00000000000024f0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x7004), CODE XREF=base64_decode_ctx+228, base64_decode_ctx+353
00000000000024f2         cmp        rsi, 0x1
00000000000024f6         jbe        loc_2589

00000000000024fc         movzx      r8d, byte [rdi]
0000000000002500         lea        r9, qword [b64]                             ; b64
0000000000002507         movzx      r8d, byte [r9+r8]
000000000000250c         test       r8b, r8b
000000000000250f         js         loc_2589

0000000000002511         movzx      r10d, byte [rdi+1]
0000000000002516         movzx      r10d, byte [r9+r10]
000000000000251b         test       r10b, r10b
000000000000251e         js         loc_2589

0000000000002520         cmp        qword [rcx], 0x0
0000000000002524         mov        rax, qword [rdx]
0000000000002527         jne        loc_25a0

                     loc_2529:
0000000000002529         cmp        rsi, 0x2                                    ; CODE XREF=decode_4+202
000000000000252d         je         loc_2596

000000000000252f         movzx      r8d, byte [rdi+2]
0000000000002534         cmp        r8b, 0x3d
0000000000002538         je         loc_2590

000000000000253a         movzx      r8d, byte [r9+r8]
000000000000253f         test       r8b, r8b
0000000000002542         js         loc_2596

0000000000002544         cmp        qword [rcx], 0x0
0000000000002548         jne        loc_25c0

                     loc_254a:
000000000000254a         cmp        rsi, 0x3                                    ; CODE XREF=decode_4+234
000000000000254e         je         loc_2596

0000000000002550         movzx      edi, byte [rdi+3]
0000000000002554         cmp        dil, 0x3d
0000000000002558         je         loc_25f0

000000000000255e         movzx      esi, byte [r9+rdi]
0000000000002563         test       sil, sil
0000000000002566         js         loc_2596

0000000000002568         cmp        qword [rcx], 0x0
000000000000256c         je         loc_2581

000000000000256e         shl        r8d, 0x6
0000000000002572         add        rax, 0x1
0000000000002576         or         r8d, esi
0000000000002579         mov        byte [rax-1], r8b
000000000000257d         sub        qword [rcx], 0x1

                     loc_2581:
0000000000002581         mov        qword [rdx], rax                            ; CODE XREF=decode_4+124, decode_4+246, decode_4+262
0000000000002584         mov        eax, 0x1

                     loc_2589:
0000000000002589         ret                                                    ; CODE XREF=decode_4+6, decode_4+31, decode_4+46
                        ; endp
000000000000258b         align      16

                     loc_2590:
0000000000002590         cmp        rsi, 0x4                                    ; CODE XREF=decode_4+72
0000000000002594         je         loc_25e0

                     loc_2596:
0000000000002596         mov        qword [rdx], rax                            ; CODE XREF=decode_4+61, decode_4+82, decode_4+94, decode_4+118, decode_4+244, decode_4+260
0000000000002599         xor        eax, eax
000000000000259b         ret
                        ; endp
000000000000259c         align      32

                     loc_25a0:
00000000000025a0         mov        r11d, r10d                                  ; CODE XREF=decode_4+55
00000000000025a3         shl        r8d, 0x2
00000000000025a7         add        rax, 0x1
00000000000025ab         sar        r11b, 0x4
00000000000025af         or         r8d, r11d
00000000000025b2         mov        byte [rax-1], r8b
00000000000025b6         sub        qword [rcx], 0x1
00000000000025ba         jmp        loc_2529
00000000000025bf         align      64

                     loc_25c0:
00000000000025c0         mov        r11d, r8d                                   ; CODE XREF=decode_4+88
00000000000025c3         shl        r10d, 0x4
00000000000025c7         add        rax, 0x1
00000000000025cb         sar        r11b, 0x2
00000000000025cf         or         r10d, r11d
00000000000025d2         mov        byte [rax-1], r10b
00000000000025d6         sub        qword [rcx], 0x1
00000000000025da         jmp        loc_254a
00000000000025df         align      32

                     loc_25e0:
00000000000025e0         cmp        byte [rdi+3], 0x3d                          ; CODE XREF=decode_4+164
00000000000025e4         jne        loc_2596

00000000000025e6         jmp        loc_2581
00000000000025e8         align      16

                     loc_25f0:
00000000000025f0         cmp        rsi, 0x4                                    ; CODE XREF=decode_4+104
00000000000025f4         jne        loc_2596

00000000000025f6         jmp        loc_2581
00000000000025f8         align      512                                         ; End of unwind block (FDE at 0x7004)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64_encode:
0000000000002600         test       cl, 0x3                                     ; Begin of unwind block (FDE at 0x7018), CODE XREF=main+1267, base64_encode_alloc+118
0000000000002603         jne        loc_2619

0000000000002605         mov        rax, rcx
0000000000002608         shr        rax, 0x2
000000000000260c         lea        rax, qword [rax+rax*2]
0000000000002610         cmp        rax, rsi
0000000000002613         je         loc_2728

                     loc_2619:
0000000000002619         lea        r9, qword [b64c]                            ; b64c, CODE XREF=base64_encode+3
0000000000002620         jmp        loc_26a6
0000000000002625         align      8

                     loc_2628:
0000000000002628         movzx      r8d, byte [rdi+1]                           ; CODE XREF=base64_encode+219
000000000000262d         mov        r10d, r8d
0000000000002630         shr        r10b, 0x4
0000000000002634         add        eax, r10d
0000000000002637         and        eax, 0x3f
000000000000263a         cmp        rcx, 0x2
000000000000263e         movzx      eax, byte [r9+rax]
0000000000002643         mov        byte [rdx+1], al
0000000000002646         je         loc_2722

000000000000264c         shl        r8d, 0x2
0000000000002650         cmp        rsi, 0x2
0000000000002654         je         loc_2710

000000000000265a         movzx      eax, byte [rdi+2]
000000000000265e         mov        r10d, eax
0000000000002661         shr        r10b, 0x6
0000000000002665         add        r8d, r10d
0000000000002668         and        r8d, 0x3f
000000000000266c         cmp        rcx, 0x3
0000000000002670         movzx      r8d, byte [r9+r8]
0000000000002675         mov        byte [rdx+2], r8b
0000000000002679         je         loc_2722

000000000000267f         and        eax, 0x3f
0000000000002682         cmp        rcx, 0x4
0000000000002686         movzx      eax, byte [r9+rax]
000000000000268b         mov        byte [rdx+3], al
000000000000268e         je         loc_2722

0000000000002694         sub        rsi, 0x3
0000000000002698         je         loc_269e

000000000000269a         add        rdi, 0x3

                     loc_269e:
000000000000269e         add        rdx, 0x4                                    ; CODE XREF=base64_encode+152, base64_encode+264
00000000000026a2         sub        rcx, 0x4

                     loc_26a6:
00000000000026a6         test       rsi, rsi                                    ; CODE XREF=base64_encode+32
00000000000026a9         je         loc_27a8

00000000000026af         test       rcx, rcx
00000000000026b2         je         loc_27a8

00000000000026b8         movzx      eax, byte [rdi]
00000000000026bb         mov        r8d, eax
00000000000026be         shr        r8b, 0x2
00000000000026c2         and        r8d, 0x3f
00000000000026c6         cmp        rcx, 0x1
00000000000026ca         movzx      r8d, byte [r9+r8]
00000000000026cf         mov        byte [rdx], r8b
00000000000026d2         je         loc_2722

00000000000026d4         shl        eax, 0x4
00000000000026d7         cmp        rsi, 0x1
00000000000026db         jne        loc_2628

00000000000026e1         and        eax, 0x30
00000000000026e4         cmp        rcx, 0x2
00000000000026e8         movzx      eax, byte [r9+rax]
00000000000026ed         mov        byte [rdx+1], al
00000000000026f0         je         loc_2722

00000000000026f2         cmp        rcx, 0x3
00000000000026f6         mov        byte [rdx+2], 0x3d
00000000000026fa         je         loc_2722

                     loc_26fc:
00000000000026fc         cmp        rcx, 0x4                                    ; CODE XREF=base64_encode+288
0000000000002700         mov        byte [rdx+3], 0x3d
0000000000002704         je         loc_2722

0000000000002706         xor        esi, esi
0000000000002708         jmp        loc_269e
000000000000270a         align      16

                     loc_2710:
0000000000002710         and        r8d, 0x3c                                   ; CODE XREF=base64_encode+84
0000000000002714         cmp        rcx, 0x3
0000000000002718         movzx      eax, byte [r9+r8]
000000000000271d         mov        byte [rdx+2], al
0000000000002720         jne        loc_26fc

                     loc_2722:
0000000000002722         ret                                                    ; CODE XREF=base64_encode+70, base64_encode+121, base64_encode+142, base64_encode+210, base64_encode+240, base64_encode+250, base64_encode+260, base64_encode+310, base64_encode+427
                        ; endp
0000000000002724         align      8

                     loc_2728:
0000000000002728         test       rax, rax                                    ; CODE XREF=base64_encode+19
000000000000272b         lea        r8, qword [rdi+rax]
000000000000272f         lea        rcx, qword [b64c]                           ; b64c
0000000000002736         je         loc_2722

0000000000002738         nop        dword [rax+rax]

                     loc_2740:
0000000000002740         movzx      eax, byte [rdi]                             ; CODE XREF=base64_encode+414
0000000000002743         add        rdi, 0x3
0000000000002747         add        rdx, 0x4
000000000000274b         mov        esi, eax
000000000000274d         shl        eax, 0x4
0000000000002750         shr        sil, 0x2
0000000000002754         and        esi, 0x3f
0000000000002757         movzx      esi, byte [rcx+rsi]
000000000000275b         mov        byte [rdx-4], sil
000000000000275f         movzx      esi, byte [rdi-2]
0000000000002763         mov        r9d, esi
0000000000002766         shr        r9b, 0x4
000000000000276a         add        eax, r9d
000000000000276d         and        eax, 0x3f
0000000000002770         movzx      eax, byte [rcx+rax]
0000000000002774         mov        byte [rdx-3], al
0000000000002777         movzx      eax, byte [rdi-1]
000000000000277b         mov        r9d, eax
000000000000277e         and        eax, 0x3f
0000000000002781         shr        r9b, 0x6
0000000000002785         movzx      eax, byte [rcx+rax]
0000000000002789         lea        esi, dword [r9+rsi*4]
000000000000278d         and        esi, 0x3f
0000000000002790         movzx      esi, byte [rcx+rsi]
0000000000002794         mov        byte [rdx-2], sil
0000000000002798         cmp        r8, rdi
000000000000279b         mov        byte [rdx-1], al
000000000000279e         jne        loc_2740

00000000000027a0         ret
                        ; endp
00000000000027a2         align      8

                     loc_27a8:
00000000000027a8         test       rcx, rcx                                    ; CODE XREF=base64_encode+169, base64_encode+178
00000000000027ab         je         loc_2722

00000000000027b1         mov        byte [rdx], 0x0
00000000000027b4         ret
                        ; endp
00000000000027b5         align      64                                          ; End of unwind block (FDE at 0x7018)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64_encode_alloc:
00000000000027c0         push       r14                                         ; Begin of unwind block (FDE at 0x702c)
00000000000027c2         push       r13
00000000000027c4         mov        r13, rdx
00000000000027c7         lea        rdx, qword [rsi+2]
00000000000027cb         push       r12
00000000000027cd         push       rbp
00000000000027ce         push       rbx
00000000000027cf         movabs     rbx, 0xaaaaaaaaaaaaaaab
00000000000027d9         mov        rax, rdx
00000000000027dc         mul        rbx
00000000000027df         shr        rdx, 0x1
00000000000027e2         lea        rbx, qword [rdx*4]
00000000000027ea         lea        rbp, qword [rbx+1]
00000000000027ee         cmp        rsi, rbp
00000000000027f1         jbe        loc_2810

00000000000027f3         mov        qword [r13], 0x0
00000000000027fb         xor        ebp, ebp

                     loc_27fd:
00000000000027fd         pop        rbx                                         ; CODE XREF=base64_encode_alloc+101
00000000000027fe         mov        rax, rbp
0000000000002801         pop        rbp
0000000000002802         pop        r12
0000000000002804         pop        r13
0000000000002806         pop        r14
0000000000002808         ret
                        ; endp
0000000000002809         align      16

                     loc_2810:
0000000000002810         mov        r14, rdi                                    ; CODE XREF=base64_encode_alloc+49
0000000000002813         mov        rdi, rbp                                    ; argument "__size" for method j_malloc
0000000000002816         mov        r12, rsi
0000000000002819         call       j_malloc                                    ; malloc
000000000000281e         test       rax, rax
0000000000002821         mov        qword [r13], rax
0000000000002825         je         loc_27fd

0000000000002827         mov        rcx, rbp
000000000000282a         mov        rdx, rax
000000000000282d         mov        rbp, rbx
0000000000002830         mov        rsi, r12
0000000000002833         mov        rdi, r14
0000000000002836         call       base64_encode                               ; base64_encode
000000000000283b         pop        rbx
000000000000283c         mov        rax, rbp
000000000000283f         pop        rbp
0000000000002840         pop        r12
0000000000002842         pop        r13
0000000000002844         pop        r14
0000000000002846         ret
                        ; endp
0000000000002847         align      16                                          ; End of unwind block (FDE at 0x702c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isbase64:
0000000000002850         lea        rax, qword [b64]                            ; Begin of unwind block (FDE at 0x7078), b64, CODE XREF=main+715
0000000000002857         movzx      edi, dil
000000000000285b         movzx      eax, byte [rax+rdi]
000000000000285f         not        eax
0000000000002861         shr        al, 0x7
0000000000002864         ret
                        ; endp
0000000000002865         align      16                                          ; End of unwind block (FDE at 0x7078)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64_decode_ctx_init:
0000000000002870         mov        dword [rdi], 0x0                            ; Begin of unwind block (FDE at 0x708c), CODE XREF=main+556
0000000000002876         ret
                        ; endp
0000000000002877         align      128                                         ; End of unwind block (FDE at 0x708c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_61: int8_t, -97
        ;    var_62: int8_t, -98
        ;    var_63: int8_t, -99


                     base64_decode_ctx:
0000000000002880         push       r15                                         ; Begin of unwind block (FDE at 0x70a0), CODE XREF=main+871, base64_decode_alloc_ctx+90
0000000000002882         push       r14
0000000000002884         mov        r14, rdi
0000000000002887         push       r13
0000000000002889         push       r12
000000000000288b         mov        r13, rdx
000000000000288e         push       rbp
000000000000288f         push       rbx
0000000000002890         mov        r12, rsi
0000000000002893         sub        rsp, 0x38
0000000000002897         mov        r15, qword [r8]
000000000000289a         mov        rbx, qword [fs:0x28]
00000000000028a3         mov        qword [rsp+0x68+var_40], rbx
00000000000028a8         xor        ebx, ebx
00000000000028aa         test       rdi, rdi
00000000000028ad         mov        qword [rsp+0x68+var_50], rcx
00000000000028b2         mov        qword [rsp+0x68+var_58], r8
00000000000028b7         mov        qword [rsp+0x68+var_48], r15
00000000000028bc         setne      byte [rsp+0x68+var_61]
00000000000028c1         je         loc_2af0

00000000000028c7         test       rdx, rdx
00000000000028ca         mov        eax, dword [rdi]
00000000000028cc         setne      byte [rsp+0x68+var_63]
00000000000028d1         movzx      ebx, byte [rsp+0x68+var_63]
00000000000028d6         test       eax, eax
00000000000028d8         sete       al
00000000000028db         and        eax, ebx
00000000000028dd         mov        byte [rsp+0x68+var_62], al

                     loc_28e1:
00000000000028e1         lea        rax, qword [r14+4]                          ; CODE XREF=base64_decode_ctx+634
00000000000028e5         lea        rbp, qword [rsp+0x68+var_48]
00000000000028ea         lea        rbx, qword [rsp+0x68+var_50]
00000000000028ef         mov        qword [rsp+0x68+var_60], rax

                     loc_28f4:
00000000000028f4         cmp        byte [rsp+0x68+var_62], 0x0                 ; CODE XREF=base64_decode_ctx+592
00000000000028f9         mov        rdx, r15
00000000000028fc         jne        loc_29d5

                     loc_2902:
0000000000002902         test       r13, r13                                    ; CODE XREF=base64_decode_ctx+367
0000000000002905         sete       al
0000000000002908         and        al, byte [rsp+0x68+var_63]
000000000000290c         jne        loc_2998

                     loc_2912:
0000000000002912         test       r13, r13                                    ; CODE XREF=base64_decode_ctx+272
0000000000002915         je         loc_29f8

000000000000291b         cmp        byte [r12], 0xa
0000000000002920         je         loc_2ac0

0000000000002926         sub        rdx, r15
0000000000002929         add        qword [rsp+0x68+var_50], rdx
000000000000292e         test       r14, r14
0000000000002931         mov        qword [rsp+0x68+var_48], r15
0000000000002936         lea        r15, qword [r12+r13]
000000000000293a         jne        loc_2a11

                     loc_2940:
0000000000002940         mov        rdi, r12                                    ; CODE XREF=base64_decode_ctx+617

                     loc_2943:
0000000000002943         cmp        r13, 0x3                                    ; CODE XREF=base64_decode_ctx+473, base64_decode_ctx+560
0000000000002947         ja         loc_295b

0000000000002949         cmp        byte [rsp+0x68+var_61], 0x0
000000000000294e         je         loc_295b

0000000000002950         cmp        byte [rsp+0x68+var_63], 0x0
0000000000002955         jne        loc_2a5f

                     loc_295b:
000000000000295b         mov        rcx, rbp                                    ; CODE XREF=base64_decode_ctx+199, base64_decode_ctx+206, base64_decode_ctx+665
000000000000295e         mov        rdx, rbx
0000000000002961         mov        rsi, r13
0000000000002964         call       decode_4                                    ; decode_4
0000000000002969         test       al, al
000000000000296b         je         loc_2b1e

0000000000002971         sub        r15, r12
0000000000002974         cmp        byte [rsp+0x68+var_62], 0x0
0000000000002979         mov        r13, r15
000000000000297c         mov        r15, qword [rsp+0x68+var_48]
0000000000002981         mov        rdx, r15
0000000000002984         jne        loc_29d5

0000000000002986         test       r13, r13
0000000000002989         sete       al
000000000000298c         and        al, byte [rsp+0x68+var_63]
0000000000002990         je         loc_2912

0000000000002992         nop        word [rax+rax]

                     loc_2998:
0000000000002998         mov        rbx, qword [rsp+0x68+var_58]                ; CODE XREF=base64_decode_ctx+140, base64_decode_ctx+489, base64_decode_ctx+647, base64_decode_ctx+675
000000000000299d         sub        qword [rbx], rdx
00000000000029a0         mov        rbx, qword [rsp+0x68+var_40]
00000000000029a5         xor        rbx, qword [fs:0x28]
00000000000029ae         jne        loc_2b28

00000000000029b4         add        rsp, 0x38
00000000000029b8         pop        rbx
00000000000029b9         pop        rbp
00000000000029ba         pop        r12
00000000000029bc         pop        r13
00000000000029be         pop        r14
00000000000029c0         pop        r15
00000000000029c2         ret
                        ; endp
00000000000029c3         align      8

                     loc_29c8:
00000000000029c8         mov        r15, qword [rsp+0x68+var_48]                ; CODE XREF=base64_decode_ctx+360
00000000000029cd         add        r12, 0x4
00000000000029d1         sub        r13, 0x4

                     loc_29d5:
00000000000029d5         mov        rcx, rbp                                    ; CODE XREF=base64_decode_ctx+124, base64_decode_ctx+260
00000000000029d8         mov        rdx, rbx
00000000000029db         mov        rsi, r13
00000000000029de         mov        rdi, r12
00000000000029e1         call       decode_4                                    ; decode_4
00000000000029e6         test       al, al
00000000000029e8         jne        loc_29c8

00000000000029ea         mov        rdx, qword [rsp+0x68+var_48]
00000000000029ef         jmp        loc_2902
00000000000029f4         align      8

                     loc_29f8:
00000000000029f8         sub        rdx, r15                                    ; CODE XREF=base64_decode_ctx+149
00000000000029fb         add        qword [rsp+0x68+var_50], rdx
0000000000002a00         test       r14, r14
0000000000002a03         mov        qword [rsp+0x68+var_48], r15
0000000000002a08         je         loc_2aff

0000000000002a0e         mov        r15, r12

                     loc_2a11:
0000000000002a11         mov        eax, dword [r14]                            ; CODE XREF=base64_decode_ctx+186
0000000000002a14         cmp        eax, 0x4
0000000000002a17         je         loc_2a70

0000000000002a19         test       eax, eax
0000000000002a1b         je         loc_2a77

                     loc_2a1d:
0000000000002a1d         cmp        r12, r15                                    ; CODE XREF=base64_decode_ctx+535
0000000000002a20         jae        loc_2a4e

0000000000002a22         nop        word [rax+rax]

                     loc_2a28:
0000000000002a28         add        r12, 0x1                                    ; CODE XREF=base64_decode_ctx+460
0000000000002a2c         movzx      edx, byte [r12-1]
0000000000002a32         cmp        dl, 0xa
0000000000002a35         je         loc_2a49

0000000000002a37         lea        ecx, dword [rax+1]
0000000000002a3a         cmp        ecx, 0x4
0000000000002a3d         mov        dword [r14], ecx
0000000000002a40         mov        byte [r14+rax+4], dl
0000000000002a45         je         loc_2aa0

0000000000002a47         mov        eax, ecx

                     loc_2a49:
0000000000002a49         cmp        r12, r15                                    ; CODE XREF=base64_decode_ctx+437
0000000000002a4c         jne        loc_2a28

                     loc_2a4e:
0000000000002a4e         mov        r13d, eax                                   ; CODE XREF=base64_decode_ctx+416
0000000000002a51         mov        rdi, qword [rsp+0x68+var_60]
0000000000002a56         test       r13, r13
0000000000002a59         jne        loc_2943

                     loc_2a5f:
0000000000002a5f         mov        rdx, qword [rsp+0x68+var_48]                ; CODE XREF=base64_decode_ctx+213, base64_decode_ctx+566
0000000000002a64         mov        eax, 0x1
0000000000002a69         jmp        loc_2998
0000000000002a6e         align      16

                     loc_2a70:
0000000000002a70         mov        dword [r14], 0x0                            ; CODE XREF=base64_decode_ctx+407

                     loc_2a77:
0000000000002a77         cmp        r13, 0x3                                    ; CODE XREF=base64_decode_ctx+411
0000000000002a7b         jle        loc_2a94

0000000000002a7d         mov        edx, 0x4                                    ; argument "__n" for method j_memchr
0000000000002a82         mov        esi, 0xa                                    ; argument "__c" for method j_memchr
0000000000002a87         mov        rdi, r12                                    ; argument "__s" for method j_memchr
0000000000002a8a         call       j_memchr                                    ; memchr
0000000000002a8f         test       rax, rax
0000000000002a92         je         loc_2b0c

                     loc_2a94:
0000000000002a94         mov        eax, dword [r14]                            ; CODE XREF=base64_decode_ctx+507
0000000000002a97         jmp        loc_2a1d
0000000000002a9c         align      32

                     loc_2aa0:
0000000000002aa0         mov        eax, 0x4                                    ; CODE XREF=base64_decode_ctx+453
0000000000002aa5         mov        rdi, qword [rsp+0x68+var_60]
0000000000002aaa         mov        r13d, eax
0000000000002aad         test       r13, r13
0000000000002ab0         jne        loc_2943

0000000000002ab6         jmp        loc_2a5f
0000000000002ab8         align      64

                     loc_2ac0:
0000000000002ac0         test       r14, r14                                    ; CODE XREF=base64_decode_ctx+160
0000000000002ac3         je         loc_2ad8

0000000000002ac5         add        r12, 0x1
0000000000002ac9         sub        r13, 0x1
0000000000002acd         mov        r15, rdx
0000000000002ad0         jmp        loc_28f4
0000000000002ad5         align      8

                     loc_2ad8:
0000000000002ad8         sub        rdx, r15                                    ; CODE XREF=base64_decode_ctx+579
0000000000002adb         mov        qword [rsp+0x68+var_48], r15
0000000000002ae0         add        qword [rsp+0x68+var_50], rdx
0000000000002ae5         lea        r15, qword [r12+r13]
0000000000002ae9         jmp        loc_2940
0000000000002aee         align      16

                     loc_2af0:
0000000000002af0         mov        byte [rsp+0x68+var_62], 0x1                 ; CODE XREF=base64_decode_ctx+65
0000000000002af5         mov        byte [rsp+0x68+var_63], 0x1
0000000000002afa         jmp        loc_28e1

                     loc_2aff:
0000000000002aff         mov        rdx, r15                                    ; CODE XREF=base64_decode_ctx+392
0000000000002b02         mov        eax, 0x1
0000000000002b07         jmp        loc_2998

                     loc_2b0c:
0000000000002b0c         mov        rdi, r12                                    ; CODE XREF=base64_decode_ctx+530
0000000000002b0f         mov        r13d, 0x4
0000000000002b15         add        r12, 0x4
0000000000002b19         jmp        loc_295b

                     loc_2b1e:
0000000000002b1e         mov        rdx, qword [rsp+0x68+var_48]                ; CODE XREF=base64_decode_ctx+235
0000000000002b23         jmp        loc_2998

                     loc_2b28:
0000000000002b28         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=base64_decode_ctx+302
                        ; endp
0000000000002b2d         align      16                                          ; End of unwind block (FDE at 0x70a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_39: int8_t, -57


                     base64_decode_alloc_ctx:
0000000000002b30         push       r14                                         ; Begin of unwind block (FDE at 0x70ec)
0000000000002b32         push       r13
0000000000002b34         mov        r14, rdx
0000000000002b37         push       r12
0000000000002b39         push       rbp
0000000000002b3a         mov        r12, rdi
0000000000002b3d         push       rbx
0000000000002b3e         mov        r13, rsi
0000000000002b41         mov        rbx, rcx
0000000000002b44         mov        rbp, r8
0000000000002b47         sub        rsp, 0x20
0000000000002b4b         mov        rax, qword [fs:0x28]
0000000000002b54         mov        qword [rsp+0x48+var_30], rax
0000000000002b59         xor        eax, eax
0000000000002b5b         mov        rax, rdx
0000000000002b5e         shr        rax, 0x2
0000000000002b62         lea        rdi, qword [rax+rax*2+3]                    ; argument "__size" for method j_malloc
0000000000002b67         mov        qword [rsp+0x48+var_38], rdi
0000000000002b6c         call       j_malloc                                    ; malloc
0000000000002b71         test       rax, rax
0000000000002b74         mov        qword [rbx], rax
0000000000002b77         je         loc_2ba8

0000000000002b79         lea        r8, qword [rsp+0x48+var_38]
0000000000002b7e         mov        rcx, rax
0000000000002b81         mov        rdx, r14
0000000000002b84         mov        rsi, r13
0000000000002b87         mov        rdi, r12
0000000000002b8a         call       base64_decode_ctx                           ; base64_decode_ctx
0000000000002b8f         test       al, al
0000000000002b91         je         loc_2bd0

0000000000002b93         test       rbp, rbp
0000000000002b96         je         loc_2ba8

0000000000002b98         mov        rdx, qword [rsp+0x48+var_38]
0000000000002b9d         mov        qword [rbp], rdx
0000000000002ba1         jmp        loc_2bad
0000000000002ba3         align      8

                     loc_2ba8:
0000000000002ba8         mov        eax, 0x1                                    ; CODE XREF=base64_decode_alloc_ctx+71, base64_decode_alloc_ctx+102

                     loc_2bad:
0000000000002bad         mov        rcx, qword [rsp+0x48+var_30]                ; CODE XREF=base64_decode_alloc_ctx+113, base64_decode_alloc_ctx+184
0000000000002bb2         xor        rcx, qword [fs:0x28]
0000000000002bbb         jne        loc_2bea

0000000000002bbd         add        rsp, 0x20
0000000000002bc1         pop        rbx
0000000000002bc2         pop        rbp
0000000000002bc3         pop        r12
0000000000002bc5         pop        r13
0000000000002bc7         pop        r14
0000000000002bc9         ret
                        ; endp
0000000000002bca         align      16

                     loc_2bd0:
0000000000002bd0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=base64_decode_alloc_ctx+97
0000000000002bd3         mov        byte [rsp+0x48+var_39], al
0000000000002bd7         call       j_free                                      ; free
0000000000002bdc         mov        qword [rbx], 0x0
0000000000002be3         movzx      eax, byte [rsp+0x48+var_39]
0000000000002be8         jmp        loc_2bad

                     loc_2bea:
0000000000002bea         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=base64_decode_alloc_ctx+139
                        ; endp
0000000000002bef         align      16                                          ; End of unwind block (FDE at 0x70ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002bf0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x7134), file_name
0000000000002bf7         ret
                        ; endp
0000000000002bf8         align      1024                                        ; End of unwind block (FDE at 0x7134)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002c00         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x7148), ignore_EPIPE
0000000000002c07         ret
                        ; endp
0000000000002c08         align      16                                          ; End of unwind block (FDE at 0x7148)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002c10         push       rbp                                         ; Begin of unwind block (FDE at 0x715c), DATA XREF=main+99
0000000000002c11         push       rbx
0000000000002c12         sub        rsp, 0x8
0000000000002c16         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002c1d         call       close_stream                                ; close_stream
0000000000002c22         test       eax, eax
0000000000002c24         je         loc_2c3c

0000000000002c26         call       j___errno_location                          ; __errno_location
0000000000002c2b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002c32         mov        rbx, rax
0000000000002c35         je         loc_2c53

0000000000002c37         cmp        dword [rax], 0x20
0000000000002c3a         jne        loc_2c53

                     loc_2c3c:
0000000000002c3c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002c43         call       close_stream                                ; close_stream
0000000000002c48         test       eax, eax
0000000000002c4a         jne        loc_2c92

0000000000002c4c         add        rsp, 0x8
0000000000002c50         pop        rbx
0000000000002c51         pop        rbp
0000000000002c52         ret
                        ; endp

                     loc_2c53:
0000000000002c53         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000002c5a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c5c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c61         call       j_dcgettext                                 ; dcgettext
0000000000002c66         mov        rdi, qword [file_name]                      ; file_name
0000000000002c6d         mov        rbp, rax
0000000000002c70         test       rdi, rdi
0000000000002c73         je         loc_2c9d

0000000000002c75         call       quotearg_colon                              ; quotearg_colon
0000000000002c7a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002c7c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002c83         mov        rcx, rax
0000000000002c86         mov        r8, rbp
0000000000002c89         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002c8b         xor        eax, eax
0000000000002c8d         call       j_error                                     ; error

                     loc_2c92:
0000000000002c92         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002c98         call       j__exit                                     ; _exit
                        ; endp

                     loc_2c9d:
0000000000002c9d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000002c9f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6284
0000000000002ca6         mov        rcx, rax
0000000000002ca9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002cab         xor        eax, eax
0000000000002cad         call       j_error                                     ; error
0000000000002cb2         jmp        loc_2c92
0000000000002cb4         align      64                                          ; End of unwind block (FDE at 0x715c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000002cc0         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x718c)
                        ; endp
0000000000002cc5         align      16                                          ; End of unwind block (FDE at 0x718c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000002cd0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x71a0), CODE XREF=main+490
0000000000002cd3         je         loc_2cf0

0000000000002cd5         push       rbx
0000000000002cd6         mov        ebx, esi
0000000000002cd8         call       j_fileno                                    ; fileno
0000000000002cdd         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
0000000000002cdf         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000002ce1         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000002ce3         pop        rbx
0000000000002ce4         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000002ce6         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
0000000000002ceb         align      16

                     loc_2cf0:
0000000000002cf0         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000002cf2         align      256                                         ; End of unwind block (FDE at 0x71a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002d00         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x71bc), CODE XREF=main+46
0000000000002d03         push       rbx
0000000000002d04         je         loc_2d7d

0000000000002d06         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002d0b         mov        rbx, rdi
0000000000002d0e         call       j_strrchr                                   ; strrchr
0000000000002d13         test       rax, rax
0000000000002d16         je         loc_2d6d

0000000000002d18         lea        r8, qword [rax+1]
0000000000002d1c         mov        rdx, r8
0000000000002d1f         sub        rdx, rbx
0000000000002d22         cmp        rdx, 0x6
0000000000002d26         jle        loc_2d6d

0000000000002d28         lea        rsi, qword [rax-6]
0000000000002d2c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002d33         mov        ecx, 0x7
0000000000002d38         rep  cmpsb byte [rsi], byte [rdi]
0000000000002d3a         seta       dl
0000000000002d3d         sbb        dl, 0x0
0000000000002d40         test       dl, dl
0000000000002d42         jne        loc_2d6d

0000000000002d44         lea        rdi, qword [aLibs+8]                        ; 0x62c8
0000000000002d4b         mov        ecx, 0x3
0000000000002d50         mov        rsi, r8
0000000000002d53         mov        rbx, r8
0000000000002d56         rep  cmpsb byte [rsi], byte [rdi]
0000000000002d58         seta       dl
0000000000002d5b         sbb        dl, 0x0
0000000000002d5e         test       dl, dl
0000000000002d60         jne        loc_2d6d

0000000000002d62         lea        rbx, qword [rax+4]
0000000000002d66         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2d6d:
0000000000002d6d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002d74         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002d7b         pop        rbx
0000000000002d7c         ret
                        ; endp

                     loc_2d7d:
0000000000002d7d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002d84         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002d8b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002d90         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002d95         call       j_fwrite                                    ; fwrite
0000000000002d9a         call       j_abort                                     ; abort
                        ; endp
0000000000002d9f         align      32                                          ; End of unwind block (FDE at 0x71bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002da0         push       rbp                                         ; Begin of unwind block (FDE at 0x71dc), CODE XREF=sub_35d0+2597, sub_35d0+2619
0000000000002da1         push       rbx
0000000000002da2         mov        rbp, rdi
0000000000002da5         mov        ebx, esi
0000000000002da7         sub        rsp, 0x8
0000000000002dab         call       locale_charset                              ; locale_charset
0000000000002db0         movzx      edx, byte [rax]
0000000000002db3         and        edx, 0xffffffdf
0000000000002db6         cmp        dl, 0x55
0000000000002db9         je         loc_2e30

0000000000002dbb         cmp        dl, 0x47
0000000000002dbe         je         loc_2de0

                     loc_2dc0:
0000000000002dc0         lea        rax, qword [aLibs+27]                       ; 0x62db, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002dc7         lea        rdx, qword [aLibs+29]                       ; 0x62dd
0000000000002dce         cmp        ebx, 0x9
0000000000002dd1         cmovne     rax, rdx
0000000000002dd5         add        rsp, 0x8
0000000000002dd9         pop        rbx
0000000000002dda         pop        rbp
0000000000002ddb         ret
                        ; endp
0000000000002ddc         align      32

                     loc_2de0:
0000000000002de0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002de4         and        edx, 0xffffffdf
0000000000002de7         cmp        dl, 0x42
0000000000002dea         jne        loc_2dc0

0000000000002dec         cmp        byte [rax+2], 0x31
0000000000002df0         jne        loc_2dc0

0000000000002df2         cmp        byte [rax+3], 0x38
0000000000002df6         jne        loc_2dc0

0000000000002df8         cmp        byte [rax+4], 0x30
0000000000002dfc         jne        loc_2dc0

0000000000002dfe         cmp        byte [rax+5], 0x33
0000000000002e02         jne        loc_2dc0

0000000000002e04         cmp        byte [rax+6], 0x30
0000000000002e08         jne        loc_2dc0

0000000000002e0a         cmp        byte [rax+7], 0x0
0000000000002e0e         jne        loc_2dc0

0000000000002e10         cmp        byte [rbp], 0x60
0000000000002e14         lea        rax, qword [aLibs+20]                       ; 0x62d4
0000000000002e1b         lea        rdx, qword [aLibs+24]                       ; 0x62d8
0000000000002e22         cmovne     rax, rdx
0000000000002e26         add        rsp, 0x8
0000000000002e2a         pop        rbx
0000000000002e2b         pop        rbp
0000000000002e2c         ret
                        ; endp
0000000000002e2d         align      16

                     loc_2e30:
0000000000002e30         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002e34         and        edx, 0xffffffdf
0000000000002e37         cmp        dl, 0x54
0000000000002e3a         jne        loc_2dc0

0000000000002e3c         movzx      edx, byte [rax+2]
0000000000002e40         and        edx, 0xffffffdf
0000000000002e43         cmp        dl, 0x46
0000000000002e46         jne        loc_2dc0

0000000000002e4c         cmp        byte [rax+3], 0x2d
0000000000002e50         jne        loc_2dc0

0000000000002e56         cmp        byte [rax+4], 0x38
0000000000002e5a         jne        loc_2dc0

0000000000002e60         cmp        byte [rax+5], 0x0
0000000000002e64         jne        loc_2dc0

0000000000002e6a         cmp        byte [rbp], 0x60
0000000000002e6e         lea        rax, qword [aLibs+12]                       ; 0x62cc
0000000000002e75         lea        rdx, qword [aLibs+16]                       ; 0x62d0
0000000000002e7c         cmovne     rax, rdx
0000000000002e80         add        rsp, 0x8
0000000000002e84         pop        rbx
0000000000002e85         pop        rbp
0000000000002e86         ret
                        ; endp
0000000000002e87         align      16                                          ; End of unwind block (FDE at 0x71dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002e90         push       r15                                         ; Begin of unwind block (FDE at 0x7220), CODE XREF=sub_35d0+1165, sub_35d0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002e92         push       r14
0000000000002e94         mov        r15d, r8d
0000000000002e97         push       r13
0000000000002e99         push       r12
0000000000002e9b         mov        r14, rdi
0000000000002e9e         push       rbp
0000000000002e9f         push       rbx
0000000000002ea0         mov        ebx, r9d
0000000000002ea3         mov        r13, rsi
0000000000002ea6         mov        rbp, rcx
0000000000002ea9         and        ebx, 0x2
0000000000002eac         sub        rsp, 0xb8
0000000000002eb3         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002ebb         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002ec0         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002ec5         mov        dword [rsp+0xe8+var_70], r9d
0000000000002eca         mov        qword [rsp+0xe8+var_C8], rax
0000000000002ecf         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002ed7         mov        qword [rsp+0xe8+var_80], rax
0000000000002edc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002ee4         mov        qword [rsp+0xe8+var_88], rax
0000000000002ee9         mov        rax, qword [fs:0x28]
0000000000002ef2         mov        qword [rsp+0xe8+var_40], rax
0000000000002efa         xor        eax, eax
0000000000002efc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002f01         cmp        r15d, 0xa
0000000000002f05         mov        qword [rsp+0xe8+var_90], rax
0000000000002f0a         ja         loc_40bf

0000000000002f10         lea        rcx, qword [switch_table_6340]              ; switch_table_6340
0000000000002f17         mov        edx, r15d
0000000000002f1a         movsxd     rax, dword [rcx+rdx*4]
0000000000002f1e         add        rax, rcx
0000000000002f21         jmp        rax                                         ; switch statement using table at 0x6340, with 11 cases, 0x2f23,0x3af4,0x3b50,0x3ba5,0x3bea,0x3c24,0x3cca,0x3d04,0x3ef8

                     loc_2f23:
0000000000002f23         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_35d0+1318
0000000000002f28         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002f2d         xor        r12d, r12d
0000000000002f30         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002f39         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002f3e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2f43:
0000000000002f43         lea        rax, qword [aLibs+29]                       ; 0x62dd, CODE XREF=sub_35d0+1876
0000000000002f4a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002f53         xor        r15d, r15d
0000000000002f56         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002f5e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2f63:
0000000000002f63         xor        r11d, r11d                                  ; CODE XREF=sub_35d0+180, sub_35d0+1400, sub_35d0+1488, sub_35d0+1557, sub_35d0+1615, sub_35d0+1781, sub_35d0+1839, sub_35d0+2408, sub_35d0+2485
0000000000002f66         mov        rax, rbp
0000000000002f69         mov        r8d, r12d
0000000000002f6c         mov        rbp, r11
0000000000002f6f         mov        r11, rax
0000000000002f72         nop        word [rax+rax]

                     loc_2f78:
0000000000002f78         cmp        r11, rbp                                    ; CODE XREF=sub_3080+194
0000000000002f7b         setne      r12b
0000000000002f7f         cmp        r11, 0xffffffffffffffff
0000000000002f83         jne        loc_2f92

0000000000002f85         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002f8a         cmp        byte [rax+rbp], 0x0
0000000000002f8e         setne      r12b

                     loc_2f92:
0000000000002f92         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002f95         je         loc_35f0

0000000000002f9b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002fa0         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002fa5         lea        r9, qword [rdi+rbp]
0000000000002fa9         setne      al
0000000000002fac         and        al, byte [rsp+0xe8+var_DB]
0000000000002fb0         mov        r10d, eax
0000000000002fb3         je         loc_3060

0000000000002fb9         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002fbe         test       rax, rax
0000000000002fc1         je         loc_33f0

0000000000002fc7         cmp        r11, 0xffffffffffffffff
0000000000002fcb         lea        rbx, qword [rbp+rax]
0000000000002fd0         jne        loc_3000

0000000000002fd2         cmp        rax, 0x1
0000000000002fd6         jbe        loc_3000

0000000000002fd8         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002fdd         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002fe2         mov        qword [rsp+0xe8+var_C0], r9
0000000000002fe7         call       j_strlen                                    ; strlen
0000000000002fec         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002ff2         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002ff8         mov        r11, rax
0000000000002ffb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3000:
0000000000003000         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003003         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003008         ja         loc_35c0

000000000000300e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003013         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003018         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000301b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003020         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003025         mov        qword [rsp+0xe8+var_B8], r9
000000000000302a         call       j_memcmp                                    ; memcmp
000000000000302f         test       eax, eax
0000000000003031         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003036         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000303c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003041         jne        loc_35c0

0000000000003047         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000304c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003052         jne        loc_3fd5

0000000000003058         nop        dword [rax+rax]

                     loc_3060:
0000000000003060         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_35b0+19
0000000000003064         cmp        bl, 0x7e
0000000000003067         ja         loc_3388

000000000000306d         lea        rcx, qword [switch_table_6340+44]           ; 0x636c
0000000000003074         movzx      edx, bl
0000000000003077         movsxd     rax, dword [rcx+rdx*4]
000000000000307b         add        rax, rcx
000000000000307e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3080:
0000000000003080         xor        r10d, r10d
0000000000003083         cmp        r11, 0x1
0000000000003087         setne      al
000000000000308a         cmp        r11, 0xffffffffffffffff
000000000000308e         jne        loc_309c

0000000000003090         mov        rax, qword [rsp+arg_8]
0000000000003095         cmp        byte [rax+1], 0x0
0000000000003099         setne      al

                     loc_309c:
000000000000309c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3080+14
00000000000030a1         sete       dl
00000000000030a4         test       al, al
00000000000030a6         je         loc_32f8

                     loc_30ac:
00000000000030ac         xor        r12d, r12d                                  ; CODE XREF=sub_32f0+11
00000000000030af         xor        eax, eax
00000000000030b1         nop        dword [rax]
                        ; endp

                     loc_30b8:
00000000000030b8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_32a0+50, sub_3370+119
00000000000030bd         jne        loc_31d2

00000000000030c3         test       dl, dl
00000000000030c5         jne        loc_31d2

                     loc_30cb:
00000000000030cb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3180+87
00000000000030d0         test       rsi, rsi
00000000000030d3         je         loc_30e9

00000000000030d5         mov        edx, ebx
00000000000030d7         shr        dl, 0x5
00000000000030da         movzx      edx, dl
00000000000030dd         mov        edx, dword [rsi+rdx*4]
00000000000030e0         bt         edx, ebx
00000000000030e3         jb         loc_3233

                     loc_30e9:
00000000000030e9         test       r10b, r10b                                  ; CODE XREF=sub_3080+83, sub_3180+93
00000000000030ec         jne        loc_3233

00000000000030f2         xor        eax, 0x1
00000000000030f5         add        rbp, 0x1
00000000000030f9         and        eax, r8d

                     loc_30fc:
00000000000030fc         test       al, al                                      ; CODE XREF=sub_35d0+936
00000000000030fe         je         loc_3120

0000000000003100         cmp        r13, r15
0000000000003103         jbe        loc_310a

0000000000003105         mov        byte [r14+r15], 0x27

                     loc_310a:
000000000000310a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3080+131
000000000000310e         cmp        r13, rax
0000000000003111         jbe        loc_3119

0000000000003113         mov        byte [r14+r15+1], 0x27

                     loc_3119:
0000000000003119         add        r15, 0x2                                    ; CODE XREF=sub_3080+145
000000000000311d         xor        r8d, r8d

                     loc_3120:
0000000000003120         cmp        r15, r13                                    ; CODE XREF=sub_3080+126, sub_3180+275, sub_35d0+869
0000000000003123         jae        loc_3129

0000000000003125         mov        byte [r14+r15], bl

                     loc_3129:
0000000000003129         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3080+163
000000000000312e         add        r15, 0x1
0000000000003132         mov        eax, 0x0
0000000000003137         test       r12b, r12b
000000000000313a         cmove      edi, eax
000000000000313d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003142         jmp        loc_2f78
0000000000003147         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3150:
0000000000003150         xor        r10d, r10d
0000000000003153         mov        eax, dword [rsp+arg_0]
0000000000003157         cmp        eax, 0x2
000000000000315a         je         loc_3718

0000000000003160         cmp        eax, 0x5
0000000000003163         je         loc_36d8

0000000000003169         cmp        eax, 0x2
000000000000316c         mov        ebx, 0x3f
0000000000003171         sete       dl
0000000000003174         xor        r12d, r12d
0000000000003177         xor        eax, eax
0000000000003179         jmp        sub_3080+56
                        ; endp
000000000000317e         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3180:
0000000000003180         xor        r10d, r10d
0000000000003183         cmp        dword [rsp+arg_0], 0x2
0000000000003188         je         loc_3690

000000000000318e         mov        byte [rsp+arg_74], r12b
0000000000003193         xor        edx, edx
0000000000003195         xor        eax, eax
0000000000003197         mov        ebx, 0x27
000000000000319c         jmp        sub_3080+56
                        ; endp
00000000000031a1         nop        dword [rax]
00000000000031a8         mov        edx, 0x9
00000000000031ad         mov        ebx, 0x74

                     loc_31b2:
00000000000031b2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3340+10, sub_3430+37, sub_3570+53
00000000000031b7         sete       al
00000000000031ba         and        al, byte [rsp+arg_7]
00000000000031be         jne        sub_32f0+30

00000000000031c4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3180+114
00000000000031c9         jne        loc_3230

                     loc_31cb:
00000000000031cb         mov        ebx, edx                                    ; CODE XREF=sub_32a0+18
00000000000031cd         xor        r12d, r12d
00000000000031d0         xor        eax, eax
                        ; endp

                     loc_31d2:
00000000000031d2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3080+61, sub_3080+69
00000000000031d7         jne        loc_30cb

00000000000031dd         jmp        loc_30e9
00000000000031e2         nop        word [rax+rax]
00000000000031e8         mov        edx, 0x8
00000000000031ed         mov        ebx, 0x62
00000000000031f2         jmp        sub_3180+68
00000000000031f4         nop        dword [rax]
00000000000031f8         cmp        dword [rsp+8], 0x2
00000000000031fd         je         sub_35d0                                    ; sub_35d0
0000000000003203         cmp        byte [rsp+0xd], 0x0
0000000000003208         je         sub_3410+16

                     loc_320e:
000000000000320e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3410+8
0000000000003213         je         loc_3420

0000000000003219         cmp        qword [rsp+arg_10], 0x0
000000000000321f         jne        loc_35db

0000000000003225         mov        ebx, 0x5c
000000000000322a         nop        word [rax+rax]
                        ; endp

                     loc_3230:
0000000000003230         xor        r12d, r12d                                  ; CODE XREF=sub_3180+73, sub_3570+29
                        ; endp

                     loc_3233:
0000000000003233         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3080+99, sub_3080+108
0000000000003238         sete       dl
000000000000323b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003240         mov        eax, edx
0000000000003242         jne        loc_3a98

0000000000003248         mov        eax, r8d
000000000000324b         xor        eax, 0x1
000000000000324e         and        al, dl
0000000000003250         je         loc_3281

0000000000003252         cmp        r13, r15
0000000000003255         jbe        loc_325c

0000000000003257         mov        byte [r14+r15], 0x27

                     loc_325c:
000000000000325c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3180+213
0000000000003260         cmp        r13, rdx
0000000000003263         jbe        loc_326b

0000000000003265         mov        byte [r14+r15+1], 0x24

                     loc_326b:
000000000000326b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3180+227
000000000000326f         cmp        r13, rdx
0000000000003272         jbe        loc_327a

0000000000003274         mov        byte [r14+r15+2], 0x27

                     loc_327a:
000000000000327a         add        r15, 0x3                                    ; CODE XREF=sub_3180+242
000000000000327e         mov        r8d, eax

                     loc_3281:
0000000000003281         cmp        r13, r15                                    ; CODE XREF=sub_3180+208
0000000000003284         jbe        loc_328b

0000000000003286         mov        byte [r14+r15], 0x5c

                     loc_328b:
000000000000328b         add        r15, 0x1                                    ; CODE XREF=sub_3180+260
000000000000328f         add        rbp, 0x1
0000000000003293         jmp        loc_3120
0000000000003298         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_32a0:
00000000000032a0         cmp        byte [rsp+arg_5], 0x0
00000000000032a5         jne        loc_3473

00000000000032ab         xor        edx, edx
00000000000032ad         test       byte [rsp+arg_70], 0x1
00000000000032b2         je         loc_31cb

00000000000032b8         add        rbp, 0x1
00000000000032bc         jmp        quotearg_buffer_restyled+232
                        ; endp
00000000000032c1         nop        dword [rax]
00000000000032c8         cmp        dword [rsp+8], 0x2
00000000000032cd         sete       dl
00000000000032d0         xor        eax, eax
00000000000032d2         jmp        sub_3080+56
00000000000032d7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32e0:
00000000000032e0         mov        edx, 0x7
00000000000032e5         mov        ebx, 0x61
00000000000032ea         jmp        sub_3180+68
                        ; endp
00000000000032ef         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32f0:
00000000000032f0         cmp        dword [rsp+8], 0x2
00000000000032f5         sete       dl
                        ; endp

                     loc_32f8:
00000000000032f8         test       rbp, rbp                                    ; CODE XREF=sub_3080+38, sub_3510+35
00000000000032fb         jne        loc_30ac

0000000000003301         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3540+43
0000000000003306         and        al, dl
0000000000003308         je         sub_3080+56

000000000000330e         mov        rbp, r11
0000000000003311         mov        dword [rsp+arg_0], 0x2
0000000000003319         jmp        sub_35d0+1097
                        ; endp
000000000000331e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3320:
0000000000003320         cmp        dword [rsp+arg_0], 0x2
0000000000003325         sete       dl
0000000000003328         xor        r12d, r12d
000000000000332b         jmp        sub_32f0+17
                        ; endp
000000000000332d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3330:
0000000000003330         cmp        dword [rsp+arg_0], 0x2
0000000000003335         mov        ebx, 0x20
000000000000333a         sete       dl
000000000000333d         jmp        sub_32f0+17
                        ; endp
000000000000333f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3340:
0000000000003340         mov        edx, 0xd
0000000000003345         mov        ebx, 0x72
000000000000334a         jmp        loc_31b2
000000000000334f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3350:
0000000000003350         mov        edx, 0xc
0000000000003355         mov        ebx, 0x66
000000000000335a         jmp        sub_3180+68
                        ; endp
000000000000335f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3360:
0000000000003360         mov        edx, 0xb
0000000000003365         mov        ebx, 0x76
000000000000336a         jmp        sub_3180+68
                        ; endp
000000000000336f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3370:
0000000000003370         mov        edx, 0xa
0000000000003375         mov        ebx, 0x6e
000000000000337a         jmp        sub_3180+50
                        ; endp
000000000000337f         align      128

                     loc_3380:
0000000000003380         xor        r10d, r10d                                  ; CODE XREF=sub_3370+135
0000000000003383         nop        dword [rax+rax]

                     loc_3388:
0000000000003388         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000338e         jne        loc_3738

0000000000003394         mov        qword [rsp+0xe8+var_B0], r11
0000000000003399         mov        byte [rsp+0xe8+var_B8], r8b
000000000000339e         mov        byte [rsp+0xe8+var_C0], r10b
00000000000033a3         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000033a8         mov        rcx, qword [rax]
00000000000033ab         movzx      edx, bl
00000000000033ae         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000033b4         movzx      r8d, byte [rsp+0xe8+var_B8]
00000000000033ba         mov        r11, qword [rsp+0xe8+var_B0]
00000000000033bf         mov        edi, 0x1
00000000000033c4         movzx      eax, word [rcx+rdx*2]
00000000000033c8         and        ax, 0x4000
00000000000033cc         setne      r12b
00000000000033d0         sete       al
00000000000033d3         and        al, byte [rsp+0xe8+var_DB]

                     loc_33d7:
00000000000033d7         test       al, al                                      ; CODE XREF=sub_35d0+2221
00000000000033d9         jne        loc_3d71

00000000000033df         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000033e4         sete       dl
00000000000033e7         jmp        loc_30b8
00000000000033ec         align      16

                     loc_33f0:
00000000000033f0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
00000000000033f4         cmp        bl, 0x7e
00000000000033f7         ja         loc_3380

00000000000033f9         lea        rcx, qword [switch_table_6340+552]          ; 0x6568
0000000000003400         movzx      edx, bl
0000000000003403         movsxd     rax, dword [rcx+rdx*4]
0000000000003407         add        rax, rcx
000000000000340a         jmp        rax
                        ; endp
000000000000340c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3410:
0000000000003410         xor        r10d, r10d
0000000000003413         cmp        byte [rsp+arg_5], 0x0
0000000000003418         jne        loc_320e

000000000000341e         nop

                     loc_3420:
0000000000003420         mov        edx, 0x5c                                   ; CODE XREF=sub_3180+136, sub_3180+147
0000000000003425         mov        ebx, 0x5c
000000000000342a         jmp        sub_3180+68
                        ; endp
000000000000342f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3430:
0000000000003430         mov        edx, 0xc
0000000000003435         xor        r10d, r10d
0000000000003438         mov        ebx, 0x66
000000000000343d         jmp        sub_3180+68
                        ; endp
0000000000003442         nop        word [rax+rax]
0000000000003448         mov        edx, 0xa
000000000000344d         xor        r10d, r10d
0000000000003450         mov        ebx, 0x6e
0000000000003455         jmp        sub_3180+50
000000000000345a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3460:
0000000000003460         mov        ebx, 0x61
0000000000003465         jmp        sub_3180+176
                        ; endp
000000000000346a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3470:
0000000000003470         xor        r10d, r10d
                        ; endp

                     loc_3473:
0000000000003473         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_32a0+5
0000000000003478         sete       dl
000000000000347b         cmp        byte [rsp+arg_7], 0x0
0000000000003480         jne        loc_401a

0000000000003486         mov        eax, r8d
0000000000003489         mov        rcx, r15
000000000000348c         xor        eax, 0x1
000000000000348f         and        al, dl
0000000000003491         je         loc_34c0

0000000000003493         cmp        r13, r15
0000000000003496         jbe        loc_349d

0000000000003498         mov        byte [r14+r15], 0x27

                     loc_349d:
000000000000349d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3470+38
00000000000034a1         cmp        r13, rcx
00000000000034a4         jbe        loc_34ac

00000000000034a6         mov        byte [r14+r15+1], 0x24

                     loc_34ac:
00000000000034ac         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3470+52
00000000000034b0         cmp        r13, rcx
00000000000034b3         ja         loc_3ae9

                     loc_34b9:
00000000000034b9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_35d0+1311
00000000000034bd         mov        r8d, eax

                     loc_34c0:
00000000000034c0         cmp        r13, rcx                                    ; CODE XREF=sub_3470+33
00000000000034c3         jbe        loc_34ca

00000000000034c5         mov        byte [r14+rcx], 0x5c

                     loc_34ca:
00000000000034ca         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3470+83
00000000000034cf         lea        r15, qword [rcx+1]
00000000000034d3         je         loc_3ad9

00000000000034d9         lea        rax, qword [rbp+1]
00000000000034dd         cmp        rax, r11
00000000000034e0         jae        loc_34fb

00000000000034e2         mov        rax, qword [rsp+arg_8]
00000000000034e7         movzx      eax, byte [rax+rbp+1]
00000000000034ec         mov        byte [rsp+arg_20], al
00000000000034f0         sub        eax, 0x30
00000000000034f3         cmp        al, 0x9
00000000000034f5         jbe        loc_3d29

                     loc_34fb:
00000000000034fb         mov        eax, r12d                                   ; CODE XREF=sub_3470+112
00000000000034fe         mov        ebx, 0x30
0000000000003503         xor        r12d, r12d
0000000000003506         jmp        sub_3080+56
                        ; endp
000000000000350b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3510:
0000000000003510         cmp        dword [rsp+arg_0], 0x2
0000000000003515         mov        r12d, r10d
0000000000003518         sete       dl
000000000000351b         xor        r10d, r10d
000000000000351e         xor        eax, eax
0000000000003520         jmp        sub_3080+56
                        ; endp
0000000000003525         nop        dword [rax]
0000000000003528         cmp        dword [rsp+8], 0x2
000000000000352d         sete       dl
0000000000003530         xor        r10d, r10d
0000000000003533         jmp        sub_32f0+8
0000000000003538         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3540:
0000000000003540         cmp        dword [rsp+8], 0x2
0000000000003545         sete       dl
0000000000003548         xor        r10d, r10d
000000000000354b         xor        r12d, r12d
000000000000354e         jmp        sub_32f0+17
                        ; endp
0000000000003553         nop        dword [rax+rax]
0000000000003558         cmp        dword [rsp+8], 0x2
000000000000355d         mov        r12d, r10d
0000000000003560         mov        ebx, 0x20
0000000000003565         sete       dl
0000000000003568         xor        r10d, r10d
000000000000356b         jmp        sub_32f0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3570:
0000000000003570         mov        edx, 0xd
0000000000003575         xor        r10d, r10d
0000000000003578         mov        ebx, 0x72
000000000000357d         jmp        sub_3180+50
                        ; endp
0000000000003582         nop        word [rax+rax]
0000000000003588         mov        ebx, 0x76
000000000000358d         jmp        sub_3180+176
0000000000003592         nop        word [rax+rax]
0000000000003598         mov        edx, 0x9
000000000000359d         xor        r10d, r10d
00000000000035a0         mov        ebx, 0x74
00000000000035a5         jmp        sub_3180+50
00000000000035aa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_35b0:
00000000000035b0         mov        ebx, 0x62
00000000000035b5         jmp        sub_3180+176
                        ; endp
00000000000035ba         nop        word [rax+rax]

                     loc_35c0:
00000000000035c0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000035c3         jmp        loc_3060
00000000000035c8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_35d0:
00000000000035d0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3180+125
00000000000035d5         jne        sub_35d0+2416
                        ; endp

                     loc_35db:
00000000000035db         add        rbp, 0x1                                    ; CODE XREF=sub_3180+159
00000000000035df         mov        eax, r8d
00000000000035e2         xor        r12d, r12d
00000000000035e5         mov        ebx, 0x5c
00000000000035ea         jmp        sub_3080+124
                        ; endp
00000000000035ef         align      16

                     loc_35f0:
00000000000035f0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000035f5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000035fa         mov        r12d, r8d
00000000000035fd         mov        rbp, r11
0000000000003600         sete       dl
0000000000003603         mov        eax, ebx
0000000000003605         test       r15, r15
0000000000003608         sete       cl
000000000000360b         and        eax, edx
000000000000360d         and        al, cl
000000000000360f         jne        loc_4076

0000000000003615         mov        eax, ebx
0000000000003617         xor        eax, 0x1
000000000000361a         and        dl, al
000000000000361c         je         loc_3f8c

0000000000003622         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003627         je         loc_3f8a

000000000000362d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003632         jne        loc_402d

0000000000003638         test       r13, r13
000000000000363b         sete       al
000000000000363e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003644         setne      dl
0000000000003647         and        al, dl
0000000000003649         je         loc_406c

000000000000364f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3654:
0000000000003654         lea        rbx, qword [aLibs+29]                       ; 0x62dd, CODE XREF=sub_35d0+2781
000000000000365b         mov        byte [r14], 0x27
000000000000365f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003667         mov        r15d, 0x1
000000000000366d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003676         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000367b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003680         mov        byte [rsp+0xe8+var_6C], al
0000000000003684         jmp        loc_2f63
0000000000003689         align      16

                     loc_3690:
0000000000003690         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3180+8
0000000000003695         jne        sub_35d0+2416

000000000000369b         test       r13, r13
000000000000369e         je         loc_3aa0

00000000000036a4         xor        edx, edx
00000000000036a6         cmp        qword [rsp+arg_48], 0x0
00000000000036ac         jne        loc_3aa0

                     loc_36b2:
00000000000036b2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_35d0+1284, sub_35d0+2794
00000000000036b7         add        r15, 0x3
00000000000036bb         xor        eax, eax
00000000000036bd         mov        byte [rsp+arg_74], r12b
00000000000036c2         xor        r8d, r8d
00000000000036c5         mov        r13, rdx
00000000000036c8         mov        ebx, 0x27
00000000000036cd         jmp        sub_3080+105
                        ; endp
00000000000036d2         align      8

                     loc_36d8:
00000000000036d8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3150+19
00000000000036dd         je         loc_3700

00000000000036df         lea        rcx, qword [rbp+2]
00000000000036e3         cmp        rcx, r11
00000000000036e6         jae        loc_3700

00000000000036e8         mov        rax, qword [rsp+arg_8]
00000000000036ed         cmp        byte [rax+rbp+1], 0x3f
00000000000036f2         je         loc_3e82

00000000000036f8         nop        dword [rax+rax]

                     loc_3700:
0000000000003700         xor        edx, edx                                    ; CODE XREF=sub_35d0+269, sub_35d0+278, sub_35d0+2233, sub_35d0+2253
0000000000003702         xor        r12d, r12d
0000000000003705         xor        eax, eax
0000000000003707         mov        ebx, 0x3f
000000000000370c         jmp        sub_3080+56
                        ; endp
0000000000003711         align      8

                     loc_3718:
0000000000003718         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3150+10
000000000000371d         jne        loc_3f40

0000000000003723         xor        r12d, r12d
0000000000003726         xor        eax, eax
0000000000003728         mov        ebx, 0x3f
000000000000372d         jmp        sub_3080+105
                        ; endp
0000000000003732         align      8

                     loc_3738:
0000000000003738         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3370+30
0000000000003740         cmp        r11, 0xffffffffffffffff
0000000000003744         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003750         mov        qword [rsp+0xe8+var_C0], rax
0000000000003755         jne        loc_3784

0000000000003757         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000375c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003761         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003766         mov        qword [rsp+0xe8+var_B8], r9
000000000000376b         call       j_strlen                                    ; strlen
0000000000003770         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003776         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000377c         mov        r11, rax
000000000000377f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3784:
0000000000003784         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_35d0+389
000000000000378c         xor        ecx, ecx
000000000000378e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003792         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003797         mov        rbx, rcx
000000000000379a         mov        qword [rsp+0xe8+var_60], r9
00000000000037a2         mov        qword [rsp+0xe8+var_B0], rax
00000000000037a7         mov        byte [rsp+0xe8+var_69], r10b
00000000000037ac         mov        qword [rsp+0xe8+var_68], r15
00000000000037b4         mov        qword [rsp+0xe8+var_A8], r14
00000000000037b9         mov        qword [rsp+0xe8+var_78], r13
00000000000037be         mov        qword [rsp+0xe8+var_B8], r11

                     loc_37c3:
00000000000037c3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_35d0+623
00000000000037c8         lea        r14, qword [rbp+rbx]
00000000000037cd         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000037d2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000037d7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000037dc         lea        r13, qword [rax+r14]
00000000000037e0         sub        rdx, r14
00000000000037e3         mov        rsi, r13
00000000000037e6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000037eb         test       rax, rax
00000000000037ee         mov        r15, rax
00000000000037f1         je         loc_3841

00000000000037f3         cmp        rax, 0xffffffffffffffff
00000000000037f7         je         loc_3e15

00000000000037fd         cmp        rax, 0xfffffffffffffffe
0000000000003801         je         loc_3da1

0000000000003807         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000380c         sete       al
000000000000380f         and        al, byte [rsp+0xe8+var_D9]
0000000000003813         jne        loc_39b0

                     loc_3819:
0000000000003819         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_35d0+996, sub_35d0+1031
0000000000003820         call       j_iswprint                                  ; iswprint
0000000000003825         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000382a         test       eax, eax
000000000000382c         mov        eax, 0x0
0000000000003831         cmove      r12d, eax
0000000000003835         add        rbx, r15
0000000000003838         call       j_mbsinit                                   ; mbsinit
000000000000383d         test       eax, eax
000000000000383f         je         loc_37c3

                     loc_3841:
0000000000003841         mov        edx, r12d                                   ; CODE XREF=sub_35d0+545
0000000000003844         mov        rdi, rbx
0000000000003847         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000384d         xor        edx, 0x1
0000000000003850         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003855         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000385b         and        dl, byte [rsp+0xe8+var_DB]
000000000000385f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003867         mov        r14, qword [rsp+0xe8+var_A8]
000000000000386c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003871         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3876:
0000000000003876         cmp        rdi, 0x1                                    ; CODE XREF=sub_35d0+2112, sub_35d0+2168
000000000000387a         jbe        loc_3e7b

                     loc_3880:
0000000000003880         mov        rcx, rdi                                    ; CODE XREF=sub_35d0+1961
0000000000003883         xor        esi, esi
0000000000003885         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000388b         add        rcx, rbp
000000000000388e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003893         jmp        loc_394e
0000000000003898         align      32

                     loc_38a0:
00000000000038a0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_35d0+896
00000000000038a5         sete       al
00000000000038a8         test       r9b, r9b
00000000000038ab         jne        loc_3d60

00000000000038b1         mov        esi, r8d
00000000000038b4         xor        esi, 0x1
00000000000038b7         and        al, sil
00000000000038ba         je         loc_38eb

00000000000038bc         cmp        r13, r15
00000000000038bf         jbe        loc_38c6

00000000000038c1         mov        byte [r14+r15], 0x27

                     loc_38c6:
00000000000038c6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_35d0+751
00000000000038ca         cmp        r13, rsi
00000000000038cd         jbe        loc_38d5

00000000000038cf         mov        byte [r14+r15+1], 0x24

                     loc_38d5:
00000000000038d5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_35d0+765
00000000000038d9         cmp        r13, rsi
00000000000038dc         jbe        loc_38e4

00000000000038de         mov        byte [r14+r15+2], 0x27

                     loc_38e4:
00000000000038e4         add        r15, 0x3                                    ; CODE XREF=sub_35d0+780
00000000000038e8         mov        r8d, eax

                     loc_38eb:
00000000000038eb         cmp        r13, r15                                    ; CODE XREF=sub_35d0+746
00000000000038ee         jbe        loc_38f5

00000000000038f0         mov        byte [r14+r15], 0x5c

                     loc_38f5:
00000000000038f5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_35d0+798
00000000000038f9         cmp        r13, rax
00000000000038fc         jbe        loc_390b

00000000000038fe         mov        eax, ebx
0000000000003900         shr        al, 0x6
0000000000003903         add        eax, 0x30
0000000000003906         mov        byte [r14+r15+1], al

                     loc_390b:
000000000000390b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_35d0+812
000000000000390f         cmp        r13, rax
0000000000003912         jbe        loc_3924

0000000000003914         mov        eax, ebx
0000000000003916         shr        al, 0x3
0000000000003919         and        eax, 0x7
000000000000391c         add        eax, 0x30
000000000000391f         mov        byte [r14+r15+2], al

                     loc_3924:
0000000000003924         and        ebx, 0x7                                    ; CODE XREF=sub_35d0+834
0000000000003927         add        rbp, 0x1
000000000000392b         add        r15, 0x3
000000000000392f         add        ebx, 0x30
0000000000003932         cmp        rbp, rcx
0000000000003935         jae        loc_3120

000000000000393b         mov        esi, edx

                     loc_393d:
000000000000393d         cmp        r13, r15                                    ; CODE XREF=sub_35d0+985, sub_35d0+1969
0000000000003940         jbe        loc_3946

0000000000003942         mov        byte [r14+r15], bl

                     loc_3946:
0000000000003946         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_35d0+880
000000000000394a         add        r15, 0x1

                     loc_394e:
000000000000394e         test       dl, dl                                      ; CODE XREF=sub_35d0+707
0000000000003950         jne        loc_38a0

0000000000003956         mov        eax, esi
0000000000003958         xor        eax, 0x1
000000000000395b         and        eax, r8d
000000000000395e         test       r10b, r10b
0000000000003961         je         loc_3971

0000000000003963         cmp        r13, r15
0000000000003966         jbe        loc_396d

0000000000003968         mov        byte [r14+r15], 0x5c

                     loc_396d:
000000000000396d         add        r15, 0x1                                    ; CODE XREF=sub_35d0+918

                     loc_3971:
0000000000003971         add        rbp, 0x1                                    ; CODE XREF=sub_35d0+913
0000000000003975         cmp        rbp, rcx
0000000000003978         jae        loc_30fc

000000000000397e         test       al, al
0000000000003980         je         loc_3d7e

0000000000003986         cmp        r13, r15
0000000000003989         jbe        loc_3990

000000000000398b         mov        byte [r14+r15], 0x27

                     loc_3990:
0000000000003990         lea        rax, qword [r15+1]                          ; CODE XREF=sub_35d0+953
0000000000003994         cmp        r13, rax
0000000000003997         jbe        loc_399f

0000000000003999         mov        byte [r14+r15+1], 0x27

                     loc_399f:
000000000000399f         add        r15, 0x2                                    ; CODE XREF=sub_35d0+967
00000000000039a3         xor        r10d, r10d
00000000000039a6         xor        r8d, r8d
00000000000039a9         jmp        loc_393d
00000000000039ab         align      16

                     loc_39b0:
00000000000039b0         cmp        r15, 0x1                                    ; CODE XREF=sub_35d0+579
00000000000039b4         je         loc_3819

00000000000039ba         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000039bf         lea        rcx, qword [rdi+r15]
00000000000039c3         lea        rdx, qword [rdi+r14+1]
00000000000039c8         lea        r8, qword [rcx+r14]
00000000000039cc         jmp        loc_39dd
00000000000039ce         align      16

                     loc_39d0:
00000000000039d0         add        rdx, 0x1                                    ; CODE XREF=sub_35d0+1046, sub_35d0+1072
00000000000039d4         cmp        r8, rdx
00000000000039d7         je         loc_3819

                     loc_39dd:
00000000000039dd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_35d0+1020
00000000000039e0         sub        ecx, 0x5b
00000000000039e3         cmp        cl, 0x21
00000000000039e6         ja         loc_39d0

00000000000039e8         mov        esi, 0x1
00000000000039ed         shl        rsi, cl
00000000000039f0         mov        rcx, rsi
00000000000039f3         movabs     rsi, 0x20000002b
00000000000039fd         test       rcx, rsi
0000000000003a00         je         loc_39d0

0000000000003a02         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003a07         mov        r13, qword [rsp+0xe8+var_78]
0000000000003a0c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003a11         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3a19:
0000000000003a19         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_35d0+1227, sub_35d0+1948, sub_35d0+2585, sub_35d0+2734
0000000000003a1e         je         loc_3a30

0000000000003a20         test       al, al
0000000000003a22         mov        eax, 0x4
0000000000003a27         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000003a2c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3a30:
0000000000003a30         sub        rsp, 0x8                                    ; CODE XREF=sub_35d0+1102
0000000000003a34         mov        rcx, rbp
0000000000003a37         mov        rsi, r13
0000000000003a3a         push       qword [rsp+0xf0+var_88]
0000000000003a3e         push       qword [rsp+0xf8+var_80]
0000000000003a42         mov        rdi, r14
0000000000003a45         push       0x0
0000000000003a47         mov        r9d, dword [rsp+0x108+var_70]
0000000000003a4f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003a54         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003a59         and        r9d, 0xfffffffd
0000000000003a5d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003a62         add        rsp, 0x20
0000000000003a66         mov        r15, rax

                     loc_3a69:
0000000000003a69         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_35d0+2549, sub_35d0+2560, sub_35d0+2711
0000000000003a71         xor        rbx, qword [fs:0x28]
0000000000003a7a         mov        rax, r15
0000000000003a7d         jne        loc_4083

0000000000003a83         add        rsp, 0xb8
0000000000003a8a         pop        rbx
0000000000003a8b         pop        rbp
0000000000003a8c         pop        r12
0000000000003a8e         pop        r13
0000000000003a90         pop        r14
0000000000003a92         pop        r15
0000000000003a94         ret
                        ; endp
0000000000003a95         align      8

                     loc_3a98:
0000000000003a98         mov        rbp, r11                                    ; CODE XREF=sub_3180+194
0000000000003a9b         jmp        loc_3a19

                     loc_3aa0:
0000000000003aa0         cmp        r13, r15                                    ; CODE XREF=sub_35d0+206, sub_35d0+220
0000000000003aa3         jbe        loc_3aaa

0000000000003aa5         mov        byte [r14+r15], 0x27

                     loc_3aaa:
0000000000003aaa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_35d0+1235
0000000000003aae         cmp        r13, rax
0000000000003ab1         jbe        loc_3ab9

0000000000003ab3         mov        byte [r14+r15+1], 0x5c

                     loc_3ab9:
0000000000003ab9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_35d0+1249
0000000000003abd         cmp        r13, rax
0000000000003ac0         jbe        loc_40b2

0000000000003ac6         mov        rdx, r13
0000000000003ac9         mov        byte [r14+r15+2], 0x27
0000000000003acf         mov        r13, qword [rsp+arg_48]
0000000000003ad4         jmp        loc_36b2

                     loc_3ad9:
0000000000003ad9         mov        eax, r12d                                   ; CODE XREF=sub_3470+99
0000000000003adc         mov        ebx, 0x30
0000000000003ae1         xor        r12d, r12d
0000000000003ae4         jmp        sub_3080+105
                        ; endp

                     loc_3ae9:
0000000000003ae9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3470+67
0000000000003aef         jmp        loc_34b9

                     loc_3af4:
0000000000003af4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003af6         jne        loc_2f23

0000000000003afc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3b01:
0000000000003b01         test       r13, r13                                    ; CODE XREF=sub_35d0+2749
0000000000003b04         jne        loc_409a

0000000000003b0a         lea        rax, qword [aLibs+29]                       ; 0x62dd
0000000000003b11         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b1a         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b1f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b24         xor        r12d, r12d
0000000000003b27         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003b2c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b35         mov        qword [rsp+0xe8+var_A0], rax
0000000000003b3a         mov        r15d, 0x1
0000000000003b40         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003b48         jmp        loc_2f63
0000000000003b4d         align      16

                     loc_3b50:
0000000000003b50         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003b52         jne        loc_3f4d

0000000000003b58         test       r13, r13
0000000000003b5b         je         loc_3d86

0000000000003b61         mov        byte [r14], 0x22
0000000000003b65         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b6a         xor        r12d, r12d
0000000000003b6d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b72         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_3b7b:
0000000000003b7b         lea        rax, qword [aLibs+27]                       ; 0x62db, CODE XREF=sub_35d0+1996
0000000000003b82         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003b87         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003b8c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b95         mov        r15d, 0x1
0000000000003b9b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003ba0         jmp        loc_2f63

                     loc_3ba5:
0000000000003ba5         lea        rax, qword [aLibs+27]                       ; case 6, 0x62db, CODE XREF=quotearg_buffer_restyled+145
0000000000003bac         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003bb1         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003bb6         xor        r12d, r12d
0000000000003bb9         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003bc2         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003bc7         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003bcc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003bd5         xor        r15d, r15d
0000000000003bd8         mov        qword [rsp+0xe8+var_A0], rax
0000000000003bdd         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003be5         jmp        loc_2f63

                     loc_3bea:
0000000000003bea         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000003bef         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003bf4         xor        r12d, r12d
0000000000003bf7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003c00         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003c05         xor        r15d, r15d
0000000000003c08         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003c0d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003c16         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003c1f         jmp        loc_2f63

                     loc_3c24:
0000000000003c24         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003c29         je         loc_3c81

0000000000003c2b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x62df
0000000000003c32         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c34         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c39         call       j_dcgettext                                 ; dcgettext
0000000000003c3e         mov        rcx, rax
0000000000003c41         mov        qword [rsp+0xe8+var_80], rax
0000000000003c46         lea        rax, qword [aLibs+31]                       ; 0x62df
0000000000003c4d         cmp        rcx, rax
0000000000003c50         je         loc_3fee

                     loc_3c56:
0000000000003c56         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x62dd, CODE XREF=sub_35d0+2607
0000000000003c5d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c5f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c64         call       j_dcgettext                                 ; dcgettext
0000000000003c69         mov        rcx, rax
0000000000003c6c         mov        qword [rsp+0xe8+var_88], rax
0000000000003c71         lea        rax, qword [aLibs+29]                       ; 0x62dd
0000000000003c78         cmp        rcx, rax
0000000000003c7b         je         loc_4004

                     loc_3c81:
0000000000003c81         xor        r15d, r15d                                  ; CODE XREF=sub_35d0+1625, sub_35d0+2629
0000000000003c84         test       ebx, ebx
0000000000003c86         je         loc_3e4d

                     loc_3c8c:
0000000000003c8c         test       ebx, ebx                                    ; CODE XREF=sub_35d0+2183, sub_35d0+2214
0000000000003c8e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003c93         setne      byte [rsp+0xe8+var_D9]
0000000000003c98         xor        r12d, r12d
0000000000003c9b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003c9e         call       j_strlen                                    ; strlen
0000000000003ca3         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003ca8         mov        qword [rsp+0xe8+var_D0], rax
0000000000003cad         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003cb2         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003cb7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003cc0         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003cc5         jmp        loc_2f63

                     loc_3cca:
0000000000003cca         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003ccf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003cd4         xor        r12d, r12d
0000000000003cd7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ce0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003ce5         xor        r15d, r15d
0000000000003ce8         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003ced         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003cf6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003cff         jmp        loc_2f63

                     loc_3d04:
0000000000003d04         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003d09         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d0e         xor        r12d, r12d
0000000000003d11         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003d1a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003d1f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003d24         jmp        loc_2f43

                     loc_3d29:
0000000000003d29         cmp        r13, r15                                    ; CODE XREF=sub_3470+133
0000000000003d2c         jbe        loc_3d33

0000000000003d2e         mov        byte [r14+r15], 0x30

                     loc_3d33:
0000000000003d33         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_35d0+1884
0000000000003d37         cmp        r13, rax
0000000000003d3a         jbe        loc_3d42

0000000000003d3c         mov        byte [r14+rcx+2], 0x30

                     loc_3d42:
0000000000003d42         mov        eax, r12d                                   ; CODE XREF=sub_35d0+1898
0000000000003d45         lea        r15, qword [rcx+3]
0000000000003d49         xor        r12d, r12d
0000000000003d4c         mov        ebx, 0x30
0000000000003d51         jmp        sub_3080+56
                        ; endp
0000000000003d56         align      32

                     loc_3d60:
0000000000003d60         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_35d0+731
0000000000003d65         mov        rbp, r11
0000000000003d68         mov        byte [rsp+0xe8+var_DB], bl
0000000000003d6c         jmp        loc_3a19

                     loc_3d71:
0000000000003d71         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3370+105
0000000000003d76         xor        r12d, r12d
0000000000003d79         jmp        loc_3880

                     loc_3d7e:
0000000000003d7e         xor        r10d, r10d                                  ; CODE XREF=sub_35d0+944
0000000000003d81         jmp        loc_393d

                     loc_3d86:
0000000000003d86         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_35d0+1419
0000000000003d8f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003d94         xor        r12d, r12d
0000000000003d97         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d9c         jmp        loc_3b7b

                     loc_3da1:
0000000000003da1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_35d0+561
0000000000003da6         mov        rsi, r14
0000000000003da9         mov        rcx, r13
0000000000003dac         mov        rax, rbx
0000000000003daf         mov        rdi, rbx
0000000000003db2         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003db8         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003dbd         mov        r9, qword [rsp+0xe8+var_60]
0000000000003dc5         cmp        rsi, r11
0000000000003dc8         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003dce         mov        r15, qword [rsp+0xe8+var_68]
0000000000003dd6         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003ddb         mov        r13, qword [rsp+0xe8+var_78]
0000000000003de0         jae        loc_3e08

0000000000003de2         cmp        byte [rcx], 0x0
0000000000003de5         jne        loc_3df7

0000000000003de7         jmp        loc_3e08
0000000000003de9         align      16

                     loc_3df0:
0000000000003df0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_35d0+2099
0000000000003df5         je         loc_3e05

                     loc_3df7:
0000000000003df7         add        rax, 0x1                                    ; CODE XREF=sub_35d0+2069
0000000000003dfb         lea        rdx, qword [rbp+rax]
0000000000003e00         cmp        r11, rdx
0000000000003e03         ja         loc_3df0

                     loc_3e05:
0000000000003e05         mov        rdi, rax                                    ; CODE XREF=sub_35d0+2085

                     loc_3e08:
0000000000003e08         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_35d0+2064, sub_35d0+2071
0000000000003e0d         xor        r12d, r12d
0000000000003e10         jmp        loc_3876

                     loc_3e15:
0000000000003e15         mov        rdi, rbx                                    ; CODE XREF=sub_35d0+551
0000000000003e18         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003e1e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003e23         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003e29         mov        r15, qword [rsp+0xe8+var_68]
0000000000003e31         xor        r12d, r12d
0000000000003e34         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003e39         mov        r13, qword [rsp+0xe8+var_78]
0000000000003e3e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003e43         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003e48         jmp        loc_3876

                     loc_3e4d:
0000000000003e4d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_35d0+1718
0000000000003e52         movzx      eax, byte [rdx]
0000000000003e55         test       al, al
0000000000003e57         je         loc_3c8c

0000000000003e5d         nop        dword [rax]

                     loc_3e60:
0000000000003e60         cmp        r13, r15                                    ; CODE XREF=sub_35d0+2212
0000000000003e63         jbe        loc_3e69

0000000000003e65         mov        byte [r14+r15], al

                     loc_3e69:
0000000000003e69         add        r15, 0x1                                    ; CODE XREF=sub_35d0+2195
0000000000003e6d         movzx      eax, byte [rdx+r15]
0000000000003e72         test       al, al
0000000000003e74         jne        loc_3e60

0000000000003e76         jmp        loc_3c8c

                     loc_3e7b:
0000000000003e7b         mov        eax, edx                                    ; CODE XREF=sub_35d0+682
0000000000003e7d         jmp        loc_33d7

                     loc_3e82:
0000000000003e82         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_35d0+290
0000000000003e86         cmp        bl, 0x3e
0000000000003e89         ja         loc_3700

0000000000003e8f         movabs     rax, 0x7000a38200000000
0000000000003e99         bt         rax, rbx
0000000000003e9d         jae        loc_3700

0000000000003ea3         cmp        byte [rsp+arg_7], 0x0
0000000000003ea8         jne        loc_4092

0000000000003eae         cmp        r13, r15
0000000000003eb1         jbe        loc_3eb8

0000000000003eb3         mov        byte [r14+r15], 0x3f

                     loc_3eb8:
0000000000003eb8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_35d0+2273
0000000000003ebc         cmp        r13, rax
0000000000003ebf         jbe        loc_3ec7

0000000000003ec1         mov        byte [r14+r15+1], 0x22

                     loc_3ec7:
0000000000003ec7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_35d0+2287
0000000000003ecb         cmp        r13, rax
0000000000003ece         jbe        loc_3ed6

0000000000003ed0         mov        byte [r14+r15+2], 0x22

                     loc_3ed6:
0000000000003ed6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_35d0+2302
0000000000003eda         cmp        r13, rax
0000000000003edd         jbe        loc_3ee5

0000000000003edf         mov        byte [r14+r15+3], 0x3f

                     loc_3ee5:
0000000000003ee5         add        r15, 0x4                                    ; CODE XREF=sub_35d0+2317
0000000000003ee9         xor        edx, edx
0000000000003eeb         xor        r12d, r12d
0000000000003eee         xor        eax, eax
0000000000003ef0         mov        rbp, rcx
0000000000003ef3         jmp        sub_3080+56
                        ; endp

                     loc_3ef8:
0000000000003ef8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003efa         je         loc_4088

0000000000003f00         lea        rax, qword [aLibs+29]                       ; 0x62dd
0000000000003f07         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003f0c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003f11         xor        r12d, r12d
0000000000003f14         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003f1d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003f22         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003f27         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003f30         xor        r15d, r15d
0000000000003f33         mov        qword [rsp+0xe8+var_A0], rax
0000000000003f38         jmp        loc_2f63
0000000000003f3d         align      64

                     loc_3f40:
0000000000003f40         mov        rbp, r11                                    ; CODE XREF=sub_35d0+333
0000000000003f43         movzx      eax, byte [rsp+arg_7]
0000000000003f48         jmp        sub_35d0+1097
                        ; endp

                     loc_3f4d:
0000000000003f4d         lea        rax, qword [aLibs+27]                       ; 0x62db, CODE XREF=sub_35d0+1410
0000000000003f54         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003f59         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003f5e         xor        r12d, r12d
0000000000003f61         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003f6a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003f6f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003f74         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003f7d         xor        r15d, r15d
0000000000003f80         mov        qword [rsp+0xe8+var_A0], rax
0000000000003f85         jmp        loc_2f63

                     loc_3f8a:
0000000000003f8a         mov        eax, edx                                    ; CODE XREF=sub_35d0+87

                     loc_3f8c:
0000000000003f8c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_35d0+76, sub_35d0+2721
0000000000003f91         test       rbx, rbx
0000000000003f94         je         loc_3fc2

0000000000003f96         test       al, al
0000000000003f98         je         loc_3fc2

0000000000003f9a         movzx      ecx, byte [rbx]
0000000000003f9d         mov        rax, rbx
0000000000003fa0         test       cl, cl
0000000000003fa2         je         loc_3fc2

0000000000003fa4         mov        rdx, r15
0000000000003fa7         sub        rax, r15

                     loc_3faa:
0000000000003faa         cmp        r13, rdx                                    ; CODE XREF=sub_35d0+2541
0000000000003fad         jbe        loc_3fb3

0000000000003faf         mov        byte [r14+rdx], cl

                     loc_3fb3:
0000000000003fb3         add        rdx, 0x1                                    ; CODE XREF=sub_35d0+2525
0000000000003fb7         movzx      ecx, byte [rax+rdx]
0000000000003fbb         test       cl, cl
0000000000003fbd         jne        loc_3faa

0000000000003fbf         mov        r15, rdx

                     loc_3fc2:
0000000000003fc2         cmp        r13, r15                                    ; CODE XREF=sub_35d0+2500, sub_35d0+2504, sub_35d0+2514
0000000000003fc5         jbe        loc_3a69

0000000000003fcb         mov        byte [r14+r15], 0x0
0000000000003fd0         jmp        loc_3a69

                     loc_3fd5:
0000000000003fd5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003fda         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003fdf         mov        rbp, r11
0000000000003fe2         sete       al
0000000000003fe5         mov        byte [rsp+0xe8+var_DB], bl
0000000000003fe9         jmp        loc_3a19

                     loc_3fee:
0000000000003fee         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_35d0+1664
0000000000003ff2         mov        rdi, rcx
0000000000003ff5         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003ffa         mov        qword [rsp+0xe8+var_80], rax
0000000000003fff         jmp        loc_3c56

                     loc_4004:
0000000000004004         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_35d0+1707
0000000000004008         mov        rdi, rcx
000000000000400b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004010         mov        qword [rsp+0xe8+var_88], rax
0000000000004015         jmp        loc_3c81

                     loc_401a:
000000000000401a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3470+16
000000000000401f         mov        rbp, r11
0000000000004022         mov        eax, edx
0000000000004024         mov        byte [rsp+arg_5], bl
0000000000004028         jmp        sub_35d0+1097
                        ; endp

                     loc_402d:
000000000000402d         sub        rsp, 0x8                                    ; CODE XREF=sub_35d0+98
0000000000004031         mov        r8d, 0x5
0000000000004037         mov        rcx, r11
000000000000403a         push       qword [rsp+0xf0+var_88]
000000000000403e         push       qword [rsp+0xf8+var_80]
0000000000004042         mov        rdi, r14
0000000000004045         push       qword [rsp+0x100+var_C8]
0000000000004049         mov        r9d, dword [rsp+0x108+var_70]
0000000000004051         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004056         mov        rsi, qword [rsp+0x108+var_98]
000000000000405b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004060         add        rsp, 0x20
0000000000004064         mov        r15, rax
0000000000004067         jmp        loc_3a69

                     loc_406c:
000000000000406c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_35d0+121
0000000000004071         jmp        loc_3f8c

                     loc_4076:
0000000000004076         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_35d0+63
000000000000407e         jmp        loc_3a19

                     loc_4083:
0000000000004083         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_35d0+1197
                        ; endp

                     loc_4088:
0000000000004088         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_35d0+2346
000000000000408d         jmp        loc_3b01

                     loc_4092:
0000000000004092         mov        rbp, r11                                    ; CODE XREF=sub_35d0+2264
0000000000004095         jmp        sub_35d0+1120
                        ; endp

                     loc_409a:
000000000000409a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_35d0+1332
000000000000409f         xor        eax, eax
00000000000040a1         xor        r12d, r12d
00000000000040a4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000040ad         jmp        loc_3654

                     loc_40b2:
00000000000040b2         mov        rdx, r13                                    ; CODE XREF=sub_35d0+1264
00000000000040b5         mov        r13, qword [rsp+arg_48]
00000000000040ba         jmp        loc_36b2

                     loc_40bf:
00000000000040bf         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
00000000000040c4         align      16                                          ; End of unwind block (FDE at 0x7220)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
00000000000040d0         push       r15                                         ; Begin of unwind block (FDE at 0x7298), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
00000000000040d2         push       r14
00000000000040d4         movsxd     r15, edi
00000000000040d7         push       r13
00000000000040d9         push       r12
00000000000040db         mov        r14, rdx
00000000000040de         push       rbp
00000000000040df         push       rbx
00000000000040e0         mov        rbp, rcx
00000000000040e3         sub        rsp, 0x28
00000000000040e7         mov        qword [rsp+0x58+var_50], rsi
00000000000040ec         call       j___errno_location                          ; __errno_location
00000000000040f1         mov        r13, rax
00000000000040f4         mov        eax, dword [rax]
00000000000040f6         test       r15d, r15d
00000000000040f9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004100         mov        dword [rsp+0x58+var_40], eax
0000000000004104         js         loc_4271

000000000000410a         cmp        dword [nslots], r15d                        ; nslots
0000000000004111         jg         loc_4175

0000000000004113         cmp        r15d, 0x7fffffff
000000000000411a         je         loc_4276

0000000000004120         lea        r12d, dword [r15+1]
0000000000004124         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000412b         movsxd     rsi, r12d
000000000000412e         shl        rsi, 0x4
0000000000004132         cmp        rbx, rax
0000000000004135         je         loc_4250

000000000000413b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000413e         call       xrealloc                                    ; xrealloc
0000000000004143         mov        rbx, rax
0000000000004146         mov        qword [slotvec], rax                        ; slotvec

                     loc_414d:
000000000000414d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004154         mov        edx, r12d
0000000000004157         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004159         sub        edx, edi
000000000000415b         shl        rdi, 0x4
000000000000415f         movsxd     rdx, edx
0000000000004162         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004165         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004169         call       j_memset                                    ; memset
000000000000416e         mov        dword [nslots], r12d                        ; nslots

                     loc_4175:
0000000000004175         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004178         shl        r15, 0x4
000000000000417c         sub        rsp, 0x8
0000000000004180         add        rbx, r15
0000000000004183         lea        r15, qword [rbp+8]
0000000000004187         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000418b         mov        r11, qword [rbx]
000000000000418e         mov        r12, qword [rbx+8]
0000000000004192         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004195         or         eax, 0x1
0000000000004198         mov        dword [rsp+0x60+var_3C], eax
000000000000419c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000419f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
00000000000041a2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000041a5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000041a7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
00000000000041aa         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000041af         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
00000000000041b2         mov        qword [rsp+0x78+var_48], r11
00000000000041b7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000041bc         add        rsp, 0x20
00000000000041c0         mov        r11, qword [rsp+0x58+var_48]
00000000000041c5         cmp        r11, rax
00000000000041c8         ja         loc_4231

00000000000041ca         lea        rsi, qword [rax+1]
00000000000041ce         lea        rax, qword [slot0]                          ; slot0
00000000000041d5         cmp        r12, rax
00000000000041d8         mov        qword [rbx], rsi
00000000000041db         je         loc_41ef

00000000000041dd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000041e0         mov        qword [rsp+0x58+var_48], rsi
00000000000041e5         call       j_free                                      ; free
00000000000041ea         mov        rsi, qword [rsp+0x58+var_48]

                     loc_41ef:
00000000000041ef         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
00000000000041f2         mov        qword [rsp+0x58+var_48], rsi
00000000000041f7         call       xmalloc                                     ; xmalloc
00000000000041fc         sub        rsp, 0x8
0000000000004200         mov        qword [rbx+8], rax
0000000000004204         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004208         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000420b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000420e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004211         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004213         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004218         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000421b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004220         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004225         mov        r12, rax
0000000000004228         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000422d         add        rsp, 0x20

                     loc_4231:
0000000000004231         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004235         mov        dword [r13], eax
0000000000004239         add        rsp, 0x28
000000000000423d         mov        rax, r12
0000000000004240         pop        rbx
0000000000004241         pop        rbp
0000000000004242         pop        r12
0000000000004244         pop        r13
0000000000004246         pop        r14
0000000000004248         pop        r15
000000000000424a         ret
                        ; endp
000000000000424b         align      16

                     loc_4250:
0000000000004250         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004252         call       xrealloc                                    ; xrealloc
0000000000004257         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000425f         mov        rbx, rax
0000000000004262         mov        qword [slotvec], rax                        ; slotvec
0000000000004269         movups     xmmword [rax], xmm0
000000000000426c         jmp        loc_414d

                     loc_4271:
0000000000004271         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4276:
0000000000004276         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_427b:
000000000000427b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x7298)
                     clone_quoting_options:
0000000000004280         push       r12                                         ; Begin of unwind block (FDE at 0x7304)
0000000000004282         push       rbp
0000000000004283         push       rbx
0000000000004284         mov        rbx, rdi
0000000000004287         call       j___errno_location                          ; __errno_location
000000000000428c         mov        r12d, dword [rax]
000000000000428f         mov        rbp, rax
0000000000004292         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004299         test       rbx, rbx
000000000000429c         mov        esi, 0x38
00000000000042a1         cmove      rbx, rax
00000000000042a5         mov        rdi, rbx
00000000000042a8         call       xmemdup                                     ; xmemdup
00000000000042ad         mov        dword [rbp], r12d
00000000000042b1         pop        rbx
00000000000042b2         pop        rbp
00000000000042b3         pop        r12
00000000000042b5         ret
                        ; endp
00000000000042b6         align      64                                          ; End of unwind block (FDE at 0x7304)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
00000000000042c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7330), default_quoting_options
00000000000042c7         test       rdi, rdi
00000000000042ca         cmove      rdi, rax
00000000000042ce         mov        eax, dword [rdi]
00000000000042d0         ret
                        ; endp
00000000000042d1         align      32                                          ; End of unwind block (FDE at 0x7330)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
00000000000042e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7344), default_quoting_options
00000000000042e7         test       rdi, rdi
00000000000042ea         cmove      rdi, rax
00000000000042ee         mov        dword [rdi], esi
00000000000042f0         ret
                        ; endp
00000000000042f1         align      256                                         ; End of unwind block (FDE at 0x7344)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004300         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7358), default_quoting_options
0000000000004307         test       rdi, rdi
000000000000430a         mov        ecx, esi
000000000000430c         cmove      rdi, rax
0000000000004310         mov        eax, esi
0000000000004312         and        ecx, 0x1f
0000000000004315         shr        al, 0x5
0000000000004318         movzx      eax, al
000000000000431b         lea        rdi, qword [rdi+rax*4+8]
0000000000004320         mov        esi, dword [rdi]
0000000000004322         mov        eax, esi
0000000000004324         shr        eax, cl
0000000000004326         xor        edx, eax
0000000000004328         and        eax, 0x1
000000000000432b         and        edx, 0x1
000000000000432e         shl        edx, cl
0000000000004330         xor        edx, esi
0000000000004332         mov        dword [rdi], edx
0000000000004334         ret
                        ; endp
0000000000004335         align      64                                          ; End of unwind block (FDE at 0x7358)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004340         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x736c), default_quoting_options
0000000000004347         test       rdi, rdi
000000000000434a         cmove      rdi, rax
000000000000434e         mov        eax, dword [rdi+4]
0000000000004351         mov        dword [rdi+4], esi
0000000000004354         ret
                        ; endp
0000000000004355         align      32                                          ; End of unwind block (FDE at 0x736c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004360         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7380), default_quoting_options
0000000000004367         test       rdi, rdi
000000000000436a         cmove      rdi, rax
000000000000436e         test       rsi, rsi
0000000000004371         mov        dword [rdi], 0xa
0000000000004377         je         loc_4387

0000000000004379         test       rdx, rdx
000000000000437c         je         loc_4387

000000000000437e         mov        qword [rdi+0x28], rsi
0000000000004382         mov        qword [rdi+0x30], rdx
0000000000004386         ret
                        ; endp

                     loc_4387:
0000000000004387         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000438b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004390         push       r15                                         ; End of unwind block (FDE at 0x7380), Begin of unwind block (FDE at 0x7394)
0000000000004392         push       r14
0000000000004394         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000439b         push       r13
000000000000439d         push       r12
000000000000439f         mov        r13, rdi
00000000000043a2         push       rbp
00000000000043a3         push       rbx
00000000000043a4         mov        rbx, r8
00000000000043a7         mov        r14, rsi
00000000000043aa         mov        r15, rdx
00000000000043ad         sub        rsp, 0x18
00000000000043b1         test       r8, r8
00000000000043b4         cmove      rbx, rax
00000000000043b8         mov        qword [rsp+0x48+var_40], rcx
00000000000043bd         call       j___errno_location                          ; __errno_location
00000000000043c2         mov        r12d, dword [rax]
00000000000043c5         mov        rbp, rax
00000000000043c8         lea        rax, qword [rbx+8]
00000000000043cc         sub        rsp, 0x8
00000000000043d0         mov        r9d, dword [rbx+4]
00000000000043d4         push       qword [rbx+0x30]
00000000000043d7         mov        r8d, dword [rbx]
00000000000043da         push       qword [rbx+0x28]
00000000000043dd         mov        rdx, r15
00000000000043e0         push       rax
00000000000043e1         mov        rcx, qword [rsp+0x68+var_40]
00000000000043e6         mov        rsi, r14
00000000000043e9         mov        rdi, r13
00000000000043ec         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000043f1         mov        dword [rbp], r12d
00000000000043f5         add        rsp, 0x38
00000000000043f9         pop        rbx
00000000000043fa         pop        rbp
00000000000043fb         pop        r12
00000000000043fd         pop        r13
00000000000043ff         pop        r14
0000000000004401         pop        r15
0000000000004403         ret
                        ; endp
0000000000004404         align      16                                          ; End of unwind block (FDE at 0x7394)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000004410         push       r15                                         ; Begin of unwind block (FDE at 0x73e8), CODE XREF=quotearg_alloc+5
0000000000004412         push       r14
0000000000004414         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000441b         push       r13
000000000000441d         push       r12
000000000000441f         mov        r12, rdx
0000000000004422         push       rbp
0000000000004423         push       rbx
0000000000004424         mov        rbx, rcx
0000000000004427         mov        r14, rdi
000000000000442a         mov        r15, rsi
000000000000442d         sub        rsp, 0x38
0000000000004431         test       rcx, rcx
0000000000004434         cmove      rbx, rax
0000000000004438         xor        ebp, ebp
000000000000443a         call       j___errno_location                          ; __errno_location
000000000000443f         test       r12, r12
0000000000004442         mov        r13, rax
0000000000004445         mov        eax, dword [rax]
0000000000004447         sete       bpl
000000000000444b         or         ebp, dword [rbx+4]
000000000000444e         lea        r10, qword [rbx+8]
0000000000004452         sub        rsp, 0x8
0000000000004456         mov        r8d, dword [rbx]
0000000000004459         mov        rcx, r15
000000000000445c         mov        dword [rsp+0x70+var_5C], eax
0000000000004460         push       qword [rbx+0x30]
0000000000004463         mov        rdx, r14
0000000000004466         push       qword [rbx+0x28]
0000000000004469         push       r10
000000000000446b         xor        esi, esi
000000000000446d         mov        r9d, ebp
0000000000004470         xor        edi, edi
0000000000004472         mov        qword [rsp+0x88+var_48], r10
0000000000004477         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000447c         lea        rsi, qword [rax+1]
0000000000004480         mov        qword [rsp+0x88+var_40], rax
0000000000004485         add        rsp, 0x20
0000000000004489         mov        rdi, rsi
000000000000448c         mov        qword [rsp+0x68+var_50], rsi
0000000000004491         call       xmalloc                                     ; xmalloc
0000000000004496         mov        qword [rsp+0x68+var_58], rax
000000000000449b         sub        rsp, 0x8
000000000000449f         push       qword [rbx+0x30]
00000000000044a2         push       qword [rbx+0x28]
00000000000044a5         mov        r10, qword [rsp+0x80+var_48]
00000000000044aa         mov        r9d, ebp
00000000000044ad         mov        r8d, dword [rbx]
00000000000044b0         mov        rcx, r15
00000000000044b3         mov        rdx, r14
00000000000044b6         mov        rdi, rax
00000000000044b9         push       r10
00000000000044bb         mov        rsi, qword [rsp+0x88+var_50]
00000000000044c0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000044c5         mov        eax, dword [rsp+0x88+var_5C]
00000000000044c9         add        rsp, 0x20
00000000000044cd         test       r12, r12
00000000000044d0         mov        dword [r13], eax
00000000000044d4         je         loc_44df

00000000000044d6         mov        r11, qword [rsp+0x68+var_40]
00000000000044db         mov        qword [r12], r11

                     loc_44df:
00000000000044df         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000044e4         add        rsp, 0x38
00000000000044e8         pop        rbx
00000000000044e9         pop        rbp
00000000000044ea         pop        r12
00000000000044ec         pop        r13
00000000000044ee         pop        r14
00000000000044f0         pop        r15
00000000000044f2         ret
                        ; endp
00000000000044f3         align      256                                         ; End of unwind block (FDE at 0x73e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004500         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7454)
0000000000004503         xor        edx, edx
0000000000004505         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000450a         align      16                                          ; End of unwind block (FDE at 0x7454)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000004510         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x7468), nslots
0000000000004516         push       r12
0000000000004518         mov        r12, qword [slotvec]                        ; slotvec
000000000000451f         push       rbp
0000000000004520         push       rbx
0000000000004521         cmp        eax, 0x1
0000000000004524         jle        loc_4551

0000000000004526         sub        eax, 0x2
0000000000004529         lea        rbx, qword [r12+0x18]
000000000000452e         shl        rax, 0x4
0000000000004532         lea        rbp, qword [r12+rax+0x28]
0000000000004537         nop        word [rax+rax]

                     loc_4540:
0000000000004540         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004543         add        rbx, 0x10
0000000000004547         call       j_free                                      ; free
000000000000454c         cmp        rbx, rbp
000000000000454f         jne        loc_4540

                     loc_4551:
0000000000004551         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004556         lea        rbx, qword [slot0]                          ; slot0
000000000000455d         cmp        rdi, rbx
0000000000004560         je         loc_4579

0000000000004562         call       j_free                                      ; free
0000000000004567         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004572         mov        qword [slotvec0+8], rbx                     ; 0x209078

                     loc_4579:
0000000000004579         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004580         cmp        r12, rbx
0000000000004583         je         loc_4594

0000000000004585         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004588         call       j_free                                      ; free
000000000000458d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4594:
0000000000004594         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004595         mov        dword [nslots], 0x1                         ; nslots
000000000000459f         pop        rbp
00000000000045a0         pop        r12
00000000000045a2         ret
                        ; endp
00000000000045a3         align      16                                          ; End of unwind block (FDE at 0x7468)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000045b0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7494), default_quoting_options
00000000000045b7         mov        rdx, 0xffffffffffffffff
00000000000045be         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000045c3         align      16                                          ; End of unwind block (FDE at 0x7494)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000045d0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x74a8), default_quoting_options
00000000000045d7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000045dc         align      32                                          ; End of unwind block (FDE at 0x74a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000045e0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x74bc), default_quoting_options
00000000000045e7         mov        rsi, rdi
00000000000045ea         mov        rdx, 0xffffffffffffffff
00000000000045f1         xor        edi, edi
00000000000045f3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000045f8         align      512                                         ; End of unwind block (FDE at 0x74bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004600         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x74d0), default_quoting_options
0000000000004607         mov        rdx, rsi
000000000000460a         mov        rsi, rdi
000000000000460d         xor        edi, edi
000000000000460f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004614         align      32                                          ; End of unwind block (FDE at 0x74d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000004620         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x74e4)
0000000000004624         mov        rax, rdx
0000000000004627         mov        rdx, qword [fs:0x28]
0000000000004630         mov        qword [rsp+0x48+var_10], rdx
0000000000004635         xor        edx, edx
0000000000004637         cmp        esi, 0xa
000000000000463a         je         loc_46a4

000000000000463c         mov        dword [rsp+0x48+var_48], esi
000000000000463f         mov        rcx, rsp
0000000000004642         mov        rdx, 0xffffffffffffffff
0000000000004649         mov        rsi, rax
000000000000464c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004655         mov        qword [rsp+0x48+var_3C], 0x0
000000000000465e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004667         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004670         mov        qword [rsp+0x48+var_24], 0x0
0000000000004679         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004682         mov        dword [rsp+0x48+var_14], 0x0
000000000000468a         call       quotearg_n_options                          ; quotearg_n_options
000000000000468f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004694         xor        rcx, qword [fs:0x28]
000000000000469d         jne        loc_46a9

000000000000469f         add        rsp, 0x48
00000000000046a3         ret
                        ; endp

                     loc_46a4:
00000000000046a4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_46a9:
00000000000046a9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000046ae         align      16                                          ; End of unwind block (FDE at 0x74e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000046b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7500), CODE XREF=quotearg_style_mem+10
00000000000046b4         mov        rax, rdx
00000000000046b7         mov        rdx, rcx
00000000000046ba         mov        rcx, qword [fs:0x28]
00000000000046c3         mov        qword [rsp+0x48+var_10], rcx
00000000000046c8         xor        ecx, ecx
00000000000046ca         cmp        esi, 0xa
00000000000046cd         je         loc_4730

00000000000046cf         mov        dword [rsp+0x48+var_48], esi
00000000000046d2         mov        rcx, rsp
00000000000046d5         mov        rsi, rax
00000000000046d8         mov        qword [rsp+0x48+var_44], 0x0
00000000000046e1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000046ea         mov        qword [rsp+0x48+var_34], 0x0
00000000000046f3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000046fc         mov        qword [rsp+0x48+var_24], 0x0
0000000000004705         mov        qword [rsp+0x48+var_1C], 0x0
000000000000470e         mov        dword [rsp+0x48+var_14], 0x0
0000000000004716         call       quotearg_n_options                          ; quotearg_n_options
000000000000471b         mov        rdx, qword [rsp+0x48+var_10]
0000000000004720         xor        rdx, qword [fs:0x28]
0000000000004729         jne        loc_4735

000000000000472b         add        rsp, 0x48
000000000000472f         ret
                        ; endp

                     loc_4730:
0000000000004730         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4735:
0000000000004735         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000473a         align      64                                          ; End of unwind block (FDE at 0x7500)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004740         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x751c)
0000000000004743         mov        esi, edi
0000000000004745         xor        edi, edi
0000000000004747         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000474c         align      16                                          ; End of unwind block (FDE at 0x751c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004750         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7530)
0000000000004753         mov        rdx, rsi
0000000000004756         mov        esi, edi
0000000000004758         xor        edi, edi
000000000000475a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000475f         align      32                                          ; End of unwind block (FDE at 0x7530)

                     quotearg_char_mem:
0000000000004760         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7544), CODE XREF=quotearg_char+11
0000000000004764         mov        ecx, edx
0000000000004766         mov        rax, qword [fs:0x28]
000000000000476f         mov        qword [rsp+0x48+var_10], rax
0000000000004774         xor        eax, eax
0000000000004776         mov        rax, qword [qword_209230]                   ; qword_209230
000000000000477d         mov        r8, rsp
0000000000004780         and        ecx, 0x1f
0000000000004783         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000478b         mov        qword [rsp+0x48+var_18], rax
0000000000004790         mov        eax, edx
0000000000004792         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004796         shr        al, 0x5
0000000000004799         movzx      eax, al
000000000000479c         lea        r9, qword [r8+rax*4+8]
00000000000047a1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209210
00000000000047a9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000047ae         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209220
00000000000047b6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000047bb         mov        edx, dword [r9]
00000000000047be         mov        eax, edx
00000000000047c0         shr        eax, cl
00000000000047c2         not        eax
00000000000047c4         and        eax, 0x1
00000000000047c7         shl        eax, cl
00000000000047c9         mov        rcx, r8
00000000000047cc         xor        eax, edx
00000000000047ce         mov        rdx, rsi
00000000000047d1         mov        rsi, rdi
00000000000047d4         mov        dword [r9], eax
00000000000047d7         xor        edi, edi
00000000000047d9         call       quotearg_n_options                          ; quotearg_n_options
00000000000047de         mov        rsi, qword [rsp+0x48+var_10]
00000000000047e3         xor        rsi, qword [fs:0x28]
00000000000047ec         jne        loc_47f3

00000000000047ee         add        rsp, 0x48
00000000000047f2         ret
                        ; endp

                     loc_47f3:
00000000000047f3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000047f8         align      2048                                        ; End of unwind block (FDE at 0x7544)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004800         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x7560)
0000000000004804         mov        rsi, 0xffffffffffffffff
000000000000480b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000004810         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x7560), Begin of unwind block (FDE at 0x7574), CODE XREF=close_stdout+101
0000000000004815         mov        rsi, 0xffffffffffffffff
000000000000481c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004821         align      16                                          ; End of unwind block (FDE at 0x7574)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004830         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x7588)
0000000000004835         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000483a         align      64                                          ; End of unwind block (FDE at 0x7588)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004840         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x759c), CODE XREF=main+426, main+1700
0000000000004844         mov        rax, rdx
0000000000004847         mov        rdx, qword [fs:0x28]
0000000000004850         mov        qword [rsp+0x48+var_10], rdx
0000000000004855         xor        edx, edx
0000000000004857         cmp        esi, 0xa
000000000000485a         je         loc_48c4

000000000000485c         mov        dword [rsp+0x48+var_48], esi
000000000000485f         mov        rcx, rsp
0000000000004862         mov        rdx, 0xffffffffffffffff
0000000000004869         mov        rsi, rax
000000000000486c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004875         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000487e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004887         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004890         mov        qword [rsp+0x48+var_24], 0x0
0000000000004899         mov        qword [rsp+0x48+var_1C], 0x0
00000000000048a2         mov        dword [rsp+0x48+var_14], 0x0
00000000000048aa         call       quotearg_n_options                          ; quotearg_n_options
00000000000048af         mov        rcx, qword [rsp+0x48+var_10]
00000000000048b4         xor        rcx, qword [fs:0x28]
00000000000048bd         jne        loc_48c9

00000000000048bf         add        rsp, 0x48
00000000000048c3         ret
                        ; endp

                     loc_48c4:
00000000000048c4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_48c9:
00000000000048c9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000048ce         align      16                                          ; End of unwind block (FDE at 0x759c)

                     quotearg_n_custom_mem:
00000000000048d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x75b8), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000048d4         mov        r9, rcx
00000000000048d7         mov        rcx, qword [qword_209230]                   ; qword_209230
00000000000048de         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000048e6         mov        rax, qword [fs:0x28]
00000000000048ef         mov        qword [rsp+0x48+var_10], rax
00000000000048f4         xor        eax, eax
00000000000048f6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000048fa         test       rsi, rsi
00000000000048fd         mov        qword [rsp+0x48+var_18], rcx
0000000000004902         mov        dword [rsp+0x48+var_48], 0xa
0000000000004909         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209210
0000000000004911         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004916         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209220
000000000000491e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004923         je         loc_4957

0000000000004925         test       rdx, rdx
0000000000004928         je         loc_4957

000000000000492a         mov        qword [rsp+0x48+var_20], rsi
000000000000492f         mov        qword [rsp+0x48+var_18], rdx
0000000000004934         mov        rcx, rsp
0000000000004937         mov        rdx, r8
000000000000493a         mov        rsi, r9
000000000000493d         call       quotearg_n_options                          ; quotearg_n_options
0000000000004942         mov        rdi, qword [rsp+0x48+var_10]
0000000000004947         xor        rdi, qword [fs:0x28]
0000000000004950         jne        loc_495c

0000000000004952         add        rsp, 0x48
0000000000004956         ret
                        ; endp

                     loc_4957:
0000000000004957         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_495c:
000000000000495c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004961         align      16                                          ; End of unwind block (FDE at 0x75b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004970         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x75d4)
0000000000004977         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000497c         align      128                                         ; End of unwind block (FDE at 0x75d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004980         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x75e8)
0000000000004983         mov        r8, 0xffffffffffffffff
000000000000498a         mov        rdx, rsi
000000000000498d         mov        rsi, rdi
0000000000004990         xor        edi, edi
0000000000004992         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004997         align      32                                          ; End of unwind block (FDE at 0x75e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000049a0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x75fc)
00000000000049a3         mov        rcx, rdx
00000000000049a6         mov        rdx, rsi
00000000000049a9         mov        rsi, rdi
00000000000049ac         xor        edi, edi
00000000000049ae         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000049b3         align      64                                          ; End of unwind block (FDE at 0x75fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000049c0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7610), quote_quoting_options
00000000000049c7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000049cc         align      16                                          ; End of unwind block (FDE at 0x7610)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000049d0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7624), quote_quoting_options
00000000000049d7         mov        rdx, rsi
00000000000049da         mov        rsi, rdi
00000000000049dd         xor        edi, edi
00000000000049df         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000049e4         align      16                                          ; End of unwind block (FDE at 0x7624)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000049f0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7638), quote_quoting_options
00000000000049f7         mov        rdx, 0xffffffffffffffff
00000000000049fe         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004a03         align      16                                          ; End of unwind block (FDE at 0x7638)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004a10         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x764c), quote_quoting_options, CODE XREF=main+1921, xnumtoumax+109
0000000000004a17         mov        rsi, rdi
0000000000004a1a         mov        rdx, 0xffffffffffffffff
0000000000004a21         xor        edi, edi
0000000000004a23         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004a28         align      16                                          ; End of unwind block (FDE at 0x764c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000004a30         push       r15                                         ; Begin of unwind block (FDE at 0x7664), CODE XREF=version_etc_va+75, version_etc+161
0000000000004a32         push       r14
0000000000004a34         push       r13
0000000000004a36         push       r12
0000000000004a38         mov        r12, r9
0000000000004a3b         push       rbp
0000000000004a3c         push       rbx
0000000000004a3d         mov        rbp, rdi
0000000000004a40         mov        rbx, r8
0000000000004a43         sub        rsp, 0x28
0000000000004a47         test       rsi, rsi
0000000000004a4a         je         loc_4b68

0000000000004a50         mov        r8, rdx
0000000000004a53         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000004a5a         mov        r9, rcx
0000000000004a5d         xor        eax, eax
0000000000004a5f         mov        rcx, rsi
0000000000004a62         mov        esi, 0x1
0000000000004a67         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4a6c:
0000000000004a6c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x67bb, CODE XREF=version_etc_arn+337
0000000000004a73         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a75         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a7a         call       j_dcgettext                                 ; dcgettext
0000000000004a7f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004a86         mov        rcx, rax
0000000000004a89         mov        r8d, 0x7e3
0000000000004a8f         mov        esi, 0x1
0000000000004a94         mov        rdi, rbp
0000000000004a97         xor        eax, eax
0000000000004a99         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004a9e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004aa5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004aa7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004aac         call       j_dcgettext                                 ; dcgettext
0000000000004ab1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004ab4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004ab7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004abc         cmp        r12, 0x9
0000000000004ac0         ja         loc_4e00

0000000000004ac6         lea        rdx, qword [switch_table_6aa4]              ; switch_table_6aa4
0000000000004acd         movsxd     rax, dword [rdx+r12*4]
0000000000004ad1         add        rax, rdx
0000000000004ad4         jmp        rax                                         ; switch statement using table at 0x6aa4, with 10 cases, 0x4ae0,0x4b56,0x4b90,0x4be8,0x4c28,0x4c70,0x4cc0,0x4d18,0x4d48,0x4db0
0000000000004ad6         align      32

                     loc_4ae0:
0000000000004ae0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004ae4         mov        rax, qword [rbx+0x10]
0000000000004ae8         lea        rsi, qword [aWrittenBySSSns_69b8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000004aef         mov        r8, qword [rbx+8]
0000000000004af3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004af8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004afa         mov        r13, qword [rbx+0x30]
0000000000004afe         mov        r12, qword [rbx+0x28]
0000000000004b02         mov        qword [rsp+0x58+var_48], r9
0000000000004b07         mov        r15, qword [rbx+0x20]
0000000000004b0b         mov        r14, qword [rbx+0x18]
0000000000004b0f         mov        qword [rsp+0x58+var_58], rax
0000000000004b13         mov        qword [rsp+0x58+var_50], r8
0000000000004b18         mov        rbx, qword [rbx]
0000000000004b1b         call       j_dcgettext                                 ; dcgettext
0000000000004b20         sub        rsp, 0x8

                     loc_4b24:
0000000000004b24         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000004b29         mov        rdx, rax
0000000000004b2c         mov        rcx, rbx
0000000000004b2f         mov        esi, 0x1
0000000000004b34         mov        rdi, rbp
0000000000004b37         xor        eax, eax
0000000000004b39         push       r9
0000000000004b3b         push       r13
0000000000004b3d         push       r12
0000000000004b3f         push       r15
0000000000004b41         push       r14
0000000000004b43         mov        r9, qword [rsp+0x88+var_58]
0000000000004b48         mov        r8, qword [rsp+0x88+var_50]
0000000000004b4d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004b52         add        rsp, 0x30

                     loc_4b56:
0000000000004b56         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000004b5a         pop        rbx
0000000000004b5b         pop        rbp
0000000000004b5c         pop        r12
0000000000004b5e         pop        r13
0000000000004b60         pop        r14
0000000000004b62         pop        r15
0000000000004b64         ret
                        ; endp
0000000000004b65         align      8

                     loc_4b68:
0000000000004b68         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000004b6b         mov        rcx, rdx
0000000000004b6e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004b75         mov        esi, 0x1
0000000000004b7a         xor        eax, eax
0000000000004b7c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004b81         jmp        loc_4a6c
0000000000004b86         align      16

                     loc_4b90:
0000000000004b90         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004b94         mov        r9, qword [rbx+0x38]
0000000000004b98         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000004b9f         mov        rax, qword [rbx+0x10]
0000000000004ba3         mov        r8, qword [rbx+8]
0000000000004ba7         mov        edx, 0x5
0000000000004bac         mov        r13, qword [rbx+0x30]
0000000000004bb0         mov        r12, qword [rbx+0x28]
0000000000004bb4         mov        r15, qword [rbx+0x20]
0000000000004bb8         mov        r14, qword [rbx+0x18]
0000000000004bbc         mov        rbx, qword [rbx]
0000000000004bbf         mov        qword [rsp+0x58+var_40], r10
0000000000004bc4         mov        qword [rsp+0x58+var_48], r9
0000000000004bc9         mov        qword [rsp+0x58+var_58], rax
0000000000004bcd         mov        qword [rsp+0x58+var_50], r8

                     loc_4bd2:
0000000000004bd2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004bd4         call       j_dcgettext                                 ; dcgettext
0000000000004bd9         mov        r10, qword [rsp+0x58+var_40]
0000000000004bde         push       r10
0000000000004be0         jmp        loc_4b24
0000000000004be5         align      8

                     loc_4be8:
0000000000004be8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000004beb         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004bf2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bf7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bf9         call       j_dcgettext                                 ; dcgettext
0000000000004bfe         add        rsp, 0x28
0000000000004c02         mov        rcx, rbx
0000000000004c05         mov        rdi, rbp
0000000000004c08         pop        rbx
0000000000004c09         pop        rbp
0000000000004c0a         pop        r12
0000000000004c0c         pop        r13
0000000000004c0e         pop        r14
0000000000004c10         pop        r15
0000000000004c12         mov        rdx, rax
0000000000004c15         mov        esi, 0x1
0000000000004c1a         xor        eax, eax
0000000000004c1c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004c21         align      8

                     loc_4c28:
0000000000004c28         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000004c2c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004c33         mov        rbx, qword [rbx]
0000000000004c36         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c3b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c3d         call       j_dcgettext                                 ; dcgettext
0000000000004c42         add        rsp, 0x28
0000000000004c46         mov        r8, r12
0000000000004c49         mov        rcx, rbx
0000000000004c4c         mov        rdi, rbp
0000000000004c4f         mov        rdx, rax
0000000000004c52         mov        esi, 0x1
0000000000004c57         pop        rbx
0000000000004c58         pop        rbp
0000000000004c59         pop        r12
0000000000004c5b         pop        r13
0000000000004c5d         pop        r14
0000000000004c5f         pop        r15
0000000000004c61         xor        eax, eax
0000000000004c63         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004c68         align      16

                     loc_4c70:
0000000000004c70         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004c74         mov        r12, qword [rbx+8]
0000000000004c78         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004c7f         mov        rbx, qword [rbx]
0000000000004c82         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c87         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c89         call       j_dcgettext                                 ; dcgettext
0000000000004c8e         add        rsp, 0x28
0000000000004c92         mov        r9, r13
0000000000004c95         mov        r8, r12
0000000000004c98         mov        rcx, rbx
0000000000004c9b         mov        rdi, rbp
0000000000004c9e         mov        rdx, rax
0000000000004ca1         pop        rbx
0000000000004ca2         pop        rbp
0000000000004ca3         pop        r12
0000000000004ca5         pop        r13
0000000000004ca7         pop        r14
0000000000004ca9         pop        r15
0000000000004cab         mov        esi, 0x1
0000000000004cb0         xor        eax, eax
0000000000004cb2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004cb7         align      64

                     loc_4cc0:
0000000000004cc0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004cc7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ccc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004cce         mov        r14, qword [rbx+0x18]
0000000000004cd2         mov        r13, qword [rbx+0x10]
0000000000004cd6         mov        r12, qword [rbx+8]
0000000000004cda         mov        rbx, qword [rbx]
0000000000004cdd         call       j_dcgettext                                 ; dcgettext
0000000000004ce2         sub        rsp, 0x8

                     loc_4ce6:
0000000000004ce6         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004ce8         mov        rdx, rax
0000000000004ceb         mov        r9, r13
0000000000004cee         mov        r8, r12
0000000000004cf1         mov        rcx, rbx
0000000000004cf4         mov        rdi, rbp
0000000000004cf7         mov        esi, 0x1
0000000000004cfc         xor        eax, eax
0000000000004cfe         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004d03         pop        rax
0000000000004d04         pop        rdx
0000000000004d05         add        rsp, 0x28
0000000000004d09         pop        rbx
0000000000004d0a         pop        rbp
0000000000004d0b         pop        r12
0000000000004d0d         pop        r13
0000000000004d0f         pop        r14
0000000000004d11         pop        r15
0000000000004d13         ret
                        ; endp
0000000000004d14         align      8

                     loc_4d18:
0000000000004d18         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004d1c         lea        rsi, qword [aWrittenBySSSns_6938]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004d23         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d28         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d2a         mov        r14, qword [rbx+0x18]
0000000000004d2e         mov        r13, qword [rbx+0x10]
0000000000004d32         mov        r12, qword [rbx+8]
0000000000004d36         mov        rbx, qword [rbx]
0000000000004d39         call       j_dcgettext                                 ; dcgettext
0000000000004d3e         push       r15
0000000000004d40         jmp        loc_4ce6
0000000000004d42         align      8

                     loc_4d48:
0000000000004d48         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004d4c         mov        r12, qword [rbx+0x28]
0000000000004d50         lea        rsi, qword [aWrittenBySSSns_6960]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004d57         mov        r15, qword [rbx+0x20]
0000000000004d5b         mov        r14, qword [rbx+0x18]
0000000000004d5f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d64         mov        r13, qword [rbx+0x10]
0000000000004d68         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d6a         mov        rbx, qword [rbx]
0000000000004d6d         mov        qword [rsp+0x58+var_58], r8
0000000000004d71         call       j_dcgettext                                 ; dcgettext
0000000000004d76         sub        rsp, 0x8
0000000000004d7a         mov        r9, r13
0000000000004d7d         push       r12
0000000000004d7f         push       r15
0000000000004d81         push       r14

                     loc_4d83:
0000000000004d83         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004d88         mov        rcx, rbx
0000000000004d8b         mov        rdx, rax
0000000000004d8e         mov        rdi, rbp
0000000000004d91         mov        esi, 0x1
0000000000004d96         xor        eax, eax
0000000000004d98         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004d9d         add        rsp, 0x20
0000000000004da1         add        rsp, 0x28
0000000000004da5         pop        rbx
0000000000004da6         pop        rbp
0000000000004da7         pop        r12
0000000000004da9         pop        r13
0000000000004dab         pop        r14
0000000000004dad         pop        r15
0000000000004daf         ret
                        ; endp

                     loc_4db0:
0000000000004db0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004db4         mov        r13, qword [rbx+0x30]
0000000000004db8         lea        rsi, qword [aWrittenBySSSns_6988]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004dbf         mov        r12, qword [rbx+0x28]
0000000000004dc3         mov        r15, qword [rbx+0x20]
0000000000004dc7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004dcc         mov        r14, qword [rbx+0x18]
0000000000004dd0         mov        r8, qword [rbx+8]
0000000000004dd4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004dd6         mov        qword [rsp+0x58+var_50], r9
0000000000004ddb         mov        rbx, qword [rbx]
0000000000004dde         mov        qword [rsp+0x58+var_58], r8
0000000000004de2         call       j_dcgettext                                 ; dcgettext
0000000000004de7         push       r13
0000000000004de9         push       r12
0000000000004deb         push       r15
0000000000004ded         push       r14
0000000000004def         mov        r9, qword [rsp+0x78+var_50]
0000000000004df4         jmp        loc_4d83
0000000000004df6         align      512

                     loc_4e00:
0000000000004e00         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004e04         mov        r9, qword [rbx+0x38]
0000000000004e08         mov        edx, 0x5
0000000000004e0d         mov        rax, qword [rbx+0x10]
0000000000004e11         mov        r8, qword [rbx+8]
0000000000004e15         lea        rsi, qword [aWrittenBySSSns_6a20]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004e1c         mov        r13, qword [rbx+0x30]
0000000000004e20         mov        r12, qword [rbx+0x28]
0000000000004e24         mov        r15, qword [rbx+0x20]
0000000000004e28         mov        r14, qword [rbx+0x18]
0000000000004e2c         mov        qword [rsp+0x58+var_40], r10
0000000000004e31         mov        qword [rsp+0x58+var_48], r9
0000000000004e36         mov        qword [rsp+0x58+var_58], rax
0000000000004e3a         mov        qword [rsp+0x58+var_50], r8
0000000000004e3f         mov        rbx, qword [rbx]
0000000000004e42         jmp        loc_4bd2
0000000000004e47         align      16                                          ; End of unwind block (FDE at 0x7664)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004e50         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x7778)
0000000000004e53         cmp        qword [r8], 0x0
0000000000004e57         je         j_version_etc_arn                           ; version_etc_arn

0000000000004e59         nop        dword [rax]

                     loc_4e60:
0000000000004e60         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004e64         cmp        qword [r8+r9*8], 0x0
0000000000004e69         jne        loc_4e60

                     j_version_etc_arn:        // version_etc_arn
0000000000004e6b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004e70         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x7778), Begin of unwind block (FDE at 0x778c)
0000000000004e74         mov        r10, r8
0000000000004e77         xor        r9d, r9d
0000000000004e7a         mov        rax, qword [fs:0x28]
0000000000004e83         mov        qword [rsp+0x68+var_10], rax
0000000000004e88         xor        eax, eax
0000000000004e8a         mov        r8, rsp
0000000000004e8d         nop        dword [rax]

                     loc_4e90:
0000000000004e90         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004e93         cmp        eax, 0x2f
0000000000004e96         ja         loc_4eda

0000000000004e98         mov        r11d, eax
0000000000004e9b         add        r11, qword [r10+0x10]
0000000000004e9f         add        eax, 0x8
0000000000004ea2         mov        dword [r10], eax

                     loc_4ea5:
0000000000004ea5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004ea8         test       rax, rax
0000000000004eab         mov        qword [r8+r9*8], rax
0000000000004eaf         je         loc_4ebb

0000000000004eb1         add        r9, 0x1
0000000000004eb5         cmp        r9, 0xa
0000000000004eb9         jne        loc_4e90

                     loc_4ebb:
0000000000004ebb         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004ec0         mov        rax, qword [rsp+0x68+var_10]
0000000000004ec5         xor        rax, qword [fs:0x28]
0000000000004ece         jne        loc_4ed5

0000000000004ed0         add        rsp, 0x68
0000000000004ed4         ret
                        ; endp

                     loc_4ed5:
0000000000004ed5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4eda:
0000000000004eda         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004ede         lea        rax, qword [r11+8]
0000000000004ee2         mov        qword [r10+8], rax
0000000000004ee6         jmp        loc_4ea5
0000000000004ee8         align      16                                          ; End of unwind block (FDE at 0x778c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004ef0         push       rbp                                         ; Begin of unwind block (FDE at 0x77a8), CODE XREF=main+323
0000000000004ef1         push       rbx
0000000000004ef2         mov        r10d, 0x20
0000000000004ef8         xor        r11d, r11d
0000000000004efb         sub        rsp, 0xb8
0000000000004f02         mov        rax, qword [fs:0x28]
0000000000004f0b         mov        qword [rsp+0xc8+var_50], rax
0000000000004f10         xor        eax, eax
0000000000004f12         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004f1a         mov        qword [rsp+0xc8+var_28], r8
0000000000004f22         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000004f2a         lea        r8, qword [rsp+0xc8+var_A8]
0000000000004f2f         mov        qword [rsp+0xc8+var_20], r9
0000000000004f37         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000004f3f         mov        qword [rsp+0xc8+var_B8], rax
0000000000004f44         lea        rax, qword [rsp+0xc8+var_48]
0000000000004f4c         xor        r9d, r9d
0000000000004f4f         mov        qword [rsp+0xc8+var_B0], rax
0000000000004f54         mov        rbp, rax
0000000000004f57         nop        word [rax+rax]

                     loc_4f60:
0000000000004f60         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004f64         ja         loc_4fbc

0000000000004f66         mov        eax, r10d
0000000000004f69         mov        r11d, 0x1
0000000000004f6f         add        r10d, 0x8
0000000000004f73         add        rax, rbp

                     loc_4f76:
0000000000004f76         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004f79         test       rax, rax
0000000000004f7c         mov        qword [r8+r9*8], rax
0000000000004f80         je         loc_4f8c

0000000000004f82         add        r9, 0x1
0000000000004f86         cmp        r9, 0xa
0000000000004f8a         jne        loc_4f60

                     loc_4f8c:
0000000000004f8c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000004f8f         jne        loc_4fb5

                     loc_4f91:
0000000000004f91         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004f96         mov        rax, qword [rsp+0xc8+var_50]
0000000000004f9b         xor        rax, qword [fs:0x28]
0000000000004fa4         jne        loc_4fb0

0000000000004fa6         add        rsp, 0xb8
0000000000004fad         pop        rbx
0000000000004fae         pop        rbp
0000000000004faf         ret
                        ; endp

                     loc_4fb0:
0000000000004fb0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4fb5:
0000000000004fb5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000004fba         jmp        loc_4f91

                     loc_4fbc:
0000000000004fbc         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000004fbf         add        rbx, 0x8
0000000000004fc3         jmp        loc_4f76
0000000000004fc5         align      16                                          ; End of unwind block (FDE at 0x77a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004fd0         push       rbx                                         ; Begin of unwind block (FDE at 0x77d4)
0000000000004fd1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004fd8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004fdd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004fdf         call       j_dcgettext                                 ; dcgettext
0000000000004fe4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000004feb         mov        rsi, rax
0000000000004fee         mov        edi, 0x1
0000000000004ff3         xor        eax, eax
0000000000004ff5         call       j___printf_chk                              ; __printf_chk
0000000000004ffa         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005001         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005006         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005008         call       j_dcgettext                                 ; dcgettext
000000000000500d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005014         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5c3f
000000000000501b         mov        rsi, rax
000000000000501e         mov        edi, 0x1
0000000000005023         xor        eax, eax
0000000000005025         call       j___printf_chk                              ; __printf_chk
000000000000502a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005031         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005038         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000503a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000503f         call       j_dcgettext                                 ; dcgettext
0000000000005044         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005047         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000504a         pop        rbx
000000000000504b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005050         push       rbx                                         ; End of unwind block (FDE at 0x77d4), Begin of unwind block (FDE at 0x77f4), CODE XREF=main+520, main+533, main+1028, main+1047, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005051         mov        rbx, rdi
0000000000005054         call       j_malloc                                    ; malloc
0000000000005059         test       rax, rax
000000000000505c         jne        loc_5063

000000000000505e         test       rbx, rbx
0000000000005061         jne        loc_5065

                     loc_5063:
0000000000005063         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005064         ret
                        ; endp

                     loc_5065:
0000000000005065         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_506a:
000000000000506a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x77f4)
                     xnmalloc:
0000000000005070         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7810)
0000000000005073         mul        rsi
0000000000005076         mov        rdi, rax
0000000000005079         seto       al
000000000000507c         test       rdi, rdi
000000000000507f         js         loc_508b

0000000000005081         movzx      eax, al
0000000000005084         test       rax, rax
0000000000005087         jne        loc_508b

0000000000005089         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_508b:
000000000000508b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000508f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5094:
0000000000005094         nop                                                    ; End of unwind block (FDE at 0x7810)
0000000000005096         nop        word [cs:rax+rax]
                     xcharalloc:
00000000000050a0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x7824)
                        ; endp
00000000000050a2         align      16                                          ; End of unwind block (FDE at 0x7824)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
00000000000050b0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x7838), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
00000000000050b3         push       rbx
00000000000050b4         mov        rbx, rsi
00000000000050b7         jne        loc_50be

00000000000050b9         test       rdi, rdi
00000000000050bc         jne        loc_50d8

                     loc_50be:
00000000000050be         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
00000000000050c1         call       j_realloc                                   ; realloc
00000000000050c6         test       rax, rax
00000000000050c9         jne        loc_50d0

00000000000050cb         test       rbx, rbx
00000000000050ce         jne        loc_50e1

                     loc_50d0:
00000000000050d0         pop        rbx                                         ; CODE XREF=xrealloc+25
00000000000050d1         ret
                        ; endp
00000000000050d2         align      8

                     loc_50d8:
00000000000050d8         call       j_free                                      ; free, CODE XREF=xrealloc+12
00000000000050dd         xor        eax, eax
00000000000050df         pop        rbx
00000000000050e0         ret
                        ; endp

                     loc_50e1:
00000000000050e1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_50e6:
00000000000050e6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7838)
                     xnrealloc:
00000000000050f0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x785c)
00000000000050f3         mul        rdx
00000000000050f6         mov        rsi, rax
00000000000050f9         seto       al
00000000000050fc         test       rsi, rsi
00000000000050ff         js         loc_510b

0000000000005101         movzx      eax, al
0000000000005104         test       rax, rax
0000000000005107         jne        loc_510b

0000000000005109         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_510b:
000000000000510b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000510f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5114:
0000000000005114         nop                                                    ; End of unwind block (FDE at 0x785c)
0000000000005116         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005120         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7870)
0000000000005123         mov        r9, rdx
0000000000005126         mov        rcx, qword [rsi]
0000000000005129         je         loc_5160

000000000000512b         xor        edx, edx
000000000000512d         movabs     rax, 0x5555555555555554
0000000000005137         div        r9
000000000000513a         cmp        rax, rcx
000000000000513d         jbe        loc_517b

000000000000513f         mov        rax, rcx
0000000000005142         shr        rax, 0x1
0000000000005145         lea        rcx, qword [rax+rcx+1]

                     loc_514a:
000000000000514a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000514d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005151         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005154         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005159         align      32

                     loc_5160:
0000000000005160         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005163         je         loc_5188

                     loc_5165:
0000000000005165         mov        rax, rcx                                    ; CODE XREF=sub_5184+28
0000000000005168         mul        r9
000000000000516b         seto       dl
000000000000516e         test       rax, rax
0000000000005171         movzx      edx, dl
0000000000005174         js         loc_517b

0000000000005176         test       rdx, rdx
0000000000005179         je         loc_514a

                     loc_517b:
000000000000517b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000517f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5184:
0000000000005184         nop        dword [rax]
                        ; endp

                     loc_5188:
0000000000005188         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000518a         mov        eax, 0x80
000000000000518f         xor        r8d, r8d
0000000000005192         div        r9
0000000000005195         test       rax, rax
0000000000005198         sete       r8b
000000000000519c         lea        rcx, qword [r8+rax]
00000000000051a0         jmp        loc_5165
00000000000051a2         align      16                                          ; End of unwind block (FDE at 0x7870)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
00000000000051b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7888)
00000000000051b3         mov        rax, qword [rsi]
00000000000051b6         je         loc_51e0

00000000000051b8         movabs     rdx, 0x5555555555555553
00000000000051c2         cmp        rax, rdx
00000000000051c5         ja         loc_51f1

00000000000051c7         mov        rdx, rax
00000000000051ca         shr        rdx, 0x1
00000000000051cd         lea        rax, qword [rdx+rax+1]

                     loc_51d2:
00000000000051d2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
00000000000051d5         mov        rsi, rax                                    ; argument #2 for method xrealloc
00000000000051d8         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000051dd         align      32

                     loc_51e0:
00000000000051e0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000051e3         mov        edx, 0x80
00000000000051e8         cmove      rax, rdx
00000000000051ec         test       rax, rax
00000000000051ef         jns        loc_51d2

                     loc_51f1:
00000000000051f1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000051f5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_51fa:
00000000000051fa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7888)
                     xzalloc:
0000000000005200         push       rbx                                         ; Begin of unwind block (FDE at 0x78a0)
0000000000005201         mov        rbx, rdi
0000000000005204         call       xmalloc                                     ; xmalloc
0000000000005209         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000520c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000520e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005211         pop        rbx
0000000000005212         jmp        j_memset                                    ; memset
                        ; endp
0000000000005217         align      32                                          ; End of unwind block (FDE at 0x78a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005220         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x78bc)
0000000000005223         sub        rsp, 0x8
0000000000005227         mul        rsi
000000000000522a         seto       dl
000000000000522d         test       rax, rax
0000000000005230         js         loc_5249

0000000000005232         movzx      edx, dl
0000000000005235         test       rdx, rdx
0000000000005238         jne        loc_5249

000000000000523a         call       j_calloc                                    ; calloc
000000000000523f         test       rax, rax
0000000000005242         je         loc_5249

0000000000005244         add        rsp, 0x8
0000000000005248         ret
                        ; endp

                     loc_5249:
0000000000005249         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_524e:
000000000000524e         nop                                                    ; End of unwind block (FDE at 0x78bc)
                        ; endp

                     xmemdup:
0000000000005250         push       rbp                                         ; Begin of unwind block (FDE at 0x78d8), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000005251         push       rbx
0000000000005252         mov        rbp, rdi
0000000000005255         mov        rdi, rsi
0000000000005258         mov        rbx, rsi
000000000000525b         sub        rsp, 0x8
000000000000525f         call       xmalloc                                     ; xmalloc
0000000000005264         add        rsp, 0x8
0000000000005268         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000526b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000526e         pop        rbx
000000000000526f         pop        rbp
0000000000005270         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005273         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005278         align      128                                         ; End of unwind block (FDE at 0x78d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005280         push       rbx                                         ; Begin of unwind block (FDE at 0x7900)
0000000000005281         mov        rbx, rdi
0000000000005284         call       j_strlen                                    ; strlen
0000000000005289         mov        rdi, rbx
000000000000528c         lea        rsi, qword [rax+1]
0000000000005290         pop        rbx
0000000000005291         jmp        xmemdup                                     ; xmemdup
0000000000005293         align      32                                          ; End of unwind block (FDE at 0x7900)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
00000000000052a0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x791c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
00000000000052a7         sub        rsp, 0x8
00000000000052ab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000052b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000052b2         call       j_dcgettext                                 ; dcgettext
00000000000052b7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
00000000000052bd         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6284
00000000000052c4         mov        rcx, rax
00000000000052c7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000052c9         xor        eax, eax
00000000000052cb         call       j_error                                     ; error
00000000000052d0         call       j_abort                                     ; abort
                        ; endp
00000000000052d5         align      32                                          ; End of unwind block (FDE at 0x791c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoumax:
00000000000052e0         push       r15                                         ; Begin of unwind block (FDE at 0x7934), CODE XREF=xdectoumax+23
00000000000052e2         push       r14
00000000000052e4         mov        r15, rcx
00000000000052e7         push       r13
00000000000052e9         push       r12
00000000000052eb         mov        r14, rdx
00000000000052ee         push       rbp
00000000000052ef         push       rbx
00000000000052f0         mov        edx, esi
00000000000052f2         xor        esi, esi
00000000000052f4         mov        r12, rdi
00000000000052f7         mov        r13, r9
00000000000052fa         sub        rsp, 0x18
00000000000052fe         mov        rcx, rsp
0000000000005301         mov        ebx, dword [rsp+0x48+arg_0]
0000000000005305         mov        rax, qword [fs:0x28]
000000000000530e         mov        qword [rsp+0x48+var_40], rax
0000000000005313         xor        eax, eax
0000000000005315         call       xstrtoumax                                  ; xstrtoumax
000000000000531a         test       eax, eax
000000000000531c         jne        loc_53b0

0000000000005322         mov        rbp, qword [rsp+0x48+var_48]
0000000000005326         cmp        rbp, r14
0000000000005329         jb         loc_5330

000000000000532b         cmp        rbp, r15
000000000000532e         jbe        loc_5384

                     loc_5330:
0000000000005330         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoumax+73
0000000000005335         cmp        rbp, 0x40000000
000000000000533c         mov        r14, rax
000000000000533f         sbb        eax, eax
0000000000005341         and        eax, 0xffffffd7
0000000000005344         add        eax, 0x4b
0000000000005347         mov        dword [r14], eax

                     loc_534a:
000000000000534a         mov        rdi, r12                                    ; CODE XREF=xnumtoumax+226, xnumtoumax+234, xnumtoumax+246
000000000000534d         call       quote                                       ; quote
0000000000005352         mov        esi, dword [r14]
0000000000005355         mov        r8, rax
0000000000005358         mov        eax, 0x0
000000000000535d         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000005364         mov        rcx, r13
0000000000005367         cmp        esi, 0x16
000000000000536a         cmove      esi, eax                                    ; argument "__errnum" for method j_error
000000000000536d         test       ebx, ebx
000000000000536f         mov        eax, 0x1
0000000000005374         cmove      ebx, eax
0000000000005377         xor        eax, eax
0000000000005379         mov        edi, ebx                                    ; argument "__status" for method j_error
000000000000537b         call       j_error                                     ; error
0000000000005380         mov        rbp, qword [rsp+0x48+var_48]

                     loc_5384:
0000000000005384         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoumax+78
0000000000005389         xor        rdx, qword [fs:0x28]
0000000000005392         mov        rax, rbp
0000000000005395         jne        loc_53db

0000000000005397         add        rsp, 0x18
000000000000539b         pop        rbx
000000000000539c         pop        rbp
000000000000539d         pop        r12
000000000000539f         pop        r13
00000000000053a1         pop        r14
00000000000053a3         pop        r15
00000000000053a5         ret
                        ; endp
00000000000053a6         align      16

                     loc_53b0:
00000000000053b0         mov        ebp, eax                                    ; CODE XREF=xnumtoumax+60
00000000000053b2         call       j___errno_location                          ; __errno_location
00000000000053b7         cmp        ebp, 0x1
00000000000053ba         mov        r14, rax
00000000000053bd         je         loc_53d0

00000000000053bf         cmp        ebp, 0x3
00000000000053c2         jne        loc_534a

00000000000053c4         mov        dword [rax], 0x0
00000000000053ca         jmp        loc_534a
00000000000053cf         align      16

                     loc_53d0:
00000000000053d0         mov        dword [rax], 0x4b                           ; CODE XREF=xnumtoumax+221
00000000000053d6         jmp        loc_534a

                     loc_53db:
00000000000053db         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoumax+181
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xdectoumax:
00000000000053e0         sub        rsp, 0x10                                   ; End of unwind block (FDE at 0x7934), Begin of unwind block (FDE at 0x7980), CODE XREF=main+222
00000000000053e4         push       r9
00000000000053e6         mov        r9, r8
00000000000053e9         mov        r8, rcx
00000000000053ec         mov        rcx, rdx
00000000000053ef         mov        rdx, rsi
00000000000053f2         mov        esi, 0xa
00000000000053f7         call       xnumtoumax                                  ; xnumtoumax
00000000000053fc         add        rsp, 0x18
0000000000005400         ret
                        ; endp
0000000000005401         align      16                                          ; End of unwind block (FDE at 0x7980)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000005410         push       r15                                         ; Begin of unwind block (FDE at 0x799c), CODE XREF=xnumtoumax+53
0000000000005412         push       r14
0000000000005414         push       r13
0000000000005416         push       r12
0000000000005418         push       rbp
0000000000005419         push       rbx
000000000000541a         sub        rsp, 0x28
000000000000541e         mov        rax, qword [fs:0x28]
0000000000005427         mov        qword [rsp+0x58+var_40], rax
000000000000542c         xor        eax, eax
000000000000542e         cmp        edx, 0x24
0000000000005431         ja         loc_5795

0000000000005437         lea        rax, qword [rsp+0x58+var_48]
000000000000543c         mov        r15, rsi
000000000000543f         test       rsi, rsi
0000000000005442         mov        rbp, rdi
0000000000005445         mov        dword [rsp+0x58+var_50], edx
0000000000005449         mov        r14, rcx
000000000000544c         mov        r13, r8
000000000000544f         cmove      r15, rax
0000000000005453         call       j___errno_location                          ; __errno_location
0000000000005458         mov        dword [rax], 0x0
000000000000545e         mov        r12, rax
0000000000005461         movzx      ebx, byte [rbp]
0000000000005465         call       j___ctype_b_loc                             ; __ctype_b_loc
000000000000546a         mov        edx, dword [rsp+0x58+var_50]
000000000000546e         mov        rsi, qword [rax]
0000000000005471         mov        rax, rbp
0000000000005474         jmp        loc_5487
0000000000005476         align      128

                     loc_5480:
0000000000005480         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
0000000000005484         movzx      ebx, byte [rax]

                     loc_5487:
0000000000005487         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
000000000000548a         test       byte [rsi+rcx*2+1], 0x20
000000000000548f         jne        loc_5480

0000000000005491         cmp        bl, 0x2d
0000000000005494         je         loc_54e8

0000000000005496         xor        ecx, ecx
0000000000005498         mov        rsi, r15
000000000000549b         mov        rdi, rbp
000000000000549e         call       j___strtoul_internal                        ; __strtoul_internal
00000000000054a3         mov        rcx, qword [r15]
00000000000054a6         mov        rbx, rax
00000000000054a9         cmp        rcx, rbp
00000000000054ac         je         loc_54d8

00000000000054ae         mov        eax, dword [r12]
00000000000054b2         test       eax, eax
00000000000054b4         je         loc_5518

00000000000054b6         cmp        eax, 0x22
00000000000054b9         mov        ebp, 0x1
00000000000054be         jne        loc_54e8

                     loc_54c0:
00000000000054c0         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
00000000000054c3         je         loc_54ce

00000000000054c5         movzx      r12d, byte [rcx]
00000000000054c9         test       r12b, r12b
00000000000054cc         jne        loc_5547

                     loc_54ce:
00000000000054ce         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
00000000000054d1         jmp        loc_54ed
00000000000054d3         align      8

                     loc_54d8:
00000000000054d8         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
00000000000054db         mov        qword [rsp+0x58+var_50], rcx
00000000000054e0         jne        loc_5520

00000000000054e2         nop        word [rax+rax]

                     loc_54e8:
00000000000054e8         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_54ed:
00000000000054ed         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
00000000000054f2         xor        rdi, qword [fs:0x28]
00000000000054fb         mov        eax, ebp
00000000000054fd         jne        loc_5790

0000000000005503         add        rsp, 0x28
0000000000005507         pop        rbx
0000000000005508         pop        rbp
0000000000005509         pop        r12
000000000000550b         pop        r13
000000000000550d         pop        r14
000000000000550f         pop        r15
0000000000005511         ret
                        ; endp
0000000000005512         align      8

                     loc_5518:
0000000000005518         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
000000000000551a         jmp        loc_54c0
000000000000551c         align      32

                     loc_5520:
0000000000005520         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000005525         test       r12b, r12b
0000000000005528         je         loc_54e8

000000000000552a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
000000000000552e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005531         xor        ebp, ebp
0000000000005533         call       j_strchr                                    ; strchr
0000000000005538         test       rax, rax
000000000000553b         mov        ebx, 0x1
0000000000005540         mov        rcx, qword [rsp+0x58+var_50]
0000000000005545         je         loc_54e8

                     loc_5547:
0000000000005547         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
000000000000554b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
000000000000554e         mov        qword [rsp+0x58+var_50], rcx
0000000000005553         call       j_strchr                                    ; strchr
0000000000005558         test       rax, rax
000000000000555b         mov        rcx, qword [rsp+0x58+var_50]
0000000000005560         je         loc_562c

0000000000005566         lea        eax, dword [r12-0x45]
000000000000556b         cmp        al, 0x2f
000000000000556d         ja         loc_55c0

000000000000556f         movabs     rdx, 0x814400308945
0000000000005579         bt         rdx, rax
000000000000557d         jae        loc_55c0

000000000000557f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000005584         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005587         mov        qword [rsp+0x58+var_50], rcx
000000000000558c         call       j_strchr                                    ; strchr
0000000000005591         test       rax, rax
0000000000005594         mov        rcx, qword [rsp+0x58+var_50]
0000000000005599         je         loc_55c0

000000000000559b         movzx      eax, byte [rcx+1]
000000000000559f         cmp        al, 0x44
00000000000055a1         je         loc_55af

00000000000055a3         cmp        al, 0x69
00000000000055a5         je         loc_5778

00000000000055ab         cmp        al, 0x42
00000000000055ad         jne        loc_55c0

                     loc_55af:
00000000000055af         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
00000000000055b4         mov        esi, 0x3e8
00000000000055b9         jmp        loc_55ca
00000000000055bb         align      64

                     loc_55c0:
00000000000055c0         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
00000000000055c5         mov        esi, 0x400

                     loc_55ca:
00000000000055ca         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
00000000000055ce         cmp        r12b, 0x35
00000000000055d2         ja         loc_562c

00000000000055d4         lea        rdx, qword [switch_table_6b68]              ; switch_table_6b68
00000000000055db         movzx      r12d, r12b
00000000000055df         movsxd     rax, dword [rdx+r12*4]
00000000000055e3         add        rax, rdx
00000000000055e6         jmp        rax                                         ; switch statement using table at 0x6b68, with 54 cases, 0x55e8,0x5610,0x562c,0x5637,0x564d,0x5664,0x568a,0x56af,0x56cf,0x56f0,0x5713,0x5736,0x574c

                     loc_55e8:
00000000000055e8         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
00000000000055eb         mul        rsi
00000000000055ee         jo         loc_57e1

00000000000055f4         xor        r8d, r8d

                     loc_55f7:
00000000000055f7         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
00000000000055fa         jo         loc_57d2

0000000000005600         mov        rbx, rax

                     loc_5603:
0000000000005603         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000005606         nop        word [cs:rax+rax]

                     loc_5610:
0000000000005610         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000005613         mov        eax, ebp
0000000000005615         add        rcx, rdi
0000000000005618         or         eax, 0x2
000000000000561b         mov        qword [r15], rcx
000000000000561e         cmp        byte [rcx], 0x0
0000000000005621         mov        qword [r14], rbx
0000000000005624         cmovne     ebp, eax
0000000000005627         jmp        loc_54ed

                     loc_562c:
000000000000562c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
000000000000562f         or         ebp, 0x2
0000000000005632         jmp        loc_54ed

                     loc_5637:
0000000000005637         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
000000000000563c         mov        rax, rdx
000000000000563f         mul        rbx
0000000000005642         jo         loc_56de

0000000000005648         add        rbx, rbx
000000000000564b         jmp        loc_5610

                     loc_564d:
000000000000564d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000005652         mov        rax, rdx
0000000000005655         mul        rbx
0000000000005658         jo         loc_56de

000000000000565e         shl        rbx, 0x9
0000000000005662         jmp        loc_5610

                     loc_5664:
0000000000005664         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
000000000000566a         xor        r9d, r9d
000000000000566d         nop        dword [rax]

                     loc_5670:
0000000000005670         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000005673         mul        rsi
0000000000005676         mov        rbx, rax
0000000000005679         jo         loc_580e

                     loc_567f:
000000000000567f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
0000000000005683         jne        loc_5670

                     loc_5685:
0000000000005685         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
0000000000005688         jmp        loc_5610

                     loc_568a:
000000000000568a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
0000000000005690         xor        r9d, r9d
0000000000005693         nop        dword [rax+rax]

                     loc_5698:
0000000000005698         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
000000000000569b         mul        rsi
000000000000569e         mov        rbx, rax
00000000000056a1         jo         loc_57f0

                     loc_56a7:
00000000000056a7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
00000000000056ab         jne        loc_5698

00000000000056ad         jmp        loc_5685

                     loc_56af:
00000000000056af         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
00000000000056b5         xor        r9d, r9d

                     loc_56b8:
00000000000056b8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
00000000000056bb         mul        rsi
00000000000056be         mov        rbx, rax
00000000000056c1         jo         loc_57c3

                     loc_56c7:
00000000000056c7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
00000000000056cb         jne        loc_56b8

00000000000056cd         jmp        loc_5685

                     loc_56cf:
00000000000056cf         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
00000000000056d2         mul        rsi
00000000000056d5         mov        rbx, rax
00000000000056d8         jno        loc_5610

                     loc_56de:
00000000000056de         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
00000000000056e3         or         rbx, 0xffffffffffffffff
00000000000056e7         jmp        loc_5610
00000000000056ec         align      16

                     loc_56f0:
00000000000056f0         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
00000000000056f6         xor        r9d, r9d

                     loc_56f9:
00000000000056f9         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
00000000000056fc         mul        rsi
00000000000056ff         mov        rbx, rax
0000000000005702         jo         loc_57ff

                     loc_5708:
0000000000005708         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
000000000000570c         jne        loc_56f9

000000000000570e         jmp        loc_5685

                     loc_5713:
0000000000005713         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000005719         xor        r9d, r9d

                     loc_571c:
000000000000571c         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
000000000000571f         mul        rsi
0000000000005722         mov        rbx, rax
0000000000005725         jo         loc_57b4

                     loc_572b:
000000000000572b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
000000000000572f         jne        loc_571c

0000000000005731         jmp        loc_5685

                     loc_5736:
0000000000005736         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
000000000000573b         mov        rax, rdx
000000000000573e         mul        rbx
0000000000005741         jo         loc_56de

0000000000005743         shl        rbx, 0xa
0000000000005747         jmp        loc_5610

                     loc_574c:
000000000000574c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
000000000000574f         mul        rsi
0000000000005752         jo         loc_581d

0000000000005758         xor        r8d, r8d

                     loc_575b:
000000000000575b         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
000000000000575e         jno        loc_55f7

0000000000005764         mov        r8d, 0x1
000000000000576a         or         rax, 0xffffffffffffffff
000000000000576e         jmp        loc_55f7
0000000000005773         align      8

                     loc_5778:
0000000000005778         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
000000000000577a         cmp        byte [rcx+2], 0x42
000000000000577e         mov        esi, 0x400
0000000000005783         sete       dil
0000000000005787         lea        edi, dword [rdi+rdi+1]
000000000000578b         jmp        loc_55ca

                     loc_5790:
0000000000005790         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_5795:
0000000000005795         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
000000000000579c         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
00000000000057a3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
00000000000057aa         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
00000000000057af         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_57b4:
00000000000057b4         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
00000000000057ba         or         rbx, 0xffffffffffffffff
00000000000057be         jmp        loc_572b

                     loc_57c3:
00000000000057c3         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
00000000000057c9         or         rbx, 0xffffffffffffffff
00000000000057cd         jmp        loc_56c7

                     loc_57d2:
00000000000057d2         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
00000000000057d8         or         rbx, 0xffffffffffffffff
00000000000057dc         jmp        loc_5603

                     loc_57e1:
00000000000057e1         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
00000000000057e5         mov        r8d, 0x1
00000000000057eb         jmp        loc_55f7

                     loc_57f0:
00000000000057f0         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
00000000000057f6         or         rbx, 0xffffffffffffffff
00000000000057fa         jmp        loc_56a7

                     loc_57ff:
00000000000057ff         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000005805         or         rbx, 0xffffffffffffffff
0000000000005809         jmp        loc_5708

                     loc_580e:
000000000000580e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000005814         or         rbx, 0xffffffffffffffff
0000000000005818         jmp        loc_567f

                     loc_581d:
000000000000581d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000005823         or         rax, 0xffffffffffffffff
0000000000005827         jmp        loc_575b
000000000000582c         align      16                                          ; End of unwind block (FDE at 0x799c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005830         push       r12                                         ; Begin of unwind block (FDE at 0x79ec), CODE XREF=main+965, close_stream+21
0000000000005832         push       rbp
0000000000005833         push       rbx
0000000000005834         mov        rbx, rdi
0000000000005837         call       j_fileno                                    ; fileno
000000000000583c         test       eax, eax
000000000000583e         mov        rdi, rbx
0000000000005841         js         loc_5897

0000000000005843         call       j___freading                                ; __freading
0000000000005848         test       eax, eax
000000000000584a         jne        loc_5878

                     loc_584c:
000000000000584c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000584f         call       rpl_fflush                                  ; rpl_fflush
0000000000005854         test       eax, eax
0000000000005856         je         loc_5894

0000000000005858         call       j___errno_location                          ; __errno_location
000000000000585d         mov        r12d, dword [rax]
0000000000005860         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000005863         mov        rbp, rax
0000000000005866         call       j_fclose                                    ; fclose
000000000000586b         test       r12d, r12d
000000000000586e         jne        loc_58a0

                     loc_5870:
0000000000005870         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000005871         pop        rbp
0000000000005872         pop        r12
0000000000005874         ret
                        ; endp
0000000000005875         align      8

                     loc_5878:
0000000000005878         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000587b         call       j_fileno                                    ; fileno
0000000000005880         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000005882         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005887         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005889         call       j_lseek                                     ; lseek
000000000000588e         cmp        rax, 0xffffffffffffffff
0000000000005892         jne        loc_584c

                     loc_5894:
0000000000005894         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_5897:
0000000000005897         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000005898         pop        rbp
0000000000005899         pop        r12
000000000000589b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_58a0:
00000000000058a0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000058a4         mov        eax, 0xffffffff
00000000000058a9         jmp        loc_5870
00000000000058ab         align      16                                          ; End of unwind block (FDE at 0x79ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000058b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7a24), CODE XREF=rpl_fclose+31
00000000000058b3         push       rbx
00000000000058b4         mov        rbx, rdi
00000000000058b7         je         loc_58ca

00000000000058b9         call       j___freading                                ; __freading
00000000000058be         test       eax, eax
00000000000058c0         je         loc_58ca

00000000000058c2         test       dword [rbx], 0x100
00000000000058c8         jne        loc_58d8

                     loc_58ca:
00000000000058ca         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000058cd         pop        rbx
00000000000058ce         jmp        j_fflush                                    ; fflush
                        ; endp
00000000000058d3         align      8

                     loc_58d8:
00000000000058d8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
00000000000058db         mov        edx, 0x1
00000000000058e0         xor        esi, esi
00000000000058e2         call       rpl_fseeko                                  ; rpl_fseeko
00000000000058e7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
00000000000058ea         pop        rbx
00000000000058eb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
00000000000058f0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x7a24), Begin of unwind block (FDE at 0x7a44), CODE XREF=rpl_fflush+50
00000000000058f4         cmp        qword [rdi+0x10], rax
00000000000058f8         je         loc_5900

                     j_j_fseeko:        // fseeko
00000000000058fa         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
00000000000058ff         align      256

                     loc_5900:
0000000000005900         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005904         cmp        qword [rdi+0x28], rax
0000000000005908         jne        j_j_fseeko                                  ; fseeko

000000000000590a         cmp        qword [rdi+0x48], 0x0
000000000000590f         jne        j_j_fseeko                                  ; fseeko

0000000000005911         push       r12
0000000000005913         push       rbp
0000000000005914         mov        r12d, edx
0000000000005917         push       rbx
0000000000005918         mov        rbp, rsi
000000000000591b         mov        rbx, rdi
000000000000591e         call       j_fileno                                    ; fileno
0000000000005923         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005926         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005929         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000592b         call       j_lseek                                     ; lseek
0000000000005930         cmp        rax, 0xffffffffffffffff
0000000000005934         je         loc_5942

0000000000005936         and        dword [rbx], 0xffffffef
0000000000005939         mov        qword [rbx+0x90], rax
0000000000005940         xor        eax, eax

                     loc_5942:
0000000000005942         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000005943         pop        rbp
0000000000005944         pop        r12
0000000000005946         ret
                        ; endp
0000000000005947         align      16                                          ; End of unwind block (FDE at 0x7a44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005950         push       r13                                         ; Begin of unwind block (FDE at 0x7a74), CODE XREF=sub_35d0+534
0000000000005952         push       r12
0000000000005954         mov        r13, rsi
0000000000005957         push       rbp
0000000000005958         push       rbx
0000000000005959         mov        rbx, rdi
000000000000595c         mov        r12, rdx
000000000000595f         sub        rsp, 0x18
0000000000005963         mov        rax, qword [fs:0x28]
000000000000596c         mov        qword [rsp+0x38+var_30], rax
0000000000005971         xor        eax, eax
0000000000005973         lea        rax, qword [rsp+0x38+var_34]
0000000000005978         test       rdi, rdi
000000000000597b         cmove      rbx, rax
000000000000597f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005982         call       j_mbrtowc                                   ; mbrtowc
0000000000005987         cmp        rax, 0xfffffffffffffffd
000000000000598b         mov        rbp, rax
000000000000598e         jbe        loc_59b0

0000000000005990         test       r12, r12
0000000000005993         je         loc_59b0

0000000000005995         xor        edi, edi
0000000000005997         call       hard_locale                                 ; hard_locale
000000000000599c         test       al, al
000000000000599e         jne        loc_59b0

00000000000059a0         movzx      eax, byte [r13]
00000000000059a5         mov        ebp, 0x1
00000000000059aa         mov        dword [rbx], eax
00000000000059ac         nop        dword [rax]

                     loc_59b0:
00000000000059b0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000059b5         xor        rdx, qword [fs:0x28]
00000000000059be         mov        rax, rbp
00000000000059c1         jne        loc_59ce

00000000000059c3         add        rsp, 0x18
00000000000059c7         pop        rbx
00000000000059c8         pop        rbp
00000000000059c9         pop        r12
00000000000059cb         pop        r13
00000000000059cd         ret
                        ; endp

                     loc_59ce:
00000000000059ce         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000059d3         align      32                                          ; End of unwind block (FDE at 0x7a74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
00000000000059e0         push       r12                                         ; Begin of unwind block (FDE at 0x7ab4), CODE XREF=close_stdout+13, close_stdout+51
00000000000059e2         push       rbp
00000000000059e3         mov        rbp, rdi
00000000000059e6         push       rbx
00000000000059e7         call       j___fpending                                ; __fpending
00000000000059ec         mov        ebx, dword [rbp]
00000000000059ef         mov        rdi, rbp
00000000000059f2         mov        r12, rax
00000000000059f5         call       rpl_fclose                                  ; rpl_fclose
00000000000059fa         and        ebx, 0x20
00000000000059fd         test       ebx, ebx
00000000000059ff         jne        loc_5a18

0000000000005a01         test       eax, eax
0000000000005a03         je         loc_5a0f

0000000000005a05         test       r12, r12
0000000000005a08         mov        eax, 0xffffffff
0000000000005a0d         je         loc_5a48

                     loc_5a0f:
0000000000005a0f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005a10         pop        rbp
0000000000005a11         pop        r12
0000000000005a13         ret
                        ; endp
0000000000005a14         align      8

                     loc_5a18:
0000000000005a18         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000005a1a         jne        loc_5a38

0000000000005a1c         call       j___errno_location                          ; __errno_location
0000000000005a21         mov        dword [rax], 0x0
0000000000005a27         mov        eax, 0xffffffff
0000000000005a2c         pop        rbx
0000000000005a2d         pop        rbp
0000000000005a2e         pop        r12
0000000000005a30         ret
                        ; endp
0000000000005a31         align      8

                     loc_5a38:
0000000000005a38         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005a39         mov        eax, 0xffffffff
0000000000005a3e         pop        rbp
0000000000005a3f         pop        r12
0000000000005a41         ret
                        ; endp
0000000000005a42         align      8

                     loc_5a48:
0000000000005a48         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000005a4d         cmp        dword [rax], 0x9
0000000000005a50         pop        rbx
0000000000005a51         pop        rbp
0000000000005a52         pop        r12
0000000000005a54         setne      al
0000000000005a57         movzx      eax, al
0000000000005a5a         neg        eax
0000000000005a5c         ret
                        ; endp
0000000000005a5d         align      32                                          ; End of unwind block (FDE at 0x7ab4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005a60         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x7b04), CODE XREF=rpl_mbrtowc+71
0000000000005a64         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005a66         call       j_setlocale                                 ; setlocale
0000000000005a6b         mov        rdx, rax
0000000000005a6e         mov        eax, 0x1
0000000000005a73         test       rdx, rdx
0000000000005a76         je         loc_5a95

0000000000005a78         lea        rdi, qword [__PRETTY_FUNCTION__.4162+11]    ; 0x6c4b
0000000000005a7f         mov        ecx, 0x2
0000000000005a84         mov        rsi, rdx
0000000000005a87         rep  cmpsb byte [rsi], byte [rdi]
0000000000005a89         seta       cl
0000000000005a8c         sbb        cl, 0x0
0000000000005a8f         xor        eax, eax
0000000000005a91         test       cl, cl
0000000000005a93         jne        loc_5aa0

                     loc_5a95:
0000000000005a95         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005a99         ret
                        ; endp
0000000000005a9a         align      32

                     loc_5aa0:
0000000000005aa0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005aa7         mov        ecx, 0x6
0000000000005aac         mov        rsi, rdx
0000000000005aaf         rep  cmpsb byte [rsi], byte [rdi]
0000000000005ab1         seta       al
0000000000005ab4         sbb        al, 0x0
0000000000005ab6         test       al, al
0000000000005ab8         setne      al
0000000000005abb         add        rsp, 0x8
0000000000005abf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005ac0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x7b04), Begin of unwind block (FDE at 0x7b24), CODE XREF=gettext_quote.part.1+11
0000000000005ac4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005ac9         call       j_nl_langinfo                               ; nl_langinfo
0000000000005ace         test       rax, rax
0000000000005ad1         je         loc_5af0

0000000000005ad3         cmp        byte [rax], 0x0
0000000000005ad6         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000005add         cmove      rax, rdx
0000000000005ae1         add        rsp, 0x8
0000000000005ae5         ret
                        ; endp
0000000000005ae6         align      16

                     loc_5af0:
0000000000005af0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005af7         add        rsp, 0x8
0000000000005afb         ret
                        ; endp
0000000000005afc         align      256                                         ; End of unwind block (FDE at 0x7b24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000005b00         push       r15                                         ; Begin of unwind block (FDE at 0x7b44), DATA XREF=_start+22
0000000000005b02         push       r14
0000000000005b04         mov        r15, rdx
0000000000005b07         push       r13
0000000000005b09         push       r12
0000000000005b0b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000005b12         push       rbp
0000000000005b13         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000005b1a         push       rbx
0000000000005b1b         mov        r13d, edi
0000000000005b1e         mov        r14, rsi
0000000000005b21         sub        rbp, r12
0000000000005b24         sub        rsp, 0x8
0000000000005b28         sar        rbp, 0x3
0000000000005b2c         call       _init                                       ; _init
0000000000005b31         test       rbp, rbp
0000000000005b34         je         loc_5b56

0000000000005b36         xor        ebx, ebx
0000000000005b38         nop        dword [rax+rax]

                     loc_5b40:
0000000000005b40         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000005b43         mov        rsi, r14
0000000000005b46         mov        edi, r13d
0000000000005b49         call       qword [r12+rbx*8]
0000000000005b4d         add        rbx, 0x1
0000000000005b51         cmp        rbp, rbx
0000000000005b54         jne        loc_5b40

                     loc_5b56:
0000000000005b56         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000005b5a         pop        rbx
0000000000005b5b         pop        rbp
0000000000005b5c         pop        r12
0000000000005b5e         pop        r13
0000000000005b60         pop        r14
0000000000005b62         pop        r15
0000000000005b64         ret
                        ; endp
0000000000005b65         align      16                                          ; End of unwind block (FDE at 0x7b44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000005b70         ret                                                    ; Begin of unwind block (FDE at 0x7b8c), DATA XREF=_start+15
                        ; endp
0000000000005b72         align      128                                         ; End of unwind block (FDE at 0x7b8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000005b80         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x7ba4), __dso_handle, CODE XREF=main+106
0000000000005b87         xor        esi, esi
0000000000005b89         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000005b8e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7ba4)
0000000000005b8f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x5b90; 0x5b99[ (9 bytes)
        ; File offset : [23440; 23449[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000005b90         sub        rsp, 0x8
0000000000005b94         add        rsp, 0x8
0000000000005b98         ret
                        ; endp
0000000000005b99         db  0x00 ; '.'
0000000000005b9a         db  0x00 ; '.'
0000000000005b9b         db  0x00 ; '.'
0000000000005b9c         db  0x00 ; '.'
0000000000005b9d         db  0x00 ; '.'
0000000000005b9e         db  0x00 ; '.'
0000000000005b9f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5ba0; 0x6c59[ (4281 bytes)
        ; File offset : [23456; 27737[ (4281 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005ba0         db  0x01 ; '.'
0000000000005ba1         db  0x00 ; '.'
0000000000005ba2         db  0x02 ; '.'
0000000000005ba3         db  0x00 ; '.'
                     aBase64:
0000000000005ba4         db         "base64", 0                                 ; DATA XREF=main+311, usage+344, usage+375, usage+700, usage+884, usage+903, usage+937
                     aUsageSOptionFi:
0000000000005bab         db         "Usage: %s [OPTION]... [FILE]\n", 0         ; DATA XREF=usage+93
0000000000005bc9         db  0x5b ; '['                                         ; DATA XREF=usage+400
0000000000005bca         db  0x00 ; '.'
                     aTestInvocation:
0000000000005bcb         db         "test invocation", 0                        ; DATA XREF=usage+439
                     aMulticallInvoc:
0000000000005bdb         db         "Multi-call invocation", 0                  ; DATA XREF=usage+487
                     aSha224sum:
0000000000005bf1         db         "sha224sum", 0                              ; DATA XREF=usage+504
                     aSha2Utilities:
0000000000005bfb         db         "sha2 utilities", 0                         ; DATA XREF=usage+516
                     aSha256sum:
0000000000005c0a         db         "sha256sum", 0                              ; DATA XREF=usage+407
                     aSha384sum:
0000000000005c14         db         "sha384sum", 0                              ; DATA XREF=usage+451
                     aSha512sum:
0000000000005c1e         db         "sha512sum", 0                              ; DATA XREF=usage+475
                     aNsOnlineHelpSn:
0000000000005c28         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+586
0000000000005c3f         db  0x47 ; 'G'                                         ; DATA XREF=main+304, usage+614, usage+807, emit_bug_reporting_address+68
0000000000005c40         db  0x4e ; 'N'
0000000000005c41         db  0x55 ; 'U'
0000000000005c42         db  0x20 ; ' '
                     aCoreutils:
0000000000005c43         db         "coreutils", 0                              ; DATA XREF=main+75, main+87, usage+463
0000000000005c4d         db  0x65 ; 'e'                                         ; DATA XREF=usage+653, usage+846
0000000000005c4e         db  0x6e ; 'n'
0000000000005c4f         db  0x5f ; '_'
0000000000005c50         db  0x00 ; '.'
                     aFullDocumentat:
0000000000005c51         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+681, usage+870
                     aUsrlocalsharel:
0000000000005c6c         db         "/usr/local/share/locale", 0                ; DATA XREF=main+68
                     aInvalidWrapSiz:
0000000000005c84         db         "invalid wrap size", 0                      ; DATA XREF=main+174
                     aSimonJosefsson:
0000000000005c96         db         "Simon Josefsson", 0                        ; DATA XREF=main+297
0000000000005ca6         db  0x64 ; 'd'                                         ; DATA XREF=main+123
0000000000005ca7         db  0x69 ; 'i'
0000000000005ca8         db  0x77 ; 'w'
0000000000005ca9         db  0x3a ; ':'
0000000000005caa         db  0x00 ; '.'
                     aExtraOperandS:
0000000000005cab         db         "extra operand %s", 0                       ; DATA XREF=main+1926
0000000000005cbc         db  0x72 ; 'r'                                         ; DATA XREF=main+394
0000000000005cbd         db  0x62 ; 'b'
0000000000005cbe         db  0x00 ; '.'
                     aReadError:
0000000000005cbf         db         "read error", 0                             ; DATA XREF=main+1187, main+1809
                     aWriteError:
0000000000005cca         db         "write error", 0                            ; DATA XREF=main+1511, main+1577, main+1765, main+1858, main+1997, close_stdout+67
                     aInvalidInput:
0000000000005cd6         db         "invalid input", 0                          ; DATA XREF=main+1729
                     aClosingStandar:
0000000000005ce4         db         "closing standard input", 0                 ; DATA XREF=main+1652
                     aDecode:
0000000000005cfb         db         "decode", 0
                     aWrap:
0000000000005d02         db         "wrap", 0
                     aIgnoregarbage:
0000000000005d07         db         "ignore-garbage", 0
                     aHelp:
0000000000005d16         db         "help", 0
                     aVersion:
0000000000005d1b         db         "version", 0
0000000000005d23         align      8
                     aTrySHelpForMor:
0000000000005d28         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000005d4f         align      16
                     aBasedEncodeOrD:
0000000000005d50         db         "Base%d encode or decode FILE, or standard input, to standard output.\n", 0 ; DATA XREF=usage+125
0000000000005d96         align      8
                     aNwithNoFileOrW:
0000000000005d98         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+171
                     aNmandatoryArgu:
0000000000005dd0         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+208
0000000000005e1b         align      32
                     aDDecodeDecodeD:
0000000000005e20         db         "  -d, --decode          decode data\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\n                          Use 0 to disable line wrapping\n\n", 0 ; DATA XREF=usage+245
0000000000005f13         align      8
                     aHelpDisplayThi:
0000000000005f18         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+282
0000000000005f45         align      8
                     aVersionOutputV:
0000000000005f48         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+319
0000000000005f7e         align      128
                     aNtheDataAreEnc:
0000000000005f80         db         "\nThe data are encoded as described for the %s alphabet in RFC 4648.\nWhen decoding, the input may contain newlines in addition to the bytes of\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\nfrom any other non-alphabet bytes in the encod" ; DATA XREF=usage+356
0000000000006080         db         "ed stream.\n", 0
000000000000608c         align      16
                     aHttpswwwgnuorg:
0000000000006090         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+607, usage+707, usage+800, usage+910, emit_bug_reporting_address+61
                     aReportAnyTrans:
00000000000060b8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+951
00000000000060ff         align      256
                     aOrAvailableLoc:
0000000000006100         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+750
                     a831:
0000000000006133         db         "8.31", 0                                   ; DATA XREF=Version
0000000000006138         db  0x00 ; '.'
0000000000006139         db  0x00 ; '.'
000000000000613a         db  0x00 ; '.'
000000000000613b         db  0x00 ; '.'
000000000000613c         db  0x00 ; '.'
000000000000613d         db  0x00 ; '.'
000000000000613e         db  0x00 ; '.'
000000000000613f         db  0x00 ; '.'
                     b64:
0000000000006140         db  0xff ; '.'                                         ; DATA XREF=decode_4+16, isbase64
0000000000006141         db  0xff ; '.'
0000000000006142         db  0xff ; '.'
0000000000006143         db  0xff ; '.'
0000000000006144         db  0xff ; '.'
0000000000006145         db  0xff ; '.'
0000000000006146         db  0xff ; '.'
0000000000006147         db  0xff ; '.'
0000000000006148         db  0xff ; '.'
0000000000006149         db  0xff ; '.'
000000000000614a         db  0xff ; '.'
000000000000614b         db  0xff ; '.'
000000000000614c         db  0xff ; '.'
000000000000614d         db  0xff ; '.'
000000000000614e         db  0xff ; '.'
000000000000614f         db  0xff ; '.'
0000000000006150         db  0xff ; '.'
0000000000006151         db  0xff ; '.'
0000000000006152         db  0xff ; '.'
0000000000006153         db  0xff ; '.'
0000000000006154         db  0xff ; '.'
0000000000006155         db  0xff ; '.'
0000000000006156         db  0xff ; '.'
0000000000006157         db  0xff ; '.'
0000000000006158         db  0xff ; '.'
0000000000006159         db  0xff ; '.'
000000000000615a         db  0xff ; '.'
000000000000615b         db  0xff ; '.'
000000000000615c         db  0xff ; '.'
000000000000615d         db  0xff ; '.'
000000000000615e         db  0xff ; '.'
000000000000615f         db  0xff ; '.'
0000000000006160         db  0xff ; '.'
0000000000006161         db  0xff ; '.'
0000000000006162         db  0xff ; '.'
0000000000006163         db  0xff ; '.'
0000000000006164         db  0xff ; '.'
0000000000006165         db  0xff ; '.'
0000000000006166         db  0xff ; '.'
0000000000006167         db  0xff ; '.'
0000000000006168         db  0xff ; '.'
0000000000006169         db  0xff ; '.'
000000000000616a         db  0xff ; '.'
000000000000616b         db  0x3e ; '>'
000000000000616c         db  0xff ; '.'
000000000000616d         db  0xff ; '.'
000000000000616e         db  0xff ; '.'
000000000000616f         db  0x3f ; '?'
0000000000006170         db  0x34 ; '4'
0000000000006171         db  0x35 ; '5'
0000000000006172         db  0x36 ; '6'
0000000000006173         db  0x37 ; '7'
0000000000006174         db  0x38 ; '8'
0000000000006175         db  0x39 ; '9'
0000000000006176         db  0x3a ; ':'
0000000000006177         db  0x3b ; ';'
0000000000006178         db  0x3c ; '<'
0000000000006179         db  0x3d ; '='
000000000000617a         db  0xff ; '.'
000000000000617b         db  0xff ; '.'
000000000000617c         db  0xff ; '.'
000000000000617d         db  0xff ; '.'
000000000000617e         db  0xff ; '.'
000000000000617f         db  0xff ; '.'
0000000000006180         db  0xff ; '.'
0000000000006181         db  0x00 ; '.'
0000000000006182         db  0x01 ; '.'
0000000000006183         db  0x02 ; '.'
0000000000006184         db  0x03 ; '.'
0000000000006185         db  0x04 ; '.'
0000000000006186         db  0x05 ; '.'
0000000000006187         db  0x06 ; '.'
0000000000006188         db  0x07 ; '.'
0000000000006189         db  0x08 ; '.'
000000000000618a         db  0x09 ; '.'
000000000000618b         db  0x0a ; '.'
000000000000618c         db  0x0b ; '.'
000000000000618d         db  0x0c ; '.'
000000000000618e         db  0x0d ; '.'
000000000000618f         db  0x0e ; '.'
0000000000006190         db  0x0f ; '.'
0000000000006191         db  0x10 ; '.'
0000000000006192         db  0x11 ; '.'
0000000000006193         db  0x12 ; '.'
0000000000006194         db  0x13 ; '.'
0000000000006195         db  0x14 ; '.'
0000000000006196         db  0x15 ; '.'
0000000000006197         db  0x16 ; '.'
0000000000006198         db  0x17 ; '.'
0000000000006199         db  0x18 ; '.'
000000000000619a         db  0x19 ; '.'
000000000000619b         db  0xff ; '.'
000000000000619c         db  0xff ; '.'
000000000000619d         db  0xff ; '.'
000000000000619e         db  0xff ; '.'
000000000000619f         db  0xff ; '.'
00000000000061a0         db  0xff ; '.'
00000000000061a1         db  0x1a ; '.'
00000000000061a2         db  0x1b ; '.'
00000000000061a3         db  0x1c ; '.'
00000000000061a4         db  0x1d ; '.'
00000000000061a5         db  0x1e ; '.'
00000000000061a6         db  0x1f ; '.'
00000000000061a7         db  0x20 ; ' '
00000000000061a8         db  0x21 ; '!'
00000000000061a9         db  0x22 ; '"'
00000000000061aa         db  0x23 ; '#'
00000000000061ab         db  0x24 ; '$'
00000000000061ac         db  0x25 ; '%'
00000000000061ad         db  0x26 ; '&'
00000000000061ae         db  0x27 ; '''
00000000000061af         db  0x28 ; '('
00000000000061b0         db  0x29 ; ')'
00000000000061b1         db  0x2a ; '*'
00000000000061b2         db  0x2b ; '+'
00000000000061b3         db  0x2c ; ','
00000000000061b4         db  0x2d ; '-'
00000000000061b5         db  0x2e ; '.'
00000000000061b6         db  0x2f ; '/'
00000000000061b7         db  0x30 ; '0'
00000000000061b8         db  0x31 ; '1'
00000000000061b9         db  0x32 ; '2'
00000000000061ba         db  0x33 ; '3'
00000000000061bb         db  0xff ; '.'
00000000000061bc         db  0xff ; '.'
00000000000061bd         db  0xff ; '.'
00000000000061be         db  0xff ; '.'
00000000000061bf         db  0xff ; '.'
00000000000061c0         db  0xff ; '.'
00000000000061c1         db  0xff ; '.'
00000000000061c2         db  0xff ; '.'
00000000000061c3         db  0xff ; '.'
00000000000061c4         db  0xff ; '.'
00000000000061c5         db  0xff ; '.'
00000000000061c6         db  0xff ; '.'
00000000000061c7         db  0xff ; '.'
00000000000061c8         db  0xff ; '.'
00000000000061c9         db  0xff ; '.'
00000000000061ca         db  0xff ; '.'
00000000000061cb         db  0xff ; '.'
00000000000061cc         db  0xff ; '.'
00000000000061cd         db  0xff ; '.'
00000000000061ce         db  0xff ; '.'
00000000000061cf         db  0xff ; '.'
00000000000061d0         db  0xff ; '.'
00000000000061d1         db  0xff ; '.'
00000000000061d2         db  0xff ; '.'
00000000000061d3         db  0xff ; '.'
00000000000061d4         db  0xff ; '.'
00000000000061d5         db  0xff ; '.'
00000000000061d6         db  0xff ; '.'
00000000000061d7         db  0xff ; '.'
00000000000061d8         db  0xff ; '.'
00000000000061d9         db  0xff ; '.'
00000000000061da         db  0xff ; '.'
00000000000061db         db  0xff ; '.'
00000000000061dc         db  0xff ; '.'
00000000000061dd         db  0xff ; '.'
00000000000061de         db  0xff ; '.'
00000000000061df         db  0xff ; '.'
00000000000061e0         db  0xff ; '.'
00000000000061e1         db  0xff ; '.'
00000000000061e2         db  0xff ; '.'
00000000000061e3         db  0xff ; '.'
00000000000061e4         db  0xff ; '.'
00000000000061e5         db  0xff ; '.'
00000000000061e6         db  0xff ; '.'
00000000000061e7         db  0xff ; '.'
00000000000061e8         db  0xff ; '.'
00000000000061e9         db  0xff ; '.'
00000000000061ea         db  0xff ; '.'
00000000000061eb         db  0xff ; '.'
00000000000061ec         db  0xff ; '.'
00000000000061ed         db  0xff ; '.'
00000000000061ee         db  0xff ; '.'
00000000000061ef         db  0xff ; '.'
00000000000061f0         db  0xff ; '.'
00000000000061f1         db  0xff ; '.'
00000000000061f2         db  0xff ; '.'
00000000000061f3         db  0xff ; '.'
00000000000061f4         db  0xff ; '.'
00000000000061f5         db  0xff ; '.'
00000000000061f6         db  0xff ; '.'
00000000000061f7         db  0xff ; '.'
00000000000061f8         db  0xff ; '.'
00000000000061f9         db  0xff ; '.'
00000000000061fa         db  0xff ; '.'
00000000000061fb         db  0xff ; '.'
00000000000061fc         db  0xff ; '.'
00000000000061fd         db  0xff ; '.'
00000000000061fe         db  0xff ; '.'
00000000000061ff         db  0xff ; '.'
0000000000006200         db  0xff ; '.'
0000000000006201         db  0xff ; '.'
0000000000006202         db  0xff ; '.'
0000000000006203         db  0xff ; '.'
0000000000006204         db  0xff ; '.'
0000000000006205         db  0xff ; '.'
0000000000006206         db  0xff ; '.'
0000000000006207         db  0xff ; '.'
0000000000006208         db  0xff ; '.'
0000000000006209         db  0xff ; '.'
000000000000620a         db  0xff ; '.'
000000000000620b         db  0xff ; '.'
000000000000620c         db  0xff ; '.'
000000000000620d         db  0xff ; '.'
000000000000620e         db  0xff ; '.'
000000000000620f         db  0xff ; '.'
0000000000006210         db  0xff ; '.'
0000000000006211         db  0xff ; '.'
0000000000006212         db  0xff ; '.'
0000000000006213         db  0xff ; '.'
0000000000006214         db  0xff ; '.'
0000000000006215         db  0xff ; '.'
0000000000006216         db  0xff ; '.'
0000000000006217         db  0xff ; '.'
0000000000006218         db  0xff ; '.'
0000000000006219         db  0xff ; '.'
000000000000621a         db  0xff ; '.'
000000000000621b         db  0xff ; '.'
000000000000621c         db  0xff ; '.'
000000000000621d         db  0xff ; '.'
000000000000621e         db  0xff ; '.'
000000000000621f         db  0xff ; '.'
0000000000006220         db  0xff ; '.'
0000000000006221         db  0xff ; '.'
0000000000006222         db  0xff ; '.'
0000000000006223         db  0xff ; '.'
0000000000006224         db  0xff ; '.'
0000000000006225         db  0xff ; '.'
0000000000006226         db  0xff ; '.'
0000000000006227         db  0xff ; '.'
0000000000006228         db  0xff ; '.'
0000000000006229         db  0xff ; '.'
000000000000622a         db  0xff ; '.'
000000000000622b         db  0xff ; '.'
000000000000622c         db  0xff ; '.'
000000000000622d         db  0xff ; '.'
000000000000622e         db  0xff ; '.'
000000000000622f         db  0xff ; '.'
0000000000006230         db  0xff ; '.'
0000000000006231         db  0xff ; '.'
0000000000006232         db  0xff ; '.'
0000000000006233         db  0xff ; '.'
0000000000006234         db  0xff ; '.'
0000000000006235         db  0xff ; '.'
0000000000006236         db  0xff ; '.'
0000000000006237         db  0xff ; '.'
0000000000006238         db  0xff ; '.'
0000000000006239         db  0xff ; '.'
000000000000623a         db  0xff ; '.'
000000000000623b         db  0xff ; '.'
000000000000623c         db  0xff ; '.'
000000000000623d         db  0xff ; '.'
000000000000623e         db  0xff ; '.'
000000000000623f         db  0xff ; '.'
                     b64c:
0000000000006240         db  0x41 ; 'A'                                         ; DATA XREF=base64_encode+25, base64_encode+303
0000000000006241         db  0x42 ; 'B'
0000000000006242         db  0x43 ; 'C'
0000000000006243         db  0x44 ; 'D'
0000000000006244         db  0x45 ; 'E'
0000000000006245         db  0x46 ; 'F'
0000000000006246         db  0x47 ; 'G'
0000000000006247         db  0x48 ; 'H'
0000000000006248         db  0x49 ; 'I'
0000000000006249         db  0x4a ; 'J'
000000000000624a         db  0x4b ; 'K'
000000000000624b         db  0x4c ; 'L'
000000000000624c         db  0x4d ; 'M'
000000000000624d         db  0x4e ; 'N'
000000000000624e         db  0x4f ; 'O'
000000000000624f         db  0x50 ; 'P'
0000000000006250         db  0x51 ; 'Q'
0000000000006251         db  0x52 ; 'R'
0000000000006252         db  0x53 ; 'S'
0000000000006253         db  0x54 ; 'T'
0000000000006254         db  0x55 ; 'U'
0000000000006255         db  0x56 ; 'V'
0000000000006256         db  0x57 ; 'W'
0000000000006257         db  0x58 ; 'X'
0000000000006258         db  0x59 ; 'Y'
0000000000006259         db  0x5a ; 'Z'
000000000000625a         db  0x61 ; 'a'
000000000000625b         db  0x62 ; 'b'
000000000000625c         db  0x63 ; 'c'
000000000000625d         db  0x64 ; 'd'
000000000000625e         db  0x65 ; 'e'
000000000000625f         db  0x66 ; 'f'
0000000000006260         db  0x67 ; 'g'
0000000000006261         db  0x68 ; 'h'
0000000000006262         db  0x69 ; 'i'
0000000000006263         db  0x6a ; 'j'
0000000000006264         db  0x6b ; 'k'
0000000000006265         db  0x6c ; 'l'
0000000000006266         db  0x6d ; 'm'
0000000000006267         db  0x6e ; 'n'
0000000000006268         db  0x6f ; 'o'
0000000000006269         db  0x70 ; 'p'
000000000000626a         db  0x71 ; 'q'
000000000000626b         db  0x72 ; 'r'
000000000000626c         db  0x73 ; 's'
000000000000626d         db  0x74 ; 't'
000000000000626e         db  0x75 ; 'u'
000000000000626f         db  0x76 ; 'v'
0000000000006270         db  0x77 ; 'w'
0000000000006271         db  0x78 ; 'x'
0000000000006272         db  0x79 ; 'y'
0000000000006273         db  0x7a ; 'z'
0000000000006274         db  0x30 ; '0'
0000000000006275         db  0x31 ; '1'
0000000000006276         db  0x32 ; '2'
0000000000006277         db  0x33 ; '3'
0000000000006278         db  0x34 ; '4'
0000000000006279         db  0x35 ; '5'
000000000000627a         db  0x36 ; '6'
000000000000627b         db  0x37 ; '7'
000000000000627c         db  0x38 ; '8'
000000000000627d         db  0x39 ; '9'
000000000000627e         db  0x2b ; '+'
000000000000627f         db  0x2f ; '/'
                     aSS:
0000000000006280         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108, xnumtoumax+125
0000000000006287         align      8
                     aANullArgv0WasP:
0000000000006288         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000062c0         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000062c8         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000062c9         db  0x74 ; 't'
00000000000062ca         db  0x2d ; '-'                                         ; DATA XREF=main+365, main+463, main+1626
00000000000062cb         db  0x00 ; '.'
00000000000062cc         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000062cd         db  0x80 ; '.'
00000000000062ce         db  0x98 ; '.'
00000000000062cf         db  0x00 ; '.'
00000000000062d0         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000062d1         db  0x80 ; '.'
00000000000062d2         db  0x99 ; '.'
00000000000062d3         db  0x00 ; '.'
00000000000062d4         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000062d5         db  0x07 ; '.'
00000000000062d6         db  0x65 ; 'e'
00000000000062d7         db  0x00 ; '.'
00000000000062d8         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000062d9         db  0xaf ; '.'
00000000000062da         db  0x00 ; '.'
00000000000062db         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_35d0+1451, sub_35d0+1493, sub_35d0+2429
00000000000062dc         db  0x00 ; '.'
00000000000062dd         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_35d0+132, sub_35d0+1338, sub_35d0+1670, sub_35d0+1697, sub_35d0+2352
00000000000062de         db  0x00 ; '.'
00000000000062df         db  0x60 ; '`'                                         ; DATA XREF=sub_35d0+1627, sub_35d0+1654
00000000000062e0         db  0x00 ; '.'
                     aLiteral:
00000000000062e1         db         "literal", 0
                     aShell:
00000000000062e9         db         "shell", 0
                     aShellalways:
00000000000062ef         db         "shell-always", 0
00000000000062fc         db  0x73 ; 's'
00000000000062fd         db  0x68 ; 'h'
00000000000062fe         db  0x65 ; 'e'
00000000000062ff         db  0x6c ; 'l'
0000000000006300         db  0x6c ; 'l'
0000000000006301         db  0x2d ; '-'
                     aEscape:
0000000000006302         db         "escape", 0
                     aShellescapealw:
0000000000006309         db         "shell-escape-always", 0
000000000000631d         db  0x63 ; 'c'
000000000000631e         db  0x00 ; '.'
                     aCmaybe:
000000000000631f         db         "c-maybe", 0
                     aClocale:
0000000000006327         db         "clocale", 0
000000000000632f         align      64
                     switch_table_6340:        // switch_table
0000000000006340         dd         quotearg_buffer_restyled.loc_3cca-switch_table_6340, quotearg_buffer_restyled.loc_2f23-switch_table_6340, quotearg_buffer_restyled.loc_3ef8-switch_table_6340, quotearg_buffer_restyled.loc_3d04-switch_table_6340 ; switch table used at 0x2f21 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000006350         dd         quotearg_buffer_restyled.loc_3af4-switch_table_6340, quotearg_buffer_restyled.loc_3b50-switch_table_6340, quotearg_buffer_restyled.loc_3ba5-switch_table_6340, quotearg_buffer_restyled.loc_3bea-switch_table_6340
0000000000006360         dd         3 dup (quotearg_buffer_restyled.loc_3c24-switch_table_6340)
000000000000636c         db  0x34 ; '4'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000636d         db  0xcf ; '.'
000000000000636e         db  0xff ; '.'
000000000000636f         db  0xff ; '.'
0000000000006370         db  0x1c ; '.'
0000000000006371         db  0xd0 ; '.'
0000000000006372         db  0xff ; '.'
0000000000006373         db  0xff ; '.'
0000000000006374         db  0x1c ; '.'
0000000000006375         db  0xd0 ; '.'
0000000000006376         db  0xff ; '.'
0000000000006377         db  0xff ; '.'
0000000000006378         db  0x1c ; '.'
0000000000006379         db  0xd0 ; '.'
000000000000637a         db  0xff ; '.'
000000000000637b         db  0xff ; '.'
000000000000637c         db  0x1c ; '.'
000000000000637d         db  0xd0 ; '.'
000000000000637e         db  0xff ; '.'
000000000000637f         db  0xff ; '.'
0000000000006380         db  0x1c ; '.'
0000000000006381         db  0xd0 ; '.'
0000000000006382         db  0xff ; '.'
0000000000006383         db  0xff ; '.'
0000000000006384         db  0x1c ; '.'
0000000000006385         db  0xd0 ; '.'
0000000000006386         db  0xff ; '.'
0000000000006387         db  0xff ; '.'
0000000000006388         db  0x74 ; 't'
0000000000006389         db  0xcf ; '.'
000000000000638a         db  0xff ; '.'
000000000000638b         db  0xff ; '.'
000000000000638c         db  0x7c ; '|'
000000000000638d         db  0xce ; '.'
000000000000638e         db  0xff ; '.'
000000000000638f         db  0xff ; '.'
0000000000006390         db  0x3c ; '<'
0000000000006391         db  0xce ; '.'
0000000000006392         db  0xff ; '.'
0000000000006393         db  0xff ; '.'
0000000000006394         db  0x04 ; '.'
0000000000006395         db  0xd0 ; '.'
0000000000006396         db  0xff ; '.'
0000000000006397         db  0xff ; '.'
0000000000006398         db  0xf4 ; '.'
0000000000006399         db  0xcf ; '.'
000000000000639a         db  0xff ; '.'
000000000000639b         db  0xff ; '.'
000000000000639c         db  0xe4 ; '.'
000000000000639d         db  0xcf ; '.'
000000000000639e         db  0xff ; '.'
000000000000639f         db  0xff ; '.'
00000000000063a0         db  0xd4 ; '.'
00000000000063a1         db  0xcf ; '.'
00000000000063a2         db  0xff ; '.'
00000000000063a3         db  0xff ; '.'
00000000000063a4         db  0x1c ; '.'
00000000000063a5         db  0xd0 ; '.'
00000000000063a6         db  0xff ; '.'
00000000000063a7         db  0xff ; '.'
00000000000063a8         db  0x1c ; '.'
00000000000063a9         db  0xd0 ; '.'
00000000000063aa         db  0xff ; '.'
00000000000063ab         db  0xff ; '.'
00000000000063ac         db  0x1c ; '.'
00000000000063ad         db  0xd0 ; '.'
00000000000063ae         db  0xff ; '.'
00000000000063af         db  0xff ; '.'
00000000000063b0         db  0x1c ; '.'
00000000000063b1         db  0xd0 ; '.'
00000000000063b2         db  0xff ; '.'
00000000000063b3         db  0xff ; '.'
00000000000063b4         db  0x1c ; '.'
00000000000063b5         db  0xd0 ; '.'
00000000000063b6         db  0xff ; '.'
00000000000063b7         db  0xff ; '.'
00000000000063b8         db  0x1c ; '.'
00000000000063b9         db  0xd0 ; '.'
00000000000063ba         db  0xff ; '.'
00000000000063bb         db  0xff ; '.'
00000000000063bc         db  0x1c ; '.'
00000000000063bd         db  0xd0 ; '.'
00000000000063be         db  0xff ; '.'
00000000000063bf         db  0xff ; '.'
00000000000063c0         db  0x1c ; '.'
00000000000063c1         db  0xd0 ; '.'
00000000000063c2         db  0xff ; '.'
00000000000063c3         db  0xff ; '.'
00000000000063c4         db  0x1c ; '.'
00000000000063c5         db  0xd0 ; '.'
00000000000063c6         db  0xff ; '.'
00000000000063c7         db  0xff ; '.'
00000000000063c8         db  0x1c ; '.'
00000000000063c9         db  0xd0 ; '.'
00000000000063ca         db  0xff ; '.'
00000000000063cb         db  0xff ; '.'
00000000000063cc         db  0x1c ; '.'
00000000000063cd         db  0xd0 ; '.'
00000000000063ce         db  0xff ; '.'
00000000000063cf         db  0xff ; '.'
00000000000063d0         db  0x1c ; '.'
00000000000063d1         db  0xd0 ; '.'
00000000000063d2         db  0xff ; '.'
00000000000063d3         db  0xff ; '.'
00000000000063d4         db  0x1c ; '.'
00000000000063d5         db  0xd0 ; '.'
00000000000063d6         db  0xff ; '.'
00000000000063d7         db  0xff ; '.'
00000000000063d8         db  0x1c ; '.'
00000000000063d9         db  0xd0 ; '.'
00000000000063da         db  0xff ; '.'
00000000000063db         db  0xff ; '.'
00000000000063dc         db  0x1c ; '.'
00000000000063dd         db  0xd0 ; '.'
00000000000063de         db  0xff ; '.'
00000000000063df         db  0xff ; '.'
00000000000063e0         db  0x1c ; '.'
00000000000063e1         db  0xd0 ; '.'
00000000000063e2         db  0xff ; '.'
00000000000063e3         db  0xff ; '.'
00000000000063e4         db  0x1c ; '.'
00000000000063e5         db  0xd0 ; '.'
00000000000063e6         db  0xff ; '.'
00000000000063e7         db  0xff ; '.'
00000000000063e8         db  0x1c ; '.'
00000000000063e9         db  0xd0 ; '.'
00000000000063ea         db  0xff ; '.'
00000000000063eb         db  0xff ; '.'
00000000000063ec         db  0xc4 ; '.'
00000000000063ed         db  0xcf ; '.'
00000000000063ee         db  0xff ; '.'
00000000000063ef         db  0xff ; '.'
00000000000063f0         db  0xb4 ; '.'
00000000000063f1         db  0xcf ; '.'
00000000000063f2         db  0xff ; '.'
00000000000063f3         db  0xff ; '.'
00000000000063f4         db  0xb4 ; '.'
00000000000063f5         db  0xcf ; '.'
00000000000063f6         db  0xff ; '.'
00000000000063f7         db  0xff ; '.'
00000000000063f8         db  0x84 ; '.'
00000000000063f9         db  0xcf ; '.'
00000000000063fa         db  0xff ; '.'
00000000000063fb         db  0xff ; '.'
00000000000063fc         db  0xb4 ; '.'
00000000000063fd         db  0xcf ; '.'
00000000000063fe         db  0xff ; '.'
00000000000063ff         db  0xff ; '.'
0000000000006400         db  0x5c ; '\'
0000000000006401         db  0xcf ; '.'
0000000000006402         db  0xff ; '.'
0000000000006403         db  0xff ; '.'
0000000000006404         db  0xb4 ; '.'
0000000000006405         db  0xcf ; '.'
0000000000006406         db  0xff ; '.'
0000000000006407         db  0xff ; '.'
0000000000006408         db  0x17 ; '.'
0000000000006409         db  0xce ; '.'
000000000000640a         db  0xff ; '.'
000000000000640b         db  0xff ; '.'
000000000000640c         db  0xb4 ; '.'
000000000000640d         db  0xcf ; '.'
000000000000640e         db  0xff ; '.'
000000000000640f         db  0xff ; '.'
0000000000006410         db  0xb4 ; '.'
0000000000006411         db  0xcf ; '.'
0000000000006412         db  0xff ; '.'
0000000000006413         db  0xff ; '.'
0000000000006414         db  0xb4 ; '.'
0000000000006415         db  0xcf ; '.'
0000000000006416         db  0xff ; '.'
0000000000006417         db  0xff ; '.'
0000000000006418         db  0x5c ; '\'
0000000000006419         db  0xcf ; '.'
000000000000641a         db  0xff ; '.'
000000000000641b         db  0xff ; '.'
000000000000641c         db  0x5c ; '\'
000000000000641d         db  0xcf ; '.'
000000000000641e         db  0xff ; '.'
000000000000641f         db  0xff ; '.'
0000000000006420         db  0x5c ; '\'
0000000000006421         db  0xcf ; '.'
0000000000006422         db  0xff ; '.'
0000000000006423         db  0xff ; '.'
0000000000006424         db  0x5c ; '\'
0000000000006425         db  0xcf ; '.'
0000000000006426         db  0xff ; '.'
0000000000006427         db  0xff ; '.'
0000000000006428         db  0x5c ; '\'
0000000000006429         db  0xcf ; '.'
000000000000642a         db  0xff ; '.'
000000000000642b         db  0xff ; '.'
000000000000642c         db  0x5c ; '\'
000000000000642d         db  0xcf ; '.'
000000000000642e         db  0xff ; '.'
000000000000642f         db  0xff ; '.'
0000000000006430         db  0x5c ; '\'
0000000000006431         db  0xcf ; '.'
0000000000006432         db  0xff ; '.'
0000000000006433         db  0xff ; '.'
0000000000006434         db  0x5c ; '\'
0000000000006435         db  0xcf ; '.'
0000000000006436         db  0xff ; '.'
0000000000006437         db  0xff ; '.'
0000000000006438         db  0x5c ; '\'
0000000000006439         db  0xcf ; '.'
000000000000643a         db  0xff ; '.'
000000000000643b         db  0xff ; '.'
000000000000643c         db  0x5c ; '\'
000000000000643d         db  0xcf ; '.'
000000000000643e         db  0xff ; '.'
000000000000643f         db  0xff ; '.'
0000000000006440         db  0x5c ; '\'
0000000000006441         db  0xcf ; '.'
0000000000006442         db  0xff ; '.'
0000000000006443         db  0xff ; '.'
0000000000006444         db  0x5c ; '\'
0000000000006445         db  0xcf ; '.'
0000000000006446         db  0xff ; '.'
0000000000006447         db  0xff ; '.'
0000000000006448         db  0x5c ; '\'
0000000000006449         db  0xcf ; '.'
000000000000644a         db  0xff ; '.'
000000000000644b         db  0xff ; '.'
000000000000644c         db  0x5c ; '\'
000000000000644d         db  0xcf ; '.'
000000000000644e         db  0xff ; '.'
000000000000644f         db  0xff ; '.'
0000000000006450         db  0x5c ; '\'
0000000000006451         db  0xcf ; '.'
0000000000006452         db  0xff ; '.'
0000000000006453         db  0xff ; '.'
0000000000006454         db  0x5c ; '\'
0000000000006455         db  0xcf ; '.'
0000000000006456         db  0xff ; '.'
0000000000006457         db  0xff ; '.'
0000000000006458         db  0xb4 ; '.'
0000000000006459         db  0xcf ; '.'
000000000000645a         db  0xff ; '.'
000000000000645b         db  0xff ; '.'
000000000000645c         db  0xb4 ; '.'
000000000000645d         db  0xcf ; '.'
000000000000645e         db  0xff ; '.'
000000000000645f         db  0xff ; '.'
0000000000006460         db  0xb4 ; '.'
0000000000006461         db  0xcf ; '.'
0000000000006462         db  0xff ; '.'
0000000000006463         db  0xff ; '.'
0000000000006464         db  0xb4 ; '.'
0000000000006465         db  0xcf ; '.'
0000000000006466         db  0xff ; '.'
0000000000006467         db  0xff ; '.'
0000000000006468         db  0xe7 ; '.'
0000000000006469         db  0xcd ; '.'
000000000000646a         db  0xff ; '.'
000000000000646b         db  0xff ; '.'
000000000000646c         db  0x1c ; '.'
000000000000646d         db  0xd0 ; '.'
000000000000646e         db  0xff ; '.'
000000000000646f         db  0xff ; '.'
0000000000006470         db  0x5c ; '\'
0000000000006471         db  0xcf ; '.'
0000000000006472         db  0xff ; '.'
0000000000006473         db  0xff ; '.'
0000000000006474         db  0x5c ; '\'
0000000000006475         db  0xcf ; '.'
0000000000006476         db  0xff ; '.'
0000000000006477         db  0xff ; '.'
0000000000006478         db  0x5c ; '\'
0000000000006479         db  0xcf ; '.'
000000000000647a         db  0xff ; '.'
000000000000647b         db  0xff ; '.'
000000000000647c         db  0x5c ; '\'
000000000000647d         db  0xcf ; '.'
000000000000647e         db  0xff ; '.'
000000000000647f         db  0xff ; '.'
0000000000006480         db  0x5c ; '\'
0000000000006481         db  0xcf ; '.'
0000000000006482         db  0xff ; '.'
0000000000006483         db  0xff ; '.'
0000000000006484         db  0x5c ; '\'
0000000000006485         db  0xcf ; '.'
0000000000006486         db  0xff ; '.'
0000000000006487         db  0xff ; '.'
0000000000006488         db  0x5c ; '\'
0000000000006489         db  0xcf ; '.'
000000000000648a         db  0xff ; '.'
000000000000648b         db  0xff ; '.'
000000000000648c         db  0x5c ; '\'
000000000000648d         db  0xcf ; '.'
000000000000648e         db  0xff ; '.'
000000000000648f         db  0xff ; '.'
0000000000006490         db  0x5c ; '\'
0000000000006491         db  0xcf ; '.'
0000000000006492         db  0xff ; '.'
0000000000006493         db  0xff ; '.'
0000000000006494         db  0x5c ; '\'
0000000000006495         db  0xcf ; '.'
0000000000006496         db  0xff ; '.'
0000000000006497         db  0xff ; '.'
0000000000006498         db  0x5c ; '\'
0000000000006499         db  0xcf ; '.'
000000000000649a         db  0xff ; '.'
000000000000649b         db  0xff ; '.'
000000000000649c         db  0x5c ; '\'
000000000000649d         db  0xcf ; '.'
000000000000649e         db  0xff ; '.'
000000000000649f         db  0xff ; '.'
00000000000064a0         db  0x5c ; '\'
00000000000064a1         db  0xcf ; '.'
00000000000064a2         db  0xff ; '.'
00000000000064a3         db  0xff ; '.'
00000000000064a4         db  0x5c ; '\'
00000000000064a5         db  0xcf ; '.'
00000000000064a6         db  0xff ; '.'
00000000000064a7         db  0xff ; '.'
00000000000064a8         db  0x5c ; '\'
00000000000064a9         db  0xcf ; '.'
00000000000064aa         db  0xff ; '.'
00000000000064ab         db  0xff ; '.'
00000000000064ac         db  0x5c ; '\'
00000000000064ad         db  0xcf ; '.'
00000000000064ae         db  0xff ; '.'
00000000000064af         db  0xff ; '.'
00000000000064b0         db  0x5c ; '\'
00000000000064b1         db  0xcf ; '.'
00000000000064b2         db  0xff ; '.'
00000000000064b3         db  0xff ; '.'
00000000000064b4         db  0x5c ; '\'
00000000000064b5         db  0xcf ; '.'
00000000000064b6         db  0xff ; '.'
00000000000064b7         db  0xff ; '.'
00000000000064b8         db  0x5c ; '\'
00000000000064b9         db  0xcf ; '.'
00000000000064ba         db  0xff ; '.'
00000000000064bb         db  0xff ; '.'
00000000000064bc         db  0x5c ; '\'
00000000000064bd         db  0xcf ; '.'
00000000000064be         db  0xff ; '.'
00000000000064bf         db  0xff ; '.'
00000000000064c0         db  0x5c ; '\'
00000000000064c1         db  0xcf ; '.'
00000000000064c2         db  0xff ; '.'
00000000000064c3         db  0xff ; '.'
00000000000064c4         db  0x5c ; '\'
00000000000064c5         db  0xcf ; '.'
00000000000064c6         db  0xff ; '.'
00000000000064c7         db  0xff ; '.'
00000000000064c8         db  0x5c ; '\'
00000000000064c9         db  0xcf ; '.'
00000000000064ca         db  0xff ; '.'
00000000000064cb         db  0xff ; '.'
00000000000064cc         db  0x5c ; '\'
00000000000064cd         db  0xcf ; '.'
00000000000064ce         db  0xff ; '.'
00000000000064cf         db  0xff ; '.'
00000000000064d0         db  0x5c ; '\'
00000000000064d1         db  0xcf ; '.'
00000000000064d2         db  0xff ; '.'
00000000000064d3         db  0xff ; '.'
00000000000064d4         db  0x5c ; '\'
00000000000064d5         db  0xcf ; '.'
00000000000064d6         db  0xff ; '.'
00000000000064d7         db  0xff ; '.'
00000000000064d8         db  0xb4 ; '.'
00000000000064d9         db  0xcf ; '.'
00000000000064da         db  0xff ; '.'
00000000000064db         db  0xff ; '.'
00000000000064dc         db  0x8c ; '.'
00000000000064dd         db  0xce ; '.'
00000000000064de         db  0xff ; '.'
00000000000064df         db  0xff ; '.'
00000000000064e0         db  0x5c ; '\'
00000000000064e1         db  0xcf ; '.'
00000000000064e2         db  0xff ; '.'
00000000000064e3         db  0xff ; '.'
00000000000064e4         db  0xb4 ; '.'
00000000000064e5         db  0xcf ; '.'
00000000000064e6         db  0xff ; '.'
00000000000064e7         db  0xff ; '.'
00000000000064e8         db  0x5c ; '\'
00000000000064e9         db  0xcf ; '.'
00000000000064ea         db  0xff ; '.'
00000000000064eb         db  0xff ; '.'
00000000000064ec         db  0xb4 ; '.'
00000000000064ed         db  0xcf ; '.'
00000000000064ee         db  0xff ; '.'
00000000000064ef         db  0xff ; '.'
00000000000064f0         db  0x5c ; '\'
00000000000064f1         db  0xcf ; '.'
00000000000064f2         db  0xff ; '.'
00000000000064f3         db  0xff ; '.'
00000000000064f4         db  0x5c ; '\'
00000000000064f5         db  0xcf ; '.'
00000000000064f6         db  0xff ; '.'
00000000000064f7         db  0xff ; '.'
00000000000064f8         db  0x5c ; '\'
00000000000064f9         db  0xcf ; '.'
00000000000064fa         db  0xff ; '.'
00000000000064fb         db  0xff ; '.'
00000000000064fc         db  0x5c ; '\'
00000000000064fd         db  0xcf ; '.'
00000000000064fe         db  0xff ; '.'
00000000000064ff         db  0xff ; '.'
0000000000006500         db  0x5c ; '\'
0000000000006501         db  0xcf ; '.'
0000000000006502         db  0xff ; '.'
0000000000006503         db  0xff ; '.'
0000000000006504         db  0x5c ; '\'
0000000000006505         db  0xcf ; '.'
0000000000006506         db  0xff ; '.'
0000000000006507         db  0xff ; '.'
0000000000006508         db  0x5c ; '\'
0000000000006509         db  0xcf ; '.'
000000000000650a         db  0xff ; '.'
000000000000650b         db  0xff ; '.'
000000000000650c         db  0x5c ; '\'
000000000000650d         db  0xcf ; '.'
000000000000650e         db  0xff ; '.'
000000000000650f         db  0xff ; '.'
0000000000006510         db  0x5c ; '\'
0000000000006511         db  0xcf ; '.'
0000000000006512         db  0xff ; '.'
0000000000006513         db  0xff ; '.'
0000000000006514         db  0x5c ; '\'
0000000000006515         db  0xcf ; '.'
0000000000006516         db  0xff ; '.'
0000000000006517         db  0xff ; '.'
0000000000006518         db  0x5c ; '\'
0000000000006519         db  0xcf ; '.'
000000000000651a         db  0xff ; '.'
000000000000651b         db  0xff ; '.'
000000000000651c         db  0x5c ; '\'
000000000000651d         db  0xcf ; '.'
000000000000651e         db  0xff ; '.'
000000000000651f         db  0xff ; '.'
0000000000006520         db  0x5c ; '\'
0000000000006521         db  0xcf ; '.'
0000000000006522         db  0xff ; '.'
0000000000006523         db  0xff ; '.'
0000000000006524         db  0x5c ; '\'
0000000000006525         db  0xcf ; '.'
0000000000006526         db  0xff ; '.'
0000000000006527         db  0xff ; '.'
0000000000006528         db  0x5c ; '\'
0000000000006529         db  0xcf ; '.'
000000000000652a         db  0xff ; '.'
000000000000652b         db  0xff ; '.'
000000000000652c         db  0x5c ; '\'
000000000000652d         db  0xcf ; '.'
000000000000652e         db  0xff ; '.'
000000000000652f         db  0xff ; '.'
0000000000006530         db  0x5c ; '\'
0000000000006531         db  0xcf ; '.'
0000000000006532         db  0xff ; '.'
0000000000006533         db  0xff ; '.'
0000000000006534         db  0x5c ; '\'
0000000000006535         db  0xcf ; '.'
0000000000006536         db  0xff ; '.'
0000000000006537         db  0xff ; '.'
0000000000006538         db  0x5c ; '\'
0000000000006539         db  0xcf ; '.'
000000000000653a         db  0xff ; '.'
000000000000653b         db  0xff ; '.'
000000000000653c         db  0x5c ; '\'
000000000000653d         db  0xcf ; '.'
000000000000653e         db  0xff ; '.'
000000000000653f         db  0xff ; '.'
0000000000006540         db  0x5c ; '\'
0000000000006541         db  0xcf ; '.'
0000000000006542         db  0xff ; '.'
0000000000006543         db  0xff ; '.'
0000000000006544         db  0x5c ; '\'
0000000000006545         db  0xcf ; '.'
0000000000006546         db  0xff ; '.'
0000000000006547         db  0xff ; '.'
0000000000006548         db  0x5c ; '\'
0000000000006549         db  0xcf ; '.'
000000000000654a         db  0xff ; '.'
000000000000654b         db  0xff ; '.'
000000000000654c         db  0x5c ; '\'
000000000000654d         db  0xcf ; '.'
000000000000654e         db  0xff ; '.'
000000000000654f         db  0xff ; '.'
0000000000006550         db  0x5c ; '\'
0000000000006551         db  0xcf ; '.'
0000000000006552         db  0xff ; '.'
0000000000006553         db  0xff ; '.'
0000000000006554         db  0x5c ; '\'
0000000000006555         db  0xcf ; '.'
0000000000006556         db  0xff ; '.'
0000000000006557         db  0xff ; '.'
0000000000006558         db  0x17 ; '.'
0000000000006559         db  0xcd ; '.'
000000000000655a         db  0xff ; '.'
000000000000655b         db  0xff ; '.'
000000000000655c         db  0xb4 ; '.'
000000000000655d         db  0xcf ; '.'
000000000000655e         db  0xff ; '.'
000000000000655f         db  0xff ; '.'
0000000000006560         db  0x17 ; '.'
0000000000006561         db  0xcd ; '.'
0000000000006562         db  0xff ; '.'
0000000000006563         db  0xff ; '.'
0000000000006564         db  0x84 ; '.'
0000000000006565         db  0xcf ; '.'
0000000000006566         db  0xff ; '.'
0000000000006567         db  0xff ; '.'
0000000000006568         db  0x08 ; '.'                                         ; DATA XREF=sub_3370+137
0000000000006569         db  0xcf ; '.'
000000000000656a         db  0xff ; '.'
000000000000656b         db  0xff ; '.'
000000000000656c         db  0x18 ; '.'
000000000000656d         db  0xce ; '.'
000000000000656e         db  0xff ; '.'
000000000000656f         db  0xff ; '.'
0000000000006570         db  0x18 ; '.'
0000000000006571         db  0xce ; '.'
0000000000006572         db  0xff ; '.'
0000000000006573         db  0xff ; '.'
0000000000006574         db  0x18 ; '.'
0000000000006575         db  0xce ; '.'
0000000000006576         db  0xff ; '.'
0000000000006577         db  0xff ; '.'
0000000000006578         db  0x18 ; '.'
0000000000006579         db  0xce ; '.'
000000000000657a         db  0xff ; '.'
000000000000657b         db  0xff ; '.'
000000000000657c         db  0x18 ; '.'
000000000000657d         db  0xce ; '.'
000000000000657e         db  0xff ; '.'
000000000000657f         db  0xff ; '.'
0000000000006580         db  0x18 ; '.'
0000000000006581         db  0xce ; '.'
0000000000006582         db  0xff ; '.'
0000000000006583         db  0xff ; '.'
0000000000006584         db  0xf8 ; '.'
0000000000006585         db  0xce ; '.'
0000000000006586         db  0xff ; '.'
0000000000006587         db  0xff ; '.'
0000000000006588         db  0x48 ; 'H'
0000000000006589         db  0xd0 ; '.'
000000000000658a         db  0xff ; '.'
000000000000658b         db  0xff ; '.'
000000000000658c         db  0x30 ; '0'
000000000000658d         db  0xd0 ; '.'
000000000000658e         db  0xff ; '.'
000000000000658f         db  0xff ; '.'
0000000000006590         db  0xe0 ; '.'
0000000000006591         db  0xce ; '.'
0000000000006592         db  0xff ; '.'
0000000000006593         db  0xff ; '.'
0000000000006594         db  0x20 ; ' '
0000000000006595         db  0xd0 ; '.'
0000000000006596         db  0xff ; '.'
0000000000006597         db  0xff ; '.'
0000000000006598         db  0xc8 ; '.'
0000000000006599         db  0xce ; '.'
000000000000659a         db  0xff ; '.'
000000000000659b         db  0xff ; '.'
000000000000659c         db  0x08 ; '.'
000000000000659d         db  0xd0 ; '.'
000000000000659e         db  0xff ; '.'
000000000000659f         db  0xff ; '.'
00000000000065a0         db  0x18 ; '.'
00000000000065a1         db  0xce ; '.'
00000000000065a2         db  0xff ; '.'
00000000000065a3         db  0xff ; '.'
00000000000065a4         db  0x18 ; '.'
00000000000065a5         db  0xce ; '.'
00000000000065a6         db  0xff ; '.'
00000000000065a7         db  0xff ; '.'
00000000000065a8         db  0x18 ; '.'
00000000000065a9         db  0xce ; '.'
00000000000065aa         db  0xff ; '.'
00000000000065ab         db  0xff ; '.'
00000000000065ac         db  0x18 ; '.'
00000000000065ad         db  0xce ; '.'
00000000000065ae         db  0xff ; '.'
00000000000065af         db  0xff ; '.'
00000000000065b0         db  0x18 ; '.'
00000000000065b1         db  0xce ; '.'
00000000000065b2         db  0xff ; '.'
00000000000065b3         db  0xff ; '.'
00000000000065b4         db  0x18 ; '.'
00000000000065b5         db  0xce ; '.'
00000000000065b6         db  0xff ; '.'
00000000000065b7         db  0xff ; '.'
00000000000065b8         db  0x18 ; '.'
00000000000065b9         db  0xce ; '.'
00000000000065ba         db  0xff ; '.'
00000000000065bb         db  0xff ; '.'
00000000000065bc         db  0x18 ; '.'
00000000000065bd         db  0xce ; '.'
00000000000065be         db  0xff ; '.'
00000000000065bf         db  0xff ; '.'
00000000000065c0         db  0x18 ; '.'
00000000000065c1         db  0xce ; '.'
00000000000065c2         db  0xff ; '.'
00000000000065c3         db  0xff ; '.'
00000000000065c4         db  0x18 ; '.'
00000000000065c5         db  0xce ; '.'
00000000000065c6         db  0xff ; '.'
00000000000065c7         db  0xff ; '.'
00000000000065c8         db  0x18 ; '.'
00000000000065c9         db  0xce ; '.'
00000000000065ca         db  0xff ; '.'
00000000000065cb         db  0xff ; '.'
00000000000065cc         db  0x18 ; '.'
00000000000065cd         db  0xce ; '.'
00000000000065ce         db  0xff ; '.'
00000000000065cf         db  0xff ; '.'
00000000000065d0         db  0x18 ; '.'
00000000000065d1         db  0xce ; '.'
00000000000065d2         db  0xff ; '.'
00000000000065d3         db  0xff ; '.'
00000000000065d4         db  0x18 ; '.'
00000000000065d5         db  0xce ; '.'
00000000000065d6         db  0xff ; '.'
00000000000065d7         db  0xff ; '.'
00000000000065d8         db  0x18 ; '.'
00000000000065d9         db  0xce ; '.'
00000000000065da         db  0xff ; '.'
00000000000065db         db  0xff ; '.'
00000000000065dc         db  0x18 ; '.'
00000000000065dd         db  0xce ; '.'
00000000000065de         db  0xff ; '.'
00000000000065df         db  0xff ; '.'
00000000000065e0         db  0x18 ; '.'
00000000000065e1         db  0xce ; '.'
00000000000065e2         db  0xff ; '.'
00000000000065e3         db  0xff ; '.'
00000000000065e4         db  0x18 ; '.'
00000000000065e5         db  0xce ; '.'
00000000000065e6         db  0xff ; '.'
00000000000065e7         db  0xff ; '.'
00000000000065e8         db  0xf0 ; '.'
00000000000065e9         db  0xcf ; '.'
00000000000065ea         db  0xff ; '.'
00000000000065eb         db  0xff ; '.'
00000000000065ec         db  0xd8 ; '.'
00000000000065ed         db  0xcf ; '.'
00000000000065ee         db  0xff ; '.'
00000000000065ef         db  0xff ; '.'
00000000000065f0         db  0xd8 ; '.'
00000000000065f1         db  0xcf ; '.'
00000000000065f2         db  0xff ; '.'
00000000000065f3         db  0xff ; '.'
00000000000065f4         db  0xc0 ; '.'
00000000000065f5         db  0xcf ; '.'
00000000000065f6         db  0xff ; '.'
00000000000065f7         db  0xff ; '.'
00000000000065f8         db  0xd8 ; '.'
00000000000065f9         db  0xcf ; '.'
00000000000065fa         db  0xff ; '.'
00000000000065fb         db  0xff ; '.'
00000000000065fc         db  0xa8 ; '.'
00000000000065fd         db  0xcf ; '.'
00000000000065fe         db  0xff ; '.'
00000000000065ff         db  0xff ; '.'
0000000000006600         db  0xd8 ; '.'
0000000000006601         db  0xcf ; '.'
0000000000006602         db  0xff ; '.'
0000000000006603         db  0xff ; '.'
0000000000006604         db  0x18 ; '.'
0000000000006605         db  0xcc ; '.'
0000000000006606         db  0xff ; '.'
0000000000006607         db  0xff ; '.'
0000000000006608         db  0xd8 ; '.'
0000000000006609         db  0xcf ; '.'
000000000000660a         db  0xff ; '.'
000000000000660b         db  0xff ; '.'
000000000000660c         db  0xd8 ; '.'
000000000000660d         db  0xcf ; '.'
000000000000660e         db  0xff ; '.'
000000000000660f         db  0xff ; '.'
0000000000006610         db  0xd8 ; '.'
0000000000006611         db  0xcf ; '.'
0000000000006612         db  0xff ; '.'
0000000000006613         db  0xff ; '.'
0000000000006614         db  0xa8 ; '.'
0000000000006615         db  0xcf ; '.'
0000000000006616         db  0xff ; '.'
0000000000006617         db  0xff ; '.'
0000000000006618         db  0xa8 ; '.'
0000000000006619         db  0xcf ; '.'
000000000000661a         db  0xff ; '.'
000000000000661b         db  0xff ; '.'
000000000000661c         db  0xa8 ; '.'
000000000000661d         db  0xcf ; '.'
000000000000661e         db  0xff ; '.'
000000000000661f         db  0xff ; '.'
0000000000006620         db  0xa8 ; '.'
0000000000006621         db  0xcf ; '.'
0000000000006622         db  0xff ; '.'
0000000000006623         db  0xff ; '.'
0000000000006624         db  0xa8 ; '.'
0000000000006625         db  0xcf ; '.'
0000000000006626         db  0xff ; '.'
0000000000006627         db  0xff ; '.'
0000000000006628         db  0xa8 ; '.'
0000000000006629         db  0xcf ; '.'
000000000000662a         db  0xff ; '.'
000000000000662b         db  0xff ; '.'
000000000000662c         db  0xa8 ; '.'
000000000000662d         db  0xcf ; '.'
000000000000662e         db  0xff ; '.'
000000000000662f         db  0xff ; '.'
0000000000006630         db  0xa8 ; '.'
0000000000006631         db  0xcf ; '.'
0000000000006632         db  0xff ; '.'
0000000000006633         db  0xff ; '.'
0000000000006634         db  0xa8 ; '.'
0000000000006635         db  0xcf ; '.'
0000000000006636         db  0xff ; '.'
0000000000006637         db  0xff ; '.'
0000000000006638         db  0xa8 ; '.'
0000000000006639         db  0xcf ; '.'
000000000000663a         db  0xff ; '.'
000000000000663b         db  0xff ; '.'
000000000000663c         db  0xa8 ; '.'
000000000000663d         db  0xcf ; '.'
000000000000663e         db  0xff ; '.'
000000000000663f         db  0xff ; '.'
0000000000006640         db  0xa8 ; '.'
0000000000006641         db  0xcf ; '.'
0000000000006642         db  0xff ; '.'
0000000000006643         db  0xff ; '.'
0000000000006644         db  0xa8 ; '.'
0000000000006645         db  0xcf ; '.'
0000000000006646         db  0xff ; '.'
0000000000006647         db  0xff ; '.'
0000000000006648         db  0xa8 ; '.'
0000000000006649         db  0xcf ; '.'
000000000000664a         db  0xff ; '.'
000000000000664b         db  0xff ; '.'
000000000000664c         db  0xa8 ; '.'
000000000000664d         db  0xcf ; '.'
000000000000664e         db  0xff ; '.'
000000000000664f         db  0xff ; '.'
0000000000006650         db  0xa8 ; '.'
0000000000006651         db  0xcf ; '.'
0000000000006652         db  0xff ; '.'
0000000000006653         db  0xff ; '.'
0000000000006654         db  0xd8 ; '.'
0000000000006655         db  0xcf ; '.'
0000000000006656         db  0xff ; '.'
0000000000006657         db  0xff ; '.'
0000000000006658         db  0xd8 ; '.'
0000000000006659         db  0xcf ; '.'
000000000000665a         db  0xff ; '.'
000000000000665b         db  0xff ; '.'
000000000000665c         db  0xd8 ; '.'
000000000000665d         db  0xcf ; '.'
000000000000665e         db  0xff ; '.'
000000000000665f         db  0xff ; '.'
0000000000006660         db  0xd8 ; '.'
0000000000006661         db  0xcf ; '.'
0000000000006662         db  0xff ; '.'
0000000000006663         db  0xff ; '.'
0000000000006664         db  0xe8 ; '.'
0000000000006665         db  0xcb ; '.'
0000000000006666         db  0xff ; '.'
0000000000006667         db  0xff ; '.'
0000000000006668         db  0x18 ; '.'
0000000000006669         db  0xce ; '.'
000000000000666a         db  0xff ; '.'
000000000000666b         db  0xff ; '.'
000000000000666c         db  0xa8 ; '.'
000000000000666d         db  0xcf ; '.'
000000000000666e         db  0xff ; '.'
000000000000666f         db  0xff ; '.'
0000000000006670         db  0xa8 ; '.'
0000000000006671         db  0xcf ; '.'
0000000000006672         db  0xff ; '.'
0000000000006673         db  0xff ; '.'
0000000000006674         db  0xa8 ; '.'
0000000000006675         db  0xcf ; '.'
0000000000006676         db  0xff ; '.'
0000000000006677         db  0xff ; '.'
0000000000006678         db  0xa8 ; '.'
0000000000006679         db  0xcf ; '.'
000000000000667a         db  0xff ; '.'
000000000000667b         db  0xff ; '.'
000000000000667c         db  0xa8 ; '.'
000000000000667d         db  0xcf ; '.'
000000000000667e         db  0xff ; '.'
000000000000667f         db  0xff ; '.'
0000000000006680         db  0xa8 ; '.'
0000000000006681         db  0xcf ; '.'
0000000000006682         db  0xff ; '.'
0000000000006683         db  0xff ; '.'
0000000000006684         db  0xa8 ; '.'
0000000000006685         db  0xcf ; '.'
0000000000006686         db  0xff ; '.'
0000000000006687         db  0xff ; '.'
0000000000006688         db  0xa8 ; '.'
0000000000006689         db  0xcf ; '.'
000000000000668a         db  0xff ; '.'
000000000000668b         db  0xff ; '.'
000000000000668c         db  0xa8 ; '.'
000000000000668d         db  0xcf ; '.'
000000000000668e         db  0xff ; '.'
000000000000668f         db  0xff ; '.'
0000000000006690         db  0xa8 ; '.'
0000000000006691         db  0xcf ; '.'
0000000000006692         db  0xff ; '.'
0000000000006693         db  0xff ; '.'
0000000000006694         db  0xa8 ; '.'
0000000000006695         db  0xcf ; '.'
0000000000006696         db  0xff ; '.'
0000000000006697         db  0xff ; '.'
0000000000006698         db  0xa8 ; '.'
0000000000006699         db  0xcf ; '.'
000000000000669a         db  0xff ; '.'
000000000000669b         db  0xff ; '.'
000000000000669c         db  0xa8 ; '.'
000000000000669d         db  0xcf ; '.'
000000000000669e         db  0xff ; '.'
000000000000669f         db  0xff ; '.'
00000000000066a0         db  0xa8 ; '.'
00000000000066a1         db  0xcf ; '.'
00000000000066a2         db  0xff ; '.'
00000000000066a3         db  0xff ; '.'
00000000000066a4         db  0xa8 ; '.'
00000000000066a5         db  0xcf ; '.'
00000000000066a6         db  0xff ; '.'
00000000000066a7         db  0xff ; '.'
00000000000066a8         db  0xa8 ; '.'
00000000000066a9         db  0xcf ; '.'
00000000000066aa         db  0xff ; '.'
00000000000066ab         db  0xff ; '.'
00000000000066ac         db  0xa8 ; '.'
00000000000066ad         db  0xcf ; '.'
00000000000066ae         db  0xff ; '.'
00000000000066af         db  0xff ; '.'
00000000000066b0         db  0xa8 ; '.'
00000000000066b1         db  0xcf ; '.'
00000000000066b2         db  0xff ; '.'
00000000000066b3         db  0xff ; '.'
00000000000066b4         db  0xa8 ; '.'
00000000000066b5         db  0xcf ; '.'
00000000000066b6         db  0xff ; '.'
00000000000066b7         db  0xff ; '.'
00000000000066b8         db  0xa8 ; '.'
00000000000066b9         db  0xcf ; '.'
00000000000066ba         db  0xff ; '.'
00000000000066bb         db  0xff ; '.'
00000000000066bc         db  0xa8 ; '.'
00000000000066bd         db  0xcf ; '.'
00000000000066be         db  0xff ; '.'
00000000000066bf         db  0xff ; '.'
00000000000066c0         db  0xa8 ; '.'
00000000000066c1         db  0xcf ; '.'
00000000000066c2         db  0xff ; '.'
00000000000066c3         db  0xff ; '.'
00000000000066c4         db  0xa8 ; '.'
00000000000066c5         db  0xcf ; '.'
00000000000066c6         db  0xff ; '.'
00000000000066c7         db  0xff ; '.'
00000000000066c8         db  0xa8 ; '.'
00000000000066c9         db  0xcf ; '.'
00000000000066ca         db  0xff ; '.'
00000000000066cb         db  0xff ; '.'
00000000000066cc         db  0xa8 ; '.'
00000000000066cd         db  0xcf ; '.'
00000000000066ce         db  0xff ; '.'
00000000000066cf         db  0xff ; '.'
00000000000066d0         db  0xa8 ; '.'
00000000000066d1         db  0xcf ; '.'
00000000000066d2         db  0xff ; '.'
00000000000066d3         db  0xff ; '.'
00000000000066d4         db  0xd8 ; '.'
00000000000066d5         db  0xcf ; '.'
00000000000066d6         db  0xff ; '.'
00000000000066d7         db  0xff ; '.'
00000000000066d8         db  0xa8 ; '.'
00000000000066d9         db  0xce ; '.'
00000000000066da         db  0xff ; '.'
00000000000066db         db  0xff ; '.'
00000000000066dc         db  0xa8 ; '.'
00000000000066dd         db  0xcf ; '.'
00000000000066de         db  0xff ; '.'
00000000000066df         db  0xff ; '.'
00000000000066e0         db  0xd8 ; '.'
00000000000066e1         db  0xcf ; '.'
00000000000066e2         db  0xff ; '.'
00000000000066e3         db  0xff ; '.'
00000000000066e4         db  0xa8 ; '.'
00000000000066e5         db  0xcf ; '.'
00000000000066e6         db  0xff ; '.'
00000000000066e7         db  0xff ; '.'
00000000000066e8         db  0xd8 ; '.'
00000000000066e9         db  0xcf ; '.'
00000000000066ea         db  0xff ; '.'
00000000000066eb         db  0xff ; '.'
00000000000066ec         db  0xa8 ; '.'
00000000000066ed         db  0xcf ; '.'
00000000000066ee         db  0xff ; '.'
00000000000066ef         db  0xff ; '.'
00000000000066f0         db  0xa8 ; '.'
00000000000066f1         db  0xcf ; '.'
00000000000066f2         db  0xff ; '.'
00000000000066f3         db  0xff ; '.'
00000000000066f4         db  0xa8 ; '.'
00000000000066f5         db  0xcf ; '.'
00000000000066f6         db  0xff ; '.'
00000000000066f7         db  0xff ; '.'
00000000000066f8         db  0xa8 ; '.'
00000000000066f9         db  0xcf ; '.'
00000000000066fa         db  0xff ; '.'
00000000000066fb         db  0xff ; '.'
00000000000066fc         db  0xa8 ; '.'
00000000000066fd         db  0xcf ; '.'
00000000000066fe         db  0xff ; '.'
00000000000066ff         db  0xff ; '.'
0000000000006700         db  0xa8 ; '.'
0000000000006701         db  0xcf ; '.'
0000000000006702         db  0xff ; '.'
0000000000006703         db  0xff ; '.'
0000000000006704         db  0xa8 ; '.'
0000000000006705         db  0xcf ; '.'
0000000000006706         db  0xff ; '.'
0000000000006707         db  0xff ; '.'
0000000000006708         db  0xa8 ; '.'
0000000000006709         db  0xcf ; '.'
000000000000670a         db  0xff ; '.'
000000000000670b         db  0xff ; '.'
000000000000670c         db  0xa8 ; '.'
000000000000670d         db  0xcf ; '.'
000000000000670e         db  0xff ; '.'
000000000000670f         db  0xff ; '.'
0000000000006710         db  0xa8 ; '.'
0000000000006711         db  0xcf ; '.'
0000000000006712         db  0xff ; '.'
0000000000006713         db  0xff ; '.'
0000000000006714         db  0xa8 ; '.'
0000000000006715         db  0xcf ; '.'
0000000000006716         db  0xff ; '.'
0000000000006717         db  0xff ; '.'
0000000000006718         db  0xa8 ; '.'
0000000000006719         db  0xcf ; '.'
000000000000671a         db  0xff ; '.'
000000000000671b         db  0xff ; '.'
000000000000671c         db  0xa8 ; '.'
000000000000671d         db  0xcf ; '.'
000000000000671e         db  0xff ; '.'
000000000000671f         db  0xff ; '.'
0000000000006720         db  0xa8 ; '.'
0000000000006721         db  0xcf ; '.'
0000000000006722         db  0xff ; '.'
0000000000006723         db  0xff ; '.'
0000000000006724         db  0xa8 ; '.'
0000000000006725         db  0xcf ; '.'
0000000000006726         db  0xff ; '.'
0000000000006727         db  0xff ; '.'
0000000000006728         db  0xa8 ; '.'
0000000000006729         db  0xcf ; '.'
000000000000672a         db  0xff ; '.'
000000000000672b         db  0xff ; '.'
000000000000672c         db  0xa8 ; '.'
000000000000672d         db  0xcf ; '.'
000000000000672e         db  0xff ; '.'
000000000000672f         db  0xff ; '.'
0000000000006730         db  0xa8 ; '.'
0000000000006731         db  0xcf ; '.'
0000000000006732         db  0xff ; '.'
0000000000006733         db  0xff ; '.'
0000000000006734         db  0xa8 ; '.'
0000000000006735         db  0xcf ; '.'
0000000000006736         db  0xff ; '.'
0000000000006737         db  0xff ; '.'
0000000000006738         db  0xa8 ; '.'
0000000000006739         db  0xcf ; '.'
000000000000673a         db  0xff ; '.'
000000000000673b         db  0xff ; '.'
000000000000673c         db  0xa8 ; '.'
000000000000673d         db  0xcf ; '.'
000000000000673e         db  0xff ; '.'
000000000000673f         db  0xff ; '.'
0000000000006740         db  0xa8 ; '.'
0000000000006741         db  0xcf ; '.'
0000000000006742         db  0xff ; '.'
0000000000006743         db  0xff ; '.'
0000000000006744         db  0xa8 ; '.'
0000000000006745         db  0xcf ; '.'
0000000000006746         db  0xff ; '.'
0000000000006747         db  0xff ; '.'
0000000000006748         db  0xa8 ; '.'
0000000000006749         db  0xcf ; '.'
000000000000674a         db  0xff ; '.'
000000000000674b         db  0xff ; '.'
000000000000674c         db  0xa8 ; '.'
000000000000674d         db  0xcf ; '.'
000000000000674e         db  0xff ; '.'
000000000000674f         db  0xff ; '.'
0000000000006750         db  0xa8 ; '.'
0000000000006751         db  0xcf ; '.'
0000000000006752         db  0xff ; '.'
0000000000006753         db  0xff ; '.'
0000000000006754         db  0x18 ; '.'
0000000000006755         db  0xcb ; '.'
0000000000006756         db  0xff ; '.'
0000000000006757         db  0xff ; '.'
0000000000006758         db  0xd8 ; '.'
0000000000006759         db  0xcf ; '.'
000000000000675a         db  0xff ; '.'
000000000000675b         db  0xff ; '.'
000000000000675c         db  0x18 ; '.'
000000000000675d         db  0xcb ; '.'
000000000000675e         db  0xff ; '.'
000000000000675f         db  0xff ; '.'
0000000000006760         db  0xc0 ; '.'
0000000000006761         db  0xcf ; '.'
0000000000006762         db  0xff ; '.'
0000000000006763         db  0xff ; '.'
0000000000006764         db  0x00 ; '.'
0000000000006765         db  0x00 ; '.'
0000000000006766         db  0x00 ; '.'
0000000000006767         db  0x00 ; '.'
0000000000006768         db  0x00 ; '.'
0000000000006769         db  0x00 ; '.'
000000000000676a         db  0x00 ; '.'
000000000000676b         db  0x00 ; '.'
000000000000676c         db  0x00 ; '.'
000000000000676d         db  0x00 ; '.'
000000000000676e         db  0x00 ; '.'
000000000000676f         db  0x00 ; '.'
0000000000006770         db  0x00 ; '.'
0000000000006771         db  0x00 ; '.'
0000000000006772         db  0x00 ; '.'
0000000000006773         db  0x00 ; '.'
0000000000006774         db  0x00 ; '.'
0000000000006775         db  0x00 ; '.'
0000000000006776         db  0x00 ; '.'
0000000000006777         db  0x00 ; '.'
0000000000006778         db  0x00 ; '.'
0000000000006779         db  0x00 ; '.'
000000000000677a         db  0x00 ; '.'
000000000000677b         db  0x00 ; '.'
000000000000677c         db  0x00 ; '.'
000000000000677d         db  0x00 ; '.'
000000000000677e         db  0x00 ; '.'
000000000000677f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000006780         db  0x00 ; '.'
0000000000006781         db  0x00 ; '.'
0000000000006782         db  0x00 ; '.'
0000000000006783         db  0x00 ; '.'
0000000000006784         db  0x01 ; '.'
0000000000006785         db  0x00 ; '.'
0000000000006786         db  0x00 ; '.'
0000000000006787         db  0x00 ; '.'
0000000000006788         db  0x02 ; '.'
0000000000006789         db  0x00 ; '.'
000000000000678a         db  0x00 ; '.'
000000000000678b         db  0x00 ; '.'
000000000000678c         db  0x03 ; '.'
000000000000678d         db  0x00 ; '.'
000000000000678e         db  0x00 ; '.'
000000000000678f         db  0x00 ; '.'
0000000000006790         db  0x04 ; '.'
0000000000006791         db  0x00 ; '.'
0000000000006792         db  0x00 ; '.'
0000000000006793         db  0x00 ; '.'
0000000000006794         db  0x05 ; '.'
0000000000006795         db  0x00 ; '.'
0000000000006796         db  0x00 ; '.'
0000000000006797         db  0x00 ; '.'
0000000000006798         db  0x06 ; '.'
0000000000006799         db  0x00 ; '.'
000000000000679a         db  0x00 ; '.'
000000000000679b         db  0x00 ; '.'
000000000000679c         db  0x07 ; '.'
000000000000679d         db  0x00 ; '.'
000000000000679e         db  0x00 ; '.'
000000000000679f         db  0x00 ; '.'
00000000000067a0         db  0x08 ; '.'
00000000000067a1         db  0x00 ; '.'
00000000000067a2         db  0x00 ; '.'
00000000000067a3         db  0x00 ; '.'
00000000000067a4         db  0x09 ; '.'
00000000000067a5         db  0x00 ; '.'
00000000000067a6         db  0x00 ; '.'
00000000000067a7         db  0x00 ; '.'
                     aSSSn:
00000000000067a8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
00000000000067b4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
00000000000067bb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
00000000000067bc         db  0x43 ; 'C'
00000000000067bd         db  0x29 ; ')'
00000000000067be         db  0x00 ; '.'
                     aWrittenBySn:
00000000000067bf         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000067cf         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000067e6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000006802         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000006817         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000682d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000006841         align      8
                     aNlicenseGplv3G:
0000000000006848         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000006914         align      8
                     aWrittenBySSSna:
0000000000006918         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_6938:        // aWrittenBySSSns
0000000000006938         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000695c         align      32
                     aWrittenBySSSns_6960:        // aWrittenBySSSns
0000000000006960         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_6988:        // aWrittenBySSSns
0000000000006988         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
00000000000069b4         align      8
                     aWrittenBySSSns_69b8:        // aWrittenBySSSns
00000000000069b8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000069e8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000006a1c         align      32
                     aWrittenBySSSns_6a20:        // aWrittenBySSSns
0000000000006a20         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000006a5c         align      32
                     aGeneralHelpUsi:
0000000000006a60         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000006aa1         align      4
                     switch_table_6aa4:        // switch_table
0000000000006aa4         dd         version_etc_arn.loc_4b56-switch_table_6aa4, version_etc_arn.loc_4be8-switch_table_6aa4, version_etc_arn.loc_4c28-switch_table_6aa4, version_etc_arn.loc_4c70-switch_table_6aa4 ; switch table used at 0x4ad4 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000006ab4         dd         version_etc_arn.loc_4cc0-switch_table_6aa4, version_etc_arn.loc_4d18-switch_table_6aa4, version_etc_arn.loc_4d48-switch_table_6aa4, version_etc_arn.loc_4db0-switch_table_6aa4
0000000000006ac4         dd         version_etc_arn.loc_4ae0-switch_table_6aa4, version_etc_arn.loc_4b90-switch_table_6aa4
0000000000006acc         align      32
                     version_etc_copyright:
0000000000006ae0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000006b0f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
0000000000006b20         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
0000000000006b40         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
0000000000006b66         align      8
                     switch_table_6b68:        // switch_table
0000000000006b68         dd         xstrtoumax.loc_5736-switch_table_6b68, 2 dup (xstrtoumax.loc_562c-switch_table_6b68), xstrtoumax.loc_5713-switch_table_6b68, xstrtoumax.loc_562c-switch_table_6b68 ; switch table used at 0x55e6 containing 54 entries, DATA XREF=xstrtoumax+452
0000000000006b7c         dd         xstrtoumax.loc_574c-switch_table_6b68, 3 dup (xstrtoumax.loc_562c-switch_table_6b68), xstrtoumax.loc_56cf-switch_table_6b68, xstrtoumax.loc_562c-switch_table_6b68
0000000000006b94         dd         xstrtoumax.loc_55e8-switch_table_6b68, 2 dup (xstrtoumax.loc_562c-switch_table_6b68), xstrtoumax.loc_56f0-switch_table_6b68, 3 dup (xstrtoumax.loc_562c-switch_table_6b68)
0000000000006bb0         dd         xstrtoumax.loc_56af-switch_table_6b68, 4 dup (xstrtoumax.loc_562c-switch_table_6b68), xstrtoumax.loc_568a-switch_table_6b68, xstrtoumax.loc_5664-switch_table_6b68
0000000000006bcc         dd         7 dup (xstrtoumax.loc_562c-switch_table_6b68), xstrtoumax.loc_564d-switch_table_6b68, xstrtoumax.loc_5610-switch_table_6b68, 3 dup (xstrtoumax.loc_562c-switch_table_6b68)
0000000000006bfc         dd         xstrtoumax.loc_574c-switch_table_6b68, 3 dup (xstrtoumax.loc_562c-switch_table_6b68), xstrtoumax.loc_56cf-switch_table_6b68, xstrtoumax.loc_562c-switch_table_6b68
0000000000006c14         dd         xstrtoumax.loc_55e8-switch_table_6b68, 6 dup (xstrtoumax.loc_562c-switch_table_6b68), xstrtoumax.loc_56af-switch_table_6b68, 2 dup (xstrtoumax.loc_562c-switch_table_6b68)
0000000000006c3c         dd         xstrtoumax.loc_5637-switch_table_6b68
                     __PRETTY_FUNCTION__.4162:
0000000000006c40         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
0000000000006c4b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000006c4c         db  0x00 ; '.'
                     aPosix:
0000000000006c4d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000006c53         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000006c59         db  0x00 ; '.'
0000000000006c5a         db  0x00 ; '.'
0000000000006c5b         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x6c5c; 0x6ef8[ (668 bytes)
        ; File offset : [27740; 28408[ (668 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006c5c         db  0x01 ; '.'
0000000000006c5d         db  0x1b ; '.'
0000000000006c5e         db  0x03 ; '.'
0000000000006c5f         db  0x3b ; ';'
0000000000006c60         db  0x98 ; '.'
0000000000006c61         db  0x02 ; '.'
0000000000006c62         db  0x00 ; '.'
0000000000006c63         db  0x00 ; '.'
0000000000006c64         db  0x52 ; 'R'
0000000000006c65         db  0x00 ; '.'
0000000000006c66         db  0x00 ; '.'
0000000000006c67         db  0x00 ; '.'
0000000000006c68         db  0x64 ; 'd'
0000000000006c69         db  0xa8 ; '.'
0000000000006c6a         db  0xff ; '.'
0000000000006c6b         db  0xff ; '.'
0000000000006c6c         db  0xe4 ; '.'
0000000000006c6d         db  0x02 ; '.'
0000000000006c6e         db  0x00 ; '.'
0000000000006c6f         db  0x00 ; '.'
0000000000006c70         db  0x94 ; '.'
0000000000006c71         db  0xab ; '.'
0000000000006c72         db  0xff ; '.'
0000000000006c73         db  0xff ; '.'
0000000000006c74         db  0x0c ; '.'
0000000000006c75         db  0x03 ; '.'
0000000000006c76         db  0x00 ; '.'
0000000000006c77         db  0x00 ; '.'
0000000000006c78         db  0xa4 ; '.'
0000000000006c79         db  0xab ; '.'
0000000000006c7a         db  0xff ; '.'
0000000000006c7b         db  0xff ; '.'
0000000000006c7c         db  0x50 ; 'P'
0000000000006c7d         db  0x03 ; '.'
0000000000006c7e         db  0x00 ; '.'
0000000000006c7f         db  0x00 ; '.'
0000000000006c80         db  0xa4 ; '.'
0000000000006c81         db  0xb3 ; '.'
0000000000006c82         db  0xff ; '.'
0000000000006c83         db  0xff ; '.'
0000000000006c84         db  0xb4 ; '.'
0000000000006c85         db  0x02 ; '.'
0000000000006c86         db  0x00 ; '.'
0000000000006c87         db  0x00 ; '.'
0000000000006c88         db  0xb4 ; '.'
0000000000006c89         db  0xb4 ; '.'
0000000000006c8a         db  0xff ; '.'
0000000000006c8b         db  0xff ; '.'
0000000000006c8c         db  0x24 ; '$'
0000000000006c8d         db  0x03 ; '.'
0000000000006c8e         db  0x00 ; '.'
0000000000006c8f         db  0x00 ; '.'
0000000000006c90         db  0x94 ; '.'
0000000000006c91         db  0xb8 ; '.'
0000000000006c92         db  0xff ; '.'
0000000000006c93         db  0xff ; '.'
0000000000006c94         db  0xa4 ; '.'
0000000000006c95         db  0x03 ; '.'
0000000000006c96         db  0x00 ; '.'
0000000000006c97         db  0x00 ; '.'
0000000000006c98         db  0xa4 ; '.'
0000000000006c99         db  0xb9 ; '.'
0000000000006c9a         db  0xff ; '.'
0000000000006c9b         db  0xff ; '.'
0000000000006c9c         db  0xb8 ; '.'
0000000000006c9d         db  0x03 ; '.'
0000000000006c9e         db  0x00 ; '.'
0000000000006c9f         db  0x00 ; '.'
0000000000006ca0         db  0x64 ; 'd'
0000000000006ca1         db  0xbb ; '.'
0000000000006ca2         db  0xff ; '.'
0000000000006ca3         db  0xff ; '.'
0000000000006ca4         db  0xcc ; '.'
0000000000006ca5         db  0x03 ; '.'
0000000000006ca6         db  0x00 ; '.'
0000000000006ca7         db  0x00 ; '.'
0000000000006ca8         db  0xf4 ; '.'
0000000000006ca9         db  0xbb ; '.'
0000000000006caa         db  0xff ; '.'
0000000000006cab         db  0xff ; '.'
0000000000006cac         db  0x18 ; '.'
0000000000006cad         db  0x04 ; '.'
0000000000006cae         db  0x00 ; '.'
0000000000006caf         db  0x00 ; '.'
0000000000006cb0         db  0x14 ; '.'
0000000000006cb1         db  0xbc ; '.'
0000000000006cb2         db  0xff ; '.'
0000000000006cb3         db  0xff ; '.'
0000000000006cb4         db  0x2c ; ','
0000000000006cb5         db  0x04 ; '.'
0000000000006cb6         db  0x00 ; '.'
0000000000006cb7         db  0x00 ; '.'
0000000000006cb8         db  0x24 ; '$'
0000000000006cb9         db  0xbc ; '.'
0000000000006cba         db  0xff ; '.'
0000000000006cbb         db  0xff ; '.'
0000000000006cbc         db  0x40 ; '@'
0000000000006cbd         db  0x04 ; '.'
0000000000006cbe         db  0x00 ; '.'
0000000000006cbf         db  0x00 ; '.'
0000000000006cc0         db  0xd4 ; '.'
0000000000006cc1         db  0xbe ; '.'
0000000000006cc2         db  0xff ; '.'
0000000000006cc3         db  0xff ; '.'
0000000000006cc4         db  0x8c ; '.'
0000000000006cc5         db  0x04 ; '.'
0000000000006cc6         db  0x00 ; '.'
0000000000006cc7         db  0x00 ; '.'
0000000000006cc8         db  0x94 ; '.'
0000000000006cc9         db  0xbf ; '.'
0000000000006cca         db  0xff ; '.'
0000000000006ccb         db  0xff ; '.'
0000000000006ccc         db  0xd4 ; '.'
0000000000006ccd         db  0x04 ; '.'
0000000000006cce         db  0x00 ; '.'
0000000000006ccf         db  0x00 ; '.'
0000000000006cd0         db  0xa4 ; '.'
0000000000006cd1         db  0xbf ; '.'
0000000000006cd2         db  0xff ; '.'
0000000000006cd3         db  0xff ; '.'
0000000000006cd4         db  0xe8 ; '.'
0000000000006cd5         db  0x04 ; '.'
0000000000006cd6         db  0x00 ; '.'
0000000000006cd7         db  0x00 ; '.'
0000000000006cd8         db  0xb4 ; '.'
0000000000006cd9         db  0xbf ; '.'
0000000000006cda         db  0xff ; '.'
0000000000006cdb         db  0xff ; '.'
0000000000006cdc         db  0xfc ; '.'
0000000000006cdd         db  0x04 ; '.'
0000000000006cde         db  0x00 ; '.'
0000000000006cdf         db  0x00 ; '.'
0000000000006ce0         db  0x64 ; 'd'
0000000000006ce1         db  0xc0 ; '.'
0000000000006ce2         db  0xff ; '.'
0000000000006ce3         db  0xff ; '.'
0000000000006ce4         db  0x2c ; ','
0000000000006ce5         db  0x05 ; '.'
0000000000006ce6         db  0x00 ; '.'
0000000000006ce7         db  0x00 ; '.'
0000000000006ce8         db  0x74 ; 't'
0000000000006ce9         db  0xc0 ; '.'
0000000000006cea         db  0xff ; '.'
0000000000006ceb         db  0xff ; '.'
0000000000006cec         db  0x40 ; '@'
0000000000006ced         db  0x05 ; '.'
0000000000006cee         db  0x00 ; '.'
0000000000006cef         db  0x00 ; '.'
0000000000006cf0         db  0xa4 ; '.'
0000000000006cf1         db  0xc0 ; '.'
0000000000006cf2         db  0xff ; '.'
0000000000006cf3         db  0xff ; '.'
0000000000006cf4         db  0x5c ; '\'
0000000000006cf5         db  0x05 ; '.'
0000000000006cf6         db  0x00 ; '.'
0000000000006cf7         db  0x00 ; '.'
0000000000006cf8         db  0x44 ; 'D'
0000000000006cf9         db  0xc1 ; '.'
0000000000006cfa         db  0xff ; '.'
0000000000006cfb         db  0xff ; '.'
0000000000006cfc         db  0x7c ; '|'
0000000000006cfd         db  0x05 ; '.'
0000000000006cfe         db  0x00 ; '.'
0000000000006cff         db  0x00 ; '.'
0000000000006d00         db  0x34 ; '4'
0000000000006d01         db  0xc2 ; '.'
0000000000006d02         db  0xff ; '.'
0000000000006d03         db  0xff ; '.'
0000000000006d04         db  0xc0 ; '.'
0000000000006d05         db  0x05 ; '.'
0000000000006d06         db  0x00 ; '.'
0000000000006d07         db  0x00 ; '.'
0000000000006d08         db  0x74 ; 't'
0000000000006d09         db  0xd4 ; '.'
0000000000006d0a         db  0xff ; '.'
0000000000006d0b         db  0xff ; '.'
0000000000006d0c         db  0x38 ; '8'
0000000000006d0d         db  0x06 ; '.'
0000000000006d0e         db  0x00 ; '.'
0000000000006d0f         db  0x00 ; '.'
0000000000006d10         db  0x24 ; '$'
0000000000006d11         db  0xd6 ; '.'
0000000000006d12         db  0xff ; '.'
0000000000006d13         db  0xff ; '.'
0000000000006d14         db  0xa4 ; '.'
0000000000006d15         db  0x06 ; '.'
0000000000006d16         db  0x00 ; '.'
0000000000006d17         db  0x00 ; '.'
0000000000006d18         db  0x64 ; 'd'
0000000000006d19         db  0xd6 ; '.'
0000000000006d1a         db  0xff ; '.'
0000000000006d1b         db  0xff ; '.'
0000000000006d1c         db  0xd0 ; '.'
0000000000006d1d         db  0x06 ; '.'
0000000000006d1e         db  0x00 ; '.'
0000000000006d1f         db  0x00 ; '.'
0000000000006d20         db  0x84 ; '.'
0000000000006d21         db  0xd6 ; '.'
0000000000006d22         db  0xff ; '.'
0000000000006d23         db  0xff ; '.'
0000000000006d24         db  0xe4 ; '.'
0000000000006d25         db  0x06 ; '.'
0000000000006d26         db  0x00 ; '.'
0000000000006d27         db  0x00 ; '.'
0000000000006d28         db  0xa4 ; '.'
0000000000006d29         db  0xd6 ; '.'
0000000000006d2a         db  0xff ; '.'
0000000000006d2b         db  0xff ; '.'
0000000000006d2c         db  0xf8 ; '.'
0000000000006d2d         db  0x06 ; '.'
0000000000006d2e         db  0x00 ; '.'
0000000000006d2f         db  0x00 ; '.'
0000000000006d30         db  0xe4 ; '.'
0000000000006d31         db  0xd6 ; '.'
0000000000006d32         db  0xff ; '.'
0000000000006d33         db  0xff ; '.'
0000000000006d34         db  0x0c ; '.'
0000000000006d35         db  0x07 ; '.'
0000000000006d36         db  0x00 ; '.'
0000000000006d37         db  0x00 ; '.'
0000000000006d38         db  0x04 ; '.'
0000000000006d39         db  0xd7 ; '.'
0000000000006d3a         db  0xff ; '.'
0000000000006d3b         db  0xff ; '.'
0000000000006d3c         db  0x20 ; ' '
0000000000006d3d         db  0x07 ; '.'
0000000000006d3e         db  0x00 ; '.'
0000000000006d3f         db  0x00 ; '.'
0000000000006d40         db  0x34 ; '4'
0000000000006d41         db  0xd7 ; '.'
0000000000006d42         db  0xff ; '.'
0000000000006d43         db  0xff ; '.'
0000000000006d44         db  0x34 ; '4'
0000000000006d45         db  0x07 ; '.'
0000000000006d46         db  0x00 ; '.'
0000000000006d47         db  0x00 ; '.'
0000000000006d48         db  0xb4 ; '.'
0000000000006d49         db  0xd7 ; '.'
0000000000006d4a         db  0xff ; '.'
0000000000006d4b         db  0xff ; '.'
0000000000006d4c         db  0x88 ; '.'
0000000000006d4d         db  0x07 ; '.'
0000000000006d4e         db  0x00 ; '.'
0000000000006d4f         db  0x00 ; '.'
0000000000006d50         db  0xa4 ; '.'
0000000000006d51         db  0xd8 ; '.'
0000000000006d52         db  0xff ; '.'
0000000000006d53         db  0xff ; '.'
0000000000006d54         db  0xf4 ; '.'
0000000000006d55         db  0x07 ; '.'
0000000000006d56         db  0x00 ; '.'
0000000000006d57         db  0x00 ; '.'
0000000000006d58         db  0xb4 ; '.'
0000000000006d59         db  0xd8 ; '.'
0000000000006d5a         db  0xff ; '.'
0000000000006d5b         db  0xff ; '.'
0000000000006d5c         db  0x08 ; '.'
0000000000006d5d         db  0x08 ; '.'
0000000000006d5e         db  0x00 ; '.'
0000000000006d5f         db  0x00 ; '.'
0000000000006d60         db  0x54 ; 'T'
0000000000006d61         db  0xd9 ; '.'
0000000000006d62         db  0xff ; '.'
0000000000006d63         db  0xff ; '.'
0000000000006d64         db  0x34 ; '4'
0000000000006d65         db  0x08 ; '.'
0000000000006d66         db  0x00 ; '.'
0000000000006d67         db  0x00 ; '.'
0000000000006d68         db  0x74 ; 't'
0000000000006d69         db  0xd9 ; '.'
0000000000006d6a         db  0xff ; '.'
0000000000006d6b         db  0xff ; '.'
0000000000006d6c         db  0x48 ; 'H'
0000000000006d6d         db  0x08 ; '.'
0000000000006d6e         db  0x00 ; '.'
0000000000006d6f         db  0x00 ; '.'
0000000000006d70         db  0x84 ; '.'
0000000000006d71         db  0xd9 ; '.'
0000000000006d72         db  0xff ; '.'
0000000000006d73         db  0xff ; '.'
0000000000006d74         db  0x5c ; '\'
0000000000006d75         db  0x08 ; '.'
0000000000006d76         db  0x00 ; '.'
0000000000006d77         db  0x00 ; '.'
0000000000006d78         db  0xa4 ; '.'
0000000000006d79         db  0xd9 ; '.'
0000000000006d7a         db  0xff ; '.'
0000000000006d7b         db  0xff ; '.'
0000000000006d7c         db  0x70 ; 'p'
0000000000006d7d         db  0x08 ; '.'
0000000000006d7e         db  0x00 ; '.'
0000000000006d7f         db  0x00 ; '.'
0000000000006d80         db  0xc4 ; '.'
0000000000006d81         db  0xd9 ; '.'
0000000000006d82         db  0xff ; '.'
0000000000006d83         db  0xff ; '.'
0000000000006d84         db  0x84 ; '.'
0000000000006d85         db  0x08 ; '.'
0000000000006d86         db  0x00 ; '.'
0000000000006d87         db  0x00 ; '.'
0000000000006d88         db  0x54 ; 'T'
0000000000006d89         db  0xda ; '.'
0000000000006d8a         db  0xff ; '.'
0000000000006d8b         db  0xff ; '.'
0000000000006d8c         db  0xa0 ; '.'
0000000000006d8d         db  0x08 ; '.'
0000000000006d8e         db  0x00 ; '.'
0000000000006d8f         db  0x00 ; '.'
0000000000006d90         db  0xe4 ; '.'
0000000000006d91         db  0xda ; '.'
0000000000006d92         db  0xff ; '.'
0000000000006d93         db  0xff ; '.'
0000000000006d94         db  0xbc ; '.'
0000000000006d95         db  0x08 ; '.'
0000000000006d96         db  0x00 ; '.'
0000000000006d97         db  0x00 ; '.'
0000000000006d98         db  0xf4 ; '.'
0000000000006d99         db  0xda ; '.'
0000000000006d9a         db  0xff ; '.'
0000000000006d9b         db  0xff ; '.'
0000000000006d9c         db  0xd0 ; '.'
0000000000006d9d         db  0x08 ; '.'
0000000000006d9e         db  0x00 ; '.'
0000000000006d9f         db  0x00 ; '.'
0000000000006da0         db  0x04 ; '.'
0000000000006da1         db  0xdb ; '.'
0000000000006da2         db  0xff ; '.'
0000000000006da3         db  0xff ; '.'
0000000000006da4         db  0xe4 ; '.'
0000000000006da5         db  0x08 ; '.'
0000000000006da6         db  0x00 ; '.'
0000000000006da7         db  0x00 ; '.'
0000000000006da8         db  0xa4 ; '.'
0000000000006da9         db  0xdb ; '.'
0000000000006daa         db  0xff ; '.'
0000000000006dab         db  0xff ; '.'
0000000000006dac         db  0x00 ; '.'
0000000000006dad         db  0x09 ; '.'
0000000000006dae         db  0x00 ; '.'
0000000000006daf         db  0x00 ; '.'
0000000000006db0         db  0xb4 ; '.'
0000000000006db1         db  0xdb ; '.'
0000000000006db2         db  0xff ; '.'
0000000000006db3         db  0xff ; '.'
0000000000006db4         db  0x14 ; '.'
0000000000006db5         db  0x09 ; '.'
0000000000006db6         db  0x00 ; '.'
0000000000006db7         db  0x00 ; '.'
0000000000006db8         db  0xd4 ; '.'
0000000000006db9         db  0xdb ; '.'
0000000000006dba         db  0xff ; '.'
0000000000006dbb         db  0xff ; '.'
0000000000006dbc         db  0x28 ; '('
0000000000006dbd         db  0x09 ; '.'
0000000000006dbe         db  0x00 ; '.'
0000000000006dbf         db  0x00 ; '.'
0000000000006dc0         db  0xe4 ; '.'
0000000000006dc1         db  0xdb ; '.'
0000000000006dc2         db  0xff ; '.'
0000000000006dc3         db  0xff ; '.'
0000000000006dc4         db  0x3c ; '<'
0000000000006dc5         db  0x09 ; '.'
0000000000006dc6         db  0x00 ; '.'
0000000000006dc7         db  0x00 ; '.'
0000000000006dc8         db  0x74 ; 't'
0000000000006dc9         db  0xdc ; '.'
0000000000006dca         db  0xff ; '.'
0000000000006dcb         db  0xff ; '.'
0000000000006dcc         db  0x58 ; 'X'
0000000000006dcd         db  0x09 ; '.'
0000000000006dce         db  0x00 ; '.'
0000000000006dcf         db  0x00 ; '.'
0000000000006dd0         db  0x14 ; '.'
0000000000006dd1         db  0xdd ; '.'
0000000000006dd2         db  0xff ; '.'
0000000000006dd3         db  0xff ; '.'
0000000000006dd4         db  0x74 ; 't'
0000000000006dd5         db  0x09 ; '.'
0000000000006dd6         db  0x00 ; '.'
0000000000006dd7         db  0x00 ; '.'
0000000000006dd8         db  0x24 ; '$'
0000000000006dd9         db  0xdd ; '.'
0000000000006dda         db  0xff ; '.'
0000000000006ddb         db  0xff ; '.'
0000000000006ddc         db  0x88 ; '.'
0000000000006ddd         db  0x09 ; '.'
0000000000006dde         db  0x00 ; '.'
0000000000006ddf         db  0x00 ; '.'
0000000000006de0         db  0x44 ; 'D'
0000000000006de1         db  0xdd ; '.'
0000000000006de2         db  0xff ; '.'
0000000000006de3         db  0xff ; '.'
0000000000006de4         db  0x9c ; '.'
0000000000006de5         db  0x09 ; '.'
0000000000006de6         db  0x00 ; '.'
0000000000006de7         db  0x00 ; '.'
0000000000006de8         db  0x64 ; 'd'
0000000000006de9         db  0xdd ; '.'
0000000000006dea         db  0xff ; '.'
0000000000006deb         db  0xff ; '.'
0000000000006dec         db  0xb0 ; '.'
0000000000006ded         db  0x09 ; '.'
0000000000006dee         db  0x00 ; '.'
0000000000006def         db  0x00 ; '.'
0000000000006df0         db  0x74 ; 't'
0000000000006df1         db  0xdd ; '.'
0000000000006df2         db  0xff ; '.'
0000000000006df3         db  0xff ; '.'
0000000000006df4         db  0xc4 ; '.'
0000000000006df5         db  0x09 ; '.'
0000000000006df6         db  0x00 ; '.'
0000000000006df7         db  0x00 ; '.'
0000000000006df8         db  0x94 ; '.'
0000000000006df9         db  0xdd ; '.'
0000000000006dfa         db  0xff ; '.'
0000000000006dfb         db  0xff ; '.'
0000000000006dfc         db  0xd8 ; '.'
0000000000006dfd         db  0x09 ; '.'
0000000000006dfe         db  0x00 ; '.'
0000000000006dff         db  0x00 ; '.'
0000000000006e00         db  0xb4 ; '.'
0000000000006e01         db  0xdd ; '.'
0000000000006e02         db  0xff ; '.'
0000000000006e03         db  0xff ; '.'
0000000000006e04         db  0xec ; '.'
0000000000006e05         db  0x09 ; '.'
0000000000006e06         db  0x00 ; '.'
0000000000006e07         db  0x00 ; '.'
0000000000006e08         db  0xd4 ; '.'
0000000000006e09         db  0xdd ; '.'
0000000000006e0a         db  0xff ; '.'
0000000000006e0b         db  0xff ; '.'
0000000000006e0c         db  0x04 ; '.'
0000000000006e0d         db  0x0a ; '.'
0000000000006e0e         db  0x00 ; '.'
0000000000006e0f         db  0x00 ; '.'
0000000000006e10         db  0xf4 ; '.'
0000000000006e11         db  0xe1 ; '.'
0000000000006e12         db  0xff ; '.'
0000000000006e13         db  0xff ; '.'
0000000000006e14         db  0x18 ; '.'
0000000000006e15         db  0x0b ; '.'
0000000000006e16         db  0x00 ; '.'
0000000000006e17         db  0x00 ; '.'
0000000000006e18         db  0x14 ; '.'
0000000000006e19         db  0xe2 ; '.'
0000000000006e1a         db  0xff ; '.'
0000000000006e1b         db  0xff ; '.'
0000000000006e1c         db  0x2c ; ','
0000000000006e1d         db  0x0b ; '.'
0000000000006e1e         db  0x00 ; '.'
0000000000006e1f         db  0x00 ; '.'
0000000000006e20         db  0x94 ; '.'
0000000000006e21         db  0xe2 ; '.'
0000000000006e22         db  0xff ; '.'
0000000000006e23         db  0xff ; '.'
0000000000006e24         db  0x48 ; 'H'
0000000000006e25         db  0x0b ; '.'
0000000000006e26         db  0x00 ; '.'
0000000000006e27         db  0x00 ; '.'
0000000000006e28         db  0x74 ; 't'
0000000000006e29         db  0xe3 ; '.'
0000000000006e2a         db  0xff ; '.'
0000000000006e2b         db  0xff ; '.'
0000000000006e2c         db  0x74 ; 't'
0000000000006e2d         db  0x0b ; '.'
0000000000006e2e         db  0x00 ; '.'
0000000000006e2f         db  0x00 ; '.'
0000000000006e30         db  0xf4 ; '.'
0000000000006e31         db  0xe3 ; '.'
0000000000006e32         db  0xff ; '.'
0000000000006e33         db  0xff ; '.'
0000000000006e34         db  0x94 ; '.'
0000000000006e35         db  0x0b ; '.'
0000000000006e36         db  0x00 ; '.'
0000000000006e37         db  0x00 ; '.'
0000000000006e38         db  0x14 ; '.'
0000000000006e39         db  0xe4 ; '.'
0000000000006e3a         db  0xff ; '.'
0000000000006e3b         db  0xff ; '.'
0000000000006e3c         db  0xb0 ; '.'
0000000000006e3d         db  0x0b ; '.'
0000000000006e3e         db  0x00 ; '.'
0000000000006e3f         db  0x00 ; '.'
0000000000006e40         db  0x44 ; 'D'
0000000000006e41         db  0xe4 ; '.'
0000000000006e42         db  0xff ; '.'
0000000000006e43         db  0xff ; '.'
0000000000006e44         db  0xc4 ; '.'
0000000000006e45         db  0x0b ; '.'
0000000000006e46         db  0x00 ; '.'
0000000000006e47         db  0x00 ; '.'
0000000000006e48         db  0x54 ; 'T'
0000000000006e49         db  0xe4 ; '.'
0000000000006e4a         db  0xff ; '.'
0000000000006e4b         db  0xff ; '.'
0000000000006e4c         db  0xd8 ; '.'
0000000000006e4d         db  0x0b ; '.'
0000000000006e4e         db  0x00 ; '.'
0000000000006e4f         db  0x00 ; '.'
0000000000006e50         db  0x94 ; '.'
0000000000006e51         db  0xe4 ; '.'
0000000000006e52         db  0xff ; '.'
0000000000006e53         db  0xff ; '.'
0000000000006e54         db  0xfc ; '.'
0000000000006e55         db  0x0b ; '.'
0000000000006e56         db  0x00 ; '.'
0000000000006e57         db  0x00 ; '.'
0000000000006e58         db  0xc4 ; '.'
0000000000006e59         db  0xe4 ; '.'
0000000000006e5a         db  0xff ; '.'
0000000000006e5b         db  0xff ; '.'
0000000000006e5c         db  0x10 ; '.'
0000000000006e5d         db  0x0c ; '.'
0000000000006e5e         db  0x00 ; '.'
0000000000006e5f         db  0x00 ; '.'
0000000000006e60         db  0x54 ; 'T'
0000000000006e61         db  0xe5 ; '.'
0000000000006e62         db  0xff ; '.'
0000000000006e63         db  0xff ; '.'
0000000000006e64         db  0x28 ; '('
0000000000006e65         db  0x0c ; '.'
0000000000006e66         db  0x00 ; '.'
0000000000006e67         db  0x00 ; '.'
0000000000006e68         db  0xa4 ; '.'
0000000000006e69         db  0xe5 ; '.'
0000000000006e6a         db  0xff ; '.'
0000000000006e6b         db  0xff ; '.'
0000000000006e6c         db  0x40 ; '@'
0000000000006e6d         db  0x0c ; '.'
0000000000006e6e         db  0x00 ; '.'
0000000000006e6f         db  0x00 ; '.'
0000000000006e70         db  0xc4 ; '.'
0000000000006e71         db  0xe5 ; '.'
0000000000006e72         db  0xff ; '.'
0000000000006e73         db  0xff ; '.'
0000000000006e74         db  0x5c ; '\'
0000000000006e75         db  0x0c ; '.'
0000000000006e76         db  0x00 ; '.'
0000000000006e77         db  0x00 ; '.'
0000000000006e78         db  0xf4 ; '.'
0000000000006e79         db  0xe5 ; '.'
0000000000006e7a         db  0xff ; '.'
0000000000006e7b         db  0xff ; '.'
0000000000006e7c         db  0x78 ; 'x'
0000000000006e7d         db  0x0c ; '.'
0000000000006e7e         db  0x00 ; '.'
0000000000006e7f         db  0x00 ; '.'
0000000000006e80         db  0x24 ; '$'
0000000000006e81         db  0xe6 ; '.'
0000000000006e82         db  0xff ; '.'
0000000000006e83         db  0xff ; '.'
0000000000006e84         db  0xa0 ; '.'
0000000000006e85         db  0x0c ; '.'
0000000000006e86         db  0x00 ; '.'
0000000000006e87         db  0x00 ; '.'
0000000000006e88         db  0x44 ; 'D'
0000000000006e89         db  0xe6 ; '.'
0000000000006e8a         db  0xff ; '.'
0000000000006e8b         db  0xff ; '.'
0000000000006e8c         db  0xbc ; '.'
0000000000006e8d         db  0x0c ; '.'
0000000000006e8e         db  0x00 ; '.'
0000000000006e8f         db  0x00 ; '.'
0000000000006e90         db  0x84 ; '.'
0000000000006e91         db  0xe6 ; '.'
0000000000006e92         db  0xff ; '.'
0000000000006e93         db  0xff ; '.'
0000000000006e94         db  0xd4 ; '.'
0000000000006e95         db  0x0c ; '.'
0000000000006e96         db  0x00 ; '.'
0000000000006e97         db  0x00 ; '.'
0000000000006e98         db  0x84 ; '.'
0000000000006e99         db  0xe7 ; '.'
0000000000006e9a         db  0xff ; '.'
0000000000006e9b         db  0xff ; '.'
0000000000006e9c         db  0x20 ; ' '
0000000000006e9d         db  0x0d ; '.'
0000000000006e9e         db  0x00 ; '.'
0000000000006e9f         db  0x00 ; '.'
0000000000006ea0         db  0xb4 ; '.'
0000000000006ea1         db  0xe7 ; '.'
0000000000006ea2         db  0xff ; '.'
0000000000006ea3         db  0xff ; '.'
0000000000006ea4         db  0x3c ; '<'
0000000000006ea5         db  0x0d ; '.'
0000000000006ea6         db  0x00 ; '.'
0000000000006ea7         db  0x00 ; '.'
0000000000006ea8         db  0xd4 ; '.'
0000000000006ea9         db  0xeb ; '.'
0000000000006eaa         db  0xff ; '.'
0000000000006eab         db  0xff ; '.'
0000000000006eac         db  0x8c ; '.'
0000000000006ead         db  0x0d ; '.'
0000000000006eae         db  0x00 ; '.'
0000000000006eaf         db  0x00 ; '.'
0000000000006eb0         db  0x54 ; 'T'
0000000000006eb1         db  0xec ; '.'
0000000000006eb2         db  0xff ; '.'
0000000000006eb3         db  0xff ; '.'
0000000000006eb4         db  0xc4 ; '.'
0000000000006eb5         db  0x0d ; '.'
0000000000006eb6         db  0x00 ; '.'
0000000000006eb7         db  0x00 ; '.'
0000000000006eb8         db  0x94 ; '.'
0000000000006eb9         db  0xec ; '.'
0000000000006eba         db  0xff ; '.'
0000000000006ebb         db  0xff ; '.'
0000000000006ebc         db  0xe4 ; '.'
0000000000006ebd         db  0x0d ; '.'
0000000000006ebe         db  0x00 ; '.'
0000000000006ebf         db  0x00 ; '.'
0000000000006ec0         db  0xf4 ; '.'
0000000000006ec1         db  0xec ; '.'
0000000000006ec2         db  0xff ; '.'
0000000000006ec3         db  0xff ; '.'
0000000000006ec4         db  0x14 ; '.'
0000000000006ec5         db  0x0e ; '.'
0000000000006ec6         db  0x00 ; '.'
0000000000006ec7         db  0x00 ; '.'
0000000000006ec8         db  0x84 ; '.'
0000000000006ec9         db  0xed ; '.'
0000000000006eca         db  0xff ; '.'
0000000000006ecb         db  0xff ; '.'
0000000000006ecc         db  0x54 ; 'T'
0000000000006ecd         db  0x0e ; '.'
0000000000006ece         db  0x00 ; '.'
0000000000006ecf         db  0x00 ; '.'
0000000000006ed0         db  0x04 ; '.'
0000000000006ed1         db  0xee ; '.'
0000000000006ed2         db  0xff ; '.'
0000000000006ed3         db  0xff ; '.'
0000000000006ed4         db  0xa4 ; '.'
0000000000006ed5         db  0x0e ; '.'
0000000000006ed6         db  0x00 ; '.'
0000000000006ed7         db  0x00 ; '.'
0000000000006ed8         db  0x64 ; 'd'
0000000000006ed9         db  0xee ; '.'
0000000000006eda         db  0xff ; '.'
0000000000006edb         db  0xff ; '.'
0000000000006edc         db  0xc4 ; '.'
0000000000006edd         db  0x0e ; '.'
0000000000006ede         db  0x00 ; '.'
0000000000006edf         db  0x00 ; '.'
0000000000006ee0         db  0xa4 ; '.'
0000000000006ee1         db  0xee ; '.'
0000000000006ee2         db  0xff ; '.'
0000000000006ee3         db  0xff ; '.'
0000000000006ee4         db  0xe4 ; '.'
0000000000006ee5         db  0x0e ; '.'
0000000000006ee6         db  0x00 ; '.'
0000000000006ee7         db  0x00 ; '.'
0000000000006ee8         db  0x14 ; '.'
0000000000006ee9         db  0xef ; '.'
0000000000006eea         db  0xff ; '.'
0000000000006eeb         db  0xff ; '.'
0000000000006eec         db  0x2c ; ','
0000000000006eed         db  0x0f ; '.'
0000000000006eee         db  0x00 ; '.'
0000000000006eef         db  0x00 ; '.'
0000000000006ef0         db  0x24 ; '$'
0000000000006ef1         db  0xef ; '.'
0000000000006ef2         db  0xff ; '.'
0000000000006ef3         db  0xff ; '.'
0000000000006ef4         db  0x44 ; 'D'
0000000000006ef5         db  0x0f ; '.'
0000000000006ef6         db  0x00 ; '.'
0000000000006ef7         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6ef8; 0x7bb8[ (3264 bytes)
        ; File offset : [28408; 31672[ (3264 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006ef8         dd         0x00000014                                  ; Length of the record
0000000000006efc         dd         0x00000000                                  ; CIE ID
0000000000006f00         db         0x01                                        ; Version
0000000000006f01         db         "zR", 0                                     ; Augmentation String
0000000000006f04         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006f05         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006f06         db         0x10                                        ; Return address register
0000000000006f07         db         0x01                                        ; Augmentation data length
0000000000006f08         db         0x1b                                        ; FDE encoding
0000000000006f09         db  0x0c ; '.'
0000000000006f0a         db  0x07 ; '.'
0000000000006f0b         db  0x08 ; '.'
0000000000006f0c         db  0x90 ; '.'
0000000000006f0d         db  0x01 ; '.'
0000000000006f0e         db  0x07 ; '.'
0000000000006f0f         db  0x10 ; '.'
0000000000006f10         dd         0x00000014                                  ; Length of the record
0000000000006f14         dd         0x0000001c                                  ; FDE: parent CIE at 0x6ef8 (FDE encoding = 0x1B)
0000000000006f18         db         0xe8, 0xb0, 2 dup (0xff)                    ; begin 0x2000
0000000000006f1c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x202b)
0000000000006f20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f21         align      8
0000000000006f28         dd         0x00000014                                  ; Length of the record
0000000000006f2c         dd         0x00000000                                  ; CIE ID
0000000000006f30         db         0x01                                        ; Version
0000000000006f31         db         "zR", 0                                     ; Augmentation String
0000000000006f34         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006f35         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006f36         db         0x10                                        ; Return address register
0000000000006f37         db         0x01                                        ; Augmentation data length
0000000000006f38         db         0x1b                                        ; FDE encoding
0000000000006f39         db  0x0c ; '.'
0000000000006f3a         db  0x07 ; '.'
0000000000006f3b         db  0x08 ; '.'
0000000000006f3c         db  0x90 ; '.'
0000000000006f3d         db  0x01 ; '.'
0000000000006f3e         db  0x00 ; '.'
0000000000006f3f         db  0x00 ; '.'
0000000000006f40         dd         0x00000024                                  ; Length of the record
0000000000006f44         dd         0x0000001c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000006f48         db         0x78, 0xa5, 2 dup (0xff)                    ; begin 0x14c0
0000000000006f4c         db         0x30, 0x03, 2 dup (0x00)                    ; length 0x330 (end at 0x17f0)
0000000000006f50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f51         db  0x0e ; '.'
0000000000006f52         db  0x10 ; '.'
0000000000006f53         db  0x46 ; 'F'
0000000000006f54         db  0x0e ; '.'
0000000000006f55         db  0x18 ; '.'
0000000000006f56         db  0x4a ; 'J'
0000000000006f57         db  0x0f ; '.'
0000000000006f58         db  0x0b ; '.'
0000000000006f59         db  0x77 ; 'w'
0000000000006f5a         db  0x08 ; '.'
0000000000006f5b         db  0x80 ; '.'
0000000000006f5c         db  0x00 ; '.'
0000000000006f5d         db  0x3f ; '?'
0000000000006f5e         db  0x1a ; '.'
0000000000006f5f         db  0x3b ; ';'
0000000000006f60         db  0x2a ; '*'
0000000000006f61         db  0x33 ; '3'
0000000000006f62         db  0x24 ; '$'
0000000000006f63         db  0x22 ; '"'
0000000000006f64         db  0x00 ; '.'
0000000000006f65         db  0x00 ; '.'
0000000000006f66         db  0x00 ; '.'
0000000000006f67         db  0x00 ; '.'
0000000000006f68         dd         0x00000014                                  ; Length of the record
0000000000006f6c         dd         0x00000044                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000006f70         db         0x80, 0xa8, 2 dup (0xff)                    ; begin 0x17f0
0000000000006f74         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x17f8)
0000000000006f78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f79         align      128
0000000000006f80         dd         0x00000028                                  ; Length of the record
0000000000006f84         dd         0x0000005c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000006f88         db         0x88, 0xb1, 2 dup (0xff)                    ; begin 0x2110
0000000000006f8c         db         0xda, 0x03, 2 dup (0x00)                    ; length 0x3da (end at 0x24ea)
0000000000006f90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f91         db  0x42 ; 'B'
0000000000006f92         db  0x0e ; '.'
0000000000006f93         db  0x10 ; '.'
0000000000006f94         db  0x8d ; '.'
0000000000006f95         db  0x02 ; '.'
0000000000006f96         db  0x42 ; 'B'
0000000000006f97         db  0x0e ; '.'
0000000000006f98         db  0x18 ; '.'
0000000000006f99         db  0x8c ; '.'
0000000000006f9a         db  0x03 ; '.'
0000000000006f9b         db  0x46 ; 'F'
0000000000006f9c         db  0x0e ; '.'
0000000000006f9d         db  0x20 ; ' '
0000000000006f9e         db  0x86 ; '.'
0000000000006f9f         db  0x04 ; '.'
0000000000006fa0         db  0x41 ; 'A'
0000000000006fa1         db  0x0e ; '.'
0000000000006fa2         db  0x28 ; '('
0000000000006fa3         db  0x83 ; '.'
0000000000006fa4         db  0x05 ; '.'
0000000000006fa5         db  0x49 ; 'I'
0000000000006fa6         db  0x0e ; '.'
0000000000006fa7         db  0xb0 ; '.'
0000000000006fa8         db  0x01 ; '.'
0000000000006fa9         db  0x00 ; '.'
0000000000006faa         db  0x00 ; '.'
0000000000006fab         db  0x00 ; '.'
0000000000006fac         dd         0x00000050                                  ; Length of the record
0000000000006fb0         dd         0x00000088                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000006fb4         db         0x4c, 0xa8, 2 dup (0xff)                    ; begin 0x1800
0000000000006fb8         db         0xf9, 0x07, 2 dup (0x00)                    ; length 0x7f9 (end at 0x1ff9)
0000000000006fbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fbd         db  0x42 ; 'B'
0000000000006fbe         db  0x0e ; '.'
0000000000006fbf         db  0x10 ; '.'
0000000000006fc0         db  0x8f ; '.'
0000000000006fc1         db  0x02 ; '.'
0000000000006fc2         db  0x42 ; 'B'
0000000000006fc3         db  0x0e ; '.'
0000000000006fc4         db  0x18 ; '.'
0000000000006fc5         db  0x8e ; '.'
0000000000006fc6         db  0x03 ; '.'
0000000000006fc7         db  0x42 ; 'B'
0000000000006fc8         db  0x0e ; '.'
0000000000006fc9         db  0x20 ; ' '
0000000000006fca         db  0x8d ; '.'
0000000000006fcb         db  0x04 ; '.'
0000000000006fcc         db  0x42 ; 'B'
0000000000006fcd         db  0x0e ; '.'
0000000000006fce         db  0x28 ; '('
0000000000006fcf         db  0x8c ; '.'
0000000000006fd0         db  0x05 ; '.'
0000000000006fd1         db  0x44 ; 'D'
0000000000006fd2         db  0x0e ; '.'
0000000000006fd3         db  0x30 ; '0'
0000000000006fd4         db  0x86 ; '.'
0000000000006fd5         db  0x06 ; '.'
0000000000006fd6         db  0x41 ; 'A'
0000000000006fd7         db  0x0e ; '.'
0000000000006fd8         db  0x38 ; '8'
0000000000006fd9         db  0x83 ; '.'
0000000000006fda         db  0x07 ; '.'
0000000000006fdb         db  0x4e ; 'N'
0000000000006fdc         db  0x0e ; '.'
0000000000006fdd         db  0xb0 ; '.'
0000000000006fde         db  0x01 ; '.'
0000000000006fdf         db  0x03 ; '.'
0000000000006fe0         db  0xd2 ; '.'
0000000000006fe1         db  0x03 ; '.'
0000000000006fe2         db  0x0a ; '.'
0000000000006fe3         db  0x0e ; '.'
0000000000006fe4         db  0x38 ; '8'
0000000000006fe5         db  0x41 ; 'A'
0000000000006fe6         db  0x0e ; '.'
0000000000006fe7         db  0x30 ; '0'
0000000000006fe8         db  0x41 ; 'A'
0000000000006fe9         db  0x0e ; '.'
0000000000006fea         db  0x28 ; '('
0000000000006feb         db  0x42 ; 'B'
0000000000006fec         db  0x0e ; '.'
0000000000006fed         db  0x20 ; ' '
0000000000006fee         db  0x42 ; 'B'
0000000000006fef         db  0x0e ; '.'
0000000000006ff0         db  0x18 ; '.'
0000000000006ff1         db  0x42 ; 'B'
0000000000006ff2         db  0x0e ; '.'
0000000000006ff3         db  0x10 ; '.'
0000000000006ff4         db  0x42 ; 'B'
0000000000006ff5         db  0x0e ; '.'
0000000000006ff6         db  0x08 ; '.'
0000000000006ff7         db  0x41 ; 'A'
0000000000006ff8         db  0x0b ; '.'
0000000000006ff9         db  0x00 ; '.'
0000000000006ffa         db  0x00 ; '.'
0000000000006ffb         db  0x00 ; '.'
0000000000006ffc         db  0x00 ; '.'
0000000000006ffd         db  0x00 ; '.'
0000000000006ffe         db  0x00 ; '.'
0000000000006fff         db  0x00 ; '.'
0000000000007000         dd         0x00000010                                  ; Length of the record
0000000000007004         dd         0x000000dc                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007008         db         0xe8, 0xb4, 2 dup (0xff)                    ; begin 0x24f0
000000000000700c         db         0x08, 0x01, 2 dup (0x00)                    ; length 0x108 (end at 0x25f8)
0000000000007010         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007011         align      4
0000000000007014         dd         0x00000010                                  ; Length of the record
0000000000007018         dd         0x000000f0                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000701c         db         0xe4, 0xb5, 2 dup (0xff)                    ; begin 0x2600
0000000000007020         db         0xb5, 0x01, 2 dup (0x00)                    ; length 0x1b5 (end at 0x27b5)
0000000000007024         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007025         align      8
0000000000007028         dd         0x00000048                                  ; Length of the record
000000000000702c         dd         0x00000104                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007030         db         0x90, 0xb7, 2 dup (0xff)                    ; begin 0x27c0
0000000000007034         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0x2847)
0000000000007038         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007039         db  0x42 ; 'B'
000000000000703a         db  0x0e ; '.'
000000000000703b         db  0x10 ; '.'
000000000000703c         db  0x8e ; '.'
000000000000703d         db  0x02 ; '.'
000000000000703e         db  0x42 ; 'B'
000000000000703f         db  0x0e ; '.'
0000000000007040         db  0x18 ; '.'
0000000000007041         db  0x8d ; '.'
0000000000007042         db  0x03 ; '.'
0000000000007043         db  0x49 ; 'I'
0000000000007044         db  0x0e ; '.'
0000000000007045         db  0x20 ; ' '
0000000000007046         db  0x8c ; '.'
0000000000007047         db  0x04 ; '.'
0000000000007048         db  0x41 ; 'A'
0000000000007049         db  0x0e ; '.'
000000000000704a         db  0x28 ; '('
000000000000704b         db  0x86 ; '.'
000000000000704c         db  0x05 ; '.'
000000000000704d         db  0x41 ; 'A'
000000000000704e         db  0x0e ; '.'
000000000000704f         db  0x30 ; '0'
0000000000007050         db  0x83 ; '.'
0000000000007051         db  0x06 ; '.'
0000000000007052         db  0x6f ; 'o'
0000000000007053         db  0x0a ; '.'
0000000000007054         db  0x0e ; '.'
0000000000007055         db  0x28 ; '('
0000000000007056         db  0x44 ; 'D'
0000000000007057         db  0x0e ; '.'
0000000000007058         db  0x20 ; ' '
0000000000007059         db  0x42 ; 'B'
000000000000705a         db  0x0e ; '.'
000000000000705b         db  0x18 ; '.'
000000000000705c         db  0x42 ; 'B'
000000000000705d         db  0x0e ; '.'
000000000000705e         db  0x10 ; '.'
000000000000705f         db  0x42 ; 'B'
0000000000007060         db  0x0e ; '.'
0000000000007061         db  0x08 ; '.'
0000000000007062         db  0x48 ; 'H'
0000000000007063         db  0x0b ; '.'
0000000000007064         db  0x6c ; 'l'
0000000000007065         db  0x0e ; '.'
0000000000007066         db  0x28 ; '('
0000000000007067         db  0x44 ; 'D'
0000000000007068         db  0x0e ; '.'
0000000000007069         db  0x20 ; ' '
000000000000706a         db  0x42 ; 'B'
000000000000706b         db  0x0e ; '.'
000000000000706c         db  0x18 ; '.'
000000000000706d         db  0x42 ; 'B'
000000000000706e         db  0x0e ; '.'
000000000000706f         db  0x10 ; '.'
0000000000007070         db  0x42 ; 'B'
0000000000007071         db  0x0e ; '.'
0000000000007072         db  0x08 ; '.'
0000000000007073         db  0x00 ; '.'
0000000000007074         dd         0x00000010                                  ; Length of the record
0000000000007078         dd         0x00000150                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000707c         db         0xd4, 0xb7, 2 dup (0xff)                    ; begin 0x2850
0000000000007080         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x2865)
0000000000007084         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007085         align      8
0000000000007088         dd         0x00000010                                  ; Length of the record
000000000000708c         dd         0x00000164                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007090         db         0xe0, 0xb7, 2 dup (0xff)                    ; begin 0x2870
0000000000007094         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x2877)
0000000000007098         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007099         align      4
000000000000709c         dd         0x00000048                                  ; Length of the record
00000000000070a0         dd         0x00000178                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000070a4         db         0xdc, 0xb7, 2 dup (0xff)                    ; begin 0x2880
00000000000070a8         db         0xad, 0x02, 2 dup (0x00)                    ; length 0x2ad (end at 0x2b2d)
00000000000070ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070ad         db  0x42 ; 'B'
00000000000070ae         db  0x0e ; '.'
00000000000070af         db  0x10 ; '.'
00000000000070b0         db  0x8f ; '.'
00000000000070b1         db  0x02 ; '.'
00000000000070b2         db  0x42 ; 'B'
00000000000070b3         db  0x0e ; '.'
00000000000070b4         db  0x18 ; '.'
00000000000070b5         db  0x8e ; '.'
00000000000070b6         db  0x03 ; '.'
00000000000070b7         db  0x45 ; 'E'
00000000000070b8         db  0x0e ; '.'
00000000000070b9         db  0x20 ; ' '
00000000000070ba         db  0x8d ; '.'
00000000000070bb         db  0x04 ; '.'
00000000000070bc         db  0x42 ; 'B'
00000000000070bd         db  0x0e ; '.'
00000000000070be         db  0x28 ; '('
00000000000070bf         db  0x8c ; '.'
00000000000070c0         db  0x05 ; '.'
00000000000070c1         db  0x44 ; 'D'
00000000000070c2         db  0x0e ; '.'
00000000000070c3         db  0x30 ; '0'
00000000000070c4         db  0x86 ; '.'
00000000000070c5         db  0x06 ; '.'
00000000000070c6         db  0x41 ; 'A'
00000000000070c7         db  0x0e ; '.'
00000000000070c8         db  0x38 ; '8'
00000000000070c9         db  0x83 ; '.'
00000000000070ca         db  0x07 ; '.'
00000000000070cb         db  0x47 ; 'G'
00000000000070cc         db  0x0e ; '.'
00000000000070cd         db  0x70 ; 'p'
00000000000070ce         db  0x03 ; '.'
00000000000070cf         db  0x21 ; '!'
00000000000070d0         db  0x01 ; '.'
00000000000070d1         db  0x0a ; '.'
00000000000070d2         db  0x0e ; '.'
00000000000070d3         db  0x38 ; '8'
00000000000070d4         db  0x41 ; 'A'
00000000000070d5         db  0x0e ; '.'
00000000000070d6         db  0x30 ; '0'
00000000000070d7         db  0x41 ; 'A'
00000000000070d8         db  0x0e ; '.'
00000000000070d9         db  0x28 ; '('
00000000000070da         db  0x42 ; 'B'
00000000000070db         db  0x0e ; '.'
00000000000070dc         db  0x20 ; ' '
00000000000070dd         db  0x42 ; 'B'
00000000000070de         db  0x0e ; '.'
00000000000070df         db  0x18 ; '.'
00000000000070e0         db  0x42 ; 'B'
00000000000070e1         db  0x0e ; '.'
00000000000070e2         db  0x10 ; '.'
00000000000070e3         db  0x42 ; 'B'
00000000000070e4         db  0x0e ; '.'
00000000000070e5         db  0x08 ; '.'
00000000000070e6         db  0x46 ; 'F'
00000000000070e7         db  0x0b ; '.'
00000000000070e8         dd         0x00000044                                  ; Length of the record
00000000000070ec         dd         0x000001c4                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000070f0         db         0x40, 0xba, 2 dup (0xff)                    ; begin 0x2b30
00000000000070f4         db         0xbf, 3 dup (0x00)                          ; length 0xbf (end at 0x2bef)
00000000000070f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070f9         db  0x42 ; 'B'
00000000000070fa         db  0x0e ; '.'
00000000000070fb         db  0x10 ; '.'
00000000000070fc         db  0x8e ; '.'
00000000000070fd         db  0x02 ; '.'
00000000000070fe         db  0x42 ; 'B'
00000000000070ff         db  0x0e ; '.'
0000000000007100         db  0x18 ; '.'
0000000000007101         db  0x8d ; '.'
0000000000007102         db  0x03 ; '.'
0000000000007103         db  0x45 ; 'E'
0000000000007104         db  0x0e ; '.'
0000000000007105         db  0x20 ; ' '
0000000000007106         db  0x8c ; '.'
0000000000007107         db  0x04 ; '.'
0000000000007108         db  0x41 ; 'A'
0000000000007109         db  0x0e ; '.'
000000000000710a         db  0x28 ; '('
000000000000710b         db  0x86 ; '.'
000000000000710c         db  0x05 ; '.'
000000000000710d         db  0x44 ; 'D'
000000000000710e         db  0x0e ; '.'
000000000000710f         db  0x30 ; '0'
0000000000007110         db  0x83 ; '.'
0000000000007111         db  0x06 ; '.'
0000000000007112         db  0x4d ; 'M'
0000000000007113         db  0x0e ; '.'
0000000000007114         db  0x50 ; 'P'
0000000000007115         db  0x02 ; '.'
0000000000007116         db  0x76 ; 'v'
0000000000007117         db  0x0a ; '.'
0000000000007118         db  0x0e ; '.'
0000000000007119         db  0x30 ; '0'
000000000000711a         db  0x41 ; 'A'
000000000000711b         db  0x0e ; '.'
000000000000711c         db  0x28 ; '('
000000000000711d         db  0x41 ; 'A'
000000000000711e         db  0x0e ; '.'
000000000000711f         db  0x20 ; ' '
0000000000007120         db  0x42 ; 'B'
0000000000007121         db  0x0e ; '.'
0000000000007122         db  0x18 ; '.'
0000000000007123         db  0x42 ; 'B'
0000000000007124         db  0x0e ; '.'
0000000000007125         db  0x10 ; '.'
0000000000007126         db  0x42 ; 'B'
0000000000007127         db  0x0e ; '.'
0000000000007128         db  0x08 ; '.'
0000000000007129         db  0x47 ; 'G'
000000000000712a         db  0x0b ; '.'
000000000000712b         db  0x00 ; '.'
000000000000712c         db  0x00 ; '.'
000000000000712d         db  0x00 ; '.'
000000000000712e         db  0x00 ; '.'
000000000000712f         db  0x00 ; '.'
0000000000007130         dd         0x00000010                                  ; Length of the record
0000000000007134         dd         0x0000020c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007138         db         0xb8, 0xba, 2 dup (0xff)                    ; begin 0x2bf0
000000000000713c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2bf8)
0000000000007140         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007141         align      4
0000000000007144         dd         0x00000010                                  ; Length of the record
0000000000007148         dd         0x00000220                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000714c         db         0xb4, 0xba, 2 dup (0xff)                    ; begin 0x2c00
0000000000007150         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2c08)
0000000000007154         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007155         align      8
0000000000007158         dd         0x0000002c                                  ; Length of the record
000000000000715c         dd         0x00000234                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007160         db         0xb0, 0xba, 2 dup (0xff)                    ; begin 0x2c10
0000000000007164         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2cb4)
0000000000007168         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007169         db  0x41 ; 'A'
000000000000716a         db  0x0e ; '.'
000000000000716b         db  0x10 ; '.'
000000000000716c         db  0x86 ; '.'
000000000000716d         db  0x02 ; '.'
000000000000716e         db  0x41 ; 'A'
000000000000716f         db  0x0e ; '.'
0000000000007170         db  0x18 ; '.'
0000000000007171         db  0x83 ; '.'
0000000000007172         db  0x03 ; '.'
0000000000007173         db  0x44 ; 'D'
0000000000007174         db  0x0e ; '.'
0000000000007175         db  0x20 ; ' '
0000000000007176         db  0x7a ; 'z'
0000000000007177         db  0x0a ; '.'
0000000000007178         db  0x0e ; '.'
0000000000007179         db  0x18 ; '.'
000000000000717a         db  0x41 ; 'A'
000000000000717b         db  0x0e ; '.'
000000000000717c         db  0x10 ; '.'
000000000000717d         db  0x41 ; 'A'
000000000000717e         db  0x0e ; '.'
000000000000717f         db  0x08 ; '.'
0000000000007180         db  0x41 ; 'A'
0000000000007181         db  0x0b ; '.'
0000000000007182         db  0x00 ; '.'
0000000000007183         db  0x00 ; '.'
0000000000007184         db  0x00 ; '.'
0000000000007185         db  0x00 ; '.'
0000000000007186         db  0x00 ; '.'
0000000000007187         db  0x00 ; '.'
0000000000007188         dd         0x00000010                                  ; Length of the record
000000000000718c         dd         0x00000264                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007190         db         0x30, 0xbb, 2 dup (0xff)                    ; begin 0x2cc0
0000000000007194         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2cc5)
0000000000007198         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007199         align      4
000000000000719c         dd         0x00000018                                  ; Length of the record
00000000000071a0         dd         0x00000278                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000071a4         db         0x2c, 0xbb, 2 dup (0xff)                    ; begin 0x2cd0
00000000000071a8         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x2cf2)
00000000000071ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071ad         db  0x46 ; 'F'
00000000000071ae         db  0x0e ; '.'
00000000000071af         db  0x10 ; '.'
00000000000071b0         db  0x83 ; '.'
00000000000071b1         db  0x02 ; '.'
00000000000071b2         db  0x4e ; 'N'
00000000000071b3         db  0xc3 ; '.'
00000000000071b4         db  0x0e ; '.'
00000000000071b5         db  0x08 ; '.'
00000000000071b6         db  0x00 ; '.'
00000000000071b7         db  0x00 ; '.'
00000000000071b8         dd         0x0000001c                                  ; Length of the record
00000000000071bc         dd         0x00000294                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000071c0         db         0x40, 0xbb, 2 dup (0xff)                    ; begin 0x2d00
00000000000071c4         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2d9f)
00000000000071c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071c9         db  0x44 ; 'D'
00000000000071ca         db  0x0e ; '.'
00000000000071cb         db  0x10 ; '.'
00000000000071cc         db  0x83 ; '.'
00000000000071cd         db  0x02 ; '.'
00000000000071ce         db  0x02 ; '.'
00000000000071cf         db  0x78 ; 'x'
00000000000071d0         db  0x0a ; '.'
00000000000071d1         db  0x0e ; '.'
00000000000071d2         db  0x08 ; '.'
00000000000071d3         db  0x41 ; 'A'
00000000000071d4         db  0x0b ; '.'
00000000000071d5         db  0x00 ; '.'
00000000000071d6         db  0x00 ; '.'
00000000000071d7         db  0x00 ; '.'
00000000000071d8         dd         0x00000040                                  ; Length of the record
00000000000071dc         dd         0x000002b4                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000071e0         db         0xc0, 0xbb, 2 dup (0xff)                    ; begin 0x2da0
00000000000071e4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2e87)
00000000000071e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071e9         db  0x41 ; 'A'
00000000000071ea         db  0x0e ; '.'
00000000000071eb         db  0x10 ; '.'
00000000000071ec         db  0x86 ; '.'
00000000000071ed         db  0x02 ; '.'
00000000000071ee         db  0x41 ; 'A'
00000000000071ef         db  0x0e ; '.'
00000000000071f0         db  0x18 ; '.'
00000000000071f1         db  0x83 ; '.'
00000000000071f2         db  0x03 ; '.'
00000000000071f3         db  0x49 ; 'I'
00000000000071f4         db  0x0e ; '.'
00000000000071f5         db  0x20 ; ' '
00000000000071f6         db  0x6e ; 'n'
00000000000071f7         db  0x0a ; '.'
00000000000071f8         db  0x0e ; '.'
00000000000071f9         db  0x18 ; '.'
00000000000071fa         db  0x41 ; 'A'
00000000000071fb         db  0x0e ; '.'
00000000000071fc         db  0x10 ; '.'
00000000000071fd         db  0x41 ; 'A'
00000000000071fe         db  0x0e ; '.'
00000000000071ff         db  0x08 ; '.'
0000000000007200         db  0x45 ; 'E'
0000000000007201         db  0x0b ; '.'
0000000000007202         db  0x02 ; '.'
0000000000007203         db  0x4a ; 'J'
0000000000007204         db  0x0a ; '.'
0000000000007205         db  0x0e ; '.'
0000000000007206         db  0x18 ; '.'
0000000000007207         db  0x41 ; 'A'
0000000000007208         db  0x0e ; '.'
0000000000007209         db  0x10 ; '.'
000000000000720a         db  0x41 ; 'A'
000000000000720b         db  0x0e ; '.'
000000000000720c         db  0x08 ; '.'
000000000000720d         db  0x44 ; 'D'
000000000000720e         db  0x0b ; '.'
000000000000720f         db  0x02 ; '.'
0000000000007210         db  0x54 ; 'T'
0000000000007211         db  0x0e ; '.'
0000000000007212         db  0x18 ; '.'
0000000000007213         db  0x41 ; 'A'
0000000000007214         db  0x0e ; '.'
0000000000007215         db  0x10 ; '.'
0000000000007216         db  0x41 ; 'A'
0000000000007217         db  0x0e ; '.'
0000000000007218         db  0x08 ; '.'
0000000000007219         db  0x00 ; '.'
000000000000721a         db  0x00 ; '.'
000000000000721b         db  0x00 ; '.'
000000000000721c         dd         0x00000074                                  ; Length of the record
0000000000007220         dd         0x000002f8                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007224         db         0x6c, 0xbc, 2 dup (0xff)                    ; begin 0x2e90
0000000000007228         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x40c4)
000000000000722c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000722d         db  0x42 ; 'B'
000000000000722e         db  0x0e ; '.'
000000000000722f         db  0x10 ; '.'
0000000000007230         db  0x8f ; '.'
0000000000007231         db  0x02 ; '.'
0000000000007232         db  0x42 ; 'B'
0000000000007233         db  0x0e ; '.'
0000000000007234         db  0x18 ; '.'
0000000000007235         db  0x8e ; '.'
0000000000007236         db  0x03 ; '.'
0000000000007237         db  0x45 ; 'E'
0000000000007238         db  0x0e ; '.'
0000000000007239         db  0x20 ; ' '
000000000000723a         db  0x8d ; '.'
000000000000723b         db  0x04 ; '.'
000000000000723c         db  0x42 ; 'B'
000000000000723d         db  0x0e ; '.'
000000000000723e         db  0x28 ; '('
000000000000723f         db  0x8c ; '.'
0000000000007240         db  0x05 ; '.'
0000000000007241         db  0x44 ; 'D'
0000000000007242         db  0x0e ; '.'
0000000000007243         db  0x30 ; '0'
0000000000007244         db  0x86 ; '.'
0000000000007245         db  0x06 ; '.'
0000000000007246         db  0x41 ; 'A'
0000000000007247         db  0x0e ; '.'
0000000000007248         db  0x38 ; '8'
0000000000007249         db  0x83 ; '.'
000000000000724a         db  0x07 ; '.'
000000000000724b         db  0x53 ; 'S'
000000000000724c         db  0x0e ; '.'
000000000000724d         db  0xf0 ; '.'
000000000000724e         db  0x01 ; '.'
000000000000724f         db  0x03 ; '.'
0000000000007250         db  0x81 ; '.'
0000000000007251         db  0x0b ; '.'
0000000000007252         db  0x0e ; '.'
0000000000007253         db  0xf8 ; '.'
0000000000007254         db  0x01 ; '.'
0000000000007255         db  0x4a ; 'J'
0000000000007256         db  0x0e ; '.'
0000000000007257         db  0x80 ; '.'
0000000000007258         db  0x02 ; '.'
0000000000007259         db  0x44 ; 'D'
000000000000725a         db  0x0e ; '.'
000000000000725b         db  0x88 ; '.'
000000000000725c         db  0x02 ; '.'
000000000000725d         db  0x45 ; 'E'
000000000000725e         db  0x0e ; '.'
000000000000725f         db  0x90 ; '.'
0000000000007260         db  0x02 ; '.'
0000000000007261         db  0x5f ; '_'
0000000000007262         db  0x0e ; '.'
0000000000007263         db  0xf0 ; '.'
0000000000007264         db  0x01 ; '.'
0000000000007265         db  0x64 ; 'd'
0000000000007266         db  0x0a ; '.'
0000000000007267         db  0x0e ; '.'
0000000000007268         db  0x38 ; '8'
0000000000007269         db  0x41 ; 'A'
000000000000726a         db  0x0e ; '.'
000000000000726b         db  0x30 ; '0'
000000000000726c         db  0x41 ; 'A'
000000000000726d         db  0x0e ; '.'
000000000000726e         db  0x28 ; '('
000000000000726f         db  0x42 ; 'B'
0000000000007270         db  0x0e ; '.'
0000000000007271         db  0x20 ; ' '
0000000000007272         db  0x42 ; 'B'
0000000000007273         db  0x0e ; '.'
0000000000007274         db  0x18 ; '.'
0000000000007275         db  0x42 ; 'B'
0000000000007276         db  0x0e ; '.'
0000000000007277         db  0x10 ; '.'
0000000000007278         db  0x42 ; 'B'
0000000000007279         db  0x0e ; '.'
000000000000727a         db  0x08 ; '.'
000000000000727b         db  0x44 ; 'D'
000000000000727c         db  0x0b ; '.'
000000000000727d         db  0x03 ; '.'
000000000000727e         db  0x99 ; '.'
000000000000727f         db  0x05 ; '.'
0000000000007280         db  0x0e ; '.'
0000000000007281         db  0xf8 ; '.'
0000000000007282         db  0x01 ; '.'
0000000000007283         db  0x4d ; 'M'
0000000000007284         db  0x0e ; '.'
0000000000007285         db  0x80 ; '.'
0000000000007286         db  0x02 ; '.'
0000000000007287         db  0x44 ; 'D'
0000000000007288         db  0x0e ; '.'
0000000000007289         db  0x88 ; '.'
000000000000728a         db  0x02 ; '.'
000000000000728b         db  0x47 ; 'G'
000000000000728c         db  0x0e ; '.'
000000000000728d         db  0x90 ; '.'
000000000000728e         db  0x02 ; '.'
000000000000728f         db  0x5b ; '['
0000000000007290         db  0x0e ; '.'
0000000000007291         db  0xf0 ; '.'
0000000000007292         db  0x01 ; '.'
0000000000007293         db  0x00 ; '.'
0000000000007294         dd         0x00000068                                  ; Length of the record
0000000000007298         dd         0x00000370                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000729c         db         0x34, 0xce, 2 dup (0xff)                    ; begin 0x40d0
00000000000072a0         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x427b)
00000000000072a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072a5         db  0x42 ; 'B'
00000000000072a6         db  0x0e ; '.'
00000000000072a7         db  0x10 ; '.'
00000000000072a8         db  0x8f ; '.'
00000000000072a9         db  0x02 ; '.'
00000000000072aa         db  0x42 ; 'B'
00000000000072ab         db  0x0e ; '.'
00000000000072ac         db  0x18 ; '.'
00000000000072ad         db  0x8e ; '.'
00000000000072ae         db  0x03 ; '.'
00000000000072af         db  0x45 ; 'E'
00000000000072b0         db  0x0e ; '.'
00000000000072b1         db  0x20 ; ' '
00000000000072b2         db  0x8d ; '.'
00000000000072b3         db  0x04 ; '.'
00000000000072b4         db  0x42 ; 'B'
00000000000072b5         db  0x0e ; '.'
00000000000072b6         db  0x28 ; '('
00000000000072b7         db  0x8c ; '.'
00000000000072b8         db  0x05 ; '.'
00000000000072b9         db  0x44 ; 'D'
00000000000072ba         db  0x0e ; '.'
00000000000072bb         db  0x30 ; '0'
00000000000072bc         db  0x86 ; '.'
00000000000072bd         db  0x06 ; '.'
00000000000072be         db  0x41 ; 'A'
00000000000072bf         db  0x0e ; '.'
00000000000072c0         db  0x38 ; '8'
00000000000072c1         db  0x83 ; '.'
00000000000072c2         db  0x07 ; '.'
00000000000072c3         db  0x47 ; 'G'
00000000000072c4         db  0x0e ; '.'
00000000000072c5         db  0x60 ; '`'
00000000000072c6         db  0x02 ; '.'
00000000000072c7         db  0x99 ; '.'
00000000000072c8         db  0x0e ; '.'
00000000000072c9         db  0x68 ; 'h'
00000000000072ca         db  0x5f ; '_'
00000000000072cb         db  0x0e ; '.'
00000000000072cc         db  0x70 ; 'p'
00000000000072cd         db  0x46 ; 'F'
00000000000072ce         db  0x0e ; '.'
00000000000072cf         db  0x78 ; 'x'
00000000000072d0         db  0x42 ; 'B'
00000000000072d1         db  0x0e ; '.'
00000000000072d2         db  0x80 ; '.'
00000000000072d3         db  0x01 ; '.'
00000000000072d4         db  0x59 ; 'Y'
00000000000072d5         db  0x0e ; '.'
00000000000072d6         db  0x60 ; '`'
00000000000072d7         db  0x02 ; '.'
00000000000072d8         db  0x40 ; '@'
00000000000072d9         db  0x0e ; '.'
00000000000072da         db  0x68 ; 'h'
00000000000072db         db  0x4b ; 'K'
00000000000072dc         db  0x0e ; '.'
00000000000072dd         db  0x70 ; 'p'
00000000000072de         db  0x43 ; 'C'
00000000000072df         db  0x0e ; '.'
00000000000072e0         db  0x78 ; 'x'
00000000000072e1         db  0x45 ; 'E'
00000000000072e2         db  0x0e ; '.'
00000000000072e3         db  0x80 ; '.'
00000000000072e4         db  0x01 ; '.'
00000000000072e5         db  0x5e ; '^'
00000000000072e6         db  0x0e ; '.'
00000000000072e7         db  0x60 ; '`'
00000000000072e8         db  0x4c ; 'L'
00000000000072e9         db  0x0a ; '.'
00000000000072ea         db  0x0e ; '.'
00000000000072eb         db  0x38 ; '8'
00000000000072ec         db  0x44 ; 'D'
00000000000072ed         db  0x0e ; '.'
00000000000072ee         db  0x30 ; '0'
00000000000072ef         db  0x41 ; 'A'
00000000000072f0         db  0x0e ; '.'
00000000000072f1         db  0x28 ; '('
00000000000072f2         db  0x42 ; 'B'
00000000000072f3         db  0x0e ; '.'
00000000000072f4         db  0x20 ; ' '
00000000000072f5         db  0x42 ; 'B'
00000000000072f6         db  0x0e ; '.'
00000000000072f7         db  0x18 ; '.'
00000000000072f8         db  0x42 ; 'B'
00000000000072f9         db  0x0e ; '.'
00000000000072fa         db  0x10 ; '.'
00000000000072fb         db  0x42 ; 'B'
00000000000072fc         db  0x0e ; '.'
00000000000072fd         db  0x08 ; '.'
00000000000072fe         db  0x46 ; 'F'
00000000000072ff         db  0x0b ; '.'
0000000000007300         dd         0x00000028                                  ; Length of the record
0000000000007304         dd         0x000003dc                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007308         db         0x78, 0xcf, 2 dup (0xff)                    ; begin 0x4280
000000000000730c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x42b6)
0000000000007310         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007311         db  0x42 ; 'B'
0000000000007312         db  0x0e ; '.'
0000000000007313         db  0x10 ; '.'
0000000000007314         db  0x8c ; '.'
0000000000007315         db  0x02 ; '.'
0000000000007316         db  0x41 ; 'A'
0000000000007317         db  0x0e ; '.'
0000000000007318         db  0x18 ; '.'
0000000000007319         db  0x86 ; '.'
000000000000731a         db  0x03 ; '.'
000000000000731b         db  0x41 ; 'A'
000000000000731c         db  0x0e ; '.'
000000000000731d         db  0x20 ; ' '
000000000000731e         db  0x83 ; '.'
000000000000731f         db  0x04 ; '.'
0000000000007320         db  0x6e ; 'n'
0000000000007321         db  0x0e ; '.'
0000000000007322         db  0x18 ; '.'
0000000000007323         db  0x41 ; 'A'
0000000000007324         db  0x0e ; '.'
0000000000007325         db  0x10 ; '.'
0000000000007326         db  0x42 ; 'B'
0000000000007327         db  0x0e ; '.'
0000000000007328         db  0x08 ; '.'
0000000000007329         db  0x00 ; '.'
000000000000732a         db  0x00 ; '.'
000000000000732b         db  0x00 ; '.'
000000000000732c         dd         0x00000010                                  ; Length of the record
0000000000007330         dd         0x00000408                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007334         db         0x8c, 0xcf, 2 dup (0xff)                    ; begin 0x42c0
0000000000007338         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x42d1)
000000000000733c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000733d         align      64
0000000000007340         dd         0x00000010                                  ; Length of the record
0000000000007344         dd         0x0000041c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007348         db         0x98, 0xcf, 2 dup (0xff)                    ; begin 0x42e0
000000000000734c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x42f1)
0000000000007350         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007351         align      4
0000000000007354         dd         0x00000010                                  ; Length of the record
0000000000007358         dd         0x00000430                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000735c         db         0xa4, 0xcf, 2 dup (0xff)                    ; begin 0x4300
0000000000007360         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4335)
0000000000007364         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007365         align      8
0000000000007368         dd         0x00000010                                  ; Length of the record
000000000000736c         dd         0x00000444                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007370         db         0xd0, 0xcf, 2 dup (0xff)                    ; begin 0x4340
0000000000007374         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4355)
0000000000007378         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007379         align      4
000000000000737c         dd         0x00000010                                  ; Length of the record
0000000000007380         dd         0x00000458                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007384         db         0xdc, 0xcf, 2 dup (0xff)                    ; begin 0x4360
0000000000007388         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4390)
000000000000738c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000738d         db  0x6b ; 'k'
000000000000738e         db  0x0e ; '.'
000000000000738f         db  0x10 ; '.'
0000000000007390         dd         0x00000050                                  ; Length of the record
0000000000007394         dd         0x0000046c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007398         db         0xf8, 0xcf, 2 dup (0xff)                    ; begin 0x4390
000000000000739c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4404)
00000000000073a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073a1         db  0x42 ; 'B'
00000000000073a2         db  0x0e ; '.'
00000000000073a3         db  0x10 ; '.'
00000000000073a4         db  0x8f ; '.'
00000000000073a5         db  0x02 ; '.'
00000000000073a6         db  0x42 ; 'B'
00000000000073a7         db  0x0e ; '.'
00000000000073a8         db  0x18 ; '.'
00000000000073a9         db  0x8e ; '.'
00000000000073aa         db  0x03 ; '.'
00000000000073ab         db  0x49 ; 'I'
00000000000073ac         db  0x0e ; '.'
00000000000073ad         db  0x20 ; ' '
00000000000073ae         db  0x8d ; '.'
00000000000073af         db  0x04 ; '.'
00000000000073b0         db  0x42 ; 'B'
00000000000073b1         db  0x0e ; '.'
00000000000073b2         db  0x28 ; '('
00000000000073b3         db  0x8c ; '.'
00000000000073b4         db  0x05 ; '.'
00000000000073b5         db  0x44 ; 'D'
00000000000073b6         db  0x0e ; '.'
00000000000073b7         db  0x30 ; '0'
00000000000073b8         db  0x86 ; '.'
00000000000073b9         db  0x06 ; '.'
00000000000073ba         db  0x41 ; 'A'
00000000000073bb         db  0x0e ; '.'
00000000000073bc         db  0x38 ; '8'
00000000000073bd         db  0x83 ; '.'
00000000000073be         db  0x07 ; '.'
00000000000073bf         db  0x4d ; 'M'
00000000000073c0         db  0x0e ; '.'
00000000000073c1         db  0x50 ; 'P'
00000000000073c2         db  0x5f ; '_'
00000000000073c3         db  0x0e ; '.'
00000000000073c4         db  0x58 ; 'X'
00000000000073c5         db  0x47 ; 'G'
00000000000073c6         db  0x0e ; '.'
00000000000073c7         db  0x60 ; '`'
00000000000073c8         db  0x46 ; 'F'
00000000000073c9         db  0x0e ; '.'
00000000000073ca         db  0x68 ; 'h'
00000000000073cb         db  0x44 ; 'D'
00000000000073cc         db  0x0e ; '.'
00000000000073cd         db  0x70 ; 'p'
00000000000073ce         db  0x58 ; 'X'
00000000000073cf         db  0x0e ; '.'
00000000000073d0         db  0x38 ; '8'
00000000000073d1         db  0x41 ; 'A'
00000000000073d2         db  0x0e ; '.'
00000000000073d3         db  0x30 ; '0'
00000000000073d4         db  0x41 ; 'A'
00000000000073d5         db  0x0e ; '.'
00000000000073d6         db  0x28 ; '('
00000000000073d7         db  0x42 ; 'B'
00000000000073d8         db  0x0e ; '.'
00000000000073d9         db  0x20 ; ' '
00000000000073da         db  0x42 ; 'B'
00000000000073db         db  0x0e ; '.'
00000000000073dc         db  0x18 ; '.'
00000000000073dd         db  0x42 ; 'B'
00000000000073de         db  0x0e ; '.'
00000000000073df         db  0x10 ; '.'
00000000000073e0         db  0x42 ; 'B'
00000000000073e1         db  0x0e ; '.'
00000000000073e2         db  0x08 ; '.'
00000000000073e3         db  0x00 ; '.'
00000000000073e4         dd         0x00000068                                  ; Length of the record
00000000000073e8         dd         0x000004c0                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000073ec         db         0x24, 0xd0, 2 dup (0xff)                    ; begin 0x4410
00000000000073f0         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x44f3)
00000000000073f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073f5         db  0x42 ; 'B'
00000000000073f6         db  0x0e ; '.'
00000000000073f7         db  0x10 ; '.'
00000000000073f8         db  0x8f ; '.'
00000000000073f9         db  0x02 ; '.'
00000000000073fa         db  0x42 ; 'B'
00000000000073fb         db  0x0e ; '.'
00000000000073fc         db  0x18 ; '.'
00000000000073fd         db  0x8e ; '.'
00000000000073fe         db  0x03 ; '.'
00000000000073ff         db  0x49 ; 'I'
0000000000007400         db  0x0e ; '.'
0000000000007401         db  0x20 ; ' '
0000000000007402         db  0x8d ; '.'
0000000000007403         db  0x04 ; '.'
0000000000007404         db  0x42 ; 'B'
0000000000007405         db  0x0e ; '.'
0000000000007406         db  0x28 ; '('
0000000000007407         db  0x8c ; '.'
0000000000007408         db  0x05 ; '.'
0000000000007409         db  0x44 ; 'D'
000000000000740a         db  0x0e ; '.'
000000000000740b         db  0x30 ; '0'
000000000000740c         db  0x86 ; '.'
000000000000740d         db  0x06 ; '.'
000000000000740e         db  0x41 ; 'A'
000000000000740f         db  0x0e ; '.'
0000000000007410         db  0x38 ; '8'
0000000000007411         db  0x83 ; '.'
0000000000007412         db  0x07 ; '.'
0000000000007413         db  0x4d ; 'M'
0000000000007414         db  0x0e ; '.'
0000000000007415         db  0x70 ; 'p'
0000000000007416         db  0x65 ; 'e'
0000000000007417         db  0x0e ; '.'
0000000000007418         db  0x78 ; 'x'
0000000000007419         db  0x4d ; 'M'
000000000000741a         db  0x0e ; '.'
000000000000741b         db  0x80 ; '.'
000000000000741c         db  0x01 ; '.'
000000000000741d         db  0x46 ; 'F'
000000000000741e         db  0x0e ; '.'
000000000000741f         db  0x88 ; '.'
0000000000007420         db  0x01 ; '.'
0000000000007421         db  0x42 ; 'B'
0000000000007422         db  0x0e ; '.'
0000000000007423         db  0x90 ; '.'
0000000000007424         db  0x01 ; '.'
0000000000007425         db  0x5e ; '^'
0000000000007426         db  0x0e ; '.'
0000000000007427         db  0x70 ; 'p'
0000000000007428         db  0x56 ; 'V'
0000000000007429         db  0x0e ; '.'
000000000000742a         db  0x78 ; 'x'
000000000000742b         db  0x43 ; 'C'
000000000000742c         db  0x0e ; '.'
000000000000742d         db  0x80 ; '.'
000000000000742e         db  0x01 ; '.'
000000000000742f         db  0x43 ; 'C'
0000000000007430         db  0x0e ; '.'
0000000000007431         db  0x88 ; '.'
0000000000007432         db  0x01 ; '.'
0000000000007433         db  0x56 ; 'V'
0000000000007434         db  0x0e ; '.'
0000000000007435         db  0x90 ; '.'
0000000000007436         db  0x01 ; '.'
0000000000007437         db  0x52 ; 'R'
0000000000007438         db  0x0e ; '.'
0000000000007439         db  0x70 ; 'p'
000000000000743a         db  0x5b ; '['
000000000000743b         db  0x0e ; '.'
000000000000743c         db  0x38 ; '8'
000000000000743d         db  0x41 ; 'A'
000000000000743e         db  0x0e ; '.'
000000000000743f         db  0x30 ; '0'
0000000000007440         db  0x41 ; 'A'
0000000000007441         db  0x0e ; '.'
0000000000007442         db  0x28 ; '('
0000000000007443         db  0x42 ; 'B'
0000000000007444         db  0x0e ; '.'
0000000000007445         db  0x20 ; ' '
0000000000007446         db  0x42 ; 'B'
0000000000007447         db  0x0e ; '.'
0000000000007448         db  0x18 ; '.'
0000000000007449         db  0x42 ; 'B'
000000000000744a         db  0x0e ; '.'
000000000000744b         db  0x10 ; '.'
000000000000744c         db  0x42 ; 'B'
000000000000744d         db  0x0e ; '.'
000000000000744e         db  0x08 ; '.'
000000000000744f         db  0x00 ; '.'
0000000000007450         dd         0x00000010                                  ; Length of the record
0000000000007454         dd         0x0000052c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007458         db         0xa8, 0xd0, 2 dup (0xff)                    ; begin 0x4500
000000000000745c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x450a)
0000000000007460         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007461         align      4
0000000000007464         dd         0x00000028                                  ; Length of the record
0000000000007468         dd         0x00000540                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000746c         db         0xa4, 0xd0, 2 dup (0xff)                    ; begin 0x4510
0000000000007470         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x45a3)
0000000000007474         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007475         db  0x48 ; 'H'
0000000000007476         db  0x0e ; '.'
0000000000007477         db  0x10 ; '.'
0000000000007478         db  0x8c ; '.'
0000000000007479         db  0x02 ; '.'
000000000000747a         db  0x48 ; 'H'
000000000000747b         db  0x0e ; '.'
000000000000747c         db  0x18 ; '.'
000000000000747d         db  0x86 ; '.'
000000000000747e         db  0x03 ; '.'
000000000000747f         db  0x41 ; 'A'
0000000000007480         db  0x0e ; '.'
0000000000007481         db  0x20 ; ' '
0000000000007482         db  0x83 ; '.'
0000000000007483         db  0x04 ; '.'
0000000000007484         db  0x02 ; '.'
0000000000007485         db  0x74 ; 't'
0000000000007486         db  0x0e ; '.'
0000000000007487         db  0x18 ; '.'
0000000000007488         db  0x4b ; 'K'
0000000000007489         db  0x0e ; '.'
000000000000748a         db  0x10 ; '.'
000000000000748b         db  0x42 ; 'B'
000000000000748c         db  0x0e ; '.'
000000000000748d         db  0x08 ; '.'
000000000000748e         db  0x00 ; '.'
000000000000748f         db  0x00 ; '.'
0000000000007490         dd         0x00000010                                  ; Length of the record
0000000000007494         dd         0x0000056c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007498         db         0x18, 0xd1, 2 dup (0xff)                    ; begin 0x45b0
000000000000749c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x45c3)
00000000000074a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074a1         align      4
00000000000074a4         dd         0x00000010                                  ; Length of the record
00000000000074a8         dd         0x00000580                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000074ac         db         0x24, 0xd1, 2 dup (0xff)                    ; begin 0x45d0
00000000000074b0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x45dc)
00000000000074b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074b5         align      8
00000000000074b8         dd         0x00000010                                  ; Length of the record
00000000000074bc         dd         0x00000594                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000074c0         db         0x20, 0xd1, 2 dup (0xff)                    ; begin 0x45e0
00000000000074c4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x45f8)
00000000000074c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074c9         align      4
00000000000074cc         dd         0x00000010                                  ; Length of the record
00000000000074d0         dd         0x000005a8                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000074d4         db         0x2c, 0xd1, 2 dup (0xff)                    ; begin 0x4600
00000000000074d8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4614)
00000000000074dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074dd         align      32
00000000000074e0         dd         0x00000018                                  ; Length of the record
00000000000074e4         dd         0x000005bc                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000074e8         db         0x38, 0xd1, 2 dup (0xff)                    ; begin 0x4620
00000000000074ec         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x46ae)
00000000000074f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074f1         db  0x44 ; 'D'
00000000000074f2         db  0x0e ; '.'
00000000000074f3         db  0x50 ; 'P'
00000000000074f4         db  0x02 ; '.'
00000000000074f5         db  0x7f ; '.'
00000000000074f6         db  0x0a ; '.'
00000000000074f7         db  0x0e ; '.'
00000000000074f8         db  0x08 ; '.'
00000000000074f9         db  0x41 ; 'A'
00000000000074fa         db  0x0b ; '.'
00000000000074fb         db  0x00 ; '.'
00000000000074fc         dd         0x00000018                                  ; Length of the record
0000000000007500         dd         0x000005d8                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007504         db         0xac, 0xd1, 2 dup (0xff)                    ; begin 0x46b0
0000000000007508         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x473a)
000000000000750c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000750d         db  0x44 ; 'D'
000000000000750e         db  0x0e ; '.'
000000000000750f         db  0x50 ; 'P'
0000000000007510         db  0x02 ; '.'
0000000000007511         db  0x7b ; '{'
0000000000007512         db  0x0a ; '.'
0000000000007513         db  0x0e ; '.'
0000000000007514         db  0x08 ; '.'
0000000000007515         db  0x41 ; 'A'
0000000000007516         db  0x0b ; '.'
0000000000007517         db  0x00 ; '.'
0000000000007518         dd         0x00000010                                  ; Length of the record
000000000000751c         dd         0x000005f4                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007520         db         0x20, 0xd2, 2 dup (0xff)                    ; begin 0x4740
0000000000007524         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x474c)
0000000000007528         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007529         align      4
000000000000752c         dd         0x00000010                                  ; Length of the record
0000000000007530         dd         0x00000608                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007534         db         0x1c, 0xd2, 2 dup (0xff)                    ; begin 0x4750
0000000000007538         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x475f)
000000000000753c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000753d         align      64
0000000000007540         dd         0x00000018                                  ; Length of the record
0000000000007544         dd         0x0000061c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007548         db         0x18, 0xd2, 2 dup (0xff)                    ; begin 0x4760
000000000000754c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x47f8)
0000000000007550         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007551         db  0x44 ; 'D'
0000000000007552         db  0x0e ; '.'
0000000000007553         db  0x50 ; 'P'
0000000000007554         db  0x02 ; '.'
0000000000007555         db  0x8e ; '.'
0000000000007556         db  0x0a ; '.'
0000000000007557         db  0x0e ; '.'
0000000000007558         db  0x08 ; '.'
0000000000007559         db  0x41 ; 'A'
000000000000755a         db  0x0b ; '.'
000000000000755b         db  0x00 ; '.'
000000000000755c         dd         0x00000010                                  ; Length of the record
0000000000007560         dd         0x00000638                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007564         db         0x9c, 0xd2, 2 dup (0xff)                    ; begin 0x4800
0000000000007568         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x4810)
000000000000756c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000756d         align      16
0000000000007570         dd         0x00000010                                  ; Length of the record
0000000000007574         dd         0x0000064c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007578         db         0x98, 0xd2, 2 dup (0xff)                    ; begin 0x4810
000000000000757c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4821)
0000000000007580         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007581         align      4
0000000000007584         dd         0x00000010                                  ; Length of the record
0000000000007588         dd         0x00000660                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000758c         db         0xa4, 0xd2, 2 dup (0xff)                    ; begin 0x4830
0000000000007590         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x483a)
0000000000007594         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007595         align      8
0000000000007598         dd         0x00000018                                  ; Length of the record
000000000000759c         dd         0x00000674                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000075a0         db         0xa0, 0xd2, 2 dup (0xff)                    ; begin 0x4840
00000000000075a4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x48ce)
00000000000075a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075a9         db  0x44 ; 'D'
00000000000075aa         db  0x0e ; '.'
00000000000075ab         db  0x50 ; 'P'
00000000000075ac         db  0x02 ; '.'
00000000000075ad         db  0x7f ; '.'
00000000000075ae         db  0x0a ; '.'
00000000000075af         db  0x0e ; '.'
00000000000075b0         db  0x08 ; '.'
00000000000075b1         db  0x41 ; 'A'
00000000000075b2         db  0x0b ; '.'
00000000000075b3         db  0x00 ; '.'
00000000000075b4         dd         0x00000018                                  ; Length of the record
00000000000075b8         dd         0x00000690                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000075bc         db         0x14, 0xd3, 2 dup (0xff)                    ; begin 0x48d0
00000000000075c0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4961)
00000000000075c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075c5         db  0x44 ; 'D'
00000000000075c6         db  0x0e ; '.'
00000000000075c7         db  0x50 ; 'P'
00000000000075c8         db  0x02 ; '.'
00000000000075c9         db  0x82 ; '.'
00000000000075ca         db  0x0a ; '.'
00000000000075cb         db  0x0e ; '.'
00000000000075cc         db  0x08 ; '.'
00000000000075cd         db  0x41 ; 'A'
00000000000075ce         db  0x0b ; '.'
00000000000075cf         db  0x00 ; '.'
00000000000075d0         dd         0x00000010                                  ; Length of the record
00000000000075d4         dd         0x000006ac                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000075d8         db         0x98, 0xd3, 2 dup (0xff)                    ; begin 0x4970
00000000000075dc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x497c)
00000000000075e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075e1         align      4
00000000000075e4         dd         0x00000010                                  ; Length of the record
00000000000075e8         dd         0x000006c0                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000075ec         db         0x94, 0xd3, 2 dup (0xff)                    ; begin 0x4980
00000000000075f0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4997)
00000000000075f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075f5         align      8
00000000000075f8         dd         0x00000010                                  ; Length of the record
00000000000075fc         dd         0x000006d4                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007600         db         0xa0, 0xd3, 2 dup (0xff)                    ; begin 0x49a0
0000000000007604         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x49b3)
0000000000007608         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007609         align      4
000000000000760c         dd         0x00000010                                  ; Length of the record
0000000000007610         dd         0x000006e8                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007614         db         0xac, 0xd3, 2 dup (0xff)                    ; begin 0x49c0
0000000000007618         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x49cc)
000000000000761c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000761d         align      32
0000000000007620         dd         0x00000010                                  ; Length of the record
0000000000007624         dd         0x000006fc                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007628         db         0xa8, 0xd3, 2 dup (0xff)                    ; begin 0x49d0
000000000000762c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x49e4)
0000000000007630         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007631         align      4
0000000000007634         dd         0x00000010                                  ; Length of the record
0000000000007638         dd         0x00000710                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000763c         db         0xb4, 0xd3, 2 dup (0xff)                    ; begin 0x49f0
0000000000007640         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4a03)
0000000000007644         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007645         align      8
0000000000007648         dd         0x00000014                                  ; Length of the record
000000000000764c         dd         0x00000724                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007650         db         0xc0, 0xd3, 2 dup (0xff)                    ; begin 0x4a10
0000000000007654         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4a28)
0000000000007658         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007659         align      32
0000000000007660         dd         0x00000110                                  ; Length of the record
0000000000007664         dd         0x0000073c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007668         db         0xc8, 0xd3, 2 dup (0xff)                    ; begin 0x4a30
000000000000766c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4e47)
0000000000007670         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007671         db  0x42 ; 'B'
0000000000007672         db  0x0e ; '.'
0000000000007673         db  0x10 ; '.'
0000000000007674         db  0x8f ; '.'
0000000000007675         db  0x02 ; '.'
0000000000007676         db  0x42 ; 'B'
0000000000007677         db  0x0e ; '.'
0000000000007678         db  0x18 ; '.'
0000000000007679         db  0x8e ; '.'
000000000000767a         db  0x03 ; '.'
000000000000767b         db  0x42 ; 'B'
000000000000767c         db  0x0e ; '.'
000000000000767d         db  0x20 ; ' '
000000000000767e         db  0x8d ; '.'
000000000000767f         db  0x04 ; '.'
0000000000007680         db  0x42 ; 'B'
0000000000007681         db  0x0e ; '.'
0000000000007682         db  0x28 ; '('
0000000000007683         db  0x8c ; '.'
0000000000007684         db  0x05 ; '.'
0000000000007685         db  0x44 ; 'D'
0000000000007686         db  0x0e ; '.'
0000000000007687         db  0x30 ; '0'
0000000000007688         db  0x86 ; '.'
0000000000007689         db  0x06 ; '.'
000000000000768a         db  0x41 ; 'A'
000000000000768b         db  0x0e ; '.'
000000000000768c         db  0x38 ; '8'
000000000000768d         db  0x83 ; '.'
000000000000768e         db  0x07 ; '.'
000000000000768f         db  0x4a ; 'J'
0000000000007690         db  0x0e ; '.'
0000000000007691         db  0x60 ; '`'
0000000000007692         db  0x02 ; '.'
0000000000007693         db  0xdd ; '.'
0000000000007694         db  0x0e ; '.'
0000000000007695         db  0x68 ; 'h'
0000000000007696         db  0x57 ; 'W'
0000000000007697         db  0x0e ; '.'
0000000000007698         db  0x70 ; 'p'
0000000000007699         db  0x42 ; 'B'
000000000000769a         db  0x0e ; '.'
000000000000769b         db  0x78 ; 'x'
000000000000769c         db  0x42 ; 'B'
000000000000769d         db  0x0e ; '.'
000000000000769e         db  0x80 ; '.'
000000000000769f         db  0x01 ; '.'
00000000000076a0         db  0x42 ; 'B'
00000000000076a1         db  0x0e ; '.'
00000000000076a2         db  0x88 ; '.'
00000000000076a3         db  0x01 ; '.'
00000000000076a4         db  0x42 ; 'B'
00000000000076a5         db  0x0e ; '.'
00000000000076a6         db  0x90 ; '.'
00000000000076a7         db  0x01 ; '.'
00000000000076a8         db  0x53 ; 'S'
00000000000076a9         db  0x0e ; '.'
00000000000076aa         db  0x60 ; '`'
00000000000076ab         db  0x44 ; 'D'
00000000000076ac         db  0x0a ; '.'
00000000000076ad         db  0x0e ; '.'
00000000000076ae         db  0x38 ; '8'
00000000000076af         db  0x41 ; 'A'
00000000000076b0         db  0x0e ; '.'
00000000000076b1         db  0x30 ; '0'
00000000000076b2         db  0x41 ; 'A'
00000000000076b3         db  0x0e ; '.'
00000000000076b4         db  0x28 ; '('
00000000000076b5         db  0x42 ; 'B'
00000000000076b6         db  0x0e ; '.'
00000000000076b7         db  0x20 ; ' '
00000000000076b8         db  0x42 ; 'B'
00000000000076b9         db  0x0e ; '.'
00000000000076ba         db  0x18 ; '.'
00000000000076bb         db  0x42 ; 'B'
00000000000076bc         db  0x0e ; '.'
00000000000076bd         db  0x10 ; '.'
00000000000076be         db  0x42 ; 'B'
00000000000076bf         db  0x0e ; '.'
00000000000076c0         db  0x08 ; '.'
00000000000076c1         db  0x44 ; 'D'
00000000000076c2         db  0x0b ; '.'
00000000000076c3         db  0x02 ; '.'
00000000000076c4         db  0x78 ; 'x'
00000000000076c5         db  0x0a ; '.'
00000000000076c6         db  0x0e ; '.'
00000000000076c7         db  0x68 ; 'h'
00000000000076c8         db  0x48 ; 'H'
00000000000076c9         db  0x0b ; '.'
00000000000076ca         db  0x5a ; 'Z'
00000000000076cb         db  0x0a ; '.'
00000000000076cc         db  0x0e ; '.'
00000000000076cd         db  0x38 ; '8'
00000000000076ce         db  0x47 ; 'G'
00000000000076cf         db  0x0e ; '.'
00000000000076d0         db  0x30 ; '0'
00000000000076d1         db  0x41 ; 'A'
00000000000076d2         db  0x0e ; '.'
00000000000076d3         db  0x28 ; '('
00000000000076d4         db  0x42 ; 'B'
00000000000076d5         db  0x0e ; '.'
00000000000076d6         db  0x20 ; ' '
00000000000076d7         db  0x42 ; 'B'
00000000000076d8         db  0x0e ; '.'
00000000000076d9         db  0x18 ; '.'
00000000000076da         db  0x42 ; 'B'
00000000000076db         db  0x0e ; '.'
00000000000076dc         db  0x10 ; '.'
00000000000076dd         db  0x42 ; 'B'
00000000000076de         db  0x0e ; '.'
00000000000076df         db  0x08 ; '.'
00000000000076e0         db  0x56 ; 'V'
00000000000076e1         db  0x0b ; '.'
00000000000076e2         db  0x5e ; '^'
00000000000076e3         db  0x0a ; '.'
00000000000076e4         db  0x0e ; '.'
00000000000076e5         db  0x38 ; '8'
00000000000076e6         db  0x52 ; 'R'
00000000000076e7         db  0x0e ; '.'
00000000000076e8         db  0x30 ; '0'
00000000000076e9         db  0x41 ; 'A'
00000000000076ea         db  0x0e ; '.'
00000000000076eb         db  0x28 ; '('
00000000000076ec         db  0x42 ; 'B'
00000000000076ed         db  0x0e ; '.'
00000000000076ee         db  0x20 ; ' '
00000000000076ef         db  0x42 ; 'B'
00000000000076f0         db  0x0e ; '.'
00000000000076f1         db  0x18 ; '.'
00000000000076f2         db  0x42 ; 'B'
00000000000076f3         db  0x0e ; '.'
00000000000076f4         db  0x10 ; '.'
00000000000076f5         db  0x42 ; 'B'
00000000000076f6         db  0x0e ; '.'
00000000000076f7         db  0x08 ; '.'
00000000000076f8         db  0x4f ; 'O'
00000000000076f9         db  0x0b ; '.'
00000000000076fa         db  0x62 ; 'b'
00000000000076fb         db  0x0a ; '.'
00000000000076fc         db  0x0e ; '.'
00000000000076fd         db  0x38 ; '8'
00000000000076fe         db  0x50 ; 'P'
00000000000076ff         db  0x0e ; '.'
0000000000007700         db  0x30 ; '0'
0000000000007701         db  0x41 ; 'A'
0000000000007702         db  0x0e ; '.'
0000000000007703         db  0x28 ; '('
0000000000007704         db  0x42 ; 'B'
0000000000007705         db  0x0e ; '.'
0000000000007706         db  0x20 ; ' '
0000000000007707         db  0x42 ; 'B'
0000000000007708         db  0x0e ; '.'
0000000000007709         db  0x18 ; '.'
000000000000770a         db  0x42 ; 'B'
000000000000770b         db  0x0e ; '.'
000000000000770c         db  0x10 ; '.'
000000000000770d         db  0x42 ; 'B'
000000000000770e         db  0x0e ; '.'
000000000000770f         db  0x08 ; '.'
0000000000007710         db  0x55 ; 'U'
0000000000007711         db  0x0b ; '.'
0000000000007712         db  0x66 ; 'f'
0000000000007713         db  0x0e ; '.'
0000000000007714         db  0x68 ; 'h'
0000000000007715         db  0x42 ; 'B'
0000000000007716         db  0x0e ; '.'
0000000000007717         db  0x70 ; 'p'
0000000000007718         db  0x5c ; '\'
0000000000007719         db  0x0e ; '.'
000000000000771a         db  0x68 ; 'h'
000000000000771b         db  0x41 ; 'A'
000000000000771c         db  0x0e ; '.'
000000000000771d         db  0x60 ; '`'
000000000000771e         db  0x44 ; 'D'
000000000000771f         db  0x0a ; '.'
0000000000007720         db  0x0e ; '.'
0000000000007721         db  0x38 ; '8'
0000000000007722         db  0x41 ; 'A'
0000000000007723         db  0x0e ; '.'
0000000000007724         db  0x30 ; '0'
0000000000007725         db  0x41 ; 'A'
0000000000007726         db  0x0e ; '.'
0000000000007727         db  0x28 ; '('
0000000000007728         db  0x42 ; 'B'
0000000000007729         db  0x0e ; '.'
000000000000772a         db  0x20 ; ' '
000000000000772b         db  0x42 ; 'B'
000000000000772c         db  0x0e ; '.'
000000000000772d         db  0x18 ; '.'
000000000000772e         db  0x42 ; 'B'
000000000000772f         db  0x0e ; '.'
0000000000007730         db  0x10 ; '.'
0000000000007731         db  0x42 ; 'B'
0000000000007732         db  0x0e ; '.'
0000000000007733         db  0x08 ; '.'
0000000000007734         db  0x45 ; 'E'
0000000000007735         db  0x0b ; '.'
0000000000007736         db  0x68 ; 'h'
0000000000007737         db  0x0a ; '.'
0000000000007738         db  0x0e ; '.'
0000000000007739         db  0x68 ; 'h'
000000000000773a         db  0x48 ; 'H'
000000000000773b         db  0x0b ; '.'
000000000000773c         db  0x72 ; 'r'
000000000000773d         db  0x0e ; '.'
000000000000773e         db  0x68 ; 'h'
000000000000773f         db  0x45 ; 'E'
0000000000007740         db  0x0e ; '.'
0000000000007741         db  0x70 ; 'p'
0000000000007742         db  0x42 ; 'B'
0000000000007743         db  0x0e ; '.'
0000000000007744         db  0x78 ; 'x'
0000000000007745         db  0x42 ; 'B'
0000000000007746         db  0x0e ; '.'
0000000000007747         db  0x80 ; '.'
0000000000007748         db  0x01 ; '.'
0000000000007749         db  0x5e ; '^'
000000000000774a         db  0x0e ; '.'
000000000000774b         db  0x60 ; '`'
000000000000774c         db  0x44 ; 'D'
000000000000774d         db  0x0a ; '.'
000000000000774e         db  0x0e ; '.'
000000000000774f         db  0x38 ; '8'
0000000000007750         db  0x41 ; 'A'
0000000000007751         db  0x0e ; '.'
0000000000007752         db  0x30 ; '0'
0000000000007753         db  0x41 ; 'A'
0000000000007754         db  0x0e ; '.'
0000000000007755         db  0x28 ; '('
0000000000007756         db  0x42 ; 'B'
0000000000007757         db  0x0e ; '.'
0000000000007758         db  0x20 ; ' '
0000000000007759         db  0x42 ; 'B'
000000000000775a         db  0x0e ; '.'
000000000000775b         db  0x18 ; '.'
000000000000775c         db  0x42 ; 'B'
000000000000775d         db  0x0e ; '.'
000000000000775e         db  0x10 ; '.'
000000000000775f         db  0x42 ; 'B'
0000000000007760         db  0x0e ; '.'
0000000000007761         db  0x08 ; '.'
0000000000007762         db  0x41 ; 'A'
0000000000007763         db  0x0b ; '.'
0000000000007764         db  0x79 ; 'y'
0000000000007765         db  0x0a ; '.'
0000000000007766         db  0x0e ; '.'
0000000000007767         db  0x68 ; 'h'
0000000000007768         db  0x42 ; 'B'
0000000000007769         db  0x0e ; '.'
000000000000776a         db  0x70 ; 'p'
000000000000776b         db  0x42 ; 'B'
000000000000776c         db  0x0e ; '.'
000000000000776d         db  0x78 ; 'x'
000000000000776e         db  0x42 ; 'B'
000000000000776f         db  0x0e ; '.'
0000000000007770         db  0x80 ; '.'
0000000000007771         db  0x01 ; '.'
0000000000007772         db  0x51 ; 'Q'
0000000000007773         db  0x0b ; '.'
0000000000007774         dd         0x00000010                                  ; Length of the record
0000000000007778         dd         0x00000850                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000777c         db         0xd4, 0xd6, 2 dup (0xff)                    ; begin 0x4e50
0000000000007780         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4e70)
0000000000007784         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007785         align      8
0000000000007788         dd         0x00000018                                  ; Length of the record
000000000000778c         dd         0x00000864                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007790         db         0xe0, 0xd6, 2 dup (0xff)                    ; begin 0x4e70
0000000000007794         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4ee8)
0000000000007798         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007799         db  0x44 ; 'D'
000000000000779a         db  0x0e ; '.'
000000000000779b         db  0x70 ; 'p'
000000000000779c         db  0x02 ; '.'
000000000000779d         db  0x60 ; '`'
000000000000779e         db  0x0a ; '.'
000000000000779f         db  0x0e ; '.'
00000000000077a0         db  0x08 ; '.'
00000000000077a1         db  0x41 ; 'A'
00000000000077a2         db  0x0b ; '.'
00000000000077a3         db  0x00 ; '.'
00000000000077a4         dd         0x00000028                                  ; Length of the record
00000000000077a8         dd         0x00000880                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000077ac         db         0x44, 0xd7, 2 dup (0xff)                    ; begin 0x4ef0
00000000000077b0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4fc5)
00000000000077b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077b5         db  0x41 ; 'A'
00000000000077b6         db  0x0e ; '.'
00000000000077b7         db  0x10 ; '.'
00000000000077b8         db  0x86 ; '.'
00000000000077b9         db  0x02 ; '.'
00000000000077ba         db  0x41 ; 'A'
00000000000077bb         db  0x0e ; '.'
00000000000077bc         db  0x18 ; '.'
00000000000077bd         db  0x83 ; '.'
00000000000077be         db  0x03 ; '.'
00000000000077bf         db  0x50 ; 'P'
00000000000077c0         db  0x0e ; '.'
00000000000077c1         db  0xd0 ; '.'
00000000000077c2         db  0x01 ; '.'
00000000000077c3         db  0x02 ; '.'
00000000000077c4         db  0xab ; '.'
00000000000077c5         db  0x0a ; '.'
00000000000077c6         db  0x0e ; '.'
00000000000077c7         db  0x18 ; '.'
00000000000077c8         db  0x41 ; 'A'
00000000000077c9         db  0x0e ; '.'
00000000000077ca         db  0x10 ; '.'
00000000000077cb         db  0x41 ; 'A'
00000000000077cc         db  0x0e ; '.'
00000000000077cd         db  0x08 ; '.'
00000000000077ce         db  0x41 ; 'A'
00000000000077cf         db  0x0b ; '.'
00000000000077d0         dd         0x0000001c                                  ; Length of the record
00000000000077d4         dd         0x000008ac                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000077d8         db         0xf8, 0xd7, 2 dup (0xff)                    ; begin 0x4fd0
00000000000077dc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5050)
00000000000077e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077e1         db  0x41 ; 'A'
00000000000077e2         db  0x0e ; '.'
00000000000077e3         db  0x10 ; '.'
00000000000077e4         db  0x83 ; '.'
00000000000077e5         db  0x02 ; '.'
00000000000077e6         db  0x02 ; '.'
00000000000077e7         db  0x7a ; 'z'
00000000000077e8         db  0x0e ; '.'
00000000000077e9         db  0x08 ; '.'
00000000000077ea         db  0x00 ; '.'
00000000000077eb         db  0x00 ; '.'
00000000000077ec         db  0x00 ; '.'
00000000000077ed         db  0x00 ; '.'
00000000000077ee         db  0x00 ; '.'
00000000000077ef         db  0x00 ; '.'
00000000000077f0         dd         0x00000018                                  ; Length of the record
00000000000077f4         dd         0x000008cc                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000077f8         db         0x58, 0xd8, 2 dup (0xff)                    ; begin 0x5050
00000000000077fc         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x506a)
0000000000007800         db         0x00                                        ; Augmentation length (LEB128=0), DATA XREF=main+1016, main+1041, main+1463
0000000000007801         db  0x41 ; 'A'
0000000000007802         db  0x0e ; '.'
0000000000007803         db  0x10 ; '.'
0000000000007804         db  0x83 ; '.'
0000000000007805         db  0x02 ; '.'
0000000000007806         db  0x53 ; 'S'
0000000000007807         db  0x0a ; '.'
0000000000007808         db  0x0e ; '.'
0000000000007809         db  0x08 ; '.'
000000000000780a         db  0x41 ; 'A'
000000000000780b         db  0x0b ; '.'
000000000000780c         dd         0x00000010                                  ; Length of the record
0000000000007810         dd         0x000008e8                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007814         db         0x5c, 0xd8, 2 dup (0xff)                    ; begin 0x5070
0000000000007818         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5094)
000000000000781c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000781d         db  0x5f ; '_'
000000000000781e         db  0x0e ; '.'
000000000000781f         db  0x10 ; '.'
0000000000007820         dd         0x00000010                                  ; Length of the record
0000000000007824         dd         0x000008fc                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007828         db         0x78, 0xd8, 2 dup (0xff)                    ; begin 0x50a0
000000000000782c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x50a2)
0000000000007830         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007831         align      4
0000000000007834         dd         0x00000020                                  ; Length of the record
0000000000007838         dd         0x00000910                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000783c         db         0x74, 0xd8, 2 dup (0xff)                    ; begin 0x50b0
0000000000007840         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x50e6)
0000000000007844         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007845         db  0x44 ; 'D'
0000000000007846         db  0x0e ; '.'
0000000000007847         db  0x10 ; '.'
0000000000007848         db  0x83 ; '.'
0000000000007849         db  0x02 ; '.'
000000000000784a         db  0x5d ; ']'
000000000000784b         db  0x0a ; '.'
000000000000784c         db  0x0e ; '.'
000000000000784d         db  0x08 ; '.'
000000000000784e         db  0x47 ; 'G'
000000000000784f         db  0x0b ; '.'
0000000000007850         db  0x48 ; 'H'
0000000000007851         db  0x0a ; '.'
0000000000007852         db  0x0e ; '.'
0000000000007853         db  0x08 ; '.'
0000000000007854         db  0x41 ; 'A'
0000000000007855         db  0x0b ; '.'
0000000000007856         db  0x00 ; '.'
0000000000007857         db  0x00 ; '.'
0000000000007858         dd         0x00000010                                  ; Length of the record
000000000000785c         dd         0x00000934                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007860         db         0x90, 0xd8, 2 dup (0xff)                    ; begin 0x50f0
0000000000007864         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5114)
0000000000007868         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007869         db  0x5f ; '_'
000000000000786a         db  0x0e ; '.'
000000000000786b         db  0x10 ; '.'
000000000000786c         dd         0x00000014                                  ; Length of the record
0000000000007870         dd         0x00000948                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007874         db         0xac, 0xd8, 2 dup (0xff)                    ; begin 0x5120
0000000000007878         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x51a2)
000000000000787c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000787d         db  0x02 ; '.'
000000000000787e         db  0x5f ; '_'
000000000000787f         db  0x0e ; '.'
0000000000007880         db  0x10 ; '.'
0000000000007881         db  0x49 ; 'I'
0000000000007882         db  0x0e ; '.'
0000000000007883         db  0x08 ; '.'
0000000000007884         dd         0x00000014                                  ; Length of the record
0000000000007888         dd         0x00000960                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
000000000000788c         db         0x24, 0xd9, 2 dup (0xff)                    ; begin 0x51b0
0000000000007890         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x51fa)
0000000000007894         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007895         db  0x02 ; '.'
0000000000007896         db  0x45 ; 'E'
0000000000007897         db  0x0e ; '.'
0000000000007898         db  0x10 ; '.'
0000000000007899         db  0x00 ; '.'
000000000000789a         db  0x00 ; '.'
000000000000789b         db  0x00 ; '.'
000000000000789c         dd         0x00000018                                  ; Length of the record
00000000000078a0         dd         0x00000978                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000078a4         db         0x5c, 0xd9, 2 dup (0xff)                    ; begin 0x5200
00000000000078a8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5217)
00000000000078ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078ad         db  0x41 ; 'A'
00000000000078ae         db  0x0e ; '.'
00000000000078af         db  0x10 ; '.'
00000000000078b0         db  0x83 ; '.'
00000000000078b1         db  0x02 ; '.'
00000000000078b2         db  0x51 ; 'Q'
00000000000078b3         db  0x0e ; '.'
00000000000078b4         db  0x08 ; '.'
00000000000078b5         db  0x00 ; '.'
00000000000078b6         db  0x00 ; '.'
00000000000078b7         db  0x00 ; '.'
00000000000078b8         dd         0x00000018                                  ; Length of the record
00000000000078bc         dd         0x00000994                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000078c0         db         0x60, 0xd9, 2 dup (0xff)                    ; begin 0x5220
00000000000078c4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x524e)
00000000000078c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078c9         db  0x47 ; 'G'
00000000000078ca         db  0x0e ; '.'
00000000000078cb         db  0x10 ; '.'
00000000000078cc         db  0x61 ; 'a'
00000000000078cd         db  0x0a ; '.'
00000000000078ce         db  0x0e ; '.'
00000000000078cf         db  0x08 ; '.'
00000000000078d0         db  0x41 ; 'A'
00000000000078d1         db  0x0b ; '.'
00000000000078d2         db  0x00 ; '.'
00000000000078d3         db  0x00 ; '.'
00000000000078d4         dd         0x00000024                                  ; Length of the record
00000000000078d8         dd         0x000009b0                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000078dc         db         0x74, 0xd9, 2 dup (0xff)                    ; begin 0x5250
00000000000078e0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5278)
00000000000078e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078e5         db  0x41 ; 'A'
00000000000078e6         db  0x0e ; '.'
00000000000078e7         db  0x10 ; '.'
00000000000078e8         db  0x86 ; '.'
00000000000078e9         db  0x02 ; '.'
00000000000078ea         db  0x41 ; 'A'
00000000000078eb         db  0x0e ; '.'
00000000000078ec         db  0x18 ; '.'
00000000000078ed         db  0x83 ; '.'
00000000000078ee         db  0x03 ; '.'
00000000000078ef         db  0x4d ; 'M'
00000000000078f0         db  0x0e ; '.'
00000000000078f1         db  0x20 ; ' '
00000000000078f2         db  0x49 ; 'I'
00000000000078f3         db  0x0e ; '.'
00000000000078f4         db  0x18 ; '.'
00000000000078f5         db  0x47 ; 'G'
00000000000078f6         db  0x0e ; '.'
00000000000078f7         db  0x10 ; '.'
00000000000078f8         db  0x41 ; 'A'
00000000000078f9         db  0x0e ; '.'
00000000000078fa         db  0x08 ; '.'
00000000000078fb         db  0x00 ; '.'
00000000000078fc         dd         0x00000018                                  ; Length of the record
0000000000007900         dd         0x000009d8                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007904         db         0x7c, 0xd9, 2 dup (0xff)                    ; begin 0x5280
0000000000007908         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5293)
000000000000790c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000790d         db  0x41 ; 'A'
000000000000790e         db  0x0e ; '.'
000000000000790f         db  0x10 ; '.'
0000000000007910         db  0x83 ; '.'
0000000000007911         db  0x02 ; '.'
0000000000007912         db  0x50 ; 'P'
0000000000007913         db  0x0e ; '.'
0000000000007914         db  0x08 ; '.'
0000000000007915         db  0x00 ; '.'
0000000000007916         db  0x00 ; '.'
0000000000007917         db  0x00 ; '.'
0000000000007918         dd         0x00000014                                  ; Length of the record
000000000000791c         dd         0x000009f4                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007920         db         0x80, 0xd9, 2 dup (0xff)                    ; begin 0x52a0
0000000000007924         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x52d5)
0000000000007928         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007929         db  0x4b ; 'K'
000000000000792a         db  0x0e ; '.'
000000000000792b         db  0x10 ; '.'
000000000000792c         db  0x00 ; '.'
000000000000792d         db  0x00 ; '.'
000000000000792e         db  0x00 ; '.'
000000000000792f         db  0x00 ; '.'
0000000000007930         dd         0x00000048                                  ; Length of the record
0000000000007934         dd         0x00000a0c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007938         db         0xa8, 0xd9, 2 dup (0xff)                    ; begin 0x52e0
000000000000793c         db         0x00, 0x01, 2 dup (0x00)                    ; length 0x100 (end at 0x53e0)
0000000000007940         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007941         db  0x42 ; 'B'
0000000000007942         db  0x0e ; '.'
0000000000007943         db  0x10 ; '.'
0000000000007944         db  0x8f ; '.'
0000000000007945         db  0x02 ; '.'
0000000000007946         db  0x42 ; 'B'
0000000000007947         db  0x0e ; '.'
0000000000007948         db  0x18 ; '.'
0000000000007949         db  0x8e ; '.'
000000000000794a         db  0x03 ; '.'
000000000000794b         db  0x45 ; 'E'
000000000000794c         db  0x0e ; '.'
000000000000794d         db  0x20 ; ' '
000000000000794e         db  0x8d ; '.'
000000000000794f         db  0x04 ; '.'
0000000000007950         db  0x42 ; 'B'
0000000000007951         db  0x0e ; '.'
0000000000007952         db  0x28 ; '('
0000000000007953         db  0x8c ; '.'
0000000000007954         db  0x05 ; '.'
0000000000007955         db  0x44 ; 'D'
0000000000007956         db  0x0e ; '.'
0000000000007957         db  0x30 ; '0'
0000000000007958         db  0x86 ; '.'
0000000000007959         db  0x06 ; '.'
000000000000795a         db  0x41 ; 'A'
000000000000795b         db  0x0e ; '.'
000000000000795c         db  0x38 ; '8'
000000000000795d         db  0x83 ; '.'
000000000000795e         db  0x07 ; '.'
000000000000795f         db  0x4e ; 'N'
0000000000007960         db  0x0e ; '.'
0000000000007961         db  0x50 ; 'P'
0000000000007962         db  0x02 ; '.'
0000000000007963         db  0x9d ; '.'
0000000000007964         db  0x0a ; '.'
0000000000007965         db  0x0e ; '.'
0000000000007966         db  0x38 ; '8'
0000000000007967         db  0x41 ; 'A'
0000000000007968         db  0x0e ; '.'
0000000000007969         db  0x30 ; '0'
000000000000796a         db  0x41 ; 'A'
000000000000796b         db  0x0e ; '.'
000000000000796c         db  0x28 ; '('
000000000000796d         db  0x42 ; 'B'
000000000000796e         db  0x0e ; '.'
000000000000796f         db  0x20 ; ' '
0000000000007970         db  0x42 ; 'B'
0000000000007971         db  0x0e ; '.'
0000000000007972         db  0x18 ; '.'
0000000000007973         db  0x42 ; 'B'
0000000000007974         db  0x0e ; '.'
0000000000007975         db  0x10 ; '.'
0000000000007976         db  0x42 ; 'B'
0000000000007977         db  0x0e ; '.'
0000000000007978         db  0x08 ; '.'
0000000000007979         db  0x4b ; 'K'
000000000000797a         db  0x0b ; '.'
000000000000797b         db  0x00 ; '.'
000000000000797c         dd         0x00000018                                  ; Length of the record
0000000000007980         dd         0x00000a58                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007984         db         0x5c, 0xda, 2 dup (0xff)                    ; begin 0x53e0
0000000000007988         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x5401)
000000000000798c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000798d         db  0x44 ; 'D'
000000000000798e         db  0x0e ; '.'
000000000000798f         db  0x18 ; '.'
0000000000007990         db  0x42 ; 'B'
0000000000007991         db  0x0e ; '.'
0000000000007992         db  0x20 ; ' '
0000000000007993         db  0x5a ; 'Z'
0000000000007994         db  0x0e ; '.'
0000000000007995         db  0x08 ; '.'
0000000000007996         db  0x00 ; '.'
0000000000007997         db  0x00 ; '.'
0000000000007998         dd         0x0000004c                                  ; Length of the record
000000000000799c         dd         0x00000a74                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000079a0         db         0x70, 0xda, 2 dup (0xff)                    ; begin 0x5410
00000000000079a4         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x582c)
00000000000079a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079a9         db  0x42 ; 'B'
00000000000079aa         db  0x0e ; '.'
00000000000079ab         db  0x10 ; '.'
00000000000079ac         db  0x8f ; '.'
00000000000079ad         db  0x02 ; '.'
00000000000079ae         db  0x42 ; 'B'
00000000000079af         db  0x0e ; '.'
00000000000079b0         db  0x18 ; '.'
00000000000079b1         db  0x8e ; '.'
00000000000079b2         db  0x03 ; '.'
00000000000079b3         db  0x42 ; 'B'
00000000000079b4         db  0x0e ; '.'
00000000000079b5         db  0x20 ; ' '
00000000000079b6         db  0x8d ; '.'
00000000000079b7         db  0x04 ; '.'
00000000000079b8         db  0x42 ; 'B'
00000000000079b9         db  0x0e ; '.'
00000000000079ba         db  0x28 ; '('
00000000000079bb         db  0x8c ; '.'
00000000000079bc         db  0x05 ; '.'
00000000000079bd         db  0x41 ; 'A'
00000000000079be         db  0x0e ; '.'
00000000000079bf         db  0x30 ; '0'
00000000000079c0         db  0x86 ; '.'
00000000000079c1         db  0x06 ; '.'
00000000000079c2         db  0x41 ; 'A'
00000000000079c3         db  0x0e ; '.'
00000000000079c4         db  0x38 ; '8'
00000000000079c5         db  0x83 ; '.'
00000000000079c6         db  0x07 ; '.'
00000000000079c7         db  0x44 ; 'D'
00000000000079c8         db  0x0e ; '.'
00000000000079c9         db  0x60 ; '`'
00000000000079ca         db  0x02 ; '.'
00000000000079cb         db  0xe9 ; '.'
00000000000079cc         db  0x0a ; '.'
00000000000079cd         db  0x0e ; '.'
00000000000079ce         db  0x38 ; '8'
00000000000079cf         db  0x41 ; 'A'
00000000000079d0         db  0x0e ; '.'
00000000000079d1         db  0x30 ; '0'
00000000000079d2         db  0x41 ; 'A'
00000000000079d3         db  0x0e ; '.'
00000000000079d4         db  0x28 ; '('
00000000000079d5         db  0x42 ; 'B'
00000000000079d6         db  0x0e ; '.'
00000000000079d7         db  0x20 ; ' '
00000000000079d8         db  0x42 ; 'B'
00000000000079d9         db  0x0e ; '.'
00000000000079da         db  0x18 ; '.'
00000000000079db         db  0x42 ; 'B'
00000000000079dc         db  0x0e ; '.'
00000000000079dd         db  0x10 ; '.'
00000000000079de         db  0x42 ; 'B'
00000000000079df         db  0x0e ; '.'
00000000000079e0         db  0x08 ; '.'
00000000000079e1         db  0x47 ; 'G'
00000000000079e2         db  0x0b ; '.'
00000000000079e3         db  0x00 ; '.'
00000000000079e4         db  0x00 ; '.'
00000000000079e5         db  0x00 ; '.'
00000000000079e6         db  0x00 ; '.'
00000000000079e7         db  0x00 ; '.'
00000000000079e8         dd         0x00000034                                  ; Length of the record
00000000000079ec         dd         0x00000ac4                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
00000000000079f0         db         0x40, 0xde, 2 dup (0xff)                    ; begin 0x5830
00000000000079f4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x58ab)
00000000000079f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079f9         db  0x42 ; 'B'
00000000000079fa         db  0x0e ; '.'
00000000000079fb         db  0x10 ; '.'
00000000000079fc         db  0x8c ; '.'
00000000000079fd         db  0x02 ; '.'
00000000000079fe         db  0x41 ; 'A'
00000000000079ff         db  0x0e ; '.'
0000000000007a00         db  0x18 ; '.'
0000000000007a01         db  0x86 ; '.'
0000000000007a02         db  0x03 ; '.'
0000000000007a03         db  0x41 ; 'A'
0000000000007a04         db  0x0e ; '.'
0000000000007a05         db  0x20 ; ' '
0000000000007a06         db  0x83 ; '.'
0000000000007a07         db  0x04 ; '.'
0000000000007a08         db  0x7d ; '}'
0000000000007a09         db  0x0a ; '.'
0000000000007a0a         db  0x0e ; '.'
0000000000007a0b         db  0x18 ; '.'
0000000000007a0c         db  0x41 ; 'A'
0000000000007a0d         db  0x0e ; '.'
0000000000007a0e         db  0x10 ; '.'
0000000000007a0f         db  0x42 ; 'B'
0000000000007a10         db  0x0e ; '.'
0000000000007a11         db  0x08 ; '.'
0000000000007a12         db  0x44 ; 'D'
0000000000007a13         db  0x0b ; '.'
0000000000007a14         db  0x60 ; '`'
0000000000007a15         db  0x0a ; '.'
0000000000007a16         db  0x0e ; '.'
0000000000007a17         db  0x18 ; '.'
0000000000007a18         db  0x41 ; 'A'
0000000000007a19         db  0x0e ; '.'
0000000000007a1a         db  0x10 ; '.'
0000000000007a1b         db  0x42 ; 'B'
0000000000007a1c         db  0x0e ; '.'
0000000000007a1d         db  0x08 ; '.'
0000000000007a1e         db  0x45 ; 'E'
0000000000007a1f         db  0x0b ; '.'
0000000000007a20         dd         0x0000001c                                  ; Length of the record
0000000000007a24         dd         0x00000afc                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007a28         db         0x88, 0xde, 2 dup (0xff)                    ; begin 0x58b0
0000000000007a2c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x58f0)
0000000000007a30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a31         db  0x44 ; 'D'
0000000000007a32         db  0x0e ; '.'
0000000000007a33         db  0x10 ; '.'
0000000000007a34         db  0x83 ; '.'
0000000000007a35         db  0x02 ; '.'
0000000000007a36         db  0x5a ; 'Z'
0000000000007a37         db  0x0a ; '.'
0000000000007a38         db  0x0e ; '.'
0000000000007a39         db  0x08 ; '.'
0000000000007a3a         db  0x4a ; 'J'
0000000000007a3b         db  0x0b ; '.'
0000000000007a3c         db  0x53 ; 'S'
0000000000007a3d         db  0x0e ; '.'
0000000000007a3e         db  0x08 ; '.'
0000000000007a3f         db  0x00 ; '.'
0000000000007a40         dd         0x0000002c                                  ; Length of the record
0000000000007a44         dd         0x00000b1c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007a48         db         0xa8, 0xde, 2 dup (0xff)                    ; begin 0x58f0
0000000000007a4c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x5947)
0000000000007a50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a51         db  0x63 ; 'c'
0000000000007a52         db  0x0e ; '.'
0000000000007a53         db  0x10 ; '.'
0000000000007a54         db  0x8c ; '.'
0000000000007a55         db  0x02 ; '.'
0000000000007a56         db  0x41 ; 'A'
0000000000007a57         db  0x0e ; '.'
0000000000007a58         db  0x18 ; '.'
0000000000007a59         db  0x86 ; '.'
0000000000007a5a         db  0x03 ; '.'
0000000000007a5b         db  0x44 ; 'D'
0000000000007a5c         db  0x0e ; '.'
0000000000007a5d         db  0x20 ; ' '
0000000000007a5e         db  0x83 ; '.'
0000000000007a5f         db  0x04 ; '.'
0000000000007a60         db  0x6b ; 'k'
0000000000007a61         db  0x0e ; '.'
0000000000007a62         db  0x18 ; '.'
0000000000007a63         db  0x41 ; 'A'
0000000000007a64         db  0x0e ; '.'
0000000000007a65         db  0x10 ; '.'
0000000000007a66         db  0x42 ; 'B'
0000000000007a67         db  0x0e ; '.'
0000000000007a68         db  0x08 ; '.'
0000000000007a69         db  0x00 ; '.'
0000000000007a6a         db  0x00 ; '.'
0000000000007a6b         db  0x00 ; '.'
0000000000007a6c         db  0x00 ; '.'
0000000000007a6d         db  0x00 ; '.'
0000000000007a6e         db  0x00 ; '.'
0000000000007a6f         db  0x00 ; '.'
0000000000007a70         dd         0x0000003c                                  ; Length of the record
0000000000007a74         dd         0x00000b4c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007a78         db         0xd8, 0xde, 2 dup (0xff)                    ; begin 0x5950
0000000000007a7c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x59d3)
0000000000007a80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a81         db  0x42 ; 'B'
0000000000007a82         db  0x0e ; '.'
0000000000007a83         db  0x10 ; '.'
0000000000007a84         db  0x8d ; '.'
0000000000007a85         db  0x02 ; '.'
0000000000007a86         db  0x42 ; 'B'
0000000000007a87         db  0x0e ; '.'
0000000000007a88         db  0x18 ; '.'
0000000000007a89         db  0x8c ; '.'
0000000000007a8a         db  0x03 ; '.'
0000000000007a8b         db  0x44 ; 'D'
0000000000007a8c         db  0x0e ; '.'
0000000000007a8d         db  0x20 ; ' '
0000000000007a8e         db  0x86 ; '.'
0000000000007a8f         db  0x04 ; '.'
0000000000007a90         db  0x41 ; 'A'
0000000000007a91         db  0x0e ; '.'
0000000000007a92         db  0x28 ; '('
0000000000007a93         db  0x83 ; '.'
0000000000007a94         db  0x05 ; '.'
0000000000007a95         db  0x4a ; 'J'
0000000000007a96         db  0x0e ; '.'
0000000000007a97         db  0x40 ; '@'
0000000000007a98         db  0x02 ; '.'
0000000000007a99         db  0x64 ; 'd'
0000000000007a9a         db  0x0a ; '.'
0000000000007a9b         db  0x0e ; '.'
0000000000007a9c         db  0x28 ; '('
0000000000007a9d         db  0x41 ; 'A'
0000000000007a9e         db  0x0e ; '.'
0000000000007a9f         db  0x20 ; ' '
0000000000007aa0         db  0x41 ; 'A'
0000000000007aa1         db  0x0e ; '.'
0000000000007aa2         db  0x18 ; '.'
0000000000007aa3         db  0x42 ; 'B'
0000000000007aa4         db  0x0e ; '.'
0000000000007aa5         db  0x10 ; '.'
0000000000007aa6         db  0x42 ; 'B'
0000000000007aa7         db  0x0e ; '.'
0000000000007aa8         db  0x08 ; '.'
0000000000007aa9         db  0x41 ; 'A'
0000000000007aaa         db  0x0b ; '.'
0000000000007aab         db  0x00 ; '.'
0000000000007aac         db  0x00 ; '.'
0000000000007aad         db  0x00 ; '.'
0000000000007aae         db  0x00 ; '.'
0000000000007aaf         db  0x00 ; '.'
0000000000007ab0         dd         0x0000004c                                  ; Length of the record
0000000000007ab4         dd         0x00000b8c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007ab8         db         0x28, 0xdf, 2 dup (0xff)                    ; begin 0x59e0
0000000000007abc         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x5a5d)
0000000000007ac0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ac1         db  0x42 ; 'B'
0000000000007ac2         db  0x0e ; '.'
0000000000007ac3         db  0x10 ; '.'
0000000000007ac4         db  0x8c ; '.'
0000000000007ac5         db  0x02 ; '.'
0000000000007ac6         db  0x41 ; 'A'
0000000000007ac7         db  0x0e ; '.'
0000000000007ac8         db  0x18 ; '.'
0000000000007ac9         db  0x86 ; '.'
0000000000007aca         db  0x03 ; '.'
0000000000007acb         db  0x44 ; 'D'
0000000000007acc         db  0x0e ; '.'
0000000000007acd         db  0x20 ; ' '
0000000000007ace         db  0x83 ; '.'
0000000000007acf         db  0x04 ; '.'
0000000000007ad0         db  0x69 ; 'i'
0000000000007ad1         db  0x0a ; '.'
0000000000007ad2         db  0x0e ; '.'
0000000000007ad3         db  0x18 ; '.'
0000000000007ad4         db  0x41 ; 'A'
0000000000007ad5         db  0x0e ; '.'
0000000000007ad6         db  0x10 ; '.'
0000000000007ad7         db  0x42 ; 'B'
0000000000007ad8         db  0x0e ; '.'
0000000000007ad9         db  0x08 ; '.'
0000000000007ada         db  0x45 ; 'E'
0000000000007adb         db  0x0b ; '.'
0000000000007adc         db  0x55 ; 'U'
0000000000007add         db  0x0a ; '.'
0000000000007ade         db  0x0e ; '.'
0000000000007adf         db  0x18 ; '.'
0000000000007ae0         db  0x41 ; 'A'
0000000000007ae1         db  0x0e ; '.'
0000000000007ae2         db  0x10 ; '.'
0000000000007ae3         db  0x42 ; 'B'
0000000000007ae4         db  0x0e ; '.'
0000000000007ae5         db  0x08 ; '.'
0000000000007ae6         db  0x48 ; 'H'
0000000000007ae7         db  0x0b ; '.'
0000000000007ae8         db  0x41 ; 'A'
0000000000007ae9         db  0x0a ; '.'
0000000000007aea         db  0x0e ; '.'
0000000000007aeb         db  0x18 ; '.'
0000000000007aec         db  0x46 ; 'F'
0000000000007aed         db  0x0e ; '.'
0000000000007aee         db  0x10 ; '.'
0000000000007aef         db  0x42 ; 'B'
0000000000007af0         db  0x0e ; '.'
0000000000007af1         db  0x08 ; '.'
0000000000007af2         db  0x47 ; 'G'
0000000000007af3         db  0x0b ; '.'
0000000000007af4         db  0x49 ; 'I'
0000000000007af5         db  0x0e ; '.'
0000000000007af6         db  0x18 ; '.'
0000000000007af7         db  0x41 ; 'A'
0000000000007af8         db  0x0e ; '.'
0000000000007af9         db  0x10 ; '.'
0000000000007afa         db  0x42 ; 'B'
0000000000007afb         db  0x0e ; '.'
0000000000007afc         db  0x08 ; '.'
0000000000007afd         db  0x00 ; '.'
0000000000007afe         db  0x00 ; '.'
0000000000007aff         db  0x00 ; '.'
0000000000007b00         dd         0x0000001c                                  ; Length of the record
0000000000007b04         dd         0x00000bdc                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007b08         db         0x58, 0xdf, 2 dup (0xff)                    ; begin 0x5a60
0000000000007b0c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5ac0)
0000000000007b10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b11         db  0x44 ; 'D'
0000000000007b12         db  0x0e ; '.'
0000000000007b13         db  0x10 ; '.'
0000000000007b14         db  0x75 ; 'u'
0000000000007b15         db  0x0a ; '.'
0000000000007b16         db  0x0e ; '.'
0000000000007b17         db  0x08 ; '.'
0000000000007b18         db  0x47 ; 'G'
0000000000007b19         db  0x0b ; '.'
0000000000007b1a         db  0x5f ; '_'
0000000000007b1b         db  0x0e ; '.'
0000000000007b1c         db  0x08 ; '.'
0000000000007b1d         db  0x00 ; '.'
0000000000007b1e         db  0x00 ; '.'
0000000000007b1f         db  0x00 ; '.'
0000000000007b20         dd         0x0000001c                                  ; Length of the record
0000000000007b24         dd         0x00000bfc                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007b28         db         0x98, 0xdf, 2 dup (0xff)                    ; begin 0x5ac0
0000000000007b2c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x5afc)
0000000000007b30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b31         db  0x44 ; 'D'
0000000000007b32         db  0x0e ; '.'
0000000000007b33         db  0x10 ; '.'
0000000000007b34         db  0x61 ; 'a'
0000000000007b35         db  0x0a ; '.'
0000000000007b36         db  0x0e ; '.'
0000000000007b37         db  0x08 ; '.'
0000000000007b38         db  0x4b ; 'K'
0000000000007b39         db  0x0b ; '.'
0000000000007b3a         db  0x4b ; 'K'
0000000000007b3b         db  0x0e ; '.'
0000000000007b3c         db  0x08 ; '.'
0000000000007b3d         db  0x00 ; '.'
0000000000007b3e         db  0x00 ; '.'
0000000000007b3f         db  0x00 ; '.'
0000000000007b40         dd         0x00000044                                  ; Length of the record
0000000000007b44         dd         0x00000c1c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007b48         db         0xb8, 0xdf, 2 dup (0xff)                    ; begin 0x5b00
0000000000007b4c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x5b65)
0000000000007b50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b51         db  0x42 ; 'B'
0000000000007b52         db  0x0e ; '.'
0000000000007b53         db  0x10 ; '.'
0000000000007b54         db  0x8f ; '.'
0000000000007b55         db  0x02 ; '.'
0000000000007b56         db  0x42 ; 'B'
0000000000007b57         db  0x0e ; '.'
0000000000007b58         db  0x18 ; '.'
0000000000007b59         db  0x8e ; '.'
0000000000007b5a         db  0x03 ; '.'
0000000000007b5b         db  0x45 ; 'E'
0000000000007b5c         db  0x0e ; '.'
0000000000007b5d         db  0x20 ; ' '
0000000000007b5e         db  0x8d ; '.'
0000000000007b5f         db  0x04 ; '.'
0000000000007b60         db  0x42 ; 'B'
0000000000007b61         db  0x0e ; '.'
0000000000007b62         db  0x28 ; '('
0000000000007b63         db  0x8c ; '.'
0000000000007b64         db  0x05 ; '.'
0000000000007b65         db  0x48 ; 'H'
0000000000007b66         db  0x0e ; '.'
0000000000007b67         db  0x30 ; '0'
0000000000007b68         db  0x86 ; '.'
0000000000007b69         db  0x06 ; '.'
0000000000007b6a         db  0x48 ; 'H'
0000000000007b6b         db  0x0e ; '.'
0000000000007b6c         db  0x38 ; '8'
0000000000007b6d         db  0x83 ; '.'
0000000000007b6e         db  0x07 ; '.'
0000000000007b6f         db  0x4d ; 'M'
0000000000007b70         db  0x0e ; '.'
0000000000007b71         db  0x40 ; '@'
0000000000007b72         db  0x72 ; 'r'
0000000000007b73         db  0x0e ; '.'
0000000000007b74         db  0x38 ; '8'
0000000000007b75         db  0x41 ; 'A'
0000000000007b76         db  0x0e ; '.'
0000000000007b77         db  0x30 ; '0'
0000000000007b78         db  0x41 ; 'A'
0000000000007b79         db  0x0e ; '.'
0000000000007b7a         db  0x28 ; '('
0000000000007b7b         db  0x42 ; 'B'
0000000000007b7c         db  0x0e ; '.'
0000000000007b7d         db  0x20 ; ' '
0000000000007b7e         db  0x42 ; 'B'
0000000000007b7f         db  0x0e ; '.'
0000000000007b80         db  0x18 ; '.'
0000000000007b81         db  0x42 ; 'B'
0000000000007b82         db  0x0e ; '.'
0000000000007b83         db  0x10 ; '.'
0000000000007b84         db  0x42 ; 'B'
0000000000007b85         db  0x0e ; '.'
0000000000007b86         db  0x08 ; '.'
0000000000007b87         db  0x00 ; '.'
0000000000007b88         dd         0x00000014                                  ; Length of the record
0000000000007b8c         dd         0x00000c64                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007b90         db         0xe0, 0xdf, 2 dup (0xff)                    ; begin 0x5b70
0000000000007b94         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5b72)
0000000000007b98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b99         align      32
0000000000007ba0         dd         0x00000010                                  ; Length of the record
0000000000007ba4         dd         0x00000c7c                                  ; FDE: parent CIE at 0x6f28 (FDE encoding = 0x1B)
0000000000007ba8         db         0xd8, 0xdf, 2 dup (0xff)                    ; begin 0x5b80
0000000000007bac         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x5b8e)
0000000000007bb0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bb1         align      8


        ; Segment Segment 3
        ; Range: [0x208b10; 0x209238[ (1832 bytes)
        ; File offset : [35600; 36992[ (1392 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x208b10; 0x208b18[ (8 bytes)
        ; File offset : [35600; 35608[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000208b10         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x208b18; 0x208b20[ (8 bytes)
        ; File offset : [35608; 35616[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000208b18         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x208b20; 0x208c38[ (280 bytes)
        ; File offset : [35616; 35896[ (280 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
0000000000208b20         db  0xfb ; '.'                                         ; DATA XREF=main+116
0000000000208b21         db  0x5c ; '\'
0000000000208b22         db  0x00 ; '.'
0000000000208b23         db  0x00 ; '.'
0000000000208b24         db  0x00 ; '.'
0000000000208b25         db  0x00 ; '.'
0000000000208b26         db  0x00 ; '.'
0000000000208b27         db  0x00 ; '.'
0000000000208b28         db  0x00 ; '.'
0000000000208b29         db  0x00 ; '.'
0000000000208b2a         db  0x00 ; '.'
0000000000208b2b         db  0x00 ; '.'
0000000000208b2c         db  0x00 ; '.'
0000000000208b2d         db  0x00 ; '.'
0000000000208b2e         db  0x00 ; '.'
0000000000208b2f         db  0x00 ; '.'
0000000000208b30         db  0x00 ; '.'
0000000000208b31         db  0x00 ; '.'
0000000000208b32         db  0x00 ; '.'
0000000000208b33         db  0x00 ; '.'
0000000000208b34         db  0x00 ; '.'
0000000000208b35         db  0x00 ; '.'
0000000000208b36         db  0x00 ; '.'
0000000000208b37         db  0x00 ; '.'
0000000000208b38         db  0x64 ; 'd'
0000000000208b39         db  0x00 ; '.'
0000000000208b3a         db  0x00 ; '.'
0000000000208b3b         db  0x00 ; '.'
0000000000208b3c         db  0x00 ; '.'
0000000000208b3d         db  0x00 ; '.'
0000000000208b3e         db  0x00 ; '.'
0000000000208b3f         db  0x00 ; '.'
0000000000208b40         db  0x02 ; '.'
0000000000208b41         db  0x5d ; ']'
0000000000208b42         db  0x00 ; '.'
0000000000208b43         db  0x00 ; '.'
0000000000208b44         db  0x00 ; '.'
0000000000208b45         db  0x00 ; '.'
0000000000208b46         db  0x00 ; '.'
0000000000208b47         db  0x00 ; '.'
0000000000208b48         db  0x01 ; '.'
0000000000208b49         db  0x00 ; '.'
0000000000208b4a         db  0x00 ; '.'
0000000000208b4b         db  0x00 ; '.'
0000000000208b4c         db  0x00 ; '.'
0000000000208b4d         db  0x00 ; '.'
0000000000208b4e         db  0x00 ; '.'
0000000000208b4f         db  0x00 ; '.'
0000000000208b50         db  0x00 ; '.'
0000000000208b51         db  0x00 ; '.'
0000000000208b52         db  0x00 ; '.'
0000000000208b53         db  0x00 ; '.'
0000000000208b54         db  0x00 ; '.'
0000000000208b55         db  0x00 ; '.'
0000000000208b56         db  0x00 ; '.'
0000000000208b57         db  0x00 ; '.'
0000000000208b58         db  0x77 ; 'w'
0000000000208b59         db  0x00 ; '.'
0000000000208b5a         db  0x00 ; '.'
0000000000208b5b         db  0x00 ; '.'
0000000000208b5c         db  0x00 ; '.'
0000000000208b5d         db  0x00 ; '.'
0000000000208b5e         db  0x00 ; '.'
0000000000208b5f         db  0x00 ; '.'
0000000000208b60         db  0x07 ; '.'
0000000000208b61         db  0x5d ; ']'
0000000000208b62         db  0x00 ; '.'
0000000000208b63         db  0x00 ; '.'
0000000000208b64         db  0x00 ; '.'
0000000000208b65         db  0x00 ; '.'
0000000000208b66         db  0x00 ; '.'
0000000000208b67         db  0x00 ; '.'
0000000000208b68         db  0x00 ; '.'
0000000000208b69         db  0x00 ; '.'
0000000000208b6a         db  0x00 ; '.'
0000000000208b6b         db  0x00 ; '.'
0000000000208b6c         db  0x00 ; '.'
0000000000208b6d         db  0x00 ; '.'
0000000000208b6e         db  0x00 ; '.'
0000000000208b6f         db  0x00 ; '.'
0000000000208b70         db  0x00 ; '.'
0000000000208b71         db  0x00 ; '.'
0000000000208b72         db  0x00 ; '.'
0000000000208b73         db  0x00 ; '.'
0000000000208b74         db  0x00 ; '.'
0000000000208b75         db  0x00 ; '.'
0000000000208b76         db  0x00 ; '.'
0000000000208b77         db  0x00 ; '.'
0000000000208b78         db  0x69 ; 'i'
0000000000208b79         db  0x00 ; '.'
0000000000208b7a         db  0x00 ; '.'
0000000000208b7b         db  0x00 ; '.'
0000000000208b7c         db  0x00 ; '.'
0000000000208b7d         db  0x00 ; '.'
0000000000208b7e         db  0x00 ; '.'
0000000000208b7f         db  0x00 ; '.'
0000000000208b80         db  0x16 ; '.'
0000000000208b81         db  0x5d ; ']'
0000000000208b82         db  0x00 ; '.'
0000000000208b83         db  0x00 ; '.'
0000000000208b84         db  0x00 ; '.'
0000000000208b85         db  0x00 ; '.'
0000000000208b86         db  0x00 ; '.'
0000000000208b87         db  0x00 ; '.'
0000000000208b88         db  0x00 ; '.'
0000000000208b89         db  0x00 ; '.'
0000000000208b8a         db  0x00 ; '.'
0000000000208b8b         db  0x00 ; '.'
0000000000208b8c         db  0x00 ; '.'
0000000000208b8d         db  0x00 ; '.'
0000000000208b8e         db  0x00 ; '.'
0000000000208b8f         db  0x00 ; '.'
0000000000208b90         db  0x00 ; '.'
0000000000208b91         db  0x00 ; '.'
0000000000208b92         db  0x00 ; '.'
0000000000208b93         db  0x00 ; '.'
0000000000208b94         db  0x00 ; '.'
0000000000208b95         db  0x00 ; '.'
0000000000208b96         db  0x00 ; '.'
0000000000208b97         db  0x00 ; '.'
0000000000208b98         db  0x7e ; '~'
0000000000208b99         db  0xff ; '.'
0000000000208b9a         db  0xff ; '.'
0000000000208b9b         db  0xff ; '.'
0000000000208b9c         db  0x00 ; '.'
0000000000208b9d         db  0x00 ; '.'
0000000000208b9e         db  0x00 ; '.'
0000000000208b9f         db  0x00 ; '.'
0000000000208ba0         db  0x1b ; '.'
0000000000208ba1         db  0x5d ; ']'
0000000000208ba2         db  0x00 ; '.'
0000000000208ba3         db  0x00 ; '.'
0000000000208ba4         db  0x00 ; '.'
0000000000208ba5         db  0x00 ; '.'
0000000000208ba6         db  0x00 ; '.'
0000000000208ba7         db  0x00 ; '.'
0000000000208ba8         db  0x00 ; '.'
0000000000208ba9         db  0x00 ; '.'
0000000000208baa         db  0x00 ; '.'
0000000000208bab         db  0x00 ; '.'
0000000000208bac         db  0x00 ; '.'
0000000000208bad         db  0x00 ; '.'
0000000000208bae         db  0x00 ; '.'
0000000000208baf         db  0x00 ; '.'
0000000000208bb0         db  0x00 ; '.'
0000000000208bb1         db  0x00 ; '.'
0000000000208bb2         db  0x00 ; '.'
0000000000208bb3         db  0x00 ; '.'
0000000000208bb4         db  0x00 ; '.'
0000000000208bb5         db  0x00 ; '.'
0000000000208bb6         db  0x00 ; '.'
0000000000208bb7         db  0x00 ; '.'
0000000000208bb8         db  0x7d ; '}'
0000000000208bb9         db  0xff ; '.'
0000000000208bba         db  0xff ; '.'
0000000000208bbb         db  0xff ; '.'
0000000000208bbc         db  0x00 ; '.'
0000000000208bbd         db  0x00 ; '.'
0000000000208bbe         db  0x00 ; '.'
0000000000208bbf         db  0x00 ; '.'
0000000000208bc0         db  0x00 ; '.'
0000000000208bc1         db  0x00 ; '.'
0000000000208bc2         db  0x00 ; '.'
0000000000208bc3         db  0x00 ; '.'
0000000000208bc4         db  0x00 ; '.'
0000000000208bc5         db  0x00 ; '.'
0000000000208bc6         db  0x00 ; '.'
0000000000208bc7         db  0x00 ; '.'
0000000000208bc8         db  0x00 ; '.'
0000000000208bc9         db  0x00 ; '.'
0000000000208bca         db  0x00 ; '.'
0000000000208bcb         db  0x00 ; '.'
0000000000208bcc         db  0x00 ; '.'
0000000000208bcd         db  0x00 ; '.'
0000000000208bce         db  0x00 ; '.'
0000000000208bcf         db  0x00 ; '.'
0000000000208bd0         db  0x00 ; '.'
0000000000208bd1         db  0x00 ; '.'
0000000000208bd2         db  0x00 ; '.'
0000000000208bd3         db  0x00 ; '.'
0000000000208bd4         db  0x00 ; '.'
0000000000208bd5         db  0x00 ; '.'
0000000000208bd6         db  0x00 ; '.'
0000000000208bd7         db  0x00 ; '.'
0000000000208bd8         db  0x00 ; '.'
0000000000208bd9         db  0x00 ; '.'
0000000000208bda         db  0x00 ; '.'
0000000000208bdb         db  0x00 ; '.'
0000000000208bdc         db  0x00 ; '.'
0000000000208bdd         db  0x00 ; '.'
0000000000208bde         db  0x00 ; '.'
0000000000208bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000208be0         db  0xe1 ; '.'
0000000000208be1         db  0x62 ; 'b'
0000000000208be2         db  0x00 ; '.'
0000000000208be3         db  0x00 ; '.'
0000000000208be4         db  0x00 ; '.'
0000000000208be5         db  0x00 ; '.'
0000000000208be6         db  0x00 ; '.'
0000000000208be7         db  0x00 ; '.'
0000000000208be8         db  0xe9 ; '.'
0000000000208be9         db  0x62 ; 'b'
0000000000208bea         db  0x00 ; '.'
0000000000208beb         db  0x00 ; '.'
0000000000208bec         db  0x00 ; '.'
0000000000208bed         db  0x00 ; '.'
0000000000208bee         db  0x00 ; '.'
0000000000208bef         db  0x00 ; '.'
0000000000208bf0         db  0xef ; '.'
0000000000208bf1         db  0x62 ; 'b'
0000000000208bf2         db  0x00 ; '.'
0000000000208bf3         db  0x00 ; '.'
0000000000208bf4         db  0x00 ; '.'
0000000000208bf5         db  0x00 ; '.'
0000000000208bf6         db  0x00 ; '.'
0000000000208bf7         db  0x00 ; '.'
0000000000208bf8         db  0xfc ; '.'
0000000000208bf9         db  0x62 ; 'b'
0000000000208bfa         db  0x00 ; '.'
0000000000208bfb         db  0x00 ; '.'
0000000000208bfc         db  0x00 ; '.'
0000000000208bfd         db  0x00 ; '.'
0000000000208bfe         db  0x00 ; '.'
0000000000208bff         db  0x00 ; '.'
0000000000208c00         db  0x09 ; '.'
0000000000208c01         db  0x63 ; 'c'
0000000000208c02         db  0x00 ; '.'
0000000000208c03         db  0x00 ; '.'
0000000000208c04         db  0x00 ; '.'
0000000000208c05         db  0x00 ; '.'
0000000000208c06         db  0x00 ; '.'
0000000000208c07         db  0x00 ; '.'
0000000000208c08         db  0x1d ; '.'
0000000000208c09         db  0x63 ; 'c'
0000000000208c0a         db  0x00 ; '.'
0000000000208c0b         db  0x00 ; '.'
0000000000208c0c         db  0x00 ; '.'
0000000000208c0d         db  0x00 ; '.'
0000000000208c0e         db  0x00 ; '.'
0000000000208c0f         db  0x00 ; '.'
0000000000208c10         db  0x1f ; '.'
0000000000208c11         db  0x63 ; 'c'
0000000000208c12         db  0x00 ; '.'
0000000000208c13         db  0x00 ; '.'
0000000000208c14         db  0x00 ; '.'
0000000000208c15         db  0x00 ; '.'
0000000000208c16         db  0x00 ; '.'
0000000000208c17         db  0x00 ; '.'
0000000000208c18         db  0x02 ; '.'
0000000000208c19         db  0x63 ; 'c'
0000000000208c1a         db  0x00 ; '.'
0000000000208c1b         db  0x00 ; '.'
0000000000208c1c         db  0x00 ; '.'
0000000000208c1d         db  0x00 ; '.'
0000000000208c1e         db  0x00 ; '.'
0000000000208c1f         db  0x00 ; '.'
0000000000208c20         db  0x7d ; '}'
0000000000208c21         db  0x5c ; '\'
0000000000208c22         db  0x00 ; '.'
0000000000208c23         db  0x00 ; '.'
0000000000208c24         db  0x00 ; '.'
0000000000208c25         db  0x00 ; '.'
0000000000208c26         db  0x00 ; '.'
0000000000208c27         db  0x00 ; '.'
0000000000208c28         db  0x27 ; '''
0000000000208c29         db  0x63 ; 'c'
0000000000208c2a         db  0x00 ; '.'
0000000000208c2b         db  0x00 ; '.'
0000000000208c2c         db  0x00 ; '.'
0000000000208c2d         db  0x00 ; '.'
0000000000208c2e         db  0x00 ; '.'
0000000000208c2f         db  0x00 ; '.'
0000000000208c30         db  0x00 ; '.'
0000000000208c31         db  0x00 ; '.'
0000000000208c32         db  0x00 ; '.'
0000000000208c33         db  0x00 ; '.'
0000000000208c34         db  0x00 ; '.'
0000000000208c35         db  0x00 ; '.'
0000000000208c36         db  0x00 ; '.'
0000000000208c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x208c38; 0x208e28[ (496 bytes)
        ; File offset : [35896; 36392[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000208c38         db  0x01 ; '.'
0000000000208c39         db  0x00 ; '.'
0000000000208c3a         db  0x00 ; '.'
0000000000208c3b         db  0x00 ; '.'
0000000000208c3c         db  0x00 ; '.'
0000000000208c3d         db  0x00 ; '.'
0000000000208c3e         db  0x00 ; '.'
0000000000208c3f         db  0x00 ; '.'
0000000000208c40         db  0x01 ; '.'
0000000000208c41         db  0x00 ; '.'
0000000000208c42         db  0x00 ; '.'
0000000000208c43         db  0x00 ; '.'
0000000000208c44         db  0x00 ; '.'
0000000000208c45         db  0x00 ; '.'
0000000000208c46         db  0x00 ; '.'
0000000000208c47         db  0x00 ; '.'
0000000000208c48         db  0x0c ; '.'
0000000000208c49         db  0x00 ; '.'
0000000000208c4a         db  0x00 ; '.'
0000000000208c4b         db  0x00 ; '.'
0000000000208c4c         db  0x00 ; '.'
0000000000208c4d         db  0x00 ; '.'
0000000000208c4e         db  0x00 ; '.'
0000000000208c4f         db  0x00 ; '.'
0000000000208c50         db  0xa8 ; '.'
0000000000208c51         db  0x14 ; '.'
0000000000208c52         db  0x00 ; '.'
0000000000208c53         db  0x00 ; '.'
0000000000208c54         db  0x00 ; '.'
0000000000208c55         db  0x00 ; '.'
0000000000208c56         db  0x00 ; '.'
0000000000208c57         db  0x00 ; '.'
0000000000208c58         db  0x0d ; '.'
0000000000208c59         db  0x00 ; '.'
0000000000208c5a         db  0x00 ; '.'
0000000000208c5b         db  0x00 ; '.'
0000000000208c5c         db  0x00 ; '.'
0000000000208c5d         db  0x00 ; '.'
0000000000208c5e         db  0x00 ; '.'
0000000000208c5f         db  0x00 ; '.'
0000000000208c60         db  0x90 ; '.'
0000000000208c61         db  0x5b ; '['
0000000000208c62         db  0x00 ; '.'
0000000000208c63         db  0x00 ; '.'
0000000000208c64         db  0x00 ; '.'
0000000000208c65         db  0x00 ; '.'
0000000000208c66         db  0x00 ; '.'
0000000000208c67         db  0x00 ; '.'
0000000000208c68         db  0x19 ; '.'
0000000000208c69         db  0x00 ; '.'
0000000000208c6a         db  0x00 ; '.'
0000000000208c6b         db  0x00 ; '.'
0000000000208c6c         db  0x00 ; '.'
0000000000208c6d         db  0x00 ; '.'
0000000000208c6e         db  0x00 ; '.'
0000000000208c6f         db  0x00 ; '.'
0000000000208c70         db  0x10 ; '.'
0000000000208c71         db  0x8b ; '.'
0000000000208c72         db  0x20 ; ' '
0000000000208c73         db  0x00 ; '.'
0000000000208c74         db  0x00 ; '.'
0000000000208c75         db  0x00 ; '.'
0000000000208c76         db  0x00 ; '.'
0000000000208c77         db  0x00 ; '.'
0000000000208c78         db  0x1b ; '.'
0000000000208c79         db  0x00 ; '.'
0000000000208c7a         db  0x00 ; '.'
0000000000208c7b         db  0x00 ; '.'
0000000000208c7c         db  0x00 ; '.'
0000000000208c7d         db  0x00 ; '.'
0000000000208c7e         db  0x00 ; '.'
0000000000208c7f         db  0x00 ; '.'
0000000000208c80         db  0x08 ; '.'
0000000000208c81         db  0x00 ; '.'
0000000000208c82         db  0x00 ; '.'
0000000000208c83         db  0x00 ; '.'
0000000000208c84         db  0x00 ; '.'
0000000000208c85         db  0x00 ; '.'
0000000000208c86         db  0x00 ; '.'
0000000000208c87         db  0x00 ; '.'
0000000000208c88         db  0x1a ; '.'
0000000000208c89         db  0x00 ; '.'
0000000000208c8a         db  0x00 ; '.'
0000000000208c8b         db  0x00 ; '.'
0000000000208c8c         db  0x00 ; '.'
0000000000208c8d         db  0x00 ; '.'
0000000000208c8e         db  0x00 ; '.'
0000000000208c8f         db  0x00 ; '.'
0000000000208c90         db  0x18 ; '.'
0000000000208c91         db  0x8b ; '.'
0000000000208c92         db  0x20 ; ' '
0000000000208c93         db  0x00 ; '.'
0000000000208c94         db  0x00 ; '.'
0000000000208c95         db  0x00 ; '.'
0000000000208c96         db  0x00 ; '.'
0000000000208c97         db  0x00 ; '.'
0000000000208c98         db  0x1c ; '.'
0000000000208c99         db  0x00 ; '.'
0000000000208c9a         db  0x00 ; '.'
0000000000208c9b         db  0x00 ; '.'
0000000000208c9c         db  0x00 ; '.'
0000000000208c9d         db  0x00 ; '.'
0000000000208c9e         db  0x00 ; '.'
0000000000208c9f         db  0x00 ; '.'
0000000000208ca0         db  0x08 ; '.'
0000000000208ca1         db  0x00 ; '.'
0000000000208ca2         db  0x00 ; '.'
0000000000208ca3         db  0x00 ; '.'
0000000000208ca4         db  0x00 ; '.'
0000000000208ca5         db  0x00 ; '.'
0000000000208ca6         db  0x00 ; '.'
0000000000208ca7         db  0x00 ; '.'
0000000000208ca8         db  0xf5 ; '.'
0000000000208ca9         db  0xfe ; '.'
0000000000208caa         db  0xff ; '.'
0000000000208cab         db  0x6f ; 'o'
0000000000208cac         db  0x00 ; '.'
0000000000208cad         db  0x00 ; '.'
0000000000208cae         db  0x00 ; '.'
0000000000208caf         db  0x00 ; '.'
0000000000208cb0         db  0x98 ; '.'
0000000000208cb1         db  0x02 ; '.'
0000000000208cb2         db  0x00 ; '.'
0000000000208cb3         db  0x00 ; '.'
0000000000208cb4         db  0x00 ; '.'
0000000000208cb5         db  0x00 ; '.'
0000000000208cb6         db  0x00 ; '.'
0000000000208cb7         db  0x00 ; '.'
0000000000208cb8         db  0x05 ; '.'
0000000000208cb9         db  0x00 ; '.'
0000000000208cba         db  0x00 ; '.'
0000000000208cbb         db  0x00 ; '.'
0000000000208cbc         db  0x00 ; '.'
0000000000208cbd         db  0x00 ; '.'
0000000000208cbe         db  0x00 ; '.'
0000000000208cbf         db  0x00 ; '.'
0000000000208cc0         db  0xf8 ; '.'
0000000000208cc1         db  0x08 ; '.'
0000000000208cc2         db  0x00 ; '.'
0000000000208cc3         db  0x00 ; '.'
0000000000208cc4         db  0x00 ; '.'
0000000000208cc5         db  0x00 ; '.'
0000000000208cc6         db  0x00 ; '.'
0000000000208cc7         db  0x00 ; '.'
0000000000208cc8         db  0x06 ; '.'
0000000000208cc9         db  0x00 ; '.'
0000000000208cca         db  0x00 ; '.'
0000000000208ccb         db  0x00 ; '.'
0000000000208ccc         db  0x00 ; '.'
0000000000208ccd         db  0x00 ; '.'
0000000000208cce         db  0x00 ; '.'
0000000000208ccf         db  0x00 ; '.'
0000000000208cd0         db  0xe0 ; '.'
0000000000208cd1         db  0x02 ; '.'
0000000000208cd2         db  0x00 ; '.'
0000000000208cd3         db  0x00 ; '.'
0000000000208cd4         db  0x00 ; '.'
0000000000208cd5         db  0x00 ; '.'
0000000000208cd6         db  0x00 ; '.'
0000000000208cd7         db  0x00 ; '.'
0000000000208cd8         db  0x0a ; '.'
0000000000208cd9         db  0x00 ; '.'
0000000000208cda         db  0x00 ; '.'
0000000000208cdb         db  0x00 ; '.'
0000000000208cdc         db  0x00 ; '.'
0000000000208cdd         db  0x00 ; '.'
0000000000208cde         db  0x00 ; '.'
0000000000208cdf         db  0x00 ; '.'
0000000000208ce0         db  0x01 ; '.'
0000000000208ce1         db  0x03 ; '.'
0000000000208ce2         db  0x00 ; '.'
0000000000208ce3         db  0x00 ; '.'
0000000000208ce4         db  0x00 ; '.'
0000000000208ce5         db  0x00 ; '.'
0000000000208ce6         db  0x00 ; '.'
0000000000208ce7         db  0x00 ; '.'
0000000000208ce8         db  0x0b ; '.'
0000000000208ce9         db  0x00 ; '.'
0000000000208cea         db  0x00 ; '.'
0000000000208ceb         db  0x00 ; '.'
0000000000208cec         db  0x00 ; '.'
0000000000208ced         db  0x00 ; '.'
0000000000208cee         db  0x00 ; '.'
0000000000208cef         db  0x00 ; '.'
0000000000208cf0         db  0x18 ; '.'
0000000000208cf1         db  0x00 ; '.'
0000000000208cf2         db  0x00 ; '.'
0000000000208cf3         db  0x00 ; '.'
0000000000208cf4         db  0x00 ; '.'
0000000000208cf5         db  0x00 ; '.'
0000000000208cf6         db  0x00 ; '.'
0000000000208cf7         db  0x00 ; '.'
0000000000208cf8         db  0x15 ; '.'
0000000000208cf9         db  0x00 ; '.'
0000000000208cfa         db  0x00 ; '.'
0000000000208cfb         db  0x00 ; '.'
0000000000208cfc         db  0x00 ; '.'
0000000000208cfd         db  0x00 ; '.'
0000000000208cfe         db  0x00 ; '.'
0000000000208cff         db  0x00 ; '.'
0000000000208d00         db  0x00 ; '.'
0000000000208d01         db  0x00 ; '.'
0000000000208d02         db  0x00 ; '.'
0000000000208d03         db  0x00 ; '.'
0000000000208d04         db  0x00 ; '.'
0000000000208d05         db  0x00 ; '.'
0000000000208d06         db  0x00 ; '.'
0000000000208d07         db  0x00 ; '.'
0000000000208d08         db  0x03 ; '.'
0000000000208d09         db  0x00 ; '.'
0000000000208d0a         db  0x00 ; '.'
0000000000208d0b         db  0x00 ; '.'
0000000000208d0c         db  0x00 ; '.'
0000000000208d0d         db  0x00 ; '.'
0000000000208d0e         db  0x00 ; '.'
0000000000208d0f         db  0x00 ; '.'
0000000000208d10         db  0x28 ; '('
0000000000208d11         db  0x8e ; '.'
0000000000208d12         db  0x20 ; ' '
0000000000208d13         db  0x00 ; '.'
0000000000208d14         db  0x00 ; '.'
0000000000208d15         db  0x00 ; '.'
0000000000208d16         db  0x00 ; '.'
0000000000208d17         db  0x00 ; '.'
0000000000208d18         db  0x02 ; '.'
0000000000208d19         db  0x00 ; '.'
0000000000208d1a         db  0x00 ; '.'
0000000000208d1b         db  0x00 ; '.'
0000000000208d1c         db  0x00 ; '.'
0000000000208d1d         db  0x00 ; '.'
0000000000208d1e         db  0x00 ; '.'
0000000000208d1f         db  0x00 ; '.'
0000000000208d20         db  0xb0 ; '.'
0000000000208d21         db  0x04 ; '.'
0000000000208d22         db  0x00 ; '.'
0000000000208d23         db  0x00 ; '.'
0000000000208d24         db  0x00 ; '.'
0000000000208d25         db  0x00 ; '.'
0000000000208d26         db  0x00 ; '.'
0000000000208d27         db  0x00 ; '.'
0000000000208d28         db  0x14 ; '.'
0000000000208d29         db  0x00 ; '.'
0000000000208d2a         db  0x00 ; '.'
0000000000208d2b         db  0x00 ; '.'
0000000000208d2c         db  0x00 ; '.'
0000000000208d2d         db  0x00 ; '.'
0000000000208d2e         db  0x00 ; '.'
0000000000208d2f         db  0x00 ; '.'
0000000000208d30         db  0x07 ; '.'
0000000000208d31         db  0x00 ; '.'
0000000000208d32         db  0x00 ; '.'
0000000000208d33         db  0x00 ; '.'
0000000000208d34         db  0x00 ; '.'
0000000000208d35         db  0x00 ; '.'
0000000000208d36         db  0x00 ; '.'
0000000000208d37         db  0x00 ; '.'
0000000000208d38         db  0x17 ; '.'
0000000000208d39         db  0x00 ; '.'
0000000000208d3a         db  0x00 ; '.'
0000000000208d3b         db  0x00 ; '.'
0000000000208d3c         db  0x00 ; '.'
0000000000208d3d         db  0x00 ; '.'
0000000000208d3e         db  0x00 ; '.'
0000000000208d3f         db  0x00 ; '.'
0000000000208d40         db  0xf8 ; '.'
0000000000208d41         db  0x0f ; '.'
0000000000208d42         db  0x00 ; '.'
0000000000208d43         db  0x00 ; '.'
0000000000208d44         db  0x00 ; '.'
0000000000208d45         db  0x00 ; '.'
0000000000208d46         db  0x00 ; '.'
0000000000208d47         db  0x00 ; '.'
0000000000208d48         db  0x07 ; '.'
0000000000208d49         db  0x00 ; '.'
0000000000208d4a         db  0x00 ; '.'
0000000000208d4b         db  0x00 ; '.'
0000000000208d4c         db  0x00 ; '.'
0000000000208d4d         db  0x00 ; '.'
0000000000208d4e         db  0x00 ; '.'
0000000000208d4f         db  0x00 ; '.'
0000000000208d50         db  0xe0 ; '.'
0000000000208d51         db  0x0c ; '.'
0000000000208d52         db  0x00 ; '.'
0000000000208d53         db  0x00 ; '.'
0000000000208d54         db  0x00 ; '.'
0000000000208d55         db  0x00 ; '.'
0000000000208d56         db  0x00 ; '.'
0000000000208d57         db  0x00 ; '.'
0000000000208d58         db  0x08 ; '.'
0000000000208d59         db  0x00 ; '.'
0000000000208d5a         db  0x00 ; '.'
0000000000208d5b         db  0x00 ; '.'
0000000000208d5c         db  0x00 ; '.'
0000000000208d5d         db  0x00 ; '.'
0000000000208d5e         db  0x00 ; '.'
0000000000208d5f         db  0x00 ; '.'
0000000000208d60         db  0x18 ; '.'
0000000000208d61         db  0x03 ; '.'
0000000000208d62         db  0x00 ; '.'
0000000000208d63         db  0x00 ; '.'
0000000000208d64         db  0x00 ; '.'
0000000000208d65         db  0x00 ; '.'
0000000000208d66         db  0x00 ; '.'
0000000000208d67         db  0x00 ; '.'
0000000000208d68         db  0x09 ; '.'
0000000000208d69         db  0x00 ; '.'
0000000000208d6a         db  0x00 ; '.'
0000000000208d6b         db  0x00 ; '.'
0000000000208d6c         db  0x00 ; '.'
0000000000208d6d         db  0x00 ; '.'
0000000000208d6e         db  0x00 ; '.'
0000000000208d6f         db  0x00 ; '.'
0000000000208d70         db  0x18 ; '.'
0000000000208d71         db  0x00 ; '.'
0000000000208d72         db  0x00 ; '.'
0000000000208d73         db  0x00 ; '.'
0000000000208d74         db  0x00 ; '.'
0000000000208d75         db  0x00 ; '.'
0000000000208d76         db  0x00 ; '.'
0000000000208d77         db  0x00 ; '.'
0000000000208d78         db  0x1e ; '.'
0000000000208d79         db  0x00 ; '.'
0000000000208d7a         db  0x00 ; '.'
0000000000208d7b         db  0x00 ; '.'
0000000000208d7c         db  0x00 ; '.'
0000000000208d7d         db  0x00 ; '.'
0000000000208d7e         db  0x00 ; '.'
0000000000208d7f         db  0x00 ; '.'
0000000000208d80         db  0x08 ; '.'
0000000000208d81         db  0x00 ; '.'
0000000000208d82         db  0x00 ; '.'
0000000000208d83         db  0x00 ; '.'
0000000000208d84         db  0x00 ; '.'
0000000000208d85         db  0x00 ; '.'
0000000000208d86         db  0x00 ; '.'
0000000000208d87         db  0x00 ; '.'
0000000000208d88         db  0xfb ; '.'
0000000000208d89         db  0xff ; '.'
0000000000208d8a         db  0xff ; '.'
0000000000208d8b         db  0x6f ; 'o'
0000000000208d8c         db  0x00 ; '.'
0000000000208d8d         db  0x00 ; '.'
0000000000208d8e         db  0x00 ; '.'
0000000000208d8f         db  0x00 ; '.'
0000000000208d90         db  0x01 ; '.'
0000000000208d91         db  0x00 ; '.'
0000000000208d92         db  0x00 ; '.'
0000000000208d93         db  0x08 ; '.'
0000000000208d94         db  0x00 ; '.'
0000000000208d95         db  0x00 ; '.'
0000000000208d96         db  0x00 ; '.'
0000000000208d97         db  0x00 ; '.'
0000000000208d98         db  0xfe ; '.'
0000000000208d99         db  0xff ; '.'
0000000000208d9a         db  0xff ; '.'
0000000000208d9b         db  0x6f ; 'o'
0000000000208d9c         db  0x00 ; '.'
0000000000208d9d         db  0x00 ; '.'
0000000000208d9e         db  0x00 ; '.'
0000000000208d9f         db  0x00 ; '.'
0000000000208da0         db  0x80 ; '.'
0000000000208da1         db  0x0c ; '.'
0000000000208da2         db  0x00 ; '.'
0000000000208da3         db  0x00 ; '.'
0000000000208da4         db  0x00 ; '.'
0000000000208da5         db  0x00 ; '.'
0000000000208da6         db  0x00 ; '.'
0000000000208da7         db  0x00 ; '.'
0000000000208da8         db  0xff ; '.'
0000000000208da9         db  0xff ; '.'
0000000000208daa         db  0xff ; '.'
0000000000208dab         db  0x6f ; 'o'
0000000000208dac         db  0x00 ; '.'
0000000000208dad         db  0x00 ; '.'
0000000000208dae         db  0x00 ; '.'
0000000000208daf         db  0x00 ; '.'
0000000000208db0         db  0x01 ; '.'
0000000000208db1         db  0x00 ; '.'
0000000000208db2         db  0x00 ; '.'
0000000000208db3         db  0x00 ; '.'
0000000000208db4         db  0x00 ; '.'
0000000000208db5         db  0x00 ; '.'
0000000000208db6         db  0x00 ; '.'
0000000000208db7         db  0x00 ; '.'
0000000000208db8         db  0xf0 ; '.'
0000000000208db9         db  0xff ; '.'
0000000000208dba         db  0xff ; '.'
0000000000208dbb         db  0x6f ; 'o'
0000000000208dbc         db  0x00 ; '.'
0000000000208dbd         db  0x00 ; '.'
0000000000208dbe         db  0x00 ; '.'
0000000000208dbf         db  0x00 ; '.'
0000000000208dc0         db  0xfa ; '.'
0000000000208dc1         db  0x0b ; '.'
0000000000208dc2         db  0x00 ; '.'
0000000000208dc3         db  0x00 ; '.'
0000000000208dc4         db  0x00 ; '.'
0000000000208dc5         db  0x00 ; '.'
0000000000208dc6         db  0x00 ; '.'
0000000000208dc7         db  0x00 ; '.'
0000000000208dc8         db  0xf9 ; '.'
0000000000208dc9         db  0xff ; '.'
0000000000208dca         db  0xff ; '.'
0000000000208dcb         db  0x6f ; 'o'
0000000000208dcc         db  0x00 ; '.'
0000000000208dcd         db  0x00 ; '.'
0000000000208dce         db  0x00 ; '.'
0000000000208dcf         db  0x00 ; '.'
0000000000208dd0         db  0x15 ; '.'
0000000000208dd1         db  0x00 ; '.'
0000000000208dd2         db  0x00 ; '.'
0000000000208dd3         db  0x00 ; '.'
0000000000208dd4         db  0x00 ; '.'
0000000000208dd5         db  0x00 ; '.'
0000000000208dd6         db  0x00 ; '.'
0000000000208dd7         db  0x00 ; '.'
0000000000208dd8         db  0x00 ; '.'
0000000000208dd9         db  0x00 ; '.'
0000000000208dda         db  0x00 ; '.'
0000000000208ddb         db  0x00 ; '.'
0000000000208ddc         db  0x00 ; '.'
0000000000208ddd         db  0x00 ; '.'
0000000000208dde         db  0x00 ; '.'
0000000000208ddf         db  0x00 ; '.'
0000000000208de0         db  0x00 ; '.'
0000000000208de1         db  0x00 ; '.'
0000000000208de2         db  0x00 ; '.'
0000000000208de3         db  0x00 ; '.'
0000000000208de4         db  0x00 ; '.'
0000000000208de5         db  0x00 ; '.'
0000000000208de6         db  0x00 ; '.'
0000000000208de7         db  0x00 ; '.'
0000000000208de8         db  0x00 ; '.'
0000000000208de9         db  0x00 ; '.'
0000000000208dea         db  0x00 ; '.'
0000000000208deb         db  0x00 ; '.'
0000000000208dec         db  0x00 ; '.'
0000000000208ded         db  0x00 ; '.'
0000000000208dee         db  0x00 ; '.'
0000000000208def         db  0x00 ; '.'
0000000000208df0         db  0x00 ; '.'
0000000000208df1         db  0x00 ; '.'
0000000000208df2         db  0x00 ; '.'
0000000000208df3         db  0x00 ; '.'
0000000000208df4         db  0x00 ; '.'
0000000000208df5         db  0x00 ; '.'
0000000000208df6         db  0x00 ; '.'
0000000000208df7         db  0x00 ; '.'
0000000000208df8         db  0x00 ; '.'
0000000000208df9         db  0x00 ; '.'
0000000000208dfa         db  0x00 ; '.'
0000000000208dfb         db  0x00 ; '.'
0000000000208dfc         db  0x00 ; '.'
0000000000208dfd         db  0x00 ; '.'
0000000000208dfe         db  0x00 ; '.'
0000000000208dff         db  0x00 ; '.'
0000000000208e00         db  0x00 ; '.'
0000000000208e01         db  0x00 ; '.'
0000000000208e02         db  0x00 ; '.'
0000000000208e03         db  0x00 ; '.'
0000000000208e04         db  0x00 ; '.'
0000000000208e05         db  0x00 ; '.'
0000000000208e06         db  0x00 ; '.'
0000000000208e07         db  0x00 ; '.'
0000000000208e08         db  0x00 ; '.'
0000000000208e09         db  0x00 ; '.'
0000000000208e0a         db  0x00 ; '.'
0000000000208e0b         db  0x00 ; '.'
0000000000208e0c         db  0x00 ; '.'
0000000000208e0d         db  0x00 ; '.'
0000000000208e0e         db  0x00 ; '.'
0000000000208e0f         db  0x00 ; '.'
0000000000208e10         db  0x00 ; '.'
0000000000208e11         db  0x00 ; '.'
0000000000208e12         db  0x00 ; '.'
0000000000208e13         db  0x00 ; '.'
0000000000208e14         db  0x00 ; '.'
0000000000208e15         db  0x00 ; '.'
0000000000208e16         db  0x00 ; '.'
0000000000208e17         db  0x00 ; '.'
0000000000208e18         db  0x00 ; '.'
0000000000208e19         db  0x00 ; '.'
0000000000208e1a         db  0x00 ; '.'
0000000000208e1b         db  0x00 ; '.'
0000000000208e1c         db  0x00 ; '.'
0000000000208e1d         db  0x00 ; '.'
0000000000208e1e         db  0x00 ; '.'
0000000000208e1f         db  0x00 ; '.'
0000000000208e20         db  0x00 ; '.'
0000000000208e21         db  0x00 ; '.'
0000000000208e22         db  0x00 ; '.'
0000000000208e23         db  0x00 ; '.'
0000000000208e24         db  0x00 ; '.'
0000000000208e25         db  0x00 ; '.'
0000000000208e26         db  0x00 ; '.'
0000000000208e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x208e28; 0x208ff8[ (464 bytes)
        ; File offset : [36392; 36856[ (464 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000208e28         db  0x38 ; '8'
0000000000208e29         db  0x8c ; '.'
0000000000208e2a         db  0x20 ; ' '
0000000000208e2b         db  0x00 ; '.'
0000000000208e2c         db  0x00 ; '.'
0000000000208e2d         db  0x00 ; '.'
0000000000208e2e         db  0x00 ; '.'
0000000000208e2f         db  0x00 ; '.'
                     qword_208e30:
0000000000208e30         dq         0x0000000000000000                          ; DATA XREF=0x14c0
0000000000208e38         db  0x00 ; '.'                                         ; DATA XREF=0x14c6
0000000000208e39         db  0x00 ; '.'
0000000000208e3a         db  0x00 ; '.'
0000000000208e3b         db  0x00 ; '.'
0000000000208e3c         db  0x00 ; '.'
0000000000208e3d         db  0x00 ; '.'
0000000000208e3e         db  0x00 ; '.'
0000000000208e3f         db  0x00 ; '.'
                     free@GOT:        // free
0000000000208e40         dq         0x0000000000209240                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000208e48         dq         0x0000000000209248                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000208e50         dq         0x0000000000209250                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000208e58         dq         0x0000000000209258                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000208e60         dq         0x0000000000209268                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000208e68         dq         0x0000000000209270                          ; DATA XREF=j___fpending
                     fread_unlocked@GOT:        // fread_unlocked
0000000000208e70         dq         0x0000000000209278                          ; DATA XREF=j_fread_unlocked
                     textdomain@GOT:        // textdomain
0000000000208e78         dq         0x0000000000209280                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000208e80         dq         0x0000000000209288                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000208e88         dq         0x0000000000209290                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000208e90         dq         0x0000000000209298                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000208e98         dq         0x00000000002092a0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000208ea0         dq         0x00000000002092a8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000208ea8         dq         0x00000000002092b0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000208eb0         dq         0x00000000002092b8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000208eb8         dq         0x00000000002092c0                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000208ec0         dq         0x00000000002092c8                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
0000000000208ec8         dq         0x00000000002092d0                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000208ed0         dq         0x00000000002092d8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000208ed8         dq         0x00000000002092e0                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000208ee0         dq         0x00000000002092e8                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
0000000000208ee8         dq         0x00000000002092f0                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
0000000000208ef0         dq         0x00000000002092f8                          ; DATA XREF=j_memset
                     posix_fadvise@GOT:        // posix_fadvise
0000000000208ef8         dq         0x0000000000209300                          ; DATA XREF=j_posix_fadvise
                     memchr@GOT:        // memchr
0000000000208f00         dq         0x0000000000209308                          ; DATA XREF=j_memchr
                     memcmp@GOT:        // memcmp
0000000000208f08         dq         0x0000000000209318                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000208f10         dq         0x0000000000209320                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000208f18         dq         0x0000000000209328                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000208f20         dq         0x0000000000209330                          ; DATA XREF=j_strcmp
                     memcpy@GOT:        // memcpy
0000000000208f28         dq         0x0000000000209340                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000208f30         dq         0x0000000000209348                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000208f38         dq         0x0000000000209350                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000208f40         dq         0x0000000000209358                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000208f48         dq         0x0000000000209360                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000208f50         dq         0x0000000000209368                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000208f58         dq         0x0000000000209370                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000208f60         dq         0x0000000000209378                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000208f68         dq         0x0000000000209380                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000208f70         dq         0x0000000000209388                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
0000000000208f78         dq         0x0000000000209390                          ; DATA XREF=j_memmove
                     error@GOT:        // error
0000000000208f80         dq         0x0000000000209398                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000208f88         dq         0x00000000002093a0                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000208f90         dq         0x00000000002093a8                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000208f98         dq         0x00000000002093b0                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000208fa0         dq         0x00000000002093b8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000208fa8         dq         0x00000000002093c0                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000208fb0         dq         0x00000000002093c8                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000208fb8         dq         0x00000000002093d8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000208fc0         dq         0x00000000002093e0                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000208fc8         dq         0x00000000002093f0                          ; DATA XREF=j___ctype_b_loc
                     qword_208fd0:
0000000000208fd0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000208fd8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000208fd9         db  0x00 ; '.'
0000000000208fda         db  0x00 ; '.'
0000000000208fdb         db  0x00 ; '.'
0000000000208fdc         db  0x00 ; '.'
0000000000208fdd         db  0x00 ; '.'
0000000000208fde         db  0x00 ; '.'
0000000000208fdf         db  0x00 ; '.'
                     qword_208fe0:
0000000000208fe0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_208fe8:
0000000000208fe8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_208ff0:
0000000000208ff0         dq         0x0000000000000000                          ; DATA XREF=j_qword_208ff0, __do_global_dtors_aux+9
0000000000208ff8         db  0x00 ; '.'
0000000000208ff9         db  0x00 ; '.'
0000000000208ffa         db  0x00 ; '.'
0000000000208ffb         db  0x00 ; '.'
0000000000208ffc         db  0x00 ; '.'
0000000000208ffd         db  0x00 ; '.'
0000000000208ffe         db  0x00 ; '.'
0000000000208fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x209000; 0x209080[ (128 bytes)
        ; File offset : [36864; 36992[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000209000         db  0x00 ; '.'
0000000000209001         db  0x00 ; '.'
0000000000209002         db  0x00 ; '.'
0000000000209003         db  0x00 ; '.'
0000000000209004         db  0x00 ; '.'
0000000000209005         db  0x00 ; '.'
0000000000209006         db  0x00 ; '.'
0000000000209007         db  0x00 ; '.'
                     __dso_handle:
0000000000209008         dq         0x0000000000209008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
0000000000209010         dq         0x0000000000006133                          ; "8.31", DATA XREF=main+290
                     exit_failure:
0000000000209018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020901c         db  0x00 ; '.'
000000000020901d         db  0x00 ; '.'
000000000020901e         db  0x00 ; '.'
000000000020901f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000209020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000209021         db  0x00 ; '.'
0000000000209022         db  0x00 ; '.'
0000000000209023         db  0x00 ; '.'
0000000000209024         db  0x00 ; '.'
0000000000209025         db  0x00 ; '.'
0000000000209026         db  0x00 ; '.'
0000000000209027         db  0x00 ; '.'
0000000000209028         db  0x00 ; '.'
0000000000209029         db  0x00 ; '.'
000000000020902a         db  0x00 ; '.'
000000000020902b         db  0x00 ; '.'
000000000020902c         db  0x00 ; '.'
000000000020902d         db  0x00 ; '.'
000000000020902e         db  0x00 ; '.'
000000000020902f         db  0x00 ; '.'
0000000000209030         db  0x00 ; '.'
0000000000209031         db  0x00 ; '.'
0000000000209032         db  0x00 ; '.'
0000000000209033         db  0x00 ; '.'
0000000000209034         db  0x00 ; '.'
0000000000209035         db  0x00 ; '.'
0000000000209036         db  0x00 ; '.'
0000000000209037         db  0x00 ; '.'
0000000000209038         db  0x00 ; '.'
0000000000209039         db  0x00 ; '.'
000000000020903a         db  0x00 ; '.'
000000000020903b         db  0x00 ; '.'
000000000020903c         db  0x00 ; '.'
000000000020903d         db  0x00 ; '.'
000000000020903e         db  0x00 ; '.'
000000000020903f         db  0x00 ; '.'
0000000000209040         db  0x00 ; '.'
0000000000209041         db  0x00 ; '.'
0000000000209042         db  0x00 ; '.'
0000000000209043         db  0x00 ; '.'
0000000000209044         db  0x00 ; '.'
0000000000209045         db  0x00 ; '.'
0000000000209046         db  0x00 ; '.'
0000000000209047         db  0x00 ; '.'
0000000000209048         db  0x00 ; '.'
0000000000209049         db  0x00 ; '.'
000000000020904a         db  0x00 ; '.'
000000000020904b         db  0x00 ; '.'
000000000020904c         db  0x00 ; '.'
000000000020904d         db  0x00 ; '.'
000000000020904e         db  0x00 ; '.'
000000000020904f         db  0x00 ; '.'
0000000000209050         db  0x00 ; '.'
0000000000209051         db  0x00 ; '.'
0000000000209052         db  0x00 ; '.'
0000000000209053         db  0x00 ; '.'
0000000000209054         db  0x00 ; '.'
0000000000209055         db  0x00 ; '.'
0000000000209056         db  0x00 ; '.'
0000000000209057         db  0x00 ; '.'
                     nslots:
0000000000209058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020905c         align      32
                     slotvec:
0000000000209060         dq         0x0000000000209070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000209068         db  0x00 ; '.'
0000000000209069         db  0x00 ; '.'
000000000020906a         db  0x00 ; '.'
000000000020906b         db  0x00 ; '.'
000000000020906c         db  0x00 ; '.'
000000000020906d         db  0x00 ; '.'
000000000020906e         db  0x00 ; '.'
000000000020906f         db  0x00 ; '.'
                     slotvec0:
0000000000209070         dq         1.26481e-321, 1.05447e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x209080; 0x209238[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
0000000000209080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
0000000000209081         db  0x00 ; '.'
0000000000209082         db  0x00 ; '.'
0000000000209083         db  0x00 ; '.'
0000000000209084         db  0x00 ; '.'
0000000000209085         db  0x00 ; '.'
0000000000209086         db  0x00 ; '.'
0000000000209087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
0000000000209088         db  0x00 ; '.'                                         ; DATA XREF=main+283, main+497, main+1392, main+1481, usage+164, usage+201, usage+238, usage+275, usage+312, usage+944, close_stdout+6
0000000000209089         db  0x00 ; '.'
000000000020908a         db  0x00 ; '.'
000000000020908b         db  0x00 ; '.'
000000000020908c         db  0x00 ; '.'
000000000020908d         db  0x00 ; '.'
000000000020908e         db  0x00 ; '.'
000000000020908f         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
0000000000209090         db  0x00 ; '.'                                         ; DATA XREF=main+475
0000000000209091         db  0x00 ; '.'
0000000000209092         db  0x00 ; '.'
0000000000209093         db  0x00 ; '.'
0000000000209094         db  0x00 ; '.'
0000000000209095         db  0x00 ; '.'
0000000000209096         db  0x00 ; '.'
0000000000209097         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
0000000000209098         db  0x00 ; '.'                                         ; DATA XREF=main+335
0000000000209099         db  0x00 ; '.'
000000000020909a         db  0x00 ; '.'
000000000020909b         db  0x00 ; '.'
000000000020909c         db  0x00 ; '.'
000000000020909d         db  0x00 ; '.'
000000000020909e         db  0x00 ; '.'
000000000020909f         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002090a0         db  0x00 ; '.'                                         ; DATA XREF=main+193
00000000002090a1         db  0x00 ; '.'
00000000002090a2         db  0x00 ; '.'
00000000002090a3         db  0x00 ; '.'
00000000002090a4         db  0x00 ; '.'
00000000002090a5         db  0x00 ; '.'
00000000002090a6         db  0x00 ; '.'
00000000002090a7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002090a8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002090a9         db  0x00 ; '.'
00000000002090aa         db  0x00 ; '.'
00000000002090ab         db  0x00 ; '.'
00000000002090ac         db  0x00 ; '.'
00000000002090ad         db  0x00 ; '.'
00000000002090ae         db  0x00 ; '.'
00000000002090af         db  0x00 ; '.'
00000000002090b0         db  0x00 ; '.'
00000000002090b1         db  0x00 ; '.'
00000000002090b2         db  0x00 ; '.'
00000000002090b3         db  0x00 ; '.'
00000000002090b4         db  0x00 ; '.'
00000000002090b5         db  0x00 ; '.'
00000000002090b6         db  0x00 ; '.'
00000000002090b7         db  0x00 ; '.'
00000000002090b8         db  0x00 ; '.'
00000000002090b9         db  0x00 ; '.'
00000000002090ba         db  0x00 ; '.'
00000000002090bb         db  0x00 ; '.'
00000000002090bc         db  0x00 ; '.'
00000000002090bd         db  0x00 ; '.'
00000000002090be         db  0x00 ; '.'
00000000002090bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002090c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002090c1         db  0x00 ; '.'
00000000002090c2         db  0x00 ; '.'
00000000002090c3         db  0x00 ; '.'
00000000002090c4         db  0x00 ; '.'
00000000002090c5         db  0x00 ; '.'
00000000002090c6         db  0x00 ; '.'
00000000002090c7         db  0x00 ; '.'
                     completed.7697:
00000000002090c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002090c9         db  0x00 ; '.'
00000000002090ca         db  0x00 ; '.'
00000000002090cb         db  0x00 ; '.'
00000000002090cc         db  0x00 ; '.'
00000000002090cd         db  0x00 ; '.'
00000000002090ce         db  0x00 ; '.'
00000000002090cf         db  0x00 ; '.'
                     ignore_EPIPE:
00000000002090d0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
00000000002090d1         db  0x00 ; '.'
00000000002090d2         db  0x00 ; '.'
00000000002090d3         db  0x00 ; '.'
00000000002090d4         db  0x00 ; '.'
00000000002090d5         db  0x00 ; '.'
00000000002090d6         db  0x00 ; '.'
00000000002090d7         db  0x00 ; '.'
                     file_name:
00000000002090d8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
00000000002090d9         db  0x00 ; '.'
00000000002090da         db  0x00 ; '.'
00000000002090db         db  0x00 ; '.'
00000000002090dc         db  0x00 ; '.'
00000000002090dd         db  0x00 ; '.'
00000000002090de         db  0x00 ; '.'
00000000002090df         db  0x00 ; '.'
                     program_name:
00000000002090e0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
00000000002090e1         db  0x00 ; '.'
00000000002090e2         db  0x00 ; '.'
00000000002090e3         db  0x00 ; '.'
00000000002090e4         db  0x00 ; '.'
00000000002090e5         db  0x00 ; '.'
00000000002090e6         db  0x00 ; '.'
00000000002090e7         db  0x00 ; '.'
00000000002090e8         db  0x00 ; '.'
00000000002090e9         db  0x00 ; '.'
00000000002090ea         db  0x00 ; '.'
00000000002090eb         db  0x00 ; '.'
00000000002090ec         db  0x00 ; '.'
00000000002090ed         db  0x00 ; '.'
00000000002090ee         db  0x00 ; '.'
00000000002090ef         db  0x00 ; '.'
00000000002090f0         db  0x00 ; '.'
00000000002090f1         db  0x00 ; '.'
00000000002090f2         db  0x00 ; '.'
00000000002090f3         db  0x00 ; '.'
00000000002090f4         db  0x00 ; '.'
00000000002090f5         db  0x00 ; '.'
00000000002090f6         db  0x00 ; '.'
00000000002090f7         db  0x00 ; '.'
00000000002090f8         db  0x00 ; '.'
00000000002090f9         db  0x00 ; '.'
00000000002090fa         db  0x00 ; '.'
00000000002090fb         db  0x00 ; '.'
00000000002090fc         db  0x00 ; '.'
00000000002090fd         db  0x00 ; '.'
00000000002090fe         db  0x00 ; '.'
00000000002090ff         db  0x00 ; '.'
                     slot0:
0000000000209100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000209101         db  0x00 ; '.'
0000000000209102         db  0x00 ; '.'
0000000000209103         db  0x00 ; '.'
0000000000209104         db  0x00 ; '.'
0000000000209105         db  0x00 ; '.'
0000000000209106         db  0x00 ; '.'
0000000000209107         db  0x00 ; '.'
0000000000209108         db  0x00 ; '.'
0000000000209109         db  0x00 ; '.'
000000000020910a         db  0x00 ; '.'
000000000020910b         db  0x00 ; '.'
000000000020910c         db  0x00 ; '.'
000000000020910d         db  0x00 ; '.'
000000000020910e         db  0x00 ; '.'
000000000020910f         db  0x00 ; '.'
0000000000209110         db  0x00 ; '.'
0000000000209111         db  0x00 ; '.'
0000000000209112         db  0x00 ; '.'
0000000000209113         db  0x00 ; '.'
0000000000209114         db  0x00 ; '.'
0000000000209115         db  0x00 ; '.'
0000000000209116         db  0x00 ; '.'
0000000000209117         db  0x00 ; '.'
0000000000209118         db  0x00 ; '.'
0000000000209119         db  0x00 ; '.'
000000000020911a         db  0x00 ; '.'
000000000020911b         db  0x00 ; '.'
000000000020911c         db  0x00 ; '.'
000000000020911d         db  0x00 ; '.'
000000000020911e         db  0x00 ; '.'
000000000020911f         db  0x00 ; '.'
0000000000209120         db  0x00 ; '.'
0000000000209121         db  0x00 ; '.'
0000000000209122         db  0x00 ; '.'
0000000000209123         db  0x00 ; '.'
0000000000209124         db  0x00 ; '.'
0000000000209125         db  0x00 ; '.'
0000000000209126         db  0x00 ; '.'
0000000000209127         db  0x00 ; '.'
0000000000209128         db  0x00 ; '.'
0000000000209129         db  0x00 ; '.'
000000000020912a         db  0x00 ; '.'
000000000020912b         db  0x00 ; '.'
000000000020912c         db  0x00 ; '.'
000000000020912d         db  0x00 ; '.'
000000000020912e         db  0x00 ; '.'
000000000020912f         db  0x00 ; '.'
0000000000209130         db  0x00 ; '.'
0000000000209131         db  0x00 ; '.'
0000000000209132         db  0x00 ; '.'
0000000000209133         db  0x00 ; '.'
0000000000209134         db  0x00 ; '.'
0000000000209135         db  0x00 ; '.'
0000000000209136         db  0x00 ; '.'
0000000000209137         db  0x00 ; '.'
0000000000209138         db  0x00 ; '.'
0000000000209139         db  0x00 ; '.'
000000000020913a         db  0x00 ; '.'
000000000020913b         db  0x00 ; '.'
000000000020913c         db  0x00 ; '.'
000000000020913d         db  0x00 ; '.'
000000000020913e         db  0x00 ; '.'
000000000020913f         db  0x00 ; '.'
0000000000209140         db  0x00 ; '.'
0000000000209141         db  0x00 ; '.'
0000000000209142         db  0x00 ; '.'
0000000000209143         db  0x00 ; '.'
0000000000209144         db  0x00 ; '.'
0000000000209145         db  0x00 ; '.'
0000000000209146         db  0x00 ; '.'
0000000000209147         db  0x00 ; '.'
0000000000209148         db  0x00 ; '.'
0000000000209149         db  0x00 ; '.'
000000000020914a         db  0x00 ; '.'
000000000020914b         db  0x00 ; '.'
000000000020914c         db  0x00 ; '.'
000000000020914d         db  0x00 ; '.'
000000000020914e         db  0x00 ; '.'
000000000020914f         db  0x00 ; '.'
0000000000209150         db  0x00 ; '.'
0000000000209151         db  0x00 ; '.'
0000000000209152         db  0x00 ; '.'
0000000000209153         db  0x00 ; '.'
0000000000209154         db  0x00 ; '.'
0000000000209155         db  0x00 ; '.'
0000000000209156         db  0x00 ; '.'
0000000000209157         db  0x00 ; '.'
0000000000209158         db  0x00 ; '.'
0000000000209159         db  0x00 ; '.'
000000000020915a         db  0x00 ; '.'
000000000020915b         db  0x00 ; '.'
000000000020915c         db  0x00 ; '.'
000000000020915d         db  0x00 ; '.'
000000000020915e         db  0x00 ; '.'
000000000020915f         db  0x00 ; '.'
0000000000209160         db  0x00 ; '.'
0000000000209161         db  0x00 ; '.'
0000000000209162         db  0x00 ; '.'
0000000000209163         db  0x00 ; '.'
0000000000209164         db  0x00 ; '.'
0000000000209165         db  0x00 ; '.'
0000000000209166         db  0x00 ; '.'
0000000000209167         db  0x00 ; '.'
0000000000209168         db  0x00 ; '.'
0000000000209169         db  0x00 ; '.'
000000000020916a         db  0x00 ; '.'
000000000020916b         db  0x00 ; '.'
000000000020916c         db  0x00 ; '.'
000000000020916d         db  0x00 ; '.'
000000000020916e         db  0x00 ; '.'
000000000020916f         db  0x00 ; '.'
0000000000209170         db  0x00 ; '.'
0000000000209171         db  0x00 ; '.'
0000000000209172         db  0x00 ; '.'
0000000000209173         db  0x00 ; '.'
0000000000209174         db  0x00 ; '.'
0000000000209175         db  0x00 ; '.'
0000000000209176         db  0x00 ; '.'
0000000000209177         db  0x00 ; '.'
0000000000209178         db  0x00 ; '.'
0000000000209179         db  0x00 ; '.'
000000000020917a         db  0x00 ; '.'
000000000020917b         db  0x00 ; '.'
000000000020917c         db  0x00 ; '.'
000000000020917d         db  0x00 ; '.'
000000000020917e         db  0x00 ; '.'
000000000020917f         db  0x00 ; '.'
0000000000209180         db  0x00 ; '.'
0000000000209181         db  0x00 ; '.'
0000000000209182         db  0x00 ; '.'
0000000000209183         db  0x00 ; '.'
0000000000209184         db  0x00 ; '.'
0000000000209185         db  0x00 ; '.'
0000000000209186         db  0x00 ; '.'
0000000000209187         db  0x00 ; '.'
0000000000209188         db  0x00 ; '.'
0000000000209189         db  0x00 ; '.'
000000000020918a         db  0x00 ; '.'
000000000020918b         db  0x00 ; '.'
000000000020918c         db  0x00 ; '.'
000000000020918d         db  0x00 ; '.'
000000000020918e         db  0x00 ; '.'
000000000020918f         db  0x00 ; '.'
0000000000209190         db  0x00 ; '.'
0000000000209191         db  0x00 ; '.'
0000000000209192         db  0x00 ; '.'
0000000000209193         db  0x00 ; '.'
0000000000209194         db  0x00 ; '.'
0000000000209195         db  0x00 ; '.'
0000000000209196         db  0x00 ; '.'
0000000000209197         db  0x00 ; '.'
0000000000209198         db  0x00 ; '.'
0000000000209199         db  0x00 ; '.'
000000000020919a         db  0x00 ; '.'
000000000020919b         db  0x00 ; '.'
000000000020919c         db  0x00 ; '.'
000000000020919d         db  0x00 ; '.'
000000000020919e         db  0x00 ; '.'
000000000020919f         db  0x00 ; '.'
00000000002091a0         db  0x00 ; '.'
00000000002091a1         db  0x00 ; '.'
00000000002091a2         db  0x00 ; '.'
00000000002091a3         db  0x00 ; '.'
00000000002091a4         db  0x00 ; '.'
00000000002091a5         db  0x00 ; '.'
00000000002091a6         db  0x00 ; '.'
00000000002091a7         db  0x00 ; '.'
00000000002091a8         db  0x00 ; '.'
00000000002091a9         db  0x00 ; '.'
00000000002091aa         db  0x00 ; '.'
00000000002091ab         db  0x00 ; '.'
00000000002091ac         db  0x00 ; '.'
00000000002091ad         db  0x00 ; '.'
00000000002091ae         db  0x00 ; '.'
00000000002091af         db  0x00 ; '.'
00000000002091b0         db  0x00 ; '.'
00000000002091b1         db  0x00 ; '.'
00000000002091b2         db  0x00 ; '.'
00000000002091b3         db  0x00 ; '.'
00000000002091b4         db  0x00 ; '.'
00000000002091b5         db  0x00 ; '.'
00000000002091b6         db  0x00 ; '.'
00000000002091b7         db  0x00 ; '.'
00000000002091b8         db  0x00 ; '.'
00000000002091b9         db  0x00 ; '.'
00000000002091ba         db  0x00 ; '.'
00000000002091bb         db  0x00 ; '.'
00000000002091bc         db  0x00 ; '.'
00000000002091bd         db  0x00 ; '.'
00000000002091be         db  0x00 ; '.'
00000000002091bf         db  0x00 ; '.'
00000000002091c0         db  0x00 ; '.'
00000000002091c1         db  0x00 ; '.'
00000000002091c2         db  0x00 ; '.'
00000000002091c3         db  0x00 ; '.'
00000000002091c4         db  0x00 ; '.'
00000000002091c5         db  0x00 ; '.'
00000000002091c6         db  0x00 ; '.'
00000000002091c7         db  0x00 ; '.'
00000000002091c8         db  0x00 ; '.'
00000000002091c9         db  0x00 ; '.'
00000000002091ca         db  0x00 ; '.'
00000000002091cb         db  0x00 ; '.'
00000000002091cc         db  0x00 ; '.'
00000000002091cd         db  0x00 ; '.'
00000000002091ce         db  0x00 ; '.'
00000000002091cf         db  0x00 ; '.'
00000000002091d0         db  0x00 ; '.'
00000000002091d1         db  0x00 ; '.'
00000000002091d2         db  0x00 ; '.'
00000000002091d3         db  0x00 ; '.'
00000000002091d4         db  0x00 ; '.'
00000000002091d5         db  0x00 ; '.'
00000000002091d6         db  0x00 ; '.'
00000000002091d7         db  0x00 ; '.'
00000000002091d8         db  0x00 ; '.'
00000000002091d9         db  0x00 ; '.'
00000000002091da         db  0x00 ; '.'
00000000002091db         db  0x00 ; '.'
00000000002091dc         db  0x00 ; '.'
00000000002091dd         db  0x00 ; '.'
00000000002091de         db  0x00 ; '.'
00000000002091df         db  0x00 ; '.'
00000000002091e0         db  0x00 ; '.'
00000000002091e1         db  0x00 ; '.'
00000000002091e2         db  0x00 ; '.'
00000000002091e3         db  0x00 ; '.'
00000000002091e4         db  0x00 ; '.'
00000000002091e5         db  0x00 ; '.'
00000000002091e6         db  0x00 ; '.'
00000000002091e7         db  0x00 ; '.'
00000000002091e8         db  0x00 ; '.'
00000000002091e9         db  0x00 ; '.'
00000000002091ea         db  0x00 ; '.'
00000000002091eb         db  0x00 ; '.'
00000000002091ec         db  0x00 ; '.'
00000000002091ed         db  0x00 ; '.'
00000000002091ee         db  0x00 ; '.'
00000000002091ef         db  0x00 ; '.'
00000000002091f0         db  0x00 ; '.'
00000000002091f1         db  0x00 ; '.'
00000000002091f2         db  0x00 ; '.'
00000000002091f3         db  0x00 ; '.'
00000000002091f4         db  0x00 ; '.'
00000000002091f5         db  0x00 ; '.'
00000000002091f6         db  0x00 ; '.'
00000000002091f7         db  0x00 ; '.'
00000000002091f8         db  0x00 ; '.'
00000000002091f9         db  0x00 ; '.'
00000000002091fa         db  0x00 ; '.'
00000000002091fb         db  0x00 ; '.'
00000000002091fc         db  0x00 ; '.'
00000000002091fd         db  0x00 ; '.'
00000000002091fe         db  0x00 ; '.'
00000000002091ff         db  0x00 ; '.'
                     default_quoting_options:
0000000000209200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000209201         db  0x00 ; '.'
0000000000209202         db  0x00 ; '.'
0000000000209203         db  0x00 ; '.'
0000000000209204         db  0x00 ; '.'
0000000000209205         db  0x00 ; '.'
0000000000209206         db  0x00 ; '.'
0000000000209207         db  0x00 ; '.'
0000000000209208         db  0x00 ; '.'
0000000000209209         db  0x00 ; '.'
000000000020920a         db  0x00 ; '.'
000000000020920b         db  0x00 ; '.'
000000000020920c         db  0x00 ; '.'
000000000020920d         db  0x00 ; '.'
000000000020920e         db  0x00 ; '.'
000000000020920f         db  0x00 ; '.'
0000000000209210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000209211         db  0x00 ; '.'
0000000000209212         db  0x00 ; '.'
0000000000209213         db  0x00 ; '.'
0000000000209214         db  0x00 ; '.'
0000000000209215         db  0x00 ; '.'
0000000000209216         db  0x00 ; '.'
0000000000209217         db  0x00 ; '.'
0000000000209218         db  0x00 ; '.'
0000000000209219         db  0x00 ; '.'
000000000020921a         db  0x00 ; '.'
000000000020921b         db  0x00 ; '.'
000000000020921c         db  0x00 ; '.'
000000000020921d         db  0x00 ; '.'
000000000020921e         db  0x00 ; '.'
000000000020921f         db  0x00 ; '.'
0000000000209220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000209221         db  0x00 ; '.'
0000000000209222         db  0x00 ; '.'
0000000000209223         db  0x00 ; '.'
0000000000209224         db  0x00 ; '.'
0000000000209225         db  0x00 ; '.'
0000000000209226         db  0x00 ; '.'
0000000000209227         db  0x00 ; '.'
0000000000209228         db  0x00 ; '.'
0000000000209229         db  0x00 ; '.'
000000000020922a         db  0x00 ; '.'
000000000020922b         db  0x00 ; '.'
000000000020922c         db  0x00 ; '.'
000000000020922d         db  0x00 ; '.'
000000000020922e         db  0x00 ; '.'
000000000020922f         db  0x00 ; '.'
                     qword_209230:
0000000000209230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000209231         db  0x00 ; '.'
0000000000209232         db  0x00 ; '.'
0000000000209233         db  0x00 ; '.'
0000000000209234         db  0x00 ; '.'
0000000000209235         db  0x00 ; '.'
0000000000209236         db  0x00 ; '.'
0000000000209237         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x209240; 0x2095b0[ (880 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x209240; 0x4127f0[ (2135472 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
0000000000209240         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000209248         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000209250         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000209258         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000209260         extern function code
                     _exit:
0000000000209268         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
0000000000209270         extern function code                                   ; DATA XREF=__fpending@GOT
                     fread_unlocked:
0000000000209278         extern function code                                   ; DATA XREF=fread_unlocked@GOT
                     textdomain:
0000000000209280         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
0000000000209288         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
0000000000209290         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000209298         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002092a0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002092a8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002092b0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002092b8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002092c0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
00000000002092c8         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
00000000002092d0         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
00000000002092d8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
00000000002092e0         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
00000000002092e8         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
00000000002092f0         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
00000000002092f8         extern function code                                   ; DATA XREF=memset@GOT
                     posix_fadvise:
0000000000209300         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     memchr:
0000000000209308         extern function code                                   ; DATA XREF=memchr@GOT
                     __libc_start_main:
0000000000209310         extern function code
                     memcmp:
0000000000209318         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000209320         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000209328         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
0000000000209330         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
0000000000209338         extern function code
                     memcpy:
0000000000209340         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000209348         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
0000000000209350         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000209358         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000209360         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
0000000000209368         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
0000000000209370         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
0000000000209378         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000209380         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000209388         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
0000000000209390         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
0000000000209398         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
00000000002093a0         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
00000000002093a8         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
00000000002093b0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
00000000002093b8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
00000000002093c0         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
00000000002093c8         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
00000000002093d0         extern function code
                     mbsinit:
00000000002093d8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
00000000002093e0         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
00000000002093e8         extern function code
                     __ctype_b_loc:
00000000002093f0         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
00000000002093f8         extern function code
                     abort@@GLIBC_2.2.5:
0000000000209400         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000209408         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000209410         extern function code
                     _ITM_deregisterTMCloneTable_209418:        // _ITM_deregisterTMCloneTable
0000000000209418         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000209420         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000209428         extern function code
                     fread_unlocked@@GLIBC_2.2.5:
0000000000209430         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000209438         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000209440         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000209448         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000209450         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000209458         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000209460         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000209468         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000209470         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000209478         extern function code
                     strchr@@GLIBC_2.2.5:
0000000000209480         extern function code
                     __overflow@@GLIBC_2.2.5:
0000000000209488         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000209490         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000209498         extern function code
                     __assert_fail@@GLIBC_2.2.5:
00000000002094a0         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
00000000002094a8         extern function code
                     memset@@GLIBC_2.2.5:
00000000002094b0         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
00000000002094b8         extern function code
                     memchr@@GLIBC_2.2.5:
00000000002094c0         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
00000000002094c8         extern function code
                     memcmp@@GLIBC_2.2.5:
00000000002094d0         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
00000000002094d8         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002094e0         extern function code
                     strcmp@@GLIBC_2.2.5:
00000000002094e8         extern function code
                     __gmon_start___2094f0:        // __gmon_start__
00000000002094f0         extern function code
                     memcpy@@GLIBC_2.14:
00000000002094f8         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000209500         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000209508         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000209510         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000209518         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000209520         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
0000000000209528         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000209530         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000209538         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000209540         extern function code
                     memmove@@GLIBC_2.2.5:
0000000000209548         extern function code
                     error@@GLIBC_2.2.5:
0000000000209550         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000209558         extern function code
                     fopen@@GLIBC_2.2.5:
0000000000209560         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000209568         extern function code
                     exit@@GLIBC_2.2.5:
0000000000209570         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000209578         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000209580         extern function code
                     _ITM_registerTMCloneTable_209588:        // _ITM_registerTMCloneTable
0000000000209588         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000209590         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000209598         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
00000000002095a0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
00000000002095a8         extern function code
