
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/uniq
        UUID: CAB77D3F-BD85-557D-7A1F-6B0DC4C50E37
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x9010[ (36880 bytes)
        ; File offset : [0; 36880[ (36880 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x90 ; '.'
0000000000000019         db  0x25 ; '%'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xb0 ; '.'
0000000000000029         db  0x1f ; '.'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x10 ; '.'
00000000000000d1         db  0x90 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x10 ; '.'
00000000000000d9         db  0x90 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xb0 ; '.'
00000000000000f1         db  0x99 ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xb0 ; '.'
00000000000000f9         db  0x99 ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xb0 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x99 ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0xf0 ; '.'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xc8 ; '.'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x18 ; '.'
0000000000000129         db  0x9c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x18 ; '.'
0000000000000131         db  0x9c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x18 ; '.'
0000000000000139         db  0x9c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x68 ; 'h'
0000000000000199         db  0x7c ; '|'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x68 ; 'h'
00000000000001a1         db  0x7c ; '|'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x68 ; 'h'
00000000000001a9         db  0x7c ; '|'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x14 ; '.'
00000000000001b1         db  0x03 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x14 ; '.'
00000000000001b9         db  0x03 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoul+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0xb0 ; '.'
0000000000000209         db  0x99 ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xb0 ; '.'
0000000000000211         db  0x99 ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xb0 ; '.'
0000000000000219         db  0x99 ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x50 ; 'P'
0000000000000221         db  0x06 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x50 ; 'P'
0000000000000229         db  0x06 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xca ; '.'
0000000000000285         db  0xb7 ; '.'
0000000000000286         db  0x7d ; '}'
0000000000000287         db  0x3f ; '?'
0000000000000288         db  0xbd ; '.'
0000000000000289         db  0x85 ; '.'
000000000000028a         db  0x55 ; 'U'
000000000000028b         db  0x7d ; '}'
000000000000028c         db  0x7a ; 'z'
000000000000028d         db  0x1f ; '.'
000000000000028e         db  0x6b ; 'k'
000000000000028f         db  0x0d ; '.'
0000000000000290         db  0xc4 ; '.'
0000000000000291         db  0xc5 ; '.'
0000000000000292         db  0x0e ; '.'
0000000000000293         db  0x37 ; '7'
0000000000000294         db  0x66 ; 'f'
0000000000000295         db  0xdf ; '.'
0000000000000296         db  0x2b ; '+'
0000000000000297         db  0x7b ; '{'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x3d ; '='
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x3d ; '='
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x3e ; '>'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x44 ; 'D'                                         ; DATA XREF=main+2454
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x970[ (1680 bytes)
        ; File offset : [736; 2416[ (1680 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0xe4 ; '.'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x50 ; 'P'
0000000000000311         db  0x01 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x72 ; 'r'
0000000000000329         db  0x01 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x68 ; 'h'
0000000000000341         db  0x02 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x7a ; 'z'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xf3 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x31 ; '1'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xcc ; '.'
00000000000003a1         db  0x02 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x20 ; ' '
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x86 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xb4 ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x0b ; '.'                                         ; DATA XREF=xstrtoul+420
00000000000003e9         db  0x02 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x32 ; '2'                                         ; DATA XREF=xstrtoul+437, xstrtoul+806, xstrtoul+878
0000000000000401         db  0x01 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x07 ; '.'
0000000000000419         db  0x02 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x48 ; 'H'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xb2 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0xe5 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x58 ; 'X'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x92 ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x29 ; ')'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x0b ; '.'
00000000000004c1         db  0x01 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0xbf ; '.'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x4e ; 'N'
00000000000004f1         db  0x02 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x40 ; '@'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x25 ; '%'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xa4 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xec ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x9e ; '.'
0000000000000569         db  0x01 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x33 ; '3'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0xd0 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x2d ; '-'
00000000000005b1         db  0x02 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x04 ; '.'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x59 ; 'Y'
00000000000005e1         db  0x02 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0xde ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x26 ; '&'
0000000000000611         db  0x02 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0xe8 ; '.'
0000000000000629         db  0x02 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x20 ; ' '
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0xc9 ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x2b ; '+'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0xa6 ; '.'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x41 ; 'A'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x0b ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x58 ; 'X'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x46 ; 'F'
00000000000006d1         db  0x02 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x80 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x16 ; '.'
0000000000000701         db  0x02 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x72 ; 'r'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x1f ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x12 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x52 ; 'R'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0xa1 ; '.'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x3f ; '?'
0000000000000791         db  0x02 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x39 ; '9'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x88 ; '.'
00000000000007c1         db  0x02 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x87 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xad ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x10 ; '.'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xf7 ; '.'
0000000000000821         db  0x02 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x20 ; ' '
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x48 ; 'H'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x69 ; 'i'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xf8 ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x22 ; '"'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x64 ; 'd'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x1e ; '.'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xa8 ; '.'
00000000000008a1         db  0xa0 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x6d ; 'm'
00000000000008b1         db  0x02 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xa0 ; '.'
00000000000008b9         db  0xa0 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x80 ; '.'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x11 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0xb0 ; '.'
00000000000008d1         db  0xa0 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x08 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x8c ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x21 ; '!'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x19 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0xc8 ; '.'
00000000000008e9         db  0xa0 ; '.'
00000000000008ea         db  0x20 ; ' '
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x08 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x78 ; 'x'
00000000000008f9         db  0x02 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x11 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x19 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0xc8 ; '.'
0000000000000901         db  0xa0 ; '.'
0000000000000902         db  0x20 ; ' '
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x08 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0xc6 ; '.'
0000000000000911         db  0x01 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x21 ; '!'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x19 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0xa0 ; '.'
0000000000000919         db  0xa0 ; '.'
000000000000091a         db  0x20 ; ' '
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x08 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x8b ; '.'
0000000000000929         db  0x01 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x11 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x19 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0xe0 ; '.'
0000000000000931         db  0xa0 ; '.'
0000000000000932         db  0x20 ; ' '
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x08 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x39 ; '9'
0000000000000941         db  0x00 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x11 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x19 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0xb8 ; '.'
0000000000000949         db  0xa0 ; '.'
000000000000094a         db  0x20 ; ' '
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x04 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x79 ; 'y'
0000000000000959         db  0x01 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x11 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x19 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0xc0 ; '.'
0000000000000961         db  0xa0 ; '.'
0000000000000962         db  0x20 ; ' '
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x08 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x970; 0xc81[ (785 bytes)
        ; File offset : [2416; 3201[ (785 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000970         db  0x00 ; '.'
0000000000000971         db  0x6c ; 'l'
0000000000000972         db  0x69 ; 'i'
0000000000000973         db  0x62 ; 'b'
0000000000000974         db  0x63 ; 'c'
0000000000000975         db  0x2e ; '.'
0000000000000976         db  0x73 ; 's'
0000000000000977         db  0x6f ; 'o'
0000000000000978         db  0x2e ; '.'
0000000000000979         db  0x36 ; '6'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x66 ; 'f'
000000000000097c         db  0x66 ; 'f'
000000000000097d         db  0x6c ; 'l'
000000000000097e         db  0x75 ; 'u'
000000000000097f         db  0x73 ; 's'
0000000000000980         db  0x68 ; 'h'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x5f ; '_'
0000000000000983         db  0x5f ; '_'
0000000000000984         db  0x70 ; 'p'
0000000000000985         db  0x72 ; 'r'
0000000000000986         db  0x69 ; 'i'
0000000000000987         db  0x6e ; 'n'
0000000000000988         db  0x74 ; 't'
0000000000000989         db  0x66 ; 'f'
000000000000098a         db  0x5f ; '_'
000000000000098b         db  0x63 ; 'c'
000000000000098c         db  0x68 ; 'h'
000000000000098d         db  0x6b ; 'k'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x73 ; 's'
0000000000000990         db  0x65 ; 'e'
0000000000000991         db  0x74 ; 't'
0000000000000992         db  0x6c ; 'l'
0000000000000993         db  0x6f ; 'o'
0000000000000994         db  0x63 ; 'c'
0000000000000995         db  0x61 ; 'a'
0000000000000996         db  0x6c ; 'l'
0000000000000997         db  0x65 ; 'e'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x6d ; 'm'
000000000000099a         db  0x62 ; 'b'
000000000000099b         db  0x72 ; 'r'
000000000000099c         db  0x74 ; 't'
000000000000099d         db  0x6f ; 'o'
000000000000099e         db  0x77 ; 'w'
000000000000099f         db  0x63 ; 'c'
00000000000009a0         db  0x00 ; '.'
00000000000009a1         db  0x73 ; 's'
00000000000009a2         db  0x74 ; 't'
00000000000009a3         db  0x72 ; 'r'
00000000000009a4         db  0x6e ; 'n'
00000000000009a5         db  0x63 ; 'c'
00000000000009a6         db  0x6d ; 'm'
00000000000009a7         db  0x70 ; 'p'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x6f ; 'o'
00000000000009aa         db  0x70 ; 'p'
00000000000009ab         db  0x74 ; 't'
00000000000009ac         db  0x69 ; 'i'
00000000000009ad         db  0x6e ; 'n'
00000000000009ae         db  0x64 ; 'd'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x73 ; 's'
00000000000009b1         db  0x74 ; 't'
00000000000009b2         db  0x72 ; 'r'
00000000000009b3         db  0x72 ; 'r'
00000000000009b4         db  0x63 ; 'c'
00000000000009b5         db  0x68 ; 'h'
00000000000009b6         db  0x72 ; 'r'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x64 ; 'd'
00000000000009b9         db  0x63 ; 'c'
00000000000009ba         db  0x67 ; 'g'
00000000000009bb         db  0x65 ; 'e'
00000000000009bc         db  0x74 ; 't'
00000000000009bd         db  0x74 ; 't'
00000000000009be         db  0x65 ; 'e'
00000000000009bf         db  0x78 ; 'x'
00000000000009c0         db  0x74 ; 't'
00000000000009c1         db  0x00 ; '.'
00000000000009c2         db  0x65 ; 'e'
00000000000009c3         db  0x72 ; 'r'
00000000000009c4         db  0x72 ; 'r'
00000000000009c5         db  0x6f ; 'o'
00000000000009c6         db  0x72 ; 'r'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x5f ; '_'
00000000000009c9         db  0x5f ; '_'
00000000000009ca         db  0x73 ; 's'
00000000000009cb         db  0x74 ; 't'
00000000000009cc         db  0x61 ; 'a'
00000000000009cd         db  0x63 ; 'c'
00000000000009ce         db  0x6b ; 'k'
00000000000009cf         db  0x5f ; '_'
00000000000009d0         db  0x63 ; 'c'
00000000000009d1         db  0x68 ; 'h'
00000000000009d2         db  0x6b ; 'k'
00000000000009d3         db  0x5f ; '_'
00000000000009d4         db  0x66 ; 'f'
00000000000009d5         db  0x61 ; 'a'
00000000000009d6         db  0x69 ; 'i'
00000000000009d7         db  0x6c ; 'l'
00000000000009d8         db  0x00 ; '.'
00000000000009d9         db  0x69 ; 'i'
00000000000009da         db  0x73 ; 's'
00000000000009db         db  0x77 ; 'w'
00000000000009dc         db  0x70 ; 'p'
00000000000009dd         db  0x72 ; 'r'
00000000000009de         db  0x69 ; 'i'
00000000000009df         db  0x6e ; 'n'
00000000000009e0         db  0x74 ; 't'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x72 ; 'r'
00000000000009e3         db  0x65 ; 'e'
00000000000009e4         db  0x61 ; 'a'
00000000000009e5         db  0x6c ; 'l'
00000000000009e6         db  0x6c ; 'l'
00000000000009e7         db  0x6f ; 'o'
00000000000009e8         db  0x63 ; 'c'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x61 ; 'a'
00000000000009eb         db  0x62 ; 'b'
00000000000009ec         db  0x6f ; 'o'
00000000000009ed         db  0x72 ; 'r'
00000000000009ee         db  0x74 ; 't'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x73 ; 's'
00000000000009f1         db  0x74 ; 't'
00000000000009f2         db  0x64 ; 'd'
00000000000009f3         db  0x69 ; 'i'
00000000000009f4         db  0x6e ; 'n'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x5f ; '_'
00000000000009f7         db  0x65 ; 'e'
00000000000009f8         db  0x78 ; 'x'
00000000000009f9         db  0x69 ; 'i'
00000000000009fa         db  0x74 ; 't'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x70 ; 'p'
00000000000009fd         db  0x72 ; 'r'
00000000000009fe         db  0x6f ; 'o'
00000000000009ff         db  0x67 ; 'g'
                     aRaminvocationn:
0000000000000a00         db         "ram_invocation_name", 0
0000000000000a14         db  0x5f ; '_'
0000000000000a15         db  0x5f ; '_'
0000000000000a16         db  0x61 ; 'a'
0000000000000a17         db  0x73 ; 's'
0000000000000a18         db  0x73 ; 's'
0000000000000a19         db  0x65 ; 'e'
0000000000000a1a         db  0x72 ; 'r'
0000000000000a1b         db  0x74 ; 't'
0000000000000a1c         db  0x5f ; '_'
0000000000000a1d         db  0x66 ; 'f'
0000000000000a1e         db  0x61 ; 'a'
0000000000000a1f         db  0x69 ; 'i'
0000000000000a20         db  0x6c ; 'l'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x5f ; '_'
0000000000000a23         db  0x5f ; '_'
0000000000000a24         db  0x63 ; 'c'
0000000000000a25         db  0x74 ; 't'
0000000000000a26         db  0x79 ; 'y'
0000000000000a27         db  0x70 ; 'p'
0000000000000a28         db  0x65 ; 'e'
0000000000000a29         db  0x5f ; '_'
0000000000000a2a         db  0x67 ; 'g'
0000000000000a2b         db  0x65 ; 'e'
0000000000000a2c         db  0x74 ; 't'
0000000000000a2d         db  0x5f ; '_'
0000000000000a2e         db  0x6d ; 'm'
0000000000000a2f         db  0x62 ; 'b'
0000000000000a30         db  0x5f ; '_'
0000000000000a31         db  0x63 ; 'c'
0000000000000a32         db  0x75 ; 'u'
0000000000000a33         db  0x72 ; 'r'
0000000000000a34         db  0x5f ; '_'
0000000000000a35         db  0x6d ; 'm'
0000000000000a36         db  0x61 ; 'a'
0000000000000a37         db  0x78 ; 'x'
0000000000000a38         db  0x00 ; '.'
0000000000000a39         db  0x73 ; 's'
0000000000000a3a         db  0x74 ; 't'
0000000000000a3b         db  0x72 ; 'r'
0000000000000a3c         db  0x74 ; 't'
0000000000000a3d         db  0x6f ; 'o'
0000000000000a3e         db  0x6c ; 'l'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x70 ; 'p'
0000000000000a41         db  0x6f ; 'o'
0000000000000a42         db  0x73 ; 's'
0000000000000a43         db  0x69 ; 'i'
0000000000000a44         db  0x78 ; 'x'
0000000000000a45         db  0x5f ; '_'
0000000000000a46         db  0x66 ; 'f'
0000000000000a47         db  0x61 ; 'a'
0000000000000a48         db  0x64 ; 'd'
0000000000000a49         db  0x76 ; 'v'
0000000000000a4a         db  0x69 ; 'i'
0000000000000a4b         db  0x73 ; 's'
0000000000000a4c         db  0x65 ; 'e'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x63 ; 'c'
0000000000000a4f         db  0x61 ; 'a'
0000000000000a50         db  0x6c ; 'l'
0000000000000a51         db  0x6c ; 'l'
0000000000000a52         db  0x6f ; 'o'
0000000000000a53         db  0x63 ; 'c'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x73 ; 's'
0000000000000a56         db  0x74 ; 't'
0000000000000a57         db  0x72 ; 'r'
0000000000000a58         db  0x6c ; 'l'
0000000000000a59         db  0x65 ; 'e'
0000000000000a5a         db  0x6e ; 'n'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x6d ; 'm'
0000000000000a5d         db  0x65 ; 'e'
0000000000000a5e         db  0x6d ; 'm'
0000000000000a5f         db  0x73 ; 's'
0000000000000a60         db  0x65 ; 'e'
0000000000000a61         db  0x74 ; 't'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x5f ; '_'
0000000000000a64         db  0x5f ; '_'
0000000000000a65         db  0x65 ; 'e'
0000000000000a66         db  0x72 ; 'r'
0000000000000a67         db  0x72 ; 'r'
0000000000000a68         db  0x6e ; 'n'
0000000000000a69         db  0x6f ; 'o'
0000000000000a6a         db  0x5f ; '_'
0000000000000a6b         db  0x6c ; 'l'
0000000000000a6c         db  0x6f ; 'o'
0000000000000a6d         db  0x63 ; 'c'
0000000000000a6e         db  0x61 ; 'a'
0000000000000a6f         db  0x74 ; 't'
0000000000000a70         db  0x69 ; 'i'
0000000000000a71         db  0x6f ; 'o'
0000000000000a72         db  0x6e ; 'n'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x6d ; 'm'
0000000000000a75         db  0x65 ; 'e'
0000000000000a76         db  0x6d ; 'm'
0000000000000a77         db  0x63 ; 'c'
0000000000000a78         db  0x6d ; 'm'
0000000000000a79         db  0x70 ; 'p'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x64 ; 'd'
0000000000000a7c         db  0x75 ; 'u'
0000000000000a7d         db  0x70 ; 'p'
0000000000000a7e         db  0x32 ; '2'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x5f ; '_'
0000000000000a81         db  0x5f ; '_'
0000000000000a82         db  0x66 ; 'f'
0000000000000a83         db  0x70 ; 'p'
0000000000000a84         db  0x72 ; 'r'
0000000000000a85         db  0x69 ; 'i'
0000000000000a86         db  0x6e ; 'n'
0000000000000a87         db  0x74 ; 't'
0000000000000a88         db  0x66 ; 'f'
0000000000000a89         db  0x5f ; '_'
0000000000000a8a         db  0x63 ; 'c'
0000000000000a8b         db  0x68 ; 'h'
0000000000000a8c         db  0x6b ; 'k'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x73 ; 's'
0000000000000a8f         db  0x74 ; 't'
0000000000000a90         db  0x64 ; 'd'
0000000000000a91         db  0x6f ; 'o'
0000000000000a92         db  0x75 ; 'u'
0000000000000a93         db  0x74 ; 't'
0000000000000a94         db  0x00 ; '.'
0000000000000a95         db  0x6c ; 'l'
0000000000000a96         db  0x73 ; 's'
0000000000000a97         db  0x65 ; 'e'
0000000000000a98         db  0x65 ; 'e'
0000000000000a99         db  0x6b ; 'k'
0000000000000a9a         db  0x00 ; '.'
0000000000000a9b         db  0x6d ; 'm'
0000000000000a9c         db  0x65 ; 'e'
0000000000000a9d         db  0x6d ; 'm'
0000000000000a9e         db  0x63 ; 'c'
0000000000000a9f         db  0x70 ; 'p'
0000000000000aa0         db  0x79 ; 'y'
0000000000000aa1         db  0x00 ; '.'
0000000000000aa2         db  0x66 ; 'f'
0000000000000aa3         db  0x63 ; 'c'
0000000000000aa4         db  0x6c ; 'l'
0000000000000aa5         db  0x6f ; 'o'
0000000000000aa6         db  0x73 ; 's'
0000000000000aa7         db  0x65 ; 'e'
0000000000000aa8         db  0x00 ; '.'
0000000000000aa9         db  0x73 ; 's'
0000000000000aaa         db  0x74 ; 't'
0000000000000aab         db  0x72 ; 'r'
0000000000000aac         db  0x74 ; 't'
0000000000000aad         db  0x6f ; 'o'
0000000000000aae         db  0x75 ; 'u'
0000000000000aaf         db  0x6c ; 'l'
0000000000000ab0         db  0x00 ; '.'
0000000000000ab1         db  0x6d ; 'm'
0000000000000ab2         db  0x61 ; 'a'
0000000000000ab3         db  0x6c ; 'l'
0000000000000ab4         db  0x6c ; 'l'
0000000000000ab5         db  0x6f ; 'o'
0000000000000ab6         db  0x63 ; 'c'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x6d ; 'm'
0000000000000ab9         db  0x62 ; 'b'
0000000000000aba         db  0x73 ; 's'
0000000000000abb         db  0x69 ; 'i'
0000000000000abc         db  0x6e ; 'n'
0000000000000abd         db  0x69 ; 'i'
0000000000000abe         db  0x74 ; 't'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0x5f ; '_'
0000000000000ac1         db  0x5f ; '_'
0000000000000ac2         db  0x75 ; 'u'
0000000000000ac3         db  0x66 ; 'f'
0000000000000ac4         db  0x6c ; 'l'
0000000000000ac5         db  0x6f ; 'o'
0000000000000ac6         db  0x77 ; 'w'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x6e ; 'n'
0000000000000ac9         db  0x6c ; 'l'
0000000000000aca         db  0x5f ; '_'
0000000000000acb         db  0x6c ; 'l'
0000000000000acc         db  0x61 ; 'a'
0000000000000acd         db  0x6e ; 'n'
0000000000000ace         db  0x67 ; 'g'
0000000000000acf         db  0x69 ; 'i'
0000000000000ad0         db  0x6e ; 'n'
0000000000000ad1         db  0x66 ; 'f'
0000000000000ad2         db  0x6f ; 'o'
0000000000000ad3         db  0x00 ; '.'
0000000000000ad4         db  0x5f ; '_'
0000000000000ad5         db  0x5f ; '_'
0000000000000ad6         db  0x63 ; 'c'
0000000000000ad7         db  0x74 ; 't'
0000000000000ad8         db  0x79 ; 'y'
0000000000000ad9         db  0x70 ; 'p'
0000000000000ada         db  0x65 ; 'e'
0000000000000adb         db  0x5f ; '_'
0000000000000adc         db  0x62 ; 'b'
0000000000000add         db  0x5f ; '_'
0000000000000ade         db  0x6c ; 'l'
0000000000000adf         db  0x6f ; 'o'
0000000000000ae0         db  0x63 ; 'c'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x67 ; 'g'
0000000000000ae3         db  0x65 ; 'e'
0000000000000ae4         db  0x74 ; 't'
0000000000000ae5         db  0x65 ; 'e'
0000000000000ae6         db  0x6e ; 'n'
0000000000000ae7         db  0x76 ; 'v'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x6f ; 'o'
0000000000000aea         db  0x70 ; 'p'
0000000000000aeb         db  0x74 ; 't'
0000000000000aec         db  0x61 ; 'a'
0000000000000aed         db  0x72 ; 'r'
0000000000000aee         db  0x67 ; 'g'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0x5f ; '_'
0000000000000af1         db  0x5f ; '_'
0000000000000af2         db  0x66 ; 'f'
0000000000000af3         db  0x72 ; 'r'
0000000000000af4         db  0x65 ; 'e'
0000000000000af5         db  0x61 ; 'a'
0000000000000af6         db  0x64 ; 'd'
0000000000000af7         db  0x69 ; 'i'
0000000000000af8         db  0x6e ; 'n'
0000000000000af9         db  0x67 ; 'g'
0000000000000afa         db  0x00 ; '.'
0000000000000afb         db  0x73 ; 's'
0000000000000afc         db  0x74 ; 't'
0000000000000afd         db  0x64 ; 'd'
0000000000000afe         db  0x65 ; 'e'
0000000000000aff         db  0x72 ; 'r'
0000000000000b00         db  0x72 ; 'r'
0000000000000b01         db  0x00 ; '.'
0000000000000b02         db  0x67 ; 'g'
0000000000000b03         db  0x65 ; 'e'
0000000000000b04         db  0x74 ; 't'
0000000000000b05         db  0x6f ; 'o'
0000000000000b06         db  0x70 ; 'p'
0000000000000b07         db  0x74 ; 't'
0000000000000b08         db  0x5f ; '_'
0000000000000b09         db  0x6c ; 'l'
0000000000000b0a         db  0x6f ; 'o'
0000000000000b0b         db  0x6e ; 'n'
0000000000000b0c         db  0x67 ; 'g'
0000000000000b0d         db  0x00 ; '.'
0000000000000b0e         db  0x66 ; 'f'
0000000000000b0f         db  0x72 ; 'r'
0000000000000b10         db  0x65 ; 'e'
0000000000000b11         db  0x6f ; 'o'
0000000000000b12         db  0x70 ; 'p'
0000000000000b13         db  0x65 ; 'e'
0000000000000b14         db  0x6e ; 'n'
0000000000000b15         db  0x00 ; '.'
0000000000000b16         db  0x66 ; 'f'
0000000000000b17         db  0x69 ; 'i'
0000000000000b18         db  0x6c ; 'l'
0000000000000b19         db  0x65 ; 'e'
0000000000000b1a         db  0x6e ; 'n'
0000000000000b1b         db  0x6f ; 'o'
0000000000000b1c         db  0x00 ; '.'
0000000000000b1d         db  0x66 ; 'f'
0000000000000b1e         db  0x77 ; 'w'
0000000000000b1f         db  0x72 ; 'r'
0000000000000b20         db  0x69 ; 'i'
0000000000000b21         db  0x74 ; 't'
0000000000000b22         db  0x65 ; 'e'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x5f ; '_'
0000000000000b25         db  0x5f ; '_'
0000000000000b26         db  0x66 ; 'f'
0000000000000b27         db  0x70 ; 'p'
0000000000000b28         db  0x65 ; 'e'
0000000000000b29         db  0x6e ; 'n'
0000000000000b2a         db  0x64 ; 'd'
0000000000000b2b         db  0x69 ; 'i'
0000000000000b2c         db  0x6e ; 'n'
0000000000000b2d         db  0x67 ; 'g'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x73 ; 's'
0000000000000b30         db  0x74 ; 't'
0000000000000b31         db  0x72 ; 'r'
0000000000000b32         db  0x63 ; 'c'
0000000000000b33         db  0x68 ; 'h'
0000000000000b34         db  0x72 ; 'r'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x70 ; 'p'
0000000000000b37         db  0x72 ; 'r'
0000000000000b38         db  0x6f ; 'o'
0000000000000b39         db  0x67 ; 'g'
0000000000000b3a         db  0x72 ; 'r'
0000000000000b3b         db  0x61 ; 'a'
0000000000000b3c         db  0x6d ; 'm'
0000000000000b3d         db  0x5f ; '_'
0000000000000b3e         db  0x69 ; 'i'
0000000000000b3f         db  0x6e ; 'n'
0000000000000b40         db  0x76 ; 'v'
0000000000000b41         db  0x6f ; 'o'
0000000000000b42         db  0x63 ; 'c'
0000000000000b43         db  0x61 ; 'a'
0000000000000b44         db  0x74 ; 't'
0000000000000b45         db  0x69 ; 'i'
0000000000000b46         db  0x6f ; 'o'
0000000000000b47         db  0x6e ; 'n'
0000000000000b48         db  0x5f ; '_'
                     aShortname:
0000000000000b49         db         "short_name", 0
0000000000000b54         db  0x5f ; '_'
0000000000000b55         db  0x5f ; '_'
0000000000000b56         db  0x63 ; 'c'
0000000000000b57         db  0x74 ; 't'
0000000000000b58         db  0x79 ; 'y'
0000000000000b59         db  0x70 ; 'p'
0000000000000b5a         db  0x65 ; 'e'
0000000000000b5b         db  0x5f ; '_'
0000000000000b5c         db  0x74 ; 't'
0000000000000b5d         db  0x6f ; 'o'
0000000000000b5e         db  0x75 ; 'u'
0000000000000b5f         db  0x70 ; 'p'
0000000000000b60         db  0x70 ; 'p'
0000000000000b61         db  0x65 ; 'e'
0000000000000b62         db  0x72 ; 'r'
0000000000000b63         db  0x5f ; '_'
0000000000000b64         db  0x6c ; 'l'
0000000000000b65         db  0x6f ; 'o'
0000000000000b66         db  0x63 ; 'c'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x5f ; '_'
0000000000000b69         db  0x5f ; '_'
0000000000000b6a         db  0x63 ; 'c'
0000000000000b6b         db  0x78 ; 'x'
0000000000000b6c         db  0x61 ; 'a'
0000000000000b6d         db  0x5f ; '_'
0000000000000b6e         db  0x66 ; 'f'
0000000000000b6f         db  0x69 ; 'i'
0000000000000b70         db  0x6e ; 'n'
0000000000000b71         db  0x61 ; 'a'
0000000000000b72         db  0x6c ; 'l'
0000000000000b73         db  0x69 ; 'i'
0000000000000b74         db  0x7a ; 'z'
0000000000000b75         db  0x65 ; 'e'
0000000000000b76         db  0x00 ; '.'
0000000000000b77         db  0x62 ; 'b'
0000000000000b78         db  0x69 ; 'i'
0000000000000b79         db  0x6e ; 'n'
0000000000000b7a         db  0x64 ; 'd'
0000000000000b7b         db  0x74 ; 't'
0000000000000b7c         db  0x65 ; 'e'
0000000000000b7d         db  0x78 ; 'x'
0000000000000b7e         db  0x74 ; 't'
0000000000000b7f         db  0x64 ; 'd'
0000000000000b80         db  0x6f ; 'o'
0000000000000b81         db  0x6d ; 'm'
0000000000000b82         db  0x61 ; 'a'
0000000000000b83         db  0x69 ; 'i'
0000000000000b84         db  0x6e ; 'n'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x66 ; 'f'
0000000000000b87         db  0x77 ; 'w'
0000000000000b88         db  0x72 ; 'r'
0000000000000b89         db  0x69 ; 'i'
0000000000000b8a         db  0x74 ; 't'
0000000000000b8b         db  0x65 ; 'e'
0000000000000b8c         db  0x5f ; '_'
0000000000000b8d         db  0x75 ; 'u'
0000000000000b8e         db  0x6e ; 'n'
0000000000000b8f         db  0x6c ; 'l'
0000000000000b90         db  0x6f ; 'o'
0000000000000b91         db  0x63 ; 'c'
0000000000000b92         db  0x6b ; 'k'
0000000000000b93         db  0x65 ; 'e'
0000000000000b94         db  0x64 ; 'd'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x73 ; 's'
0000000000000b97         db  0x74 ; 't'
0000000000000b98         db  0x72 ; 'r'
0000000000000b99         db  0x63 ; 'c'
0000000000000b9a         db  0x6d ; 'm'
0000000000000b9b         db  0x70 ; 'p'
0000000000000b9c         db  0x00 ; '.'
0000000000000b9d         db  0x5f ; '_'
0000000000000b9e         db  0x5f ; '_'
0000000000000b9f         db  0x6c ; 'l'
0000000000000ba0         db  0x69 ; 'i'
0000000000000ba1         db  0x62 ; 'b'
0000000000000ba2         db  0x63 ; 'c'
0000000000000ba3         db  0x5f ; '_'
0000000000000ba4         db  0x73 ; 's'
0000000000000ba5         db  0x74 ; 't'
0000000000000ba6         db  0x61 ; 'a'
0000000000000ba7         db  0x72 ; 'r'
0000000000000ba8         db  0x74 ; 't'
0000000000000ba9         db  0x5f ; '_'
0000000000000baa         db  0x6d ; 'm'
0000000000000bab         db  0x61 ; 'a'
0000000000000bac         db  0x69 ; 'i'
0000000000000bad         db  0x6e ; 'n'
0000000000000bae         db  0x00 ; '.'
0000000000000baf         db  0x66 ; 'f'
0000000000000bb0         db  0x73 ; 's'
0000000000000bb1         db  0x65 ; 'e'
0000000000000bb2         db  0x65 ; 'e'
0000000000000bb3         db  0x6b ; 'k'
0000000000000bb4         db  0x6f ; 'o'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x73 ; 's'
0000000000000bb7         db  0x74 ; 't'
0000000000000bb8         db  0x72 ; 'r'
0000000000000bb9         db  0x63 ; 'c'
0000000000000bba         db  0x6f ; 'o'
0000000000000bbb         db  0x6c ; 'l'
0000000000000bbc         db  0x6c ; 'l'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x5f ; '_'
0000000000000bbf         db  0x5f ; '_'
0000000000000bc0         db  0x6f ; 'o'
0000000000000bc1         db  0x76 ; 'v'
0000000000000bc2         db  0x65 ; 'e'
0000000000000bc3         db  0x72 ; 'r'
0000000000000bc4         db  0x66 ; 'f'
0000000000000bc5         db  0x6c ; 'l'
0000000000000bc6         db  0x6f ; 'o'
0000000000000bc7         db  0x77 ; 'w'
0000000000000bc8         db  0x00 ; '.'
0000000000000bc9         db  0x66 ; 'f'
0000000000000bca         db  0x70 ; 'p'
0000000000000bcb         db  0x75 ; 'u'
0000000000000bcc         db  0x74 ; 't'
0000000000000bcd         db  0x73 ; 's'
0000000000000bce         db  0x5f ; '_'
0000000000000bcf         db  0x75 ; 'u'
0000000000000bd0         db  0x6e ; 'n'
0000000000000bd1         db  0x6c ; 'l'
0000000000000bd2         db  0x6f ; 'o'
0000000000000bd3         db  0x63 ; 'c'
0000000000000bd4         db  0x6b ; 'k'
0000000000000bd5         db  0x65 ; 'e'
0000000000000bd6         db  0x64 ; 'd'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x66 ; 'f'
0000000000000bd9         db  0x72 ; 'r'
0000000000000bda         db  0x65 ; 'e'
0000000000000bdb         db  0x65 ; 'e'
0000000000000bdc         db  0x00 ; '.'
0000000000000bdd         db  0x5f ; '_'
0000000000000bde         db  0x5f ; '_'
0000000000000bdf         db  0x70 ; 'p'
0000000000000be0         db  0x72 ; 'r'
0000000000000be1         db  0x6f ; 'o'
0000000000000be2         db  0x67 ; 'g'
0000000000000be3         db  0x6e ; 'n'
0000000000000be4         db  0x61 ; 'a'
0000000000000be5         db  0x6d ; 'm'
0000000000000be6         db  0x65 ; 'e'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x5f ; '_'
0000000000000be9         db  0x5f ; '_'
0000000000000bea         db  0x70 ; 'p'
0000000000000beb         db  0x72 ; 'r'
0000000000000bec         db  0x6f ; 'o'
0000000000000bed         db  0x67 ; 'g'
0000000000000bee         db  0x6e ; 'n'
0000000000000bef         db  0x61 ; 'a'
0000000000000bf0         db  0x6d ; 'm'
0000000000000bf1         db  0x65 ; 'e'
0000000000000bf2         db  0x5f ; '_'
0000000000000bf3         db  0x66 ; 'f'
0000000000000bf4         db  0x75 ; 'u'
0000000000000bf5         db  0x6c ; 'l'
0000000000000bf6         db  0x6c ; 'l'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x5f ; '_'
0000000000000bf9         db  0x5f ; '_'
0000000000000bfa         db  0x63 ; 'c'
0000000000000bfb         db  0x78 ; 'x'
0000000000000bfc         db  0x61 ; 'a'
0000000000000bfd         db  0x5f ; '_'
0000000000000bfe         db  0x61 ; 'a'
0000000000000bff         db  0x74 ; 't'
                     aExit:
0000000000000c00         db         "exit", 0
0000000000000c05         db  0x47 ; 'G'
0000000000000c06         db  0x4c ; 'L'
0000000000000c07         db  0x49 ; 'I'
0000000000000c08         db  0x42 ; 'B'
0000000000000c09         db  0x43 ; 'C'
0000000000000c0a         db  0x5f ; '_'
0000000000000c0b         db  0x32 ; '2'
0000000000000c0c         db  0x2e ; '.'
0000000000000c0d         db  0x33 ; '3'
0000000000000c0e         db  0x2e ; '.'
0000000000000c0f         db  0x34 ; '4'
0000000000000c10         db  0x00 ; '.'
0000000000000c11         db  0x47 ; 'G'
0000000000000c12         db  0x4c ; 'L'
0000000000000c13         db  0x49 ; 'I'
0000000000000c14         db  0x42 ; 'B'
0000000000000c15         db  0x43 ; 'C'
0000000000000c16         db  0x5f ; '_'
0000000000000c17         db  0x32 ; '2'
0000000000000c18         db  0x2e ; '.'
0000000000000c19         db  0x31 ; '1'
0000000000000c1a         db  0x34 ; '4'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x47 ; 'G'
0000000000000c1d         db  0x4c ; 'L'
0000000000000c1e         db  0x49 ; 'I'
0000000000000c1f         db  0x42 ; 'B'
0000000000000c20         db  0x43 ; 'C'
0000000000000c21         db  0x5f ; '_'
0000000000000c22         db  0x32 ; '2'
0000000000000c23         db  0x2e ; '.'
0000000000000c24         db  0x34 ; '4'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x47 ; 'G'
0000000000000c27         db  0x4c ; 'L'
0000000000000c28         db  0x49 ; 'I'
0000000000000c29         db  0x42 ; 'B'
0000000000000c2a         db  0x43 ; 'C'
0000000000000c2b         db  0x5f ; '_'
0000000000000c2c         db  0x32 ; '2'
0000000000000c2d         db  0x2e ; '.'
0000000000000c2e         db  0x32 ; '2'
0000000000000c2f         db  0x2e ; '.'
0000000000000c30         db  0x35 ; '5'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x47 ; 'G'
0000000000000c33         db  0x4c ; 'L'
0000000000000c34         db  0x49 ; 'I'
0000000000000c35         db  0x42 ; 'B'
0000000000000c36         db  0x43 ; 'C'
0000000000000c37         db  0x5f ; '_'
0000000000000c38         db  0x32 ; '2'
0000000000000c39         db  0x2e ; '.'
0000000000000c3a         db  0x33 ; '3'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x5f ; '_'
0000000000000c3d         db  0x49 ; 'I'
0000000000000c3e         db  0x54 ; 'T'
0000000000000c3f         db  0x4d ; 'M'
0000000000000c40         db  0x5f ; '_'
0000000000000c41         db  0x64 ; 'd'
0000000000000c42         db  0x65 ; 'e'
0000000000000c43         db  0x72 ; 'r'
0000000000000c44         db  0x65 ; 'e'
0000000000000c45         db  0x67 ; 'g'
0000000000000c46         db  0x69 ; 'i'
0000000000000c47         db  0x73 ; 's'
0000000000000c48         db  0x74 ; 't'
0000000000000c49         db  0x65 ; 'e'
0000000000000c4a         db  0x72 ; 'r'
0000000000000c4b         db  0x54 ; 'T'
0000000000000c4c         db  0x4d ; 'M'
0000000000000c4d         db  0x43 ; 'C'
0000000000000c4e         db  0x6c ; 'l'
0000000000000c4f         db  0x6f ; 'o'
0000000000000c50         db  0x6e ; 'n'
0000000000000c51         db  0x65 ; 'e'
0000000000000c52         db  0x54 ; 'T'
0000000000000c53         db  0x61 ; 'a'
0000000000000c54         db  0x62 ; 'b'
0000000000000c55         db  0x6c ; 'l'
0000000000000c56         db  0x65 ; 'e'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x5f ; '_'
0000000000000c59         db  0x5f ; '_'
0000000000000c5a         db  0x67 ; 'g'
0000000000000c5b         db  0x6d ; 'm'
0000000000000c5c         db  0x6f ; 'o'
0000000000000c5d         db  0x6e ; 'n'
0000000000000c5e         db  0x5f ; '_'
0000000000000c5f         db  0x73 ; 's'
0000000000000c60         db  0x74 ; 't'
0000000000000c61         db  0x61 ; 'a'
0000000000000c62         db  0x72 ; 'r'
0000000000000c63         db  0x74 ; 't'
0000000000000c64         db  0x5f ; '_'
0000000000000c65         db  0x5f ; '_'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x5f ; '_'
0000000000000c68         db  0x49 ; 'I'
0000000000000c69         db  0x54 ; 'T'
0000000000000c6a         db  0x4d ; 'M'
0000000000000c6b         db  0x5f ; '_'
0000000000000c6c         db  0x72 ; 'r'
0000000000000c6d         db  0x65 ; 'e'
0000000000000c6e         db  0x67 ; 'g'
0000000000000c6f         db  0x69 ; 'i'
0000000000000c70         db  0x73 ; 's'
0000000000000c71         db  0x74 ; 't'
0000000000000c72         db  0x65 ; 'e'
0000000000000c73         db  0x72 ; 'r'
0000000000000c74         db  0x54 ; 'T'
0000000000000c75         db  0x4d ; 'M'
0000000000000c76         db  0x43 ; 'C'
0000000000000c77         db  0x6c ; 'l'
0000000000000c78         db  0x6f ; 'o'
0000000000000c79         db  0x6e ; 'n'
0000000000000c7a         db  0x65 ; 'e'
0000000000000c7b         db  0x54 ; 'T'
0000000000000c7c         db  0x61 ; 'a'
0000000000000c7d         db  0x62 ; 'b'
0000000000000c7e         db  0x6c ; 'l'
0000000000000c7f         db  0x65 ; 'e'
0000000000000c80         db  0x00 ; '.'
0000000000000c81         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xc82; 0xd0e[ (140 bytes)
        ; File offset : [3202; 3342[ (140 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x02 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x03 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x03 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x03 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x03 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x03 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x03 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x03 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x03 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x03 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x03 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x03 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x03 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x03 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x03 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x04 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x03 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x03 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x03 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x03 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x03 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x03 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x03 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x03 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x03 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x03 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x03 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x03 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x03 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x03 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x03 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x03 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x03 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x00 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x03 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x05 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x03 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x03 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x03 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x03 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x03 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x03 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x03 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x03 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x03 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x06 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x03 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x03 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x03 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x03 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x03 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x03 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x03 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x06 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x03 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x03 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x03 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x02 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x03 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x03 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x03 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x03 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x03 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x03 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x03 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x03 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x03 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xd10; 0xd70[ (96 bytes)
        ; File offset : [3344; 3440[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000d10         db  0x01 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x05 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x01 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x10 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x74 ; 't'
0000000000000d21         db  0x19 ; '.'
0000000000000d22         db  0x69 ; 'i'
0000000000000d23         db  0x09 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x06 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x95 ; '.'
0000000000000d29         db  0x02 ; '.'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x10 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x94 ; '.'
0000000000000d31         db  0x91 ; '.'
0000000000000d32         db  0x96 ; '.'
0000000000000d33         db  0x06 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x05 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0xa1 ; '.'
0000000000000d39         db  0x02 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x10 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x14 ; '.'
0000000000000d41         db  0x69 ; 'i'
0000000000000d42         db  0x69 ; 'i'
0000000000000d43         db  0x0d ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x04 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0xac ; '.'
0000000000000d49         db  0x02 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x10 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x75 ; 'u'
0000000000000d51         db  0x1a ; '.'
0000000000000d52         db  0x69 ; 'i'
0000000000000d53         db  0x09 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x03 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0xb6 ; '.'
0000000000000d59         db  0x02 ; '.'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x10 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x13 ; '.'
0000000000000d61         db  0x69 ; 'i'
0000000000000d62         db  0x69 ; 'i'
0000000000000d63         db  0x0d ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x02 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0xc2 ; '.'
0000000000000d69         db  0x02 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xd70; 0x11f0[ (1152 bytes)
        ; File offset : [3440; 4592[ (1152 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000d70         db  0xb0 ; '.'
0000000000000d71         db  0x99 ; '.'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x90 ; '.'
0000000000000d81         db  0x26 ; '&'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xb8 ; '.'
0000000000000d89         db  0x99 ; '.'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x50 ; 'P'
0000000000000d99         db  0x26 ; '&'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xc0 ; '.'
0000000000000da1         db  0x99 ; '.'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x98 ; '.'
0000000000000db1         db  0x68 ; 'h'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xe0 ; '.'
0000000000000db9         db  0x99 ; '.'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x50 ; 'P'
0000000000000dc9         db  0x68 ; 'h'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x00 ; '.'
0000000000000dd1         db  0x9a ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x4c ; 'L'
0000000000000de1         db  0x68 ; 'h'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x20 ; ' '
0000000000000de9         db  0x9a ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x5b ; '['
0000000000000df9         db  0x68 ; 'h'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x40 ; '@'
0000000000000e01         db  0x9a ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x9e ; '.'
0000000000000e11         db  0x68 ; 'h'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x60 ; '`'
0000000000000e19         db  0x9a ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0xaa ; '.'
0000000000000e29         db  0x68 ; 'h'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x80 ; '.'
0000000000000e31         db  0x9a ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xb1 ; '.'
0000000000000e41         db  0x68 ; 'h'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0xa0 ; '.'
0000000000000e49         db  0x9a ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0xbd ; '.'
0000000000000e59         db  0x68 ; 'h'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xc0 ; '.'
0000000000000e61         db  0x9a ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xc8 ; '.'
0000000000000e71         db  0x68 ; 'h'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xe0 ; '.'
0000000000000e79         db  0x9a ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0xd4 ; '.'
0000000000000e89         db  0x68 ; 'h'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x00 ; '.'
0000000000000e91         db  0x9b ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0xe4 ; '.'
0000000000000ea1         db  0x68 ; 'h'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x20 ; ' '
0000000000000ea9         db  0x9b ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x08 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xe9 ; '.'
0000000000000eb9         db  0x68 ; 'h'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x60 ; '`'
0000000000000ec1         db  0x9b ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x08 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0xf1 ; '.'
0000000000000ed1         db  0x68 ; 'h'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x68 ; 'h'
0000000000000ed9         db  0x9b ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x08 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0xf9 ; '.'
0000000000000ee9         db  0x68 ; 'h'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x70 ; 'p'
0000000000000ef1         db  0x9b ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x08 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x69 ; 'i'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x78 ; 'x'
0000000000000f09         db  0x9b ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x08 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x09 ; '.'
0000000000000f19         db  0x69 ; 'i'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xa0 ; '.'
0000000000000f21         db  0x9b ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x08 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x0e ; '.'
0000000000000f31         db  0x69 ; 'i'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0xa8 ; '.'
0000000000000f39         db  0x9b ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x08 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0xf1 ; '.'
0000000000000f49         db  0x68 ; 'h'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0xb0 ; '.'
0000000000000f51         db  0x9b ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x08 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x69 ; 'i'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0xc0 ; '.'
0000000000000f69         db  0x9b ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x08 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x89 ; '.'
0000000000000f79         db  0x72 ; 'r'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0xc8 ; '.'
0000000000000f81         db  0x9b ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x08 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x91 ; '.'
0000000000000f91         db  0x72 ; 'r'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0xd0 ; '.'
0000000000000f99         db  0x9b ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x08 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x97 ; '.'
0000000000000fa9         db  0x72 ; 'r'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0xd8 ; '.'
0000000000000fb1         db  0x9b ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x08 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0xa4 ; '.'
0000000000000fc1         db  0x72 ; 'r'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0xe0 ; '.'
0000000000000fc9         db  0x9b ; '.'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x08 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0xb1 ; '.'
0000000000000fd9         db  0x72 ; 'r'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0xe8 ; '.'
0000000000000fe1         db  0x9b ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x08 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0xc5 ; '.'
0000000000000ff1         db  0x72 ; 'r'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0xf0 ; '.'
0000000000000ff9         db  0x9b ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x08 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0xc7 ; '.'
0000000000001009         db  0x72 ; 'r'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0xf8 ; '.'
0000000000001011         db  0x9b ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x08 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0xaa ; '.'
0000000000001021         db  0x72 ; 'r'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0x9c ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x08 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x1a ; '.'
0000000000001039         db  0x68 ; 'h'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x08 ; '.'
0000000000001041         db  0x9c ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x08 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0xcf ; '.'
0000000000001051         db  0x72 ; 'r'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x08 ; '.'
0000000000001059         db  0xa0 ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x08 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x08 ; '.'
0000000000001069         db  0xa0 ; '.'
000000000000106a         db  0x20 ; ' '
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x10 ; '.'
0000000000001071         db  0xa0 ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x08 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x9c ; '.'
0000000000001081         db  0x71 ; 'q'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x18 ; '.'
0000000000001089         db  0xa0 ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x08 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0xe0 ; '.'
0000000000001099         db  0x2d ; '-'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x80 ; '.'
00000000000010a1         db  0xa0 ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x08 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x90 ; '.'
00000000000010b1         db  0xa0 ; '.'
00000000000010b2         db  0x20 ; ' '
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x98 ; '.'
00000000000010b9         db  0xa0 ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x08 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x40 ; '@'
00000000000010c9         db  0xa1 ; '.'
00000000000010ca         db  0x20 ; ' '
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0xd8 ; '.'
00000000000010d1         db  0x9f ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x06 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x08 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0xe0 ; '.'
00000000000010e9         db  0x9f ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x06 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x1e ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0xe8 ; '.'
0000000000001101         db  0x9f ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x06 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x23 ; '#'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xf0 ; '.'
0000000000001119         db  0x9f ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x06 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x38 ; '8'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xf8 ; '.'
0000000000001131         db  0x9f ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x06 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x3b ; ';'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xa0 ; '.'
0000000000001149         db  0xa0 ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x05 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x3e ; '>'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xa8 ; '.'
0000000000001161         db  0xa0 ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x05 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x3d ; '='
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0xb0 ; '.'
0000000000001179         db  0xa0 ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x05 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x3f ; '?'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0xb8 ; '.'
0000000000001191         db  0xa0 ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x05 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x44 ; 'D'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0xc0 ; '.'
00000000000011a9         db  0xa0 ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x05 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x45 ; 'E'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0xc8 ; '.'
00000000000011c1         db  0xa0 ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x05 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x41 ; 'A'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0xe0 ; '.'
00000000000011d9         db  0xa0 ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x05 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x43 ; 'C'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x11f0; 0x1718[ (1320 bytes)
        ; File offset : [4592; 5912[ (1320 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000011f0         db  0x20 ; ' '
00000000000011f1         db  0x9e ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x01 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x28 ; '('
0000000000001209         db  0x9e ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x02 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x30 ; '0'
0000000000001221         db  0x9e ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x03 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x38 ; '8'
0000000000001239         db  0x9e ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x04 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x40 ; '@'
0000000000001251         db  0x9e ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x05 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x48 ; 'H'
0000000000001269         db  0x9e ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x06 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x50 ; 'P'
0000000000001281         db  0x9e ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x07 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x58 ; 'X'
0000000000001299         db  0x9e ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x09 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x60 ; '`'
00000000000012b1         db  0x9e ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x0a ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x68 ; 'h'
00000000000012c9         db  0x9e ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x0b ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x70 ; 'p'
00000000000012e1         db  0x9e ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x0c ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x78 ; 'x'
00000000000012f9         db  0x9e ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x0d ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x80 ; '.'
0000000000001311         db  0x9e ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x0e ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x88 ; '.'
0000000000001329         db  0x9e ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x0f ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x90 ; '.'
0000000000001341         db  0x9e ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x10 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x98 ; '.'
0000000000001359         db  0x9e ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x11 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0xa0 ; '.'
0000000000001371         db  0x9e ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x12 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0xa8 ; '.'
0000000000001389         db  0x9e ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x13 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0xb0 ; '.'
00000000000013a1         db  0x9e ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x14 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0xb8 ; '.'
00000000000013b9         db  0x9e ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x15 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0xc0 ; '.'
00000000000013d1         db  0x9e ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x16 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0xc8 ; '.'
00000000000013e9         db  0x9e ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x17 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0xd0 ; '.'
0000000000001401         db  0x9e ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x18 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0xd8 ; '.'
0000000000001419         db  0x9e ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x19 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0xe0 ; '.'
0000000000001431         db  0x9e ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x1a ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0xe8 ; '.'
0000000000001449         db  0x9e ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x1b ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0xf0 ; '.'
0000000000001461         db  0x9e ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x1c ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0xf8 ; '.'
0000000000001479         db  0x9e ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x1d ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x00 ; '.'
0000000000001491         db  0x9f ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x1f ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x08 ; '.'
00000000000014a9         db  0x9f ; '.'
00000000000014aa         db  0x20 ; ' '
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x07 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x20 ; ' '
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x00 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x10 ; '.'
00000000000014c1         db  0x9f ; '.'
00000000000014c2         db  0x20 ; ' '
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x07 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x21 ; '!'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x00 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x18 ; '.'
00000000000014d9         db  0x9f ; '.'
00000000000014da         db  0x20 ; ' '
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x07 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x22 ; '"'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x00 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x20 ; ' '
00000000000014f1         db  0x9f ; '.'
00000000000014f2         db  0x20 ; ' '
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x07 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x24 ; '$'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x00 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x28 ; '('
0000000000001509         db  0x9f ; '.'
000000000000150a         db  0x20 ; ' '
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x07 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x25 ; '%'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x00 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x30 ; '0'
0000000000001521         db  0x9f ; '.'
0000000000001522         db  0x20 ; ' '
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x07 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x26 ; '&'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x00 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x38 ; '8'
0000000000001539         db  0x9f ; '.'
000000000000153a         db  0x20 ; ' '
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x07 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x27 ; '''
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x00 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x40 ; '@'
0000000000001551         db  0x9f ; '.'
0000000000001552         db  0x20 ; ' '
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x07 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x28 ; '('
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x00 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x48 ; 'H'
0000000000001569         db  0x9f ; '.'
000000000000156a         db  0x20 ; ' '
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x07 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x29 ; ')'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x00 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x50 ; 'P'
0000000000001581         db  0x9f ; '.'
0000000000001582         db  0x20 ; ' '
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x07 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x2a ; '*'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x00 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x58 ; 'X'
0000000000001599         db  0x9f ; '.'
000000000000159a         db  0x20 ; ' '
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x07 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x2b ; '+'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x00 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x60 ; '`'
00000000000015b1         db  0x9f ; '.'
00000000000015b2         db  0x20 ; ' '
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x07 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x2c ; ','
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x00 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x68 ; 'h'
00000000000015c9         db  0x9f ; '.'
00000000000015ca         db  0x20 ; ' '
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x07 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x2d ; '-'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x00 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x70 ; 'p'
00000000000015e1         db  0x9f ; '.'
00000000000015e2         db  0x20 ; ' '
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x07 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x2e ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x00 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x78 ; 'x'
00000000000015f9         db  0x9f ; '.'
00000000000015fa         db  0x20 ; ' '
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x07 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x2f ; '/'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x00 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x80 ; '.'
0000000000001611         db  0x9f ; '.'
0000000000001612         db  0x20 ; ' '
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x07 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x30 ; '0'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x00 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x88 ; '.'
0000000000001629         db  0x9f ; '.'
000000000000162a         db  0x20 ; ' '
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x07 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x31 ; '1'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x00 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x90 ; '.'
0000000000001641         db  0x9f ; '.'
0000000000001642         db  0x20 ; ' '
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x07 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x32 ; '2'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x00 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x98 ; '.'
0000000000001659         db  0x9f ; '.'
000000000000165a         db  0x20 ; ' '
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x07 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x33 ; '3'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x00 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0xa0 ; '.'
0000000000001671         db  0x9f ; '.'
0000000000001672         db  0x20 ; ' '
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x07 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x34 ; '4'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x00 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0xa8 ; '.'
0000000000001689         db  0x9f ; '.'
000000000000168a         db  0x20 ; ' '
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x07 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x35 ; '5'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x00 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0xb0 ; '.'
00000000000016a1         db  0x9f ; '.'
00000000000016a2         db  0x20 ; ' '
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x07 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x36 ; '6'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x00 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0xb8 ; '.'
00000000000016b9         db  0x9f ; '.'
00000000000016ba         db  0x20 ; ' '
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x07 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x37 ; '7'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x00 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0xc0 ; '.'
00000000000016d1         db  0x9f ; '.'
00000000000016d2         db  0x20 ; ' '
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x07 ; '.'
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x39 ; '9'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x00 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0xc8 ; '.'
00000000000016e9         db  0x9f ; '.'
00000000000016ea         db  0x20 ; ' '
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x07 ; '.'
00000000000016f1         db  0x00 ; '.'
00000000000016f2         db  0x00 ; '.'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x3a ; ':'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x00 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0xd0 ; '.'
0000000000001701         db  0x9f ; '.'
0000000000001702         db  0x20 ; ' '
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x07 ; '.'
0000000000001709         db  0x00 ; '.'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x3c ; '<'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x00 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1718; 0x172f[ (23 bytes)
        ; File offset : [5912; 5935[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001718         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000171c         mov        rax, qword [qword_209fe8]                   ; qword_209fe8
0000000000001723         test       rax, rax
0000000000001726         je         loc_172a

0000000000001728         call       rax

                     loc_172a:
000000000000172a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000172e         ret
                        ; endp
000000000000172f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1730; 0x1ab0[ (896 bytes)
        ; File offset : [5936; 6832[ (896 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1730:
0000000000001730         push       qword [qword_209e10]                        ; Begin of unwind block (FDE at 0x7fcc), qword_209e10, CODE XREF=sub_1746+5
0000000000001736         jmp        qword [qword_209e10+8]                      ; 0x209e18
                        ; endp
000000000000173c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_toupper_loc:        // __ctype_toupper_loc
0000000000001740         jmp        qword [__ctype_toupper_loc@GOT]             ; __ctype_toupper_loc, __ctype_toupper_loc@GOT, CODE XREF=memcasecmp+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x0
000000000000174b         jmp        loc_1730


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
0000000000001750         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=readlinebuffer_delim+187
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x1
000000000000175b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000001760         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=main+49, posix2_version+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x2
000000000000176b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001770         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+1200, main+1210, freebuffer+4, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x3
000000000000177b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001780         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3fd0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x4
000000000000178b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001790         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1954, main+2738, close_stdout+22, protect_fd+46, freopen_safer+35, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, xmemcoll+28, xmemcoll0+28
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x5
000000000000179b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000017a0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+884, usage+1077, argmatch+162
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x6
00000000000017ab         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000017b0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x7
00000000000017bb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000017c0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x8
00000000000017cb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000017d0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x9
00000000000017db         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000017e0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0xa
00000000000017eb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000017f0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+130
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0xb
00000000000017fb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001800         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+2276, main+2610, main+2691, size_opt+92, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+294
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0xc
000000000000180b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001810         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0xd
000000000000181b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001820         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=argmatch+33, argmatch+174, quotearg_buffer_restyled+343, sub_3fd0+411, sub_3fd0+1742, xstrdup+4, strcoll_loop+43, strcoll_loop+55
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0xe
000000000000182b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001830         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+2715, size_opt+124, posix2_version+137, sub_3fd0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0xf
000000000000183b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001840         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+378
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x10
000000000000184b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001850         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x11
000000000000185b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dup2:        // dup2
0000000000001860         jmp        qword [dup2@GOT]                            ; dup2, dup2@GOT, CODE XREF=freopen_safer+79, freopen_safer+100, freopen_safer+116
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x12
000000000000186b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001870         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoul+291, xstrtoul+323, xstrtoul+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x13
000000000000187b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001880         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+2574, main+2646, main+2660, argmatch_valid+283
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x14
000000000000188b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001890         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x15
000000000000189b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000018a0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x16
00000000000018ab         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000018b0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoul+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x17
00000000000018bb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000018c0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x18
00000000000018cb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_freopen:        // freopen
00000000000018d0         jmp        qword [freopen@GOT]                         ; freopen, freopen@GOT, CODE XREF=freopen_safer+187
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x19
00000000000018db         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
00000000000018e0         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=protect_fd+41, freopen_safer+307, freopen_safer+325, freopen_safer+337, freopen_safer+373
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x1a
00000000000018eb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
00000000000018f0         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x1b
00000000000018fb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001900         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=different+75, argmatch+111, argmatch_valid+150, argmatch_to_argument+56, quotearg_buffer_restyled+410, memcoll+37, memcoll0+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x1c
000000000000190b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001910         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+416, usage+453, usage+490, usage+527
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x1d
000000000000191b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001920         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x1e
000000000000192b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001930         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+730, main+753
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x1f
000000000000193b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtol:        // strtol
0000000000001940         jmp        qword [strtol@GOT]                          ; strtol, strtol@GOT, CODE XREF=posix2_version+91
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x20
000000000000194b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001950         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x21
000000000000195b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001960         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, freopen_safer+28, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x22
000000000000196b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001970         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x23
000000000000197b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001980         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x24
000000000000198b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001990         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x25
000000000000199b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcoll:        // strcoll
00000000000019a0         jmp        qword [strcoll@GOT]                         ; strcoll, strcoll@GOT, CODE XREF=strcoll_loop+96
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x26
00000000000019ab         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000019b0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0x27
00000000000019bb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
00000000000019c0         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=main+2171, writeline+54
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0x28
00000000000019cb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000019d0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x29
00000000000019db         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000019e0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+111, usage+859, usage+1052, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0x2a
00000000000019eb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000019f0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=writeline+120, usage+120, usage+847, usage+940, usage+1001, usage+1040, usage+1143, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0x2b
00000000000019fb         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001a00         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+1978, main+2296, main+2627, main+2705, main+2762, size_opt+119, argmatch_invalid+88, close_stdout+125, close_stdout+157, xalloc_die+43, collate_error+52
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0x2c
0000000000001a0b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001a10         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=protect_fd+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x2d
0000000000001a1b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001a20         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x2e
0000000000001a2b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtoul:        // strtoul
0000000000001a30         jmp        qword [strtoul@GOT]                         ; strtoul, strtoul@GOT, CODE XREF=xstrtoul+140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x2f
0000000000001a3b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001a40         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x30
0000000000001a4b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001a50         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+1886, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x31
0000000000001a5b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001a60         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x32
0000000000001a6b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001a70         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, argmatch_valid+122, argmatch_valid+198, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0x33
0000000000001a7b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001a80         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3fd0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0x34
0000000000001a8b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001a90         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3fd0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a96:
0000000000001a96         push       0x35
0000000000001a9b         jmp        0x1730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001aa0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=find_field.isra.2+48, sub_3d70+51, xstrtoul+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1aa6:
0000000000001aa6         push       0x36
0000000000001aab         jmp        0x1730
                        ; endp


        ; Section .plt.got
        ; Range: [0x1ab0; 0x1ab8[ (8 bytes)
        ; File offset : [6832; 6840[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209ff8:        // qword_209ff8
0000000000001ab0         jmp        qword [qword_209ff8]                        ; qword, End of unwind block (FDE at 0x7fcc), Begin of unwind block (FDE at 0x7ff4), qword_209ff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001ab6         align      8
0000000000001ab8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7ff4)
0000000000001ab9         db  0x00 ; '.'
0000000000001aba         db  0x00 ; '.'
0000000000001abb         db  0x00 ; '.'
0000000000001abc         db  0x00 ; '.'
0000000000001abd         db  0x00 ; '.'
0000000000001abe         db  0x00 ; '.'
0000000000001abf         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1ac0; 0x672e[ (19566 bytes)
        ; File offset : [6848; 26414[ (19566 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_88: int64_t, -136
        ;    var_98: int8_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B1: int8_t, -177
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208


                     main:
0000000000001ac0         push       r15                                         ; Begin of unwind block (FDE at 0x80f0), DATA XREF=_start+29
0000000000001ac2         push       r14
0000000000001ac4         mov        r14d, edi
0000000000001ac7         push       r13
0000000000001ac9         push       r12
0000000000001acb         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
0000000000001ad2         push       rbp
0000000000001ad3         push       rbx
0000000000001ad4         mov        r15, rsi
0000000000001ad7         sub        rsp, 0xa8
0000000000001ade         mov        rax, qword [fs:0x28]
0000000000001ae7         mov        qword [rsp+0xd8+var_40], rax
0000000000001aef         xor        eax, eax
0000000000001af1         call       j_getenv                                    ; getenv
0000000000001af6         mov        rdi, qword [r15]
0000000000001af9         test       rax, rax
0000000000001afc         lea        rax, qword [aLibs+10]                       ; 0x7272
0000000000001b03         setne      r12b
0000000000001b07         xor        r13d, r13d
0000000000001b0a         xor        ebx, ebx
0000000000001b0c         mov        qword [rsp+0xd8+var_50], rax
0000000000001b14         mov        qword [rsp+0xd8+var_58], rax
0000000000001b1c         xor        ebp, ebp
0000000000001b1e         call       set_program_name                            ; set_program_name
0000000000001b23         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x77a1
0000000000001b2a         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001b2f         call       j_setlocale                                 ; setlocale
0000000000001b34         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001b3b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001b42         call       j_bindtextdomain                            ; bindtextdomain
0000000000001b47         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001b4e         call       j_textdomain                                ; textdomain
0000000000001b53         mov        edi, 0x3
0000000000001b58         call       hard_locale                                 ; hard_locale
0000000000001b5d         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001b64         mov        byte [hard_LC_COLLATE], al                  ; hard_LC_COLLATE
0000000000001b6a         call       atexit                                      ; atexit
0000000000001b6f         lea        rcx, qword [rsp+0xd8+var_78]
0000000000001b74         mov        rax, 0xffffffffffffffff
0000000000001b7b         mov        qword [skip_chars], 0x0                     ; skip_chars
0000000000001b86         mov        qword [skip_fields], 0x0                    ; skip_fields
0000000000001b91         mov        qword [check_chars], rax                    ; check_chars
0000000000001b98         mov        byte [output_first_repeated], 0x1           ; output_first_repeated
0000000000001b9f         mov        byte [output_unique], 0x1                   ; output_unique
0000000000001ba6         mov        byte [output_later_repeated], 0x0           ; output_later_repeated
0000000000001bad         mov        dword [countmode], 0x1                      ; countmode
0000000000001bb7         mov        dword [delimit_groups], 0x0                 ; delimit_groups
0000000000001bc1         mov        byte [rsp+0xd8+var_B1], 0xa
0000000000001bc6         mov        dword [rsp+0xd8+var_D0], 0x0
0000000000001bce         mov        qword [rsp+0xd8+var_C0], rcx
0000000000001bd3         mov        qword [rsp+0xd8+var_C8], rax
0000000000001bd8         jmp        loc_1c1a
0000000000001bda         align      32

                     loc_1be0:
0000000000001be0         test       r12b, r12b                                  ; CODE XREF=main+353
0000000000001be3         je         loc_1c23

                     loc_1be5:
0000000000001be5         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+349, main+388
0000000000001beb         cmp        eax, r14d
0000000000001bee         jge        loc_1d43

0000000000001bf4         movsxd     rdx, eax
0000000000001bf7         cmp        ebx, 0x2
0000000000001bfa         mov        rdi, qword [r15+rdx*8]
0000000000001bfe         je         loc_24dc

0000000000001c04         add        eax, 0x1
0000000000001c07         mov        dword [optind@@GLIBC_2.2.5], eax            ; optind@@GLIBC_2.2.5
0000000000001c0d         mov        eax, ebx
0000000000001c0f         add        ebx, 0x1
0000000000001c12         mov        qword [rsp+rax*8+0xd8+var_58], rdi

                     loc_1c1a:
0000000000001c1a         cmp        ebp, 0xffffffff                             ; CODE XREF=main+280, main+1824, main+2369
0000000000001c1d         je         loc_1be5

                     loc_1c1f:
0000000000001c1f         test       ebx, ebx                                    ; CODE XREF=main+473, main+595, main+638, main+1296, main+1327, main+1423, main+1499, main+1732, main+1750, main+1762, main+1896
0000000000001c21         jne        loc_1be0

                     loc_1c23:
0000000000001c23         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+291
0000000000001c2a         lea        rdx, qword [a0123456789dcdf]                ; argument "__shortopts" for method j_getopt_long, "-0123456789Dcdf:is:uw:z"
0000000000001c31         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001c34         mov        rsi, r15                                    ; argument "___argv" for method j_getopt_long
0000000000001c37         mov        edi, r14d                                   ; argument "___argc" for method j_getopt_long
0000000000001c3a         call       j_getopt_long                               ; getopt_long
0000000000001c3f         cmp        eax, 0xffffffff
0000000000001c42         mov        ebp, eax
0000000000001c44         je         loc_1be5

0000000000001c46         cmp        eax, 0x64
0000000000001c49         je         loc_2189

0000000000001c4f         jle        loc_1ca0

0000000000001c51         cmp        eax, 0x75
0000000000001c54         je         loc_2177

0000000000001c5a         jg         loc_1ce0

0000000000001c60         cmp        eax, 0x69
0000000000001c63         je         loc_219b

0000000000001c69         cmp        eax, 0x73
0000000000001c6c         je         loc_1fd5

0000000000001c72         cmp        eax, 0x66
0000000000001c75         jne        loc_1ccd

0000000000001c77         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001c7e         lea        rsi, qword [aInvalidNumberO]                ; "invalid number of fields to skip"
0000000000001c85         call       size_opt                                    ; size_opt
0000000000001c8a         mov        dword [rsp+0xd8+var_D0], 0x2
0000000000001c92         mov        qword [skip_fields], rax                    ; skip_fields
0000000000001c99         jmp        loc_1c1f
0000000000001c9b         align      32

                     loc_1ca0:
0000000000001ca0         cmp        eax, 0x39                                   ; CODE XREF=main+399
0000000000001ca3         jg         loc_1d20

0000000000001ca5         cmp        eax, 0x30
0000000000001ca8         jge        loc_21a7

0000000000001cae         cmp        eax, 0xffffff7e
0000000000001cb3         je         loc_252e

0000000000001cb9         cmp        eax, 0x1
0000000000001cbc         je         loc_1faa

0000000000001cc2         cmp        eax, 0xffffff7d
0000000000001cc7         je         loc_21e5

                     loc_1ccd:
0000000000001ccd         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+437, main+567, main+620, main+2710
0000000000001cd2         call       usage                                       ; usage
0000000000001cd7         nop        word [rax+rax]

                     loc_1ce0:
0000000000001ce0         cmp        eax, 0x7a                                   ; CODE XREF=main+410
0000000000001ce3         je         loc_2223

0000000000001ce9         cmp        eax, 0x80
0000000000001cee         je         loc_2054

0000000000001cf4         cmp        eax, 0x77
0000000000001cf7         jne        loc_1ccd

0000000000001cf9         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001d00         lea        rsi, qword [aInvalidNumberO_70a8]           ; "invalid number of bytes to compare"
0000000000001d07         call       size_opt                                    ; size_opt
0000000000001d0c         mov        qword [check_chars], rax                    ; check_chars
0000000000001d13         jmp        loc_1c1f
0000000000001d18         align      32

                     loc_1d20:
0000000000001d20         cmp        eax, 0x44                                   ; CODE XREF=main+483
0000000000001d23         je         loc_1ff4

0000000000001d29         cmp        eax, 0x63
0000000000001d2c         jne        loc_1ccd

0000000000001d2e         mov        dword [countmode], 0x0                      ; countmode
0000000000001d38         mov        r13d, 0x1
0000000000001d3e         jmp        loc_1c1f

                     loc_1d43:
0000000000001d43         cmp        dword [grouping], 0x0                       ; grouping, CODE XREF=main+302
0000000000001d4a         je         loc_20a0

0000000000001d50         test       r13b, r13b
0000000000001d53         jne        loc_2535

0000000000001d59         cmp        dword [countmode], 0x1                      ; countmode
0000000000001d60         mov        edx, 0x5
0000000000001d65         lea        rsi, qword [aGroupingAndPri]                ; "grouping and printing repeat counts is meaningless"
0000000000001d6c         jne        loc_2541

                     loc_1d72:
0000000000001d72         movsx      eax, byte [rsp+0xd8+var_B1]                 ; CODE XREF=main+1511, main+1536
0000000000001d77         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x7272
0000000000001d7e         mov        rbx, qword [rsp+0xd8+var_50]
0000000000001d86         mov        dword [rsp+0xd8+var_C0], eax
0000000000001d8a         mov        rax, qword [rsp+0xd8+var_58]
0000000000001d92         mov        rdi, rax                                    ; argument "__s1" for method j_strcmp
0000000000001d95         mov        qword [rsp+0xd8+var_A8], rax
0000000000001d9a         call       j_strcmp                                    ; strcmp
0000000000001d9f         test       eax, eax
0000000000001da1         jne        loc_222d

                     loc_1da7:
0000000000001da7         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x7272, CODE XREF=main+1928
0000000000001dae         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000001db1         call       j_strcmp                                    ; strcmp
0000000000001db6         test       eax, eax
0000000000001db8         je         loc_1dd9

0000000000001dba         mov        rdx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001dc1         lea        rsi, qword [aRichardMStallm+20]             ; 0x6885
0000000000001dc8         mov        rdi, rbx
0000000000001dcb         call       freopen_safer                               ; freopen_safer
0000000000001dd0         test       rax, rax
0000000000001dd3         je         loc_2560

                     loc_1dd9:
0000000000001dd9         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+760
0000000000001de0         lea        rbp, qword [rsp+0xd8+var_98]
0000000000001de5         mov        esi, 0x2
0000000000001dea         lea        r13, qword [rsp+0xd8+var_78]
0000000000001def         call       fadvise                                     ; fadvise
0000000000001df4         mov        rdi, rbp
0000000000001df7         call       initbuffer                                  ; initbuffer
0000000000001dfc         mov        rdi, r13
0000000000001dff         call       initbuffer                                  ; initbuffer
0000000000001e04         cmp        byte [output_unique], 0x0                   ; output_unique
0000000000001e0b         je         loc_1e25

0000000000001e0d         movzx      ebx, byte [output_first_repeated]           ; output_first_repeated
0000000000001e14         test       bl, bl
0000000000001e16         je         loc_1e25

0000000000001e18         cmp        dword [countmode], 0x1                      ; countmode
0000000000001e1f         je         loc_22a3

                     loc_1e25:
0000000000001e25         mov        edx, dword [rsp+0xd8+var_C0]                ; CODE XREF=main+843, main+854
0000000000001e29         mov        rsi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001e30         mov        rdi, r13
0000000000001e33         call       readlinebuffer_delim                        ; readlinebuffer_delim
0000000000001e38         test       rax, rax
0000000000001e3b         je         loc_1f4e

0000000000001e41         mov        r12, qword [rsp+0xd8+var_68]
0000000000001e46         mov        rbx, qword [rsp+0xd8+var_70]
0000000000001e4b         mov        rsi, r12
0000000000001e4e         mov        rdi, rbx
0000000000001e51         sub        rbx, 0x1
0000000000001e55         call       find_field.isra.2                           ; find_field.isra.2
0000000000001e5a         mov        qword [rsp+0xd8+var_C8], rax
0000000000001e5f         sub        rax, r12
0000000000001e62         mov        byte [rsp+0xd8+var_B0], 0x1
0000000000001e67         sub        rbx, rax
0000000000001e6a         xor        r12d, r12d
0000000000001e6d         mov        qword [rsp+0xd8+var_D0], rbx

                     loc_1e72:
0000000000001e72         mov        rsi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+1569, main+1607
0000000000001e79         test       byte [rsi], 0x10
0000000000001e7c         jne        loc_1f41

                     loc_1e82:
0000000000001e82         mov        edx, dword [rsp+0xd8+var_C0]                ; CODE XREF=main+1147
0000000000001e86         mov        rdi, rbp
0000000000001e89         call       readlinebuffer_delim                        ; readlinebuffer_delim
0000000000001e8e         test       rax, rax
0000000000001e91         je         loc_2374

0000000000001e97         mov        rbx, qword [rbp+8]
0000000000001e9b         mov        r15, qword [rbp+0x10]
0000000000001e9f         mov        rdi, rbx
0000000000001ea2         mov        rsi, r15
0000000000001ea5         sub        rbx, 0x1
0000000000001ea9         call       find_field.isra.2                           ; find_field.isra.2
0000000000001eae         mov        rcx, qword [rsp+0xd8+var_D0]
0000000000001eb3         mov        r14, rax
0000000000001eb6         mov        rsi, qword [rsp+0xd8+var_C8]
0000000000001ebb         sub        rax, r15
0000000000001ebe         mov        rdi, r14
0000000000001ec1         sub        rbx, rax
0000000000001ec4         mov        rdx, rbx
0000000000001ec7         call       different                                   ; different
0000000000001ecc         mov        edx, eax
0000000000001ece         xor        edx, 0x1
0000000000001ed1         movzx      ecx, dl
0000000000001ed4         movzx      edx, dl
0000000000001ed7         add        r12, rdx
0000000000001eda         cmp        r12, 0xffffffffffffffff
0000000000001ede         je         loc_2110

0000000000001ee4         mov        edx, dword [delimit_groups]                 ; delimit_groups
0000000000001eea         test       edx, edx
0000000000001eec         je         loc_20d2

0000000000001ef2         test       al, al
0000000000001ef4         je         loc_2136

0000000000001efa         movzx      eax, byte [rsp+0xd8+var_B0]
0000000000001eff         test       r12, r12
0000000000001f02         mov        esi, 0x0
0000000000001f07         cmovne     eax, esi
0000000000001f0a         mov        byte [rsp+0xd8+var_B0], al

                     loc_1f0e:
0000000000001f0e         mov        rdx, r12                                    ; CODE XREF=main+1556, main+1649
0000000000001f11         mov        esi, ecx
0000000000001f13         mov        rdi, r13
0000000000001f16         call       writeline                                   ; writeline
0000000000001f1b         mov        rsi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001f22         xor        r12d, r12d
0000000000001f25         mov        rax, rbp
0000000000001f28         mov        qword [rsp+0xd8+var_D0], rbx
0000000000001f2d         mov        rbp, r13
0000000000001f30         mov        qword [rsp+0xd8+var_C8], r14
0000000000001f35         mov        r13, rax
0000000000001f38         test       byte [rsi], 0x10
0000000000001f3b         je         loc_1e82

                     loc_1f41:
0000000000001f41         mov        rdx, r12                                    ; CODE XREF=main+956, main+2238
0000000000001f44         xor        esi, esi
0000000000001f46         mov        rdi, r13
0000000000001f49         call       writeline                                   ; writeline

                     loc_1f4e:
0000000000001f4e         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+891, main+2386, main+2397, main+2439, main+2665
0000000000001f55         test       byte [rdi], 0x20
0000000000001f58         jne        loc_2384

0000000000001f5e         call       rpl_fclose                                  ; rpl_fclose
0000000000001f63         test       eax, eax
0000000000001f65         jne        loc_2384

0000000000001f6b         mov        rdi, qword [rsp+0xd8+var_88]                ; argument "__ptr" for method j_free
0000000000001f70         call       j_free                                      ; free
0000000000001f75         mov        rdi, qword [rsp+0xd8+var_68]                ; argument "__ptr" for method j_free
0000000000001f7a         call       j_free                                      ; free
0000000000001f7f         xor        eax, eax
0000000000001f81         mov        rcx, qword [rsp+0xd8+var_40]
0000000000001f89         xor        rcx, qword [fs:0x28]
0000000000001f92         jne        loc_255b

0000000000001f98         add        rsp, 0xa8
0000000000001f9f         pop        rbx
0000000000001fa0         pop        rbp
0000000000001fa1         pop        r12
0000000000001fa3         pop        r13
0000000000001fa5         pop        r14
0000000000001fa7         pop        r15
0000000000001fa9         ret
                        ; endp

                     loc_1faa:
0000000000001faa         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+508
0000000000001fb1         cmp        byte [rdi], 0x2b
0000000000001fb4         je         loc_244c

                     loc_1fba:
0000000000001fba         cmp        ebx, 0x2                                    ; CODE XREF=main+2468
0000000000001fbd         je         loc_24dc

0000000000001fc3         mov        eax, ebx
0000000000001fc5         add        ebx, 0x1
0000000000001fc8         mov        qword [rsp+rax*8+0xd8+var_58], rdi
0000000000001fd0         jmp        loc_1c1f

                     loc_1fd5:
0000000000001fd5         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+428
0000000000001fdc         lea        rsi, qword [aInvalidNumberO_7088]           ; "invalid number of bytes to skip"
0000000000001fe3         call       size_opt                                    ; size_opt
0000000000001fe8         mov        qword [skip_chars], rax                     ; skip_chars
0000000000001fef         jmp        loc_1c1f

                     loc_1ff4:
0000000000001ff4         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+611
0000000000001ffb         mov        byte [output_unique], 0x0                   ; output_unique
0000000000002002         mov        byte [output_later_repeated], 0x1           ; output_later_repeated
0000000000002009         test       rsi, rsi
000000000000200c         je         loc_227f

0000000000002012         mov        r9, qword [argmatch_die]                    ; argmatch_die
0000000000002019         lea        rdx, qword [delimit_method_string]          ; delimit_method_string
0000000000002020         lea        rcx, qword [delimit_method_map]             ; delimit_method_map
0000000000002027         lea        rdi, qword [aAllrepeated]                   ; "--all-repeated"
000000000000202e         mov        r8d, 0x4
0000000000002034         mov        r13d, 0x1
000000000000203a         call       __xargmatch_internal                        ; __xargmatch_internal
000000000000203f         lea        rdx, qword [delimit_method_map]             ; delimit_method_map
0000000000002046         mov        eax, dword [rdx+rax*4]
0000000000002049         mov        dword [delimit_groups], eax                 ; delimit_groups
000000000000204f         jmp        loc_1c1f

                     loc_2054:
0000000000002054         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+558
000000000000205b         test       rsi, rsi
000000000000205e         je         loc_2294

0000000000002064         mov        r9, qword [argmatch_die]                    ; argmatch_die
000000000000206b         lea        rdx, qword [grouping_method_string]         ; grouping_method_string
0000000000002072         lea        rcx, qword [grouping_method_map]            ; grouping_method_map
0000000000002079         lea        rdi, qword [aGroup]                         ; "--group"
0000000000002080         mov        r8d, 0x4
0000000000002086         call       __xargmatch_internal                        ; __xargmatch_internal
000000000000208b         lea        rdx, qword [grouping_method_map]            ; grouping_method_map
0000000000002092         mov        eax, dword [rdx+rax*4]
0000000000002095         mov        dword [grouping], eax                       ; grouping
000000000000209b         jmp        loc_1c1f

                     loc_20a0:
00000000000020a0         cmp        dword [countmode], 0x0                      ; countmode, CODE XREF=main+650
00000000000020a7         jne        loc_1d72

00000000000020ad         cmp        byte [output_later_repeated], 0x0           ; output_later_repeated
00000000000020b4         mov        edx, 0x5
00000000000020b9         lea        rsi, qword [aPrintingAllDup]                ; "printing all duplicated lines and repeat counts is meaningless"
00000000000020c0         je         loc_1d72

00000000000020c6         jmp        loc_2541

                     loc_20cb:
00000000000020cb         mov        r12, 0xfffffffffffffffe                     ; CODE XREF=main+1624

                     loc_20d2:
00000000000020d2         test       al, al                                      ; CODE XREF=main+1068
00000000000020d4         jne        loc_1f0e

                     loc_20da:
00000000000020da         cmp        byte [output_later_repeated], 0x0           ; output_later_repeated, CODE XREF=main+1635, main+1658, main+1668, main+1675, main+1714, main+2583
00000000000020e1         je         loc_1e72

00000000000020e7         mov        rdi, r13
00000000000020ea         mov        rdx, r12
00000000000020ed         mov        esi, ecx
00000000000020ef         call       writeline                                   ; writeline
00000000000020f4         mov        rax, rbp
00000000000020f7         mov        qword [rsp+0xd8+var_D0], rbx
00000000000020fc         mov        rbp, r13
00000000000020ff         mov        qword [rsp+0xd8+var_C8], r14
0000000000002104         mov        r13, rax
0000000000002107         jmp        loc_1e72
000000000000210c         align      16

                     loc_2110:
0000000000002110         mov        edx, dword [delimit_groups]                 ; delimit_groups, CODE XREF=main+1054
0000000000002116         test       edx, edx
0000000000002118         je         loc_20cb

000000000000211a         test       al, al
000000000000211c         mov        r12, 0xfffffffffffffffe
0000000000002123         je         loc_20da

0000000000002125         mov        byte [rsp+0xd8+var_B0], 0x0
000000000000212a         mov        r12, 0xfffffffffffffffe
0000000000002131         jmp        loc_1f0e

                     loc_2136:
0000000000002136         cmp        r12, 0x1                                    ; CODE XREF=main+1076
000000000000213a         jne        loc_20da

000000000000213c         cmp        edx, 0x1
000000000000213f         je         loc_214d

0000000000002141         cmp        edx, 0x2
0000000000002144         jne        loc_20da

0000000000002146         cmp        byte [rsp+0xd8+var_B0], 0x0
000000000000214b         jne        loc_20da

                     loc_214d:
000000000000214d         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=main+1663
0000000000002154         mov        rax, qword [rdi+0x28]
0000000000002158         cmp        rax, qword [rdi+0x30]
000000000000215c         jae        loc_24c6

0000000000002162         movzx      esi, byte [rsp+0xd8+var_B1]
0000000000002167         lea        rdx, qword [rax+1]
000000000000216b         mov        qword [rdi+0x28], rdx
000000000000216f         mov        byte [rax], sil
0000000000002172         jmp        loc_20da

                     loc_2177:
0000000000002177         mov        byte [output_first_repeated], 0x0           ; output_first_repeated, CODE XREF=main+404
000000000000217e         mov        r13d, 0x1
0000000000002184         jmp        loc_1c1f

                     loc_2189:
0000000000002189         mov        byte [output_unique], 0x0                   ; output_unique, CODE XREF=main+393
0000000000002190         mov        r13d, 0x1
0000000000002196         jmp        loc_1c1f

                     loc_219b:
000000000000219b         mov        byte [ignore_case], 0x1                     ; ignore_case, CODE XREF=main+419
00000000000021a2         jmp        loc_1c1f

                     loc_21a7:
00000000000021a7         cmp        dword [rsp+0xd8+var_D0], 0x2                ; CODE XREF=main+488
00000000000021ac         je         loc_23ec

00000000000021b2         mov        rax, qword [skip_fields]                    ; skip_fields
00000000000021b9         movabs     rcx, 0x1999999999999999
00000000000021c3         cmp        rax, rcx
00000000000021c6         jbe        loc_235c

                     loc_21cc:
00000000000021cc         mov        rax, qword [rsp+0xd8+var_C8]                ; CODE XREF=main+2220
00000000000021d1         mov        dword [rsp+0xd8+var_D0], 0x1
00000000000021d9         mov        qword [skip_fields], rax                    ; skip_fields
00000000000021e0         jmp        loc_1c1a

                     loc_21e5:
00000000000021e5         sub        rsp, 0x8                                    ; CODE XREF=main+519
00000000000021e9         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021f0         mov        rcx, qword [Version]                        ; Version
00000000000021f7         push       0x0
00000000000021f9         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000002200         lea        r8, qword [aRichardMStallm]                 ; "Richard M. Stallman"
0000000000002207         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x67cc
000000000000220e         lea        rsi, qword [a7lu+6]                         ; 0x6751
0000000000002215         xor        eax, eax
0000000000002217         call       version_etc                                 ; version_etc
000000000000221c         xor        edi, edi                                    ; argument "__status" for method j_exit
000000000000221e         call       j_exit                                      ; exit
                        ; endp

                     loc_2223:
0000000000002223         mov        byte [rsp+0xd8+var_B1], 0x0                 ; CODE XREF=main+547
0000000000002228         jmp        loc_1c1f

                     loc_222d:
000000000000222d         mov        rdx, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+737
0000000000002234         mov        rdi, qword [rsp+0xd8+var_A8]
0000000000002239         lea        rsi, qword [aWriteError+10]                 ; 0x7205
0000000000002240         call       freopen_safer                               ; freopen_safer
0000000000002245         test       rax, rax
0000000000002248         jne        loc_1da7

000000000000224e         mov        rdx, qword [rsp+0xd8+var_A8]
0000000000002253         mov        esi, 0x3
0000000000002258         xor        edi, edi
000000000000225a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000225f         mov        rbx, rax
0000000000002262         call       j___errno_location                          ; __errno_location
0000000000002267         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002269         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x71f8
0000000000002270         mov        rcx, rbx
0000000000002273         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002278         xor        eax, eax
000000000000227a         call       j_error                                     ; error

                     loc_227f:
000000000000227f         mov        dword [delimit_groups], 0x0                 ; delimit_groups, CODE XREF=main+1356
0000000000002289         mov        r13d, 0x1
000000000000228f         jmp        loc_1c1f

                     loc_2294:
0000000000002294         mov        dword [grouping], 0x3                       ; grouping, CODE XREF=main+1438
000000000000229e         jmp        loc_1c1f

                     loc_22a3:
00000000000022a3         mov        byte [rsp+0xd8+var_D0], 0x0                 ; CODE XREF=main+863

                     loc_22a8:
00000000000022a8         mov        rsi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+2199, main+2337
00000000000022af         test       byte [rsi], 0x10
00000000000022b2         jne        loc_2406

00000000000022b8         mov        edx, dword [rsp+0xd8+var_C0]
00000000000022bc         mov        rdi, rbp
00000000000022bf         call       readlinebuffer_delim                        ; readlinebuffer_delim
00000000000022c4         test       rax, rax
00000000000022c7         je         loc_2406

00000000000022cd         mov        r12, qword [rbp+8]
00000000000022d1         mov        r15, qword [rbp+0x10]
00000000000022d5         mov        rdi, r12
00000000000022d8         mov        rsi, r15
00000000000022db         sub        r12, 0x1
00000000000022df         call       find_field.isra.2                           ; find_field.isra.2
00000000000022e4         mov        r14, rax
00000000000022e7         sub        rax, r15
00000000000022ea         sub        r12, rax
00000000000022ed         cmp        qword [r13+8], 0x0
00000000000022f2         jne        loc_23bd

                     loc_22f8:
00000000000022f8         mov        eax, dword [grouping]                       ; grouping, CODE XREF=main+2324
00000000000022fe         test       eax, eax
0000000000002300         je         loc_2327

0000000000002302         cmp        eax, 0x1
0000000000002305         je         loc_2469

000000000000230b         cmp        eax, 0x4
000000000000230e         je         loc_2469

0000000000002314         cmp        byte [rsp+0xd8+var_D0], 0x0
0000000000002319         je         loc_2327

000000000000231b         sub        eax, 0x2
000000000000231e         cmp        eax, 0x1
0000000000002321         jbe        loc_2469

                     loc_2327:
0000000000002327         mov        rdx, qword [rbp+8]                          ; argument "__n" for method j_fwrite_unlocked, CODE XREF=main+2112, main+2137, main+2343, main+2509, main+2651
000000000000232b         mov        rdi, qword [rbp+0x10]                       ; argument "__ptr" for method j_fwrite_unlocked
000000000000232f         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000002334         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
000000000000233b         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000002340         mov        rax, rbp
0000000000002343         mov        byte [rsp+0xd8+var_D0], bl
0000000000002347         mov        rbp, r13
000000000000234a         mov        qword [rsp+0xd8+var_A0], r12
000000000000234f         mov        qword [rsp+0xd8+var_B0], r14
0000000000002354         mov        r13, rax
0000000000002357         jmp        loc_22a8

                     loc_235c:
000000000000235c         imul       rdx, rax, 0xa                               ; CODE XREF=main+1798
0000000000002360         lea        ecx, dword [rbp-0x30]
0000000000002363         movsxd     rcx, ecx
0000000000002366         add        rdx, rcx
0000000000002369         cmp        rax, rdx
000000000000236c         ja         loc_21cc

0000000000002372         jmp        loc_23f2

                     loc_2374:
0000000000002374         mov        rax, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+977
000000000000237b         test       byte [rax], 0x20
000000000000237e         je         loc_1f41

                     loc_2384:
0000000000002384         mov        rsi, qword [rsp+0xd8+var_A8]                ; CODE XREF=main+1176, main+1189
0000000000002389         mov        edi, 0x4
000000000000238e         call       quotearg_style                              ; quotearg_style
0000000000002393         lea        rsi, qword [aErrorReadingS]                 ; argument "msgid" for method j_dcgettext, "error reading %s"
000000000000239a         mov        rbx, rax
000000000000239d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023a2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023a4         call       j_dcgettext                                 ; dcgettext
00000000000023a9         mov        rcx, rbx
00000000000023ac         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000023af         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000023b1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000023b6         xor        eax, eax
00000000000023b8         call       j_error                                     ; error

                     loc_23bd:
00000000000023bd         mov        rcx, qword [rsp+0xd8+var_A0]                ; CODE XREF=main+2098
00000000000023c2         mov        rsi, qword [rsp+0xd8+var_B0]
00000000000023c7         mov        rdx, r12
00000000000023ca         mov        rdi, r14
00000000000023cd         call       different                                   ; different
00000000000023d2         test       al, al
00000000000023d4         jne        loc_22f8

00000000000023da         cmp        dword [grouping], 0x0                       ; grouping
00000000000023e1         je         loc_22a8

00000000000023e7         jmp        loc_2327

                     loc_23ec:
00000000000023ec         lea        edx, dword [rax-0x30]                       ; CODE XREF=main+1772
00000000000023ef         movsxd     rdx, edx

                     loc_23f2:
00000000000023f2         mov        qword [skip_fields], rdx                    ; skip_fields, CODE XREF=main+2226
00000000000023f9         mov        dword [rsp+0xd8+var_D0], 0x1
0000000000002401         jmp        loc_1c1a

                     loc_2406:
0000000000002406         mov        eax, dword [grouping]                       ; grouping, CODE XREF=main+2034, main+2055
000000000000240c         sub        eax, 0x2
000000000000240f         and        eax, 0xfffffffd
0000000000002412         jne        loc_1f4e

0000000000002418         cmp        byte [rsp+0xd8+var_D0], 0x0
000000000000241d         je         loc_1f4e

0000000000002423         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000242a         mov        rax, qword [rdi+0x28]
000000000000242e         cmp        rax, qword [rdi+0x30]
0000000000002432         jae        loc_2520

0000000000002438         movzx      ecx, byte [rsp+0xd8+var_B1]
000000000000243d         lea        rdx, qword [rax+1]
0000000000002441         mov        qword [rdi+0x28], rdx
0000000000002445         mov        byte [rax], cl
0000000000002447         jmp        loc_1f4e

                     loc_244c:
000000000000244c         call       posix2_version                              ; posix2_version, CODE XREF=main+1268
0000000000002451         sub        eax, 0x30db0
0000000000002456         cmp        eax, 0x2b8
000000000000245b         ja         loc_2492

                     loc_245d:
000000000000245d         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+2547
0000000000002464         jmp        loc_1fba

                     loc_2469:
0000000000002469         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=main+2117, main+2126, main+2145
0000000000002470         mov        rax, qword [rdi+0x28]
0000000000002474         cmp        rax, qword [rdi+0x30]
0000000000002478         jae        loc_2512

000000000000247e         movzx      ecx, byte [rsp+0xd8+var_B1]
0000000000002483         lea        rdx, qword [rax+1]
0000000000002487         mov        qword [rdi+0x28], rdx
000000000000248b         mov        byte [rax], cl
000000000000248d         jmp        loc_2327

                     loc_2492:
0000000000002492         mov        rcx, qword [rsp+0xd8+var_C0]                ; CODE XREF=main+2459
0000000000002497         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000249e         lea        r8, qword [aWrittenBySSAnd+27]              ; 0x77a1
00000000000024a5         xor        esi, esi
00000000000024a7         mov        edx, 0xa
00000000000024ac         call       xstrtoul                                    ; xstrtoul
00000000000024b1         test       eax, eax
00000000000024b3         jne        loc_245d

00000000000024b5         mov        rax, qword [rsp+0xd8+var_78]
00000000000024ba         mov        qword [skip_chars], rax                     ; skip_chars
00000000000024c1         jmp        loc_1c1f

                     loc_24c6:
00000000000024c6         mov        esi, dword [rsp+0xd8+var_C0]                ; argument #2 for method j___overflow, CODE XREF=main+1692
00000000000024ca         mov        dword [rsp+0xd8+var_A0], ecx
00000000000024ce         call       j___overflow                                ; __overflow
00000000000024d3         mov        ecx, dword [rsp+0xd8+var_A0]
00000000000024d7         jmp        loc_20da

                     loc_24dc:
00000000000024dc         call       quote                                       ; quote, CODE XREF=main+318, main+1277
00000000000024e1         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
00000000000024e8         mov        rbx, rax
00000000000024eb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024f0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024f2         call       j_dcgettext                                 ; dcgettext
00000000000024f7         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000024f9         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000024fc         mov        rcx, rbx
00000000000024ff         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002501         xor        eax, eax
0000000000002503         call       j_error                                     ; error
0000000000002508         mov        edi, 0x1                                    ; argument #1 for method usage
000000000000250d         call       usage                                       ; usage

                     loc_2512:
0000000000002512         mov        esi, dword [rsp+0xd8+var_C0]                ; argument #2 for method j___overflow, CODE XREF=main+2488
0000000000002516         call       j___overflow                                ; __overflow
000000000000251b         jmp        loc_2327

                     loc_2520:
0000000000002520         mov        esi, dword [rsp+0xd8+var_C0]                ; argument #2 for method j___overflow, CODE XREF=main+2418
0000000000002524         call       j___overflow                                ; __overflow
0000000000002529         jmp        loc_1f4e

                     loc_252e:
000000000000252e         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+499
0000000000002530         call       usage                                       ; usage

                     loc_2535:
0000000000002535         lea        rsi, qword [aGroupIsMutuall]                ; "--group is mutually exclusive with -c/-d/-D/-u", CODE XREF=main+659
000000000000253c         mov        edx, 0x5

                     loc_2541:
0000000000002541         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+684, main+1542
0000000000002543         call       j_dcgettext                                 ; dcgettext
0000000000002548         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000254a         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000254d         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000254f         xor        eax, eax
0000000000002551         call       j_error                                     ; error
0000000000002556         jmp        loc_1ccd

                     loc_255b:
000000000000255b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1234
                        ; endp

                     loc_2560:
0000000000002560         mov        rdx, rbx                                    ; CODE XREF=main+787
0000000000002563         mov        esi, 0x3
0000000000002568         xor        edi, edi
000000000000256a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000256f         mov        rbx, rax
0000000000002572         call       j___errno_location                          ; __errno_location
0000000000002577         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002579         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x71f8
0000000000002580         mov        rcx, rbx
0000000000002583         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002588         xor        eax, eax
000000000000258a         call       j_error                                     ; error
000000000000258f         nop                                                    ; End of unwind block (FDE at 0x80f0)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002590         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x7f9c)
0000000000002592         mov        r9, rdx
0000000000002595         pop        rsi
0000000000002596         mov        rdx, rsp
0000000000002599         and        rsp, 0xfffffffffffffff0
000000000000259d         push       rax
000000000000259e         push       rsp
000000000000259f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000025a6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000025ad         lea        rdi, qword [main]                           ; main
00000000000025b4         call       qword [qword_209fd8+8]                      ; 0x209fe0
00000000000025ba         hlt
                        ; endp
00000000000025bb         align      64                                          ; End of unwind block (FDE at 0x7f9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
00000000000025c0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
00000000000025c7         push       rbp
00000000000025c8         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000025cf         cmp        rax, rdi
00000000000025d2         mov        rbp, rsp
00000000000025d5         je         loc_25f0

00000000000025d7         mov        rax, qword [qword_209fd8]                   ; qword_209fd8
00000000000025de         test       rax, rax
00000000000025e1         je         loc_25f0

00000000000025e3         pop        rbp
00000000000025e4         jmp        rax
                        ; endp
00000000000025e6         align      16

                     loc_25f0:
00000000000025f0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
00000000000025f1         ret
                        ; endp
00000000000025f2         align      512

                     register_tm_clones:
0000000000002600         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002607         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000260e         push       rbp
000000000000260f         sub        rsi, rdi
0000000000002612         mov        rbp, rsp
0000000000002615         sar        rsi, 0x3
0000000000002619         mov        rax, rsi
000000000000261c         shr        rax, 0x3f
0000000000002620         add        rsi, rax
0000000000002623         sar        rsi, 0x1
0000000000002626         je         loc_2640

0000000000002628         mov        rax, qword [qword_209ff0]                   ; qword_209ff0
000000000000262f         test       rax, rax
0000000000002632         je         loc_2640

0000000000002634         pop        rbp
0000000000002635         jmp        rax
                        ; endp
0000000000002637         align      64

                     loc_2640:
0000000000002640         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002641         ret
                        ; endp
0000000000002642         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002650         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002657         jne        loc_2688

0000000000002659         cmp        qword [qword_209ff8], 0x0                   ; qword_209ff8
0000000000002661         push       rbp
0000000000002662         mov        rbp, rsp
0000000000002665         je         loc_2673

0000000000002667         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000266e         call       j_qword_209ff8                              ; qword_209ff8

                     loc_2673:
0000000000002673         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002678         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000267f         pop        rbp
0000000000002680         ret
                        ; endp
0000000000002681         align      8

                     loc_2688:
0000000000002688         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000268a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002690         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002691         mov        rbp, rsp
0000000000002694         pop        rbp
0000000000002695         jmp        register_tm_clones                          ; register_tm_clones
000000000000269a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     different:
00000000000026a0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x800c), CODE XREF=main+1031, main+2317
00000000000026a4         mov        rax, qword [check_chars]                    ; check_chars
00000000000026ab         cmp        rax, rdx
00000000000026ae         cmovbe     rdx, rax
00000000000026b2         cmp        rax, rcx
00000000000026b5         cmovbe     rcx, rax
00000000000026b9         movzx      eax, byte [ignore_case]                     ; ignore_case
00000000000026c0         mov        r8, rdx
00000000000026c3         test       al, al
00000000000026c5         je         loc_26d8

00000000000026c7         cmp        rdx, rcx
00000000000026ca         je         loc_2700

                     loc_26cc:
00000000000026cc         add        rsp, 0x8                                    ; CODE XREF=different+73
00000000000026d0         ret
                        ; endp
00000000000026d1         align      8

                     loc_26d8:
00000000000026d8         cmp        byte [hard_LC_COLLATE], 0x0                 ; hard_LC_COLLATE, CODE XREF=different+37
00000000000026df         jne        loc_2710

00000000000026e1         cmp        rdx, rcx
00000000000026e4         mov        eax, 0x1
00000000000026e9         jne        loc_26cc

00000000000026eb         call       j_memcmp                                    ; memcmp
00000000000026f0         test       eax, eax
00000000000026f2         setne      al
00000000000026f5         add        rsp, 0x8
00000000000026f9         ret
                        ; endp
00000000000026fa         align      256

                     loc_2700:
0000000000002700         call       memcasecmp                                  ; memcasecmp, CODE XREF=different+42
0000000000002705         test       eax, eax
0000000000002707         setne      al
000000000000270a         add        rsp, 0x8
000000000000270e         ret
                        ; endp
000000000000270f         align      16

                     loc_2710:
0000000000002710         mov        rdx, rsi                                    ; CODE XREF=different+63
0000000000002713         mov        rsi, r8
0000000000002716         call       xmemcoll                                    ; xmemcoll
000000000000271b         test       eax, eax
000000000000271d         setne      al
0000000000002720         add        rsp, 0x8
0000000000002724         ret
                        ; endp
0000000000002725         align      16                                          ; End of unwind block (FDE at 0x800c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     size_opt:
0000000000002730         push       rbp                                         ; Begin of unwind block (FDE at 0x8038), CODE XREF=main+453, main+583, main+1315
0000000000002731         push       rbx
0000000000002732         lea        r8, qword [aWrittenBySSAnd+27]              ; 0x77a1
0000000000002739         mov        rbp, rsi
000000000000273c         mov        edx, 0xa
0000000000002741         xor        esi, esi
0000000000002743         sub        rsp, 0x18
0000000000002747         mov        rbx, rdi
000000000000274a         mov        rcx, rsp
000000000000274d         mov        rax, qword [fs:0x28]
0000000000002756         mov        qword [rsp+0x28+var_20], rax
000000000000275b         xor        eax, eax
000000000000275d         call       xstrtoul                                    ; xstrtoul
0000000000002762         cmp        eax, 0x1
0000000000002765         ja         loc_2782

0000000000002767         mov        rdx, qword [rsp+0x28+var_20]
000000000000276c         xor        rdx, qword [fs:0x28]
0000000000002775         mov        rax, qword [rsp+0x28+var_28]
0000000000002779         jne        loc_27ac

000000000000277b         add        rsp, 0x18
000000000000277f         pop        rbx
0000000000002780         pop        rbp
0000000000002781         ret
                        ; endp

                     loc_2782:
0000000000002782         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext, CODE XREF=size_opt+53
0000000000002787         mov        rsi, rbp                                    ; argument "msgid" for method j_dcgettext
000000000000278a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000278c         call       j_dcgettext                                 ; dcgettext
0000000000002791         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002798         mov        r8, rax
000000000000279b         mov        rcx, rbx
000000000000279e         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000027a0         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000027a5         xor        eax, eax
00000000000027a7         call       j_error                                     ; error

                     loc_27ac:
00000000000027ac         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=size_opt+73
                        ; endp
00000000000027b1         align      64                                          ; End of unwind block (FDE at 0x8038)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     writeline:
00000000000027c0         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x8064), CODE XREF=main+1110, main+1161, main+1583
00000000000027c3         jne        loc_2800

00000000000027c5         movzx      eax, byte [output_unique]                   ; output_unique
00000000000027cc         xor        eax, 0x1

                     loc_27cf:
00000000000027cf         test       al, al                                      ; CODE XREF=writeline+98
00000000000027d1         jne        loc_2813

                     loc_27d3:
00000000000027d3         mov        ecx, dword [countmode]                      ; countmode, CODE XREF=writeline+81
00000000000027d9         push       rbx
00000000000027da         mov        rbx, rdi
00000000000027dd         test       ecx, ecx
00000000000027df         je         loc_2828

                     loc_27e1:
00000000000027e1         mov        rdx, qword [rbx+8]                          ; argument "__n" for method j_fwrite_unlocked, CODE XREF=writeline+125
00000000000027e5         mov        rdi, qword [rbx+0x10]                       ; argument "__ptr" for method j_fwrite_unlocked
00000000000027e9         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000027ee         pop        rbx
00000000000027ef         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
00000000000027f6         jmp        j_fwrite_unlocked                           ; fwrite_unlocked
                        ; endp
00000000000027fb         align      2048

                     loc_2800:
0000000000002800         test       sil, sil                                    ; CODE XREF=writeline+3
0000000000002803         jne        loc_2818

0000000000002805         movzx      eax, byte [output_first_repeated]           ; output_first_repeated
000000000000280c         xor        eax, 0x1
000000000000280f         test       al, al
0000000000002811         je         loc_27d3

                     loc_2813:
0000000000002813         ret                                                    ; CODE XREF=writeline+17
                        ; endp
0000000000002815         align      8

                     loc_2818:
0000000000002818         movzx      eax, byte [output_later_repeated]           ; output_later_repeated, CODE XREF=writeline+67
000000000000281f         xor        eax, 0x1
0000000000002822         jmp        loc_27cf
0000000000002824         align      8

                     loc_2828:
0000000000002828         lea        rsi, qword [a7lu]                           ; "%7lu ", CODE XREF=writeline+31
000000000000282f         add        rdx, 0x1
0000000000002833         mov        edi, 0x1
0000000000002838         call       j___printf_chk                              ; __printf_chk
000000000000283d         jmp        loc_27e1
000000000000283f         align      64                                          ; End of unwind block (FDE at 0x8064)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     find_field.isra.2:
0000000000002840         push       r14                                         ; Begin of unwind block (FDE at 0x8084), CODE XREF=main+917, main+1001, main+2079
0000000000002842         push       r13
0000000000002844         mov        r14, rsi
0000000000002847         mov        r13, qword [skip_fields]                    ; skip_fields
000000000000284e         push       r12
0000000000002850         push       rbp
0000000000002851         lea        rbp, qword [rdi-1]
0000000000002855         push       rbx
0000000000002856         test       r13, r13
0000000000002859         je         loc_290f

000000000000285f         test       rbp, rbp
0000000000002862         je         loc_290f

0000000000002868         xor        r12d, r12d
000000000000286b         xor        ebx, ebx
000000000000286d         nop        dword [rax]

                     loc_2870:
0000000000002870         call       j___ctype_b_loc                             ; __ctype_b_loc, CODE XREF=find_field.isra.2+144
0000000000002875         mov        rdi, qword [rax]
0000000000002878         nop        dword [rax+rax]

                     loc_2880:
0000000000002880         movzx      ecx, byte [r14+rbx]                         ; CODE XREF=find_field.isra.2+199
0000000000002885         mov        rdx, rcx
0000000000002888         movzx      ecx, word [rdi+rcx*2]
000000000000288c         cmp        dl, 0xa
000000000000288f         je         loc_2900

0000000000002891         test       cl, 0x1
0000000000002894         jne        loc_2900

0000000000002896         cmp        rbp, rbx
0000000000002899         ja         loc_28ba

000000000000289b         jmp        loc_28d8
000000000000289d         align      32

                     loc_28a0:
00000000000028a0         and        ecx, 0x1                                    ; CODE XREF=find_field.isra.2+125
00000000000028a3         jne        loc_28bf

00000000000028a5         add        rbx, 0x1
00000000000028a9         cmp        rbp, rbx
00000000000028ac         jbe        loc_28d8

00000000000028ae         movzx      eax, byte [r14+rbx]
00000000000028b3         movzx      ecx, word [rdi+rax*2]
00000000000028b7         mov        rdx, rax

                     loc_28ba:
00000000000028ba         cmp        dl, 0xa                                     ; CODE XREF=find_field.isra.2+89
00000000000028bd         jne        loc_28a0

                     loc_28bf:
00000000000028bf         add        r12, 0x1                                    ; CODE XREF=find_field.isra.2+99
00000000000028c3         cmp        r12, r13
00000000000028c6         jae        loc_28d8

00000000000028c8         cmp        rbp, rbx
00000000000028cb         jbe        loc_28d8

00000000000028cd         cmp        rbp, rbx
00000000000028d0         ja         loc_2870

00000000000028d2         nop        word [rax+rax]

                     loc_28d8:
00000000000028d8         sub        rbp, rbx                                    ; CODE XREF=find_field.isra.2+91, find_field.isra.2+108, find_field.isra.2+134, find_field.isra.2+139, find_field.isra.2+205

                     loc_28db:
00000000000028db         cmp        qword [skip_chars], rbp                     ; skip_chars, CODE XREF=find_field.isra.2+209
00000000000028e2         cmovbe     rbp, qword [skip_chars]                     ; skip_chars
00000000000028ea         add        rbx, rbp
00000000000028ed         lea        rax, qword [r14+rbx]
00000000000028f1         pop        rbx
00000000000028f2         pop        rbp
00000000000028f3         pop        r12
00000000000028f5         pop        r13
00000000000028f7         pop        r14
00000000000028f9         ret
                        ; endp
00000000000028fa         align      256

                     loc_2900:
0000000000002900         add        rbx, 0x1                                    ; CODE XREF=find_field.isra.2+79, find_field.isra.2+84
0000000000002904         cmp        rbp, rbx
0000000000002907         ja         loc_2880

000000000000290d         jmp        loc_28d8

                     loc_290f:
000000000000290f         xor        ebx, ebx                                    ; CODE XREF=find_field.isra.2+25, find_field.isra.2+34
0000000000002911         jmp        loc_28db
0000000000002913         align      32                                          ; End of unwind block (FDE at 0x8084)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002920         push       r13                                         ; Begin of unwind block (FDE at 0x80c4), CODE XREF=main+530, main+2637, main+2672, __argmatch_die+5
0000000000002922         push       r12
0000000000002924         mov        edx, 0x5
0000000000002929         push       rbp
000000000000292a         push       rbx
000000000000292b         mov        ebp, edi
000000000000292d         sub        rsp, 0x88
0000000000002934         mov        rbx, qword [program_name]                   ; program_name
000000000000293b         mov        rax, qword [fs:0x28]
0000000000002944         mov        qword [rsp+0xa8+var_30], rax
0000000000002949         xor        eax, eax
000000000000294b         test       edi, edi
000000000000294d         je         loc_297d

000000000000294f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002956         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002958         call       j_dcgettext                                 ; dcgettext
000000000000295d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002964         mov        rdx, rax
0000000000002967         mov        rcx, rbx
000000000000296a         mov        esi, 0x1
000000000000296f         xor        eax, eax
0000000000002971         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2976:
0000000000002976         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+1006
0000000000002978         call       j_exit                                      ; exit
                        ; endp

                     loc_297d:
000000000000297d         lea        rsi, qword [aUsageSOptionIn]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [INPUT [OUTPUT]]\\n", CODE XREF=usage+45
0000000000002984         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002986         call       j_dcgettext                                 ; dcgettext
000000000000298b         mov        rdx, rbx
000000000000298e         mov        rsi, rax
0000000000002991         mov        edi, 0x1
0000000000002996         xor        eax, eax
0000000000002998         call       j___printf_chk                              ; __printf_chk
000000000000299d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000029a4         lea        rsi, qword [aFilterAdjacent]                ; argument "msgid" for method j_dcgettext, "Filter adjacent matching lines from INPUT (or standard input),\\nwriting to OUTPUT (or standard output).\\n\\nWith no options, matching lines are merged to the first occurrence.\\n"
00000000000029ab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029b2         call       j_dcgettext                                 ; dcgettext
00000000000029b7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000029ba         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000029bd         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000029c2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000029c9         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
00000000000029d0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029d5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029d7         call       j_dcgettext                                 ; dcgettext
00000000000029dc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000029df         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000029e2         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000029e7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000029ee         lea        rsi, qword [aCCountPrefixLi]                ; argument "msgid" for method j_dcgettext, "  -c, --count           prefix lines by the number of occurrences\\n  -d, --repeated        only print duplicate lines, one for each group\\n"
00000000000029f5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029fa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029fc         call       j_dcgettext                                 ; dcgettext
0000000000002a01         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a04         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a07         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a0c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a13         lea        rsi, qword [aDPrintAllDupli]                ; argument "msgid" for method j_dcgettext, "  -D                    print all duplicate lines\\n      --all-repeated[=METHOD]  like -D, but allow separating groups\\n                                 with an empty line;\\n                                 METHOD={none(default),prepend,separate}\\n"
0000000000002a1a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a1f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a21         call       j_dcgettext                                 ; dcgettext
0000000000002a26         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a29         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a2c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a31         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a38         lea        rsi, qword [aFSkipfieldsnAv]                ; argument "msgid" for method j_dcgettext, "  -f, --skip-fields=N   avoid comparing the first N fields\\n"
0000000000002a3f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a44         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a46         call       j_dcgettext                                 ; dcgettext
0000000000002a4b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a4e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a51         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a56         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a5d         lea        rsi, qword [aGroupmethodSho]                ; argument "msgid" for method j_dcgettext, "      --group[=METHOD]  show all items, separating groups with an empty line;\\n                          METHOD={separate(default),prepend,append,both}\\n"
0000000000002a64         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a69         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a6b         call       j_dcgettext                                 ; dcgettext
0000000000002a70         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a73         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a76         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002a7b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a82         lea        rsi, qword [aIIgnorecaseIgn]                ; argument "msgid" for method j_dcgettext, "  -i, --ignore-case     ignore differences in case when comparing\\n  -s, --skip-chars=N    avoid comparing the first N characters\\n  -u, --unique          only print unique lines\\n"
0000000000002a89         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a8e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a90         call       j_dcgettext                                 ; dcgettext
0000000000002a95         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002a98         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002a9b         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002aa0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002aa7         lea        rsi, qword [aZZeroterminate]                ; argument "msgid" for method j_dcgettext, "  -z, --zero-terminated     line delimiter is NUL, not newline\\n"
0000000000002aae         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ab3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ab5         call       j_dcgettext                                 ; dcgettext
0000000000002aba         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002abd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002ac0         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002ac5         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002acc         lea        rsi, qword [aWCheckcharsnCo]                ; argument "msgid" for method j_dcgettext, "  -w, --check-chars=N   compare no more than N characters in lines\\n"
0000000000002ad3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ad8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ada         call       j_dcgettext                                 ; dcgettext
0000000000002adf         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002ae2         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002ae5         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002aea         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002af1         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000002af8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002afd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002aff         call       j_dcgettext                                 ; dcgettext
0000000000002b04         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002b07         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002b0a         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002b0f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002b16         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002b1d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b22         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b24         call       j_dcgettext                                 ; dcgettext
0000000000002b29         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002b2c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002b2f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002b34         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002b3b         lea        rsi, qword [aNaFieldIsARunO]                ; argument "msgid" for method j_dcgettext, "\\nA field is a run of blanks (usually spaces and/or TABs), then non-blank\\ncharacters.  Fields are skipped before chars.\\n"
0000000000002b42         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b47         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b49         call       j_dcgettext                                 ; dcgettext
0000000000002b4e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002b51         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002b54         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002b59         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002b60         lea        rsi, qword [aNnoteUniqDoesN]                ; argument "msgid" for method j_dcgettext, "\\nNote: 'uniq' does not detect repeated lines unless they are adjacent.\\nYou may want to sort the input first, or use 'sort -u' without 'uniq'.\\nAlso, comparisons honor the rules specified by 'LC_COLLATE'.\\n"
0000000000002b67         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b6c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b6e         call       j_dcgettext                                 ; dcgettext
0000000000002b73         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002b76         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002b79         lea        rbx, qword [a7lu+6]                         ; 0x6751
0000000000002b80         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002b85         lea        rax, qword [a7lu+11]                        ; 0x6756
0000000000002b8c         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002b93         mov        qword [rsp+0xa8+var_48], 0x0
0000000000002b9c         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002ba5         mov        rdx, rsp
0000000000002ba8         mov        qword [rsp+0xa8+var_A8], rax
0000000000002bac         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002bb3         mov        qword [rsp+0xa8+var_78], rcx
0000000000002bb8         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000002bbf         mov        qword [rsp+0xa8+var_A0], rax
0000000000002bc4         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002bcb         mov        qword [rsp+0xa8+var_68], rcx
0000000000002bd0         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000002bd7         mov        qword [rsp+0xa8+var_98], rax
0000000000002bdc         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000002be3         mov        qword [rsp+0xa8+var_58], rcx
0000000000002be8         mov        qword [rsp+0xa8+var_90], rax
0000000000002bed         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002bf4         mov        qword [rsp+0xa8+var_88], rax
0000000000002bf9         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000002c00         mov        qword [rsp+0xa8+var_80], rax
0000000000002c05         mov        qword [rsp+0xa8+var_70], rax
0000000000002c0a         mov        qword [rsp+0xa8+var_60], rax
0000000000002c0f         mov        qword [rsp+0xa8+var_50], rax
0000000000002c14         nop        dword [rax]

                     loc_2c18:
0000000000002c18         add        rdx, 0x10                                   ; CODE XREF=usage+789
0000000000002c1c         mov        rdi, qword [rdx]
0000000000002c1f         test       rdi, rdi
0000000000002c22         je         loc_2c37

0000000000002c24         mov        ecx, 0x5
0000000000002c29         mov        rsi, rbx
0000000000002c2c         rep  cmpsb byte [rsi], byte [rdi]
0000000000002c2e         seta       al
0000000000002c31         sbb        al, 0x0
0000000000002c33         test       al, al
0000000000002c35         jne        loc_2c18

                     loc_2c37:
0000000000002c37         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+770
0000000000002c3b         xor        edi, edi
0000000000002c3d         mov        edx, 0x5
0000000000002c42         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002c49         test       r12, r12
0000000000002c4c         je         loc_2d13

0000000000002c52         call       j_dcgettext                                 ; dcgettext
0000000000002c57         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002c5e         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x67cc
0000000000002c65         mov        rsi, rax
0000000000002c68         mov        edi, 0x1
0000000000002c6d         xor        eax, eax
0000000000002c6f         call       j___printf_chk                              ; __printf_chk
0000000000002c74         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002c76         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002c7b         call       j_setlocale                                 ; setlocale
0000000000002c80         test       rax, rax
0000000000002c83         je         loc_2ca1

0000000000002c85         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x67da
0000000000002c8c         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002c91         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002c94         call       j_strncmp                                   ; strncmp
0000000000002c99         test       eax, eax
0000000000002c9b         jne        loc_2da8

                     loc_2ca1:
0000000000002ca1         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+867, usage+1197
0000000000002ca8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002caa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002caf         call       j_dcgettext                                 ; dcgettext
0000000000002cb4         lea        rcx, qword [a7lu+6]                         ; 0x6751
0000000000002cbb         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002cc2         mov        rsi, rax
0000000000002cc5         mov        edi, 0x1
0000000000002cca         xor        eax, eax
0000000000002ccc         call       j___printf_chk                              ; __printf_chk
0000000000002cd1         cmp        r12, rbx
0000000000002cd4         lea        rcx, qword [aMulticallInvoc+10]             ; 0x6772
0000000000002cdb         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x77a1
0000000000002ce2         cmove      rbx, rcx

                     loc_2ce6:
0000000000002ce6         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1148
0000000000002ced         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002cef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002cf4         call       j_dcgettext                                 ; dcgettext
0000000000002cf9         mov        rcx, rbx
0000000000002cfc         mov        rsi, rax
0000000000002cff         mov        rdx, r12
0000000000002d02         mov        edi, 0x1
0000000000002d07         xor        eax, eax
0000000000002d09         call       j___printf_chk                              ; __printf_chk
0000000000002d0e         jmp        loc_2976

                     loc_2d13:
0000000000002d13         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+812
0000000000002d18         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002d1f         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x67cc
0000000000002d26         mov        rsi, rax
0000000000002d29         mov        edi, 0x1
0000000000002d2e         xor        eax, eax
0000000000002d30         call       j___printf_chk                              ; __printf_chk
0000000000002d35         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002d37         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002d3c         call       j_setlocale                                 ; setlocale
0000000000002d41         test       rax, rax
0000000000002d44         je         loc_2d5e

0000000000002d46         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x67da
0000000000002d4d         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002d52         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002d55         call       j_strncmp                                   ; strncmp
0000000000002d5a         test       eax, eax
0000000000002d5c         jne        loc_2da1

                     loc_2d5e:
0000000000002d5e         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1060
0000000000002d65         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002d6a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002d6c         lea        r12, qword [a7lu+6]                         ; 0x6751
0000000000002d73         lea        rbx, qword [aMulticallInvoc+10]             ; 0x6772
0000000000002d7a         call       j_dcgettext                                 ; dcgettext
0000000000002d7f         lea        rcx, qword [a7lu+6]                         ; 0x6751
0000000000002d86         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002d8d         mov        rsi, rax
0000000000002d90         mov        edi, 0x1
0000000000002d95         xor        eax, eax
0000000000002d97         call       j___printf_chk                              ; __printf_chk
0000000000002d9c         jmp        loc_2ce6

                     loc_2da1:
0000000000002da1         lea        r12, qword [a7lu+6]                         ; 0x6751, CODE XREF=usage+1084

                     loc_2da8:
0000000000002da8         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+891
0000000000002daf         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000002db6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002db8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002dbd         call       j_dcgettext                                 ; dcgettext
0000000000002dc2         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002dc5         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002dc8         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002dcd         jmp        loc_2ca1
0000000000002dd2         align      32                                          ; End of unwind block (FDE at 0x80c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __argmatch_die:
0000000000002de0         mov        edi, 0x1                                    ; Begin of unwind block (FDE at 0x814c), argument #1 for method usage, DATA XREF=argmatch_die
0000000000002de5         jmp        usage                                       ; usage
                        ; endp
0000000000002dea         align      16                                          ; End of unwind block (FDE at 0x814c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     argmatch:
0000000000002df0         push       r15                                         ; Begin of unwind block (FDE at 0x8160), CODE XREF=__xargmatch_internal+44
0000000000002df2         push       r14
0000000000002df4         mov        r15, rsi
0000000000002df7         push       r13
0000000000002df9         push       r12
0000000000002dfb         mov        r13, rcx
0000000000002dfe         push       rbp
0000000000002dff         push       rbx
0000000000002e00         mov        rbp, rdx
0000000000002e03         sub        rsp, 0x28
0000000000002e07         mov        qword [rsp+0x58+var_50], rdi
0000000000002e0c         mov        qword [rsp+0x58+var_40], rdx
0000000000002e11         call       j_strlen                                    ; strlen
0000000000002e16         mov        r14, qword [r15]
0000000000002e19         mov        qword [rsp+0x58+var_58], 0xffffffffffffffff
0000000000002e21         test       r14, r14
0000000000002e24         je         loc_2edd

0000000000002e2a         mov        r12, rax
0000000000002e2d         mov        byte [rsp+0x58+var_41], 0x0
0000000000002e32         xor        ebx, ebx
0000000000002e34         jmp        loc_2e87
0000000000002e36         align      64

                     loc_2e40:
0000000000002e40         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=argmatch+189
0000000000002e45         test       rax, rax
0000000000002e48         je         loc_2ef0

0000000000002e4e         mov        rdi, qword [rsp+0x58+var_58]
0000000000002e52         mov        rdx, r13                                    ; argument "__n" for method j_memcmp
0000000000002e55         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000002e58         imul       rdi, r13
0000000000002e5c         add        rdi, rax                                    ; argument "__s1" for method j_memcmp
0000000000002e5f         call       j_memcmp                                    ; memcmp
0000000000002e64         test       eax, eax
0000000000002e66         movzx      eax, byte [rsp+0x58+var_41]
0000000000002e6b         mov        ecx, 0x1
0000000000002e70         cmovne     eax, ecx
0000000000002e73         mov        byte [rsp+0x58+var_41], al

                     loc_2e77:
0000000000002e77         add        rbx, 0x1                                    ; CODE XREF=argmatch+169, argmatch+261
0000000000002e7b         add        rbp, r13
0000000000002e7e         mov        r14, qword [r15+rbx*8]
0000000000002e82         test       r14, r14
0000000000002e85         je         loc_2ec8

                     loc_2e87:
0000000000002e87         mov        rsi, qword [rsp+0x58+var_50]                ; argument "__s2" for method j_strncmp, CODE XREF=argmatch+68, argmatch+209
0000000000002e8c         mov        rdx, r12                                    ; argument "__n" for method j_strncmp
0000000000002e8f         mov        rdi, r14                                    ; argument "__s1" for method j_strncmp
0000000000002e92         call       j_strncmp                                   ; strncmp
0000000000002e97         test       eax, eax
0000000000002e99         jne        loc_2e77

0000000000002e9b         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000002e9e         call       j_strlen                                    ; strlen
0000000000002ea3         cmp        rax, r12
0000000000002ea6         je         loc_2f00

0000000000002ea8         cmp        qword [rsp+0x58+var_58], 0xffffffffffffffff
0000000000002ead         jne        loc_2e40

0000000000002eaf         mov        qword [rsp+0x58+var_58], rbx
0000000000002eb3         add        rbx, 0x1
0000000000002eb7         add        rbp, r13
0000000000002eba         mov        r14, qword [r15+rbx*8]
0000000000002ebe         test       r14, r14
0000000000002ec1         jne        loc_2e87

0000000000002ec3         nop        dword [rax+rax]

                     loc_2ec8:
0000000000002ec8         cmp        byte [rsp+0x58+var_41], 0x0                 ; CODE XREF=argmatch+149
0000000000002ecd         mov        rax, 0xfffffffffffffffe
0000000000002ed4         cmove      rax, qword [rsp+0x58+var_58]
0000000000002ed9         mov        qword [rsp+0x58+var_58], rax

                     loc_2edd:
0000000000002edd         mov        rax, qword [rsp+0x58+var_58]                ; CODE XREF=argmatch+52, argmatch+276
0000000000002ee1         add        rsp, 0x28
0000000000002ee5         pop        rbx
0000000000002ee6         pop        rbp
0000000000002ee7         pop        r12
0000000000002ee9         pop        r13
0000000000002eeb         pop        r14
0000000000002eed         pop        r15
0000000000002eef         ret
                        ; endp

                     loc_2ef0:
0000000000002ef0         mov        byte [rsp+0x58+var_41], 0x1                 ; CODE XREF=argmatch+88
0000000000002ef5         jmp        loc_2e77
0000000000002ef7         align      256

                     loc_2f00:
0000000000002f00         mov        qword [rsp+0x58+var_58], rbx                ; CODE XREF=argmatch+182
0000000000002f04         jmp        loc_2edd
0000000000002f06         align      16                                          ; End of unwind block (FDE at 0x8160)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_invalid:
0000000000002f10         cmp        rdx, 0xffffffffffffffff                     ; Begin of unwind block (FDE at 0x81ac), CODE XREF=__xargmatch_internal+78
0000000000002f14         push       r12
0000000000002f16         mov        edx, 0x5
0000000000002f1b         push       rbp
0000000000002f1c         mov        r12, rsi
0000000000002f1f         push       rbx
0000000000002f20         mov        rbp, rdi
0000000000002f23         je         loc_2f70

0000000000002f25         lea        rsi, qword [aAmbiguousArgum]                ; argument "msgid" for method j_dcgettext, "ambiguous argument %s for %s"
0000000000002f2c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f2e         call       j_dcgettext                                 ; dcgettext
0000000000002f33         mov        rbx, rax

                     loc_2f36:
0000000000002f36         mov        rsi, rbp                                    ; CODE XREF=argmatch_invalid+113
0000000000002f39         mov        edi, 0x1
0000000000002f3e         call       quote_n                                     ; quote_n
0000000000002f43         mov        rdx, r12
0000000000002f46         mov        rbp, rax
0000000000002f49         mov        esi, 0x8
0000000000002f4e         xor        edi, edi
0000000000002f50         call       quotearg_n_style                            ; quotearg_n_style
0000000000002f55         mov        r8, rbp
0000000000002f58         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002f5b         mov        rcx, rax
0000000000002f5e         pop        rbx
0000000000002f5f         pop        rbp
0000000000002f60         pop        r12
0000000000002f62         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002f64         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002f66         xor        eax, eax
0000000000002f68         jmp        j_error                                     ; error
                        ; endp
0000000000002f6d         align      16

                     loc_2f70:
0000000000002f70         lea        rsi, qword [aInvalidArgumen]                ; argument "msgid" for method j_dcgettext, "invalid argument %s for %s", CODE XREF=argmatch_invalid+19
0000000000002f77         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f79         call       j_dcgettext                                 ; dcgettext
0000000000002f7e         mov        rbx, rax
0000000000002f81         jmp        loc_2f36
0000000000002f83         align      16                                          ; End of unwind block (FDE at 0x81ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_valid:
0000000000002f90         push       r15                                         ; Begin of unwind block (FDE at 0x81d8), CODE XREF=__xargmatch_internal+92
0000000000002f92         push       r14
0000000000002f94         mov        r14, rdi
0000000000002f97         push       r13
0000000000002f99         push       r12
0000000000002f9b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f9d         push       rbp
0000000000002f9e         push       rbx
0000000000002f9f         mov        rbp, rsi
0000000000002fa2         lea        rsi, qword [aValidArguments]                ; argument "msgid" for method j_dcgettext, "Valid arguments are:"
0000000000002fa9         mov        r12, rdx
0000000000002fac         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002fb1         sub        rsp, 0x8
0000000000002fb5         mov        rbx, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002fbc         call       j_dcgettext                                 ; dcgettext
0000000000002fc1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002fc4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002fc7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002fcc         mov        r15, qword [r14]
0000000000002fcf         test       r15, r15
0000000000002fd2         je         loc_3068

0000000000002fd8         xor        r13d, r13d
0000000000002fdb         xor        ebx, ebx
0000000000002fdd         jmp        loc_3018
0000000000002fdf         align      32

                     loc_2fe0:
0000000000002fe0         mov        rdi, r15                                    ; CODE XREF=argmatch_valid+139, argmatch_valid+157
0000000000002fe3         add        rbx, 0x1
0000000000002fe7         mov        r13, rbp
0000000000002fea         call       quote                                       ; quote
0000000000002fef         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002ff6         lea        rdx, qword [aNS]                            ; "\\n  - %s"
0000000000002ffd         mov        rcx, rax
0000000000003000         mov        esi, 0x1
0000000000003005         xor        eax, eax
0000000000003007         add        rbp, r12
000000000000300a         call       j___fprintf_chk                             ; __fprintf_chk
000000000000300f         mov        r15, qword [r14+rbx*8]
0000000000003013         test       r15, r15
0000000000003016         je         loc_3068

                     loc_3018:
0000000000003018         test       rbx, rbx                                    ; CODE XREF=argmatch_valid+77, argmatch_valid+210
000000000000301b         je         loc_2fe0

000000000000301d         mov        rdx, r12                                    ; argument "__n" for method j_memcmp
0000000000003020         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000003023         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
0000000000003026         call       j_memcmp                                    ; memcmp
000000000000302b         test       eax, eax
000000000000302d         jne        loc_2fe0

000000000000302f         mov        rdi, r15
0000000000003032         add        rbx, 0x1
0000000000003036         add        rbp, r12
0000000000003039         call       quote                                       ; quote
000000000000303e         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000003045         lea        rdx, qword [aNS+8]                          ; 0x71f6
000000000000304c         mov        rcx, rax
000000000000304f         mov        esi, 0x1
0000000000003054         xor        eax, eax
0000000000003056         call       j___fprintf_chk                             ; __fprintf_chk
000000000000305b         mov        r15, qword [r14+rbx*8]
000000000000305f         test       r15, r15
0000000000003062         jne        loc_3018

0000000000003064         nop        dword [rax]

                     loc_3068:
0000000000003068         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=argmatch_valid+66, argmatch_valid+134
000000000000306f         mov        rax, qword [rdi+0x28]
0000000000003073         cmp        rax, qword [rdi+0x30]
0000000000003077         jae        loc_3098

0000000000003079         lea        rdx, qword [rax+1]
000000000000307d         mov        qword [rdi+0x28], rdx
0000000000003081         mov        byte [rax], 0xa
0000000000003084         add        rsp, 0x8
0000000000003088         pop        rbx
0000000000003089         pop        rbp
000000000000308a         pop        r12
000000000000308c         pop        r13
000000000000308e         pop        r14
0000000000003090         pop        r15
0000000000003092         ret
                        ; endp
0000000000003093         align      8

                     loc_3098:
0000000000003098         add        rsp, 0x8                                    ; CODE XREF=argmatch_valid+231
000000000000309c         mov        esi, 0xa                                    ; argument #2 for method j___overflow
00000000000030a1         pop        rbx
00000000000030a2         pop        rbp
00000000000030a3         pop        r12
00000000000030a5         pop        r13
00000000000030a7         pop        r14
00000000000030a9         pop        r15
00000000000030ab         jmp        j___overflow                                ; __overflow
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __xargmatch_internal:
00000000000030b0         push       r15                                         ; End of unwind block (FDE at 0x81d8), Begin of unwind block (FDE at 0x8238), CODE XREF=main+1402, main+1478
00000000000030b2         push       r14
00000000000030b4         mov        r14, rdi
00000000000030b7         push       r13
00000000000030b9         push       r12
00000000000030bb         mov        r12, rsi
00000000000030be         push       rbp
00000000000030bf         push       rbx
00000000000030c0         mov        rbp, rcx
00000000000030c3         mov        rbx, rdx
00000000000030c6         mov        rcx, r8
00000000000030c9         mov        rdx, rbp
00000000000030cc         sub        rsp, 0x8
00000000000030d0         mov        rsi, rbx
00000000000030d3         mov        rdi, r12
00000000000030d6         mov        r15, r8
00000000000030d9         mov        r13, r9
00000000000030dc         call       argmatch                                    ; argmatch
00000000000030e1         test       rax, rax
00000000000030e4         js         loc_30f5

                     loc_30e6:
00000000000030e6         add        rsp, 0x8                                    ; CODE XREF=__xargmatch_internal+107
00000000000030ea         pop        rbx
00000000000030eb         pop        rbp
00000000000030ec         pop        r12
00000000000030ee         pop        r13
00000000000030f0         pop        r14
00000000000030f2         pop        r15
00000000000030f4         ret
                        ; endp

                     loc_30f5:
00000000000030f5         mov        rdx, rax                                    ; CODE XREF=__xargmatch_internal+52
00000000000030f8         mov        rsi, r12
00000000000030fb         mov        rdi, r14
00000000000030fe         call       argmatch_invalid                            ; argmatch_invalid
0000000000003103         mov        rdx, r15
0000000000003106         mov        rsi, rbp
0000000000003109         mov        rdi, rbx
000000000000310c         call       argmatch_valid                              ; argmatch_valid
0000000000003111         call       r13
0000000000003114         mov        rax, 0xffffffffffffffff
000000000000311b         jmp        loc_30e6
000000000000311d         align      32                                          ; End of unwind block (FDE at 0x8238)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_to_argument:
0000000000003120         push       r14                                         ; Begin of unwind block (FDE at 0x8284)
0000000000003122         push       r13
0000000000003124         push       r12
0000000000003126         push       rbp
0000000000003127         push       rbx
0000000000003128         mov        r14, qword [rsi]
000000000000312b         test       r14, r14
000000000000312e         je         loc_3161

0000000000003130         mov        r12, rcx
0000000000003133         mov        r13, rdi
0000000000003136         mov        rbp, rdx
0000000000003139         lea        rbx, qword [rsi+8]
000000000000313d         jmp        loc_314f
000000000000313f         align      64

                     loc_3140:
0000000000003140         mov        r14, qword [rbx]                            ; CODE XREF=argmatch_to_argument+63
0000000000003143         add        rbp, r12
0000000000003146         add        rbx, 0x8
000000000000314a         test       r14, r14
000000000000314d         je         loc_3161

                     loc_314f:
000000000000314f         mov        rdx, r12                                    ; argument "__n" for method j_memcmp, CODE XREF=argmatch_to_argument+29
0000000000003152         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000003155         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
0000000000003158         call       j_memcmp                                    ; memcmp
000000000000315d         test       eax, eax
000000000000315f         jne        loc_3140

                     loc_3161:
0000000000003161         pop        rbx                                         ; CODE XREF=argmatch_to_argument+14, argmatch_to_argument+45
0000000000003162         mov        rax, r14
0000000000003165         pop        rbp
0000000000003166         pop        r12
0000000000003168         pop        r13
000000000000316a         pop        r14
000000000000316c         ret
                        ; endp
000000000000316d         align      16                                          ; End of unwind block (FDE at 0x8284)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000003170         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x82c4), file_name
0000000000003177         ret
                        ; endp
0000000000003178         align      128                                         ; End of unwind block (FDE at 0x82c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000003180         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x82d8), ignore_EPIPE
0000000000003187         ret
                        ; endp
0000000000003188         align      16                                          ; End of unwind block (FDE at 0x82d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000003190         push       rbp                                         ; Begin of unwind block (FDE at 0x82ec), DATA XREF=main+157
0000000000003191         push       rbx
0000000000003192         sub        rsp, 0x8
0000000000003196         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000319d         call       close_stream                                ; close_stream
00000000000031a2         test       eax, eax
00000000000031a4         je         loc_31bc

00000000000031a6         call       j___errno_location                          ; __errno_location
00000000000031ab         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000031b2         mov        rbx, rax
00000000000031b5         je         loc_31d3

00000000000031b7         cmp        dword [rax], 0x20
00000000000031ba         jne        loc_31d3

                     loc_31bc:
00000000000031bc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000031c3         call       close_stream                                ; close_stream
00000000000031c8         test       eax, eax
00000000000031ca         jne        loc_3212

00000000000031cc         add        rsp, 0x8
00000000000031d0         pop        rbx
00000000000031d1         pop        rbp
00000000000031d2         ret
                        ; endp

                     loc_31d3:
00000000000031d3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000031da         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031dc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031e1         call       j_dcgettext                                 ; dcgettext
00000000000031e6         mov        rdi, qword [file_name]                      ; file_name
00000000000031ed         mov        rbp, rax
00000000000031f0         test       rdi, rdi
00000000000031f3         je         loc_321d

00000000000031f5         call       quotearg_colon                              ; quotearg_colon
00000000000031fa         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000031fc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000003203         mov        rcx, rax
0000000000003206         mov        r8, rbp
0000000000003209         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000320b         xor        eax, eax
000000000000320d         call       j_error                                     ; error

                     loc_3212:
0000000000003212         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000003218         call       j__exit                                     ; _exit
                        ; endp

                     loc_321d:
000000000000321d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000321f         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x71f8
0000000000003226         mov        rcx, rax
0000000000003229         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000322b         xor        eax, eax
000000000000322d         call       j_error                                     ; error
0000000000003232         jmp        loc_3212
0000000000003234         align      64                                          ; End of unwind block (FDE at 0x82ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000003240         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x831c)
                        ; endp
0000000000003245         align      16                                          ; End of unwind block (FDE at 0x831c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000003250         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8330), CODE XREF=main+815
0000000000003253         je         loc_3270

0000000000003255         push       rbx
0000000000003256         mov        ebx, esi
0000000000003258         call       j_fileno                                    ; fileno
000000000000325d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
000000000000325f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000003261         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000003263         pop        rbx
0000000000003264         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000003266         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
000000000000326b         align      16

                     loc_3270:
0000000000003270         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000003272         align      128                                         ; End of unwind block (FDE at 0x8330)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     protect_fd:
0000000000003280         push       rbp                                         ; Begin of unwind block (FDE at 0x834c), CODE XREF=freopen_safer+131, freopen_safer+161, freopen_safer+277
0000000000003281         push       rbx
0000000000003282         mov        ebp, edi
0000000000003284         lea        rdi, qword [aDevnull]                       ; argument "__file" for method j_open, "/dev/null"
000000000000328b         xor        esi, esi                                    ; argument "__oflag" for method j_open
000000000000328d         xor        eax, eax
000000000000328f         sub        rsp, 0x8
0000000000003293         mov        ebx, 0x1
0000000000003298         call       j_open                                      ; open
000000000000329d         cmp        ebp, eax
000000000000329f         je         loc_32b9

00000000000032a1         xor        ebx, ebx
00000000000032a3         test       eax, eax
00000000000032a5         js         loc_32b9

00000000000032a7         mov        edi, eax                                    ; argument "__fd" for method j_close
00000000000032a9         call       j_close                                     ; close
00000000000032ae         call       j___errno_location                          ; __errno_location
00000000000032b3         mov        dword [rax], 0x9

                     loc_32b9:
00000000000032b9         add        rsp, 0x8                                    ; CODE XREF=protect_fd+31, protect_fd+37
00000000000032bd         mov        eax, ebx
00000000000032bf         pop        rbx
00000000000032c0         pop        rbp
00000000000032c1         ret
                        ; endp
00000000000032c2         align      16                                          ; End of unwind block (FDE at 0x834c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     freopen_safer:
00000000000032d0         push       r15                                         ; Begin of unwind block (FDE at 0x8374), CODE XREF=main+779, main+1920
00000000000032d2         push       r14
00000000000032d4         mov        r15, rsi
00000000000032d7         push       r13
00000000000032d9         push       r12
00000000000032db         mov        r12, rdx
00000000000032de         push       rbp
00000000000032df         push       rbx
00000000000032e0         sub        rsp, 0x18
00000000000032e4         mov        qword [rsp+0x48+var_40], rdi
00000000000032e9         mov        rdi, rdx                                    ; argument "__stream" for method j_fileno
00000000000032ec         call       j_fileno                                    ; fileno
00000000000032f1         mov        ebx, eax
00000000000032f3         call       j___errno_location                          ; __errno_location
00000000000032f8         cmp        ebx, 0x1
00000000000032fb         mov        r14, rax
00000000000032fe         je         loc_3460

0000000000003304         cmp        ebx, 0x2
0000000000003307         je         loc_3450

000000000000330d         test       ebx, ebx
000000000000330f         je         loc_33c8

0000000000003315         mov        esi, 0x2                                    ; argument "__fd2" for method j_dup2
000000000000331a         mov        edi, 0x2                                    ; argument "__fd" for method j_dup2
000000000000331f         call       j_dup2                                      ; dup2
0000000000003324         cmp        eax, 0x2
0000000000003327         setne      bl

                     loc_332a:
000000000000332a         mov        esi, 0x1                                    ; argument "__fd2" for method j_dup2, CODE XREF=freopen_safer+386
000000000000332f         mov        edi, 0x1                                    ; argument "__fd" for method j_dup2
0000000000003334         call       j_dup2                                      ; dup2
0000000000003339         cmp        eax, 0x1
000000000000333c         setne      bpl

                     loc_3340:
0000000000003340         xor        esi, esi                                    ; argument "__fd2" for method j_dup2, CODE XREF=freopen_safer+404
0000000000003342         xor        edi, edi                                    ; argument "__fd" for method j_dup2
0000000000003344         call       j_dup2                                      ; dup2
0000000000003349         test       eax, eax
000000000000334b         je         loc_33d8

0000000000003351         xor        edi, edi
0000000000003353         call       protect_fd                                  ; protect_fd
0000000000003358         test       al, al
000000000000335a         mov        r13d, eax
000000000000335d         je         loc_3470

0000000000003363         test       bpl, bpl
0000000000003366         jne        loc_33e0

                     loc_3368:
0000000000003368         test       bl, bl                                      ; CODE XREF=freopen_safer+270, freopen_safer+286
000000000000336a         je         loc_3380

000000000000336c         mov        edi, 0x2
0000000000003371         call       protect_fd                                  ; protect_fd
0000000000003376         test       al, al
0000000000003378         mov        ebx, eax
000000000000337a         je         loc_3430

                     loc_3380:
0000000000003380         mov        rdi, qword [rsp+0x48+var_40]                ; argument "__filename" for method j_freopen, CODE XREF=freopen_safer+154, freopen_safer+255
0000000000003385         mov        rdx, r12                                    ; argument "__stream" for method j_freopen
0000000000003388         mov        rsi, r15                                    ; argument "__modes" for method j_freopen
000000000000338b         call       j_freopen                                   ; freopen
0000000000003390         mov        r12, rax

                     loc_3393:
0000000000003393         test       bl, bl                                      ; CODE XREF=freopen_safer+425
0000000000003395         mov        r15d, dword [r14]
0000000000003398         jne        loc_3440

                     loc_339e:
000000000000339e         test       bpl, bpl                                    ; CODE XREF=freopen_safer+378
00000000000033a1         jne        loc_3410

00000000000033a3         test       r13b, r13b
00000000000033a6         jne        loc_341f

                     loc_33a8:
00000000000033a8         test       r12, r12                                    ; CODE XREF=freopen_safer+333, freopen_safer+342
00000000000033ab         jne        loc_33b0

00000000000033ad         mov        dword [r14], r15d

                     loc_33b0:
00000000000033b0         add        rsp, 0x18                                   ; CODE XREF=freopen_safer+219
00000000000033b4         mov        rax, r12
00000000000033b7         pop        rbx
00000000000033b8         pop        rbp
00000000000033b9         pop        r12
00000000000033bb         pop        r13
00000000000033bd         pop        r14
00000000000033bf         pop        r15
00000000000033c1         ret
                        ; endp
00000000000033c2         align      8

                     loc_33c8:
00000000000033c8         xor        ebx, ebx                                    ; CODE XREF=freopen_safer+63
00000000000033ca         xor        ebp, ebp
00000000000033cc         xor        r13d, r13d
00000000000033cf         jmp        loc_3380
00000000000033d1         align      8

                     loc_33d8:
00000000000033d8         xor        r13d, r13d                                  ; CODE XREF=freopen_safer+123
00000000000033db         test       bpl, bpl
00000000000033de         je         loc_3368

                     loc_33e0:
00000000000033e0         mov        edi, 0x1                                    ; CODE XREF=freopen_safer+150
00000000000033e5         call       protect_fd                                  ; protect_fd
00000000000033ea         test       al, al
00000000000033ec         mov        ebp, eax
00000000000033ee         jne        loc_3368

00000000000033f4         xor        r12d, r12d
00000000000033f7         test       bl, bl
00000000000033f9         mov        r15d, dword [r14]
00000000000033fc         je         loc_3410

00000000000033fe         mov        edi, 0x2                                    ; argument "__fd" for method j_close
0000000000003403         call       j_close                                     ; close
0000000000003408         nop        dword [rax+rax]

                     loc_3410:
0000000000003410         mov        edi, 0x1                                    ; argument "__fd" for method j_close, CODE XREF=freopen_safer+209, freopen_safer+300
0000000000003415         call       j_close                                     ; close
000000000000341a         test       r13b, r13b
000000000000341d         je         loc_33a8

                     loc_341f:
000000000000341f         xor        edi, edi                                    ; argument "__fd" for method j_close, CODE XREF=freopen_safer+214
0000000000003421         call       j_close                                     ; close
0000000000003426         jmp        loc_33a8
0000000000003428         align      16

                     loc_3430:
0000000000003430         mov        r15d, dword [r14]                           ; CODE XREF=freopen_safer+170
0000000000003433         xor        r12d, r12d
0000000000003436         nop        word [cs:rax+rax]

                     loc_3440:
0000000000003440         mov        edi, 0x2                                    ; argument "__fd" for method j_close, CODE XREF=freopen_safer+200
0000000000003445         call       j_close                                     ; close
000000000000344a         jmp        loc_339e
000000000000344f         align      16

                     loc_3450:
0000000000003450         xor        ebx, ebx                                    ; CODE XREF=freopen_safer+55
0000000000003452         jmp        loc_332a
0000000000003457         align      32

                     loc_3460:
0000000000003460         xor        ebx, ebx                                    ; CODE XREF=freopen_safer+46
0000000000003462         xor        ebp, ebp
0000000000003464         jmp        loc_3340
0000000000003469         align      16

                     loc_3470:
0000000000003470         mov        r13d, 0x1                                   ; CODE XREF=freopen_safer+141
0000000000003476         xor        r12d, r12d
0000000000003479         jmp        loc_3393
000000000000347e         align      128                                         ; End of unwind block (FDE at 0x8374)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000003480         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x83c4), CODE XREF=main+152, rpl_mbrtowc+71
0000000000003484         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000003486         call       j_setlocale                                 ; setlocale
000000000000348b         mov        rdx, rax
000000000000348e         mov        eax, 0x1
0000000000003493         test       rdx, rdx
0000000000003496         je         loc_34b5

0000000000003498         lea        rdi, qword [aDevnull+10]                    ; 0x7211
000000000000349f         mov        ecx, 0x2
00000000000034a4         mov        rsi, rdx
00000000000034a7         rep  cmpsb byte [rsi], byte [rdi]
00000000000034a9         seta       cl
00000000000034ac         sbb        cl, 0x0
00000000000034af         xor        eax, eax
00000000000034b1         test       cl, cl
00000000000034b3         jne        loc_34c0

                     loc_34b5:
00000000000034b5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000034b9         ret
                        ; endp
00000000000034ba         align      64

                     loc_34c0:
00000000000034c0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
00000000000034c7         mov        ecx, 0x6
00000000000034cc         mov        rsi, rdx
00000000000034cf         rep  cmpsb byte [rsi], byte [rdi]
00000000000034d1         seta       al
00000000000034d4         sbb        al, 0x0
00000000000034d6         test       al, al
00000000000034d8         setne      al
00000000000034db         add        rsp, 0x8
00000000000034df         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     initbuffer:
00000000000034e0         pxor       xmm0, xmm0                                  ; End of unwind block (FDE at 0x83c4), Begin of unwind block (FDE at 0x83e4), CODE XREF=main+823, main+831
00000000000034e4         mov        qword [rdi+0x10], 0x0
00000000000034ec         movups     xmmword [rdi], xmm0
00000000000034ef         ret
                        ; endp

                     readlinebuffer_delim:
00000000000034f0         push       r15                                         ; End of unwind block (FDE at 0x83e4), Begin of unwind block (FDE at 0x83f8), CODE XREF=main+883, main+969, main+2047, readlinebuffer+5
00000000000034f2         push       r14
00000000000034f4         push       r13
00000000000034f6         push       r12
00000000000034f8         push       rbp
00000000000034f9         push       rbx
00000000000034fa         sub        rsp, 0x18
00000000000034fe         mov        r13, qword [rdi+0x10]
0000000000003502         mov        r8, qword [rdi]
0000000000003505         add        r8, r13
0000000000003508         test       byte [rsi], 0x10
000000000000350b         jne        loc_35e0

0000000000003511         mov        r14, rdi
0000000000003514         mov        rbp, rsi
0000000000003517         mov        rbx, r13
000000000000351a         movsx      r15d, dl
000000000000351e         jmp        loc_352b

                     loc_3520:
0000000000003520         cmp        r12d, r15d                                  ; CODE XREF=readlinebuffer_delim+90
0000000000003523         lea        rbx, qword [rsi+1]
0000000000003527         mov        byte [rsi], cl
0000000000003529         je         loc_3586

                     loc_352b:
000000000000352b         mov        rcx, qword [rbp+8]                          ; CODE XREF=readlinebuffer_delim+46, readlinebuffer_delim+148
000000000000352f         cmp        rcx, qword [rbp+0x10]
0000000000003533         jae        loc_35a0

0000000000003535         lea        rax, qword [rcx+1]
0000000000003539         mov        qword [rbp+8], rax
000000000000353d         movzx      r12d, byte [rcx]
0000000000003541         mov        ecx, r12d

                     loc_3544:
0000000000003544         cmp        rbx, r8                                     ; CODE XREF=readlinebuffer_delim+230, readlinebuffer_delim+259
0000000000003547         mov        rsi, rbx
000000000000354a         jne        loc_3520

000000000000354c         mov        rbx, qword [r14]
000000000000354f         mov        rsi, r14
0000000000003552         mov        rdi, r13
0000000000003555         mov        byte [rsp+0x48+var_39], dl
0000000000003559         mov        byte [rsp+0x48+var_48], cl
000000000000355c         call       x2realloc                                   ; x2realloc
0000000000003561         mov        r8, qword [r14]
0000000000003564         movzx      ecx, byte [rsp+0x48+var_48]
0000000000003568         lea        rsi, qword [rax+rbx]
000000000000356c         mov        qword [r14+0x10], rax
0000000000003570         mov        r13, rax
0000000000003573         movzx      edx, byte [rsp+0x48+var_39]
0000000000003578         lea        rbx, qword [rsi+1]
000000000000357c         add        r8, rax
000000000000357f         cmp        r12d, r15d
0000000000003582         mov        byte [rsi], cl
0000000000003584         jne        loc_352b

                     loc_3586:
0000000000003586         sub        rbx, r13                                    ; CODE XREF=readlinebuffer_delim+57, readlinebuffer_delim+223
0000000000003589         mov        rax, r14
000000000000358c         mov        qword [r14+8], rbx
0000000000003590         add        rsp, 0x18
0000000000003594         pop        rbx
0000000000003595         pop        rbp
0000000000003596         pop        r12
0000000000003598         pop        r13
000000000000359a         pop        r14
000000000000359c         pop        r15
000000000000359e         ret
                        ; endp
000000000000359f         align      32

                     loc_35a0:
00000000000035a0         mov        rdi, rbp                                    ; argument #1 for method j___uflow, CODE XREF=readlinebuffer_delim+67
00000000000035a3         mov        byte [rsp+0x48+var_39], dl
00000000000035a7         mov        qword [rsp+0x48+var_48], r8
00000000000035ab         call       j___uflow                                   ; __uflow
00000000000035b0         cmp        eax, 0xffffffff
00000000000035b3         mov        r12d, eax
00000000000035b6         mov        r8, qword [rsp+0x48+var_48]
00000000000035ba         movzx      edx, byte [rsp+0x48+var_39]
00000000000035bf         jne        loc_35f1

00000000000035c1         cmp        r13, rbx
00000000000035c4         je         loc_35e0

00000000000035c6         test       byte [rbp], 0x20
00000000000035ca         jne        loc_35e0

00000000000035cc         cmp        byte [rbx-1], dl
00000000000035cf         je         loc_3586

00000000000035d1         mov        r12d, r15d
00000000000035d4         mov        ecx, edx
00000000000035d6         jmp        loc_3544
00000000000035db         align      32

                     loc_35e0:
00000000000035e0         add        rsp, 0x18                                   ; CODE XREF=readlinebuffer_delim+27, readlinebuffer_delim+212, readlinebuffer_delim+218
00000000000035e4         xor        eax, eax
00000000000035e6         pop        rbx
00000000000035e7         pop        rbp
00000000000035e8         pop        r12
00000000000035ea         pop        r13
00000000000035ec         pop        r14
00000000000035ee         pop        r15
00000000000035f0         ret
                        ; endp

                     loc_35f1:
00000000000035f1         mov        ecx, eax                                    ; CODE XREF=readlinebuffer_delim+207
00000000000035f3         jmp        loc_3544
00000000000035f8         align      512                                         ; End of unwind block (FDE at 0x83f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_48: int64_t, -72


                     readlinebuffer:
0000000000003600         mov        edx, 0xa                                    ; Begin of unwind block (FDE at 0x845c)
0000000000003605         jmp        readlinebuffer_delim                        ; readlinebuffer_delim
000000000000360a         align      16                                          ; End of unwind block (FDE at 0x845c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     freebuffer:
0000000000003610         mov        rdi, qword [rdi+0x10]                       ; Begin of unwind block (FDE at 0x8470), argument "__ptr" for method j_free
0000000000003614         jmp        j_free                                      ; free
                        ; endp
0000000000003619         align      32                                          ; End of unwind block (FDE at 0x8470)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     memcasecmp:
0000000000003620         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x8484), CODE XREF=different+96
0000000000003623         je         loc_3668

0000000000003625         push       r12
0000000000003627         push       rbp
0000000000003628         mov        r12, rsi
000000000000362b         push       rbx
000000000000362c         mov        rbp, rdi
000000000000362f         mov        rbx, rdx
0000000000003632         call       j___ctype_toupper_loc                       ; __ctype_toupper_loc
0000000000003637         xor        ecx, ecx
0000000000003639         mov        r8, qword [rax]
000000000000363c         jmp        loc_3649
000000000000363e         align      64

                     loc_3640:
0000000000003640         add        rcx, 0x1                                    ; CODE XREF=memcasecmp+59
0000000000003644         cmp        rcx, rbx
0000000000003647         je         loc_365d

                     loc_3649:
0000000000003649         movzx      eax, byte [rbp+rcx]                         ; CODE XREF=memcasecmp+28
000000000000364e         movzx      r9d, byte [r12+rcx]
0000000000003653         mov        eax, dword [r8+rax*4]
0000000000003657         sub        eax, dword [r8+r9*4]
000000000000365b         je         loc_3640

                     loc_365d:
000000000000365d         pop        rbx                                         ; CODE XREF=memcasecmp+39
000000000000365e         pop        rbp
000000000000365f         pop        r12
0000000000003661         ret
                        ; endp
0000000000003662         align      8

                     loc_3668:
0000000000003668         xor        eax, eax                                    ; CODE XREF=memcasecmp+3
000000000000366a         ret
                        ; endp
000000000000366b         align      16                                          ; End of unwind block (FDE at 0x8484)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     posix2_version:
0000000000003670         push       rbx                                         ; Begin of unwind block (FDE at 0x84b4), CODE XREF=main+2444
0000000000003671         lea        rdi, qword [aPosix2version]                 ; argument "__name" for method j_getenv, "_POSIX2_VERSION"
0000000000003678         mov        ebx, 0x31069
000000000000367d         sub        rsp, 0x10
0000000000003681         mov        rax, qword [fs:0x28]
000000000000368a         mov        qword [rsp+0x18+var_10], rax
000000000000368f         xor        eax, eax
0000000000003691         call       j_getenv                                    ; getenv
0000000000003696         test       rax, rax
0000000000003699         je         loc_36a0

000000000000369b         cmp        byte [rax], 0x0
000000000000369e         jne        loc_36c0

                     loc_36a0:
00000000000036a0         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=posix2_version+41, posix2_version+103, posix2_version+128, posix2_version+135
00000000000036a5         xor        rcx, qword [fs:0x28]
00000000000036ae         mov        eax, ebx
00000000000036b0         jne        loc_36f9

00000000000036b2         add        rsp, 0x10
00000000000036b6         pop        rbx
00000000000036b7         ret
                        ; endp
00000000000036b8         align      64

                     loc_36c0:
00000000000036c0         mov        edx, 0xa                                    ; argument "__base" for method j_strtol, CODE XREF=posix2_version+46
00000000000036c5         mov        rsi, rsp                                    ; argument "__endptr" for method j_strtol
00000000000036c8         mov        rdi, rax                                    ; argument "__nptr" for method j_strtol
00000000000036cb         call       j_strtol                                    ; strtol
00000000000036d0         mov        rdx, qword [rsp+0x18+var_18]
00000000000036d4         cmp        byte [rdx], 0x0
00000000000036d7         jne        loc_36a0

00000000000036d9         cmp        rax, 0xffffffff80000000
00000000000036df         jl         loc_36f2

00000000000036e1         cmp        rax, 0x7fffffff
00000000000036e7         mov        ebx, 0x7fffffff
00000000000036ec         cmovle     rbx, rax
00000000000036f0         jmp        loc_36a0

                     loc_36f2:
00000000000036f2         mov        ebx, 0x80000000                             ; CODE XREF=posix2_version+111
00000000000036f7         jmp        loc_36a0

                     loc_36f9:
00000000000036f9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=posix2_version+64
                        ; endp
00000000000036fe         align      256                                         ; End of unwind block (FDE at 0x84b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000003700         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x84dc), CODE XREF=main+94
0000000000003703         push       rbx
0000000000003704         je         loc_377d

0000000000003706         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000370b         mov        rbx, rdi
000000000000370e         call       j_strrchr                                   ; strrchr
0000000000003713         test       rax, rax
0000000000003716         je         loc_376d

0000000000003718         lea        r8, qword [rax+1]
000000000000371c         mov        rdx, r8
000000000000371f         sub        rdx, rbx
0000000000003722         cmp        rdx, 0x6
0000000000003726         jle        loc_376d

0000000000003728         lea        rsi, qword [rax-6]
000000000000372c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003733         mov        ecx, 0x7
0000000000003738         rep  cmpsb byte [rsi], byte [rdi]
000000000000373a         seta       dl
000000000000373d         sbb        dl, 0x0
0000000000003740         test       dl, dl
0000000000003742         jne        loc_376d

0000000000003744         lea        rdi, qword [aLibs+8]                        ; 0x7270
000000000000374b         mov        ecx, 0x3
0000000000003750         mov        rsi, r8
0000000000003753         mov        rbx, r8
0000000000003756         rep  cmpsb byte [rsi], byte [rdi]
0000000000003758         seta       dl
000000000000375b         sbb        dl, 0x0
000000000000375e         test       dl, dl
0000000000003760         jne        loc_376d

0000000000003762         lea        rbx, qword [rax+4]
0000000000003766         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_376d:
000000000000376d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000003774         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000377b         pop        rbx
000000000000377c         ret
                        ; endp

                     loc_377d:
000000000000377d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000003784         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000378b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000003790         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000003795         call       j_fwrite                                    ; fwrite
000000000000379a         call       j_abort                                     ; abort
                        ; endp
000000000000379f         align      32                                          ; End of unwind block (FDE at 0x84dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000037a0         push       rbp                                         ; Begin of unwind block (FDE at 0x84fc), CODE XREF=sub_3fd0+2597, sub_3fd0+2619
00000000000037a1         push       rbx
00000000000037a2         mov        rbp, rdi
00000000000037a5         mov        ebx, esi
00000000000037a7         sub        rsp, 0x8
00000000000037ab         call       locale_charset                              ; locale_charset
00000000000037b0         movzx      edx, byte [rax]
00000000000037b3         and        edx, 0xffffffdf
00000000000037b6         cmp        dl, 0x55
00000000000037b9         je         loc_3830

00000000000037bb         cmp        dl, 0x47
00000000000037be         je         loc_37e0

                     loc_37c0:
00000000000037c0         lea        rax, qword [aLibs+27]                       ; 0x7283, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000037c7         lea        rdx, qword [aLibs+29]                       ; 0x7285
00000000000037ce         cmp        ebx, 0x9
00000000000037d1         cmovne     rax, rdx
00000000000037d5         add        rsp, 0x8
00000000000037d9         pop        rbx
00000000000037da         pop        rbp
00000000000037db         ret
                        ; endp
00000000000037dc         align      32

                     loc_37e0:
00000000000037e0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
00000000000037e4         and        edx, 0xffffffdf
00000000000037e7         cmp        dl, 0x42
00000000000037ea         jne        loc_37c0

00000000000037ec         cmp        byte [rax+2], 0x31
00000000000037f0         jne        loc_37c0

00000000000037f2         cmp        byte [rax+3], 0x38
00000000000037f6         jne        loc_37c0

00000000000037f8         cmp        byte [rax+4], 0x30
00000000000037fc         jne        loc_37c0

00000000000037fe         cmp        byte [rax+5], 0x33
0000000000003802         jne        loc_37c0

0000000000003804         cmp        byte [rax+6], 0x30
0000000000003808         jne        loc_37c0

000000000000380a         cmp        byte [rax+7], 0x0
000000000000380e         jne        loc_37c0

0000000000003810         cmp        byte [rbp], 0x60
0000000000003814         lea        rax, qword [aLibs+20]                       ; 0x727c
000000000000381b         lea        rdx, qword [aLibs+24]                       ; 0x7280
0000000000003822         cmovne     rax, rdx
0000000000003826         add        rsp, 0x8
000000000000382a         pop        rbx
000000000000382b         pop        rbp
000000000000382c         ret
                        ; endp
000000000000382d         align      16

                     loc_3830:
0000000000003830         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000003834         and        edx, 0xffffffdf
0000000000003837         cmp        dl, 0x54
000000000000383a         jne        loc_37c0

000000000000383c         movzx      edx, byte [rax+2]
0000000000003840         and        edx, 0xffffffdf
0000000000003843         cmp        dl, 0x46
0000000000003846         jne        loc_37c0

000000000000384c         cmp        byte [rax+3], 0x2d
0000000000003850         jne        loc_37c0

0000000000003856         cmp        byte [rax+4], 0x38
000000000000385a         jne        loc_37c0

0000000000003860         cmp        byte [rax+5], 0x0
0000000000003864         jne        loc_37c0

000000000000386a         cmp        byte [rbp], 0x60
000000000000386e         lea        rax, qword [aLibs+12]                       ; 0x7274
0000000000003875         lea        rdx, qword [aLibs+16]                       ; 0x7278
000000000000387c         cmovne     rax, rdx
0000000000003880         add        rsp, 0x8
0000000000003884         pop        rbx
0000000000003885         pop        rbp
0000000000003886         ret
                        ; endp
0000000000003887         align      16                                          ; End of unwind block (FDE at 0x84fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000003890         push       r15                                         ; Begin of unwind block (FDE at 0x8540), CODE XREF=sub_3fd0+1165, sub_3fd0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000003892         push       r14
0000000000003894         mov        r15d, r8d
0000000000003897         push       r13
0000000000003899         push       r12
000000000000389b         mov        r14, rdi
000000000000389e         push       rbp
000000000000389f         push       rbx
00000000000038a0         mov        ebx, r9d
00000000000038a3         mov        r13, rsi
00000000000038a6         mov        rbp, rcx
00000000000038a9         and        ebx, 0x2
00000000000038ac         sub        rsp, 0xb8
00000000000038b3         mov        rax, qword [rsp+0xe8+arg_0]
00000000000038bb         mov        qword [rsp+0xe8+var_D8], rdx
00000000000038c0         mov        dword [rsp+0xe8+var_E0], r8d
00000000000038c5         mov        dword [rsp+0xe8+var_70], r9d
00000000000038ca         mov        qword [rsp+0xe8+var_C8], rax
00000000000038cf         mov        rax, qword [rsp+0xe8+arg_8]
00000000000038d7         mov        qword [rsp+0xe8+var_80], rax
00000000000038dc         mov        rax, qword [rsp+0xe8+arg_10]
00000000000038e4         mov        qword [rsp+0xe8+var_88], rax
00000000000038e9         mov        rax, qword [fs:0x28]
00000000000038f2         mov        qword [rsp+0xe8+var_40], rax
00000000000038fa         xor        eax, eax
00000000000038fc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000003901         cmp        r15d, 0xa
0000000000003905         mov        qword [rsp+0xe8+var_90], rax
000000000000390a         ja         loc_4abf

0000000000003910         lea        rcx, qword [switch_table_72e0]              ; switch_table_72e0
0000000000003917         mov        edx, r15d
000000000000391a         movsxd     rax, dword [rcx+rdx*4]
000000000000391e         add        rax, rcx
0000000000003921         jmp        rax                                         ; switch statement using table at 0x72e0, with 11 cases, 0x3923,0x44f4,0x4550,0x45a5,0x45ea,0x4624,0x46ca,0x4704,0x48f8

                     loc_3923:
0000000000003923         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3fd0+1318
0000000000003928         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000392d         xor        r12d, r12d
0000000000003930         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003939         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000393e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3943:
0000000000003943         lea        rax, qword [aLibs+29]                       ; 0x7285, CODE XREF=sub_3fd0+1876
000000000000394a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003953         xor        r15d, r15d
0000000000003956         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000395e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3963:
0000000000003963         xor        r11d, r11d                                  ; CODE XREF=sub_3fd0+180, sub_3fd0+1400, sub_3fd0+1488, sub_3fd0+1557, sub_3fd0+1615, sub_3fd0+1781, sub_3fd0+1839, sub_3fd0+2408, sub_3fd0+2485
0000000000003966         mov        rax, rbp
0000000000003969         mov        r8d, r12d
000000000000396c         mov        rbp, r11
000000000000396f         mov        r11, rax
0000000000003972         nop        word [rax+rax]

                     loc_3978:
0000000000003978         cmp        r11, rbp                                    ; CODE XREF=sub_3a80+194
000000000000397b         setne      r12b
000000000000397f         cmp        r11, 0xffffffffffffffff
0000000000003983         jne        loc_3992

0000000000003985         mov        rax, qword [rsp+0xe8+var_D8]
000000000000398a         cmp        byte [rax+rbp], 0x0
000000000000398e         setne      r12b

                     loc_3992:
0000000000003992         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003995         je         loc_3ff0

000000000000399b         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000039a0         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000039a5         lea        r9, qword [rdi+rbp]
00000000000039a9         setne      al
00000000000039ac         and        al, byte [rsp+0xe8+var_DB]
00000000000039b0         mov        r10d, eax
00000000000039b3         je         loc_3a60

00000000000039b9         mov        rax, qword [rsp+0xe8+var_D0]
00000000000039be         test       rax, rax
00000000000039c1         je         loc_3df0

00000000000039c7         cmp        r11, 0xffffffffffffffff
00000000000039cb         lea        rbx, qword [rbp+rax]
00000000000039d0         jne        loc_3a00

00000000000039d2         cmp        rax, 0x1
00000000000039d6         jbe        loc_3a00

00000000000039d8         mov        byte [rsp+0xe8+var_B0], r8b
00000000000039dd         mov        byte [rsp+0xe8+var_B8], r10b
00000000000039e2         mov        qword [rsp+0xe8+var_C0], r9
00000000000039e7         call       j_strlen                                    ; strlen
00000000000039ec         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000039f2         movzx      r10d, byte [rsp+0xe8+var_B8]
00000000000039f8         mov        r11, rax
00000000000039fb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3a00:
0000000000003a00         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003a03         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003a08         ja         loc_3fc0

0000000000003a0e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003a13         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003a18         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000003a1b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003a20         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003a25         mov        qword [rsp+0xe8+var_B8], r9
0000000000003a2a         call       j_memcmp                                    ; memcmp
0000000000003a2f         test       eax, eax
0000000000003a31         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003a36         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003a3c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003a41         jne        loc_3fc0

0000000000003a47         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003a4c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003a52         jne        loc_49d5

0000000000003a58         nop        dword [rax+rax]

                     loc_3a60:
0000000000003a60         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3fb0+19
0000000000003a64         cmp        bl, 0x7e
0000000000003a67         ja         loc_3d88

0000000000003a6d         lea        rcx, qword [switch_table_72e0+44]           ; 0x730c
0000000000003a74         movzx      edx, bl
0000000000003a77         movsxd     rax, dword [rcx+rdx*4]
0000000000003a7b         add        rax, rcx
0000000000003a7e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3a80:
0000000000003a80         xor        r10d, r10d
0000000000003a83         cmp        r11, 0x1
0000000000003a87         setne      al
0000000000003a8a         cmp        r11, 0xffffffffffffffff
0000000000003a8e         jne        loc_3a9c

0000000000003a90         mov        rax, qword [rsp+arg_8]
0000000000003a95         cmp        byte [rax+1], 0x0
0000000000003a99         setne      al

                     loc_3a9c:
0000000000003a9c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3a80+14
0000000000003aa1         sete       dl
0000000000003aa4         test       al, al
0000000000003aa6         je         loc_3cf8

                     loc_3aac:
0000000000003aac         xor        r12d, r12d                                  ; CODE XREF=sub_3cf0+11
0000000000003aaf         xor        eax, eax
0000000000003ab1         nop        dword [rax]
                        ; endp

                     loc_3ab8:
0000000000003ab8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3ca0+50, sub_3d70+119
0000000000003abd         jne        loc_3bd2

0000000000003ac3         test       dl, dl
0000000000003ac5         jne        loc_3bd2

                     loc_3acb:
0000000000003acb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3b80+87
0000000000003ad0         test       rsi, rsi
0000000000003ad3         je         loc_3ae9

0000000000003ad5         mov        edx, ebx
0000000000003ad7         shr        dl, 0x5
0000000000003ada         movzx      edx, dl
0000000000003add         mov        edx, dword [rsi+rdx*4]
0000000000003ae0         bt         edx, ebx
0000000000003ae3         jb         loc_3c33

                     loc_3ae9:
0000000000003ae9         test       r10b, r10b                                  ; CODE XREF=sub_3a80+83, sub_3b80+93
0000000000003aec         jne        loc_3c33

0000000000003af2         xor        eax, 0x1
0000000000003af5         add        rbp, 0x1
0000000000003af9         and        eax, r8d

                     loc_3afc:
0000000000003afc         test       al, al                                      ; CODE XREF=sub_3fd0+936
0000000000003afe         je         loc_3b20

0000000000003b00         cmp        r13, r15
0000000000003b03         jbe        loc_3b0a

0000000000003b05         mov        byte [r14+r15], 0x27

                     loc_3b0a:
0000000000003b0a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3a80+131
0000000000003b0e         cmp        r13, rax
0000000000003b11         jbe        loc_3b19

0000000000003b13         mov        byte [r14+r15+1], 0x27

                     loc_3b19:
0000000000003b19         add        r15, 0x2                                    ; CODE XREF=sub_3a80+145
0000000000003b1d         xor        r8d, r8d

                     loc_3b20:
0000000000003b20         cmp        r15, r13                                    ; CODE XREF=sub_3a80+126, sub_3b80+275, sub_3fd0+869
0000000000003b23         jae        loc_3b29

0000000000003b25         mov        byte [r14+r15], bl

                     loc_3b29:
0000000000003b29         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3a80+163
0000000000003b2e         add        r15, 0x1
0000000000003b32         mov        eax, 0x0
0000000000003b37         test       r12b, r12b
0000000000003b3a         cmove      edi, eax
0000000000003b3d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003b42         jmp        loc_3978
0000000000003b47         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3b50:
0000000000003b50         xor        r10d, r10d
0000000000003b53         mov        eax, dword [rsp+arg_0]
0000000000003b57         cmp        eax, 0x2
0000000000003b5a         je         loc_4118

0000000000003b60         cmp        eax, 0x5
0000000000003b63         je         loc_40d8

0000000000003b69         cmp        eax, 0x2
0000000000003b6c         mov        ebx, 0x3f
0000000000003b71         sete       dl
0000000000003b74         xor        r12d, r12d
0000000000003b77         xor        eax, eax
0000000000003b79         jmp        sub_3a80+56
                        ; endp
0000000000003b7e         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3b80:
0000000000003b80         xor        r10d, r10d
0000000000003b83         cmp        dword [rsp+arg_0], 0x2
0000000000003b88         je         loc_4090

0000000000003b8e         mov        byte [rsp+arg_74], r12b
0000000000003b93         xor        edx, edx
0000000000003b95         xor        eax, eax
0000000000003b97         mov        ebx, 0x27
0000000000003b9c         jmp        sub_3a80+56
                        ; endp
0000000000003ba1         nop        dword [rax]
0000000000003ba8         mov        edx, 0x9
0000000000003bad         mov        ebx, 0x74

                     loc_3bb2:
0000000000003bb2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3d40+10, sub_3e30+37, sub_3f70+53
0000000000003bb7         sete       al
0000000000003bba         and        al, byte [rsp+arg_7]
0000000000003bbe         jne        sub_3cf0+30

0000000000003bc4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3b80+114
0000000000003bc9         jne        loc_3c30

                     loc_3bcb:
0000000000003bcb         mov        ebx, edx                                    ; CODE XREF=sub_3ca0+18
0000000000003bcd         xor        r12d, r12d
0000000000003bd0         xor        eax, eax
                        ; endp

                     loc_3bd2:
0000000000003bd2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3a80+61, sub_3a80+69
0000000000003bd7         jne        loc_3acb

0000000000003bdd         jmp        loc_3ae9
0000000000003be2         nop        word [rax+rax]
0000000000003be8         mov        edx, 0x8
0000000000003bed         mov        ebx, 0x62
0000000000003bf2         jmp        sub_3b80+68
0000000000003bf4         nop        dword [rax]
0000000000003bf8         cmp        dword [rsp+8], 0x2
0000000000003bfd         je         sub_3fd0                                    ; sub_3fd0
0000000000003c03         cmp        byte [rsp+0xd], 0x0
0000000000003c08         je         sub_3e10+16

                     loc_3c0e:
0000000000003c0e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3e10+8
0000000000003c13         je         loc_3e20

0000000000003c19         cmp        qword [rsp+arg_10], 0x0
0000000000003c1f         jne        loc_3fdb

0000000000003c25         mov        ebx, 0x5c
0000000000003c2a         nop        word [rax+rax]
                        ; endp

                     loc_3c30:
0000000000003c30         xor        r12d, r12d                                  ; CODE XREF=sub_3b80+73, sub_3f70+29
                        ; endp

                     loc_3c33:
0000000000003c33         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3a80+99, sub_3a80+108
0000000000003c38         sete       dl
0000000000003c3b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003c40         mov        eax, edx
0000000000003c42         jne        loc_4498

0000000000003c48         mov        eax, r8d
0000000000003c4b         xor        eax, 0x1
0000000000003c4e         and        al, dl
0000000000003c50         je         loc_3c81

0000000000003c52         cmp        r13, r15
0000000000003c55         jbe        loc_3c5c

0000000000003c57         mov        byte [r14+r15], 0x27

                     loc_3c5c:
0000000000003c5c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3b80+213
0000000000003c60         cmp        r13, rdx
0000000000003c63         jbe        loc_3c6b

0000000000003c65         mov        byte [r14+r15+1], 0x24

                     loc_3c6b:
0000000000003c6b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3b80+227
0000000000003c6f         cmp        r13, rdx
0000000000003c72         jbe        loc_3c7a

0000000000003c74         mov        byte [r14+r15+2], 0x27

                     loc_3c7a:
0000000000003c7a         add        r15, 0x3                                    ; CODE XREF=sub_3b80+242
0000000000003c7e         mov        r8d, eax

                     loc_3c81:
0000000000003c81         cmp        r13, r15                                    ; CODE XREF=sub_3b80+208
0000000000003c84         jbe        loc_3c8b

0000000000003c86         mov        byte [r14+r15], 0x5c

                     loc_3c8b:
0000000000003c8b         add        r15, 0x1                                    ; CODE XREF=sub_3b80+260
0000000000003c8f         add        rbp, 0x1
0000000000003c93         jmp        loc_3b20
0000000000003c98         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3ca0:
0000000000003ca0         cmp        byte [rsp+arg_5], 0x0
0000000000003ca5         jne        loc_3e73

0000000000003cab         xor        edx, edx
0000000000003cad         test       byte [rsp+arg_70], 0x1
0000000000003cb2         je         loc_3bcb

0000000000003cb8         add        rbp, 0x1
0000000000003cbc         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003cc1         nop        dword [rax]
0000000000003cc8         cmp        dword [rsp+8], 0x2
0000000000003ccd         sete       dl
0000000000003cd0         xor        eax, eax
0000000000003cd2         jmp        sub_3a80+56
0000000000003cd7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3ce0:
0000000000003ce0         mov        edx, 0x7
0000000000003ce5         mov        ebx, 0x61
0000000000003cea         jmp        sub_3b80+68
                        ; endp
0000000000003cef         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3cf0:
0000000000003cf0         cmp        dword [rsp+8], 0x2
0000000000003cf5         sete       dl
                        ; endp

                     loc_3cf8:
0000000000003cf8         test       rbp, rbp                                    ; CODE XREF=sub_3a80+38, sub_3f10+35
0000000000003cfb         jne        loc_3aac

0000000000003d01         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3f40+43
0000000000003d06         and        al, dl
0000000000003d08         je         sub_3a80+56

0000000000003d0e         mov        rbp, r11
0000000000003d11         mov        dword [rsp+arg_0], 0x2
0000000000003d19         jmp        sub_3fd0+1097
                        ; endp
0000000000003d1e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3d20:
0000000000003d20         cmp        dword [rsp+arg_0], 0x2
0000000000003d25         sete       dl
0000000000003d28         xor        r12d, r12d
0000000000003d2b         jmp        sub_3cf0+17
                        ; endp
0000000000003d2d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3d30:
0000000000003d30         cmp        dword [rsp+arg_0], 0x2
0000000000003d35         mov        ebx, 0x20
0000000000003d3a         sete       dl
0000000000003d3d         jmp        sub_3cf0+17
                        ; endp
0000000000003d3f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3d40:
0000000000003d40         mov        edx, 0xd
0000000000003d45         mov        ebx, 0x72
0000000000003d4a         jmp        loc_3bb2
0000000000003d4f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3d50:
0000000000003d50         mov        edx, 0xc
0000000000003d55         mov        ebx, 0x66
0000000000003d5a         jmp        sub_3b80+68
                        ; endp
0000000000003d5f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3d60:
0000000000003d60         mov        edx, 0xb
0000000000003d65         mov        ebx, 0x76
0000000000003d6a         jmp        sub_3b80+68
                        ; endp
0000000000003d6f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3d70:
0000000000003d70         mov        edx, 0xa
0000000000003d75         mov        ebx, 0x6e
0000000000003d7a         jmp        sub_3b80+50
                        ; endp
0000000000003d7f         align      128

                     loc_3d80:
0000000000003d80         xor        r10d, r10d                                  ; CODE XREF=sub_3d70+135
0000000000003d83         nop        dword [rax+rax]

                     loc_3d88:
0000000000003d88         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000003d8e         jne        loc_4138

0000000000003d94         mov        qword [rsp+0xe8+var_B0], r11
0000000000003d99         mov        byte [rsp+0xe8+var_B8], r8b
0000000000003d9e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003da3         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003da8         mov        rcx, qword [rax]
0000000000003dab         movzx      edx, bl
0000000000003dae         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003db4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000003dba         mov        r11, qword [rsp+0xe8+var_B0]
0000000000003dbf         mov        edi, 0x1
0000000000003dc4         movzx      eax, word [rcx+rdx*2]
0000000000003dc8         and        ax, 0x4000
0000000000003dcc         setne      r12b
0000000000003dd0         sete       al
0000000000003dd3         and        al, byte [rsp+0xe8+var_DB]

                     loc_3dd7:
0000000000003dd7         test       al, al                                      ; CODE XREF=sub_3fd0+2221
0000000000003dd9         jne        loc_4771

0000000000003ddf         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003de4         sete       dl
0000000000003de7         jmp        loc_3ab8
0000000000003dec         align      16

                     loc_3df0:
0000000000003df0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000003df4         cmp        bl, 0x7e
0000000000003df7         ja         loc_3d80

0000000000003df9         lea        rcx, qword [switch_table_72e0+552]          ; 0x7508
0000000000003e00         movzx      edx, bl
0000000000003e03         movsxd     rax, dword [rcx+rdx*4]
0000000000003e07         add        rax, rcx
0000000000003e0a         jmp        rax
                        ; endp
0000000000003e0c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3e10:
0000000000003e10         xor        r10d, r10d
0000000000003e13         cmp        byte [rsp+arg_5], 0x0
0000000000003e18         jne        loc_3c0e

0000000000003e1e         nop

                     loc_3e20:
0000000000003e20         mov        edx, 0x5c                                   ; CODE XREF=sub_3b80+136, sub_3b80+147
0000000000003e25         mov        ebx, 0x5c
0000000000003e2a         jmp        sub_3b80+68
                        ; endp
0000000000003e2f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e30:
0000000000003e30         mov        edx, 0xc
0000000000003e35         xor        r10d, r10d
0000000000003e38         mov        ebx, 0x66
0000000000003e3d         jmp        sub_3b80+68
                        ; endp
0000000000003e42         nop        word [rax+rax]
0000000000003e48         mov        edx, 0xa
0000000000003e4d         xor        r10d, r10d
0000000000003e50         mov        ebx, 0x6e
0000000000003e55         jmp        sub_3b80+50
0000000000003e5a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e60:
0000000000003e60         mov        ebx, 0x61
0000000000003e65         jmp        sub_3b80+176
                        ; endp
0000000000003e6a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e70:
0000000000003e70         xor        r10d, r10d
                        ; endp

                     loc_3e73:
0000000000003e73         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3ca0+5
0000000000003e78         sete       dl
0000000000003e7b         cmp        byte [rsp+arg_7], 0x0
0000000000003e80         jne        loc_4a1a

0000000000003e86         mov        eax, r8d
0000000000003e89         mov        rcx, r15
0000000000003e8c         xor        eax, 0x1
0000000000003e8f         and        al, dl
0000000000003e91         je         loc_3ec0

0000000000003e93         cmp        r13, r15
0000000000003e96         jbe        loc_3e9d

0000000000003e98         mov        byte [r14+r15], 0x27

                     loc_3e9d:
0000000000003e9d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3e70+38
0000000000003ea1         cmp        r13, rcx
0000000000003ea4         jbe        loc_3eac

0000000000003ea6         mov        byte [r14+r15+1], 0x24

                     loc_3eac:
0000000000003eac         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3e70+52
0000000000003eb0         cmp        r13, rcx
0000000000003eb3         ja         loc_44e9

                     loc_3eb9:
0000000000003eb9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3fd0+1311
0000000000003ebd         mov        r8d, eax

                     loc_3ec0:
0000000000003ec0         cmp        r13, rcx                                    ; CODE XREF=sub_3e70+33
0000000000003ec3         jbe        loc_3eca

0000000000003ec5         mov        byte [r14+rcx], 0x5c

                     loc_3eca:
0000000000003eca         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3e70+83
0000000000003ecf         lea        r15, qword [rcx+1]
0000000000003ed3         je         loc_44d9

0000000000003ed9         lea        rax, qword [rbp+1]
0000000000003edd         cmp        rax, r11
0000000000003ee0         jae        loc_3efb

0000000000003ee2         mov        rax, qword [rsp+arg_8]
0000000000003ee7         movzx      eax, byte [rax+rbp+1]
0000000000003eec         mov        byte [rsp+arg_20], al
0000000000003ef0         sub        eax, 0x30
0000000000003ef3         cmp        al, 0x9
0000000000003ef5         jbe        loc_4729

                     loc_3efb:
0000000000003efb         mov        eax, r12d                                   ; CODE XREF=sub_3e70+112
0000000000003efe         mov        ebx, 0x30
0000000000003f03         xor        r12d, r12d
0000000000003f06         jmp        sub_3a80+56
                        ; endp
0000000000003f0b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3f10:
0000000000003f10         cmp        dword [rsp+arg_0], 0x2
0000000000003f15         mov        r12d, r10d
0000000000003f18         sete       dl
0000000000003f1b         xor        r10d, r10d
0000000000003f1e         xor        eax, eax
0000000000003f20         jmp        sub_3a80+56
                        ; endp
0000000000003f25         nop        dword [rax]
0000000000003f28         cmp        dword [rsp+8], 0x2
0000000000003f2d         sete       dl
0000000000003f30         xor        r10d, r10d
0000000000003f33         jmp        sub_3cf0+8
0000000000003f38         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f40:
0000000000003f40         cmp        dword [rsp+8], 0x2
0000000000003f45         sete       dl
0000000000003f48         xor        r10d, r10d
0000000000003f4b         xor        r12d, r12d
0000000000003f4e         jmp        sub_3cf0+17
                        ; endp
0000000000003f53         nop        dword [rax+rax]
0000000000003f58         cmp        dword [rsp+8], 0x2
0000000000003f5d         mov        r12d, r10d
0000000000003f60         mov        ebx, 0x20
0000000000003f65         sete       dl
0000000000003f68         xor        r10d, r10d
0000000000003f6b         jmp        sub_3cf0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f70:
0000000000003f70         mov        edx, 0xd
0000000000003f75         xor        r10d, r10d
0000000000003f78         mov        ebx, 0x72
0000000000003f7d         jmp        sub_3b80+50
                        ; endp
0000000000003f82         nop        word [rax+rax]
0000000000003f88         mov        ebx, 0x76
0000000000003f8d         jmp        sub_3b80+176
0000000000003f92         nop        word [rax+rax]
0000000000003f98         mov        edx, 0x9
0000000000003f9d         xor        r10d, r10d
0000000000003fa0         mov        ebx, 0x74
0000000000003fa5         jmp        sub_3b80+50
0000000000003faa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3fb0:
0000000000003fb0         mov        ebx, 0x62
0000000000003fb5         jmp        sub_3b80+176
                        ; endp
0000000000003fba         nop        word [rax+rax]

                     loc_3fc0:
0000000000003fc0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003fc3         jmp        loc_3a60
0000000000003fc8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3fd0:
0000000000003fd0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3b80+125
0000000000003fd5         jne        sub_3fd0+2416
                        ; endp

                     loc_3fdb:
0000000000003fdb         add        rbp, 0x1                                    ; CODE XREF=sub_3b80+159
0000000000003fdf         mov        eax, r8d
0000000000003fe2         xor        r12d, r12d
0000000000003fe5         mov        ebx, 0x5c
0000000000003fea         jmp        sub_3a80+124
                        ; endp
0000000000003fef         align      16

                     loc_3ff0:
0000000000003ff0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000003ff5         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003ffa         mov        r12d, r8d
0000000000003ffd         mov        rbp, r11
0000000000004000         sete       dl                                          ; DATA XREF=sub_3d70+88
0000000000004003         mov        eax, ebx
0000000000004005         test       r15, r15
0000000000004008         sete       cl
000000000000400b         and        eax, edx
000000000000400d         and        al, cl
000000000000400f         jne        loc_4a76

0000000000004015         mov        eax, ebx
0000000000004017         xor        eax, 0x1
000000000000401a         and        dl, al
000000000000401c         je         loc_498c

0000000000004022         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004027         je         loc_498a

000000000000402d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004032         jne        loc_4a2d

0000000000004038         test       r13, r13
000000000000403b         sete       al
000000000000403e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000004044         setne      dl
0000000000004047         and        al, dl
0000000000004049         je         loc_4a6c

000000000000404f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_4054:
0000000000004054         lea        rbx, qword [aLibs+29]                       ; 0x7285, CODE XREF=sub_3fd0+2781
000000000000405b         mov        byte [r14], 0x27
000000000000405f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004067         mov        r15d, 0x1
000000000000406d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004076         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000407b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004080         mov        byte [rsp+0xe8+var_6C], al
0000000000004084         jmp        loc_3963
0000000000004089         align      16

                     loc_4090:
0000000000004090         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3b80+8
0000000000004095         jne        sub_3fd0+2416

000000000000409b         test       r13, r13
000000000000409e         je         loc_44a0

00000000000040a4         xor        edx, edx
00000000000040a6         cmp        qword [rsp+arg_48], 0x0
00000000000040ac         jne        loc_44a0

                     loc_40b2:
00000000000040b2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3fd0+1284, sub_3fd0+2794
00000000000040b7         add        r15, 0x3
00000000000040bb         xor        eax, eax
00000000000040bd         mov        byte [rsp+arg_74], r12b
00000000000040c2         xor        r8d, r8d
00000000000040c5         mov        r13, rdx
00000000000040c8         mov        ebx, 0x27
00000000000040cd         jmp        sub_3a80+105
                        ; endp
00000000000040d2         align      8

                     loc_40d8:
00000000000040d8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3b50+19
00000000000040dd         je         loc_4100

00000000000040df         lea        rcx, qword [rbp+2]
00000000000040e3         cmp        rcx, r11
00000000000040e6         jae        loc_4100

00000000000040e8         mov        rax, qword [rsp+arg_8]
00000000000040ed         cmp        byte [rax+rbp+1], 0x3f
00000000000040f2         je         loc_4882

00000000000040f8         nop        dword [rax+rax]

                     loc_4100:
0000000000004100         xor        edx, edx                                    ; CODE XREF=sub_3fd0+269, sub_3fd0+278, sub_3fd0+2233, sub_3fd0+2253
0000000000004102         xor        r12d, r12d
0000000000004105         xor        eax, eax
0000000000004107         mov        ebx, 0x3f
000000000000410c         jmp        sub_3a80+56
                        ; endp
0000000000004111         align      8

                     loc_4118:
0000000000004118         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3b50+10
000000000000411d         jne        loc_4940

0000000000004123         xor        r12d, r12d
0000000000004126         xor        eax, eax
0000000000004128         mov        ebx, 0x3f
000000000000412d         jmp        sub_3a80+105
                        ; endp
0000000000004132         align      8

                     loc_4138:
0000000000004138         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3d70+30
0000000000004140         cmp        r11, 0xffffffffffffffff
0000000000004144         mov        qword [rsp+0xe8+var_48], 0x0
0000000000004150         mov        qword [rsp+0xe8+var_C0], rax
0000000000004155         jne        loc_4184

0000000000004157         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000415c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004161         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004166         mov        qword [rsp+0xe8+var_B8], r9
000000000000416b         call       j_strlen                                    ; strlen
0000000000004170         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000004176         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000417c         mov        r11, rax
000000000000417f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_4184:
0000000000004184         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3fd0+389
000000000000418c         xor        ecx, ecx
000000000000418e         mov        byte [rsp+0xe8+var_6A], bl
0000000000004192         mov        byte [rsp+0xe8+var_6B], r8b
0000000000004197         mov        rbx, rcx
000000000000419a         mov        qword [rsp+0xe8+var_60], r9
00000000000041a2         mov        qword [rsp+0xe8+var_B0], rax
00000000000041a7         mov        byte [rsp+0xe8+var_69], r10b
00000000000041ac         mov        qword [rsp+0xe8+var_68], r15
00000000000041b4         mov        qword [rsp+0xe8+var_A8], r14
00000000000041b9         mov        qword [rsp+0xe8+var_78], r13
00000000000041be         mov        qword [rsp+0xe8+var_B8], r11

                     loc_41c3:
00000000000041c3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3fd0+623
00000000000041c8         lea        r14, qword [rbp+rbx]
00000000000041cd         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000041d2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000041d7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000041dc         lea        r13, qword [rax+r14]
00000000000041e0         sub        rdx, r14
00000000000041e3         mov        rsi, r13
00000000000041e6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000041eb         test       rax, rax
00000000000041ee         mov        r15, rax
00000000000041f1         je         loc_4241

00000000000041f3         cmp        rax, 0xffffffffffffffff
00000000000041f7         je         loc_4815

00000000000041fd         cmp        rax, 0xfffffffffffffffe
0000000000004201         je         loc_47a1

0000000000004207         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000420c         sete       al
000000000000420f         and        al, byte [rsp+0xe8+var_D9]
0000000000004213         jne        loc_43b0

                     loc_4219:
0000000000004219         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3fd0+996, sub_3fd0+1031
0000000000004220         call       j_iswprint                                  ; iswprint
0000000000004225         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000422a         test       eax, eax
000000000000422c         mov        eax, 0x0
0000000000004231         cmove      r12d, eax
0000000000004235         add        rbx, r15
0000000000004238         call       j_mbsinit                                   ; mbsinit
000000000000423d         test       eax, eax
000000000000423f         je         loc_41c3

                     loc_4241:
0000000000004241         mov        edx, r12d                                   ; CODE XREF=sub_3fd0+545
0000000000004244         mov        rdi, rbx
0000000000004247         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000424d         xor        edx, 0x1
0000000000004250         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004255         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000425b         and        dl, byte [rsp+0xe8+var_DB]
000000000000425f         mov        r15, qword [rsp+0xe8+var_68]
0000000000004267         mov        r14, qword [rsp+0xe8+var_A8]
000000000000426c         mov        r13, qword [rsp+0xe8+var_78]
0000000000004271         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4276:
0000000000004276         cmp        rdi, 0x1                                    ; CODE XREF=sub_3fd0+2112, sub_3fd0+2168
000000000000427a         jbe        loc_487b

                     loc_4280:
0000000000004280         mov        rcx, rdi                                    ; CODE XREF=sub_3fd0+1961
0000000000004283         xor        esi, esi
0000000000004285         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000428b         add        rcx, rbp
000000000000428e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004293         jmp        loc_434e
0000000000004298         align      32

                     loc_42a0:
00000000000042a0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3fd0+896
00000000000042a5         sete       al
00000000000042a8         test       r9b, r9b
00000000000042ab         jne        loc_4760

00000000000042b1         mov        esi, r8d
00000000000042b4         xor        esi, 0x1
00000000000042b7         and        al, sil
00000000000042ba         je         loc_42eb

00000000000042bc         cmp        r13, r15
00000000000042bf         jbe        loc_42c6

00000000000042c1         mov        byte [r14+r15], 0x27

                     loc_42c6:
00000000000042c6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3fd0+751
00000000000042ca         cmp        r13, rsi
00000000000042cd         jbe        loc_42d5

00000000000042cf         mov        byte [r14+r15+1], 0x24

                     loc_42d5:
00000000000042d5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3fd0+765
00000000000042d9         cmp        r13, rsi
00000000000042dc         jbe        loc_42e4

00000000000042de         mov        byte [r14+r15+2], 0x27

                     loc_42e4:
00000000000042e4         add        r15, 0x3                                    ; CODE XREF=sub_3fd0+780
00000000000042e8         mov        r8d, eax

                     loc_42eb:
00000000000042eb         cmp        r13, r15                                    ; CODE XREF=sub_3fd0+746
00000000000042ee         jbe        loc_42f5

00000000000042f0         mov        byte [r14+r15], 0x5c

                     loc_42f5:
00000000000042f5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3fd0+798
00000000000042f9         cmp        r13, rax
00000000000042fc         jbe        loc_430b

00000000000042fe         mov        eax, ebx
0000000000004300         shr        al, 0x6
0000000000004303         add        eax, 0x30
0000000000004306         mov        byte [r14+r15+1], al

                     loc_430b:
000000000000430b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3fd0+812
000000000000430f         cmp        r13, rax
0000000000004312         jbe        loc_4324

0000000000004314         mov        eax, ebx
0000000000004316         shr        al, 0x3
0000000000004319         and        eax, 0x7
000000000000431c         add        eax, 0x30
000000000000431f         mov        byte [r14+r15+2], al

                     loc_4324:
0000000000004324         and        ebx, 0x7                                    ; CODE XREF=sub_3fd0+834
0000000000004327         add        rbp, 0x1
000000000000432b         add        r15, 0x3
000000000000432f         add        ebx, 0x30
0000000000004332         cmp        rbp, rcx
0000000000004335         jae        loc_3b20

000000000000433b         mov        esi, edx

                     loc_433d:
000000000000433d         cmp        r13, r15                                    ; CODE XREF=sub_3fd0+985, sub_3fd0+1969
0000000000004340         jbe        loc_4346

0000000000004342         mov        byte [r14+r15], bl

                     loc_4346:
0000000000004346         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3fd0+880
000000000000434a         add        r15, 0x1

                     loc_434e:
000000000000434e         test       dl, dl                                      ; CODE XREF=sub_3fd0+707
0000000000004350         jne        loc_42a0

0000000000004356         mov        eax, esi
0000000000004358         xor        eax, 0x1
000000000000435b         and        eax, r8d
000000000000435e         test       r10b, r10b
0000000000004361         je         loc_4371

0000000000004363         cmp        r13, r15
0000000000004366         jbe        loc_436d

0000000000004368         mov        byte [r14+r15], 0x5c

                     loc_436d:
000000000000436d         add        r15, 0x1                                    ; CODE XREF=sub_3fd0+918

                     loc_4371:
0000000000004371         add        rbp, 0x1                                    ; CODE XREF=sub_3fd0+913
0000000000004375         cmp        rbp, rcx
0000000000004378         jae        loc_3afc

000000000000437e         test       al, al
0000000000004380         je         loc_477e

0000000000004386         cmp        r13, r15
0000000000004389         jbe        loc_4390

000000000000438b         mov        byte [r14+r15], 0x27

                     loc_4390:
0000000000004390         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3fd0+953
0000000000004394         cmp        r13, rax
0000000000004397         jbe        loc_439f

0000000000004399         mov        byte [r14+r15+1], 0x27

                     loc_439f:
000000000000439f         add        r15, 0x2                                    ; CODE XREF=sub_3fd0+967
00000000000043a3         xor        r10d, r10d
00000000000043a6         xor        r8d, r8d
00000000000043a9         jmp        loc_433d
00000000000043ab         align      16

                     loc_43b0:
00000000000043b0         cmp        r15, 0x1                                    ; CODE XREF=sub_3fd0+579
00000000000043b4         je         loc_4219

00000000000043ba         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000043bf         lea        rcx, qword [rdi+r15]
00000000000043c3         lea        rdx, qword [rdi+r14+1]
00000000000043c8         lea        r8, qword [rcx+r14]
00000000000043cc         jmp        loc_43dd
00000000000043ce         align      16

                     loc_43d0:
00000000000043d0         add        rdx, 0x1                                    ; CODE XREF=sub_3fd0+1046, sub_3fd0+1072
00000000000043d4         cmp        r8, rdx
00000000000043d7         je         loc_4219

                     loc_43dd:
00000000000043dd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3fd0+1020
00000000000043e0         sub        ecx, 0x5b
00000000000043e3         cmp        cl, 0x21
00000000000043e6         ja         loc_43d0

00000000000043e8         mov        esi, 0x1
00000000000043ed         shl        rsi, cl
00000000000043f0         mov        rcx, rsi
00000000000043f3         movabs     rsi, 0x20000002b
00000000000043fd         test       rcx, rsi
0000000000004400         je         loc_43d0

0000000000004402         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004407         mov        r13, qword [rsp+0xe8+var_78]
000000000000440c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004411         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4419:
0000000000004419         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3fd0+1227, sub_3fd0+1948, sub_3fd0+2585, sub_3fd0+2734
000000000000441e         je         loc_4430

0000000000004420         test       al, al
0000000000004422         mov        eax, 0x4
0000000000004427         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000442c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4430:
0000000000004430         sub        rsp, 0x8                                    ; CODE XREF=sub_3fd0+1102
0000000000004434         mov        rcx, rbp
0000000000004437         mov        rsi, r13
000000000000443a         push       qword [rsp+0xf0+var_88]
000000000000443e         push       qword [rsp+0xf8+var_80]
0000000000004442         mov        rdi, r14
0000000000004445         push       0x0
0000000000004447         mov        r9d, dword [rsp+0x108+var_70]
000000000000444f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004454         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004459         and        r9d, 0xfffffffd
000000000000445d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004462         add        rsp, 0x20
0000000000004466         mov        r15, rax

                     loc_4469:
0000000000004469         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3fd0+2549, sub_3fd0+2560, sub_3fd0+2711
0000000000004471         xor        rbx, qword [fs:0x28]
000000000000447a         mov        rax, r15
000000000000447d         jne        loc_4a83

0000000000004483         add        rsp, 0xb8
000000000000448a         pop        rbx
000000000000448b         pop        rbp
000000000000448c         pop        r12
000000000000448e         pop        r13
0000000000004490         pop        r14
0000000000004492         pop        r15
0000000000004494         ret
                        ; endp
0000000000004495         align      8

                     loc_4498:
0000000000004498         mov        rbp, r11                                    ; CODE XREF=sub_3b80+194
000000000000449b         jmp        loc_4419

                     loc_44a0:
00000000000044a0         cmp        r13, r15                                    ; CODE XREF=sub_3fd0+206, sub_3fd0+220
00000000000044a3         jbe        loc_44aa

00000000000044a5         mov        byte [r14+r15], 0x27

                     loc_44aa:
00000000000044aa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3fd0+1235
00000000000044ae         cmp        r13, rax
00000000000044b1         jbe        loc_44b9

00000000000044b3         mov        byte [r14+r15+1], 0x5c

                     loc_44b9:
00000000000044b9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3fd0+1249
00000000000044bd         cmp        r13, rax
00000000000044c0         jbe        loc_4ab2

00000000000044c6         mov        rdx, r13
00000000000044c9         mov        byte [r14+r15+2], 0x27
00000000000044cf         mov        r13, qword [rsp+arg_48]
00000000000044d4         jmp        loc_40b2

                     loc_44d9:
00000000000044d9         mov        eax, r12d                                   ; CODE XREF=sub_3e70+99
00000000000044dc         mov        ebx, 0x30
00000000000044e1         xor        r12d, r12d
00000000000044e4         jmp        sub_3a80+105
                        ; endp

                     loc_44e9:
00000000000044e9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3e70+67
00000000000044ef         jmp        loc_3eb9

                     loc_44f4:
00000000000044f4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000044f6         jne        loc_3923

00000000000044fc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4501:
0000000000004501         test       r13, r13                                    ; CODE XREF=sub_3fd0+2749
0000000000004504         jne        loc_4a9a

000000000000450a         lea        rax, qword [aLibs+29]                       ; 0x7285
0000000000004511         mov        qword [rsp+0xe8+var_98], 0x0
000000000000451a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000451f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004524         xor        r12d, r12d
0000000000004527         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000452c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004535         mov        qword [rsp+0xe8+var_A0], rax
000000000000453a         mov        r15d, 0x1
0000000000004540         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004548         jmp        loc_3963
000000000000454d         align      16

                     loc_4550:
0000000000004550         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004552         jne        loc_494d

0000000000004558         test       r13, r13
000000000000455b         je         loc_4786

0000000000004561         mov        byte [r14], 0x22
0000000000004565         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000456a         xor        r12d, r12d
000000000000456d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004572         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_457b:
000000000000457b         lea        rax, qword [aLibs+27]                       ; 0x7283, CODE XREF=sub_3fd0+1996
0000000000004582         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004587         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000458c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004595         mov        r15d, 0x1
000000000000459b         mov        qword [rsp+0xe8+var_A0], rax
00000000000045a0         jmp        loc_3963

                     loc_45a5:
00000000000045a5         lea        rax, qword [aLibs+27]                       ; case 6, 0x7283, CODE XREF=quotearg_buffer_restyled+145
00000000000045ac         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000045b1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000045b6         xor        r12d, r12d
00000000000045b9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000045c2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000045c7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000045cc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000045d5         xor        r15d, r15d
00000000000045d8         mov        qword [rsp+0xe8+var_A0], rax
00000000000045dd         mov        dword [rsp+0xe8+var_E0], 0x5
00000000000045e5         jmp        loc_3963

                     loc_45ea:
00000000000045ea         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
00000000000045ef         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000045f4         xor        r12d, r12d
00000000000045f7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004600         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004605         xor        r15d, r15d
0000000000004608         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000460d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004616         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000461f         jmp        loc_3963

                     loc_4624:
0000000000004624         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004629         je         loc_4681

000000000000462b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x7287
0000000000004632         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004634         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004639         call       j_dcgettext                                 ; dcgettext
000000000000463e         mov        rcx, rax
0000000000004641         mov        qword [rsp+0xe8+var_80], rax
0000000000004646         lea        rax, qword [aLibs+31]                       ; 0x7287
000000000000464d         cmp        rcx, rax
0000000000004650         je         loc_49ee

                     loc_4656:
0000000000004656         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x7285, CODE XREF=sub_3fd0+2607
000000000000465d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000465f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004664         call       j_dcgettext                                 ; dcgettext
0000000000004669         mov        rcx, rax
000000000000466c         mov        qword [rsp+0xe8+var_88], rax
0000000000004671         lea        rax, qword [aLibs+29]                       ; 0x7285
0000000000004678         cmp        rcx, rax
000000000000467b         je         loc_4a04

                     loc_4681:
0000000000004681         xor        r15d, r15d                                  ; CODE XREF=sub_3fd0+1625, sub_3fd0+2629
0000000000004684         test       ebx, ebx
0000000000004686         je         loc_484d

                     loc_468c:
000000000000468c         test       ebx, ebx                                    ; CODE XREF=sub_3fd0+2183, sub_3fd0+2214
000000000000468e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000004693         setne      byte [rsp+0xe8+var_D9]
0000000000004698         xor        r12d, r12d
000000000000469b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000469e         call       j_strlen                                    ; strlen
00000000000046a3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000046a8         mov        qword [rsp+0xe8+var_D0], rax
00000000000046ad         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000046b2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000046b7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000046c0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000046c5         jmp        loc_3963

                     loc_46ca:
00000000000046ca         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000046cf         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000046d4         xor        r12d, r12d
00000000000046d7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000046e0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000046e5         xor        r15d, r15d
00000000000046e8         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000046ed         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000046f6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000046ff         jmp        loc_3963

                     loc_4704:
0000000000004704         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000004709         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000470e         xor        r12d, r12d
0000000000004711         mov        qword [rsp+0xe8+var_98], 0x0
000000000000471a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000471f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004724         jmp        loc_3943

                     loc_4729:
0000000000004729         cmp        r13, r15                                    ; CODE XREF=sub_3e70+133
000000000000472c         jbe        loc_4733

000000000000472e         mov        byte [r14+r15], 0x30

                     loc_4733:
0000000000004733         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3fd0+1884
0000000000004737         cmp        r13, rax
000000000000473a         jbe        loc_4742

000000000000473c         mov        byte [r14+rcx+2], 0x30

                     loc_4742:
0000000000004742         mov        eax, r12d                                   ; CODE XREF=sub_3fd0+1898
0000000000004745         lea        r15, qword [rcx+3]
0000000000004749         xor        r12d, r12d
000000000000474c         mov        ebx, 0x30
0000000000004751         jmp        sub_3a80+56
                        ; endp
0000000000004756         align      32

                     loc_4760:
0000000000004760         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3fd0+731
0000000000004765         mov        rbp, r11
0000000000004768         mov        byte [rsp+0xe8+var_DB], bl
000000000000476c         jmp        loc_4419

                     loc_4771:
0000000000004771         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3d70+105
0000000000004776         xor        r12d, r12d
0000000000004779         jmp        loc_4280

                     loc_477e:
000000000000477e         xor        r10d, r10d                                  ; CODE XREF=sub_3fd0+944
0000000000004781         jmp        loc_433d

                     loc_4786:
0000000000004786         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3fd0+1419
000000000000478f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004794         xor        r12d, r12d
0000000000004797         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000479c         jmp        loc_457b

                     loc_47a1:
00000000000047a1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3fd0+561
00000000000047a6         mov        rsi, r14
00000000000047a9         mov        rcx, r13
00000000000047ac         mov        rax, rbx
00000000000047af         mov        rdi, rbx
00000000000047b2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000047b8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000047bd         mov        r9, qword [rsp+0xe8+var_60]
00000000000047c5         cmp        rsi, r11
00000000000047c8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000047ce         mov        r15, qword [rsp+0xe8+var_68]
00000000000047d6         mov        r14, qword [rsp+0xe8+var_A8]
00000000000047db         mov        r13, qword [rsp+0xe8+var_78]
00000000000047e0         jae        loc_4808

00000000000047e2         cmp        byte [rcx], 0x0
00000000000047e5         jne        loc_47f7

00000000000047e7         jmp        loc_4808
00000000000047e9         align      16

                     loc_47f0:
00000000000047f0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3fd0+2099
00000000000047f5         je         loc_4805

                     loc_47f7:
00000000000047f7         add        rax, 0x1                                    ; CODE XREF=sub_3fd0+2069
00000000000047fb         lea        rdx, qword [rbp+rax]
0000000000004800         cmp        r11, rdx
0000000000004803         ja         loc_47f0

                     loc_4805:
0000000000004805         mov        rdi, rax                                    ; CODE XREF=sub_3fd0+2085

                     loc_4808:
0000000000004808         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3fd0+2064, sub_3fd0+2071
000000000000480d         xor        r12d, r12d
0000000000004810         jmp        loc_4276

                     loc_4815:
0000000000004815         mov        rdi, rbx                                    ; CODE XREF=sub_3fd0+551
0000000000004818         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000481e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004823         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004829         mov        r15, qword [rsp+0xe8+var_68]
0000000000004831         xor        r12d, r12d
0000000000004834         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004839         mov        r13, qword [rsp+0xe8+var_78]
000000000000483e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000004843         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000004848         jmp        loc_4276

                     loc_484d:
000000000000484d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3fd0+1718
0000000000004852         movzx      eax, byte [rdx]
0000000000004855         test       al, al
0000000000004857         je         loc_468c

000000000000485d         nop        dword [rax]

                     loc_4860:
0000000000004860         cmp        r13, r15                                    ; CODE XREF=sub_3fd0+2212
0000000000004863         jbe        loc_4869

0000000000004865         mov        byte [r14+r15], al

                     loc_4869:
0000000000004869         add        r15, 0x1                                    ; CODE XREF=sub_3fd0+2195
000000000000486d         movzx      eax, byte [rdx+r15]
0000000000004872         test       al, al
0000000000004874         jne        loc_4860

0000000000004876         jmp        loc_468c

                     loc_487b:
000000000000487b         mov        eax, edx                                    ; CODE XREF=sub_3fd0+682
000000000000487d         jmp        loc_3dd7

                     loc_4882:
0000000000004882         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3fd0+290
0000000000004886         cmp        bl, 0x3e
0000000000004889         ja         loc_4100

000000000000488f         movabs     rax, 0x7000a38200000000
0000000000004899         bt         rax, rbx
000000000000489d         jae        loc_4100

00000000000048a3         cmp        byte [rsp+arg_7], 0x0
00000000000048a8         jne        loc_4a92

00000000000048ae         cmp        r13, r15
00000000000048b1         jbe        loc_48b8

00000000000048b3         mov        byte [r14+r15], 0x3f

                     loc_48b8:
00000000000048b8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3fd0+2273
00000000000048bc         cmp        r13, rax
00000000000048bf         jbe        loc_48c7

00000000000048c1         mov        byte [r14+r15+1], 0x22

                     loc_48c7:
00000000000048c7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3fd0+2287
00000000000048cb         cmp        r13, rax
00000000000048ce         jbe        loc_48d6

00000000000048d0         mov        byte [r14+r15+2], 0x22

                     loc_48d6:
00000000000048d6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3fd0+2302
00000000000048da         cmp        r13, rax
00000000000048dd         jbe        loc_48e5

00000000000048df         mov        byte [r14+r15+3], 0x3f

                     loc_48e5:
00000000000048e5         add        r15, 0x4                                    ; CODE XREF=sub_3fd0+2317
00000000000048e9         xor        edx, edx
00000000000048eb         xor        r12d, r12d
00000000000048ee         xor        eax, eax
00000000000048f0         mov        rbp, rcx
00000000000048f3         jmp        sub_3a80+56
                        ; endp

                     loc_48f8:
00000000000048f8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
00000000000048fa         je         loc_4a88

0000000000004900         lea        rax, qword [aLibs+29]                       ; 0x7285
0000000000004907         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000490c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004911         xor        r12d, r12d
0000000000004914         mov        qword [rsp+0xe8+var_98], 0x0
000000000000491d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004922         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004927         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004930         xor        r15d, r15d
0000000000004933         mov        qword [rsp+0xe8+var_A0], rax
0000000000004938         jmp        loc_3963
000000000000493d         align      64

                     loc_4940:
0000000000004940         mov        rbp, r11                                    ; CODE XREF=sub_3fd0+333
0000000000004943         movzx      eax, byte [rsp+arg_7]
0000000000004948         jmp        sub_3fd0+1097
                        ; endp

                     loc_494d:
000000000000494d         lea        rax, qword [aLibs+27]                       ; 0x7283, CODE XREF=sub_3fd0+1410
0000000000004954         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004959         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000495e         xor        r12d, r12d
0000000000004961         mov        qword [rsp+0xe8+var_98], 0x0
000000000000496a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000496f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004974         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000497d         xor        r15d, r15d
0000000000004980         mov        qword [rsp+0xe8+var_A0], rax
0000000000004985         jmp        loc_3963

                     loc_498a:
000000000000498a         mov        eax, edx                                    ; CODE XREF=sub_3fd0+87

                     loc_498c:
000000000000498c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3fd0+76, sub_3fd0+2721
0000000000004991         test       rbx, rbx
0000000000004994         je         loc_49c2

0000000000004996         test       al, al
0000000000004998         je         loc_49c2

000000000000499a         movzx      ecx, byte [rbx]
000000000000499d         mov        rax, rbx
00000000000049a0         test       cl, cl
00000000000049a2         je         loc_49c2

00000000000049a4         mov        rdx, r15
00000000000049a7         sub        rax, r15

                     loc_49aa:
00000000000049aa         cmp        r13, rdx                                    ; CODE XREF=sub_3fd0+2541
00000000000049ad         jbe        loc_49b3

00000000000049af         mov        byte [r14+rdx], cl

                     loc_49b3:
00000000000049b3         add        rdx, 0x1                                    ; CODE XREF=sub_3fd0+2525
00000000000049b7         movzx      ecx, byte [rax+rdx]
00000000000049bb         test       cl, cl
00000000000049bd         jne        loc_49aa

00000000000049bf         mov        r15, rdx

                     loc_49c2:
00000000000049c2         cmp        r13, r15                                    ; CODE XREF=sub_3fd0+2500, sub_3fd0+2504, sub_3fd0+2514
00000000000049c5         jbe        loc_4469

00000000000049cb         mov        byte [r14+r15], 0x0
00000000000049d0         jmp        loc_4469

                     loc_49d5:
00000000000049d5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
00000000000049da         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000049df         mov        rbp, r11
00000000000049e2         sete       al
00000000000049e5         mov        byte [rsp+0xe8+var_DB], bl
00000000000049e9         jmp        loc_4419

                     loc_49ee:
00000000000049ee         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3fd0+1664
00000000000049f2         mov        rdi, rcx
00000000000049f5         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000049fa         mov        qword [rsp+0xe8+var_80], rax
00000000000049ff         jmp        loc_4656

                     loc_4a04:
0000000000004a04         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3fd0+1707
0000000000004a08         mov        rdi, rcx
0000000000004a0b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004a10         mov        qword [rsp+0xe8+var_88], rax
0000000000004a15         jmp        loc_4681

                     loc_4a1a:
0000000000004a1a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3e70+16
0000000000004a1f         mov        rbp, r11
0000000000004a22         mov        eax, edx
0000000000004a24         mov        byte [rsp+arg_5], bl
0000000000004a28         jmp        sub_3fd0+1097
                        ; endp

                     loc_4a2d:
0000000000004a2d         sub        rsp, 0x8                                    ; CODE XREF=sub_3fd0+98
0000000000004a31         mov        r8d, 0x5
0000000000004a37         mov        rcx, r11
0000000000004a3a         push       qword [rsp+0xf0+var_88]
0000000000004a3e         push       qword [rsp+0xf8+var_80]
0000000000004a42         mov        rdi, r14
0000000000004a45         push       qword [rsp+0x100+var_C8]
0000000000004a49         mov        r9d, dword [rsp+0x108+var_70]
0000000000004a51         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004a56         mov        rsi, qword [rsp+0x108+var_98]
0000000000004a5b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004a60         add        rsp, 0x20
0000000000004a64         mov        r15, rax
0000000000004a67         jmp        loc_4469

                     loc_4a6c:
0000000000004a6c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3fd0+121
0000000000004a71         jmp        loc_498c

                     loc_4a76:
0000000000004a76         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3fd0+63
0000000000004a7e         jmp        loc_4419

                     loc_4a83:
0000000000004a83         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3fd0+1197
                        ; endp

                     loc_4a88:
0000000000004a88         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3fd0+2346
0000000000004a8d         jmp        loc_4501

                     loc_4a92:
0000000000004a92         mov        rbp, r11                                    ; CODE XREF=sub_3fd0+2264
0000000000004a95         jmp        sub_3fd0+1120
                        ; endp

                     loc_4a9a:
0000000000004a9a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3fd0+1332
0000000000004a9f         xor        eax, eax
0000000000004aa1         xor        r12d, r12d
0000000000004aa4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004aad         jmp        loc_4054

                     loc_4ab2:
0000000000004ab2         mov        rdx, r13                                    ; CODE XREF=sub_3fd0+1264
0000000000004ab5         mov        r13, qword [rsp+arg_48]
0000000000004aba         jmp        loc_40b2

                     loc_4abf:
0000000000004abf         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000004ac4         align      16                                          ; End of unwind block (FDE at 0x8540)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000004ad0         push       r15                                         ; Begin of unwind block (FDE at 0x85b8), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000004ad2         push       r14
0000000000004ad4         movsxd     r15, edi
0000000000004ad7         push       r13
0000000000004ad9         push       r12
0000000000004adb         mov        r14, rdx
0000000000004ade         push       rbp
0000000000004adf         push       rbx
0000000000004ae0         mov        rbp, rcx
0000000000004ae3         sub        rsp, 0x28
0000000000004ae7         mov        qword [rsp+0x58+var_50], rsi
0000000000004aec         call       j___errno_location                          ; __errno_location
0000000000004af1         mov        r13, rax
0000000000004af4         mov        eax, dword [rax]
0000000000004af6         test       r15d, r15d
0000000000004af9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004b00         mov        dword [rsp+0x58+var_40], eax
0000000000004b04         js         loc_4c71

0000000000004b0a         cmp        dword [nslots], r15d                        ; nslots
0000000000004b11         jg         loc_4b75

0000000000004b13         cmp        r15d, 0x7fffffff
0000000000004b1a         je         loc_4c76

0000000000004b20         lea        r12d, dword [r15+1]
0000000000004b24         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000004b2b         movsxd     rsi, r12d
0000000000004b2e         shl        rsi, 0x4
0000000000004b32         cmp        rbx, rax
0000000000004b35         je         loc_4c50

0000000000004b3b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000004b3e         call       xrealloc                                    ; xrealloc
0000000000004b43         mov        rbx, rax
0000000000004b46         mov        qword [slotvec], rax                        ; slotvec

                     loc_4b4d:
0000000000004b4d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004b54         mov        edx, r12d
0000000000004b57         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004b59         sub        edx, edi
0000000000004b5b         shl        rdi, 0x4
0000000000004b5f         movsxd     rdx, edx
0000000000004b62         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004b65         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004b69         call       j_memset                                    ; memset
0000000000004b6e         mov        dword [nslots], r12d                        ; nslots

                     loc_4b75:
0000000000004b75         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004b78         shl        r15, 0x4
0000000000004b7c         sub        rsp, 0x8
0000000000004b80         add        rbx, r15
0000000000004b83         lea        r15, qword [rbp+8]
0000000000004b87         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004b8b         mov        r11, qword [rbx]
0000000000004b8e         mov        r12, qword [rbx+8]
0000000000004b92         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004b95         or         eax, 0x1
0000000000004b98         mov        dword [rsp+0x60+var_3C], eax
0000000000004b9c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004b9f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004ba2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004ba5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004ba7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000004baa         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004baf         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004bb2         mov        qword [rsp+0x78+var_48], r11
0000000000004bb7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004bbc         add        rsp, 0x20
0000000000004bc0         mov        r11, qword [rsp+0x58+var_48]
0000000000004bc5         cmp        r11, rax
0000000000004bc8         ja         loc_4c31

0000000000004bca         lea        rsi, qword [rax+1]
0000000000004bce         lea        rax, qword [slot0]                          ; slot0
0000000000004bd5         cmp        r12, rax
0000000000004bd8         mov        qword [rbx], rsi
0000000000004bdb         je         loc_4bef

0000000000004bdd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004be0         mov        qword [rsp+0x58+var_48], rsi
0000000000004be5         call       j_free                                      ; free
0000000000004bea         mov        rsi, qword [rsp+0x58+var_48]

                     loc_4bef:
0000000000004bef         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004bf2         mov        qword [rsp+0x58+var_48], rsi
0000000000004bf7         call       xmalloc                                     ; xmalloc
0000000000004bfc         sub        rsp, 0x8
0000000000004c00         mov        qword [rbx+8], rax
0000000000004c04         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004c08         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004c0b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004c0e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004c11         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004c13         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004c18         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004c1b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004c20         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004c25         mov        r12, rax
0000000000004c28         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004c2d         add        rsp, 0x20

                     loc_4c31:
0000000000004c31         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004c35         mov        dword [r13], eax
0000000000004c39         add        rsp, 0x28
0000000000004c3d         mov        rax, r12
0000000000004c40         pop        rbx
0000000000004c41         pop        rbp
0000000000004c42         pop        r12
0000000000004c44         pop        r13
0000000000004c46         pop        r14
0000000000004c48         pop        r15
0000000000004c4a         ret
                        ; endp
0000000000004c4b         align      16

                     loc_4c50:
0000000000004c50         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004c52         call       xrealloc                                    ; xrealloc
0000000000004c57         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000004c5f         mov        rbx, rax
0000000000004c62         mov        qword [slotvec], rax                        ; slotvec
0000000000004c69         movups     xmmword [rax], xmm0
0000000000004c6c         jmp        loc_4b4d

                     loc_4c71:
0000000000004c71         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4c76:
0000000000004c76         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4c7b:
0000000000004c7b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x85b8)
                     clone_quoting_options:
0000000000004c80         push       r12                                         ; Begin of unwind block (FDE at 0x8624)
0000000000004c82         push       rbp
0000000000004c83         push       rbx
0000000000004c84         mov        rbx, rdi
0000000000004c87         call       j___errno_location                          ; __errno_location
0000000000004c8c         mov        r12d, dword [rax]
0000000000004c8f         mov        rbp, rax
0000000000004c92         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004c99         test       rbx, rbx
0000000000004c9c         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000004ca1         cmove      rbx, rax
0000000000004ca5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000004ca8         call       xmemdup                                     ; xmemdup
0000000000004cad         mov        dword [rbp], r12d
0000000000004cb1         pop        rbx
0000000000004cb2         pop        rbp
0000000000004cb3         pop        r12
0000000000004cb5         ret
                        ; endp
0000000000004cb6         align      64                                          ; End of unwind block (FDE at 0x8624)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004cc0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8650), default_quoting_options
0000000000004cc7         test       rdi, rdi
0000000000004cca         cmove      rdi, rax
0000000000004cce         mov        eax, dword [rdi]
0000000000004cd0         ret
                        ; endp
0000000000004cd1         align      32                                          ; End of unwind block (FDE at 0x8650)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004ce0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8664), default_quoting_options
0000000000004ce7         test       rdi, rdi
0000000000004cea         cmove      rdi, rax
0000000000004cee         mov        dword [rdi], esi
0000000000004cf0         ret
                        ; endp
0000000000004cf1         align      256                                         ; End of unwind block (FDE at 0x8664)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004d00         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8678), default_quoting_options
0000000000004d07         test       rdi, rdi
0000000000004d0a         mov        ecx, esi
0000000000004d0c         cmove      rdi, rax
0000000000004d10         mov        eax, esi
0000000000004d12         and        ecx, 0x1f
0000000000004d15         shr        al, 0x5
0000000000004d18         movzx      eax, al
0000000000004d1b         lea        rdi, qword [rdi+rax*4+8]
0000000000004d20         mov        esi, dword [rdi]
0000000000004d22         mov        eax, esi
0000000000004d24         shr        eax, cl
0000000000004d26         xor        edx, eax
0000000000004d28         and        eax, 0x1
0000000000004d2b         and        edx, 0x1
0000000000004d2e         shl        edx, cl
0000000000004d30         xor        edx, esi
0000000000004d32         mov        dword [rdi], edx
0000000000004d34         ret
                        ; endp
0000000000004d35         align      64                                          ; End of unwind block (FDE at 0x8678)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004d40         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x868c), default_quoting_options
0000000000004d47         test       rdi, rdi
0000000000004d4a         cmove      rdi, rax
0000000000004d4e         mov        eax, dword [rdi+4]
0000000000004d51         mov        dword [rdi+4], esi
0000000000004d54         ret
                        ; endp
0000000000004d55         align      32                                          ; End of unwind block (FDE at 0x868c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004d60         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x86a0), default_quoting_options
0000000000004d67         test       rdi, rdi
0000000000004d6a         cmove      rdi, rax
0000000000004d6e         test       rsi, rsi
0000000000004d71         mov        dword [rdi], 0xa
0000000000004d77         je         loc_4d87

0000000000004d79         test       rdx, rdx
0000000000004d7c         je         loc_4d87

0000000000004d7e         mov        qword [rdi+0x28], rsi
0000000000004d82         mov        qword [rdi+0x30], rdx
0000000000004d86         ret
                        ; endp

                     loc_4d87:
0000000000004d87         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000004d8b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004d90         push       r15                                         ; End of unwind block (FDE at 0x86a0), Begin of unwind block (FDE at 0x86b4)
0000000000004d92         push       r14
0000000000004d94         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004d9b         push       r13
0000000000004d9d         push       r12
0000000000004d9f         mov        r13, rdi
0000000000004da2         push       rbp
0000000000004da3         push       rbx
0000000000004da4         mov        rbx, r8
0000000000004da7         mov        r14, rsi
0000000000004daa         mov        r15, rdx
0000000000004dad         sub        rsp, 0x18
0000000000004db1         test       r8, r8
0000000000004db4         cmove      rbx, rax
0000000000004db8         mov        qword [rsp+0x48+var_40], rcx
0000000000004dbd         call       j___errno_location                          ; __errno_location
0000000000004dc2         mov        r12d, dword [rax]
0000000000004dc5         mov        rbp, rax
0000000000004dc8         lea        rax, qword [rbx+8]
0000000000004dcc         sub        rsp, 0x8
0000000000004dd0         mov        r9d, dword [rbx+4]
0000000000004dd4         push       qword [rbx+0x30]
0000000000004dd7         mov        r8d, dword [rbx]
0000000000004dda         push       qword [rbx+0x28]
0000000000004ddd         mov        rdx, r15
0000000000004de0         push       rax
0000000000004de1         mov        rcx, qword [rsp+0x68+var_40]
0000000000004de6         mov        rsi, r14
0000000000004de9         mov        rdi, r13
0000000000004dec         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004df1         mov        dword [rbp], r12d
0000000000004df5         add        rsp, 0x38
0000000000004df9         pop        rbx
0000000000004dfa         pop        rbp
0000000000004dfb         pop        r12
0000000000004dfd         pop        r13
0000000000004dff         pop        r14
0000000000004e01         pop        r15
0000000000004e03         ret
                        ; endp
0000000000004e04         align      16                                          ; End of unwind block (FDE at 0x86b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000004e10         push       r15                                         ; Begin of unwind block (FDE at 0x8708), CODE XREF=quotearg_alloc+5
0000000000004e12         push       r14
0000000000004e14         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004e1b         push       r13
0000000000004e1d         push       r12
0000000000004e1f         mov        r12, rdx
0000000000004e22         push       rbp
0000000000004e23         push       rbx
0000000000004e24         mov        rbx, rcx
0000000000004e27         mov        r14, rdi
0000000000004e2a         mov        r15, rsi
0000000000004e2d         sub        rsp, 0x38
0000000000004e31         test       rcx, rcx
0000000000004e34         cmove      rbx, rax
0000000000004e38         xor        ebp, ebp
0000000000004e3a         call       j___errno_location                          ; __errno_location
0000000000004e3f         test       r12, r12
0000000000004e42         mov        r13, rax
0000000000004e45         mov        eax, dword [rax]
0000000000004e47         sete       bpl
0000000000004e4b         or         ebp, dword [rbx+4]
0000000000004e4e         lea        r10, qword [rbx+8]
0000000000004e52         sub        rsp, 0x8
0000000000004e56         mov        r8d, dword [rbx]
0000000000004e59         mov        rcx, r15
0000000000004e5c         mov        dword [rsp+0x70+var_5C], eax
0000000000004e60         push       qword [rbx+0x30]
0000000000004e63         mov        rdx, r14
0000000000004e66         push       qword [rbx+0x28]
0000000000004e69         push       r10
0000000000004e6b         xor        esi, esi
0000000000004e6d         mov        r9d, ebp
0000000000004e70         xor        edi, edi
0000000000004e72         mov        qword [rsp+0x88+var_48], r10
0000000000004e77         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004e7c         lea        rsi, qword [rax+1]
0000000000004e80         mov        qword [rsp+0x88+var_40], rax
0000000000004e85         add        rsp, 0x20
0000000000004e89         mov        rdi, rsi
0000000000004e8c         mov        qword [rsp+0x68+var_50], rsi
0000000000004e91         call       xmalloc                                     ; xmalloc
0000000000004e96         mov        qword [rsp+0x68+var_58], rax
0000000000004e9b         sub        rsp, 0x8
0000000000004e9f         push       qword [rbx+0x30]
0000000000004ea2         push       qword [rbx+0x28]
0000000000004ea5         mov        r10, qword [rsp+0x80+var_48]
0000000000004eaa         mov        r9d, ebp
0000000000004ead         mov        r8d, dword [rbx]
0000000000004eb0         mov        rcx, r15
0000000000004eb3         mov        rdx, r14
0000000000004eb6         mov        rdi, rax
0000000000004eb9         push       r10
0000000000004ebb         mov        rsi, qword [rsp+0x88+var_50]
0000000000004ec0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004ec5         mov        eax, dword [rsp+0x88+var_5C]
0000000000004ec9         add        rsp, 0x20
0000000000004ecd         test       r12, r12
0000000000004ed0         mov        dword [r13], eax
0000000000004ed4         je         loc_4edf

0000000000004ed6         mov        r11, qword [rsp+0x68+var_40]
0000000000004edb         mov        qword [r12], r11

                     loc_4edf:
0000000000004edf         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004ee4         add        rsp, 0x38
0000000000004ee8         pop        rbx
0000000000004ee9         pop        rbp
0000000000004eea         pop        r12
0000000000004eec         pop        r13
0000000000004eee         pop        r14
0000000000004ef0         pop        r15
0000000000004ef2         ret
                        ; endp
0000000000004ef3         align      256                                         ; End of unwind block (FDE at 0x8708)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004f00         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8774)
0000000000004f03         xor        edx, edx
0000000000004f05         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000004f0a         align      16                                          ; End of unwind block (FDE at 0x8774)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000004f10         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x8788), nslots
0000000000004f16         push       r12
0000000000004f18         mov        r12, qword [slotvec]                        ; slotvec
0000000000004f1f         push       rbp
0000000000004f20         push       rbx
0000000000004f21         cmp        eax, 0x1
0000000000004f24         jle        loc_4f51

0000000000004f26         sub        eax, 0x2
0000000000004f29         lea        rbx, qword [r12+0x18]
0000000000004f2e         shl        rax, 0x4
0000000000004f32         lea        rbp, qword [r12+rax+0x28]
0000000000004f37         nop        word [rax+rax]

                     loc_4f40:
0000000000004f40         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004f43         add        rbx, 0x10
0000000000004f47         call       j_free                                      ; free
0000000000004f4c         cmp        rbx, rbp
0000000000004f4f         jne        loc_4f40

                     loc_4f51:
0000000000004f51         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004f56         lea        rbx, qword [slot0]                          ; slot0
0000000000004f5d         cmp        rdi, rbx
0000000000004f60         je         loc_4f79

0000000000004f62         call       j_free                                      ; free
0000000000004f67         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004f72         mov        qword [slotvec0+8], rbx                     ; 0x20a098

                     loc_4f79:
0000000000004f79         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004f80         cmp        r12, rbx
0000000000004f83         je         loc_4f94

0000000000004f85         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004f88         call       j_free                                      ; free
0000000000004f8d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4f94:
0000000000004f94         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004f95         mov        dword [nslots], 0x1                         ; nslots
0000000000004f9f         pop        rbp
0000000000004fa0         pop        r12
0000000000004fa2         ret
                        ; endp
0000000000004fa3         align      16                                          ; End of unwind block (FDE at 0x8788)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004fb0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x87b4), default_quoting_options
0000000000004fb7         mov        rdx, 0xffffffffffffffff
0000000000004fbe         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004fc3         align      16                                          ; End of unwind block (FDE at 0x87b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004fd0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x87c8), default_quoting_options
0000000000004fd7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004fdc         align      32                                          ; End of unwind block (FDE at 0x87c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004fe0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x87dc), default_quoting_options
0000000000004fe7         mov        rsi, rdi
0000000000004fea         mov        rdx, 0xffffffffffffffff
0000000000004ff1         xor        edi, edi
0000000000004ff3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004ff8         align      4096                                        ; End of unwind block (FDE at 0x87dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005000         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x87f0), default_quoting_options
0000000000005007         mov        rdx, rsi
000000000000500a         mov        rsi, rdi
000000000000500d         xor        edi, edi
000000000000500f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005014         align      32                                          ; End of unwind block (FDE at 0x87f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000005020         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8804), CODE XREF=argmatch_invalid+64
0000000000005024         mov        rax, rdx
0000000000005027         mov        rdx, qword [fs:0x28]
0000000000005030         mov        qword [rsp+0x48+var_10], rdx
0000000000005035         xor        edx, edx
0000000000005037         cmp        esi, 0xa
000000000000503a         je         loc_50a4

000000000000503c         mov        dword [rsp+0x48+var_48], esi
000000000000503f         mov        rcx, rsp
0000000000005042         mov        rdx, 0xffffffffffffffff
0000000000005049         mov        rsi, rax
000000000000504c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005055         mov        qword [rsp+0x48+var_3C], 0x0
000000000000505e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005067         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005070         mov        qword [rsp+0x48+var_24], 0x0
0000000000005079         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005082         mov        dword [rsp+0x48+var_14], 0x0
000000000000508a         call       quotearg_n_options                          ; quotearg_n_options
000000000000508f         mov        rcx, qword [rsp+0x48+var_10]
0000000000005094         xor        rcx, qword [fs:0x28]
000000000000509d         jne        loc_50a9

000000000000509f         add        rsp, 0x48
00000000000050a3         ret
                        ; endp

                     loc_50a4:
00000000000050a4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_50a9:
00000000000050a9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000050ae         align      16                                          ; End of unwind block (FDE at 0x8804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000050b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8820), CODE XREF=quotearg_style_mem+10, collate_error+106, collate_error+127
00000000000050b4         mov        rax, rdx
00000000000050b7         mov        rdx, rcx
00000000000050ba         mov        rcx, qword [fs:0x28]
00000000000050c3         mov        qword [rsp+0x48+var_10], rcx
00000000000050c8         xor        ecx, ecx
00000000000050ca         cmp        esi, 0xa
00000000000050cd         je         loc_5130

00000000000050cf         mov        dword [rsp+0x48+var_48], esi
00000000000050d2         mov        rcx, rsp
00000000000050d5         mov        rsi, rax
00000000000050d8         mov        qword [rsp+0x48+var_44], 0x0
00000000000050e1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000050ea         mov        qword [rsp+0x48+var_34], 0x0
00000000000050f3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000050fc         mov        qword [rsp+0x48+var_24], 0x0
0000000000005105         mov        qword [rsp+0x48+var_1C], 0x0
000000000000510e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005116         call       quotearg_n_options                          ; quotearg_n_options
000000000000511b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005120         xor        rdx, qword [fs:0x28]
0000000000005129         jne        loc_5135

000000000000512b         add        rsp, 0x48
000000000000512f         ret
                        ; endp

                     loc_5130:
0000000000005130         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5135:
0000000000005135         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000513a         align      64                                          ; End of unwind block (FDE at 0x8820)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000005140         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x883c), CODE XREF=main+2254
0000000000005143         mov        esi, edi
0000000000005145         xor        edi, edi
0000000000005147         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000514c         align      16                                          ; End of unwind block (FDE at 0x883c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000005150         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8850)
0000000000005153         mov        rdx, rsi
0000000000005156         mov        esi, edi
0000000000005158         xor        edi, edi
000000000000515a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000515f         align      32                                          ; End of unwind block (FDE at 0x8850)

                     quotearg_char_mem:
0000000000005160         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8864), CODE XREF=quotearg_char+11
0000000000005164         mov        ecx, edx
0000000000005166         mov        rax, qword [fs:0x28]
000000000000516f         mov        qword [rsp+0x48+var_10], rax
0000000000005174         xor        eax, eax
0000000000005176         mov        rax, qword [qword_20a270]                   ; qword_20a270
000000000000517d         mov        r8, rsp
0000000000005180         and        ecx, 0x1f
0000000000005183         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000518b         mov        qword [rsp+0x48+var_18], rax
0000000000005190         mov        eax, edx
0000000000005192         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005196         shr        al, 0x5
0000000000005199         movzx      eax, al
000000000000519c         lea        r9, qword [r8+rax*4+8]
00000000000051a1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a250
00000000000051a9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000051ae         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a260
00000000000051b6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000051bb         mov        edx, dword [r9]
00000000000051be         mov        eax, edx
00000000000051c0         shr        eax, cl
00000000000051c2         not        eax
00000000000051c4         and        eax, 0x1
00000000000051c7         shl        eax, cl
00000000000051c9         mov        rcx, r8
00000000000051cc         xor        eax, edx
00000000000051ce         mov        rdx, rsi
00000000000051d1         mov        rsi, rdi
00000000000051d4         mov        dword [r9], eax
00000000000051d7         xor        edi, edi
00000000000051d9         call       quotearg_n_options                          ; quotearg_n_options
00000000000051de         mov        rsi, qword [rsp+0x48+var_10]
00000000000051e3         xor        rsi, qword [fs:0x28]
00000000000051ec         jne        loc_51f3

00000000000051ee         add        rsp, 0x48
00000000000051f2         ret
                        ; endp

                     loc_51f3:
00000000000051f3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000051f8         align      512                                         ; End of unwind block (FDE at 0x8864)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005200         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x8880)
0000000000005204         mov        rsi, 0xffffffffffffffff
000000000000520b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005210         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x8880), Begin of unwind block (FDE at 0x8894), CODE XREF=close_stdout+101
0000000000005215         mov        rsi, 0xffffffffffffffff
000000000000521c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005221         align      16                                          ; End of unwind block (FDE at 0x8894)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005230         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x88a8)
0000000000005235         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000523a         align      64                                          ; End of unwind block (FDE at 0x88a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005240         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x88bc), CODE XREF=main+1946, main+2730
0000000000005244         mov        rax, rdx
0000000000005247         mov        rdx, qword [fs:0x28]
0000000000005250         mov        qword [rsp+0x48+var_10], rdx
0000000000005255         xor        edx, edx
0000000000005257         cmp        esi, 0xa
000000000000525a         je         loc_52c4

000000000000525c         mov        dword [rsp+0x48+var_48], esi
000000000000525f         mov        rcx, rsp
0000000000005262         mov        rdx, 0xffffffffffffffff
0000000000005269         mov        rsi, rax
000000000000526c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005275         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000527e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005287         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005290         mov        qword [rsp+0x48+var_24], 0x0
0000000000005299         mov        qword [rsp+0x48+var_1C], 0x0
00000000000052a2         mov        dword [rsp+0x48+var_14], 0x0
00000000000052aa         call       quotearg_n_options                          ; quotearg_n_options
00000000000052af         mov        rcx, qword [rsp+0x48+var_10]
00000000000052b4         xor        rcx, qword [fs:0x28]
00000000000052bd         jne        loc_52c9

00000000000052bf         add        rsp, 0x48
00000000000052c3         ret
                        ; endp

                     loc_52c4:
00000000000052c4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_52c9:
00000000000052c9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000052ce         align      16                                          ; End of unwind block (FDE at 0x88bc)

                     quotearg_n_custom_mem:
00000000000052d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x88d8), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000052d4         mov        r9, rcx
00000000000052d7         mov        rcx, qword [qword_20a270]                   ; qword_20a270
00000000000052de         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000052e6         mov        rax, qword [fs:0x28]
00000000000052ef         mov        qword [rsp+0x48+var_10], rax
00000000000052f4         xor        eax, eax
00000000000052f6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000052fa         test       rsi, rsi
00000000000052fd         mov        qword [rsp+0x48+var_18], rcx
0000000000005302         mov        dword [rsp+0x48+var_48], 0xa
0000000000005309         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a250
0000000000005311         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005316         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a260
000000000000531e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005323         je         loc_5357

0000000000005325         test       rdx, rdx
0000000000005328         je         loc_5357

000000000000532a         mov        qword [rsp+0x48+var_20], rsi
000000000000532f         mov        qword [rsp+0x48+var_18], rdx
0000000000005334         mov        rcx, rsp
0000000000005337         mov        rdx, r8
000000000000533a         mov        rsi, r9
000000000000533d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005342         mov        rdi, qword [rsp+0x48+var_10]
0000000000005347         xor        rdi, qword [fs:0x28]
0000000000005350         jne        loc_535c

0000000000005352         add        rsp, 0x48
0000000000005356         ret
                        ; endp

                     loc_5357:
0000000000005357         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_535c:
000000000000535c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005361         align      16                                          ; End of unwind block (FDE at 0x88d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000005370         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x88f4)
0000000000005377         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000537c         align      128                                         ; End of unwind block (FDE at 0x88f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000005380         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8908)
0000000000005383         mov        r8, 0xffffffffffffffff
000000000000538a         mov        rdx, rsi
000000000000538d         mov        rsi, rdi
0000000000005390         xor        edi, edi
0000000000005392         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005397         align      32                                          ; End of unwind block (FDE at 0x8908)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000053a0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x891c)
00000000000053a3         mov        rcx, rdx
00000000000053a6         mov        rdx, rsi
00000000000053a9         mov        rsi, rdi
00000000000053ac         xor        edi, edi
00000000000053ae         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000053b3         align      64                                          ; End of unwind block (FDE at 0x891c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000053c0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8930), quote_quoting_options
00000000000053c7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000053cc         align      16                                          ; End of unwind block (FDE at 0x8930)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000053d0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8944), quote_quoting_options
00000000000053d7         mov        rdx, rsi
00000000000053da         mov        rsi, rdi
00000000000053dd         xor        edi, edi
00000000000053df         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000053e4         align      16                                          ; End of unwind block (FDE at 0x8944)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000053f0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8958), quote_quoting_options, CODE XREF=argmatch_invalid+46
00000000000053f7         mov        rdx, 0xffffffffffffffff
00000000000053fe         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005403         align      16                                          ; End of unwind block (FDE at 0x8958)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005410         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x896c), quote_quoting_options, CODE XREF=main+2588, argmatch_valid+90, argmatch_valid+169
0000000000005417         mov        rsi, rdi
000000000000541a         mov        rdx, 0xffffffffffffffff
0000000000005421         xor        edi, edi
0000000000005423         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005428         align      16                                          ; End of unwind block (FDE at 0x896c)

                     version_etc_arn:
0000000000005430         push       r15                                         ; Begin of unwind block (FDE at 0x8984), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000005432         push       r14
0000000000005434         push       r13
0000000000005436         push       r12
0000000000005438         mov        r12, r9
000000000000543b         push       rbp
000000000000543c         push       rbx
000000000000543d         mov        rbp, rdi
0000000000005440         mov        rbx, r8
0000000000005443         sub        rsp, 0x28
0000000000005447         test       rsi, rsi
000000000000544a         je         loc_5568

0000000000005450         mov        r8, rdx
0000000000005453         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000545a         mov        r9, rcx
000000000000545d         xor        eax, eax
000000000000545f         mov        rcx, rsi
0000000000005462         mov        esi, 0x1
0000000000005467         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_546c:
000000000000546c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x775b, CODE XREF=version_etc_arn+337
0000000000005473         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005475         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000547a         call       j_dcgettext                                 ; dcgettext
000000000000547f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000005486         mov        rcx, rax
0000000000005489         mov        r8d, 0x7e3
000000000000548f         mov        esi, 0x1
0000000000005494         mov        rdi, rbp
0000000000005497         xor        eax, eax
0000000000005499         call       j___fprintf_chk                             ; __fprintf_chk
000000000000549e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
00000000000054a5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000054a7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000054ac         call       j_dcgettext                                 ; dcgettext
00000000000054b1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
00000000000054b4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000054b7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000054bc         cmp        r12, 0x9
00000000000054c0         ja         loc_5800

00000000000054c6         lea        rdx, qword [switch_table_7a44]              ; switch_table_7a44
00000000000054cd         movsxd     rax, dword [rdx+r12*4]
00000000000054d1         add        rax, rdx
00000000000054d4         jmp        rax                                         ; switch statement using table at 0x7a44, with 10 cases, 0x54e0,0x5556,0x5590,0x55e8,0x5628,0x5670,0x56c0,0x5718,0x5748,0x57b0
00000000000054d6         align      32

                     loc_54e0:
00000000000054e0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
00000000000054e4         mov        rax, qword [rbx+0x10]
00000000000054e8         lea        rsi, qword [aWrittenBySSSns_7958]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000054ef         mov        r8, qword [rbx+8]
00000000000054f3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000054f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000054fa         mov        r13, qword [rbx+0x30]
00000000000054fe         mov        r12, qword [rbx+0x28]
0000000000005502         mov        qword [rsp+0x58+var_48], r9
0000000000005507         mov        r15, qword [rbx+0x20]
000000000000550b         mov        r14, qword [rbx+0x18]
000000000000550f         mov        qword [rsp+0x58+var_58], rax
0000000000005513         mov        qword [rsp+0x58+var_50], r8
0000000000005518         mov        rbx, qword [rbx]
000000000000551b         call       j_dcgettext                                 ; dcgettext
0000000000005520         sub        rsp, 0x8

                     loc_5524:
0000000000005524         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000005529         mov        rdx, rax
000000000000552c         mov        rcx, rbx
000000000000552f         mov        esi, 0x1
0000000000005534         mov        rdi, rbp
0000000000005537         xor        eax, eax
0000000000005539         push       r9
000000000000553b         push       r13
000000000000553d         push       r12
000000000000553f         push       r15
0000000000005541         push       r14
0000000000005543         mov        r9, qword [rsp+0x88+var_58]
0000000000005548         mov        r8, qword [rsp+0x88+var_50]
000000000000554d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005552         add        rsp, 0x30

                     loc_5556:
0000000000005556         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000555a         pop        rbx
000000000000555b         pop        rbp
000000000000555c         pop        r12
000000000000555e         pop        r13
0000000000005560         pop        r14
0000000000005562         pop        r15
0000000000005564         ret
                        ; endp
0000000000005565         align      8

                     loc_5568:
0000000000005568         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000556b         mov        rcx, rdx
000000000000556e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000005575         mov        esi, 0x1
000000000000557a         xor        eax, eax
000000000000557c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005581         jmp        loc_546c
0000000000005586         align      16

                     loc_5590:
0000000000005590         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000005594         mov        r9, qword [rbx+0x38]
0000000000005598         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000559f         mov        rax, qword [rbx+0x10]
00000000000055a3         mov        r8, qword [rbx+8]
00000000000055a7         mov        edx, 0x5
00000000000055ac         mov        r13, qword [rbx+0x30]
00000000000055b0         mov        r12, qword [rbx+0x28]
00000000000055b4         mov        r15, qword [rbx+0x20]
00000000000055b8         mov        r14, qword [rbx+0x18]
00000000000055bc         mov        rbx, qword [rbx]
00000000000055bf         mov        qword [rsp+0x58+var_40], r10
00000000000055c4         mov        qword [rsp+0x58+var_48], r9
00000000000055c9         mov        qword [rsp+0x58+var_58], rax
00000000000055cd         mov        qword [rsp+0x58+var_50], r8

                     loc_55d2:
00000000000055d2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
00000000000055d4         call       j_dcgettext                                 ; dcgettext
00000000000055d9         mov        r10, qword [rsp+0x58+var_40]
00000000000055de         push       r10
00000000000055e0         jmp        loc_5524
00000000000055e5         align      8

                     loc_55e8:
00000000000055e8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
00000000000055eb         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000055f2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000055f7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000055f9         call       j_dcgettext                                 ; dcgettext
00000000000055fe         add        rsp, 0x28
0000000000005602         mov        rcx, rbx
0000000000005605         mov        rdi, rbp
0000000000005608         pop        rbx
0000000000005609         pop        rbp
000000000000560a         pop        r12
000000000000560c         pop        r13
000000000000560e         pop        r14
0000000000005610         pop        r15
0000000000005612         mov        rdx, rax
0000000000005615         mov        esi, 0x1
000000000000561a         xor        eax, eax
000000000000561c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005621         align      8

                     loc_5628:
0000000000005628         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000562c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000005633         mov        rbx, qword [rbx]
0000000000005636         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000563b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000563d         call       j_dcgettext                                 ; dcgettext
0000000000005642         add        rsp, 0x28
0000000000005646         mov        r8, r12
0000000000005649         mov        rcx, rbx
000000000000564c         mov        rdi, rbp
000000000000564f         mov        rdx, rax
0000000000005652         mov        esi, 0x1
0000000000005657         pop        rbx
0000000000005658         pop        rbp
0000000000005659         pop        r12
000000000000565b         pop        r13
000000000000565d         pop        r14
000000000000565f         pop        r15
0000000000005661         xor        eax, eax
0000000000005663         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005668         align      16

                     loc_5670:
0000000000005670         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000005674         mov        r12, qword [rbx+8]
0000000000005678         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000567f         mov        rbx, qword [rbx]
0000000000005682         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005687         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005689         call       j_dcgettext                                 ; dcgettext
000000000000568e         add        rsp, 0x28
0000000000005692         mov        r9, r13
0000000000005695         mov        r8, r12
0000000000005698         mov        rcx, rbx
000000000000569b         mov        rdi, rbp
000000000000569e         mov        rdx, rax
00000000000056a1         pop        rbx
00000000000056a2         pop        rbp
00000000000056a3         pop        r12
00000000000056a5         pop        r13
00000000000056a7         pop        r14
00000000000056a9         pop        r15
00000000000056ab         mov        esi, 0x1
00000000000056b0         xor        eax, eax
00000000000056b2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000056b7         align      64

                     loc_56c0:
00000000000056c0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
00000000000056c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000056cc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000056ce         mov        r14, qword [rbx+0x18]
00000000000056d2         mov        r13, qword [rbx+0x10]
00000000000056d6         mov        r12, qword [rbx+8]
00000000000056da         mov        rbx, qword [rbx]
00000000000056dd         call       j_dcgettext                                 ; dcgettext
00000000000056e2         sub        rsp, 0x8

                     loc_56e6:
00000000000056e6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000056e8         mov        rdx, rax
00000000000056eb         mov        r9, r13
00000000000056ee         mov        r8, r12
00000000000056f1         mov        rcx, rbx
00000000000056f4         mov        rdi, rbp
00000000000056f7         mov        esi, 0x1
00000000000056fc         xor        eax, eax
00000000000056fe         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005703         pop        rax
0000000000005704         pop        rdx
0000000000005705         add        rsp, 0x28
0000000000005709         pop        rbx
000000000000570a         pop        rbp
000000000000570b         pop        r12
000000000000570d         pop        r13
000000000000570f         pop        r14
0000000000005711         pop        r15
0000000000005713         ret
                        ; endp
0000000000005714         align      8

                     loc_5718:
0000000000005718         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000571c         lea        rsi, qword [aWrittenBySSSns_78d8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000005723         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005728         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000572a         mov        r14, qword [rbx+0x18]
000000000000572e         mov        r13, qword [rbx+0x10]
0000000000005732         mov        r12, qword [rbx+8]
0000000000005736         mov        rbx, qword [rbx]
0000000000005739         call       j_dcgettext                                 ; dcgettext
000000000000573e         push       r15
0000000000005740         jmp        loc_56e6
0000000000005742         align      8

                     loc_5748:
0000000000005748         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000574c         mov        r12, qword [rbx+0x28]
0000000000005750         lea        rsi, qword [aWrittenBySSSns_7900]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000005757         mov        r15, qword [rbx+0x20]
000000000000575b         mov        r14, qword [rbx+0x18]
000000000000575f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005764         mov        r13, qword [rbx+0x10]
0000000000005768         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000576a         mov        rbx, qword [rbx]
000000000000576d         mov        qword [rsp+0x58+var_58], r8
0000000000005771         call       j_dcgettext                                 ; dcgettext
0000000000005776         sub        rsp, 0x8
000000000000577a         mov        r9, r13
000000000000577d         push       r12
000000000000577f         push       r15
0000000000005781         push       r14

                     loc_5783:
0000000000005783         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000005788         mov        rcx, rbx
000000000000578b         mov        rdx, rax
000000000000578e         mov        rdi, rbp
0000000000005791         mov        esi, 0x1
0000000000005796         xor        eax, eax
0000000000005798         call       j___fprintf_chk                             ; __fprintf_chk
000000000000579d         add        rsp, 0x20
00000000000057a1         add        rsp, 0x28
00000000000057a5         pop        rbx
00000000000057a6         pop        rbp
00000000000057a7         pop        r12
00000000000057a9         pop        r13
00000000000057ab         pop        r14
00000000000057ad         pop        r15
00000000000057af         ret
                        ; endp

                     loc_57b0:
00000000000057b0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000057b4         mov        r13, qword [rbx+0x30]
00000000000057b8         lea        rsi, qword [aWrittenBySSSns_7928]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000057bf         mov        r12, qword [rbx+0x28]
00000000000057c3         mov        r15, qword [rbx+0x20]
00000000000057c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000057cc         mov        r14, qword [rbx+0x18]
00000000000057d0         mov        r8, qword [rbx+8]
00000000000057d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000057d6         mov        qword [rsp+0x58+var_50], r9
00000000000057db         mov        rbx, qword [rbx]
00000000000057de         mov        qword [rsp+0x58+var_58], r8
00000000000057e2         call       j_dcgettext                                 ; dcgettext
00000000000057e7         push       r13
00000000000057e9         push       r12
00000000000057eb         push       r15
00000000000057ed         push       r14
00000000000057ef         mov        r9, qword [rsp+0x78+var_50]
00000000000057f4         jmp        loc_5783
00000000000057f6         align      2048

                     loc_5800:
0000000000005800         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000005804         mov        r9, qword [rbx+0x38]
0000000000005808         mov        edx, 0x5
000000000000580d         mov        rax, qword [rbx+0x10]
0000000000005811         mov        r8, qword [rbx+8]
0000000000005815         lea        rsi, qword [aWrittenBySSSns_79c0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000581c         mov        r13, qword [rbx+0x30]
0000000000005820         mov        r12, qword [rbx+0x28]
0000000000005824         mov        r15, qword [rbx+0x20]
0000000000005828         mov        r14, qword [rbx+0x18]
000000000000582c         mov        qword [rsp+0x58+var_40], r10
0000000000005831         mov        qword [rsp+0x58+var_48], r9
0000000000005836         mov        qword [rsp+0x58+var_58], rax
000000000000583a         mov        qword [rsp+0x58+var_50], r8
000000000000583f         mov        rbx, qword [rbx]
0000000000005842         jmp        loc_55d2
0000000000005847         align      16                                          ; End of unwind block (FDE at 0x8984)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_ar:
0000000000005850         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x8a98)
0000000000005853         cmp        qword [r8], 0x0
0000000000005857         je         j_version_etc_arn                           ; version_etc_arn

0000000000005859         nop        dword [rax]

                     loc_5860:
0000000000005860         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005864         cmp        qword [r8+r9*8], 0x0
0000000000005869         jne        loc_5860

                     j_version_etc_arn:        // version_etc_arn
000000000000586b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005870         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x8a98), Begin of unwind block (FDE at 0x8aac)
0000000000005874         mov        r10, r8
0000000000005877         xor        r9d, r9d
000000000000587a         mov        rax, qword [fs:0x28]
0000000000005883         mov        qword [rsp+0x68+var_10], rax
0000000000005888         xor        eax, eax
000000000000588a         mov        r8, rsp
000000000000588d         nop        dword [rax]

                     loc_5890:
0000000000005890         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005893         cmp        eax, 0x2f
0000000000005896         ja         loc_58da

0000000000005898         mov        r11d, eax
000000000000589b         add        r11, qword [r10+0x10]
000000000000589f         add        eax, 0x8
00000000000058a2         mov        dword [r10], eax

                     loc_58a5:
00000000000058a5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
00000000000058a8         test       rax, rax
00000000000058ab         mov        qword [r8+r9*8], rax
00000000000058af         je         loc_58bb

00000000000058b1         add        r9, 0x1
00000000000058b5         cmp        r9, 0xa
00000000000058b9         jne        loc_5890

                     loc_58bb:
00000000000058bb         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
00000000000058c0         mov        rax, qword [rsp+0x68+var_10]
00000000000058c5         xor        rax, qword [fs:0x28]
00000000000058ce         jne        loc_58d5

00000000000058d0         add        rsp, 0x68
00000000000058d4         ret
                        ; endp

                     loc_58d5:
00000000000058d5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_58da:
00000000000058da         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
00000000000058de         lea        rax, qword [r11+8]
00000000000058e2         mov        qword [r10+8], rax
00000000000058e6         jmp        loc_58a5
00000000000058e8         align      16                                          ; End of unwind block (FDE at 0x8aac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000058f0         push       rbp                                         ; Begin of unwind block (FDE at 0x8ac8), CODE XREF=main+1879
00000000000058f1         push       rbx
00000000000058f2         mov        r10d, 0x20
00000000000058f8         xor        r11d, r11d
00000000000058fb         sub        rsp, 0xb8
0000000000005902         mov        rax, qword [fs:0x28]
000000000000590b         mov        qword [rsp+0xc8+var_50], rax
0000000000005910         xor        eax, eax
0000000000005912         lea        rax, qword [rsp+0xc8+arg_0]
000000000000591a         mov        qword [rsp+0xc8+var_28], r8
0000000000005922         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000592a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000592f         mov        qword [rsp+0xc8+var_20], r9
0000000000005937         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000593f         mov        qword [rsp+0xc8+var_B8], rax
0000000000005944         lea        rax, qword [rsp+0xc8+var_48]
000000000000594c         xor        r9d, r9d
000000000000594f         mov        qword [rsp+0xc8+var_B0], rax
0000000000005954         mov        rbp, rax
0000000000005957         nop        word [rax+rax]

                     loc_5960:
0000000000005960         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005964         ja         loc_59bc

0000000000005966         mov        eax, r10d
0000000000005969         mov        r11d, 0x1
000000000000596f         add        r10d, 0x8
0000000000005973         add        rax, rbp

                     loc_5976:
0000000000005976         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005979         test       rax, rax
000000000000597c         mov        qword [r8+r9*8], rax
0000000000005980         je         loc_598c

0000000000005982         add        r9, 0x1
0000000000005986         cmp        r9, 0xa
000000000000598a         jne        loc_5960

                     loc_598c:
000000000000598c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000598f         jne        loc_59b5

                     loc_5991:
0000000000005991         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005996         mov        rax, qword [rsp+0xc8+var_50]
000000000000599b         xor        rax, qword [fs:0x28]
00000000000059a4         jne        loc_59b0

00000000000059a6         add        rsp, 0xb8
00000000000059ad         pop        rbx
00000000000059ae         pop        rbp
00000000000059af         ret
                        ; endp

                     loc_59b0:
00000000000059b0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_59b5:
00000000000059b5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
00000000000059ba         jmp        loc_5991

                     loc_59bc:
00000000000059bc         mov        rax, rbx                                    ; CODE XREF=version_etc+116
00000000000059bf         add        rbx, 0x8
00000000000059c3         jmp        loc_5976
00000000000059c5         align      16                                          ; End of unwind block (FDE at 0x8ac8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
00000000000059d0         push       rbx                                         ; Begin of unwind block (FDE at 0x8af4)
00000000000059d1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
00000000000059d8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000059dd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000059df         call       j_dcgettext                                 ; dcgettext
00000000000059e4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000059eb         mov        rsi, rax
00000000000059ee         mov        edi, 0x1
00000000000059f3         xor        eax, eax
00000000000059f5         call       j___printf_chk                              ; __printf_chk
00000000000059fa         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005a01         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005a06         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005a08         call       j_dcgettext                                 ; dcgettext
0000000000005a0d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005a14         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x67cc
0000000000005a1b         mov        rsi, rax
0000000000005a1e         mov        edi, 0x1
0000000000005a23         xor        eax, eax
0000000000005a25         call       j___printf_chk                              ; __printf_chk
0000000000005a2a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005a31         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005a38         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005a3a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005a3f         call       j_dcgettext                                 ; dcgettext
0000000000005a44         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005a47         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005a4a         pop        rbx
0000000000005a4b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005a50         push       rbx                                         ; End of unwind block (FDE at 0x8af4), Begin of unwind block (FDE at 0x8b14), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005a51         mov        rbx, rdi
0000000000005a54         call       j_malloc                                    ; malloc
0000000000005a59         test       rax, rax
0000000000005a5c         jne        loc_5a63

0000000000005a5e         test       rbx, rbx
0000000000005a61         jne        loc_5a65

                     loc_5a63:
0000000000005a63         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005a64         ret
                        ; endp

                     loc_5a65:
0000000000005a65         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5a6a:
0000000000005a6a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8b14)
                     xnmalloc:
0000000000005a70         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8b30)
0000000000005a73         mul        rsi
0000000000005a76         mov        rdi, rax
0000000000005a79         seto       al
0000000000005a7c         test       rdi, rdi
0000000000005a7f         js         loc_5a8b

0000000000005a81         movzx      eax, al
0000000000005a84         test       rax, rax
0000000000005a87         jne        loc_5a8b

0000000000005a89         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_5a8b:
0000000000005a8b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000005a8f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5a94:
0000000000005a94         nop                                                    ; End of unwind block (FDE at 0x8b30)
0000000000005a96         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005aa0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x8b44)
                        ; endp
0000000000005aa2         align      16                                          ; End of unwind block (FDE at 0x8b44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005ab0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x8b58), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005ab3         push       rbx
0000000000005ab4         mov        rbx, rsi
0000000000005ab7         jne        loc_5abe

0000000000005ab9         test       rdi, rdi
0000000000005abc         jne        loc_5ad8

                     loc_5abe:
0000000000005abe         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005ac1         call       j_realloc                                   ; realloc
0000000000005ac6         test       rax, rax
0000000000005ac9         jne        loc_5ad0

0000000000005acb         test       rbx, rbx
0000000000005ace         jne        loc_5ae1

                     loc_5ad0:
0000000000005ad0         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005ad1         ret
                        ; endp
0000000000005ad2         align      8

                     loc_5ad8:
0000000000005ad8         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000005add         xor        eax, eax
0000000000005adf         pop        rbx
0000000000005ae0         ret
                        ; endp

                     loc_5ae1:
0000000000005ae1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5ae6:
0000000000005ae6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x8b58)
                     xnrealloc:
0000000000005af0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x8b7c)
0000000000005af3         mul        rdx
0000000000005af6         mov        rsi, rax
0000000000005af9         seto       al
0000000000005afc         test       rsi, rsi
0000000000005aff         js         loc_5b0b

0000000000005b01         movzx      eax, al
0000000000005b04         test       rax, rax
0000000000005b07         jne        loc_5b0b

0000000000005b09         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_5b0b:
0000000000005b0b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000005b0f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5b14:
0000000000005b14         nop                                                    ; End of unwind block (FDE at 0x8b7c)
0000000000005b16         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005b20         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8b90)
0000000000005b23         mov        r9, rdx
0000000000005b26         mov        rcx, qword [rsi]
0000000000005b29         je         loc_5b60

0000000000005b2b         xor        edx, edx
0000000000005b2d         movabs     rax, 0x5555555555555554
0000000000005b37         div        r9
0000000000005b3a         cmp        rax, rcx
0000000000005b3d         jbe        loc_5b7b

0000000000005b3f         mov        rax, rcx
0000000000005b42         shr        rax, 0x1
0000000000005b45         lea        rcx, qword [rax+rcx+1]

                     loc_5b4a:
0000000000005b4a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000005b4d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005b51         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005b54         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005b59         align      32

                     loc_5b60:
0000000000005b60         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005b63         je         loc_5b88

                     loc_5b65:
0000000000005b65         mov        rax, rcx                                    ; CODE XREF=sub_5b84+28
0000000000005b68         mul        r9
0000000000005b6b         seto       dl
0000000000005b6e         test       rax, rax
0000000000005b71         movzx      edx, dl
0000000000005b74         js         loc_5b7b

0000000000005b76         test       rdx, rdx
0000000000005b79         je         loc_5b4a

                     loc_5b7b:
0000000000005b7b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000005b7f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5b84:
0000000000005b84         nop        dword [rax]
                        ; endp

                     loc_5b88:
0000000000005b88         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000005b8a         mov        eax, 0x80
0000000000005b8f         xor        r8d, r8d
0000000000005b92         div        r9
0000000000005b95         test       rax, rax
0000000000005b98         sete       r8b
0000000000005b9c         lea        rcx, qword [r8+rax]
0000000000005ba0         jmp        loc_5b65
0000000000005ba2         align      16                                          ; End of unwind block (FDE at 0x8b90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005bb0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8ba8), CODE XREF=readlinebuffer_delim+108
0000000000005bb3         mov        rax, qword [rsi]
0000000000005bb6         je         loc_5be0

0000000000005bb8         movabs     rdx, 0x5555555555555553
0000000000005bc2         cmp        rax, rdx
0000000000005bc5         ja         loc_5bf1

0000000000005bc7         mov        rdx, rax
0000000000005bca         shr        rdx, 0x1
0000000000005bcd         lea        rax, qword [rdx+rax+1]

                     loc_5bd2:
0000000000005bd2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005bd5         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005bd8         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005bdd         align      32

                     loc_5be0:
0000000000005be0         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005be3         mov        edx, 0x80
0000000000005be8         cmove      rax, rdx
0000000000005bec         test       rax, rax
0000000000005bef         jns        loc_5bd2

                     loc_5bf1:
0000000000005bf1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005bf5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5bfa:
0000000000005bfa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8ba8)
                     xzalloc:
0000000000005c00         push       rbx                                         ; Begin of unwind block (FDE at 0x8bc0)
0000000000005c01         mov        rbx, rdi
0000000000005c04         call       xmalloc                                     ; xmalloc
0000000000005c09         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000005c0c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005c0e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005c11         pop        rbx
0000000000005c12         jmp        j_memset                                    ; memset
                        ; endp
0000000000005c17         align      32                                          ; End of unwind block (FDE at 0x8bc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005c20         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8bdc)
0000000000005c23         sub        rsp, 0x8
0000000000005c27         mul        rsi
0000000000005c2a         seto       dl
0000000000005c2d         test       rax, rax
0000000000005c30         js         loc_5c49

0000000000005c32         movzx      edx, dl
0000000000005c35         test       rdx, rdx
0000000000005c38         jne        loc_5c49

0000000000005c3a         call       j_calloc                                    ; calloc
0000000000005c3f         test       rax, rax
0000000000005c42         je         loc_5c49

0000000000005c44         add        rsp, 0x8
0000000000005c48         ret
                        ; endp

                     loc_5c49:
0000000000005c49         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5c4e:
0000000000005c4e         nop                                                    ; End of unwind block (FDE at 0x8bdc)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000005c50         push       rbp                                         ; Begin of unwind block (FDE at 0x8bf8), CODE XREF=clone_quoting_options+40
0000000000005c51         push       rbx
0000000000005c52         mov        rbp, rdi
0000000000005c55         mov        rdi, rsi
0000000000005c58         mov        rbx, rsi
0000000000005c5b         sub        rsp, 0x8
0000000000005c5f         call       xmalloc                                     ; xmalloc
0000000000005c64         add        rsp, 0x8
0000000000005c68         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000005c6b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000005c6e         pop        rbx
0000000000005c6f         pop        rbp
0000000000005c70         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005c73         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005c78         align      128                                         ; End of unwind block (FDE at 0x8bf8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005c80         push       rbx                                         ; Begin of unwind block (FDE at 0x8c20)
0000000000005c81         mov        rbx, rdi
0000000000005c84         call       j_strlen                                    ; strlen
0000000000005c89         mov        rdi, rbx
0000000000005c8c         lea        rsi, qword [rax+1]
0000000000005c90         pop        rbx
0000000000005c91         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000005c93         align      32                                          ; End of unwind block (FDE at 0x8c20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005ca0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x8c3c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000005ca7         sub        rsp, 0x8
0000000000005cab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005cb0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005cb2         call       j_dcgettext                                 ; dcgettext
0000000000005cb7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000005cbd         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x71f8
0000000000005cc4         mov        rcx, rax
0000000000005cc7         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005cc9         xor        eax, eax
0000000000005ccb         call       j_error                                     ; error
0000000000005cd0         call       j_abort                                     ; abort
                        ; endp
0000000000005cd5         align      32                                          ; End of unwind block (FDE at 0x8c3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     collate_error:
0000000000005ce0         push       r14                                         ; Begin of unwind block (FDE at 0x8c54), CODE XREF=xmemcoll+51, xmemcoll0+53
0000000000005ce2         push       r13
0000000000005ce4         mov        r14d, edi
0000000000005ce7         push       r12
0000000000005ce9         push       rbp
0000000000005cea         mov        r12, rdx
0000000000005ced         push       rbx
0000000000005cee         mov        rbx, rsi
0000000000005cf1         lea        rsi, qword [aStringComparis]                ; argument "msgid" for method j_dcgettext, "string comparison failed"
0000000000005cf8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005cfd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005cff         mov        r13, r8
0000000000005d02         mov        rbp, rcx
0000000000005d05         call       j_dcgettext                                 ; dcgettext
0000000000005d0a         mov        esi, r14d                                   ; argument "__errnum" for method j_error
0000000000005d0d         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000005d10         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005d12         xor        eax, eax
0000000000005d14         call       j_error                                     ; error
0000000000005d19         lea        rsi, qword [aSetLcallcToWor]                ; argument "msgid" for method j_dcgettext, "Set LC_ALL='C' to work around the problem."
0000000000005d20         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005d25         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005d27         call       j_dcgettext                                 ; dcgettext
0000000000005d2c         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005d2e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000005d31         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005d33         xor        eax, eax
0000000000005d35         call       j_error                                     ; error
0000000000005d3a         mov        rcx, r13
0000000000005d3d         mov        rdx, rbp
0000000000005d40         mov        esi, 0x8
0000000000005d45         mov        edi, 0x1
0000000000005d4a         call       quotearg_n_style_mem                        ; quotearg_n_style_mem
0000000000005d4f         mov        rcx, r12
0000000000005d52         mov        rdx, rbx
0000000000005d55         mov        esi, 0x8
0000000000005d5a         xor        edi, edi
0000000000005d5c         mov        rbp, rax
0000000000005d5f         call       quotearg_n_style_mem                        ; quotearg_n_style_mem
0000000000005d64         lea        rsi, qword [aTheStringsComp]                ; argument "msgid" for method j_dcgettext, "The strings compared were %s and %s."
0000000000005d6b         mov        rbx, rax
0000000000005d6e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005d73         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005d75         call       j_dcgettext                                 ; dcgettext
0000000000005d7a         mov        r8, rbp
0000000000005d7d         mov        rcx, rbx
0000000000005d80         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000005d86         pop        rbx
0000000000005d87         pop        rbp
0000000000005d88         pop        r12
0000000000005d8a         pop        r13
0000000000005d8c         pop        r14
0000000000005d8e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000005d91         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005d93         xor        eax, eax
0000000000005d95         jmp        j_error                                     ; error
                        ; endp
0000000000005d9a         align      32                                          ; End of unwind block (FDE at 0x8c54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemcoll:
0000000000005da0         push       r14                                         ; Begin of unwind block (FDE at 0x8c90), CODE XREF=different+118
0000000000005da2         push       r13
0000000000005da4         mov        r13, rcx
0000000000005da7         push       r12
0000000000005da9         push       rbp
0000000000005daa         mov        r12, rdx
0000000000005dad         push       rbx
0000000000005dae         mov        rbp, rsi
0000000000005db1         mov        rbx, rdi
0000000000005db4         call       memcoll                                     ; memcoll
0000000000005db9         mov        r14d, eax
0000000000005dbc         call       j___errno_location                          ; __errno_location
0000000000005dc1         mov        edi, dword [rax]
0000000000005dc3         test       edi, edi
0000000000005dc5         je         loc_5dd8

0000000000005dc7         mov        r8, r13
0000000000005dca         mov        rcx, r12
0000000000005dcd         mov        rdx, rbp
0000000000005dd0         mov        rsi, rbx
0000000000005dd3         call       collate_error                               ; collate_error

                     loc_5dd8:
0000000000005dd8         pop        rbx                                         ; CODE XREF=xmemcoll+37
0000000000005dd9         mov        eax, r14d
0000000000005ddc         pop        rbp
0000000000005ddd         pop        r12
0000000000005ddf         pop        r13
0000000000005de1         pop        r14
0000000000005de3         ret
                        ; endp
0000000000005de4         align      16                                          ; End of unwind block (FDE at 0x8c90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemcoll0:
0000000000005df0         push       r14                                         ; Begin of unwind block (FDE at 0x8ccc)
0000000000005df2         push       r13
0000000000005df4         mov        r14, rcx
0000000000005df7         push       r12
0000000000005df9         push       rbp
0000000000005dfa         mov        r12, rdx
0000000000005dfd         push       rbx
0000000000005dfe         mov        rbp, rdi
0000000000005e01         mov        rbx, rsi
0000000000005e04         call       memcoll0                                    ; memcoll0
0000000000005e09         mov        r13d, eax
0000000000005e0c         call       j___errno_location                          ; __errno_location
0000000000005e11         mov        edi, dword [rax]
0000000000005e13         test       edi, edi
0000000000005e15         je         loc_5e2a

0000000000005e17         lea        rdx, qword [rbx-1]
0000000000005e1b         lea        r8, qword [r14-1]
0000000000005e1f         mov        rcx, r12
0000000000005e22         mov        rsi, rbp
0000000000005e25         call       collate_error                               ; collate_error

                     loc_5e2a:
0000000000005e2a         pop        rbx                                         ; CODE XREF=xmemcoll0+37
0000000000005e2b         mov        eax, r13d
0000000000005e2e         pop        rbp
0000000000005e2f         pop        r12
0000000000005e31         pop        r13
0000000000005e33         pop        r14
0000000000005e35         ret
                        ; endp
0000000000005e36         align      64                                          ; End of unwind block (FDE at 0x8ccc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoul:
0000000000005e40         push       r15                                         ; Begin of unwind block (FDE at 0x8d0c), CODE XREF=main+2540, size_opt+45
0000000000005e42         push       r14
0000000000005e44         push       r13
0000000000005e46         push       r12
0000000000005e48         push       rbp
0000000000005e49         push       rbx
0000000000005e4a         sub        rsp, 0x28
0000000000005e4e         mov        rax, qword [fs:0x28]
0000000000005e57         mov        qword [rsp+0x58+var_40], rax
0000000000005e5c         xor        eax, eax
0000000000005e5e         cmp        edx, 0x24
0000000000005e61         ja         loc_61c5

0000000000005e67         lea        rax, qword [rsp+0x58+var_48]
0000000000005e6c         mov        r15, rsi
0000000000005e6f         test       rsi, rsi
0000000000005e72         mov        rbp, rdi
0000000000005e75         mov        dword [rsp+0x58+var_50], edx
0000000000005e79         mov        r14, rcx
0000000000005e7c         mov        r13, r8
0000000000005e7f         cmove      r15, rax
0000000000005e83         call       j___errno_location                          ; __errno_location
0000000000005e88         mov        dword [rax], 0x0
0000000000005e8e         mov        r12, rax
0000000000005e91         movzx      ebx, byte [rbp]
0000000000005e95         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000005e9a         mov        edx, dword [rsp+0x58+var_50]
0000000000005e9e         mov        rsi, qword [rax]
0000000000005ea1         mov        rax, rbp
0000000000005ea4         jmp        loc_5eb7
0000000000005ea6         align      16

                     loc_5eb0:
0000000000005eb0         add        rax, 0x1                                    ; CODE XREF=xstrtoul+127
0000000000005eb4         movzx      ebx, byte [rax]

                     loc_5eb7:
0000000000005eb7         movzx      ecx, bl                                     ; CODE XREF=xstrtoul+100
0000000000005eba         test       byte [rsi+rcx*2+1], 0x20
0000000000005ebf         jne        loc_5eb0

0000000000005ec1         cmp        bl, 0x2d
0000000000005ec4         je         loc_5f18

0000000000005ec6         mov        rsi, r15                                    ; argument "__endptr" for method j_strtoul
0000000000005ec9         mov        rdi, rbp                                    ; argument "__nptr" for method j_strtoul
0000000000005ecc         call       j_strtoul                                   ; strtoul
0000000000005ed1         mov        rcx, qword [r15]
0000000000005ed4         mov        rbx, rax
0000000000005ed7         cmp        rcx, rbp
0000000000005eda         je         loc_5f08

0000000000005edc         mov        eax, dword [r12]
0000000000005ee0         test       eax, eax
0000000000005ee2         je         loc_5f48

0000000000005ee4         cmp        eax, 0x22
0000000000005ee7         mov        ebp, 0x1
0000000000005eec         jne        loc_5f18

                     loc_5eee:
0000000000005eee         test       r13, r13                                    ; CODE XREF=xstrtoul+266
0000000000005ef1         je         loc_5efc

0000000000005ef3         movzx      r12d, byte [rcx]
0000000000005ef7         test       r12b, r12b
0000000000005efa         jne        loc_5f77

                     loc_5efc:
0000000000005efc         mov        qword [r14], rbx                            ; CODE XREF=xstrtoul+177
0000000000005eff         jmp        loc_5f1d
0000000000005f01         align      8

                     loc_5f08:
0000000000005f08         test       r13, r13                                    ; CODE XREF=xstrtoul+154
0000000000005f0b         mov        qword [rsp+0x58+var_50], rcx
0000000000005f10         jne        loc_5f50

0000000000005f12         nop        word [rax+rax]

                     loc_5f18:
0000000000005f18         mov        ebp, 0x4                                    ; CODE XREF=xstrtoul+132, xstrtoul+172, xstrtoul+280, xstrtoul+309

                     loc_5f1d:
0000000000005f1d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoul+191, xstrtoul+535, xstrtoul+546
0000000000005f22         xor        rdi, qword [fs:0x28]
0000000000005f2b         mov        eax, ebp
0000000000005f2d         jne        loc_61c0

0000000000005f33         add        rsp, 0x28
0000000000005f37         pop        rbx
0000000000005f38         pop        rbp
0000000000005f39         pop        r12
0000000000005f3b         pop        r13
0000000000005f3d         pop        r14
0000000000005f3f         pop        r15
0000000000005f41         ret
                        ; endp
0000000000005f42         align      8

                     loc_5f48:
0000000000005f48         xor        ebp, ebp                                    ; CODE XREF=xstrtoul+162
0000000000005f4a         jmp        loc_5eee
0000000000005f4c         align      16

                     loc_5f50:
0000000000005f50         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoul+208
0000000000005f55         test       r12b, r12b
0000000000005f58         je         loc_5f18

0000000000005f5a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
0000000000005f5e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005f61         xor        ebp, ebp
0000000000005f63         call       j_strchr                                    ; strchr
0000000000005f68         test       rax, rax
0000000000005f6b         mov        ebx, 0x1
0000000000005f70         mov        rcx, qword [rsp+0x58+var_50]
0000000000005f75         je         loc_5f18

                     loc_5f77:
0000000000005f77         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoul+186
0000000000005f7b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005f7e         mov        qword [rsp+0x58+var_50], rcx
0000000000005f83         call       j_strchr                                    ; strchr
0000000000005f88         test       rax, rax
0000000000005f8b         mov        rcx, qword [rsp+0x58+var_50]
0000000000005f90         je         loc_605c

0000000000005f96         lea        eax, dword [r12-0x45]
0000000000005f9b         cmp        al, 0x2f
0000000000005f9d         ja         loc_5ff0

0000000000005f9f         movabs     rdx, 0x814400308945
0000000000005fa9         bt         rdx, rax
0000000000005fad         jae        loc_5ff0

0000000000005faf         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000005fb4         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005fb7         mov        qword [rsp+0x58+var_50], rcx
0000000000005fbc         call       j_strchr                                    ; strchr
0000000000005fc1         test       rax, rax
0000000000005fc4         mov        rcx, qword [rsp+0x58+var_50]
0000000000005fc9         je         loc_5ff0

0000000000005fcb         movzx      eax, byte [rcx+1]
0000000000005fcf         cmp        al, 0x44
0000000000005fd1         je         loc_5fdf

0000000000005fd3         cmp        al, 0x69
0000000000005fd5         je         loc_61a8

0000000000005fdb         cmp        al, 0x42
0000000000005fdd         jne        loc_5ff0

                     loc_5fdf:
0000000000005fdf         mov        edi, 0x2                                    ; CODE XREF=xstrtoul+401
0000000000005fe4         mov        esi, 0x3e8
0000000000005fe9         jmp        loc_5ffa
0000000000005feb         align      16

                     loc_5ff0:
0000000000005ff0         mov        edi, 0x1                                    ; CODE XREF=xstrtoul+349, xstrtoul+365, xstrtoul+393, xstrtoul+413
0000000000005ff5         mov        esi, 0x400

                     loc_5ffa:
0000000000005ffa         sub        r12d, 0x42                                  ; CODE XREF=xstrtoul+425, xstrtoul+891
0000000000005ffe         cmp        r12b, 0x35
0000000000006002         ja         loc_605c

0000000000006004         lea        rdx, qword [switch_table_7b80]              ; switch_table_7b80
000000000000600b         movzx      r12d, r12b
000000000000600f         movsxd     rax, dword [rdx+r12*4]
0000000000006013         add        rax, rdx
0000000000006016         jmp        rax                                         ; switch statement using table at 0x7b80, with 54 cases, 0x6018,0x6040,0x605c,0x6067,0x607d,0x6094,0x60ba,0x60df,0x60ff,0x6120,0x6143,0x6166,0x617c

                     loc_6018:
0000000000006018         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoul+470
000000000000601b         mul        rsi
000000000000601e         jo         loc_6211

0000000000006024         xor        r8d, r8d

                     loc_6027:
0000000000006027         mul        rsi                                         ; CODE XREF=xstrtoul+846, xstrtoul+862, xstrtoul+987
000000000000602a         jo         loc_6202

0000000000006030         mov        rbx, rax

                     loc_6033:
0000000000006033         or         ebp, r8d                                    ; CODE XREF=xstrtoul+972
0000000000006036         nop        word [cs:rax+rax]

                     loc_6040:
0000000000006040         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoul+470, xstrtoul+571, xstrtoul+594, xstrtoul+632, xstrtoul+712, xstrtoul+727, xstrtoul+823
0000000000006043         mov        eax, ebp
0000000000006045         add        rcx, rdi
0000000000006048         or         eax, 0x2
000000000000604b         mov        qword [r15], rcx
000000000000604e         cmp        byte [rcx], 0x0
0000000000006051         mov        qword [r14], rbx
0000000000006054         cmovne     ebp, eax
0000000000006057         jmp        loc_5f1d

                     loc_605c:
000000000000605c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoul+336, xstrtoul+450, xstrtoul+470
000000000000605f         or         ebp, 0x2
0000000000006062         jmp        loc_5f1d

                     loc_6067:
0000000000006067         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoul+470
000000000000606c         mov        rax, rdx
000000000000606f         mul        rbx
0000000000006072         jo         loc_610e

0000000000006078         add        rbx, rbx
000000000000607b         jmp        loc_6040

                     loc_607d:
000000000000607d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoul+470
0000000000006082         mov        rax, rdx
0000000000006085         mul        rbx
0000000000006088         jo         loc_610e

000000000000608e         shl        rbx, 0x9
0000000000006092         jmp        loc_6040

                     loc_6094:
0000000000006094         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoul+470
000000000000609a         xor        r9d, r9d
000000000000609d         nop        dword [rax]

                     loc_60a0:
00000000000060a0         mov        rax, rbx                                    ; CODE XREF=xstrtoul+627
00000000000060a3         mul        rsi
00000000000060a6         mov        rbx, rax
00000000000060a9         jo         loc_623e

                     loc_60af:
00000000000060af         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1032
00000000000060b3         jne        loc_60a0

                     loc_60b5:
00000000000060b5         or         ebp, r9d                                    ; CODE XREF=xstrtoul+669, xstrtoul+701, xstrtoul+766, xstrtoul+801
00000000000060b8         jmp        loc_6040

                     loc_60ba:
00000000000060ba         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoul+470
00000000000060c0         xor        r9d, r9d
00000000000060c3         nop        dword [rax+rax]

                     loc_60c8:
00000000000060c8         mov        rax, rbx                                    ; CODE XREF=xstrtoul+667
00000000000060cb         mul        rsi
00000000000060ce         mov        rbx, rax
00000000000060d1         jo         loc_6220

                     loc_60d7:
00000000000060d7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1002
00000000000060db         jne        loc_60c8

00000000000060dd         jmp        loc_60b5

                     loc_60df:
00000000000060df         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoul+470
00000000000060e5         xor        r9d, r9d

                     loc_60e8:
00000000000060e8         mov        rax, rbx                                    ; CODE XREF=xstrtoul+699
00000000000060eb         mul        rsi
00000000000060ee         mov        rbx, rax
00000000000060f1         jo         loc_61f3

                     loc_60f7:
00000000000060f7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+957
00000000000060fb         jne        loc_60e8

00000000000060fd         jmp        loc_60b5

                     loc_60ff:
00000000000060ff         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoul+470
0000000000006102         mul        rsi
0000000000006105         mov        rbx, rax
0000000000006108         jno        loc_6040

                     loc_610e:
000000000000610e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoul+562, xstrtoul+584, xstrtoul+817
0000000000006113         or         rbx, 0xffffffffffffffff
0000000000006117         jmp        loc_6040
000000000000611c         align      32

                     loc_6120:
0000000000006120         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoul+470
0000000000006126         xor        r9d, r9d

                     loc_6129:
0000000000006129         mov        rax, rbx                                    ; CODE XREF=xstrtoul+764
000000000000612c         mul        rsi
000000000000612f         mov        rbx, rax
0000000000006132         jo         loc_622f

                     loc_6138:
0000000000006138         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1017
000000000000613c         jne        loc_6129

000000000000613e         jmp        loc_60b5

                     loc_6143:
0000000000006143         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoul+470
0000000000006149         xor        r9d, r9d

                     loc_614c:
000000000000614c         mov        rax, rbx                                    ; CODE XREF=xstrtoul+799
000000000000614f         mul        rsi
0000000000006152         mov        rbx, rax
0000000000006155         jo         loc_61e4

                     loc_615b:
000000000000615b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+942
000000000000615f         jne        loc_614c

0000000000006161         jmp        loc_60b5

                     loc_6166:
0000000000006166         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoul+470
000000000000616b         mov        rax, rdx
000000000000616e         mul        rbx
0000000000006171         jo         loc_610e

0000000000006173         shl        rbx, 0xa
0000000000006177         jmp        loc_6040

                     loc_617c:
000000000000617c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoul+470
000000000000617f         mul        rsi
0000000000006182         jo         loc_624d

0000000000006188         xor        r8d, r8d

                     loc_618b:
000000000000618b         mul        rsi                                         ; CODE XREF=xstrtoul+1047
000000000000618e         jno        loc_6027

0000000000006194         mov        r8d, 0x1
000000000000619a         or         rax, 0xffffffffffffffff
000000000000619e         jmp        loc_6027
00000000000061a3         align      8

                     loc_61a8:
00000000000061a8         xor        edi, edi                                    ; CODE XREF=xstrtoul+405
00000000000061aa         cmp        byte [rcx+2], 0x42
00000000000061ae         mov        esi, 0x400
00000000000061b3         sete       dil
00000000000061b7         lea        edi, dword [rdi+rdi+1]
00000000000061bb         jmp        loc_5ffa

                     loc_61c0:
00000000000061c0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoul+237
                        ; endp

                     loc_61c5:
00000000000061c5         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoul", CODE XREF=xstrtoul+33
00000000000061cc         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
00000000000061d3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
00000000000061da         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
00000000000061df         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_61e4:
00000000000061e4         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+789
00000000000061ea         or         rbx, 0xffffffffffffffff
00000000000061ee         jmp        loc_615b

                     loc_61f3:
00000000000061f3         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+689
00000000000061f9         or         rbx, 0xffffffffffffffff
00000000000061fd         jmp        loc_60f7

                     loc_6202:
0000000000006202         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+490
0000000000006208         or         rbx, 0xffffffffffffffff
000000000000620c         jmp        loc_6033

                     loc_6211:
0000000000006211         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoul+478
0000000000006215         mov        r8d, 0x1
000000000000621b         jmp        loc_6027

                     loc_6220:
0000000000006220         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+657
0000000000006226         or         rbx, 0xffffffffffffffff
000000000000622a         jmp        loc_60d7

                     loc_622f:
000000000000622f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+754
0000000000006235         or         rbx, 0xffffffffffffffff
0000000000006239         jmp        loc_6138

                     loc_623e:
000000000000623e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+617
0000000000006244         or         rbx, 0xffffffffffffffff
0000000000006248         jmp        loc_60af

                     loc_624d:
000000000000624d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+834
0000000000006253         or         rax, 0xffffffffffffffff
0000000000006257         jmp        loc_618b
000000000000625c         align      32                                          ; End of unwind block (FDE at 0x8d0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006260         push       r12                                         ; Begin of unwind block (FDE at 0x8d5c), CODE XREF=main+1182, close_stream+21
0000000000006262         push       rbp
0000000000006263         push       rbx
0000000000006264         mov        rbx, rdi
0000000000006267         call       j_fileno                                    ; fileno
000000000000626c         test       eax, eax
000000000000626e         mov        rdi, rbx
0000000000006271         js         loc_62c7

0000000000006273         call       j___freading                                ; __freading
0000000000006278         test       eax, eax
000000000000627a         jne        loc_62a8

                     loc_627c:
000000000000627c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000627f         call       rpl_fflush                                  ; rpl_fflush
0000000000006284         test       eax, eax
0000000000006286         je         loc_62c4

0000000000006288         call       j___errno_location                          ; __errno_location
000000000000628d         mov        r12d, dword [rax]
0000000000006290         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006293         mov        rbp, rax
0000000000006296         call       j_fclose                                    ; fclose
000000000000629b         test       r12d, r12d
000000000000629e         jne        loc_62d0

                     loc_62a0:
00000000000062a0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000062a1         pop        rbp
00000000000062a2         pop        r12
00000000000062a4         ret
                        ; endp
00000000000062a5         align      8

                     loc_62a8:
00000000000062a8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000062ab         call       j_fileno                                    ; fileno
00000000000062b0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000062b2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000062b7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000062b9         call       j_lseek                                     ; lseek
00000000000062be         cmp        rax, 0xffffffffffffffff
00000000000062c2         jne        loc_627c

                     loc_62c4:
00000000000062c4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_62c7:
00000000000062c7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000062c8         pop        rbp
00000000000062c9         pop        r12
00000000000062cb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_62d0:
00000000000062d0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000062d4         mov        eax, 0xffffffff
00000000000062d9         jmp        loc_62a0
00000000000062db         align      32                                          ; End of unwind block (FDE at 0x8d5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000062e0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8d94), CODE XREF=rpl_fclose+31
00000000000062e3         push       rbx
00000000000062e4         mov        rbx, rdi
00000000000062e7         je         loc_62fa

00000000000062e9         call       j___freading                                ; __freading
00000000000062ee         test       eax, eax
00000000000062f0         je         loc_62fa

00000000000062f2         test       dword [rbx], 0x100
00000000000062f8         jne        loc_6308

                     loc_62fa:
00000000000062fa         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000062fd         pop        rbx
00000000000062fe         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000006303         align      8

                     loc_6308:
0000000000006308         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000630b         mov        edx, 0x1
0000000000006310         xor        esi, esi
0000000000006312         call       rpl_fseeko                                  ; rpl_fseeko
0000000000006317         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000631a         pop        rbx
000000000000631b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006320         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x8d94), Begin of unwind block (FDE at 0x8db4), CODE XREF=rpl_fflush+50
0000000000006324         cmp        qword [rdi+0x10], rax
0000000000006328         je         loc_6330

                     j_j_fseeko:        // fseeko
000000000000632a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000632f         align      16

                     loc_6330:
0000000000006330         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006334         cmp        qword [rdi+0x28], rax
0000000000006338         jne        j_j_fseeko                                  ; fseeko

000000000000633a         cmp        qword [rdi+0x48], 0x0
000000000000633f         jne        j_j_fseeko                                  ; fseeko

0000000000006341         push       r12
0000000000006343         push       rbp
0000000000006344         mov        r12d, edx
0000000000006347         push       rbx
0000000000006348         mov        rbp, rsi
000000000000634b         mov        rbx, rdi
000000000000634e         call       j_fileno                                    ; fileno
0000000000006353         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006356         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006359         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000635b         call       j_lseek                                     ; lseek
0000000000006360         cmp        rax, 0xffffffffffffffff
0000000000006364         je         loc_6372

0000000000006366         and        dword [rbx], 0xffffffef
0000000000006369         mov        qword [rbx+0x90], rax
0000000000006370         xor        eax, eax

                     loc_6372:
0000000000006372         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006373         pop        rbp
0000000000006374         pop        r12
0000000000006376         ret
                        ; endp
0000000000006377         align      128                                         ; End of unwind block (FDE at 0x8db4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000006380         push       r13                                         ; Begin of unwind block (FDE at 0x8de4), CODE XREF=sub_3fd0+534
0000000000006382         push       r12
0000000000006384         mov        r13, rsi
0000000000006387         push       rbp
0000000000006388         push       rbx
0000000000006389         mov        rbx, rdi
000000000000638c         mov        r12, rdx
000000000000638f         sub        rsp, 0x18
0000000000006393         mov        rax, qword [fs:0x28]
000000000000639c         mov        qword [rsp+0x38+var_30], rax
00000000000063a1         xor        eax, eax
00000000000063a3         lea        rax, qword [rsp+0x38+var_34]
00000000000063a8         test       rdi, rdi
00000000000063ab         cmove      rbx, rax
00000000000063af         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000063b2         call       j_mbrtowc                                   ; mbrtowc
00000000000063b7         cmp        rax, 0xfffffffffffffffd
00000000000063bb         mov        rbp, rax
00000000000063be         jbe        loc_63e0

00000000000063c0         test       r12, r12
00000000000063c3         je         loc_63e0

00000000000063c5         xor        edi, edi
00000000000063c7         call       hard_locale                                 ; hard_locale
00000000000063cc         test       al, al
00000000000063ce         jne        loc_63e0

00000000000063d0         movzx      eax, byte [r13]
00000000000063d5         mov        ebp, 0x1
00000000000063da         mov        dword [rbx], eax
00000000000063dc         nop        dword [rax]

                     loc_63e0:
00000000000063e0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000063e5         xor        rdx, qword [fs:0x28]
00000000000063ee         mov        rax, rbp
00000000000063f1         jne        loc_63fe

00000000000063f3         add        rsp, 0x18
00000000000063f7         pop        rbx
00000000000063f8         pop        rbp
00000000000063f9         pop        r12
00000000000063fb         pop        r13
00000000000063fd         ret
                        ; endp

                     loc_63fe:
00000000000063fe         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000006403         align      16                                          ; End of unwind block (FDE at 0x8de4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000006410         push       r12                                         ; Begin of unwind block (FDE at 0x8e24), CODE XREF=close_stdout+13, close_stdout+51
0000000000006412         push       rbp
0000000000006413         mov        rbp, rdi
0000000000006416         push       rbx
0000000000006417         call       j___fpending                                ; __fpending
000000000000641c         mov        ebx, dword [rbp]
000000000000641f         mov        rdi, rbp
0000000000006422         mov        r12, rax
0000000000006425         call       rpl_fclose                                  ; rpl_fclose
000000000000642a         and        ebx, 0x20
000000000000642d         test       ebx, ebx
000000000000642f         jne        loc_6448

0000000000006431         test       eax, eax
0000000000006433         je         loc_643f

0000000000006435         test       r12, r12
0000000000006438         mov        eax, 0xffffffff
000000000000643d         je         loc_6478

                     loc_643f:
000000000000643f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000006440         pop        rbp
0000000000006441         pop        r12
0000000000006443         ret
                        ; endp
0000000000006444         align      8

                     loc_6448:
0000000000006448         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000644a         jne        loc_6468

000000000000644c         call       j___errno_location                          ; __errno_location
0000000000006451         mov        dword [rax], 0x0
0000000000006457         mov        eax, 0xffffffff
000000000000645c         pop        rbx
000000000000645d         pop        rbp
000000000000645e         pop        r12
0000000000006460         ret
                        ; endp
0000000000006461         align      8

                     loc_6468:
0000000000006468         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000006469         mov        eax, 0xffffffff
000000000000646e         pop        rbp
000000000000646f         pop        r12
0000000000006471         ret
                        ; endp
0000000000006472         align      8

                     loc_6478:
0000000000006478         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000647d         cmp        dword [rax], 0x9
0000000000006480         pop        rbx
0000000000006481         pop        rbp
0000000000006482         pop        r12
0000000000006484         setne      al
0000000000006487         movzx      eax, al
000000000000648a         neg        eax
000000000000648c         ret
                        ; endp
000000000000648d         align      16                                          ; End of unwind block (FDE at 0x8e24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000006490         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x8e74), CODE XREF=gettext_quote.part.1+11
0000000000006494         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000006499         call       j_nl_langinfo                               ; nl_langinfo
000000000000649e         test       rax, rax
00000000000064a1         je         loc_64c0

00000000000064a3         cmp        byte [rax], 0x0
00000000000064a6         lea        rdx, qword [aAscii]                         ; "ASCII"
00000000000064ad         cmove      rax, rdx
00000000000064b1         add        rsp, 0x8
00000000000064b5         ret
                        ; endp
00000000000064b6         align      64

                     loc_64c0:
00000000000064c0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
00000000000064c7         add        rsp, 0x8
00000000000064cb         ret
                        ; endp
00000000000064cc         align      16                                          ; End of unwind block (FDE at 0x8e74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcoll_loop:
00000000000064d0         push       r15                                         ; Begin of unwind block (FDE at 0x8e94), CODE XREF=memcoll+102
00000000000064d2         push       r14
00000000000064d4         mov        r14, rcx
00000000000064d7         push       r13
00000000000064d9         push       r12
00000000000064db         mov        r13, rsi
00000000000064de         push       rbp
00000000000064df         push       rbx
00000000000064e0         mov        r12, rdi
00000000000064e3         mov        rbp, rdx
00000000000064e6         sub        rsp, 0x8
00000000000064ea         call       j___errno_location                          ; __errno_location
00000000000064ef         mov        r15, rax
00000000000064f2         jmp        loc_6523
00000000000064f4         align      8

                     loc_64f8:
00000000000064f8         mov        rdi, r12                                    ; argument "__s" for method j_strlen, CODE XREF=strcoll_loop+103
00000000000064fb         call       j_strlen                                    ; strlen
0000000000006500         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
0000000000006503         lea        rbx, qword [rax+1]
0000000000006507         call       j_strlen                                    ; strlen
000000000000650c         add        rax, 0x1
0000000000006510         add        r12, rbx
0000000000006513         add        rbp, rax
0000000000006516         sub        r14, rax
0000000000006519         sub        r13, rbx
000000000000651c         je         loc_6550

000000000000651e         test       r14, r14
0000000000006521         je         loc_6570

                     loc_6523:
0000000000006523         mov        dword [r15], 0x0                            ; CODE XREF=strcoll_loop+34
000000000000652a         mov        rsi, rbp                                    ; argument "__s2" for method j_strcoll
000000000000652d         mov        rdi, r12                                    ; argument "__s1" for method j_strcoll
0000000000006530         call       j_strcoll                                   ; strcoll
0000000000006535         test       eax, eax
0000000000006537         je         loc_64f8

0000000000006539         add        rsp, 0x8
000000000000653d         pop        rbx
000000000000653e         pop        rbp
000000000000653f         pop        r12
0000000000006541         pop        r13
0000000000006543         pop        r14
0000000000006545         pop        r15
0000000000006547         ret
                        ; endp
0000000000006548         align      16

                     loc_6550:
0000000000006550         xor        eax, eax                                    ; CODE XREF=strcoll_loop+76
0000000000006552         test       r14, r14
0000000000006555         setne      al
0000000000006558         add        rsp, 0x8
000000000000655c         pop        rbx
000000000000655d         neg        eax
000000000000655f         pop        rbp
0000000000006560         pop        r12
0000000000006562         pop        r13
0000000000006564         pop        r14
0000000000006566         pop        r15
0000000000006568         ret
                        ; endp
0000000000006569         align      16

                     loc_6570:
0000000000006570         add        rsp, 0x8                                    ; CODE XREF=strcoll_loop+81
0000000000006574         mov        eax, 0x1
0000000000006579         pop        rbx
000000000000657a         pop        rbp
000000000000657b         pop        r12
000000000000657d         pop        r13
000000000000657f         pop        r14
0000000000006581         pop        r15
0000000000006583         ret
                        ; endp
0000000000006584         align      16                                          ; End of unwind block (FDE at 0x8e94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_40: int32_t, -64


                     memcoll:
0000000000006590         push       r15                                         ; Begin of unwind block (FDE at 0x8f0c), CODE XREF=xmemcoll+20
0000000000006592         push       r14
0000000000006594         mov        r15, rdx
0000000000006597         push       r13
0000000000006599         push       r12
000000000000659b         mov        r14, rdi
000000000000659e         push       rbp
000000000000659f         push       rbx
00000000000065a0         mov        rbp, rcx
00000000000065a3         mov        rbx, rsi
00000000000065a6         sub        rsp, 0x18
00000000000065aa         cmp        rsi, rcx
00000000000065ad         jne        loc_65c2

00000000000065af         mov        rdx, rsi                                    ; argument "__n" for method j_memcmp
00000000000065b2         mov        rsi, r15                                    ; argument "__s2" for method j_memcmp
00000000000065b5         call       j_memcmp                                    ; memcmp
00000000000065ba         test       eax, eax
00000000000065bc         mov        dword [rsp+0x48+var_40], eax
00000000000065c0         je         loc_6628

                     loc_65c2:
00000000000065c2         lea        r13, qword [r14+rbx]                        ; CODE XREF=memcoll+29
00000000000065c6         lea        r12, qword [r15+rbp]
00000000000065ca         lea        rcx, qword [rbp+1]
00000000000065ce         lea        rsi, qword [rbx+1]
00000000000065d2         mov        rdx, r15
00000000000065d5         mov        rdi, r14
00000000000065d8         movzx      r9d, byte [r13]
00000000000065dd         movzx      r8d, byte [r12]
00000000000065e2         mov        byte [r13], 0x0
00000000000065e7         mov        byte [r12], 0x0
00000000000065ec         mov        byte [rsp+0x48+var_39], r9b
00000000000065f1         mov        byte [rsp+0x48+var_40], r8b
00000000000065f6         call       strcoll_loop                                ; strcoll_loop
00000000000065fb         movzx      r9d, byte [rsp+0x48+var_39]
0000000000006601         movzx      r8d, byte [rsp+0x48+var_40]
0000000000006607         mov        edx, eax
0000000000006609         mov        byte [r13], r9b
000000000000660d         mov        byte [r12], r8b

                     loc_6611:
0000000000006611         add        rsp, 0x18                                   ; CODE XREF=memcoll+167
0000000000006615         mov        eax, edx
0000000000006617         pop        rbx
0000000000006618         pop        rbp
0000000000006619         pop        r12
000000000000661b         pop        r13
000000000000661d         pop        r14
000000000000661f         pop        r15
0000000000006621         ret
                        ; endp
0000000000006622         align      8

                     loc_6628:
0000000000006628         call       j___errno_location                          ; __errno_location, CODE XREF=memcoll+48
000000000000662d         mov        edx, dword [rsp+0x48+var_40]
0000000000006631         mov        dword [rax], 0x0
0000000000006637         jmp        loc_6611
0000000000006639         align      64                                          ; End of unwind block (FDE at 0x8f0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     memcoll0:
0000000000006640         push       r12                                         ; Begin of unwind block (FDE at 0x8f58), CODE XREF=xmemcoll0+20
0000000000006642         push       rbp
0000000000006643         mov        r12, rdx
0000000000006646         push       rbx
0000000000006647         mov        rbp, rdi
000000000000664a         mov        rbx, rsi
000000000000664d         sub        rsp, 0x10
0000000000006651         cmp        rsi, rcx
0000000000006654         jne        loc_666f

0000000000006656         mov        rdx, rsi                                    ; argument "__n" for method j_memcmp
0000000000006659         mov        rsi, r12                                    ; argument "__s2" for method j_memcmp
000000000000665c         mov        qword [rsp+0x28+var_20], rcx
0000000000006661         call       j_memcmp                                    ; memcmp
0000000000006666         test       eax, eax
0000000000006668         mov        rcx, qword [rsp+0x28+var_20]
000000000000666d         je         loc_6688

                     loc_666f:
000000000000666f         add        rsp, 0x10                                   ; CODE XREF=memcoll0+20
0000000000006673         mov        rdx, r12
0000000000006676         mov        rsi, rbx
0000000000006679         mov        rdi, rbp
000000000000667c         pop        rbx
000000000000667d         pop        rbp
000000000000667e         pop        r12
0000000000006680         jmp        strcoll_loop                                ; strcoll_loop
                        ; endp
0000000000006685         align      8

                     loc_6688:
0000000000006688         call       j___errno_location                          ; __errno_location, CODE XREF=memcoll0+45
000000000000668d         mov        dword [rax], 0x0
0000000000006693         add        rsp, 0x10
0000000000006697         xor        eax, eax
0000000000006699         pop        rbx
000000000000669a         pop        rbp
000000000000669b         pop        r12
000000000000669d         ret
                        ; endp
000000000000669e         align      32                                          ; End of unwind block (FDE at 0x8f58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
00000000000066a0         push       r15                                         ; Begin of unwind block (FDE at 0x8f9c), DATA XREF=_start+22
00000000000066a2         push       r14
00000000000066a4         mov        r15, rdx
00000000000066a7         push       r13
00000000000066a9         push       r12
00000000000066ab         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000066b2         push       rbp
00000000000066b3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000066ba         push       rbx
00000000000066bb         mov        r13d, edi
00000000000066be         mov        r14, rsi
00000000000066c1         sub        rbp, r12
00000000000066c4         sub        rsp, 0x8
00000000000066c8         sar        rbp, 0x3
00000000000066cc         call       _init                                       ; _init
00000000000066d1         test       rbp, rbp
00000000000066d4         je         loc_66f6

00000000000066d6         xor        ebx, ebx
00000000000066d8         nop        dword [rax+rax]

                     loc_66e0:
00000000000066e0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000066e3         mov        rsi, r14
00000000000066e6         mov        edi, r13d
00000000000066e9         call       qword [r12+rbx*8]
00000000000066ed         add        rbx, 0x1
00000000000066f1         cmp        rbp, rbx
00000000000066f4         jne        loc_66e0

                     loc_66f6:
00000000000066f6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000066fa         pop        rbx
00000000000066fb         pop        rbp
00000000000066fc         pop        r12
00000000000066fe         pop        r13
0000000000006700         pop        r14
0000000000006702         pop        r15
0000000000006704         ret
                        ; endp
0000000000006705         align      16                                          ; End of unwind block (FDE at 0x8f9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000006710         ret                                                    ; Begin of unwind block (FDE at 0x8fe4), DATA XREF=_start+15
                        ; endp
0000000000006712         align      32                                          ; End of unwind block (FDE at 0x8fe4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006720         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x8ffc), __dso_handle, CODE XREF=main+170
0000000000006727         xor        esi, esi
0000000000006729         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000672e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8ffc)
000000000000672f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6730; 0x6739[ (9 bytes)
        ; File offset : [26416; 26425[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006730         sub        rsp, 0x8
0000000000006734         add        rsp, 0x8
0000000000006738         ret
                        ; endp
0000000000006739         db  0x00 ; '.'
000000000000673a         db  0x00 ; '.'
000000000000673b         db  0x00 ; '.'
000000000000673c         db  0x00 ; '.'
000000000000673d         db  0x00 ; '.'
000000000000673e         db  0x00 ; '.'
000000000000673f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6740; 0x7c67[ (5415 bytes)
        ; File offset : [26432; 31847[ (5415 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006740         db  0x01 ; '.'
0000000000006741         db  0x00 ; '.'
0000000000006742         db  0x02 ; '.'
0000000000006743         db  0x00 ; '.'
                     aSS:
0000000000006744         db         "%s: %s", 0                                 ; DATA XREF=size_opt+97, close_stdout+108
                     a7lu:
000000000000674b         db         "%7lu ", 0                                  ; DATA XREF=writeline+104
0000000000006751         db  0x75 ; 'u'                                         ; DATA XREF=main+1870, usage+601, usage+916, usage+1100, usage+1119, usage+1153
0000000000006752         db  0x6e ; 'n'
0000000000006753         db  0x69 ; 'i'
0000000000006754         db  0x71 ; 'q'
0000000000006755         db  0x00 ; '.'
0000000000006756         db  0x5b ; '['                                         ; DATA XREF=usage+613
0000000000006757         db  0x00 ; '.'
                     aTestInvocation:
0000000000006758         db         "test invocation", 0                        ; DATA XREF=usage+652
                     aMulticallInvoc:
0000000000006768         db         "Multi-call invocation", 0                  ; DATA XREF=usage+700
                     aSha224sum:
000000000000677e         db         "sha224sum", 0                              ; DATA XREF=usage+717
                     aSha2Utilities:
0000000000006788         db         "sha2 utilities", 0                         ; DATA XREF=usage+729
                     aSha256sum:
0000000000006797         db         "sha256sum", 0                              ; DATA XREF=usage+620
                     aSha384sum:
00000000000067a1         db         "sha384sum", 0                              ; DATA XREF=usage+664
                     aSha512sum:
00000000000067ab         db         "sha512sum", 0                              ; DATA XREF=usage+688
                     aNsOnlineHelpSn:
00000000000067b5         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+802
00000000000067cc         db  0x47 ; 'G'                                         ; DATA XREF=main+1863, usage+830, usage+1023, emit_bug_reporting_address+68
00000000000067cd         db  0x4e ; 'N'
00000000000067ce         db  0x55 ; 'U'
00000000000067cf         db  0x20 ; ' '
                     aCoreutils:
00000000000067d0         db         "coreutils", 0                              ; DATA XREF=main+123, main+135, usage+676
00000000000067da         db  0x65 ; 'e'                                         ; DATA XREF=usage+869, usage+1062
00000000000067db         db  0x6e ; 'n'
00000000000067dc         db  0x5f ; '_'
00000000000067dd         db  0x00 ; '.'
                     aFullDocumentat:
00000000000067de         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+897, usage+1086
                     aPosixlycorrect:
00000000000067f9         db         "POSIXLY_CORRECT", 0                        ; DATA XREF=main+11
                     aUsrlocalsharel:
0000000000006809         db         "/usr/local/share/locale", 0                ; DATA XREF=main+116
                     a0123456789dcdf:
0000000000006821         db         "-0123456789Dcdf:is:uw:z", 0                ; DATA XREF=main+362
                     aExtraOperandS:
0000000000006839         db         "extra operand %s", 0                       ; DATA XREF=main+2593
                     aAllrepeated:
000000000000684a         db         "--all-repeated", 0                         ; DATA XREF=main+1383
                     aGroup:
0000000000006859         db         "--group", 0                                ; DATA XREF=main+1465
                     aDavidMackenzie:
0000000000006861         db         "David MacKenzie", 0                        ; DATA XREF=main+1849
                     aRichardMStallm:
0000000000006871         db         "Richard M. Stallman", 0                    ; DATA XREF=main+1856
0000000000006885         db  0x77 ; 'w'                                         ; DATA XREF=main+769
0000000000006886         db  0x00 ; '.'
                     aErrorReadingS:
0000000000006887         db         "error reading %s", 0                       ; DATA XREF=main+2259
                     aCount:
0000000000006898         db         "count", 0
                     aIgnorecase:
000000000000689e         db         "ignore-case", 0
                     aUnique:
00000000000068aa         db         "unique", 0
                     aSkipfields:
00000000000068b1         db         "skip-fields", 0
                     aSkipchars:
00000000000068bd         db         "skip-chars", 0
                     aCheckchars:
00000000000068c8         db         "check-chars", 0
                     aZeroterminated:
00000000000068d4         db         "zero-terminated", 0
                     aHelp:
00000000000068e4         db         "help", 0
                     aVersion:
00000000000068e9         db         "version", 0
                     aPrepend:
00000000000068f1         db         "prepend", 0
                     aAppend:
00000000000068f9         db         "append", 0
                     aSeparate:
0000000000006900         db         "separate", 0
                     aBoth:
0000000000006909         db         "both", 0
                     aNone:
000000000000690e         db         "none", 0
0000000000006913         align      8
                     aTrySHelpForMor:
0000000000006918         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000693f         align      64
                     aUsageSOptionIn:
0000000000006940         db         "Usage: %s [OPTION]... [INPUT [OUTPUT]]\n", 0 ; DATA XREF=usage+93
                     aFilterAdjacent:
0000000000006968         db         "Filter adjacent matching lines from INPUT (or standard input),\nwriting to OUTPUT (or standard output).\n\nWith no options, matching lines are merged to the first occurrence.\n", 0 ; DATA XREF=usage+132
0000000000006a15         align      8
                     aNmandatoryArgu:
0000000000006a18         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+169
0000000000006a63         align      8
                     aCCountPrefixLi:
0000000000006a68         db         "  -c, --count           prefix lines by the number of occurrences\n  -d, --repeated        only print duplicate lines, one for each group\n", 0 ; DATA XREF=usage+206
0000000000006af2         align      8
                     aDPrintAllDupli:
0000000000006af8         db         "  -D                    print all duplicate lines\n      --all-repeated[=METHOD]  like -D, but allow separating groups\n                                 with an empty line;\n                                 METHOD={none(default),prepend,separate}\n", 0 ; DATA XREF=usage+243
0000000000006bed         align      16
                     aFSkipfieldsnAv:
0000000000006bf0         db         "  -f, --skip-fields=N   avoid comparing the first N fields\n", 0 ; DATA XREF=usage+280
0000000000006c2c         align      16
                     aGroupmethodSho:
0000000000006c30         db         "      --group[=METHOD]  show all items, separating groups with an empty line;\n                          METHOD={separate(default),prepend,append,both}\n", 0 ; DATA XREF=usage+317
                     aIIgnorecaseIgn:
0000000000006cc8         db         "  -i, --ignore-case     ignore differences in case when comparing\n  -s, --skip-chars=N    avoid comparing the first N characters\n  -u, --unique          only print unique lines\n", 0 ; DATA XREF=usage+354
0000000000006d7a         align      128
                     aZZeroterminate:
0000000000006d80         db         "  -z, --zero-terminated     line delimiter is NUL, not newline\n", 0 ; DATA XREF=usage+391
                     aWCheckcharsnCo:
0000000000006dc0         db         "  -w, --check-chars=N   compare no more than N characters in lines\n", 0 ; DATA XREF=usage+428
0000000000006e04         align      8
                     aHelpDisplayThi:
0000000000006e08         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+465
0000000000006e35         align      8
                     aVersionOutputV:
0000000000006e38         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+502
0000000000006e6e         align      16
                     aNaFieldIsARunO:
0000000000006e70         db         "\nA field is a run of blanks (usually spaces and/or TABs), then non-blank\ncharacters.  Fields are skipped before chars.\n", 0 ; DATA XREF=usage+539
                     aNnoteUniqDoesN:
0000000000006ee8         db         "\nNote: 'uniq' does not detect repeated lines unless they are adjacent.\nYou may want to sort the input first, or use 'sort -u' without 'uniq'.\nAlso, comparisons honor the rules specified by 'LC_COLLATE'.\n", 0 ; DATA XREF=usage+576
0000000000006fb4         align      8
                     aHttpswwwgnuorg:
0000000000006fb8         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+823, usage+923, usage+1016, usage+1126, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000006fe0         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1167
0000000000007027         align      8
                     aOrAvailableLoc:
0000000000007028         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+966
000000000000705b         align      32
                     aInvalidNumberO:
0000000000007060         db         "invalid number of fields to skip", 0       ; DATA XREF=main+446
0000000000007081         align      8
                     aInvalidNumberO_7088:        // aInvalidNumberO
0000000000007088         db         "invalid number of bytes to skip", 0        ; DATA XREF=main+1308
                     aInvalidNumberO_70a8:        // aInvalidNumberO
00000000000070a8         db         "invalid number of bytes to compare", 0     ; DATA XREF=main+576
00000000000070cb         align      16
                     aGroupIsMutuall:
00000000000070d0         db         "--group is mutually exclusive with -c/-d/-D/-u", 0 ; DATA XREF=main+2677
00000000000070ff         align      256
                     aGroupingAndPri:
0000000000007100         db         "grouping and printing repeat counts is meaningless", 0 ; DATA XREF=main+677
0000000000007133         align      8
                     aPrintingAllDup:
0000000000007138         db         "printing all duplicated lines and repeat counts is meaningless", 0 ; DATA XREF=main+1529
0000000000007177         db  0x00 ; '.'
0000000000007178         db  0x00 ; '.'
0000000000007179         db  0x00 ; '.'
000000000000717a         db  0x00 ; '.'
000000000000717b         db  0x00 ; '.'
000000000000717c         db  0x00 ; '.'
000000000000717d         db  0x00 ; '.'
000000000000717e         db  0x00 ; '.'
000000000000717f         db  0x00 ; '.'
                     grouping_method_map:
0000000000007180         db  0x01 ; '.'                                         ; DATA XREF=main+1458, main+1483
0000000000007181         db  0x00 ; '.'
0000000000007182         db  0x00 ; '.'
0000000000007183         db  0x00 ; '.'
0000000000007184         db  0x02 ; '.'
0000000000007185         db  0x00 ; '.'
0000000000007186         db  0x00 ; '.'
0000000000007187         db  0x00 ; '.'
0000000000007188         db  0x03 ; '.'
0000000000007189         db  0x00 ; '.'
000000000000718a         db  0x00 ; '.'
000000000000718b         db  0x00 ; '.'
000000000000718c         db  0x04 ; '.'
000000000000718d         db  0x00 ; '.'
000000000000718e         db  0x00 ; '.'
000000000000718f         db  0x00 ; '.'
                     delimit_method_map:
0000000000007190         db  0x00 ; '.'                                         ; DATA XREF=main+1376, main+1407
0000000000007191         db  0x00 ; '.'
0000000000007192         db  0x00 ; '.'
0000000000007193         db  0x00 ; '.'
0000000000007194         db  0x01 ; '.'
0000000000007195         db  0x00 ; '.'
0000000000007196         db  0x00 ; '.'
0000000000007197         db  0x00 ; '.'
0000000000007198         db  0x02 ; '.'
0000000000007199         db  0x00 ; '.'
000000000000719a         db  0x00 ; '.'
000000000000719b         db  0x00 ; '.'
                     a831:
000000000000719c         db         "8.31", 0                                   ; DATA XREF=Version
                     aInvalidArgumen:
00000000000071a1         db         "invalid argument %s for %s", 0             ; DATA XREF=argmatch_invalid+96
                     aAmbiguousArgum:
00000000000071bc         db         "ambiguous argument %s for %s", 0           ; DATA XREF=argmatch_invalid+21
                     aValidArguments:
00000000000071d9         db         "Valid arguments are:", 0                   ; DATA XREF=argmatch_valid+18
                     aNS:
00000000000071ee         db         "\n  - %s", 0                               ; DATA XREF=argmatch_valid+102
00000000000071f6         db  0x2c ; ','                                         ; DATA XREF=argmatch_valid+181
00000000000071f7         db  0x20 ; ' '
00000000000071f8         db  0x25 ; '%'                                         ; DATA XREF=main+1961, main+2745, close_stdout+143, xalloc_die+29
00000000000071f9         db  0x73 ; 's'
00000000000071fa         db  0x00 ; '.'
                     aWriteError:
00000000000071fb         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aDevnull:
0000000000007207         db         "/dev/null", 0                              ; DATA XREF=protect_fd+4
0000000000007211         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000007212         db  0x00 ; '.'
                     aPosix:
0000000000007213         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aPosix2version:
0000000000007219         db         "_POSIX2_VERSION", 0                        ; DATA XREF=posix2_version+1
0000000000007229         align      16
                     aANullArgv0WasP:
0000000000007230         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000007268         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000007270         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000007271         db  0x74 ; 't'
0000000000007272         db  0x2d ; '-'                                         ; DATA XREF=main+60, main+695, main+743
0000000000007273         db  0x00 ; '.'
0000000000007274         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000007275         db  0x80 ; '.'
0000000000007276         db  0x98 ; '.'
0000000000007277         db  0x00 ; '.'
0000000000007278         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000007279         db  0x80 ; '.'
000000000000727a         db  0x99 ; '.'
000000000000727b         db  0x00 ; '.'
000000000000727c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000727d         db  0x07 ; '.'
000000000000727e         db  0x65 ; 'e'
000000000000727f         db  0x00 ; '.'
0000000000007280         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000007281         db  0xaf ; '.'
0000000000007282         db  0x00 ; '.'
0000000000007283         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3fd0+1451, sub_3fd0+1493, sub_3fd0+2429
0000000000007284         db  0x00 ; '.'
0000000000007285         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3fd0+132, sub_3fd0+1338, sub_3fd0+1670, sub_3fd0+1697, sub_3fd0+2352
0000000000007286         db  0x00 ; '.'
0000000000007287         db  0x60 ; '`'                                         ; DATA XREF=sub_3fd0+1627, sub_3fd0+1654
0000000000007288         db  0x00 ; '.'
                     aLiteral:
0000000000007289         db         "literal", 0
                     aShell:
0000000000007291         db         "shell", 0
                     aShellalways:
0000000000007297         db         "shell-always", 0
00000000000072a4         db  0x73 ; 's'
00000000000072a5         db  0x68 ; 'h'
00000000000072a6         db  0x65 ; 'e'
00000000000072a7         db  0x6c ; 'l'
00000000000072a8         db  0x6c ; 'l'
00000000000072a9         db  0x2d ; '-'
                     aEscape:
00000000000072aa         db         "escape", 0
                     aShellescapealw:
00000000000072b1         db         "shell-escape-always", 0
00000000000072c5         db  0x63 ; 'c'
00000000000072c6         db  0x00 ; '.'
                     aCmaybe:
00000000000072c7         db         "c-maybe", 0
                     aClocale:
00000000000072cf         db         "clocale", 0
00000000000072d7         align      32
                     switch_table_72e0:        // switch_table
00000000000072e0         dd         quotearg_buffer_restyled.loc_46ca-switch_table_72e0, quotearg_buffer_restyled.loc_3923-switch_table_72e0, quotearg_buffer_restyled.loc_48f8-switch_table_72e0, quotearg_buffer_restyled.loc_4704-switch_table_72e0 ; switch table used at 0x3921 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
00000000000072f0         dd         quotearg_buffer_restyled.loc_44f4-switch_table_72e0, quotearg_buffer_restyled.loc_4550-switch_table_72e0, quotearg_buffer_restyled.loc_45a5-switch_table_72e0, quotearg_buffer_restyled.loc_45ea-switch_table_72e0
0000000000007300         dd         3 dup (quotearg_buffer_restyled.loc_4624-switch_table_72e0)
000000000000730c         db  0x94 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000730d         db  0xc9 ; '.'
000000000000730e         db  0xff ; '.'
000000000000730f         db  0xff ; '.'
0000000000007310         db  0x7c ; '|'
0000000000007311         db  0xca ; '.'
0000000000007312         db  0xff ; '.'
0000000000007313         db  0xff ; '.'
0000000000007314         db  0x7c ; '|'
0000000000007315         db  0xca ; '.'
0000000000007316         db  0xff ; '.'
0000000000007317         db  0xff ; '.'
0000000000007318         db  0x7c ; '|'
0000000000007319         db  0xca ; '.'
000000000000731a         db  0xff ; '.'
000000000000731b         db  0xff ; '.'
000000000000731c         db  0x7c ; '|'
000000000000731d         db  0xca ; '.'
000000000000731e         db  0xff ; '.'
000000000000731f         db  0xff ; '.'
0000000000007320         db  0x7c ; '|'
0000000000007321         db  0xca ; '.'
0000000000007322         db  0xff ; '.'
0000000000007323         db  0xff ; '.'
0000000000007324         db  0x7c ; '|'
0000000000007325         db  0xca ; '.'
0000000000007326         db  0xff ; '.'
0000000000007327         db  0xff ; '.'
0000000000007328         db  0xd4 ; '.'
0000000000007329         db  0xc9 ; '.'
000000000000732a         db  0xff ; '.'
000000000000732b         db  0xff ; '.'
000000000000732c         db  0xdc ; '.'
000000000000732d         db  0xc8 ; '.'
000000000000732e         db  0xff ; '.'
000000000000732f         db  0xff ; '.'
0000000000007330         db  0x9c ; '.'
0000000000007331         db  0xc8 ; '.'
0000000000007332         db  0xff ; '.'
0000000000007333         db  0xff ; '.'
0000000000007334         db  0x64 ; 'd'
0000000000007335         db  0xca ; '.'
0000000000007336         db  0xff ; '.'
0000000000007337         db  0xff ; '.'
0000000000007338         db  0x54 ; 'T'
0000000000007339         db  0xca ; '.'
000000000000733a         db  0xff ; '.'
000000000000733b         db  0xff ; '.'
000000000000733c         db  0x44 ; 'D'
000000000000733d         db  0xca ; '.'
000000000000733e         db  0xff ; '.'
000000000000733f         db  0xff ; '.'
0000000000007340         db  0x34 ; '4'
0000000000007341         db  0xca ; '.'
0000000000007342         db  0xff ; '.'
0000000000007343         db  0xff ; '.'
0000000000007344         db  0x7c ; '|'
0000000000007345         db  0xca ; '.'
0000000000007346         db  0xff ; '.'
0000000000007347         db  0xff ; '.'
0000000000007348         db  0x7c ; '|'
0000000000007349         db  0xca ; '.'
000000000000734a         db  0xff ; '.'
000000000000734b         db  0xff ; '.'
000000000000734c         db  0x7c ; '|'
000000000000734d         db  0xca ; '.'
000000000000734e         db  0xff ; '.'
000000000000734f         db  0xff ; '.'
0000000000007350         db  0x7c ; '|'
0000000000007351         db  0xca ; '.'
0000000000007352         db  0xff ; '.'
0000000000007353         db  0xff ; '.'
0000000000007354         db  0x7c ; '|'
0000000000007355         db  0xca ; '.'
0000000000007356         db  0xff ; '.'
0000000000007357         db  0xff ; '.'
0000000000007358         db  0x7c ; '|'
0000000000007359         db  0xca ; '.'
000000000000735a         db  0xff ; '.'
000000000000735b         db  0xff ; '.'
000000000000735c         db  0x7c ; '|'
000000000000735d         db  0xca ; '.'
000000000000735e         db  0xff ; '.'
000000000000735f         db  0xff ; '.'
0000000000007360         db  0x7c ; '|'
0000000000007361         db  0xca ; '.'
0000000000007362         db  0xff ; '.'
0000000000007363         db  0xff ; '.'
0000000000007364         db  0x7c ; '|'
0000000000007365         db  0xca ; '.'
0000000000007366         db  0xff ; '.'
0000000000007367         db  0xff ; '.'
0000000000007368         db  0x7c ; '|'
0000000000007369         db  0xca ; '.'
000000000000736a         db  0xff ; '.'
000000000000736b         db  0xff ; '.'
000000000000736c         db  0x7c ; '|'
000000000000736d         db  0xca ; '.'
000000000000736e         db  0xff ; '.'
000000000000736f         db  0xff ; '.'
0000000000007370         db  0x7c ; '|'
0000000000007371         db  0xca ; '.'
0000000000007372         db  0xff ; '.'
0000000000007373         db  0xff ; '.'
0000000000007374         db  0x7c ; '|'
0000000000007375         db  0xca ; '.'
0000000000007376         db  0xff ; '.'
0000000000007377         db  0xff ; '.'
0000000000007378         db  0x7c ; '|'
0000000000007379         db  0xca ; '.'
000000000000737a         db  0xff ; '.'
000000000000737b         db  0xff ; '.'
000000000000737c         db  0x7c ; '|'
000000000000737d         db  0xca ; '.'
000000000000737e         db  0xff ; '.'
000000000000737f         db  0xff ; '.'
0000000000007380         db  0x7c ; '|'
0000000000007381         db  0xca ; '.'
0000000000007382         db  0xff ; '.'
0000000000007383         db  0xff ; '.'
0000000000007384         db  0x7c ; '|'
0000000000007385         db  0xca ; '.'
0000000000007386         db  0xff ; '.'
0000000000007387         db  0xff ; '.'
0000000000007388         db  0x7c ; '|'
0000000000007389         db  0xca ; '.'
000000000000738a         db  0xff ; '.'
000000000000738b         db  0xff ; '.'
000000000000738c         db  0x24 ; '$'
000000000000738d         db  0xca ; '.'
000000000000738e         db  0xff ; '.'
000000000000738f         db  0xff ; '.'
0000000000007390         db  0x14 ; '.'
0000000000007391         db  0xca ; '.'
0000000000007392         db  0xff ; '.'
0000000000007393         db  0xff ; '.'
0000000000007394         db  0x14 ; '.'
0000000000007395         db  0xca ; '.'
0000000000007396         db  0xff ; '.'
0000000000007397         db  0xff ; '.'
0000000000007398         db  0xe4 ; '.'
0000000000007399         db  0xc9 ; '.'
000000000000739a         db  0xff ; '.'
000000000000739b         db  0xff ; '.'
000000000000739c         db  0x14 ; '.'
000000000000739d         db  0xca ; '.'
000000000000739e         db  0xff ; '.'
000000000000739f         db  0xff ; '.'
00000000000073a0         db  0xbc ; '.'
00000000000073a1         db  0xc9 ; '.'
00000000000073a2         db  0xff ; '.'
00000000000073a3         db  0xff ; '.'
00000000000073a4         db  0x14 ; '.'
00000000000073a5         db  0xca ; '.'
00000000000073a6         db  0xff ; '.'
00000000000073a7         db  0xff ; '.'
00000000000073a8         db  0x77 ; 'w'
00000000000073a9         db  0xc8 ; '.'
00000000000073aa         db  0xff ; '.'
00000000000073ab         db  0xff ; '.'
00000000000073ac         db  0x14 ; '.'
00000000000073ad         db  0xca ; '.'
00000000000073ae         db  0xff ; '.'
00000000000073af         db  0xff ; '.'
00000000000073b0         db  0x14 ; '.'
00000000000073b1         db  0xca ; '.'
00000000000073b2         db  0xff ; '.'
00000000000073b3         db  0xff ; '.'
00000000000073b4         db  0x14 ; '.'
00000000000073b5         db  0xca ; '.'
00000000000073b6         db  0xff ; '.'
00000000000073b7         db  0xff ; '.'
00000000000073b8         db  0xbc ; '.'
00000000000073b9         db  0xc9 ; '.'
00000000000073ba         db  0xff ; '.'
00000000000073bb         db  0xff ; '.'
00000000000073bc         db  0xbc ; '.'
00000000000073bd         db  0xc9 ; '.'
00000000000073be         db  0xff ; '.'
00000000000073bf         db  0xff ; '.'
00000000000073c0         db  0xbc ; '.'
00000000000073c1         db  0xc9 ; '.'
00000000000073c2         db  0xff ; '.'
00000000000073c3         db  0xff ; '.'
00000000000073c4         db  0xbc ; '.'
00000000000073c5         db  0xc9 ; '.'
00000000000073c6         db  0xff ; '.'
00000000000073c7         db  0xff ; '.'
00000000000073c8         db  0xbc ; '.'
00000000000073c9         db  0xc9 ; '.'
00000000000073ca         db  0xff ; '.'
00000000000073cb         db  0xff ; '.'
00000000000073cc         db  0xbc ; '.'
00000000000073cd         db  0xc9 ; '.'
00000000000073ce         db  0xff ; '.'
00000000000073cf         db  0xff ; '.'
00000000000073d0         db  0xbc ; '.'
00000000000073d1         db  0xc9 ; '.'
00000000000073d2         db  0xff ; '.'
00000000000073d3         db  0xff ; '.'
00000000000073d4         db  0xbc ; '.'
00000000000073d5         db  0xc9 ; '.'
00000000000073d6         db  0xff ; '.'
00000000000073d7         db  0xff ; '.'
00000000000073d8         db  0xbc ; '.'
00000000000073d9         db  0xc9 ; '.'
00000000000073da         db  0xff ; '.'
00000000000073db         db  0xff ; '.'
00000000000073dc         db  0xbc ; '.'
00000000000073dd         db  0xc9 ; '.'
00000000000073de         db  0xff ; '.'
00000000000073df         db  0xff ; '.'
00000000000073e0         db  0xbc ; '.'
00000000000073e1         db  0xc9 ; '.'
00000000000073e2         db  0xff ; '.'
00000000000073e3         db  0xff ; '.'
00000000000073e4         db  0xbc ; '.'
00000000000073e5         db  0xc9 ; '.'
00000000000073e6         db  0xff ; '.'
00000000000073e7         db  0xff ; '.'
00000000000073e8         db  0xbc ; '.'
00000000000073e9         db  0xc9 ; '.'
00000000000073ea         db  0xff ; '.'
00000000000073eb         db  0xff ; '.'
00000000000073ec         db  0xbc ; '.'
00000000000073ed         db  0xc9 ; '.'
00000000000073ee         db  0xff ; '.'
00000000000073ef         db  0xff ; '.'
00000000000073f0         db  0xbc ; '.'
00000000000073f1         db  0xc9 ; '.'
00000000000073f2         db  0xff ; '.'
00000000000073f3         db  0xff ; '.'
00000000000073f4         db  0xbc ; '.'
00000000000073f5         db  0xc9 ; '.'
00000000000073f6         db  0xff ; '.'
00000000000073f7         db  0xff ; '.'
00000000000073f8         db  0x14 ; '.'
00000000000073f9         db  0xca ; '.'
00000000000073fa         db  0xff ; '.'
00000000000073fb         db  0xff ; '.'
00000000000073fc         db  0x14 ; '.'
00000000000073fd         db  0xca ; '.'
00000000000073fe         db  0xff ; '.'
00000000000073ff         db  0xff ; '.'
0000000000007400         db  0x14 ; '.'
0000000000007401         db  0xca ; '.'
0000000000007402         db  0xff ; '.'
0000000000007403         db  0xff ; '.'
0000000000007404         db  0x14 ; '.'
0000000000007405         db  0xca ; '.'
0000000000007406         db  0xff ; '.'
0000000000007407         db  0xff ; '.'
0000000000007408         db  0x47 ; 'G'
0000000000007409         db  0xc8 ; '.'
000000000000740a         db  0xff ; '.'
000000000000740b         db  0xff ; '.'
000000000000740c         db  0x7c ; '|'
000000000000740d         db  0xca ; '.'
000000000000740e         db  0xff ; '.'
000000000000740f         db  0xff ; '.'
0000000000007410         db  0xbc ; '.'
0000000000007411         db  0xc9 ; '.'
0000000000007412         db  0xff ; '.'
0000000000007413         db  0xff ; '.'
0000000000007414         db  0xbc ; '.'
0000000000007415         db  0xc9 ; '.'
0000000000007416         db  0xff ; '.'
0000000000007417         db  0xff ; '.'
0000000000007418         db  0xbc ; '.'
0000000000007419         db  0xc9 ; '.'
000000000000741a         db  0xff ; '.'
000000000000741b         db  0xff ; '.'
000000000000741c         db  0xbc ; '.'
000000000000741d         db  0xc9 ; '.'
000000000000741e         db  0xff ; '.'
000000000000741f         db  0xff ; '.'
0000000000007420         db  0xbc ; '.'
0000000000007421         db  0xc9 ; '.'
0000000000007422         db  0xff ; '.'
0000000000007423         db  0xff ; '.'
0000000000007424         db  0xbc ; '.'
0000000000007425         db  0xc9 ; '.'
0000000000007426         db  0xff ; '.'
0000000000007427         db  0xff ; '.'
0000000000007428         db  0xbc ; '.'
0000000000007429         db  0xc9 ; '.'
000000000000742a         db  0xff ; '.'
000000000000742b         db  0xff ; '.'
000000000000742c         db  0xbc ; '.'
000000000000742d         db  0xc9 ; '.'
000000000000742e         db  0xff ; '.'
000000000000742f         db  0xff ; '.'
0000000000007430         db  0xbc ; '.'
0000000000007431         db  0xc9 ; '.'
0000000000007432         db  0xff ; '.'
0000000000007433         db  0xff ; '.'
0000000000007434         db  0xbc ; '.'
0000000000007435         db  0xc9 ; '.'
0000000000007436         db  0xff ; '.'
0000000000007437         db  0xff ; '.'
0000000000007438         db  0xbc ; '.'
0000000000007439         db  0xc9 ; '.'
000000000000743a         db  0xff ; '.'
000000000000743b         db  0xff ; '.'
000000000000743c         db  0xbc ; '.'
000000000000743d         db  0xc9 ; '.'
000000000000743e         db  0xff ; '.'
000000000000743f         db  0xff ; '.'
0000000000007440         db  0xbc ; '.'
0000000000007441         db  0xc9 ; '.'
0000000000007442         db  0xff ; '.'
0000000000007443         db  0xff ; '.'
0000000000007444         db  0xbc ; '.'
0000000000007445         db  0xc9 ; '.'
0000000000007446         db  0xff ; '.'
0000000000007447         db  0xff ; '.'
0000000000007448         db  0xbc ; '.'
0000000000007449         db  0xc9 ; '.'
000000000000744a         db  0xff ; '.'
000000000000744b         db  0xff ; '.'
000000000000744c         db  0xbc ; '.'
000000000000744d         db  0xc9 ; '.'
000000000000744e         db  0xff ; '.'
000000000000744f         db  0xff ; '.'
0000000000007450         db  0xbc ; '.'
0000000000007451         db  0xc9 ; '.'
0000000000007452         db  0xff ; '.'
0000000000007453         db  0xff ; '.'
0000000000007454         db  0xbc ; '.'
0000000000007455         db  0xc9 ; '.'
0000000000007456         db  0xff ; '.'
0000000000007457         db  0xff ; '.'
0000000000007458         db  0xbc ; '.'
0000000000007459         db  0xc9 ; '.'
000000000000745a         db  0xff ; '.'
000000000000745b         db  0xff ; '.'
000000000000745c         db  0xbc ; '.'
000000000000745d         db  0xc9 ; '.'
000000000000745e         db  0xff ; '.'
000000000000745f         db  0xff ; '.'
0000000000007460         db  0xbc ; '.'
0000000000007461         db  0xc9 ; '.'
0000000000007462         db  0xff ; '.'
0000000000007463         db  0xff ; '.'
0000000000007464         db  0xbc ; '.'
0000000000007465         db  0xc9 ; '.'
0000000000007466         db  0xff ; '.'
0000000000007467         db  0xff ; '.'
0000000000007468         db  0xbc ; '.'
0000000000007469         db  0xc9 ; '.'
000000000000746a         db  0xff ; '.'
000000000000746b         db  0xff ; '.'
000000000000746c         db  0xbc ; '.'
000000000000746d         db  0xc9 ; '.'
000000000000746e         db  0xff ; '.'
000000000000746f         db  0xff ; '.'
0000000000007470         db  0xbc ; '.'
0000000000007471         db  0xc9 ; '.'
0000000000007472         db  0xff ; '.'
0000000000007473         db  0xff ; '.'
0000000000007474         db  0xbc ; '.'
0000000000007475         db  0xc9 ; '.'
0000000000007476         db  0xff ; '.'
0000000000007477         db  0xff ; '.'
0000000000007478         db  0x14 ; '.'
0000000000007479         db  0xca ; '.'
000000000000747a         db  0xff ; '.'
000000000000747b         db  0xff ; '.'
000000000000747c         db  0xec ; '.'
000000000000747d         db  0xc8 ; '.'
000000000000747e         db  0xff ; '.'
000000000000747f         db  0xff ; '.'
0000000000007480         db  0xbc ; '.'
0000000000007481         db  0xc9 ; '.'
0000000000007482         db  0xff ; '.'
0000000000007483         db  0xff ; '.'
0000000000007484         db  0x14 ; '.'
0000000000007485         db  0xca ; '.'
0000000000007486         db  0xff ; '.'
0000000000007487         db  0xff ; '.'
0000000000007488         db  0xbc ; '.'
0000000000007489         db  0xc9 ; '.'
000000000000748a         db  0xff ; '.'
000000000000748b         db  0xff ; '.'
000000000000748c         db  0x14 ; '.'
000000000000748d         db  0xca ; '.'
000000000000748e         db  0xff ; '.'
000000000000748f         db  0xff ; '.'
0000000000007490         db  0xbc ; '.'
0000000000007491         db  0xc9 ; '.'
0000000000007492         db  0xff ; '.'
0000000000007493         db  0xff ; '.'
0000000000007494         db  0xbc ; '.'
0000000000007495         db  0xc9 ; '.'
0000000000007496         db  0xff ; '.'
0000000000007497         db  0xff ; '.'
0000000000007498         db  0xbc ; '.'
0000000000007499         db  0xc9 ; '.'
000000000000749a         db  0xff ; '.'
000000000000749b         db  0xff ; '.'
000000000000749c         db  0xbc ; '.'
000000000000749d         db  0xc9 ; '.'
000000000000749e         db  0xff ; '.'
000000000000749f         db  0xff ; '.'
00000000000074a0         db  0xbc ; '.'
00000000000074a1         db  0xc9 ; '.'
00000000000074a2         db  0xff ; '.'
00000000000074a3         db  0xff ; '.'
00000000000074a4         db  0xbc ; '.'
00000000000074a5         db  0xc9 ; '.'
00000000000074a6         db  0xff ; '.'
00000000000074a7         db  0xff ; '.'
00000000000074a8         db  0xbc ; '.'
00000000000074a9         db  0xc9 ; '.'
00000000000074aa         db  0xff ; '.'
00000000000074ab         db  0xff ; '.'
00000000000074ac         db  0xbc ; '.'
00000000000074ad         db  0xc9 ; '.'
00000000000074ae         db  0xff ; '.'
00000000000074af         db  0xff ; '.'
00000000000074b0         db  0xbc ; '.'
00000000000074b1         db  0xc9 ; '.'
00000000000074b2         db  0xff ; '.'
00000000000074b3         db  0xff ; '.'
00000000000074b4         db  0xbc ; '.'
00000000000074b5         db  0xc9 ; '.'
00000000000074b6         db  0xff ; '.'
00000000000074b7         db  0xff ; '.'
00000000000074b8         db  0xbc ; '.'
00000000000074b9         db  0xc9 ; '.'
00000000000074ba         db  0xff ; '.'
00000000000074bb         db  0xff ; '.'
00000000000074bc         db  0xbc ; '.'
00000000000074bd         db  0xc9 ; '.'
00000000000074be         db  0xff ; '.'
00000000000074bf         db  0xff ; '.'
00000000000074c0         db  0xbc ; '.'
00000000000074c1         db  0xc9 ; '.'
00000000000074c2         db  0xff ; '.'
00000000000074c3         db  0xff ; '.'
00000000000074c4         db  0xbc ; '.'
00000000000074c5         db  0xc9 ; '.'
00000000000074c6         db  0xff ; '.'
00000000000074c7         db  0xff ; '.'
00000000000074c8         db  0xbc ; '.'
00000000000074c9         db  0xc9 ; '.'
00000000000074ca         db  0xff ; '.'
00000000000074cb         db  0xff ; '.'
00000000000074cc         db  0xbc ; '.'
00000000000074cd         db  0xc9 ; '.'
00000000000074ce         db  0xff ; '.'
00000000000074cf         db  0xff ; '.'
00000000000074d0         db  0xbc ; '.'
00000000000074d1         db  0xc9 ; '.'
00000000000074d2         db  0xff ; '.'
00000000000074d3         db  0xff ; '.'
00000000000074d4         db  0xbc ; '.'
00000000000074d5         db  0xc9 ; '.'
00000000000074d6         db  0xff ; '.'
00000000000074d7         db  0xff ; '.'
00000000000074d8         db  0xbc ; '.'
00000000000074d9         db  0xc9 ; '.'
00000000000074da         db  0xff ; '.'
00000000000074db         db  0xff ; '.'
00000000000074dc         db  0xbc ; '.'
00000000000074dd         db  0xc9 ; '.'
00000000000074de         db  0xff ; '.'
00000000000074df         db  0xff ; '.'
00000000000074e0         db  0xbc ; '.'
00000000000074e1         db  0xc9 ; '.'
00000000000074e2         db  0xff ; '.'
00000000000074e3         db  0xff ; '.'
00000000000074e4         db  0xbc ; '.'
00000000000074e5         db  0xc9 ; '.'
00000000000074e6         db  0xff ; '.'
00000000000074e7         db  0xff ; '.'
00000000000074e8         db  0xbc ; '.'
00000000000074e9         db  0xc9 ; '.'
00000000000074ea         db  0xff ; '.'
00000000000074eb         db  0xff ; '.'
00000000000074ec         db  0xbc ; '.'
00000000000074ed         db  0xc9 ; '.'
00000000000074ee         db  0xff ; '.'
00000000000074ef         db  0xff ; '.'
00000000000074f0         db  0xbc ; '.'
00000000000074f1         db  0xc9 ; '.'
00000000000074f2         db  0xff ; '.'
00000000000074f3         db  0xff ; '.'
00000000000074f4         db  0xbc ; '.'
00000000000074f5         db  0xc9 ; '.'
00000000000074f6         db  0xff ; '.'
00000000000074f7         db  0xff ; '.'
00000000000074f8         db  0x77 ; 'w'
00000000000074f9         db  0xc7 ; '.'
00000000000074fa         db  0xff ; '.'
00000000000074fb         db  0xff ; '.'
00000000000074fc         db  0x14 ; '.'
00000000000074fd         db  0xca ; '.'
00000000000074fe         db  0xff ; '.'
00000000000074ff         db  0xff ; '.'
0000000000007500         db  0x77 ; 'w'
0000000000007501         db  0xc7 ; '.'
0000000000007502         db  0xff ; '.'
0000000000007503         db  0xff ; '.'
0000000000007504         db  0xe4 ; '.'
0000000000007505         db  0xc9 ; '.'
0000000000007506         db  0xff ; '.'
0000000000007507         db  0xff ; '.'
0000000000007508         db  0x68 ; 'h'                                         ; DATA XREF=sub_3d70+137
0000000000007509         db  0xc9 ; '.'
000000000000750a         db  0xff ; '.'
000000000000750b         db  0xff ; '.'
000000000000750c         db  0x78 ; 'x'
000000000000750d         db  0xc8 ; '.'
000000000000750e         db  0xff ; '.'
000000000000750f         db  0xff ; '.'
0000000000007510         db  0x78 ; 'x'
0000000000007511         db  0xc8 ; '.'
0000000000007512         db  0xff ; '.'
0000000000007513         db  0xff ; '.'
0000000000007514         db  0x78 ; 'x'
0000000000007515         db  0xc8 ; '.'
0000000000007516         db  0xff ; '.'
0000000000007517         db  0xff ; '.'
0000000000007518         db  0x78 ; 'x'
0000000000007519         db  0xc8 ; '.'
000000000000751a         db  0xff ; '.'
000000000000751b         db  0xff ; '.'
000000000000751c         db  0x78 ; 'x'
000000000000751d         db  0xc8 ; '.'
000000000000751e         db  0xff ; '.'
000000000000751f         db  0xff ; '.'
0000000000007520         db  0x78 ; 'x'
0000000000007521         db  0xc8 ; '.'
0000000000007522         db  0xff ; '.'
0000000000007523         db  0xff ; '.'
0000000000007524         db  0x58 ; 'X'
0000000000007525         db  0xc9 ; '.'
0000000000007526         db  0xff ; '.'
0000000000007527         db  0xff ; '.'
0000000000007528         db  0xa8 ; '.'
0000000000007529         db  0xca ; '.'
000000000000752a         db  0xff ; '.'
000000000000752b         db  0xff ; '.'
000000000000752c         db  0x90 ; '.'
000000000000752d         db  0xca ; '.'
000000000000752e         db  0xff ; '.'
000000000000752f         db  0xff ; '.'
0000000000007530         db  0x40 ; '@'
0000000000007531         db  0xc9 ; '.'
0000000000007532         db  0xff ; '.'
0000000000007533         db  0xff ; '.'
0000000000007534         db  0x80 ; '.'
0000000000007535         db  0xca ; '.'
0000000000007536         db  0xff ; '.'
0000000000007537         db  0xff ; '.'
0000000000007538         db  0x28 ; '('
0000000000007539         db  0xc9 ; '.'
000000000000753a         db  0xff ; '.'
000000000000753b         db  0xff ; '.'
000000000000753c         db  0x68 ; 'h'
000000000000753d         db  0xca ; '.'
000000000000753e         db  0xff ; '.'
000000000000753f         db  0xff ; '.'
0000000000007540         db  0x78 ; 'x'
0000000000007541         db  0xc8 ; '.'
0000000000007542         db  0xff ; '.'
0000000000007543         db  0xff ; '.'
0000000000007544         db  0x78 ; 'x'
0000000000007545         db  0xc8 ; '.'
0000000000007546         db  0xff ; '.'
0000000000007547         db  0xff ; '.'
0000000000007548         db  0x78 ; 'x'
0000000000007549         db  0xc8 ; '.'
000000000000754a         db  0xff ; '.'
000000000000754b         db  0xff ; '.'
000000000000754c         db  0x78 ; 'x'
000000000000754d         db  0xc8 ; '.'
000000000000754e         db  0xff ; '.'
000000000000754f         db  0xff ; '.'
0000000000007550         db  0x78 ; 'x'
0000000000007551         db  0xc8 ; '.'
0000000000007552         db  0xff ; '.'
0000000000007553         db  0xff ; '.'
0000000000007554         db  0x78 ; 'x'
0000000000007555         db  0xc8 ; '.'
0000000000007556         db  0xff ; '.'
0000000000007557         db  0xff ; '.'
0000000000007558         db  0x78 ; 'x'
0000000000007559         db  0xc8 ; '.'
000000000000755a         db  0xff ; '.'
000000000000755b         db  0xff ; '.'
000000000000755c         db  0x78 ; 'x'
000000000000755d         db  0xc8 ; '.'
000000000000755e         db  0xff ; '.'
000000000000755f         db  0xff ; '.'
0000000000007560         db  0x78 ; 'x'
0000000000007561         db  0xc8 ; '.'
0000000000007562         db  0xff ; '.'
0000000000007563         db  0xff ; '.'
0000000000007564         db  0x78 ; 'x'
0000000000007565         db  0xc8 ; '.'
0000000000007566         db  0xff ; '.'
0000000000007567         db  0xff ; '.'
0000000000007568         db  0x78 ; 'x'
0000000000007569         db  0xc8 ; '.'
000000000000756a         db  0xff ; '.'
000000000000756b         db  0xff ; '.'
000000000000756c         db  0x78 ; 'x'
000000000000756d         db  0xc8 ; '.'
000000000000756e         db  0xff ; '.'
000000000000756f         db  0xff ; '.'
0000000000007570         db  0x78 ; 'x'
0000000000007571         db  0xc8 ; '.'
0000000000007572         db  0xff ; '.'
0000000000007573         db  0xff ; '.'
0000000000007574         db  0x78 ; 'x'
0000000000007575         db  0xc8 ; '.'
0000000000007576         db  0xff ; '.'
0000000000007577         db  0xff ; '.'
0000000000007578         db  0x78 ; 'x'
0000000000007579         db  0xc8 ; '.'
000000000000757a         db  0xff ; '.'
000000000000757b         db  0xff ; '.'
000000000000757c         db  0x78 ; 'x'
000000000000757d         db  0xc8 ; '.'
000000000000757e         db  0xff ; '.'
000000000000757f         db  0xff ; '.'
0000000000007580         db  0x78 ; 'x'
0000000000007581         db  0xc8 ; '.'
0000000000007582         db  0xff ; '.'
0000000000007583         db  0xff ; '.'
0000000000007584         db  0x78 ; 'x'
0000000000007585         db  0xc8 ; '.'
0000000000007586         db  0xff ; '.'
0000000000007587         db  0xff ; '.'
0000000000007588         db  0x50 ; 'P'
0000000000007589         db  0xca ; '.'
000000000000758a         db  0xff ; '.'
000000000000758b         db  0xff ; '.'
000000000000758c         db  0x38 ; '8'
000000000000758d         db  0xca ; '.'
000000000000758e         db  0xff ; '.'
000000000000758f         db  0xff ; '.'
0000000000007590         db  0x38 ; '8'
0000000000007591         db  0xca ; '.'
0000000000007592         db  0xff ; '.'
0000000000007593         db  0xff ; '.'
0000000000007594         db  0x20 ; ' '
0000000000007595         db  0xca ; '.'
0000000000007596         db  0xff ; '.'
0000000000007597         db  0xff ; '.'
0000000000007598         db  0x38 ; '8'
0000000000007599         db  0xca ; '.'
000000000000759a         db  0xff ; '.'
000000000000759b         db  0xff ; '.'
000000000000759c         db  0x08 ; '.'
000000000000759d         db  0xca ; '.'
000000000000759e         db  0xff ; '.'
000000000000759f         db  0xff ; '.'
00000000000075a0         db  0x38 ; '8'
00000000000075a1         db  0xca ; '.'
00000000000075a2         db  0xff ; '.'
00000000000075a3         db  0xff ; '.'
00000000000075a4         db  0x78 ; 'x'
00000000000075a5         db  0xc6 ; '.'
00000000000075a6         db  0xff ; '.'
00000000000075a7         db  0xff ; '.'
00000000000075a8         db  0x38 ; '8'
00000000000075a9         db  0xca ; '.'
00000000000075aa         db  0xff ; '.'
00000000000075ab         db  0xff ; '.'
00000000000075ac         db  0x38 ; '8'
00000000000075ad         db  0xca ; '.'
00000000000075ae         db  0xff ; '.'
00000000000075af         db  0xff ; '.'
00000000000075b0         db  0x38 ; '8'
00000000000075b1         db  0xca ; '.'
00000000000075b2         db  0xff ; '.'
00000000000075b3         db  0xff ; '.'
00000000000075b4         db  0x08 ; '.'
00000000000075b5         db  0xca ; '.'
00000000000075b6         db  0xff ; '.'
00000000000075b7         db  0xff ; '.'
00000000000075b8         db  0x08 ; '.'
00000000000075b9         db  0xca ; '.'
00000000000075ba         db  0xff ; '.'
00000000000075bb         db  0xff ; '.'
00000000000075bc         db  0x08 ; '.'
00000000000075bd         db  0xca ; '.'
00000000000075be         db  0xff ; '.'
00000000000075bf         db  0xff ; '.'
00000000000075c0         db  0x08 ; '.'
00000000000075c1         db  0xca ; '.'
00000000000075c2         db  0xff ; '.'
00000000000075c3         db  0xff ; '.'
00000000000075c4         db  0x08 ; '.'
00000000000075c5         db  0xca ; '.'
00000000000075c6         db  0xff ; '.'
00000000000075c7         db  0xff ; '.'
00000000000075c8         db  0x08 ; '.'
00000000000075c9         db  0xca ; '.'
00000000000075ca         db  0xff ; '.'
00000000000075cb         db  0xff ; '.'
00000000000075cc         db  0x08 ; '.'
00000000000075cd         db  0xca ; '.'
00000000000075ce         db  0xff ; '.'
00000000000075cf         db  0xff ; '.'
00000000000075d0         db  0x08 ; '.'
00000000000075d1         db  0xca ; '.'
00000000000075d2         db  0xff ; '.'
00000000000075d3         db  0xff ; '.'
00000000000075d4         db  0x08 ; '.'
00000000000075d5         db  0xca ; '.'
00000000000075d6         db  0xff ; '.'
00000000000075d7         db  0xff ; '.'
00000000000075d8         db  0x08 ; '.'
00000000000075d9         db  0xca ; '.'
00000000000075da         db  0xff ; '.'
00000000000075db         db  0xff ; '.'
00000000000075dc         db  0x08 ; '.'
00000000000075dd         db  0xca ; '.'
00000000000075de         db  0xff ; '.'
00000000000075df         db  0xff ; '.'
00000000000075e0         db  0x08 ; '.'
00000000000075e1         db  0xca ; '.'
00000000000075e2         db  0xff ; '.'
00000000000075e3         db  0xff ; '.'
00000000000075e4         db  0x08 ; '.'
00000000000075e5         db  0xca ; '.'
00000000000075e6         db  0xff ; '.'
00000000000075e7         db  0xff ; '.'
00000000000075e8         db  0x08 ; '.'
00000000000075e9         db  0xca ; '.'
00000000000075ea         db  0xff ; '.'
00000000000075eb         db  0xff ; '.'
00000000000075ec         db  0x08 ; '.'
00000000000075ed         db  0xca ; '.'
00000000000075ee         db  0xff ; '.'
00000000000075ef         db  0xff ; '.'
00000000000075f0         db  0x08 ; '.'
00000000000075f1         db  0xca ; '.'
00000000000075f2         db  0xff ; '.'
00000000000075f3         db  0xff ; '.'
00000000000075f4         db  0x38 ; '8'
00000000000075f5         db  0xca ; '.'
00000000000075f6         db  0xff ; '.'
00000000000075f7         db  0xff ; '.'
00000000000075f8         db  0x38 ; '8'
00000000000075f9         db  0xca ; '.'
00000000000075fa         db  0xff ; '.'
00000000000075fb         db  0xff ; '.'
00000000000075fc         db  0x38 ; '8'
00000000000075fd         db  0xca ; '.'
00000000000075fe         db  0xff ; '.'
00000000000075ff         db  0xff ; '.'
0000000000007600         db  0x38 ; '8'
0000000000007601         db  0xca ; '.'
0000000000007602         db  0xff ; '.'
0000000000007603         db  0xff ; '.'
0000000000007604         db  0x48 ; 'H'
0000000000007605         db  0xc6 ; '.'
0000000000007606         db  0xff ; '.'
0000000000007607         db  0xff ; '.'
0000000000007608         db  0x78 ; 'x'
0000000000007609         db  0xc8 ; '.'
000000000000760a         db  0xff ; '.'
000000000000760b         db  0xff ; '.'
000000000000760c         db  0x08 ; '.'
000000000000760d         db  0xca ; '.'
000000000000760e         db  0xff ; '.'
000000000000760f         db  0xff ; '.'
0000000000007610         db  0x08 ; '.'
0000000000007611         db  0xca ; '.'
0000000000007612         db  0xff ; '.'
0000000000007613         db  0xff ; '.'
0000000000007614         db  0x08 ; '.'
0000000000007615         db  0xca ; '.'
0000000000007616         db  0xff ; '.'
0000000000007617         db  0xff ; '.'
0000000000007618         db  0x08 ; '.'
0000000000007619         db  0xca ; '.'
000000000000761a         db  0xff ; '.'
000000000000761b         db  0xff ; '.'
000000000000761c         db  0x08 ; '.'
000000000000761d         db  0xca ; '.'
000000000000761e         db  0xff ; '.'
000000000000761f         db  0xff ; '.'
0000000000007620         db  0x08 ; '.'
0000000000007621         db  0xca ; '.'
0000000000007622         db  0xff ; '.'
0000000000007623         db  0xff ; '.'
0000000000007624         db  0x08 ; '.'
0000000000007625         db  0xca ; '.'
0000000000007626         db  0xff ; '.'
0000000000007627         db  0xff ; '.'
0000000000007628         db  0x08 ; '.'
0000000000007629         db  0xca ; '.'
000000000000762a         db  0xff ; '.'
000000000000762b         db  0xff ; '.'
000000000000762c         db  0x08 ; '.'
000000000000762d         db  0xca ; '.'
000000000000762e         db  0xff ; '.'
000000000000762f         db  0xff ; '.'
0000000000007630         db  0x08 ; '.'
0000000000007631         db  0xca ; '.'
0000000000007632         db  0xff ; '.'
0000000000007633         db  0xff ; '.'
0000000000007634         db  0x08 ; '.'
0000000000007635         db  0xca ; '.'
0000000000007636         db  0xff ; '.'
0000000000007637         db  0xff ; '.'
0000000000007638         db  0x08 ; '.'
0000000000007639         db  0xca ; '.'
000000000000763a         db  0xff ; '.'
000000000000763b         db  0xff ; '.'
000000000000763c         db  0x08 ; '.'
000000000000763d         db  0xca ; '.'
000000000000763e         db  0xff ; '.'
000000000000763f         db  0xff ; '.'
0000000000007640         db  0x08 ; '.'
0000000000007641         db  0xca ; '.'
0000000000007642         db  0xff ; '.'
0000000000007643         db  0xff ; '.'
0000000000007644         db  0x08 ; '.'
0000000000007645         db  0xca ; '.'
0000000000007646         db  0xff ; '.'
0000000000007647         db  0xff ; '.'
0000000000007648         db  0x08 ; '.'
0000000000007649         db  0xca ; '.'
000000000000764a         db  0xff ; '.'
000000000000764b         db  0xff ; '.'
000000000000764c         db  0x08 ; '.'
000000000000764d         db  0xca ; '.'
000000000000764e         db  0xff ; '.'
000000000000764f         db  0xff ; '.'
0000000000007650         db  0x08 ; '.'
0000000000007651         db  0xca ; '.'
0000000000007652         db  0xff ; '.'
0000000000007653         db  0xff ; '.'
0000000000007654         db  0x08 ; '.'
0000000000007655         db  0xca ; '.'
0000000000007656         db  0xff ; '.'
0000000000007657         db  0xff ; '.'
0000000000007658         db  0x08 ; '.'
0000000000007659         db  0xca ; '.'
000000000000765a         db  0xff ; '.'
000000000000765b         db  0xff ; '.'
000000000000765c         db  0x08 ; '.'
000000000000765d         db  0xca ; '.'
000000000000765e         db  0xff ; '.'
000000000000765f         db  0xff ; '.'
0000000000007660         db  0x08 ; '.'
0000000000007661         db  0xca ; '.'
0000000000007662         db  0xff ; '.'
0000000000007663         db  0xff ; '.'
0000000000007664         db  0x08 ; '.'
0000000000007665         db  0xca ; '.'
0000000000007666         db  0xff ; '.'
0000000000007667         db  0xff ; '.'
0000000000007668         db  0x08 ; '.'
0000000000007669         db  0xca ; '.'
000000000000766a         db  0xff ; '.'
000000000000766b         db  0xff ; '.'
000000000000766c         db  0x08 ; '.'
000000000000766d         db  0xca ; '.'
000000000000766e         db  0xff ; '.'
000000000000766f         db  0xff ; '.'
0000000000007670         db  0x08 ; '.'
0000000000007671         db  0xca ; '.'
0000000000007672         db  0xff ; '.'
0000000000007673         db  0xff ; '.'
0000000000007674         db  0x38 ; '8'
0000000000007675         db  0xca ; '.'
0000000000007676         db  0xff ; '.'
0000000000007677         db  0xff ; '.'
0000000000007678         db  0x08 ; '.'
0000000000007679         db  0xc9 ; '.'
000000000000767a         db  0xff ; '.'
000000000000767b         db  0xff ; '.'
000000000000767c         db  0x08 ; '.'
000000000000767d         db  0xca ; '.'
000000000000767e         db  0xff ; '.'
000000000000767f         db  0xff ; '.'
0000000000007680         db  0x38 ; '8'
0000000000007681         db  0xca ; '.'
0000000000007682         db  0xff ; '.'
0000000000007683         db  0xff ; '.'
0000000000007684         db  0x08 ; '.'
0000000000007685         db  0xca ; '.'
0000000000007686         db  0xff ; '.'
0000000000007687         db  0xff ; '.'
0000000000007688         db  0x38 ; '8'
0000000000007689         db  0xca ; '.'
000000000000768a         db  0xff ; '.'
000000000000768b         db  0xff ; '.'
000000000000768c         db  0x08 ; '.'
000000000000768d         db  0xca ; '.'
000000000000768e         db  0xff ; '.'
000000000000768f         db  0xff ; '.'
0000000000007690         db  0x08 ; '.'
0000000000007691         db  0xca ; '.'
0000000000007692         db  0xff ; '.'
0000000000007693         db  0xff ; '.'
0000000000007694         db  0x08 ; '.'
0000000000007695         db  0xca ; '.'
0000000000007696         db  0xff ; '.'
0000000000007697         db  0xff ; '.'
0000000000007698         db  0x08 ; '.'
0000000000007699         db  0xca ; '.'
000000000000769a         db  0xff ; '.'
000000000000769b         db  0xff ; '.'
000000000000769c         db  0x08 ; '.'
000000000000769d         db  0xca ; '.'
000000000000769e         db  0xff ; '.'
000000000000769f         db  0xff ; '.'
00000000000076a0         db  0x08 ; '.'
00000000000076a1         db  0xca ; '.'
00000000000076a2         db  0xff ; '.'
00000000000076a3         db  0xff ; '.'
00000000000076a4         db  0x08 ; '.'
00000000000076a5         db  0xca ; '.'
00000000000076a6         db  0xff ; '.'
00000000000076a7         db  0xff ; '.'
00000000000076a8         db  0x08 ; '.'
00000000000076a9         db  0xca ; '.'
00000000000076aa         db  0xff ; '.'
00000000000076ab         db  0xff ; '.'
00000000000076ac         db  0x08 ; '.'
00000000000076ad         db  0xca ; '.'
00000000000076ae         db  0xff ; '.'
00000000000076af         db  0xff ; '.'
00000000000076b0         db  0x08 ; '.'
00000000000076b1         db  0xca ; '.'
00000000000076b2         db  0xff ; '.'
00000000000076b3         db  0xff ; '.'
00000000000076b4         db  0x08 ; '.'
00000000000076b5         db  0xca ; '.'
00000000000076b6         db  0xff ; '.'
00000000000076b7         db  0xff ; '.'
00000000000076b8         db  0x08 ; '.'
00000000000076b9         db  0xca ; '.'
00000000000076ba         db  0xff ; '.'
00000000000076bb         db  0xff ; '.'
00000000000076bc         db  0x08 ; '.'
00000000000076bd         db  0xca ; '.'
00000000000076be         db  0xff ; '.'
00000000000076bf         db  0xff ; '.'
00000000000076c0         db  0x08 ; '.'
00000000000076c1         db  0xca ; '.'
00000000000076c2         db  0xff ; '.'
00000000000076c3         db  0xff ; '.'
00000000000076c4         db  0x08 ; '.'
00000000000076c5         db  0xca ; '.'
00000000000076c6         db  0xff ; '.'
00000000000076c7         db  0xff ; '.'
00000000000076c8         db  0x08 ; '.'
00000000000076c9         db  0xca ; '.'
00000000000076ca         db  0xff ; '.'
00000000000076cb         db  0xff ; '.'
00000000000076cc         db  0x08 ; '.'
00000000000076cd         db  0xca ; '.'
00000000000076ce         db  0xff ; '.'
00000000000076cf         db  0xff ; '.'
00000000000076d0         db  0x08 ; '.'
00000000000076d1         db  0xca ; '.'
00000000000076d2         db  0xff ; '.'
00000000000076d3         db  0xff ; '.'
00000000000076d4         db  0x08 ; '.'
00000000000076d5         db  0xca ; '.'
00000000000076d6         db  0xff ; '.'
00000000000076d7         db  0xff ; '.'
00000000000076d8         db  0x08 ; '.'
00000000000076d9         db  0xca ; '.'
00000000000076da         db  0xff ; '.'
00000000000076db         db  0xff ; '.'
00000000000076dc         db  0x08 ; '.'
00000000000076dd         db  0xca ; '.'
00000000000076de         db  0xff ; '.'
00000000000076df         db  0xff ; '.'
00000000000076e0         db  0x08 ; '.'
00000000000076e1         db  0xca ; '.'
00000000000076e2         db  0xff ; '.'
00000000000076e3         db  0xff ; '.'
00000000000076e4         db  0x08 ; '.'
00000000000076e5         db  0xca ; '.'
00000000000076e6         db  0xff ; '.'
00000000000076e7         db  0xff ; '.'
00000000000076e8         db  0x08 ; '.'
00000000000076e9         db  0xca ; '.'
00000000000076ea         db  0xff ; '.'
00000000000076eb         db  0xff ; '.'
00000000000076ec         db  0x08 ; '.'
00000000000076ed         db  0xca ; '.'
00000000000076ee         db  0xff ; '.'
00000000000076ef         db  0xff ; '.'
00000000000076f0         db  0x08 ; '.'
00000000000076f1         db  0xca ; '.'
00000000000076f2         db  0xff ; '.'
00000000000076f3         db  0xff ; '.'
00000000000076f4         db  0x78 ; 'x'
00000000000076f5         db  0xc5 ; '.'
00000000000076f6         db  0xff ; '.'
00000000000076f7         db  0xff ; '.'
00000000000076f8         db  0x38 ; '8'
00000000000076f9         db  0xca ; '.'
00000000000076fa         db  0xff ; '.'
00000000000076fb         db  0xff ; '.'
00000000000076fc         db  0x78 ; 'x'
00000000000076fd         db  0xc5 ; '.'
00000000000076fe         db  0xff ; '.'
00000000000076ff         db  0xff ; '.'
0000000000007700         db  0x20 ; ' '
0000000000007701         db  0xca ; '.'
0000000000007702         db  0xff ; '.'
0000000000007703         db  0xff ; '.'
0000000000007704         db  0x00 ; '.'
0000000000007705         db  0x00 ; '.'
0000000000007706         db  0x00 ; '.'
0000000000007707         db  0x00 ; '.'
0000000000007708         db  0x00 ; '.'
0000000000007709         db  0x00 ; '.'
000000000000770a         db  0x00 ; '.'
000000000000770b         db  0x00 ; '.'
000000000000770c         db  0x00 ; '.'
000000000000770d         db  0x00 ; '.'
000000000000770e         db  0x00 ; '.'
000000000000770f         db  0x00 ; '.'
0000000000007710         db  0x00 ; '.'
0000000000007711         db  0x00 ; '.'
0000000000007712         db  0x00 ; '.'
0000000000007713         db  0x00 ; '.'
0000000000007714         db  0x00 ; '.'
0000000000007715         db  0x00 ; '.'
0000000000007716         db  0x00 ; '.'
0000000000007717         db  0x00 ; '.'
0000000000007718         db  0x00 ; '.'
0000000000007719         db  0x00 ; '.'
000000000000771a         db  0x00 ; '.'
000000000000771b         db  0x00 ; '.'
000000000000771c         db  0x00 ; '.'
000000000000771d         db  0x00 ; '.'
000000000000771e         db  0x00 ; '.'
000000000000771f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000007720         db  0x00 ; '.'
0000000000007721         db  0x00 ; '.'
0000000000007722         db  0x00 ; '.'
0000000000007723         db  0x00 ; '.'
0000000000007724         db  0x01 ; '.'
0000000000007725         db  0x00 ; '.'
0000000000007726         db  0x00 ; '.'
0000000000007727         db  0x00 ; '.'
0000000000007728         db  0x02 ; '.'
0000000000007729         db  0x00 ; '.'
000000000000772a         db  0x00 ; '.'
000000000000772b         db  0x00 ; '.'
000000000000772c         db  0x03 ; '.'
000000000000772d         db  0x00 ; '.'
000000000000772e         db  0x00 ; '.'
000000000000772f         db  0x00 ; '.'
0000000000007730         db  0x04 ; '.'
0000000000007731         db  0x00 ; '.'
0000000000007732         db  0x00 ; '.'
0000000000007733         db  0x00 ; '.'
0000000000007734         db  0x05 ; '.'
0000000000007735         db  0x00 ; '.'
0000000000007736         db  0x00 ; '.'
0000000000007737         db  0x00 ; '.'
0000000000007738         db  0x06 ; '.'
0000000000007739         db  0x00 ; '.'
000000000000773a         db  0x00 ; '.'
000000000000773b         db  0x00 ; '.'
000000000000773c         db  0x07 ; '.'
000000000000773d         db  0x00 ; '.'
000000000000773e         db  0x00 ; '.'
000000000000773f         db  0x00 ; '.'
0000000000007740         db  0x08 ; '.'
0000000000007741         db  0x00 ; '.'
0000000000007742         db  0x00 ; '.'
0000000000007743         db  0x00 ; '.'
0000000000007744         db  0x09 ; '.'
0000000000007745         db  0x00 ; '.'
0000000000007746         db  0x00 ; '.'
0000000000007747         db  0x00 ; '.'
                     aSSSn:
0000000000007748         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000007754         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000775b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000775c         db  0x43 ; 'C'
000000000000775d         db  0x29 ; ')'
000000000000775e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000775f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000776f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000007786         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000077a2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000077b7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
00000000000077cd         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
00000000000077e1         align      8
                     aNlicenseGplv3G:
00000000000077e8         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000078b4         align      8
                     aWrittenBySSSna:
00000000000078b8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_78d8:        // aWrittenBySSSns
00000000000078d8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
00000000000078fc         align      256
                     aWrittenBySSSns_7900:        // aWrittenBySSSns
0000000000007900         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_7928:        // aWrittenBySSSns
0000000000007928         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000007954         align      8
                     aWrittenBySSSns_7958:        // aWrittenBySSSns
0000000000007958         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000007988         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000079bc         align      64
                     aWrittenBySSSns_79c0:        // aWrittenBySSSns
00000000000079c0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
00000000000079fc         align      512
                     aGeneralHelpUsi:
0000000000007a00         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000007a41         align      4
                     switch_table_7a44:        // switch_table
0000000000007a44         dd         version_etc_ar.loc_5556-switch_table_7a44, version_etc_ar.loc_55e8-switch_table_7a44, version_etc_ar.loc_5628-switch_table_7a44, version_etc_ar.loc_5670-switch_table_7a44 ; switch table used at 0x54d4 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000007a54         dd         version_etc_ar.loc_56c0-switch_table_7a44, version_etc_ar.loc_5718-switch_table_7a44, version_etc_ar.loc_5748-switch_table_7a44, version_etc_ar.loc_57b0-switch_table_7a44
0000000000007a64         dd         version_etc_ar.loc_54e0-switch_table_7a44, version_etc_ar.loc_5590-switch_table_7a44
0000000000007a6c         align      128
                     version_etc_copyright:
0000000000007a80         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000007aaf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aStringComparis:
0000000000007ac0         db         "string comparison failed", 0               ; DATA XREF=collate_error+17
0000000000007ad9         align      32
                     aSetLcallcToWor:
0000000000007ae0         db         "Set LC_ALL='C' to work around the problem.", 0 ; DATA XREF=collate_error+57
0000000000007b0b         align      16
                     aTheStringsComp:
0000000000007b10         db         "The strings compared were %s and %s.", 0   ; DATA XREF=collate_error+132
0000000000007b35         align      8
                     aCoreutils831li:
0000000000007b38         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoul+908
                     a0StrtolbaseStr:
0000000000007b58         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoul+915
0000000000007b7e         align      128
                     switch_table_7b80:        // switch_table
0000000000007b80         dd         xstrtoul.loc_6166-switch_table_7b80, 2 dup (xstrtoul.loc_605c-switch_table_7b80), xstrtoul.loc_6143-switch_table_7b80, xstrtoul.loc_605c-switch_table_7b80 ; switch table used at 0x6016 containing 54 entries, DATA XREF=xstrtoul+452
0000000000007b94         dd         xstrtoul.loc_617c-switch_table_7b80, 3 dup (xstrtoul.loc_605c-switch_table_7b80), xstrtoul.loc_60ff-switch_table_7b80, xstrtoul.loc_605c-switch_table_7b80
0000000000007bac         dd         xstrtoul.loc_6018-switch_table_7b80, 2 dup (xstrtoul.loc_605c-switch_table_7b80), xstrtoul.loc_6120-switch_table_7b80, 3 dup (xstrtoul.loc_605c-switch_table_7b80)
0000000000007bc8         dd         xstrtoul.loc_60df-switch_table_7b80, 4 dup (xstrtoul.loc_605c-switch_table_7b80), xstrtoul.loc_60ba-switch_table_7b80, xstrtoul.loc_6094-switch_table_7b80
0000000000007be4         dd         7 dup (xstrtoul.loc_605c-switch_table_7b80), xstrtoul.loc_607d-switch_table_7b80, xstrtoul.loc_6040-switch_table_7b80, 3 dup (xstrtoul.loc_605c-switch_table_7b80)
0000000000007c14         dd         xstrtoul.loc_617c-switch_table_7b80, 3 dup (xstrtoul.loc_605c-switch_table_7b80), xstrtoul.loc_60ff-switch_table_7b80, xstrtoul.loc_605c-switch_table_7b80
0000000000007c2c         dd         xstrtoul.loc_6018-switch_table_7b80, 6 dup (xstrtoul.loc_605c-switch_table_7b80), xstrtoul.loc_60df-switch_table_7b80, 2 dup (xstrtoul.loc_605c-switch_table_7b80)
0000000000007c54         dd         xstrtoul.loc_6067-switch_table_7b80
                     __PRETTY_FUNCTION__.4162:
0000000000007c58         db         "xstrtoul", 0                               ; DATA XREF=xstrtoul+901
                     aAscii:
0000000000007c61         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000007c67         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x7c68; 0x7f7c[ (788 bytes)
        ; File offset : [31848; 32636[ (788 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007c68         db  0x01 ; '.'
0000000000007c69         db  0x1b ; '.'
0000000000007c6a         db  0x03 ; '.'
0000000000007c6b         db  0x3b ; ';'
0000000000007c6c         db  0x14 ; '.'
0000000000007c6d         db  0x03 ; '.'
0000000000007c6e         db  0x00 ; '.'
0000000000007c6f         db  0x00 ; '.'
0000000000007c70         db  0x61 ; 'a'
0000000000007c71         db  0x00 ; '.'
0000000000007c72         db  0x00 ; '.'
0000000000007c73         db  0x00 ; '.'
0000000000007c74         db  0xc8 ; '.'
0000000000007c75         db  0x9a ; '.'
0000000000007c76         db  0xff ; '.'
0000000000007c77         db  0xff ; '.'
0000000000007c78         db  0x60 ; '`'
0000000000007c79         db  0x03 ; '.'
0000000000007c7a         db  0x00 ; '.'
0000000000007c7b         db  0x00 ; '.'
0000000000007c7c         db  0x48 ; 'H'
0000000000007c7d         db  0x9e ; '.'
0000000000007c7e         db  0xff ; '.'
0000000000007c7f         db  0xff ; '.'
0000000000007c80         db  0x88 ; '.'
0000000000007c81         db  0x03 ; '.'
0000000000007c82         db  0x00 ; '.'
0000000000007c83         db  0x00 ; '.'
0000000000007c84         db  0x58 ; 'X'
0000000000007c85         db  0x9e ; '.'
0000000000007c86         db  0xff ; '.'
0000000000007c87         db  0xff ; '.'
0000000000007c88         db  0x84 ; '.'
0000000000007c89         db  0x04 ; '.'
0000000000007c8a         db  0x00 ; '.'
0000000000007c8b         db  0x00 ; '.'
0000000000007c8c         db  0x28 ; '('
0000000000007c8d         db  0xa9 ; '.'
0000000000007c8e         db  0xff ; '.'
0000000000007c8f         db  0xff ; '.'
0000000000007c90         db  0x30 ; '0'
0000000000007c91         db  0x03 ; '.'
0000000000007c92         db  0x00 ; '.'
0000000000007c93         db  0x00 ; '.'
0000000000007c94         db  0x38 ; '8'
0000000000007c95         db  0xaa ; '.'
0000000000007c96         db  0xff ; '.'
0000000000007c97         db  0xff ; '.'
0000000000007c98         db  0xa0 ; '.'
0000000000007c99         db  0x03 ; '.'
0000000000007c9a         db  0x00 ; '.'
0000000000007c9b         db  0x00 ; '.'
0000000000007c9c         db  0xc8 ; '.'
0000000000007c9d         db  0xaa ; '.'
0000000000007c9e         db  0xff ; '.'
0000000000007c9f         db  0xff ; '.'
0000000000007ca0         db  0xcc ; '.'
0000000000007ca1         db  0x03 ; '.'
0000000000007ca2         db  0x00 ; '.'
0000000000007ca3         db  0x00 ; '.'
0000000000007ca4         db  0x58 ; 'X'
0000000000007ca5         db  0xab ; '.'
0000000000007ca6         db  0xff ; '.'
0000000000007ca7         db  0xff ; '.'
0000000000007ca8         db  0xf8 ; '.'
0000000000007ca9         db  0x03 ; '.'
0000000000007caa         db  0x00 ; '.'
0000000000007cab         db  0x00 ; '.'
0000000000007cac         db  0xd8 ; '.'
0000000000007cad         db  0xab ; '.'
0000000000007cae         db  0xff ; '.'
0000000000007caf         db  0xff ; '.'
0000000000007cb0         db  0x18 ; '.'
0000000000007cb1         db  0x04 ; '.'
0000000000007cb2         db  0x00 ; '.'
0000000000007cb3         db  0x00 ; '.'
0000000000007cb4         db  0xb8 ; '.'
0000000000007cb5         db  0xac ; '.'
0000000000007cb6         db  0xff ; '.'
0000000000007cb7         db  0xff ; '.'
0000000000007cb8         db  0x58 ; 'X'
0000000000007cb9         db  0x04 ; '.'
0000000000007cba         db  0x00 ; '.'
0000000000007cbb         db  0x00 ; '.'
0000000000007cbc         db  0x78 ; 'x'
0000000000007cbd         db  0xb1 ; '.'
0000000000007cbe         db  0xff ; '.'
0000000000007cbf         db  0xff ; '.'
0000000000007cc0         db  0xe0 ; '.'
0000000000007cc1         db  0x04 ; '.'
0000000000007cc2         db  0x00 ; '.'
0000000000007cc3         db  0x00 ; '.'
0000000000007cc4         db  0x88 ; '.'
0000000000007cc5         db  0xb1 ; '.'
0000000000007cc6         db  0xff ; '.'
0000000000007cc7         db  0xff ; '.'
0000000000007cc8         db  0xf4 ; '.'
0000000000007cc9         db  0x04 ; '.'
0000000000007cca         db  0x00 ; '.'
0000000000007ccb         db  0x00 ; '.'
0000000000007ccc         db  0xa8 ; '.'
0000000000007ccd         db  0xb2 ; '.'
0000000000007cce         db  0xff ; '.'
0000000000007ccf         db  0xff ; '.'
0000000000007cd0         db  0x40 ; '@'
0000000000007cd1         db  0x05 ; '.'
0000000000007cd2         db  0x00 ; '.'
0000000000007cd3         db  0x00 ; '.'
0000000000007cd4         db  0x28 ; '('
0000000000007cd5         db  0xb3 ; '.'
0000000000007cd6         db  0xff ; '.'
0000000000007cd7         db  0xff ; '.'
0000000000007cd8         db  0x6c ; 'l'
0000000000007cd9         db  0x05 ; '.'
0000000000007cda         db  0x00 ; '.'
0000000000007cdb         db  0x00 ; '.'
0000000000007cdc         db  0x48 ; 'H'
0000000000007cdd         db  0xb4 ; '.'
0000000000007cde         db  0xff ; '.'
0000000000007cdf         db  0xff ; '.'
0000000000007ce0         db  0xcc ; '.'
0000000000007ce1         db  0x05 ; '.'
0000000000007ce2         db  0x00 ; '.'
0000000000007ce3         db  0x00 ; '.'
0000000000007ce4         db  0xb8 ; '.'
0000000000007ce5         db  0xb4 ; '.'
0000000000007ce6         db  0xff ; '.'
0000000000007ce7         db  0xff ; '.'
0000000000007ce8         db  0x18 ; '.'
0000000000007ce9         db  0x06 ; '.'
0000000000007cea         db  0x00 ; '.'
0000000000007ceb         db  0x00 ; '.'
0000000000007cec         db  0x08 ; '.'
0000000000007ced         db  0xb5 ; '.'
0000000000007cee         db  0xff ; '.'
0000000000007cef         db  0xff ; '.'
0000000000007cf0         db  0x58 ; 'X'
0000000000007cf1         db  0x06 ; '.'
0000000000007cf2         db  0x00 ; '.'
0000000000007cf3         db  0x00 ; '.'
0000000000007cf4         db  0x18 ; '.'
0000000000007cf5         db  0xb5 ; '.'
0000000000007cf6         db  0xff ; '.'
0000000000007cf7         db  0xff ; '.'
0000000000007cf8         db  0x6c ; 'l'
0000000000007cf9         db  0x06 ; '.'
0000000000007cfa         db  0x00 ; '.'
0000000000007cfb         db  0x00 ; '.'
0000000000007cfc         db  0x28 ; '('
0000000000007cfd         db  0xb5 ; '.'
0000000000007cfe         db  0xff ; '.'
0000000000007cff         db  0xff ; '.'
0000000000007d00         db  0x80 ; '.'
0000000000007d01         db  0x06 ; '.'
0000000000007d02         db  0x00 ; '.'
0000000000007d03         db  0x00 ; '.'
0000000000007d04         db  0xd8 ; '.'
0000000000007d05         db  0xb5 ; '.'
0000000000007d06         db  0xff ; '.'
0000000000007d07         db  0xff ; '.'
0000000000007d08         db  0xb0 ; '.'
0000000000007d09         db  0x06 ; '.'
0000000000007d0a         db  0x00 ; '.'
0000000000007d0b         db  0x00 ; '.'
0000000000007d0c         db  0xe8 ; '.'
0000000000007d0d         db  0xb5 ; '.'
0000000000007d0e         db  0xff ; '.'
0000000000007d0f         db  0xff ; '.'
0000000000007d10         db  0xc4 ; '.'
0000000000007d11         db  0x06 ; '.'
0000000000007d12         db  0x00 ; '.'
0000000000007d13         db  0x00 ; '.'
0000000000007d14         db  0x18 ; '.'
0000000000007d15         db  0xb6 ; '.'
0000000000007d16         db  0xff ; '.'
0000000000007d17         db  0xff ; '.'
0000000000007d18         db  0xe0 ; '.'
0000000000007d19         db  0x06 ; '.'
0000000000007d1a         db  0x00 ; '.'
0000000000007d1b         db  0x00 ; '.'
0000000000007d1c         db  0x68 ; 'h'
0000000000007d1d         db  0xb6 ; '.'
0000000000007d1e         db  0xff ; '.'
0000000000007d1f         db  0xff ; '.'
0000000000007d20         db  0x08 ; '.'
0000000000007d21         db  0x07 ; '.'
0000000000007d22         db  0x00 ; '.'
0000000000007d23         db  0x00 ; '.'
0000000000007d24         db  0x18 ; '.'
0000000000007d25         db  0xb8 ; '.'
0000000000007d26         db  0xff ; '.'
0000000000007d27         db  0xff ; '.'
0000000000007d28         db  0x58 ; 'X'
0000000000007d29         db  0x07 ; '.'
0000000000007d2a         db  0x00 ; '.'
0000000000007d2b         db  0x00 ; '.'
0000000000007d2c         db  0x78 ; 'x'
0000000000007d2d         db  0xb8 ; '.'
0000000000007d2e         db  0xff ; '.'
0000000000007d2f         db  0xff ; '.'
0000000000007d30         db  0x78 ; 'x'
0000000000007d31         db  0x07 ; '.'
0000000000007d32         db  0x00 ; '.'
0000000000007d33         db  0x00 ; '.'
0000000000007d34         db  0x88 ; '.'
0000000000007d35         db  0xb8 ; '.'
0000000000007d36         db  0xff ; '.'
0000000000007d37         db  0xff ; '.'
0000000000007d38         db  0x8c ; '.'
0000000000007d39         db  0x07 ; '.'
0000000000007d3a         db  0x00 ; '.'
0000000000007d3b         db  0x00 ; '.'
0000000000007d3c         db  0x98 ; '.'
0000000000007d3d         db  0xb9 ; '.'
0000000000007d3e         db  0xff ; '.'
0000000000007d3f         db  0xff ; '.'
0000000000007d40         db  0xf0 ; '.'
0000000000007d41         db  0x07 ; '.'
0000000000007d42         db  0x00 ; '.'
0000000000007d43         db  0x00 ; '.'
0000000000007d44         db  0xa8 ; '.'
0000000000007d45         db  0xb9 ; '.'
0000000000007d46         db  0xff ; '.'
0000000000007d47         db  0xff ; '.'
0000000000007d48         db  0x04 ; '.'
0000000000007d49         db  0x08 ; '.'
0000000000007d4a         db  0x00 ; '.'
0000000000007d4b         db  0x00 ; '.'
0000000000007d4c         db  0xb8 ; '.'
0000000000007d4d         db  0xb9 ; '.'
0000000000007d4e         db  0xff ; '.'
0000000000007d4f         db  0xff ; '.'
0000000000007d50         db  0x18 ; '.'
0000000000007d51         db  0x08 ; '.'
0000000000007d52         db  0x00 ; '.'
0000000000007d53         db  0x00 ; '.'
0000000000007d54         db  0x08 ; '.'
0000000000007d55         db  0xba ; '.'
0000000000007d56         db  0xff ; '.'
0000000000007d57         db  0xff ; '.'
0000000000007d58         db  0x48 ; 'H'
0000000000007d59         db  0x08 ; '.'
0000000000007d5a         db  0x00 ; '.'
0000000000007d5b         db  0x00 ; '.'
0000000000007d5c         db  0x98 ; '.'
0000000000007d5d         db  0xba ; '.'
0000000000007d5e         db  0xff ; '.'
0000000000007d5f         db  0xff ; '.'
0000000000007d60         db  0x70 ; 'p'
0000000000007d61         db  0x08 ; '.'
0000000000007d62         db  0x00 ; '.'
0000000000007d63         db  0x00 ; '.'
0000000000007d64         db  0x38 ; '8'
0000000000007d65         db  0xbb ; '.'
0000000000007d66         db  0xff ; '.'
0000000000007d67         db  0xff ; '.'
0000000000007d68         db  0x90 ; '.'
0000000000007d69         db  0x08 ; '.'
0000000000007d6a         db  0x00 ; '.'
0000000000007d6b         db  0x00 ; '.'
0000000000007d6c         db  0x28 ; '('
0000000000007d6d         db  0xbc ; '.'
0000000000007d6e         db  0xff ; '.'
0000000000007d6f         db  0xff ; '.'
0000000000007d70         db  0xd4 ; '.'
0000000000007d71         db  0x08 ; '.'
0000000000007d72         db  0x00 ; '.'
0000000000007d73         db  0x00 ; '.'
0000000000007d74         db  0x68 ; 'h'
0000000000007d75         db  0xce ; '.'
0000000000007d76         db  0xff ; '.'
0000000000007d77         db  0xff ; '.'
0000000000007d78         db  0x4c ; 'L'
0000000000007d79         db  0x09 ; '.'
0000000000007d7a         db  0x00 ; '.'
0000000000007d7b         db  0x00 ; '.'
0000000000007d7c         db  0x18 ; '.'
0000000000007d7d         db  0xd0 ; '.'
0000000000007d7e         db  0xff ; '.'
0000000000007d7f         db  0xff ; '.'
0000000000007d80         db  0xb8 ; '.'
0000000000007d81         db  0x09 ; '.'
0000000000007d82         db  0x00 ; '.'
0000000000007d83         db  0x00 ; '.'
0000000000007d84         db  0x58 ; 'X'
0000000000007d85         db  0xd0 ; '.'
0000000000007d86         db  0xff ; '.'
0000000000007d87         db  0xff ; '.'
0000000000007d88         db  0xe4 ; '.'
0000000000007d89         db  0x09 ; '.'
0000000000007d8a         db  0x00 ; '.'
0000000000007d8b         db  0x00 ; '.'
0000000000007d8c         db  0x78 ; 'x'
0000000000007d8d         db  0xd0 ; '.'
0000000000007d8e         db  0xff ; '.'
0000000000007d8f         db  0xff ; '.'
0000000000007d90         db  0xf8 ; '.'
0000000000007d91         db  0x09 ; '.'
0000000000007d92         db  0x00 ; '.'
0000000000007d93         db  0x00 ; '.'
0000000000007d94         db  0x98 ; '.'
0000000000007d95         db  0xd0 ; '.'
0000000000007d96         db  0xff ; '.'
0000000000007d97         db  0xff ; '.'
0000000000007d98         db  0x0c ; '.'
0000000000007d99         db  0x0a ; '.'
0000000000007d9a         db  0x00 ; '.'
0000000000007d9b         db  0x00 ; '.'
0000000000007d9c         db  0xd8 ; '.'
0000000000007d9d         db  0xd0 ; '.'
0000000000007d9e         db  0xff ; '.'
0000000000007d9f         db  0xff ; '.'
0000000000007da0         db  0x20 ; ' '
0000000000007da1         db  0x0a ; '.'
0000000000007da2         db  0x00 ; '.'
0000000000007da3         db  0x00 ; '.'
0000000000007da4         db  0xf8 ; '.'
0000000000007da5         db  0xd0 ; '.'
0000000000007da6         db  0xff ; '.'
0000000000007da7         db  0xff ; '.'
0000000000007da8         db  0x34 ; '4'
0000000000007da9         db  0x0a ; '.'
0000000000007daa         db  0x00 ; '.'
0000000000007dab         db  0x00 ; '.'
0000000000007dac         db  0x28 ; '('
0000000000007dad         db  0xd1 ; '.'
0000000000007dae         db  0xff ; '.'
0000000000007daf         db  0xff ; '.'
0000000000007db0         db  0x48 ; 'H'
0000000000007db1         db  0x0a ; '.'
0000000000007db2         db  0x00 ; '.'
0000000000007db3         db  0x00 ; '.'
0000000000007db4         db  0xa8 ; '.'
0000000000007db5         db  0xd1 ; '.'
0000000000007db6         db  0xff ; '.'
0000000000007db7         db  0xff ; '.'
0000000000007db8         db  0x9c ; '.'
0000000000007db9         db  0x0a ; '.'
0000000000007dba         db  0x00 ; '.'
0000000000007dbb         db  0x00 ; '.'
0000000000007dbc         db  0x98 ; '.'
0000000000007dbd         db  0xd2 ; '.'
0000000000007dbe         db  0xff ; '.'
0000000000007dbf         db  0xff ; '.'
0000000000007dc0         db  0x08 ; '.'
0000000000007dc1         db  0x0b ; '.'
0000000000007dc2         db  0x00 ; '.'
0000000000007dc3         db  0x00 ; '.'
0000000000007dc4         db  0xa8 ; '.'
0000000000007dc5         db  0xd2 ; '.'
0000000000007dc6         db  0xff ; '.'
0000000000007dc7         db  0xff ; '.'
0000000000007dc8         db  0x1c ; '.'
0000000000007dc9         db  0x0b ; '.'
0000000000007dca         db  0x00 ; '.'
0000000000007dcb         db  0x00 ; '.'
0000000000007dcc         db  0x48 ; 'H'
0000000000007dcd         db  0xd3 ; '.'
0000000000007dce         db  0xff ; '.'
0000000000007dcf         db  0xff ; '.'
0000000000007dd0         db  0x48 ; 'H'
0000000000007dd1         db  0x0b ; '.'
0000000000007dd2         db  0x00 ; '.'
0000000000007dd3         db  0x00 ; '.'
0000000000007dd4         db  0x68 ; 'h'
0000000000007dd5         db  0xd3 ; '.'
0000000000007dd6         db  0xff ; '.'
0000000000007dd7         db  0xff ; '.'
0000000000007dd8         db  0x5c ; '\'
0000000000007dd9         db  0x0b ; '.'
0000000000007dda         db  0x00 ; '.'
0000000000007ddb         db  0x00 ; '.'
0000000000007ddc         db  0x78 ; 'x'
0000000000007ddd         db  0xd3 ; '.'
0000000000007dde         db  0xff ; '.'
0000000000007ddf         db  0xff ; '.'
0000000000007de0         db  0x70 ; 'p'
0000000000007de1         db  0x0b ; '.'
0000000000007de2         db  0x00 ; '.'
0000000000007de3         db  0x00 ; '.'
0000000000007de4         db  0x98 ; '.'
0000000000007de5         db  0xd3 ; '.'
0000000000007de6         db  0xff ; '.'
0000000000007de7         db  0xff ; '.'
0000000000007de8         db  0x84 ; '.'
0000000000007de9         db  0x0b ; '.'
0000000000007dea         db  0x00 ; '.'
0000000000007deb         db  0x00 ; '.'
0000000000007dec         db  0xb8 ; '.'
0000000000007ded         db  0xd3 ; '.'
0000000000007dee         db  0xff ; '.'
0000000000007def         db  0xff ; '.'
0000000000007df0         db  0x98 ; '.'
0000000000007df1         db  0x0b ; '.'
0000000000007df2         db  0x00 ; '.'
0000000000007df3         db  0x00 ; '.'
0000000000007df4         db  0x48 ; 'H'
0000000000007df5         db  0xd4 ; '.'
0000000000007df6         db  0xff ; '.'
0000000000007df7         db  0xff ; '.'
0000000000007df8         db  0xb4 ; '.'
0000000000007df9         db  0x0b ; '.'
0000000000007dfa         db  0x00 ; '.'
0000000000007dfb         db  0x00 ; '.'
0000000000007dfc         db  0xd8 ; '.'
0000000000007dfd         db  0xd4 ; '.'
0000000000007dfe         db  0xff ; '.'
0000000000007dff         db  0xff ; '.'
0000000000007e00         db  0xd0 ; '.'
0000000000007e01         db  0x0b ; '.'
0000000000007e02         db  0x00 ; '.'
0000000000007e03         db  0x00 ; '.'
0000000000007e04         db  0xe8 ; '.'
0000000000007e05         db  0xd4 ; '.'
0000000000007e06         db  0xff ; '.'
0000000000007e07         db  0xff ; '.'
0000000000007e08         db  0xe4 ; '.'
0000000000007e09         db  0x0b ; '.'
0000000000007e0a         db  0x00 ; '.'
0000000000007e0b         db  0x00 ; '.'
0000000000007e0c         db  0xf8 ; '.'
0000000000007e0d         db  0xd4 ; '.'
0000000000007e0e         db  0xff ; '.'
0000000000007e0f         db  0xff ; '.'
0000000000007e10         db  0xf8 ; '.'
0000000000007e11         db  0x0b ; '.'
0000000000007e12         db  0x00 ; '.'
0000000000007e13         db  0x00 ; '.'
0000000000007e14         db  0x98 ; '.'
0000000000007e15         db  0xd5 ; '.'
0000000000007e16         db  0xff ; '.'
0000000000007e17         db  0xff ; '.'
0000000000007e18         db  0x14 ; '.'
0000000000007e19         db  0x0c ; '.'
0000000000007e1a         db  0x00 ; '.'
0000000000007e1b         db  0x00 ; '.'
0000000000007e1c         db  0xa8 ; '.'
0000000000007e1d         db  0xd5 ; '.'
0000000000007e1e         db  0xff ; '.'
0000000000007e1f         db  0xff ; '.'
0000000000007e20         db  0x28 ; '('
0000000000007e21         db  0x0c ; '.'
0000000000007e22         db  0x00 ; '.'
0000000000007e23         db  0x00 ; '.'
0000000000007e24         db  0xc8 ; '.'
0000000000007e25         db  0xd5 ; '.'
0000000000007e26         db  0xff ; '.'
0000000000007e27         db  0xff ; '.'
0000000000007e28         db  0x3c ; '<'
0000000000007e29         db  0x0c ; '.'
0000000000007e2a         db  0x00 ; '.'
0000000000007e2b         db  0x00 ; '.'
0000000000007e2c         db  0xd8 ; '.'
0000000000007e2d         db  0xd5 ; '.'
0000000000007e2e         db  0xff ; '.'
0000000000007e2f         db  0xff ; '.'
0000000000007e30         db  0x50 ; 'P'
0000000000007e31         db  0x0c ; '.'
0000000000007e32         db  0x00 ; '.'
0000000000007e33         db  0x00 ; '.'
0000000000007e34         db  0x68 ; 'h'
0000000000007e35         db  0xd6 ; '.'
0000000000007e36         db  0xff ; '.'
0000000000007e37         db  0xff ; '.'
0000000000007e38         db  0x6c ; 'l'
0000000000007e39         db  0x0c ; '.'
0000000000007e3a         db  0x00 ; '.'
0000000000007e3b         db  0x00 ; '.'
0000000000007e3c         db  0x08 ; '.'
0000000000007e3d         db  0xd7 ; '.'
0000000000007e3e         db  0xff ; '.'
0000000000007e3f         db  0xff ; '.'
0000000000007e40         db  0x88 ; '.'
0000000000007e41         db  0x0c ; '.'
0000000000007e42         db  0x00 ; '.'
0000000000007e43         db  0x00 ; '.'
0000000000007e44         db  0x18 ; '.'
0000000000007e45         db  0xd7 ; '.'
0000000000007e46         db  0xff ; '.'
0000000000007e47         db  0xff ; '.'
0000000000007e48         db  0x9c ; '.'
0000000000007e49         db  0x0c ; '.'
0000000000007e4a         db  0x00 ; '.'
0000000000007e4b         db  0x00 ; '.'
0000000000007e4c         db  0x38 ; '8'
0000000000007e4d         db  0xd7 ; '.'
0000000000007e4e         db  0xff ; '.'
0000000000007e4f         db  0xff ; '.'
0000000000007e50         db  0xb0 ; '.'
0000000000007e51         db  0x0c ; '.'
0000000000007e52         db  0x00 ; '.'
0000000000007e53         db  0x00 ; '.'
0000000000007e54         db  0x58 ; 'X'
0000000000007e55         db  0xd7 ; '.'
0000000000007e56         db  0xff ; '.'
0000000000007e57         db  0xff ; '.'
0000000000007e58         db  0xc4 ; '.'
0000000000007e59         db  0x0c ; '.'
0000000000007e5a         db  0x00 ; '.'
0000000000007e5b         db  0x00 ; '.'
0000000000007e5c         db  0x68 ; 'h'
0000000000007e5d         db  0xd7 ; '.'
0000000000007e5e         db  0xff ; '.'
0000000000007e5f         db  0xff ; '.'
0000000000007e60         db  0xd8 ; '.'
0000000000007e61         db  0x0c ; '.'
0000000000007e62         db  0x00 ; '.'
0000000000007e63         db  0x00 ; '.'
0000000000007e64         db  0x88 ; '.'
0000000000007e65         db  0xd7 ; '.'
0000000000007e66         db  0xff ; '.'
0000000000007e67         db  0xff ; '.'
0000000000007e68         db  0xec ; '.'
0000000000007e69         db  0x0c ; '.'
0000000000007e6a         db  0x00 ; '.'
0000000000007e6b         db  0x00 ; '.'
0000000000007e6c         db  0xa8 ; '.'
0000000000007e6d         db  0xd7 ; '.'
0000000000007e6e         db  0xff ; '.'
0000000000007e6f         db  0xff ; '.'
0000000000007e70         db  0x00 ; '.'
0000000000007e71         db  0x0d ; '.'
0000000000007e72         db  0x00 ; '.'
0000000000007e73         db  0x00 ; '.'
0000000000007e74         db  0xc8 ; '.'
0000000000007e75         db  0xd7 ; '.'
0000000000007e76         db  0xff ; '.'
0000000000007e77         db  0xff ; '.'
0000000000007e78         db  0x18 ; '.'
0000000000007e79         db  0x0d ; '.'
0000000000007e7a         db  0x00 ; '.'
0000000000007e7b         db  0x00 ; '.'
0000000000007e7c         db  0xe8 ; '.'
0000000000007e7d         db  0xdb ; '.'
0000000000007e7e         db  0xff ; '.'
0000000000007e7f         db  0xff ; '.'
0000000000007e80         db  0x2c ; ','
0000000000007e81         db  0x0e ; '.'
0000000000007e82         db  0x00 ; '.'
0000000000007e83         db  0x00 ; '.'
0000000000007e84         db  0x08 ; '.'
0000000000007e85         db  0xdc ; '.'
0000000000007e86         db  0xff ; '.'
0000000000007e87         db  0xff ; '.'
0000000000007e88         db  0x40 ; '@'
0000000000007e89         db  0x0e ; '.'
0000000000007e8a         db  0x00 ; '.'
0000000000007e8b         db  0x00 ; '.'
0000000000007e8c         db  0x88 ; '.'
0000000000007e8d         db  0xdc ; '.'
0000000000007e8e         db  0xff ; '.'
0000000000007e8f         db  0xff ; '.'
0000000000007e90         db  0x5c ; '\'
0000000000007e91         db  0x0e ; '.'
0000000000007e92         db  0x00 ; '.'
0000000000007e93         db  0x00 ; '.'
0000000000007e94         db  0x68 ; 'h'
0000000000007e95         db  0xdd ; '.'
0000000000007e96         db  0xff ; '.'
0000000000007e97         db  0xff ; '.'
0000000000007e98         db  0x88 ; '.'
0000000000007e99         db  0x0e ; '.'
0000000000007e9a         db  0x00 ; '.'
0000000000007e9b         db  0x00 ; '.'
0000000000007e9c         db  0xe8 ; '.'
0000000000007e9d         db  0xdd ; '.'
0000000000007e9e         db  0xff ; '.'
0000000000007e9f         db  0xff ; '.'
0000000000007ea0         db  0xa8 ; '.'
0000000000007ea1         db  0x0e ; '.'
0000000000007ea2         db  0x00 ; '.'
0000000000007ea3         db  0x00 ; '.'
0000000000007ea4         db  0x08 ; '.'
0000000000007ea5         db  0xde ; '.'
0000000000007ea6         db  0xff ; '.'
0000000000007ea7         db  0xff ; '.'
0000000000007ea8         db  0xc4 ; '.'
0000000000007ea9         db  0x0e ; '.'
0000000000007eaa         db  0x00 ; '.'
0000000000007eab         db  0x00 ; '.'
0000000000007eac         db  0x38 ; '8'
0000000000007ead         db  0xde ; '.'
0000000000007eae         db  0xff ; '.'
0000000000007eaf         db  0xff ; '.'
0000000000007eb0         db  0xd8 ; '.'
0000000000007eb1         db  0x0e ; '.'
0000000000007eb2         db  0x00 ; '.'
0000000000007eb3         db  0x00 ; '.'
0000000000007eb4         db  0x48 ; 'H'
0000000000007eb5         db  0xde ; '.'
0000000000007eb6         db  0xff ; '.'
0000000000007eb7         db  0xff ; '.'
0000000000007eb8         db  0xec ; '.'
0000000000007eb9         db  0x0e ; '.'
0000000000007eba         db  0x00 ; '.'
0000000000007ebb         db  0x00 ; '.'
0000000000007ebc         db  0x88 ; '.'
0000000000007ebd         db  0xde ; '.'
0000000000007ebe         db  0xff ; '.'
0000000000007ebf         db  0xff ; '.'
0000000000007ec0         db  0x10 ; '.'
0000000000007ec1         db  0x0f ; '.'
0000000000007ec2         db  0x00 ; '.'
0000000000007ec3         db  0x00 ; '.'
0000000000007ec4         db  0xb8 ; '.'
0000000000007ec5         db  0xde ; '.'
0000000000007ec6         db  0xff ; '.'
0000000000007ec7         db  0xff ; '.'
0000000000007ec8         db  0x24 ; '$'
0000000000007ec9         db  0x0f ; '.'
0000000000007eca         db  0x00 ; '.'
0000000000007ecb         db  0x00 ; '.'
0000000000007ecc         db  0x48 ; 'H'
0000000000007ecd         db  0xdf ; '.'
0000000000007ece         db  0xff ; '.'
0000000000007ecf         db  0xff ; '.'
0000000000007ed0         db  0x3c ; '<'
0000000000007ed1         db  0x0f ; '.'
0000000000007ed2         db  0x00 ; '.'
0000000000007ed3         db  0x00 ; '.'
0000000000007ed4         db  0x98 ; '.'
0000000000007ed5         db  0xdf ; '.'
0000000000007ed6         db  0xff ; '.'
0000000000007ed7         db  0xff ; '.'
0000000000007ed8         db  0x54 ; 'T'
0000000000007ed9         db  0x0f ; '.'
0000000000007eda         db  0x00 ; '.'
0000000000007edb         db  0x00 ; '.'
0000000000007edc         db  0xb8 ; '.'
0000000000007edd         db  0xdf ; '.'
0000000000007ede         db  0xff ; '.'
0000000000007edf         db  0xff ; '.'
0000000000007ee0         db  0x70 ; 'p'
0000000000007ee1         db  0x0f ; '.'
0000000000007ee2         db  0x00 ; '.'
0000000000007ee3         db  0x00 ; '.'
0000000000007ee4         db  0xe8 ; '.'
0000000000007ee5         db  0xdf ; '.'
0000000000007ee6         db  0xff ; '.'
0000000000007ee7         db  0xff ; '.'
0000000000007ee8         db  0x8c ; '.'
0000000000007ee9         db  0x0f ; '.'
0000000000007eea         db  0x00 ; '.'
0000000000007eeb         db  0x00 ; '.'
0000000000007eec         db  0x18 ; '.'
0000000000007eed         db  0xe0 ; '.'
0000000000007eee         db  0xff ; '.'
0000000000007eef         db  0xff ; '.'
0000000000007ef0         db  0xb4 ; '.'
0000000000007ef1         db  0x0f ; '.'
0000000000007ef2         db  0x00 ; '.'
0000000000007ef3         db  0x00 ; '.'
0000000000007ef4         db  0x38 ; '8'
0000000000007ef5         db  0xe0 ; '.'
0000000000007ef6         db  0xff ; '.'
0000000000007ef7         db  0xff ; '.'
0000000000007ef8         db  0xd0 ; '.'
0000000000007ef9         db  0x0f ; '.'
0000000000007efa         db  0x00 ; '.'
0000000000007efb         db  0x00 ; '.'
0000000000007efc         db  0x78 ; 'x'
0000000000007efd         db  0xe0 ; '.'
0000000000007efe         db  0xff ; '.'
0000000000007eff         db  0xff ; '.'
0000000000007f00         db  0xe8 ; '.'
0000000000007f01         db  0x0f ; '.'
0000000000007f02         db  0x00 ; '.'
0000000000007f03         db  0x00 ; '.'
0000000000007f04         db  0x38 ; '8'
0000000000007f05         db  0xe1 ; '.'
0000000000007f06         db  0xff ; '.'
0000000000007f07         db  0xff ; '.'
0000000000007f08         db  0x24 ; '$'
0000000000007f09         db  0x10 ; '.'
0000000000007f0a         db  0x00 ; '.'
0000000000007f0b         db  0x00 ; '.'
0000000000007f0c         db  0x88 ; '.'
0000000000007f0d         db  0xe1 ; '.'
0000000000007f0e         db  0xff ; '.'
0000000000007f0f         db  0xff ; '.'
0000000000007f10         db  0x60 ; '`'
0000000000007f11         db  0x10 ; '.'
0000000000007f12         db  0x00 ; '.'
0000000000007f13         db  0x00 ; '.'
0000000000007f14         db  0xd8 ; '.'
0000000000007f15         db  0xe1 ; '.'
0000000000007f16         db  0xff ; '.'
0000000000007f17         db  0xff ; '.'
0000000000007f18         db  0xa0 ; '.'
0000000000007f19         db  0x10 ; '.'
0000000000007f1a         db  0x00 ; '.'
0000000000007f1b         db  0x00 ; '.'
0000000000007f1c         db  0xf8 ; '.'
0000000000007f1d         db  0xe5 ; '.'
0000000000007f1e         db  0xff ; '.'
0000000000007f1f         db  0xff ; '.'
0000000000007f20         db  0xf0 ; '.'
0000000000007f21         db  0x10 ; '.'
0000000000007f22         db  0x00 ; '.'
0000000000007f23         db  0x00 ; '.'
0000000000007f24         db  0x78 ; 'x'
0000000000007f25         db  0xe6 ; '.'
0000000000007f26         db  0xff ; '.'
0000000000007f27         db  0xff ; '.'
0000000000007f28         db  0x28 ; '('
0000000000007f29         db  0x11 ; '.'
0000000000007f2a         db  0x00 ; '.'
0000000000007f2b         db  0x00 ; '.'
0000000000007f2c         db  0xb8 ; '.'
0000000000007f2d         db  0xe6 ; '.'
0000000000007f2e         db  0xff ; '.'
0000000000007f2f         db  0xff ; '.'
0000000000007f30         db  0x48 ; 'H'
0000000000007f31         db  0x11 ; '.'
0000000000007f32         db  0x00 ; '.'
0000000000007f33         db  0x00 ; '.'
0000000000007f34         db  0x18 ; '.'
0000000000007f35         db  0xe7 ; '.'
0000000000007f36         db  0xff ; '.'
0000000000007f37         db  0xff ; '.'
0000000000007f38         db  0x78 ; 'x'
0000000000007f39         db  0x11 ; '.'
0000000000007f3a         db  0x00 ; '.'
0000000000007f3b         db  0x00 ; '.'
0000000000007f3c         db  0xa8 ; '.'
0000000000007f3d         db  0xe7 ; '.'
0000000000007f3e         db  0xff ; '.'
0000000000007f3f         db  0xff ; '.'
0000000000007f40         db  0xb8 ; '.'
0000000000007f41         db  0x11 ; '.'
0000000000007f42         db  0x00 ; '.'
0000000000007f43         db  0x00 ; '.'
0000000000007f44         db  0x28 ; '('
0000000000007f45         db  0xe8 ; '.'
0000000000007f46         db  0xff ; '.'
0000000000007f47         db  0xff ; '.'
0000000000007f48         db  0x08 ; '.'
0000000000007f49         db  0x12 ; '.'
0000000000007f4a         db  0x00 ; '.'
0000000000007f4b         db  0x00 ; '.'
0000000000007f4c         db  0x68 ; 'h'
0000000000007f4d         db  0xe8 ; '.'
0000000000007f4e         db  0xff ; '.'
0000000000007f4f         db  0xff ; '.'
0000000000007f50         db  0x28 ; '('
0000000000007f51         db  0x12 ; '.'
0000000000007f52         db  0x00 ; '.'
0000000000007f53         db  0x00 ; '.'
0000000000007f54         db  0x28 ; '('
0000000000007f55         db  0xe9 ; '.'
0000000000007f56         db  0xff ; '.'
0000000000007f57         db  0xff ; '.'
0000000000007f58         db  0xa0 ; '.'
0000000000007f59         db  0x12 ; '.'
0000000000007f5a         db  0x00 ; '.'
0000000000007f5b         db  0x00 ; '.'
0000000000007f5c         db  0xd8 ; '.'
0000000000007f5d         db  0xe9 ; '.'
0000000000007f5e         db  0xff ; '.'
0000000000007f5f         db  0xff ; '.'
0000000000007f60         db  0xec ; '.'
0000000000007f61         db  0x12 ; '.'
0000000000007f62         db  0x00 ; '.'
0000000000007f63         db  0x00 ; '.'
0000000000007f64         db  0x38 ; '8'
0000000000007f65         db  0xea ; '.'
0000000000007f66         db  0xff ; '.'
0000000000007f67         db  0xff ; '.'
0000000000007f68         db  0x30 ; '0'
0000000000007f69         db  0x13 ; '.'
0000000000007f6a         db  0x00 ; '.'
0000000000007f6b         db  0x00 ; '.'
0000000000007f6c         db  0xa8 ; '.'
0000000000007f6d         db  0xea ; '.'
0000000000007f6e         db  0xff ; '.'
0000000000007f6f         db  0xff ; '.'
0000000000007f70         db  0x78 ; 'x'
0000000000007f71         db  0x13 ; '.'
0000000000007f72         db  0x00 ; '.'
0000000000007f73         db  0x00 ; '.'
0000000000007f74         db  0xb8 ; '.'
0000000000007f75         db  0xea ; '.'
0000000000007f76         db  0xff ; '.'
0000000000007f77         db  0xff ; '.'
0000000000007f78         db  0x90 ; '.'
0000000000007f79         db  0x13 ; '.'
0000000000007f7a         db  0x00 ; '.'
0000000000007f7b         db  0x00 ; '.'
0000000000007f7c         db  0x00 ; '.'
0000000000007f7d         db  0x00 ; '.'
0000000000007f7e         db  0x00 ; '.'
0000000000007f7f         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x7f80; 0x9010[ (4240 bytes)
        ; File offset : [32640; 36880[ (4240 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007f80         dd         0x00000014                                  ; Length of the record
0000000000007f84         dd         0x00000000                                  ; CIE ID
0000000000007f88         db         0x01                                        ; Version
0000000000007f89         db         "zR", 0                                     ; Augmentation String
0000000000007f8c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007f8d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007f8e         db         0x10                                        ; Return address register
0000000000007f8f         db         0x01                                        ; Augmentation data length
0000000000007f90         db         0x1b                                        ; FDE encoding
0000000000007f91         db  0x0c ; '.'
0000000000007f92         db  0x07 ; '.'
0000000000007f93         db  0x08 ; '.'
0000000000007f94         db  0x90 ; '.'
0000000000007f95         db  0x01 ; '.'
0000000000007f96         db  0x07 ; '.'
0000000000007f97         db  0x10 ; '.'
0000000000007f98         dd         0x00000014                                  ; Length of the record
0000000000007f9c         dd         0x0000001c                                  ; FDE: parent CIE at 0x7f80 (FDE encoding = 0x1B)
0000000000007fa0         db         0xf0, 0xa5, 2 dup (0xff)                    ; begin 0x2590
0000000000007fa4         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x25bb)
0000000000007fa8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fa9         align      16
0000000000007fb0         dd         0x00000014                                  ; Length of the record
0000000000007fb4         dd         0x00000000                                  ; CIE ID
0000000000007fb8         db         0x01                                        ; Version
0000000000007fb9         db         "zR", 0                                     ; Augmentation String
0000000000007fbc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007fbd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007fbe         db         0x10                                        ; Return address register
0000000000007fbf         db         0x01                                        ; Augmentation data length
0000000000007fc0         db         0x1b                                        ; FDE encoding
0000000000007fc1         db  0x0c ; '.'
0000000000007fc2         db  0x07 ; '.'
0000000000007fc3         db  0x08 ; '.'
0000000000007fc4         db  0x90 ; '.'
0000000000007fc5         db  0x01 ; '.'
0000000000007fc6         db  0x00 ; '.'
0000000000007fc7         db  0x00 ; '.'
0000000000007fc8         dd         0x00000024                                  ; Length of the record
0000000000007fcc         dd         0x0000001c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000007fd0         db         0x60, 0x97, 2 dup (0xff)                    ; begin 0x1730
0000000000007fd4         db         0x80, 0x03, 2 dup (0x00)                    ; length 0x380 (end at 0x1ab0)
0000000000007fd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fd9         db  0x0e ; '.'
0000000000007fda         db  0x10 ; '.'
0000000000007fdb         db  0x46 ; 'F'
0000000000007fdc         db  0x0e ; '.'
0000000000007fdd         db  0x18 ; '.'
0000000000007fde         db  0x4a ; 'J'
0000000000007fdf         db  0x0f ; '.'
0000000000007fe0         db  0x0b ; '.'
0000000000007fe1         db  0x77 ; 'w'
0000000000007fe2         db  0x08 ; '.'
0000000000007fe3         db  0x80 ; '.'
0000000000007fe4         db  0x00 ; '.'
0000000000007fe5         db  0x3f ; '?'
0000000000007fe6         db  0x1a ; '.'
0000000000007fe7         db  0x3b ; ';'
0000000000007fe8         db  0x2a ; '*'
0000000000007fe9         db  0x33 ; '3'
0000000000007fea         db  0x24 ; '$'
0000000000007feb         db  0x22 ; '"'
0000000000007fec         db  0x00 ; '.'
0000000000007fed         db  0x00 ; '.'
0000000000007fee         db  0x00 ; '.'
0000000000007fef         db  0x00 ; '.'
0000000000007ff0         dd         0x00000014                                  ; Length of the record
0000000000007ff4         dd         0x00000044                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000007ff8         db         0xb8, 0x9a, 2 dup (0xff)                    ; begin 0x1ab0
0000000000007ffc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1ab8)
0000000000008000         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008001         align      8
0000000000008008         dd         0x00000028                                  ; Length of the record
000000000000800c         dd         0x0000005c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008010         db         0x90, 0xa6, 2 dup (0xff)                    ; begin 0x26a0
0000000000008014         db         0x85, 3 dup (0x00)                          ; length 0x85 (end at 0x2725)
0000000000008018         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008019         db  0x44 ; 'D'
000000000000801a         db  0x0e ; '.'
000000000000801b         db  0x10 ; '.'
000000000000801c         db  0x6c ; 'l'
000000000000801d         db  0x0a ; '.'
000000000000801e         db  0x0e ; '.'
000000000000801f         db  0x08 ; '.'
0000000000008020         db  0x48 ; 'H'
0000000000008021         db  0x0b ; '.'
0000000000008022         db  0x61 ; 'a'
0000000000008023         db  0x0a ; '.'
0000000000008024         db  0x0e ; '.'
0000000000008025         db  0x08 ; '.'
0000000000008026         db  0x47 ; 'G'
0000000000008027         db  0x0b ; '.'
0000000000008028         db  0x4e ; 'N'
0000000000008029         db  0x0a ; '.'
000000000000802a         db  0x0e ; '.'
000000000000802b         db  0x08 ; '.'
000000000000802c         db  0x42 ; 'B'
000000000000802d         db  0x0b ; '.'
000000000000802e         db  0x54 ; 'T'
000000000000802f         db  0x0e ; '.'
0000000000008030         db  0x08 ; '.'
0000000000008031         db  0x00 ; '.'
0000000000008032         db  0x00 ; '.'
0000000000008033         db  0x00 ; '.'
0000000000008034         dd         0x00000028                                  ; Length of the record
0000000000008038         dd         0x00000088                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
000000000000803c         db         0xf4, 0xa6, 2 dup (0xff)                    ; begin 0x2730
0000000000008040         db         0x81, 3 dup (0x00)                          ; length 0x81 (end at 0x27b1)
0000000000008044         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008045         db  0x41 ; 'A'
0000000000008046         db  0x0e ; '.'
0000000000008047         db  0x10 ; '.'
0000000000008048         db  0x86 ; '.'
0000000000008049         db  0x02 ; '.'
000000000000804a         db  0x41 ; 'A'
000000000000804b         db  0x0e ; '.'
000000000000804c         db  0x18 ; '.'
000000000000804d         db  0x83 ; '.'
000000000000804e         db  0x03 ; '.'
000000000000804f         db  0x55 ; 'U'
0000000000008050         db  0x0e ; '.'
0000000000008051         db  0x30 ; '0'
0000000000008052         db  0x78 ; 'x'
0000000000008053         db  0x0a ; '.'
0000000000008054         db  0x0e ; '.'
0000000000008055         db  0x18 ; '.'
0000000000008056         db  0x41 ; 'A'
0000000000008057         db  0x0e ; '.'
0000000000008058         db  0x10 ; '.'
0000000000008059         db  0x41 ; 'A'
000000000000805a         db  0x0e ; '.'
000000000000805b         db  0x08 ; '.'
000000000000805c         db  0x41 ; 'A'
000000000000805d         db  0x0b ; '.'
000000000000805e         db  0x00 ; '.'
000000000000805f         db  0x00 ; '.'
0000000000008060         dd         0x0000001c                                  ; Length of the record
0000000000008064         dd         0x000000b4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008068         db         0x58, 0xa7, 2 dup (0xff)                    ; begin 0x27c0
000000000000806c         db         0x7f, 3 dup (0x00)                          ; length 0x7f (end at 0x283f)
0000000000008070         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008071         db  0x5a ; 'Z'
0000000000008072         db  0x0e ; '.'
0000000000008073         db  0x10 ; '.'
0000000000008074         db  0x83 ; '.'
0000000000008075         db  0x02 ; '.'
0000000000008076         db  0x55 ; 'U'
0000000000008077         db  0xc3 ; '.'
0000000000008078         db  0x0e ; '.'
0000000000008079         db  0x08 ; '.'
000000000000807a         db  0x79 ; 'y'
000000000000807b         db  0x0e ; '.'
000000000000807c         db  0x10 ; '.'
000000000000807d         db  0x83 ; '.'
000000000000807e         db  0x02 ; '.'
000000000000807f         db  0x00 ; '.'
0000000000008080         dd         0x0000003c                                  ; Length of the record
0000000000008084         dd         0x000000d4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008088         db         0xb8, 0xa7, 2 dup (0xff)                    ; begin 0x2840
000000000000808c         db         0xd3, 3 dup (0x00)                          ; length 0xd3 (end at 0x2913)
0000000000008090         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008091         db  0x42 ; 'B'
0000000000008092         db  0x0e ; '.'
0000000000008093         db  0x10 ; '.'
0000000000008094         db  0x8e ; '.'
0000000000008095         db  0x02 ; '.'
0000000000008096         db  0x42 ; 'B'
0000000000008097         db  0x0e ; '.'
0000000000008098         db  0x18 ; '.'
0000000000008099         db  0x8d ; '.'
000000000000809a         db  0x03 ; '.'
000000000000809b         db  0x4c ; 'L'
000000000000809c         db  0x0e ; '.'
000000000000809d         db  0x20 ; ' '
000000000000809e         db  0x8c ; '.'
000000000000809f         db  0x04 ; '.'
00000000000080a0         db  0x41 ; 'A'
00000000000080a1         db  0x0e ; '.'
00000000000080a2         db  0x28 ; '('
00000000000080a3         db  0x86 ; '.'
00000000000080a4         db  0x05 ; '.'
00000000000080a5         db  0x45 ; 'E'
00000000000080a6         db  0x0e ; '.'
00000000000080a7         db  0x30 ; '0'
00000000000080a8         db  0x83 ; '.'
00000000000080a9         db  0x06 ; '.'
00000000000080aa         db  0x02 ; '.'
00000000000080ab         db  0x9c ; '.'
00000000000080ac         db  0x0a ; '.'
00000000000080ad         db  0x0e ; '.'
00000000000080ae         db  0x28 ; '('
00000000000080af         db  0x41 ; 'A'
00000000000080b0         db  0x0e ; '.'
00000000000080b1         db  0x20 ; ' '
00000000000080b2         db  0x42 ; 'B'
00000000000080b3         db  0x0e ; '.'
00000000000080b4         db  0x18 ; '.'
00000000000080b5         db  0x42 ; 'B'
00000000000080b6         db  0x0e ; '.'
00000000000080b7         db  0x10 ; '.'
00000000000080b8         db  0x42 ; 'B'
00000000000080b9         db  0x0e ; '.'
00000000000080ba         db  0x08 ; '.'
00000000000080bb         db  0x47 ; 'G'
00000000000080bc         db  0x0b ; '.'
00000000000080bd         db  0x00 ; '.'
00000000000080be         db  0x00 ; '.'
00000000000080bf         db  0x00 ; '.'
00000000000080c0         dd         0x00000028                                  ; Length of the record
00000000000080c4         dd         0x00000114                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000080c8         db         0x58, 0xa8, 2 dup (0xff)                    ; begin 0x2920
00000000000080cc         db         0xb2, 0x04, 2 dup (0x00)                    ; length 0x4b2 (end at 0x2dd2)
00000000000080d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080d1         db  0x42 ; 'B'
00000000000080d2         db  0x0e ; '.'
00000000000080d3         db  0x10 ; '.'
00000000000080d4         db  0x8d ; '.'
00000000000080d5         db  0x02 ; '.'
00000000000080d6         db  0x42 ; 'B'
00000000000080d7         db  0x0e ; '.'
00000000000080d8         db  0x18 ; '.'
00000000000080d9         db  0x8c ; '.'
00000000000080da         db  0x03 ; '.'
00000000000080db         db  0x46 ; 'F'
00000000000080dc         db  0x0e ; '.'
00000000000080dd         db  0x20 ; ' '
00000000000080de         db  0x86 ; '.'
00000000000080df         db  0x04 ; '.'
00000000000080e0         db  0x41 ; 'A'
00000000000080e1         db  0x0e ; '.'
00000000000080e2         db  0x28 ; '('
00000000000080e3         db  0x83 ; '.'
00000000000080e4         db  0x05 ; '.'
00000000000080e5         db  0x49 ; 'I'
00000000000080e6         db  0x0e ; '.'
00000000000080e7         db  0xb0 ; '.'
00000000000080e8         db  0x01 ; '.'
00000000000080e9         db  0x00 ; '.'
00000000000080ea         db  0x00 ; '.'
00000000000080eb         db  0x00 ; '.'
00000000000080ec         dd         0x00000058                                  ; Length of the record
00000000000080f0         dd         0x00000140                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000080f4         db         0xcc, 0x99, 2 dup (0xff)                    ; begin 0x1ac0
00000000000080f8         db         0xcf, 0x0a, 2 dup (0x00)                    ; length 0xacf (end at 0x258f)
00000000000080fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080fd         db  0x42 ; 'B'
00000000000080fe         db  0x0e ; '.'
00000000000080ff         db  0x10 ; '.'
0000000000008100         db  0x8f ; '.'
0000000000008101         db  0x02 ; '.'
0000000000008102         db  0x42 ; 'B'
0000000000008103         db  0x0e ; '.'
0000000000008104         db  0x18 ; '.'
0000000000008105         db  0x8e ; '.'
0000000000008106         db  0x03 ; '.'
0000000000008107         db  0x45 ; 'E'
0000000000008108         db  0x0e ; '.'
0000000000008109         db  0x20 ; ' '
000000000000810a         db  0x8d ; '.'
000000000000810b         db  0x04 ; '.'
000000000000810c         db  0x42 ; 'B'
000000000000810d         db  0x0e ; '.'
000000000000810e         db  0x28 ; '('
000000000000810f         db  0x8c ; '.'
0000000000008110         db  0x05 ; '.'
0000000000008111         db  0x48 ; 'H'
0000000000008112         db  0x0e ; '.'
0000000000008113         db  0x30 ; '0'
0000000000008114         db  0x86 ; '.'
0000000000008115         db  0x06 ; '.'
0000000000008116         db  0x41 ; 'A'
0000000000008117         db  0x0e ; '.'
0000000000008118         db  0x38 ; '8'
0000000000008119         db  0x83 ; '.'
000000000000811a         db  0x07 ; '.'
000000000000811b         db  0x4a ; 'J'
000000000000811c         db  0x0e ; '.'
000000000000811d         db  0xe0 ; '.'
000000000000811e         db  0x01 ; '.'
000000000000811f         db  0x03 ; '.'
0000000000008120         db  0xc1 ; '.'
0000000000008121         db  0x04 ; '.'
0000000000008122         db  0x0a ; '.'
0000000000008123         db  0x0e ; '.'
0000000000008124         db  0x38 ; '8'
0000000000008125         db  0x41 ; 'A'
0000000000008126         db  0x0e ; '.'
0000000000008127         db  0x30 ; '0'
0000000000008128         db  0x41 ; 'A'
0000000000008129         db  0x0e ; '.'
000000000000812a         db  0x28 ; '('
000000000000812b         db  0x42 ; 'B'
000000000000812c         db  0x0e ; '.'
000000000000812d         db  0x20 ; ' '
000000000000812e         db  0x42 ; 'B'
000000000000812f         db  0x0e ; '.'
0000000000008130         db  0x18 ; '.'
0000000000008131         db  0x42 ; 'B'
0000000000008132         db  0x0e ; '.'
0000000000008133         db  0x10 ; '.'
0000000000008134         db  0x42 ; 'B'
0000000000008135         db  0x0e ; '.'
0000000000008136         db  0x08 ; '.'
0000000000008137         db  0x41 ; 'A'
0000000000008138         db  0x0b ; '.'
0000000000008139         db  0x03 ; '.'
000000000000813a         db  0x3f ; '?'
000000000000813b         db  0x02 ; '.'
000000000000813c         db  0x0a ; '.'
000000000000813d         db  0x0e ; '.'
000000000000813e         db  0xe8 ; '.'
000000000000813f         db  0x01 ; '.'
0000000000008140         db  0x50 ; 'P'
0000000000008141         db  0x0e ; '.'
0000000000008142         db  0xf0 ; '.'
0000000000008143         db  0x01 ; '.'
0000000000008144         db  0x6a ; 'j'
0000000000008145         db  0x0b ; '.'
0000000000008146         db  0x00 ; '.'
0000000000008147         db  0x00 ; '.'
0000000000008148         dd         0x00000010                                  ; Length of the record
000000000000814c         dd         0x0000019c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008150         db         0x90, 0xac, 2 dup (0xff)                    ; begin 0x2de0
0000000000008154         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x2dea)
0000000000008158         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008159         align      4
000000000000815c         dd         0x00000048                                  ; Length of the record
0000000000008160         dd         0x000001b0                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008164         db         0x8c, 0xac, 2 dup (0xff)                    ; begin 0x2df0
0000000000008168         db         0x16, 0x01, 2 dup (0x00)                    ; length 0x116 (end at 0x2f06)
000000000000816c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000816d         db  0x42 ; 'B'
000000000000816e         db  0x0e ; '.'
000000000000816f         db  0x10 ; '.'
0000000000008170         db  0x8f ; '.'
0000000000008171         db  0x02 ; '.'
0000000000008172         db  0x42 ; 'B'
0000000000008173         db  0x0e ; '.'
0000000000008174         db  0x18 ; '.'
0000000000008175         db  0x8e ; '.'
0000000000008176         db  0x03 ; '.'
0000000000008177         db  0x45 ; 'E'
0000000000008178         db  0x0e ; '.'
0000000000008179         db  0x20 ; ' '
000000000000817a         db  0x8d ; '.'
000000000000817b         db  0x04 ; '.'
000000000000817c         db  0x42 ; 'B'
000000000000817d         db  0x0e ; '.'
000000000000817e         db  0x28 ; '('
000000000000817f         db  0x8c ; '.'
0000000000008180         db  0x05 ; '.'
0000000000008181         db  0x44 ; 'D'
0000000000008182         db  0x0e ; '.'
0000000000008183         db  0x30 ; '0'
0000000000008184         db  0x86 ; '.'
0000000000008185         db  0x06 ; '.'
0000000000008186         db  0x41 ; 'A'
0000000000008187         db  0x0e ; '.'
0000000000008188         db  0x38 ; '8'
0000000000008189         db  0x83 ; '.'
000000000000818a         db  0x07 ; '.'
000000000000818b         db  0x47 ; 'G'
000000000000818c         db  0x0e ; '.'
000000000000818d         db  0x60 ; '`'
000000000000818e         db  0x02 ; '.'
000000000000818f         db  0xde ; '.'
0000000000008190         db  0x0a ; '.'
0000000000008191         db  0x0e ; '.'
0000000000008192         db  0x38 ; '8'
0000000000008193         db  0x41 ; 'A'
0000000000008194         db  0x0e ; '.'
0000000000008195         db  0x30 ; '0'
0000000000008196         db  0x41 ; 'A'
0000000000008197         db  0x0e ; '.'
0000000000008198         db  0x28 ; '('
0000000000008199         db  0x42 ; 'B'
000000000000819a         db  0x0e ; '.'
000000000000819b         db  0x20 ; ' '
000000000000819c         db  0x42 ; 'B'
000000000000819d         db  0x0e ; '.'
000000000000819e         db  0x18 ; '.'
000000000000819f         db  0x42 ; 'B'
00000000000081a0         db  0x0e ; '.'
00000000000081a1         db  0x10 ; '.'
00000000000081a2         db  0x42 ; 'B'
00000000000081a3         db  0x0e ; '.'
00000000000081a4         db  0x08 ; '.'
00000000000081a5         db  0x41 ; 'A'
00000000000081a6         db  0x0b ; '.'
00000000000081a7         db  0x00 ; '.'
00000000000081a8         dd         0x00000028                                  ; Length of the record
00000000000081ac         dd         0x000001fc                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000081b0         db         0x60, 0xad, 2 dup (0xff)                    ; begin 0x2f10
00000000000081b4         db         0x73, 3 dup (0x00)                          ; length 0x73 (end at 0x2f83)
00000000000081b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081b9         db  0x46 ; 'F'
00000000000081ba         db  0x0e ; '.'
00000000000081bb         db  0x10 ; '.'
00000000000081bc         db  0x8c ; '.'
00000000000081bd         db  0x02 ; '.'
00000000000081be         db  0x46 ; 'F'
00000000000081bf         db  0x0e ; '.'
00000000000081c0         db  0x18 ; '.'
00000000000081c1         db  0x86 ; '.'
00000000000081c2         db  0x03 ; '.'
00000000000081c3         db  0x44 ; 'D'
00000000000081c4         db  0x0e ; '.'
00000000000081c5         db  0x20 ; ' '
00000000000081c6         db  0x83 ; '.'
00000000000081c7         db  0x04 ; '.'
00000000000081c8         db  0x7f ; '.'
00000000000081c9         db  0x0a ; '.'
00000000000081ca         db  0x0e ; '.'
00000000000081cb         db  0x18 ; '.'
00000000000081cc         db  0x41 ; 'A'
00000000000081cd         db  0x0e ; '.'
00000000000081ce         db  0x10 ; '.'
00000000000081cf         db  0x42 ; 'B'
00000000000081d0         db  0x0e ; '.'
00000000000081d1         db  0x08 ; '.'
00000000000081d2         db  0x4e ; 'N'
00000000000081d3         db  0x0b ; '.'
00000000000081d4         dd         0x0000005c                                  ; Length of the record
00000000000081d8         dd         0x00000228                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000081dc         db         0xb4, 0xad, 2 dup (0xff)                    ; begin 0x2f90
00000000000081e0         db         0x20, 0x01, 2 dup (0x00)                    ; length 0x120 (end at 0x30b0)
00000000000081e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081e5         db  0x42 ; 'B'
00000000000081e6         db  0x0e ; '.'
00000000000081e7         db  0x10 ; '.'
00000000000081e8         db  0x8f ; '.'
00000000000081e9         db  0x02 ; '.'
00000000000081ea         db  0x42 ; 'B'
00000000000081eb         db  0x0e ; '.'
00000000000081ec         db  0x18 ; '.'
00000000000081ed         db  0x8e ; '.'
00000000000081ee         db  0x03 ; '.'
00000000000081ef         db  0x45 ; 'E'
00000000000081f0         db  0x0e ; '.'
00000000000081f1         db  0x20 ; ' '
00000000000081f2         db  0x8d ; '.'
00000000000081f3         db  0x04 ; '.'
00000000000081f4         db  0x42 ; 'B'
00000000000081f5         db  0x0e ; '.'
00000000000081f6         db  0x28 ; '('
00000000000081f7         db  0x8c ; '.'
00000000000081f8         db  0x05 ; '.'
00000000000081f9         db  0x43 ; 'C'
00000000000081fa         db  0x0e ; '.'
00000000000081fb         db  0x30 ; '0'
00000000000081fc         db  0x86 ; '.'
00000000000081fd         db  0x06 ; '.'
00000000000081fe         db  0x41 ; 'A'
00000000000081ff         db  0x0e ; '.'
0000000000008200         db  0x38 ; '8'
0000000000008201         db  0x83 ; '.'
0000000000008202         db  0x07 ; '.'
0000000000008203         db  0x56 ; 'V'
0000000000008204         db  0x0e ; '.'
0000000000008205         db  0x40 ; '@'
0000000000008206         db  0x02 ; '.'
0000000000008207         db  0xd3 ; '.'
0000000000008208         db  0x0a ; '.'
0000000000008209         db  0x0e ; '.'
000000000000820a         db  0x38 ; '8'
000000000000820b         db  0x41 ; 'A'
000000000000820c         db  0x0e ; '.'
000000000000820d         db  0x30 ; '0'
000000000000820e         db  0x41 ; 'A'
000000000000820f         db  0x0e ; '.'
0000000000008210         db  0x28 ; '('
0000000000008211         db  0x42 ; 'B'
0000000000008212         db  0x0e ; '.'
0000000000008213         db  0x20 ; ' '
0000000000008214         db  0x42 ; 'B'
0000000000008215         db  0x0e ; '.'
0000000000008216         db  0x18 ; '.'
0000000000008217         db  0x42 ; 'B'
0000000000008218         db  0x0e ; '.'
0000000000008219         db  0x10 ; '.'
000000000000821a         db  0x42 ; 'B'
000000000000821b         db  0x0e ; '.'
000000000000821c         db  0x08 ; '.'
000000000000821d         db  0x46 ; 'F'
000000000000821e         db  0x0b ; '.'
000000000000821f         db  0x44 ; 'D'
0000000000008220         db  0x0e ; '.'
0000000000008221         db  0x38 ; '8'
0000000000008222         db  0x46 ; 'F'
0000000000008223         db  0x0e ; '.'
0000000000008224         db  0x30 ; '0'
0000000000008225         db  0x41 ; 'A'
0000000000008226         db  0x0e ; '.'
0000000000008227         db  0x28 ; '('
0000000000008228         db  0x42 ; 'B'
0000000000008229         db  0x0e ; '.'
000000000000822a         db  0x20 ; ' '
000000000000822b         db  0x42 ; 'B'
000000000000822c         db  0x0e ; '.'
000000000000822d         db  0x18 ; '.'
000000000000822e         db  0x42 ; 'B'
000000000000822f         db  0x0e ; '.'
0000000000008230         db  0x10 ; '.'
0000000000008231         db  0x42 ; 'B'
0000000000008232         db  0x0e ; '.'
0000000000008233         db  0x08 ; '.'
0000000000008234         dd         0x00000048                                  ; Length of the record
0000000000008238         dd         0x00000288                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
000000000000823c         db         0x74, 0xae, 2 dup (0xff)                    ; begin 0x30b0
0000000000008240         db         0x6d, 3 dup (0x00)                          ; length 0x6d (end at 0x311d)
0000000000008244         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008245         db  0x42 ; 'B'
0000000000008246         db  0x0e ; '.'
0000000000008247         db  0x10 ; '.'
0000000000008248         db  0x8f ; '.'
0000000000008249         db  0x02 ; '.'
000000000000824a         db  0x42 ; 'B'
000000000000824b         db  0x0e ; '.'
000000000000824c         db  0x18 ; '.'
000000000000824d         db  0x8e ; '.'
000000000000824e         db  0x03 ; '.'
000000000000824f         db  0x45 ; 'E'
0000000000008250         db  0x0e ; '.'
0000000000008251         db  0x20 ; ' '
0000000000008252         db  0x8d ; '.'
0000000000008253         db  0x04 ; '.'
0000000000008254         db  0x42 ; 'B'
0000000000008255         db  0x0e ; '.'
0000000000008256         db  0x28 ; '('
0000000000008257         db  0x8c ; '.'
0000000000008258         db  0x05 ; '.'
0000000000008259         db  0x44 ; 'D'
000000000000825a         db  0x0e ; '.'
000000000000825b         db  0x30 ; '0'
000000000000825c         db  0x86 ; '.'
000000000000825d         db  0x06 ; '.'
000000000000825e         db  0x41 ; 'A'
000000000000825f         db  0x0e ; '.'
0000000000008260         db  0x38 ; '8'
0000000000008261         db  0x83 ; '.'
0000000000008262         db  0x07 ; '.'
0000000000008263         db  0x50 ; 'P'
0000000000008264         db  0x0e ; '.'
0000000000008265         db  0x40 ; '@'
0000000000008266         db  0x5a ; 'Z'
0000000000008267         db  0x0a ; '.'
0000000000008268         db  0x0e ; '.'
0000000000008269         db  0x38 ; '8'
000000000000826a         db  0x41 ; 'A'
000000000000826b         db  0x0e ; '.'
000000000000826c         db  0x30 ; '0'
000000000000826d         db  0x41 ; 'A'
000000000000826e         db  0x0e ; '.'
000000000000826f         db  0x28 ; '('
0000000000008270         db  0x42 ; 'B'
0000000000008271         db  0x0e ; '.'
0000000000008272         db  0x20 ; ' '
0000000000008273         db  0x42 ; 'B'
0000000000008274         db  0x0e ; '.'
0000000000008275         db  0x18 ; '.'
0000000000008276         db  0x42 ; 'B'
0000000000008277         db  0x0e ; '.'
0000000000008278         db  0x10 ; '.'
0000000000008279         db  0x42 ; 'B'
000000000000827a         db  0x0e ; '.'
000000000000827b         db  0x08 ; '.'
000000000000827c         db  0x41 ; 'A'
000000000000827d         db  0x0b ; '.'
000000000000827e         db  0x00 ; '.'
000000000000827f         db  0x00 ; '.'
0000000000008280         dd         0x0000003c                                  ; Length of the record
0000000000008284         dd         0x000002d4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008288         db         0x98, 0xae, 2 dup (0xff)                    ; begin 0x3120
000000000000828c         db         0x4d, 3 dup (0x00)                          ; length 0x4d (end at 0x316d)
0000000000008290         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008291         db  0x42 ; 'B'
0000000000008292         db  0x0e ; '.'
0000000000008293         db  0x10 ; '.'
0000000000008294         db  0x8e ; '.'
0000000000008295         db  0x02 ; '.'
0000000000008296         db  0x42 ; 'B'
0000000000008297         db  0x0e ; '.'
0000000000008298         db  0x18 ; '.'
0000000000008299         db  0x8d ; '.'
000000000000829a         db  0x03 ; '.'
000000000000829b         db  0x42 ; 'B'
000000000000829c         db  0x0e ; '.'
000000000000829d         db  0x20 ; ' '
000000000000829e         db  0x8c ; '.'
000000000000829f         db  0x04 ; '.'
00000000000082a0         db  0x41 ; 'A'
00000000000082a1         db  0x0e ; '.'
00000000000082a2         db  0x28 ; '('
00000000000082a3         db  0x86 ; '.'
00000000000082a4         db  0x05 ; '.'
00000000000082a5         db  0x41 ; 'A'
00000000000082a6         db  0x0e ; '.'
00000000000082a7         db  0x30 ; '0'
00000000000082a8         db  0x83 ; '.'
00000000000082a9         db  0x06 ; '.'
00000000000082aa         db  0x7a ; 'z'
00000000000082ab         db  0x0e ; '.'
00000000000082ac         db  0x28 ; '('
00000000000082ad         db  0x44 ; 'D'
00000000000082ae         db  0x0e ; '.'
00000000000082af         db  0x20 ; ' '
00000000000082b0         db  0x42 ; 'B'
00000000000082b1         db  0x0e ; '.'
00000000000082b2         db  0x18 ; '.'
00000000000082b3         db  0x42 ; 'B'
00000000000082b4         db  0x0e ; '.'
00000000000082b5         db  0x10 ; '.'
00000000000082b6         db  0x42 ; 'B'
00000000000082b7         db  0x0e ; '.'
00000000000082b8         db  0x08 ; '.'
00000000000082b9         db  0x00 ; '.'
00000000000082ba         db  0x00 ; '.'
00000000000082bb         db  0x00 ; '.'
00000000000082bc         db  0x00 ; '.'
00000000000082bd         db  0x00 ; '.'
00000000000082be         db  0x00 ; '.'
00000000000082bf         db  0x00 ; '.'
00000000000082c0         dd         0x00000010                                  ; Length of the record
00000000000082c4         dd         0x00000314                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000082c8         db         0xa8, 0xae, 2 dup (0xff)                    ; begin 0x3170
00000000000082cc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3178)
00000000000082d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082d1         align      4
00000000000082d4         dd         0x00000010                                  ; Length of the record
00000000000082d8         dd         0x00000328                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000082dc         db         0xa4, 0xae, 2 dup (0xff)                    ; begin 0x3180
00000000000082e0         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3188)
00000000000082e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082e5         align      8
00000000000082e8         dd         0x0000002c                                  ; Length of the record
00000000000082ec         dd         0x0000033c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000082f0         db         0xa0, 0xae, 2 dup (0xff)                    ; begin 0x3190
00000000000082f4         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x3234)
00000000000082f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082f9         db  0x41 ; 'A'
00000000000082fa         db  0x0e ; '.'
00000000000082fb         db  0x10 ; '.'
00000000000082fc         db  0x86 ; '.'
00000000000082fd         db  0x02 ; '.'
00000000000082fe         db  0x41 ; 'A'
00000000000082ff         db  0x0e ; '.'
0000000000008300         db  0x18 ; '.'
0000000000008301         db  0x83 ; '.'
0000000000008302         db  0x03 ; '.'
0000000000008303         db  0x44 ; 'D'
0000000000008304         db  0x0e ; '.'
0000000000008305         db  0x20 ; ' '
0000000000008306         db  0x7a ; 'z'
0000000000008307         db  0x0a ; '.'
0000000000008308         db  0x0e ; '.'
0000000000008309         db  0x18 ; '.'
000000000000830a         db  0x41 ; 'A'
000000000000830b         db  0x0e ; '.'
000000000000830c         db  0x10 ; '.'
000000000000830d         db  0x41 ; 'A'
000000000000830e         db  0x0e ; '.'
000000000000830f         db  0x08 ; '.'
0000000000008310         db  0x41 ; 'A'
0000000000008311         db  0x0b ; '.'
0000000000008312         db  0x00 ; '.'
0000000000008313         db  0x00 ; '.'
0000000000008314         db  0x00 ; '.'
0000000000008315         db  0x00 ; '.'
0000000000008316         db  0x00 ; '.'
0000000000008317         db  0x00 ; '.'
0000000000008318         dd         0x00000010                                  ; Length of the record
000000000000831c         dd         0x0000036c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008320         db         0x20, 0xaf, 2 dup (0xff)                    ; begin 0x3240
0000000000008324         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x3245)
0000000000008328         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008329         align      4
000000000000832c         dd         0x00000018                                  ; Length of the record
0000000000008330         dd         0x00000380                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008334         db         0x1c, 0xaf, 2 dup (0xff)                    ; begin 0x3250
0000000000008338         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x3272)
000000000000833c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000833d         db  0x46 ; 'F'
000000000000833e         db  0x0e ; '.'
000000000000833f         db  0x10 ; '.'
0000000000008340         db  0x83 ; '.'
0000000000008341         db  0x02 ; '.'
0000000000008342         db  0x4e ; 'N'
0000000000008343         db  0xc3 ; '.'
0000000000008344         db  0x0e ; '.'
0000000000008345         db  0x08 ; '.'
0000000000008346         db  0x00 ; '.'
0000000000008347         db  0x00 ; '.'
0000000000008348         dd         0x00000024                                  ; Length of the record
000000000000834c         dd         0x0000039c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008350         db         0x30, 0xaf, 2 dup (0xff)                    ; begin 0x3280
0000000000008354         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x32c2)
0000000000008358         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008359         db  0x41 ; 'A'
000000000000835a         db  0x0e ; '.'
000000000000835b         db  0x10 ; '.'
000000000000835c         db  0x86 ; '.'
000000000000835d         db  0x02 ; '.'
000000000000835e         db  0x41 ; 'A'
000000000000835f         db  0x0e ; '.'
0000000000008360         db  0x18 ; '.'
0000000000008361         db  0x83 ; '.'
0000000000008362         db  0x03 ; '.'
0000000000008363         db  0x51 ; 'Q'
0000000000008364         db  0x0e ; '.'
0000000000008365         db  0x20 ; ' '
0000000000008366         db  0x6a ; 'j'
0000000000008367         db  0x0e ; '.'
0000000000008368         db  0x18 ; '.'
0000000000008369         db  0x43 ; 'C'
000000000000836a         db  0x0e ; '.'
000000000000836b         db  0x10 ; '.'
000000000000836c         db  0x41 ; 'A'
000000000000836d         db  0x0e ; '.'
000000000000836e         db  0x08 ; '.'
000000000000836f         db  0x00 ; '.'
0000000000008370         dd         0x0000004c                                  ; Length of the record
0000000000008374         dd         0x000003c4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008378         db         0x58, 0xaf, 2 dup (0xff)                    ; begin 0x32d0
000000000000837c         db         0xae, 0x01, 2 dup (0x00)                    ; length 0x1ae (end at 0x347e)
0000000000008380         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008381         db  0x42 ; 'B'
0000000000008382         db  0x0e ; '.'
0000000000008383         db  0x10 ; '.'
0000000000008384         db  0x8f ; '.'
0000000000008385         db  0x02 ; '.'
0000000000008386         db  0x42 ; 'B'
0000000000008387         db  0x0e ; '.'
0000000000008388         db  0x18 ; '.'
0000000000008389         db  0x8e ; '.'
000000000000838a         db  0x03 ; '.'
000000000000838b         db  0x45 ; 'E'
000000000000838c         db  0x0e ; '.'
000000000000838d         db  0x20 ; ' '
000000000000838e         db  0x8d ; '.'
000000000000838f         db  0x04 ; '.'
0000000000008390         db  0x42 ; 'B'
0000000000008391         db  0x0e ; '.'
0000000000008392         db  0x28 ; '('
0000000000008393         db  0x8c ; '.'
0000000000008394         db  0x05 ; '.'
0000000000008395         db  0x44 ; 'D'
0000000000008396         db  0x0e ; '.'
0000000000008397         db  0x30 ; '0'
0000000000008398         db  0x86 ; '.'
0000000000008399         db  0x06 ; '.'
000000000000839a         db  0x41 ; 'A'
000000000000839b         db  0x0e ; '.'
000000000000839c         db  0x38 ; '8'
000000000000839d         db  0x83 ; '.'
000000000000839e         db  0x07 ; '.'
000000000000839f         db  0x44 ; 'D'
00000000000083a0         db  0x0e ; '.'
00000000000083a1         db  0x50 ; 'P'
00000000000083a2         db  0x02 ; '.'
00000000000083a3         db  0xd0 ; '.'
00000000000083a4         db  0x0a ; '.'
00000000000083a5         db  0x0e ; '.'
00000000000083a6         db  0x38 ; '8'
00000000000083a7         db  0x44 ; 'D'
00000000000083a8         db  0x0e ; '.'
00000000000083a9         db  0x30 ; '0'
00000000000083aa         db  0x41 ; 'A'
00000000000083ab         db  0x0e ; '.'
00000000000083ac         db  0x28 ; '('
00000000000083ad         db  0x42 ; 'B'
00000000000083ae         db  0x0e ; '.'
00000000000083af         db  0x20 ; ' '
00000000000083b0         db  0x42 ; 'B'
00000000000083b1         db  0x0e ; '.'
00000000000083b2         db  0x18 ; '.'
00000000000083b3         db  0x42 ; 'B'
00000000000083b4         db  0x0e ; '.'
00000000000083b5         db  0x10 ; '.'
00000000000083b6         db  0x42 ; 'B'
00000000000083b7         db  0x0e ; '.'
00000000000083b8         db  0x08 ; '.'
00000000000083b9         db  0x47 ; 'G'
00000000000083ba         db  0x0b ; '.'
00000000000083bb         db  0x00 ; '.'
00000000000083bc         db  0x00 ; '.'
00000000000083bd         db  0x00 ; '.'
00000000000083be         db  0x00 ; '.'
00000000000083bf         db  0x00 ; '.'
00000000000083c0         dd         0x0000001c                                  ; Length of the record
00000000000083c4         dd         0x00000414                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000083c8         db         0xb8, 0xb0, 2 dup (0xff)                    ; begin 0x3480
00000000000083cc         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x34e0)
00000000000083d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083d1         db  0x44 ; 'D'
00000000000083d2         db  0x0e ; '.'
00000000000083d3         db  0x10 ; '.'
00000000000083d4         db  0x75 ; 'u'
00000000000083d5         db  0x0a ; '.'
00000000000083d6         db  0x0e ; '.'
00000000000083d7         db  0x08 ; '.'
00000000000083d8         db  0x47 ; 'G'
00000000000083d9         db  0x0b ; '.'
00000000000083da         db  0x5f ; '_'
00000000000083db         db  0x0e ; '.'
00000000000083dc         db  0x08 ; '.'
00000000000083dd         db  0x00 ; '.'
00000000000083de         db  0x00 ; '.'
00000000000083df         db  0x00 ; '.'
00000000000083e0         dd         0x00000010                                  ; Length of the record
00000000000083e4         dd         0x00000434                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000083e8         db         0xf8, 0xb0, 2 dup (0xff)                    ; begin 0x34e0
00000000000083ec         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x34f0)
00000000000083f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083f1         align      4
00000000000083f4         dd         0x00000060                                  ; Length of the record
00000000000083f8         dd         0x00000448                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000083fc         db         0xf4, 0xb0, 2 dup (0xff)                    ; begin 0x34f0
0000000000008400         db         0x08, 0x01, 2 dup (0x00)                    ; length 0x108 (end at 0x35f8)
0000000000008404         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008405         db  0x42 ; 'B'
0000000000008406         db  0x0e ; '.'
0000000000008407         db  0x10 ; '.'
0000000000008408         db  0x8f ; '.'
0000000000008409         db  0x02 ; '.'
000000000000840a         db  0x42 ; 'B'
000000000000840b         db  0x0e ; '.'
000000000000840c         db  0x18 ; '.'
000000000000840d         db  0x8e ; '.'
000000000000840e         db  0x03 ; '.'
000000000000840f         db  0x42 ; 'B'
0000000000008410         db  0x0e ; '.'
0000000000008411         db  0x20 ; ' '
0000000000008412         db  0x8d ; '.'
0000000000008413         db  0x04 ; '.'
0000000000008414         db  0x42 ; 'B'
0000000000008415         db  0x0e ; '.'
0000000000008416         db  0x28 ; '('
0000000000008417         db  0x8c ; '.'
0000000000008418         db  0x05 ; '.'
0000000000008419         db  0x41 ; 'A'
000000000000841a         db  0x0e ; '.'
000000000000841b         db  0x30 ; '0'
000000000000841c         db  0x86 ; '.'
000000000000841d         db  0x06 ; '.'
000000000000841e         db  0x41 ; 'A'
000000000000841f         db  0x0e ; '.'
0000000000008420         db  0x38 ; '8'
0000000000008421         db  0x83 ; '.'
0000000000008422         db  0x07 ; '.'
0000000000008423         db  0x44 ; 'D'
0000000000008424         db  0x0e ; '.'
0000000000008425         db  0x50 ; 'P'
0000000000008426         db  0x02 ; '.'
0000000000008427         db  0x96 ; '.'
0000000000008428         db  0x0a ; '.'
0000000000008429         db  0x0e ; '.'
000000000000842a         db  0x38 ; '8'
000000000000842b         db  0x41 ; 'A'
000000000000842c         db  0x0e ; '.'
000000000000842d         db  0x30 ; '0'
000000000000842e         db  0x41 ; 'A'
000000000000842f         db  0x0e ; '.'
0000000000008430         db  0x28 ; '('
0000000000008431         db  0x42 ; 'B'
0000000000008432         db  0x0e ; '.'
0000000000008433         db  0x20 ; ' '
0000000000008434         db  0x42 ; 'B'
0000000000008435         db  0x0e ; '.'
0000000000008436         db  0x18 ; '.'
0000000000008437         db  0x42 ; 'B'
0000000000008438         db  0x0e ; '.'
0000000000008439         db  0x10 ; '.'
000000000000843a         db  0x42 ; 'B'
000000000000843b         db  0x0e ; '.'
000000000000843c         db  0x08 ; '.'
000000000000843d         db  0x42 ; 'B'
000000000000843e         db  0x0b ; '.'
000000000000843f         db  0x02 ; '.'
0000000000008440         db  0x44 ; 'D'
0000000000008441         db  0x0a ; '.'
0000000000008442         db  0x0e ; '.'
0000000000008443         db  0x38 ; '8'
0000000000008444         db  0x43 ; 'C'
0000000000008445         db  0x0e ; '.'
0000000000008446         db  0x30 ; '0'
0000000000008447         db  0x41 ; 'A'
0000000000008448         db  0x0e ; '.'
0000000000008449         db  0x28 ; '('
000000000000844a         db  0x42 ; 'B'
000000000000844b         db  0x0e ; '.'
000000000000844c         db  0x20 ; ' '
000000000000844d         db  0x42 ; 'B'
000000000000844e         db  0x0e ; '.'
000000000000844f         db  0x18 ; '.'
0000000000008450         db  0x42 ; 'B'
0000000000008451         db  0x0e ; '.'
0000000000008452         db  0x10 ; '.'
0000000000008453         db  0x42 ; 'B'
0000000000008454         db  0x0e ; '.'
0000000000008455         db  0x08 ; '.'
0000000000008456         db  0x41 ; 'A'
0000000000008457         db  0x0b ; '.'
0000000000008458         dd         0x00000010                                  ; Length of the record
000000000000845c         dd         0x000004ac                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008460         db         0xa0, 0xb1, 2 dup (0xff)                    ; begin 0x3600
0000000000008464         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x360a)
0000000000008468         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008469         align      4
000000000000846c         dd         0x00000010                                  ; Length of the record
0000000000008470         dd         0x000004c0                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008474         db         0x9c, 0xb1, 2 dup (0xff)                    ; begin 0x3610
0000000000008478         db         0x09, 3 dup (0x00)                          ; length 0x9 (end at 0x3619)
000000000000847c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000847d         align      128
0000000000008480         dd         0x0000002c                                  ; Length of the record
0000000000008484         dd         0x000004d4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008488         db         0x98, 0xb1, 2 dup (0xff)                    ; begin 0x3620
000000000000848c         db         0x4b, 3 dup (0x00)                          ; length 0x4b (end at 0x366b)
0000000000008490         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008491         db  0x47 ; 'G'
0000000000008492         db  0x0e ; '.'
0000000000008493         db  0x10 ; '.'
0000000000008494         db  0x8c ; '.'
0000000000008495         db  0x02 ; '.'
0000000000008496         db  0x41 ; 'A'
0000000000008497         db  0x0e ; '.'
0000000000008498         db  0x18 ; '.'
0000000000008499         db  0x86 ; '.'
000000000000849a         db  0x03 ; '.'
000000000000849b         db  0x44 ; 'D'
000000000000849c         db  0x0e ; '.'
000000000000849d         db  0x20 ; ' '
000000000000849e         db  0x83 ; '.'
000000000000849f         db  0x04 ; '.'
00000000000084a0         db  0x72 ; 'r'
00000000000084a1         db  0x0e ; '.'
00000000000084a2         db  0x18 ; '.'
00000000000084a3         db  0x41 ; 'A'
00000000000084a4         db  0x0e ; '.'
00000000000084a5         db  0x10 ; '.'
00000000000084a6         db  0x42 ; 'B'
00000000000084a7         db  0x0e ; '.'
00000000000084a8         db  0x08 ; '.'
00000000000084a9         db  0x47 ; 'G'
00000000000084aa         db  0xc3 ; '.'
00000000000084ab         db  0xc6 ; '.'
00000000000084ac         db  0xcc ; '.'
00000000000084ad         db  0x00 ; '.'
00000000000084ae         db  0x00 ; '.'
00000000000084af         db  0x00 ; '.'
00000000000084b0         dd         0x00000024                                  ; Length of the record
00000000000084b4         dd         0x00000504                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000084b8         db         0xb8, 0xb1, 2 dup (0xff)                    ; begin 0x3670
00000000000084bc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x36fe)
00000000000084c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084c1         db  0x41 ; 'A'
00000000000084c2         db  0x0e ; '.'
00000000000084c3         db  0x10 ; '.'
00000000000084c4         db  0x83 ; '.'
00000000000084c5         db  0x02 ; '.'
00000000000084c6         db  0x50 ; 'P'
00000000000084c7         db  0x0e ; '.'
00000000000084c8         db  0x20 ; ' '
00000000000084c9         db  0x75 ; 'u'
00000000000084ca         db  0x0a ; '.'
00000000000084cb         db  0x0e ; '.'
00000000000084cc         db  0x10 ; '.'
00000000000084cd         db  0x41 ; 'A'
00000000000084ce         db  0x0e ; '.'
00000000000084cf         db  0x08 ; '.'
00000000000084d0         db  0x49 ; 'I'
00000000000084d1         db  0x0b ; '.'
00000000000084d2         db  0x00 ; '.'
00000000000084d3         db  0x00 ; '.'
00000000000084d4         db  0x00 ; '.'
00000000000084d5         db  0x00 ; '.'
00000000000084d6         db  0x00 ; '.'
00000000000084d7         db  0x00 ; '.'
00000000000084d8         dd         0x0000001c                                  ; Length of the record
00000000000084dc         dd         0x0000052c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000084e0         db         0x20, 0xb2, 2 dup (0xff)                    ; begin 0x3700
00000000000084e4         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x379f)
00000000000084e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084e9         db  0x44 ; 'D'
00000000000084ea         db  0x0e ; '.'
00000000000084eb         db  0x10 ; '.'
00000000000084ec         db  0x83 ; '.'
00000000000084ed         db  0x02 ; '.'
00000000000084ee         db  0x02 ; '.'
00000000000084ef         db  0x78 ; 'x'
00000000000084f0         db  0x0a ; '.'
00000000000084f1         db  0x0e ; '.'
00000000000084f2         db  0x08 ; '.'
00000000000084f3         db  0x41 ; 'A'
00000000000084f4         db  0x0b ; '.'
00000000000084f5         db  0x00 ; '.'
00000000000084f6         db  0x00 ; '.'
00000000000084f7         db  0x00 ; '.'
00000000000084f8         dd         0x00000040                                  ; Length of the record
00000000000084fc         dd         0x0000054c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008500         db         0xa0, 0xb2, 2 dup (0xff)                    ; begin 0x37a0
0000000000008504         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x3887)
0000000000008508         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008509         db  0x41 ; 'A'
000000000000850a         db  0x0e ; '.'
000000000000850b         db  0x10 ; '.'
000000000000850c         db  0x86 ; '.'
000000000000850d         db  0x02 ; '.'
000000000000850e         db  0x41 ; 'A'
000000000000850f         db  0x0e ; '.'
0000000000008510         db  0x18 ; '.'
0000000000008511         db  0x83 ; '.'
0000000000008512         db  0x03 ; '.'
0000000000008513         db  0x49 ; 'I'
0000000000008514         db  0x0e ; '.'
0000000000008515         db  0x20 ; ' '
0000000000008516         db  0x6e ; 'n'
0000000000008517         db  0x0a ; '.'
0000000000008518         db  0x0e ; '.'
0000000000008519         db  0x18 ; '.'
000000000000851a         db  0x41 ; 'A'
000000000000851b         db  0x0e ; '.'
000000000000851c         db  0x10 ; '.'
000000000000851d         db  0x41 ; 'A'
000000000000851e         db  0x0e ; '.'
000000000000851f         db  0x08 ; '.'
0000000000008520         db  0x45 ; 'E'
0000000000008521         db  0x0b ; '.'
0000000000008522         db  0x02 ; '.'
0000000000008523         db  0x4a ; 'J'
0000000000008524         db  0x0a ; '.'
0000000000008525         db  0x0e ; '.'
0000000000008526         db  0x18 ; '.'
0000000000008527         db  0x41 ; 'A'
0000000000008528         db  0x0e ; '.'
0000000000008529         db  0x10 ; '.'
000000000000852a         db  0x41 ; 'A'
000000000000852b         db  0x0e ; '.'
000000000000852c         db  0x08 ; '.'
000000000000852d         db  0x44 ; 'D'
000000000000852e         db  0x0b ; '.'
000000000000852f         db  0x02 ; '.'
0000000000008530         db  0x54 ; 'T'
0000000000008531         db  0x0e ; '.'
0000000000008532         db  0x18 ; '.'
0000000000008533         db  0x41 ; 'A'
0000000000008534         db  0x0e ; '.'
0000000000008535         db  0x10 ; '.'
0000000000008536         db  0x41 ; 'A'
0000000000008537         db  0x0e ; '.'
0000000000008538         db  0x08 ; '.'
0000000000008539         db  0x00 ; '.'
000000000000853a         db  0x00 ; '.'
000000000000853b         db  0x00 ; '.'
000000000000853c         dd         0x00000074                                  ; Length of the record
0000000000008540         dd         0x00000590                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008544         db         0x4c, 0xb3, 2 dup (0xff)                    ; begin 0x3890
0000000000008548         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x4ac4)
000000000000854c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000854d         db  0x42 ; 'B'
000000000000854e         db  0x0e ; '.'
000000000000854f         db  0x10 ; '.'
0000000000008550         db  0x8f ; '.'
0000000000008551         db  0x02 ; '.'
0000000000008552         db  0x42 ; 'B'
0000000000008553         db  0x0e ; '.'
0000000000008554         db  0x18 ; '.'
0000000000008555         db  0x8e ; '.'
0000000000008556         db  0x03 ; '.'
0000000000008557         db  0x45 ; 'E'
0000000000008558         db  0x0e ; '.'
0000000000008559         db  0x20 ; ' '
000000000000855a         db  0x8d ; '.'
000000000000855b         db  0x04 ; '.'
000000000000855c         db  0x42 ; 'B'
000000000000855d         db  0x0e ; '.'
000000000000855e         db  0x28 ; '('
000000000000855f         db  0x8c ; '.'
0000000000008560         db  0x05 ; '.'
0000000000008561         db  0x44 ; 'D'
0000000000008562         db  0x0e ; '.'
0000000000008563         db  0x30 ; '0'
0000000000008564         db  0x86 ; '.'
0000000000008565         db  0x06 ; '.'
0000000000008566         db  0x41 ; 'A'
0000000000008567         db  0x0e ; '.'
0000000000008568         db  0x38 ; '8'
0000000000008569         db  0x83 ; '.'
000000000000856a         db  0x07 ; '.'
000000000000856b         db  0x53 ; 'S'
000000000000856c         db  0x0e ; '.'
000000000000856d         db  0xf0 ; '.'
000000000000856e         db  0x01 ; '.'
000000000000856f         db  0x03 ; '.'
0000000000008570         db  0x81 ; '.'
0000000000008571         db  0x0b ; '.'
0000000000008572         db  0x0e ; '.'
0000000000008573         db  0xf8 ; '.'
0000000000008574         db  0x01 ; '.'
0000000000008575         db  0x4a ; 'J'
0000000000008576         db  0x0e ; '.'
0000000000008577         db  0x80 ; '.'
0000000000008578         db  0x02 ; '.'
0000000000008579         db  0x44 ; 'D'
000000000000857a         db  0x0e ; '.'
000000000000857b         db  0x88 ; '.'
000000000000857c         db  0x02 ; '.'
000000000000857d         db  0x45 ; 'E'
000000000000857e         db  0x0e ; '.'
000000000000857f         db  0x90 ; '.'
0000000000008580         db  0x02 ; '.'
0000000000008581         db  0x5f ; '_'
0000000000008582         db  0x0e ; '.'
0000000000008583         db  0xf0 ; '.'
0000000000008584         db  0x01 ; '.'
0000000000008585         db  0x64 ; 'd'
0000000000008586         db  0x0a ; '.'
0000000000008587         db  0x0e ; '.'
0000000000008588         db  0x38 ; '8'
0000000000008589         db  0x41 ; 'A'
000000000000858a         db  0x0e ; '.'
000000000000858b         db  0x30 ; '0'
000000000000858c         db  0x41 ; 'A'
000000000000858d         db  0x0e ; '.'
000000000000858e         db  0x28 ; '('
000000000000858f         db  0x42 ; 'B'
0000000000008590         db  0x0e ; '.'
0000000000008591         db  0x20 ; ' '
0000000000008592         db  0x42 ; 'B'
0000000000008593         db  0x0e ; '.'
0000000000008594         db  0x18 ; '.'
0000000000008595         db  0x42 ; 'B'
0000000000008596         db  0x0e ; '.'
0000000000008597         db  0x10 ; '.'
0000000000008598         db  0x42 ; 'B'
0000000000008599         db  0x0e ; '.'
000000000000859a         db  0x08 ; '.'
000000000000859b         db  0x44 ; 'D'
000000000000859c         db  0x0b ; '.'
000000000000859d         db  0x03 ; '.'
000000000000859e         db  0x99 ; '.'
000000000000859f         db  0x05 ; '.'
00000000000085a0         db  0x0e ; '.'
00000000000085a1         db  0xf8 ; '.'
00000000000085a2         db  0x01 ; '.'
00000000000085a3         db  0x4d ; 'M'
00000000000085a4         db  0x0e ; '.'
00000000000085a5         db  0x80 ; '.'
00000000000085a6         db  0x02 ; '.'
00000000000085a7         db  0x44 ; 'D'
00000000000085a8         db  0x0e ; '.'
00000000000085a9         db  0x88 ; '.'
00000000000085aa         db  0x02 ; '.'
00000000000085ab         db  0x47 ; 'G'
00000000000085ac         db  0x0e ; '.'
00000000000085ad         db  0x90 ; '.'
00000000000085ae         db  0x02 ; '.'
00000000000085af         db  0x5b ; '['
00000000000085b0         db  0x0e ; '.'
00000000000085b1         db  0xf0 ; '.'
00000000000085b2         db  0x01 ; '.'
00000000000085b3         db  0x00 ; '.'
00000000000085b4         dd         0x00000068                                  ; Length of the record
00000000000085b8         dd         0x00000608                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000085bc         db         0x14, 0xc5, 2 dup (0xff)                    ; begin 0x4ad0
00000000000085c0         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x4c7b)
00000000000085c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085c5         db  0x42 ; 'B'
00000000000085c6         db  0x0e ; '.'
00000000000085c7         db  0x10 ; '.'
00000000000085c8         db  0x8f ; '.'
00000000000085c9         db  0x02 ; '.'
00000000000085ca         db  0x42 ; 'B'
00000000000085cb         db  0x0e ; '.'
00000000000085cc         db  0x18 ; '.'
00000000000085cd         db  0x8e ; '.'
00000000000085ce         db  0x03 ; '.'
00000000000085cf         db  0x45 ; 'E'
00000000000085d0         db  0x0e ; '.'
00000000000085d1         db  0x20 ; ' '
00000000000085d2         db  0x8d ; '.'
00000000000085d3         db  0x04 ; '.'
00000000000085d4         db  0x42 ; 'B'
00000000000085d5         db  0x0e ; '.'
00000000000085d6         db  0x28 ; '('
00000000000085d7         db  0x8c ; '.'
00000000000085d8         db  0x05 ; '.'
00000000000085d9         db  0x44 ; 'D'
00000000000085da         db  0x0e ; '.'
00000000000085db         db  0x30 ; '0'
00000000000085dc         db  0x86 ; '.'
00000000000085dd         db  0x06 ; '.'
00000000000085de         db  0x41 ; 'A'
00000000000085df         db  0x0e ; '.'
00000000000085e0         db  0x38 ; '8'
00000000000085e1         db  0x83 ; '.'
00000000000085e2         db  0x07 ; '.'
00000000000085e3         db  0x47 ; 'G'
00000000000085e4         db  0x0e ; '.'
00000000000085e5         db  0x60 ; '`'
00000000000085e6         db  0x02 ; '.'
00000000000085e7         db  0x99 ; '.'
00000000000085e8         db  0x0e ; '.'
00000000000085e9         db  0x68 ; 'h'
00000000000085ea         db  0x5f ; '_'
00000000000085eb         db  0x0e ; '.'
00000000000085ec         db  0x70 ; 'p'
00000000000085ed         db  0x46 ; 'F'
00000000000085ee         db  0x0e ; '.'
00000000000085ef         db  0x78 ; 'x'
00000000000085f0         db  0x42 ; 'B'
00000000000085f1         db  0x0e ; '.'
00000000000085f2         db  0x80 ; '.'
00000000000085f3         db  0x01 ; '.'
00000000000085f4         db  0x59 ; 'Y'
00000000000085f5         db  0x0e ; '.'
00000000000085f6         db  0x60 ; '`'
00000000000085f7         db  0x02 ; '.'
00000000000085f8         db  0x40 ; '@'
00000000000085f9         db  0x0e ; '.'
00000000000085fa         db  0x68 ; 'h'
00000000000085fb         db  0x4b ; 'K'
00000000000085fc         db  0x0e ; '.'
00000000000085fd         db  0x70 ; 'p'
00000000000085fe         db  0x43 ; 'C'
00000000000085ff         db  0x0e ; '.'
0000000000008600         db  0x78 ; 'x'
0000000000008601         db  0x45 ; 'E'
0000000000008602         db  0x0e ; '.'
0000000000008603         db  0x80 ; '.'
0000000000008604         db  0x01 ; '.'
0000000000008605         db  0x5e ; '^'
0000000000008606         db  0x0e ; '.'
0000000000008607         db  0x60 ; '`'
0000000000008608         db  0x4c ; 'L'
0000000000008609         db  0x0a ; '.'
000000000000860a         db  0x0e ; '.'
000000000000860b         db  0x38 ; '8'
000000000000860c         db  0x44 ; 'D'
000000000000860d         db  0x0e ; '.'
000000000000860e         db  0x30 ; '0'
000000000000860f         db  0x41 ; 'A'
0000000000008610         db  0x0e ; '.'
0000000000008611         db  0x28 ; '('
0000000000008612         db  0x42 ; 'B'
0000000000008613         db  0x0e ; '.'
0000000000008614         db  0x20 ; ' '
0000000000008615         db  0x42 ; 'B'
0000000000008616         db  0x0e ; '.'
0000000000008617         db  0x18 ; '.'
0000000000008618         db  0x42 ; 'B'
0000000000008619         db  0x0e ; '.'
000000000000861a         db  0x10 ; '.'
000000000000861b         db  0x42 ; 'B'
000000000000861c         db  0x0e ; '.'
000000000000861d         db  0x08 ; '.'
000000000000861e         db  0x46 ; 'F'
000000000000861f         db  0x0b ; '.'
0000000000008620         dd         0x00000028                                  ; Length of the record
0000000000008624         dd         0x00000674                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008628         db         0x58, 0xc6, 2 dup (0xff)                    ; begin 0x4c80
000000000000862c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4cb6)
0000000000008630         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008631         db  0x42 ; 'B'
0000000000008632         db  0x0e ; '.'
0000000000008633         db  0x10 ; '.'
0000000000008634         db  0x8c ; '.'
0000000000008635         db  0x02 ; '.'
0000000000008636         db  0x41 ; 'A'
0000000000008637         db  0x0e ; '.'
0000000000008638         db  0x18 ; '.'
0000000000008639         db  0x86 ; '.'
000000000000863a         db  0x03 ; '.'
000000000000863b         db  0x41 ; 'A'
000000000000863c         db  0x0e ; '.'
000000000000863d         db  0x20 ; ' '
000000000000863e         db  0x83 ; '.'
000000000000863f         db  0x04 ; '.'
0000000000008640         db  0x6e ; 'n'
0000000000008641         db  0x0e ; '.'
0000000000008642         db  0x18 ; '.'
0000000000008643         db  0x41 ; 'A'
0000000000008644         db  0x0e ; '.'
0000000000008645         db  0x10 ; '.'
0000000000008646         db  0x42 ; 'B'
0000000000008647         db  0x0e ; '.'
0000000000008648         db  0x08 ; '.'
0000000000008649         db  0x00 ; '.'
000000000000864a         db  0x00 ; '.'
000000000000864b         db  0x00 ; '.'
000000000000864c         dd         0x00000010                                  ; Length of the record
0000000000008650         dd         0x000006a0                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008654         db         0x6c, 0xc6, 2 dup (0xff)                    ; begin 0x4cc0
0000000000008658         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4cd1)
000000000000865c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000865d         align      32
0000000000008660         dd         0x00000010                                  ; Length of the record
0000000000008664         dd         0x000006b4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008668         db         0x78, 0xc6, 2 dup (0xff)                    ; begin 0x4ce0
000000000000866c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4cf1)
0000000000008670         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008671         align      4
0000000000008674         dd         0x00000010                                  ; Length of the record
0000000000008678         dd         0x000006c8                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
000000000000867c         db         0x84, 0xc6, 2 dup (0xff)                    ; begin 0x4d00
0000000000008680         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4d35)
0000000000008684         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008685         align      8
0000000000008688         dd         0x00000010                                  ; Length of the record
000000000000868c         dd         0x000006dc                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008690         db         0xb0, 0xc6, 2 dup (0xff)                    ; begin 0x4d40
0000000000008694         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4d55)
0000000000008698         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008699         align      4
000000000000869c         dd         0x00000010                                  ; Length of the record
00000000000086a0         dd         0x000006f0                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000086a4         db         0xbc, 0xc6, 2 dup (0xff)                    ; begin 0x4d60
00000000000086a8         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4d90)
00000000000086ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086ad         db  0x6b ; 'k'
00000000000086ae         db  0x0e ; '.'
00000000000086af         db  0x10 ; '.'
00000000000086b0         dd         0x00000050                                  ; Length of the record
00000000000086b4         dd         0x00000704                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000086b8         db         0xd8, 0xc6, 2 dup (0xff)                    ; begin 0x4d90
00000000000086bc         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4e04)
00000000000086c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086c1         db  0x42 ; 'B'
00000000000086c2         db  0x0e ; '.'
00000000000086c3         db  0x10 ; '.'
00000000000086c4         db  0x8f ; '.'
00000000000086c5         db  0x02 ; '.'
00000000000086c6         db  0x42 ; 'B'
00000000000086c7         db  0x0e ; '.'
00000000000086c8         db  0x18 ; '.'
00000000000086c9         db  0x8e ; '.'
00000000000086ca         db  0x03 ; '.'
00000000000086cb         db  0x49 ; 'I'
00000000000086cc         db  0x0e ; '.'
00000000000086cd         db  0x20 ; ' '
00000000000086ce         db  0x8d ; '.'
00000000000086cf         db  0x04 ; '.'
00000000000086d0         db  0x42 ; 'B'
00000000000086d1         db  0x0e ; '.'
00000000000086d2         db  0x28 ; '('
00000000000086d3         db  0x8c ; '.'
00000000000086d4         db  0x05 ; '.'
00000000000086d5         db  0x44 ; 'D'
00000000000086d6         db  0x0e ; '.'
00000000000086d7         db  0x30 ; '0'
00000000000086d8         db  0x86 ; '.'
00000000000086d9         db  0x06 ; '.'
00000000000086da         db  0x41 ; 'A'
00000000000086db         db  0x0e ; '.'
00000000000086dc         db  0x38 ; '8'
00000000000086dd         db  0x83 ; '.'
00000000000086de         db  0x07 ; '.'
00000000000086df         db  0x4d ; 'M'
00000000000086e0         db  0x0e ; '.'
00000000000086e1         db  0x50 ; 'P'
00000000000086e2         db  0x5f ; '_'
00000000000086e3         db  0x0e ; '.'
00000000000086e4         db  0x58 ; 'X'
00000000000086e5         db  0x47 ; 'G'
00000000000086e6         db  0x0e ; '.'
00000000000086e7         db  0x60 ; '`'
00000000000086e8         db  0x46 ; 'F'
00000000000086e9         db  0x0e ; '.'
00000000000086ea         db  0x68 ; 'h'
00000000000086eb         db  0x44 ; 'D'
00000000000086ec         db  0x0e ; '.'
00000000000086ed         db  0x70 ; 'p'
00000000000086ee         db  0x58 ; 'X'
00000000000086ef         db  0x0e ; '.'
00000000000086f0         db  0x38 ; '8'
00000000000086f1         db  0x41 ; 'A'
00000000000086f2         db  0x0e ; '.'
00000000000086f3         db  0x30 ; '0'
00000000000086f4         db  0x41 ; 'A'
00000000000086f5         db  0x0e ; '.'
00000000000086f6         db  0x28 ; '('
00000000000086f7         db  0x42 ; 'B'
00000000000086f8         db  0x0e ; '.'
00000000000086f9         db  0x20 ; ' '
00000000000086fa         db  0x42 ; 'B'
00000000000086fb         db  0x0e ; '.'
00000000000086fc         db  0x18 ; '.'
00000000000086fd         db  0x42 ; 'B'
00000000000086fe         db  0x0e ; '.'
00000000000086ff         db  0x10 ; '.'
0000000000008700         db  0x42 ; 'B'
0000000000008701         db  0x0e ; '.'
0000000000008702         db  0x08 ; '.'
0000000000008703         db  0x00 ; '.'
0000000000008704         dd         0x00000068                                  ; Length of the record
0000000000008708         dd         0x00000758                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
000000000000870c         db         0x04, 0xc7, 2 dup (0xff)                    ; begin 0x4e10
0000000000008710         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x4ef3)
0000000000008714         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008715         db  0x42 ; 'B'
0000000000008716         db  0x0e ; '.'
0000000000008717         db  0x10 ; '.'
0000000000008718         db  0x8f ; '.'
0000000000008719         db  0x02 ; '.'
000000000000871a         db  0x42 ; 'B'
000000000000871b         db  0x0e ; '.'
000000000000871c         db  0x18 ; '.'
000000000000871d         db  0x8e ; '.'
000000000000871e         db  0x03 ; '.'
000000000000871f         db  0x49 ; 'I'
0000000000008720         db  0x0e ; '.'
0000000000008721         db  0x20 ; ' '
0000000000008722         db  0x8d ; '.'
0000000000008723         db  0x04 ; '.'
0000000000008724         db  0x42 ; 'B'
0000000000008725         db  0x0e ; '.'
0000000000008726         db  0x28 ; '('
0000000000008727         db  0x8c ; '.'
0000000000008728         db  0x05 ; '.'
0000000000008729         db  0x44 ; 'D'
000000000000872a         db  0x0e ; '.'
000000000000872b         db  0x30 ; '0'
000000000000872c         db  0x86 ; '.'
000000000000872d         db  0x06 ; '.'
000000000000872e         db  0x41 ; 'A'
000000000000872f         db  0x0e ; '.'
0000000000008730         db  0x38 ; '8'
0000000000008731         db  0x83 ; '.'
0000000000008732         db  0x07 ; '.'
0000000000008733         db  0x4d ; 'M'
0000000000008734         db  0x0e ; '.'
0000000000008735         db  0x70 ; 'p'
0000000000008736         db  0x65 ; 'e'
0000000000008737         db  0x0e ; '.'
0000000000008738         db  0x78 ; 'x'
0000000000008739         db  0x4d ; 'M'
000000000000873a         db  0x0e ; '.'
000000000000873b         db  0x80 ; '.'
000000000000873c         db  0x01 ; '.'
000000000000873d         db  0x46 ; 'F'
000000000000873e         db  0x0e ; '.'
000000000000873f         db  0x88 ; '.'
0000000000008740         db  0x01 ; '.'
0000000000008741         db  0x42 ; 'B'
0000000000008742         db  0x0e ; '.'
0000000000008743         db  0x90 ; '.'
0000000000008744         db  0x01 ; '.'
0000000000008745         db  0x5e ; '^'
0000000000008746         db  0x0e ; '.'
0000000000008747         db  0x70 ; 'p'
0000000000008748         db  0x56 ; 'V'
0000000000008749         db  0x0e ; '.'
000000000000874a         db  0x78 ; 'x'
000000000000874b         db  0x43 ; 'C'
000000000000874c         db  0x0e ; '.'
000000000000874d         db  0x80 ; '.'
000000000000874e         db  0x01 ; '.'
000000000000874f         db  0x43 ; 'C'
0000000000008750         db  0x0e ; '.'
0000000000008751         db  0x88 ; '.'
0000000000008752         db  0x01 ; '.'
0000000000008753         db  0x56 ; 'V'
0000000000008754         db  0x0e ; '.'
0000000000008755         db  0x90 ; '.'
0000000000008756         db  0x01 ; '.'
0000000000008757         db  0x52 ; 'R'
0000000000008758         db  0x0e ; '.'
0000000000008759         db  0x70 ; 'p'
000000000000875a         db  0x5b ; '['
000000000000875b         db  0x0e ; '.'
000000000000875c         db  0x38 ; '8'
000000000000875d         db  0x41 ; 'A'
000000000000875e         db  0x0e ; '.'
000000000000875f         db  0x30 ; '0'
0000000000008760         db  0x41 ; 'A'
0000000000008761         db  0x0e ; '.'
0000000000008762         db  0x28 ; '('
0000000000008763         db  0x42 ; 'B'
0000000000008764         db  0x0e ; '.'
0000000000008765         db  0x20 ; ' '
0000000000008766         db  0x42 ; 'B'
0000000000008767         db  0x0e ; '.'
0000000000008768         db  0x18 ; '.'
0000000000008769         db  0x42 ; 'B'
000000000000876a         db  0x0e ; '.'
000000000000876b         db  0x10 ; '.'
000000000000876c         db  0x42 ; 'B'
000000000000876d         db  0x0e ; '.'
000000000000876e         db  0x08 ; '.'
000000000000876f         db  0x00 ; '.'
0000000000008770         dd         0x00000010                                  ; Length of the record
0000000000008774         dd         0x000007c4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008778         db         0x88, 0xc7, 2 dup (0xff)                    ; begin 0x4f00
000000000000877c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x4f0a)
0000000000008780         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008781         align      4
0000000000008784         dd         0x00000028                                  ; Length of the record
0000000000008788         dd         0x000007d8                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
000000000000878c         db         0x84, 0xc7, 2 dup (0xff)                    ; begin 0x4f10
0000000000008790         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4fa3)
0000000000008794         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008795         db  0x48 ; 'H'
0000000000008796         db  0x0e ; '.'
0000000000008797         db  0x10 ; '.'
0000000000008798         db  0x8c ; '.'
0000000000008799         db  0x02 ; '.'
000000000000879a         db  0x48 ; 'H'
000000000000879b         db  0x0e ; '.'
000000000000879c         db  0x18 ; '.'
000000000000879d         db  0x86 ; '.'
000000000000879e         db  0x03 ; '.'
000000000000879f         db  0x41 ; 'A'
00000000000087a0         db  0x0e ; '.'
00000000000087a1         db  0x20 ; ' '
00000000000087a2         db  0x83 ; '.'
00000000000087a3         db  0x04 ; '.'
00000000000087a4         db  0x02 ; '.'
00000000000087a5         db  0x74 ; 't'
00000000000087a6         db  0x0e ; '.'
00000000000087a7         db  0x18 ; '.'
00000000000087a8         db  0x4b ; 'K'
00000000000087a9         db  0x0e ; '.'
00000000000087aa         db  0x10 ; '.'
00000000000087ab         db  0x42 ; 'B'
00000000000087ac         db  0x0e ; '.'
00000000000087ad         db  0x08 ; '.'
00000000000087ae         db  0x00 ; '.'
00000000000087af         db  0x00 ; '.'
00000000000087b0         dd         0x00000010                                  ; Length of the record
00000000000087b4         dd         0x00000804                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000087b8         db         0xf8, 0xc7, 2 dup (0xff)                    ; begin 0x4fb0
00000000000087bc         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4fc3)
00000000000087c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087c1         align      4
00000000000087c4         dd         0x00000010                                  ; Length of the record
00000000000087c8         dd         0x00000818                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000087cc         db         0x04, 0xc8, 2 dup (0xff)                    ; begin 0x4fd0
00000000000087d0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4fdc)
00000000000087d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087d5         align      8
00000000000087d8         dd         0x00000010                                  ; Length of the record
00000000000087dc         dd         0x0000082c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000087e0         db         0x00, 0xc8, 2 dup (0xff)                    ; begin 0x4fe0
00000000000087e4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4ff8)
00000000000087e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087e9         align      4
00000000000087ec         dd         0x00000010                                  ; Length of the record
00000000000087f0         dd         0x00000840                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000087f4         db         0x0c, 0xc8, 2 dup (0xff)                    ; begin 0x5000
00000000000087f8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5014)
00000000000087fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087fd         align      2048
0000000000008800         dd         0x00000018                                  ; Length of the record
0000000000008804         dd         0x00000854                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008808         db         0x18, 0xc8, 2 dup (0xff)                    ; begin 0x5020
000000000000880c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x50ae)
0000000000008810         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008811         db  0x44 ; 'D'
0000000000008812         db  0x0e ; '.'
0000000000008813         db  0x50 ; 'P'
0000000000008814         db  0x02 ; '.'
0000000000008815         db  0x7f ; '.'
0000000000008816         db  0x0a ; '.'
0000000000008817         db  0x0e ; '.'
0000000000008818         db  0x08 ; '.'
0000000000008819         db  0x41 ; 'A'
000000000000881a         db  0x0b ; '.'
000000000000881b         db  0x00 ; '.'
000000000000881c         dd         0x00000018                                  ; Length of the record
0000000000008820         dd         0x00000870                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008824         db         0x8c, 0xc8, 2 dup (0xff)                    ; begin 0x50b0
0000000000008828         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x513a)
000000000000882c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000882d         db  0x44 ; 'D'
000000000000882e         db  0x0e ; '.'
000000000000882f         db  0x50 ; 'P'
0000000000008830         db  0x02 ; '.'
0000000000008831         db  0x7b ; '{'
0000000000008832         db  0x0a ; '.'
0000000000008833         db  0x0e ; '.'
0000000000008834         db  0x08 ; '.'
0000000000008835         db  0x41 ; 'A'
0000000000008836         db  0x0b ; '.'
0000000000008837         db  0x00 ; '.'
0000000000008838         dd         0x00000010                                  ; Length of the record
000000000000883c         dd         0x0000088c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008840         db         0x00, 0xc9, 2 dup (0xff)                    ; begin 0x5140
0000000000008844         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x514c)
0000000000008848         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008849         align      4
000000000000884c         dd         0x00000010                                  ; Length of the record
0000000000008850         dd         0x000008a0                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008854         db         0xfc, 0xc8, 2 dup (0xff)                    ; begin 0x5150
0000000000008858         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x515f)
000000000000885c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000885d         align      32
0000000000008860         dd         0x00000018                                  ; Length of the record
0000000000008864         dd         0x000008b4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008868         db         0xf8, 0xc8, 2 dup (0xff)                    ; begin 0x5160
000000000000886c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x51f8)
0000000000008870         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008871         db  0x44 ; 'D'
0000000000008872         db  0x0e ; '.'
0000000000008873         db  0x50 ; 'P'
0000000000008874         db  0x02 ; '.'
0000000000008875         db  0x8e ; '.'
0000000000008876         db  0x0a ; '.'
0000000000008877         db  0x0e ; '.'
0000000000008878         db  0x08 ; '.'
0000000000008879         db  0x41 ; 'A'
000000000000887a         db  0x0b ; '.'
000000000000887b         db  0x00 ; '.'
000000000000887c         dd         0x00000010                                  ; Length of the record
0000000000008880         dd         0x000008d0                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008884         db         0x7c, 0xc9, 2 dup (0xff)                    ; begin 0x5200
0000000000008888         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5210)
000000000000888c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000888d         align      16
0000000000008890         dd         0x00000010                                  ; Length of the record
0000000000008894         dd         0x000008e4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008898         db         0x78, 0xc9, 2 dup (0xff)                    ; begin 0x5210
000000000000889c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5221)
00000000000088a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088a1         align      4
00000000000088a4         dd         0x00000010                                  ; Length of the record
00000000000088a8         dd         0x000008f8                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000088ac         db         0x84, 0xc9, 2 dup (0xff)                    ; begin 0x5230
00000000000088b0         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x523a)
00000000000088b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088b5         align      8
00000000000088b8         dd         0x00000018                                  ; Length of the record
00000000000088bc         dd         0x0000090c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000088c0         db         0x80, 0xc9, 2 dup (0xff)                    ; begin 0x5240
00000000000088c4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x52ce)
00000000000088c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088c9         db  0x44 ; 'D'
00000000000088ca         db  0x0e ; '.'
00000000000088cb         db  0x50 ; 'P'
00000000000088cc         db  0x02 ; '.'
00000000000088cd         db  0x7f ; '.'
00000000000088ce         db  0x0a ; '.'
00000000000088cf         db  0x0e ; '.'
00000000000088d0         db  0x08 ; '.'
00000000000088d1         db  0x41 ; 'A'
00000000000088d2         db  0x0b ; '.'
00000000000088d3         db  0x00 ; '.'
00000000000088d4         dd         0x00000018                                  ; Length of the record
00000000000088d8         dd         0x00000928                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000088dc         db         0xf4, 0xc9, 2 dup (0xff)                    ; begin 0x52d0
00000000000088e0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5361)
00000000000088e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088e5         db  0x44 ; 'D'
00000000000088e6         db  0x0e ; '.'
00000000000088e7         db  0x50 ; 'P'
00000000000088e8         db  0x02 ; '.'
00000000000088e9         db  0x82 ; '.'
00000000000088ea         db  0x0a ; '.'
00000000000088eb         db  0x0e ; '.'
00000000000088ec         db  0x08 ; '.'
00000000000088ed         db  0x41 ; 'A'
00000000000088ee         db  0x0b ; '.'
00000000000088ef         db  0x00 ; '.'
00000000000088f0         dd         0x00000010                                  ; Length of the record
00000000000088f4         dd         0x00000944                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
00000000000088f8         db         0x78, 0xca, 2 dup (0xff)                    ; begin 0x5370
00000000000088fc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x537c)
0000000000008900         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008901         align      4
0000000000008904         dd         0x00000010                                  ; Length of the record
0000000000008908         dd         0x00000958                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
000000000000890c         db         0x74, 0xca, 2 dup (0xff)                    ; begin 0x5380
0000000000008910         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5397)
0000000000008914         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008915         align      8
0000000000008918         dd         0x00000010                                  ; Length of the record
000000000000891c         dd         0x0000096c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008920         db         0x80, 0xca, 2 dup (0xff)                    ; begin 0x53a0
0000000000008924         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x53b3)
0000000000008928         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008929         align      4
000000000000892c         dd         0x00000010                                  ; Length of the record
0000000000008930         dd         0x00000980                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008934         db         0x8c, 0xca, 2 dup (0xff)                    ; begin 0x53c0
0000000000008938         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x53cc)
000000000000893c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000893d         align      64
0000000000008940         dd         0x00000010                                  ; Length of the record
0000000000008944         dd         0x00000994                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008948         db         0x88, 0xca, 2 dup (0xff)                    ; begin 0x53d0
000000000000894c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x53e4)
0000000000008950         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008951         align      4
0000000000008954         dd         0x00000010                                  ; Length of the record
0000000000008958         dd         0x000009a8                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
000000000000895c         db         0x94, 0xca, 2 dup (0xff)                    ; begin 0x53f0
0000000000008960         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5403)
0000000000008964         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008965         align      8
0000000000008968         dd         0x00000014                                  ; Length of the record
000000000000896c         dd         0x000009bc                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008970         db         0xa0, 0xca, 2 dup (0xff)                    ; begin 0x5410
0000000000008974         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5428)
0000000000008978         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008979         align      128
0000000000008980         dd         0x00000110                                  ; Length of the record
0000000000008984         dd         0x000009d4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008988         db         0xa8, 0xca, 2 dup (0xff)                    ; begin 0x5430
000000000000898c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x5847)
0000000000008990         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008991         db  0x42 ; 'B'
0000000000008992         db  0x0e ; '.'
0000000000008993         db  0x10 ; '.'
0000000000008994         db  0x8f ; '.'
0000000000008995         db  0x02 ; '.'
0000000000008996         db  0x42 ; 'B'
0000000000008997         db  0x0e ; '.'
0000000000008998         db  0x18 ; '.'
0000000000008999         db  0x8e ; '.'
000000000000899a         db  0x03 ; '.'
000000000000899b         db  0x42 ; 'B'
000000000000899c         db  0x0e ; '.'
000000000000899d         db  0x20 ; ' '
000000000000899e         db  0x8d ; '.'
000000000000899f         db  0x04 ; '.'
00000000000089a0         db  0x42 ; 'B'
00000000000089a1         db  0x0e ; '.'
00000000000089a2         db  0x28 ; '('
00000000000089a3         db  0x8c ; '.'
00000000000089a4         db  0x05 ; '.'
00000000000089a5         db  0x44 ; 'D'
00000000000089a6         db  0x0e ; '.'
00000000000089a7         db  0x30 ; '0'
00000000000089a8         db  0x86 ; '.'
00000000000089a9         db  0x06 ; '.'
00000000000089aa         db  0x41 ; 'A'
00000000000089ab         db  0x0e ; '.'
00000000000089ac         db  0x38 ; '8'
00000000000089ad         db  0x83 ; '.'
00000000000089ae         db  0x07 ; '.'
00000000000089af         db  0x4a ; 'J'
00000000000089b0         db  0x0e ; '.'
00000000000089b1         db  0x60 ; '`'
00000000000089b2         db  0x02 ; '.'
00000000000089b3         db  0xdd ; '.'
00000000000089b4         db  0x0e ; '.'
00000000000089b5         db  0x68 ; 'h'
00000000000089b6         db  0x57 ; 'W'
00000000000089b7         db  0x0e ; '.'
00000000000089b8         db  0x70 ; 'p'
00000000000089b9         db  0x42 ; 'B'
00000000000089ba         db  0x0e ; '.'
00000000000089bb         db  0x78 ; 'x'
00000000000089bc         db  0x42 ; 'B'
00000000000089bd         db  0x0e ; '.'
00000000000089be         db  0x80 ; '.'
00000000000089bf         db  0x01 ; '.'
00000000000089c0         db  0x42 ; 'B'
00000000000089c1         db  0x0e ; '.'
00000000000089c2         db  0x88 ; '.'
00000000000089c3         db  0x01 ; '.'
00000000000089c4         db  0x42 ; 'B'
00000000000089c5         db  0x0e ; '.'
00000000000089c6         db  0x90 ; '.'
00000000000089c7         db  0x01 ; '.'
00000000000089c8         db  0x53 ; 'S'
00000000000089c9         db  0x0e ; '.'
00000000000089ca         db  0x60 ; '`'
00000000000089cb         db  0x44 ; 'D'
00000000000089cc         db  0x0a ; '.'
00000000000089cd         db  0x0e ; '.'
00000000000089ce         db  0x38 ; '8'
00000000000089cf         db  0x41 ; 'A'
00000000000089d0         db  0x0e ; '.'
00000000000089d1         db  0x30 ; '0'
00000000000089d2         db  0x41 ; 'A'
00000000000089d3         db  0x0e ; '.'
00000000000089d4         db  0x28 ; '('
00000000000089d5         db  0x42 ; 'B'
00000000000089d6         db  0x0e ; '.'
00000000000089d7         db  0x20 ; ' '
00000000000089d8         db  0x42 ; 'B'
00000000000089d9         db  0x0e ; '.'
00000000000089da         db  0x18 ; '.'
00000000000089db         db  0x42 ; 'B'
00000000000089dc         db  0x0e ; '.'
00000000000089dd         db  0x10 ; '.'
00000000000089de         db  0x42 ; 'B'
00000000000089df         db  0x0e ; '.'
00000000000089e0         db  0x08 ; '.'
00000000000089e1         db  0x44 ; 'D'
00000000000089e2         db  0x0b ; '.'
00000000000089e3         db  0x02 ; '.'
00000000000089e4         db  0x78 ; 'x'
00000000000089e5         db  0x0a ; '.'
00000000000089e6         db  0x0e ; '.'
00000000000089e7         db  0x68 ; 'h'
00000000000089e8         db  0x48 ; 'H'
00000000000089e9         db  0x0b ; '.'
00000000000089ea         db  0x5a ; 'Z'
00000000000089eb         db  0x0a ; '.'
00000000000089ec         db  0x0e ; '.'
00000000000089ed         db  0x38 ; '8'
00000000000089ee         db  0x47 ; 'G'
00000000000089ef         db  0x0e ; '.'
00000000000089f0         db  0x30 ; '0'
00000000000089f1         db  0x41 ; 'A'
00000000000089f2         db  0x0e ; '.'
00000000000089f3         db  0x28 ; '('
00000000000089f4         db  0x42 ; 'B'
00000000000089f5         db  0x0e ; '.'
00000000000089f6         db  0x20 ; ' '
00000000000089f7         db  0x42 ; 'B'
00000000000089f8         db  0x0e ; '.'
00000000000089f9         db  0x18 ; '.'
00000000000089fa         db  0x42 ; 'B'
00000000000089fb         db  0x0e ; '.'
00000000000089fc         db  0x10 ; '.'
00000000000089fd         db  0x42 ; 'B'
00000000000089fe         db  0x0e ; '.'
00000000000089ff         db  0x08 ; '.'
0000000000008a00         db  0x56 ; 'V'
0000000000008a01         db  0x0b ; '.'
0000000000008a02         db  0x5e ; '^'
0000000000008a03         db  0x0a ; '.'
0000000000008a04         db  0x0e ; '.'
0000000000008a05         db  0x38 ; '8'
0000000000008a06         db  0x52 ; 'R'
0000000000008a07         db  0x0e ; '.'
0000000000008a08         db  0x30 ; '0'
0000000000008a09         db  0x41 ; 'A'
0000000000008a0a         db  0x0e ; '.'
0000000000008a0b         db  0x28 ; '('
0000000000008a0c         db  0x42 ; 'B'
0000000000008a0d         db  0x0e ; '.'
0000000000008a0e         db  0x20 ; ' '
0000000000008a0f         db  0x42 ; 'B'
0000000000008a10         db  0x0e ; '.'
0000000000008a11         db  0x18 ; '.'
0000000000008a12         db  0x42 ; 'B'
0000000000008a13         db  0x0e ; '.'
0000000000008a14         db  0x10 ; '.'
0000000000008a15         db  0x42 ; 'B'
0000000000008a16         db  0x0e ; '.'
0000000000008a17         db  0x08 ; '.'
0000000000008a18         db  0x4f ; 'O'
0000000000008a19         db  0x0b ; '.'
0000000000008a1a         db  0x62 ; 'b'
0000000000008a1b         db  0x0a ; '.'
0000000000008a1c         db  0x0e ; '.'
0000000000008a1d         db  0x38 ; '8'
0000000000008a1e         db  0x50 ; 'P'
0000000000008a1f         db  0x0e ; '.'
0000000000008a20         db  0x30 ; '0'
0000000000008a21         db  0x41 ; 'A'
0000000000008a22         db  0x0e ; '.'
0000000000008a23         db  0x28 ; '('
0000000000008a24         db  0x42 ; 'B'
0000000000008a25         db  0x0e ; '.'
0000000000008a26         db  0x20 ; ' '
0000000000008a27         db  0x42 ; 'B'
0000000000008a28         db  0x0e ; '.'
0000000000008a29         db  0x18 ; '.'
0000000000008a2a         db  0x42 ; 'B'
0000000000008a2b         db  0x0e ; '.'
0000000000008a2c         db  0x10 ; '.'
0000000000008a2d         db  0x42 ; 'B'
0000000000008a2e         db  0x0e ; '.'
0000000000008a2f         db  0x08 ; '.'
0000000000008a30         db  0x55 ; 'U'
0000000000008a31         db  0x0b ; '.'
0000000000008a32         db  0x66 ; 'f'
0000000000008a33         db  0x0e ; '.'
0000000000008a34         db  0x68 ; 'h'
0000000000008a35         db  0x42 ; 'B'
0000000000008a36         db  0x0e ; '.'
0000000000008a37         db  0x70 ; 'p'
0000000000008a38         db  0x5c ; '\'
0000000000008a39         db  0x0e ; '.'
0000000000008a3a         db  0x68 ; 'h'
0000000000008a3b         db  0x41 ; 'A'
0000000000008a3c         db  0x0e ; '.'
0000000000008a3d         db  0x60 ; '`'
0000000000008a3e         db  0x44 ; 'D'
0000000000008a3f         db  0x0a ; '.'
0000000000008a40         db  0x0e ; '.'
0000000000008a41         db  0x38 ; '8'
0000000000008a42         db  0x41 ; 'A'
0000000000008a43         db  0x0e ; '.'
0000000000008a44         db  0x30 ; '0'
0000000000008a45         db  0x41 ; 'A'
0000000000008a46         db  0x0e ; '.'
0000000000008a47         db  0x28 ; '('
0000000000008a48         db  0x42 ; 'B'
0000000000008a49         db  0x0e ; '.'
0000000000008a4a         db  0x20 ; ' '
0000000000008a4b         db  0x42 ; 'B'
0000000000008a4c         db  0x0e ; '.'
0000000000008a4d         db  0x18 ; '.'
0000000000008a4e         db  0x42 ; 'B'
0000000000008a4f         db  0x0e ; '.'
0000000000008a50         db  0x10 ; '.'
0000000000008a51         db  0x42 ; 'B'
0000000000008a52         db  0x0e ; '.'
0000000000008a53         db  0x08 ; '.'
0000000000008a54         db  0x45 ; 'E'
0000000000008a55         db  0x0b ; '.'
0000000000008a56         db  0x68 ; 'h'
0000000000008a57         db  0x0a ; '.'
0000000000008a58         db  0x0e ; '.'
0000000000008a59         db  0x68 ; 'h'
0000000000008a5a         db  0x48 ; 'H'
0000000000008a5b         db  0x0b ; '.'
0000000000008a5c         db  0x72 ; 'r'
0000000000008a5d         db  0x0e ; '.'
0000000000008a5e         db  0x68 ; 'h'
0000000000008a5f         db  0x45 ; 'E'
0000000000008a60         db  0x0e ; '.'
0000000000008a61         db  0x70 ; 'p'
0000000000008a62         db  0x42 ; 'B'
0000000000008a63         db  0x0e ; '.'
0000000000008a64         db  0x78 ; 'x'
0000000000008a65         db  0x42 ; 'B'
0000000000008a66         db  0x0e ; '.'
0000000000008a67         db  0x80 ; '.'
0000000000008a68         db  0x01 ; '.'
0000000000008a69         db  0x5e ; '^'
0000000000008a6a         db  0x0e ; '.'
0000000000008a6b         db  0x60 ; '`'
0000000000008a6c         db  0x44 ; 'D'
0000000000008a6d         db  0x0a ; '.'
0000000000008a6e         db  0x0e ; '.'
0000000000008a6f         db  0x38 ; '8'
0000000000008a70         db  0x41 ; 'A'
0000000000008a71         db  0x0e ; '.'
0000000000008a72         db  0x30 ; '0'
0000000000008a73         db  0x41 ; 'A'
0000000000008a74         db  0x0e ; '.'
0000000000008a75         db  0x28 ; '('
0000000000008a76         db  0x42 ; 'B'
0000000000008a77         db  0x0e ; '.'
0000000000008a78         db  0x20 ; ' '
0000000000008a79         db  0x42 ; 'B'
0000000000008a7a         db  0x0e ; '.'
0000000000008a7b         db  0x18 ; '.'
0000000000008a7c         db  0x42 ; 'B'
0000000000008a7d         db  0x0e ; '.'
0000000000008a7e         db  0x10 ; '.'
0000000000008a7f         db  0x42 ; 'B'
0000000000008a80         db  0x0e ; '.'
0000000000008a81         db  0x08 ; '.'
0000000000008a82         db  0x41 ; 'A'
0000000000008a83         db  0x0b ; '.'
0000000000008a84         db  0x79 ; 'y'
0000000000008a85         db  0x0a ; '.'
0000000000008a86         db  0x0e ; '.'
0000000000008a87         db  0x68 ; 'h'
0000000000008a88         db  0x42 ; 'B'
0000000000008a89         db  0x0e ; '.'
0000000000008a8a         db  0x70 ; 'p'
0000000000008a8b         db  0x42 ; 'B'
0000000000008a8c         db  0x0e ; '.'
0000000000008a8d         db  0x78 ; 'x'
0000000000008a8e         db  0x42 ; 'B'
0000000000008a8f         db  0x0e ; '.'
0000000000008a90         db  0x80 ; '.'
0000000000008a91         db  0x01 ; '.'
0000000000008a92         db  0x51 ; 'Q'
0000000000008a93         db  0x0b ; '.'
0000000000008a94         dd         0x00000010                                  ; Length of the record
0000000000008a98         dd         0x00000ae8                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008a9c         db         0xb4, 0xcd, 2 dup (0xff)                    ; begin 0x5850
0000000000008aa0         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5870)
0000000000008aa4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008aa5         align      8
0000000000008aa8         dd         0x00000018                                  ; Length of the record
0000000000008aac         dd         0x00000afc                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008ab0         db         0xc0, 0xcd, 2 dup (0xff)                    ; begin 0x5870
0000000000008ab4         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x58e8)
0000000000008ab8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ab9         db  0x44 ; 'D'
0000000000008aba         db  0x0e ; '.'
0000000000008abb         db  0x70 ; 'p'
0000000000008abc         db  0x02 ; '.'
0000000000008abd         db  0x60 ; '`'
0000000000008abe         db  0x0a ; '.'
0000000000008abf         db  0x0e ; '.'
0000000000008ac0         db  0x08 ; '.'
0000000000008ac1         db  0x41 ; 'A'
0000000000008ac2         db  0x0b ; '.'
0000000000008ac3         db  0x00 ; '.'
0000000000008ac4         dd         0x00000028                                  ; Length of the record
0000000000008ac8         dd         0x00000b18                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008acc         db         0x24, 0xce, 2 dup (0xff)                    ; begin 0x58f0
0000000000008ad0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x59c5)
0000000000008ad4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ad5         db  0x41 ; 'A'
0000000000008ad6         db  0x0e ; '.'
0000000000008ad7         db  0x10 ; '.'
0000000000008ad8         db  0x86 ; '.'
0000000000008ad9         db  0x02 ; '.'
0000000000008ada         db  0x41 ; 'A'
0000000000008adb         db  0x0e ; '.'
0000000000008adc         db  0x18 ; '.'
0000000000008add         db  0x83 ; '.'
0000000000008ade         db  0x03 ; '.'
0000000000008adf         db  0x50 ; 'P'
0000000000008ae0         db  0x0e ; '.'
0000000000008ae1         db  0xd0 ; '.'
0000000000008ae2         db  0x01 ; '.'
0000000000008ae3         db  0x02 ; '.'
0000000000008ae4         db  0xab ; '.'
0000000000008ae5         db  0x0a ; '.'
0000000000008ae6         db  0x0e ; '.'
0000000000008ae7         db  0x18 ; '.'
0000000000008ae8         db  0x41 ; 'A'
0000000000008ae9         db  0x0e ; '.'
0000000000008aea         db  0x10 ; '.'
0000000000008aeb         db  0x41 ; 'A'
0000000000008aec         db  0x0e ; '.'
0000000000008aed         db  0x08 ; '.'
0000000000008aee         db  0x41 ; 'A'
0000000000008aef         db  0x0b ; '.'
0000000000008af0         dd         0x0000001c                                  ; Length of the record
0000000000008af4         dd         0x00000b44                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008af8         db         0xd8, 0xce, 2 dup (0xff)                    ; begin 0x59d0
0000000000008afc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5a50)
0000000000008b00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b01         db  0x41 ; 'A'
0000000000008b02         db  0x0e ; '.'
0000000000008b03         db  0x10 ; '.'
0000000000008b04         db  0x83 ; '.'
0000000000008b05         db  0x02 ; '.'
0000000000008b06         db  0x02 ; '.'
0000000000008b07         db  0x7a ; 'z'
0000000000008b08         db  0x0e ; '.'
0000000000008b09         db  0x08 ; '.'
0000000000008b0a         db  0x00 ; '.'
0000000000008b0b         db  0x00 ; '.'
0000000000008b0c         db  0x00 ; '.'
0000000000008b0d         db  0x00 ; '.'
0000000000008b0e         db  0x00 ; '.'
0000000000008b0f         db  0x00 ; '.'
0000000000008b10         dd         0x00000018                                  ; Length of the record
0000000000008b14         dd         0x00000b64                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008b18         db         0x38, 0xcf, 2 dup (0xff)                    ; begin 0x5a50
0000000000008b1c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x5a6a)
0000000000008b20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b21         db  0x41 ; 'A'
0000000000008b22         db  0x0e ; '.'
0000000000008b23         db  0x10 ; '.'
0000000000008b24         db  0x83 ; '.'
0000000000008b25         db  0x02 ; '.'
0000000000008b26         db  0x53 ; 'S'
0000000000008b27         db  0x0a ; '.'
0000000000008b28         db  0x0e ; '.'
0000000000008b29         db  0x08 ; '.'
0000000000008b2a         db  0x41 ; 'A'
0000000000008b2b         db  0x0b ; '.'
0000000000008b2c         dd         0x00000010                                  ; Length of the record
0000000000008b30         dd         0x00000b80                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008b34         db         0x3c, 0xcf, 2 dup (0xff)                    ; begin 0x5a70
0000000000008b38         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5a94)
0000000000008b3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b3d         db  0x5f ; '_'
0000000000008b3e         db  0x0e ; '.'
0000000000008b3f         db  0x10 ; '.'
0000000000008b40         dd         0x00000010                                  ; Length of the record
0000000000008b44         dd         0x00000b94                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008b48         db         0x58, 0xcf, 2 dup (0xff)                    ; begin 0x5aa0
0000000000008b4c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5aa2)
0000000000008b50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b51         align      4
0000000000008b54         dd         0x00000020                                  ; Length of the record
0000000000008b58         dd         0x00000ba8                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008b5c         db         0x54, 0xcf, 2 dup (0xff)                    ; begin 0x5ab0
0000000000008b60         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5ae6)
0000000000008b64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b65         db  0x44 ; 'D'
0000000000008b66         db  0x0e ; '.'
0000000000008b67         db  0x10 ; '.'
0000000000008b68         db  0x83 ; '.'
0000000000008b69         db  0x02 ; '.'
0000000000008b6a         db  0x5d ; ']'
0000000000008b6b         db  0x0a ; '.'
0000000000008b6c         db  0x0e ; '.'
0000000000008b6d         db  0x08 ; '.'
0000000000008b6e         db  0x47 ; 'G'
0000000000008b6f         db  0x0b ; '.'
0000000000008b70         db  0x48 ; 'H'
0000000000008b71         db  0x0a ; '.'
0000000000008b72         db  0x0e ; '.'
0000000000008b73         db  0x08 ; '.'
0000000000008b74         db  0x41 ; 'A'
0000000000008b75         db  0x0b ; '.'
0000000000008b76         db  0x00 ; '.'
0000000000008b77         db  0x00 ; '.'
0000000000008b78         dd         0x00000010                                  ; Length of the record
0000000000008b7c         dd         0x00000bcc                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008b80         db         0x70, 0xcf, 2 dup (0xff)                    ; begin 0x5af0
0000000000008b84         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5b14)
0000000000008b88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b89         db  0x5f ; '_'
0000000000008b8a         db  0x0e ; '.'
0000000000008b8b         db  0x10 ; '.'
0000000000008b8c         dd         0x00000014                                  ; Length of the record
0000000000008b90         dd         0x00000be0                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008b94         db         0x8c, 0xcf, 2 dup (0xff)                    ; begin 0x5b20
0000000000008b98         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5ba2)
0000000000008b9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b9d         db  0x02 ; '.'
0000000000008b9e         db  0x5f ; '_'
0000000000008b9f         db  0x0e ; '.'
0000000000008ba0         db  0x10 ; '.'
0000000000008ba1         db  0x49 ; 'I'
0000000000008ba2         db  0x0e ; '.'
0000000000008ba3         db  0x08 ; '.'
0000000000008ba4         dd         0x00000014                                  ; Length of the record
0000000000008ba8         dd         0x00000bf8                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008bac         db         0x04, 0xd0, 2 dup (0xff)                    ; begin 0x5bb0
0000000000008bb0         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x5bfa)
0000000000008bb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bb5         db  0x02 ; '.'
0000000000008bb6         db  0x45 ; 'E'
0000000000008bb7         db  0x0e ; '.'
0000000000008bb8         db  0x10 ; '.'
0000000000008bb9         db  0x00 ; '.'
0000000000008bba         db  0x00 ; '.'
0000000000008bbb         db  0x00 ; '.'
0000000000008bbc         dd         0x00000018                                  ; Length of the record
0000000000008bc0         dd         0x00000c10                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008bc4         db         0x3c, 0xd0, 2 dup (0xff)                    ; begin 0x5c00
0000000000008bc8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5c17)
0000000000008bcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bcd         db  0x41 ; 'A'
0000000000008bce         db  0x0e ; '.'
0000000000008bcf         db  0x10 ; '.'
0000000000008bd0         db  0x83 ; '.'
0000000000008bd1         db  0x02 ; '.'
0000000000008bd2         db  0x51 ; 'Q'
0000000000008bd3         db  0x0e ; '.'
0000000000008bd4         db  0x08 ; '.'
0000000000008bd5         db  0x00 ; '.'
0000000000008bd6         db  0x00 ; '.'
0000000000008bd7         db  0x00 ; '.'
0000000000008bd8         dd         0x00000018                                  ; Length of the record
0000000000008bdc         dd         0x00000c2c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008be0         db         0x40, 0xd0, 2 dup (0xff)                    ; begin 0x5c20
0000000000008be4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x5c4e)
0000000000008be8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008be9         db  0x47 ; 'G'
0000000000008bea         db  0x0e ; '.'
0000000000008beb         db  0x10 ; '.'
0000000000008bec         db  0x61 ; 'a'
0000000000008bed         db  0x0a ; '.'
0000000000008bee         db  0x0e ; '.'
0000000000008bef         db  0x08 ; '.'
0000000000008bf0         db  0x41 ; 'A'
0000000000008bf1         db  0x0b ; '.'
0000000000008bf2         db  0x00 ; '.'
0000000000008bf3         db  0x00 ; '.'
0000000000008bf4         dd         0x00000024                                  ; Length of the record
0000000000008bf8         dd         0x00000c48                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008bfc         db         0x54, 0xd0, 2 dup (0xff)                    ; begin 0x5c50
0000000000008c00         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5c78)
0000000000008c04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c05         db  0x41 ; 'A'
0000000000008c06         db  0x0e ; '.'
0000000000008c07         db  0x10 ; '.'
0000000000008c08         db  0x86 ; '.'
0000000000008c09         db  0x02 ; '.'
0000000000008c0a         db  0x41 ; 'A'
0000000000008c0b         db  0x0e ; '.'
0000000000008c0c         db  0x18 ; '.'
0000000000008c0d         db  0x83 ; '.'
0000000000008c0e         db  0x03 ; '.'
0000000000008c0f         db  0x4d ; 'M'
0000000000008c10         db  0x0e ; '.'
0000000000008c11         db  0x20 ; ' '
0000000000008c12         db  0x49 ; 'I'
0000000000008c13         db  0x0e ; '.'
0000000000008c14         db  0x18 ; '.'
0000000000008c15         db  0x47 ; 'G'
0000000000008c16         db  0x0e ; '.'
0000000000008c17         db  0x10 ; '.'
0000000000008c18         db  0x41 ; 'A'
0000000000008c19         db  0x0e ; '.'
0000000000008c1a         db  0x08 ; '.'
0000000000008c1b         db  0x00 ; '.'
0000000000008c1c         dd         0x00000018                                  ; Length of the record
0000000000008c20         dd         0x00000c70                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008c24         db         0x5c, 0xd0, 2 dup (0xff)                    ; begin 0x5c80
0000000000008c28         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5c93)
0000000000008c2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c2d         db  0x41 ; 'A'
0000000000008c2e         db  0x0e ; '.'
0000000000008c2f         db  0x10 ; '.'
0000000000008c30         db  0x83 ; '.'
0000000000008c31         db  0x02 ; '.'
0000000000008c32         db  0x50 ; 'P'
0000000000008c33         db  0x0e ; '.'
0000000000008c34         db  0x08 ; '.'
0000000000008c35         db  0x00 ; '.'
0000000000008c36         db  0x00 ; '.'
0000000000008c37         db  0x00 ; '.'
0000000000008c38         dd         0x00000014                                  ; Length of the record
0000000000008c3c         dd         0x00000c8c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008c40         db         0x60, 0xd0, 2 dup (0xff)                    ; begin 0x5ca0
0000000000008c44         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5cd5)
0000000000008c48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c49         db  0x4b ; 'K'
0000000000008c4a         db  0x0e ; '.'
0000000000008c4b         db  0x10 ; '.'
0000000000008c4c         db  0x00 ; '.'
0000000000008c4d         db  0x00 ; '.'
0000000000008c4e         db  0x00 ; '.'
0000000000008c4f         db  0x00 ; '.'
0000000000008c50         dd         0x00000038                                  ; Length of the record
0000000000008c54         dd         0x00000ca4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008c58         db         0x88, 0xd0, 2 dup (0xff)                    ; begin 0x5ce0
0000000000008c5c         db         0xba, 3 dup (0x00)                          ; length 0xba (end at 0x5d9a)
0000000000008c60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c61         db  0x42 ; 'B'
0000000000008c62         db  0x0e ; '.'
0000000000008c63         db  0x10 ; '.'
0000000000008c64         db  0x8e ; '.'
0000000000008c65         db  0x02 ; '.'
0000000000008c66         db  0x42 ; 'B'
0000000000008c67         db  0x0e ; '.'
0000000000008c68         db  0x18 ; '.'
0000000000008c69         db  0x8d ; '.'
0000000000008c6a         db  0x03 ; '.'
0000000000008c6b         db  0x45 ; 'E'
0000000000008c6c         db  0x0e ; '.'
0000000000008c6d         db  0x20 ; ' '
0000000000008c6e         db  0x8c ; '.'
0000000000008c6f         db  0x04 ; '.'
0000000000008c70         db  0x41 ; 'A'
0000000000008c71         db  0x0e ; '.'
0000000000008c72         db  0x28 ; '('
0000000000008c73         db  0x86 ; '.'
0000000000008c74         db  0x05 ; '.'
0000000000008c75         db  0x44 ; 'D'
0000000000008c76         db  0x0e ; '.'
0000000000008c77         db  0x30 ; '0'
0000000000008c78         db  0x83 ; '.'
0000000000008c79         db  0x06 ; '.'
0000000000008c7a         db  0x02 ; '.'
0000000000008c7b         db  0x99 ; '.'
0000000000008c7c         db  0x0e ; '.'
0000000000008c7d         db  0x28 ; '('
0000000000008c7e         db  0x41 ; 'A'
0000000000008c7f         db  0x0e ; '.'
0000000000008c80         db  0x20 ; ' '
0000000000008c81         db  0x42 ; 'B'
0000000000008c82         db  0x0e ; '.'
0000000000008c83         db  0x18 ; '.'
0000000000008c84         db  0x42 ; 'B'
0000000000008c85         db  0x0e ; '.'
0000000000008c86         db  0x10 ; '.'
0000000000008c87         db  0x42 ; 'B'
0000000000008c88         db  0x0e ; '.'
0000000000008c89         db  0x08 ; '.'
0000000000008c8a         db  0x00 ; '.'
0000000000008c8b         db  0x00 ; '.'
0000000000008c8c         dd         0x00000038                                  ; Length of the record
0000000000008c90         dd         0x00000ce0                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008c94         db         0x0c, 0xd1, 2 dup (0xff)                    ; begin 0x5da0
0000000000008c98         db         0x44, 3 dup (0x00)                          ; length 0x44 (end at 0x5de4)
0000000000008c9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c9d         db  0x42 ; 'B'
0000000000008c9e         db  0x0e ; '.'
0000000000008c9f         db  0x10 ; '.'
0000000000008ca0         db  0x8e ; '.'
0000000000008ca1         db  0x02 ; '.'
0000000000008ca2         db  0x42 ; 'B'
0000000000008ca3         db  0x0e ; '.'
0000000000008ca4         db  0x18 ; '.'
0000000000008ca5         db  0x8d ; '.'
0000000000008ca6         db  0x03 ; '.'
0000000000008ca7         db  0x45 ; 'E'
0000000000008ca8         db  0x0e ; '.'
0000000000008ca9         db  0x20 ; ' '
0000000000008caa         db  0x8c ; '.'
0000000000008cab         db  0x04 ; '.'
0000000000008cac         db  0x41 ; 'A'
0000000000008cad         db  0x0e ; '.'
0000000000008cae         db  0x28 ; '('
0000000000008caf         db  0x86 ; '.'
0000000000008cb0         db  0x05 ; '.'
0000000000008cb1         db  0x44 ; 'D'
0000000000008cb2         db  0x0e ; '.'
0000000000008cb3         db  0x30 ; '0'
0000000000008cb4         db  0x83 ; '.'
0000000000008cb5         db  0x06 ; '.'
0000000000008cb6         db  0x6b ; 'k'
0000000000008cb7         db  0x0e ; '.'
0000000000008cb8         db  0x28 ; '('
0000000000008cb9         db  0x44 ; 'D'
0000000000008cba         db  0x0e ; '.'
0000000000008cbb         db  0x20 ; ' '
0000000000008cbc         db  0x42 ; 'B'
0000000000008cbd         db  0x0e ; '.'
0000000000008cbe         db  0x18 ; '.'
0000000000008cbf         db  0x42 ; 'B'
0000000000008cc0         db  0x0e ; '.'
0000000000008cc1         db  0x10 ; '.'
0000000000008cc2         db  0x42 ; 'B'
0000000000008cc3         db  0x0e ; '.'
0000000000008cc4         db  0x08 ; '.'
0000000000008cc5         db  0x00 ; '.'
0000000000008cc6         db  0x00 ; '.'
0000000000008cc7         db  0x00 ; '.'
0000000000008cc8         dd         0x0000003c                                  ; Length of the record
0000000000008ccc         dd         0x00000d1c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008cd0         db         0x20, 0xd1, 2 dup (0xff)                    ; begin 0x5df0
0000000000008cd4         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0x5e36)
0000000000008cd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cd9         db  0x42 ; 'B'
0000000000008cda         db  0x0e ; '.'
0000000000008cdb         db  0x10 ; '.'
0000000000008cdc         db  0x8e ; '.'
0000000000008cdd         db  0x02 ; '.'
0000000000008cde         db  0x42 ; 'B'
0000000000008cdf         db  0x0e ; '.'
0000000000008ce0         db  0x18 ; '.'
0000000000008ce1         db  0x8d ; '.'
0000000000008ce2         db  0x03 ; '.'
0000000000008ce3         db  0x45 ; 'E'
0000000000008ce4         db  0x0e ; '.'
0000000000008ce5         db  0x20 ; ' '
0000000000008ce6         db  0x8c ; '.'
0000000000008ce7         db  0x04 ; '.'
0000000000008ce8         db  0x41 ; 'A'
0000000000008ce9         db  0x0e ; '.'
0000000000008cea         db  0x28 ; '('
0000000000008ceb         db  0x86 ; '.'
0000000000008cec         db  0x05 ; '.'
0000000000008ced         db  0x44 ; 'D'
0000000000008cee         db  0x0e ; '.'
0000000000008cef         db  0x30 ; '0'
0000000000008cf0         db  0x83 ; '.'
0000000000008cf1         db  0x06 ; '.'
0000000000008cf2         db  0x6d ; 'm'
0000000000008cf3         db  0x0e ; '.'
0000000000008cf4         db  0x28 ; '('
0000000000008cf5         db  0x44 ; 'D'
0000000000008cf6         db  0x0e ; '.'
0000000000008cf7         db  0x20 ; ' '
0000000000008cf8         db  0x42 ; 'B'
0000000000008cf9         db  0x0e ; '.'
0000000000008cfa         db  0x18 ; '.'
0000000000008cfb         db  0x42 ; 'B'
0000000000008cfc         db  0x0e ; '.'
0000000000008cfd         db  0x10 ; '.'
0000000000008cfe         db  0x42 ; 'B'
0000000000008cff         db  0x0e ; '.'
0000000000008d00         db  0x08 ; '.'
0000000000008d01         db  0x00 ; '.'
0000000000008d02         db  0x00 ; '.'
0000000000008d03         db  0x00 ; '.'
0000000000008d04         db  0x00 ; '.'
0000000000008d05         db  0x00 ; '.'
0000000000008d06         db  0x00 ; '.'
0000000000008d07         db  0x00 ; '.'
0000000000008d08         dd         0x0000004c                                  ; Length of the record
0000000000008d0c         dd         0x00000d5c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008d10         db         0x30, 0xd1, 2 dup (0xff)                    ; begin 0x5e40
0000000000008d14         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x625c)
0000000000008d18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d19         db  0x42 ; 'B'
0000000000008d1a         db  0x0e ; '.'
0000000000008d1b         db  0x10 ; '.'
0000000000008d1c         db  0x8f ; '.'
0000000000008d1d         db  0x02 ; '.'
0000000000008d1e         db  0x42 ; 'B'
0000000000008d1f         db  0x0e ; '.'
0000000000008d20         db  0x18 ; '.'
0000000000008d21         db  0x8e ; '.'
0000000000008d22         db  0x03 ; '.'
0000000000008d23         db  0x42 ; 'B'
0000000000008d24         db  0x0e ; '.'
0000000000008d25         db  0x20 ; ' '
0000000000008d26         db  0x8d ; '.'
0000000000008d27         db  0x04 ; '.'
0000000000008d28         db  0x42 ; 'B'
0000000000008d29         db  0x0e ; '.'
0000000000008d2a         db  0x28 ; '('
0000000000008d2b         db  0x8c ; '.'
0000000000008d2c         db  0x05 ; '.'
0000000000008d2d         db  0x41 ; 'A'
0000000000008d2e         db  0x0e ; '.'
0000000000008d2f         db  0x30 ; '0'
0000000000008d30         db  0x86 ; '.'
0000000000008d31         db  0x06 ; '.'
0000000000008d32         db  0x41 ; 'A'
0000000000008d33         db  0x0e ; '.'
0000000000008d34         db  0x38 ; '8'
0000000000008d35         db  0x83 ; '.'
0000000000008d36         db  0x07 ; '.'
0000000000008d37         db  0x44 ; 'D'
0000000000008d38         db  0x0e ; '.'
0000000000008d39         db  0x60 ; '`'
0000000000008d3a         db  0x02 ; '.'
0000000000008d3b         db  0xe9 ; '.'
0000000000008d3c         db  0x0a ; '.'
0000000000008d3d         db  0x0e ; '.'
0000000000008d3e         db  0x38 ; '8'
0000000000008d3f         db  0x41 ; 'A'
0000000000008d40         db  0x0e ; '.'
0000000000008d41         db  0x30 ; '0'
0000000000008d42         db  0x41 ; 'A'
0000000000008d43         db  0x0e ; '.'
0000000000008d44         db  0x28 ; '('
0000000000008d45         db  0x42 ; 'B'
0000000000008d46         db  0x0e ; '.'
0000000000008d47         db  0x20 ; ' '
0000000000008d48         db  0x42 ; 'B'
0000000000008d49         db  0x0e ; '.'
0000000000008d4a         db  0x18 ; '.'
0000000000008d4b         db  0x42 ; 'B'
0000000000008d4c         db  0x0e ; '.'
0000000000008d4d         db  0x10 ; '.'
0000000000008d4e         db  0x42 ; 'B'
0000000000008d4f         db  0x0e ; '.'
0000000000008d50         db  0x08 ; '.'
0000000000008d51         db  0x47 ; 'G'
0000000000008d52         db  0x0b ; '.'
0000000000008d53         db  0x00 ; '.'
0000000000008d54         db  0x00 ; '.'
0000000000008d55         db  0x00 ; '.'
0000000000008d56         db  0x00 ; '.'
0000000000008d57         db  0x00 ; '.'
0000000000008d58         dd         0x00000034                                  ; Length of the record
0000000000008d5c         dd         0x00000dac                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008d60         db         0x00, 0xd5, 2 dup (0xff)                    ; begin 0x6260
0000000000008d64         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x62db)
0000000000008d68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d69         db  0x42 ; 'B'
0000000000008d6a         db  0x0e ; '.'
0000000000008d6b         db  0x10 ; '.'
0000000000008d6c         db  0x8c ; '.'
0000000000008d6d         db  0x02 ; '.'
0000000000008d6e         db  0x41 ; 'A'
0000000000008d6f         db  0x0e ; '.'
0000000000008d70         db  0x18 ; '.'
0000000000008d71         db  0x86 ; '.'
0000000000008d72         db  0x03 ; '.'
0000000000008d73         db  0x41 ; 'A'
0000000000008d74         db  0x0e ; '.'
0000000000008d75         db  0x20 ; ' '
0000000000008d76         db  0x83 ; '.'
0000000000008d77         db  0x04 ; '.'
0000000000008d78         db  0x7d ; '}'
0000000000008d79         db  0x0a ; '.'
0000000000008d7a         db  0x0e ; '.'
0000000000008d7b         db  0x18 ; '.'
0000000000008d7c         db  0x41 ; 'A'
0000000000008d7d         db  0x0e ; '.'
0000000000008d7e         db  0x10 ; '.'
0000000000008d7f         db  0x42 ; 'B'
0000000000008d80         db  0x0e ; '.'
0000000000008d81         db  0x08 ; '.'
0000000000008d82         db  0x44 ; 'D'
0000000000008d83         db  0x0b ; '.'
0000000000008d84         db  0x60 ; '`'
0000000000008d85         db  0x0a ; '.'
0000000000008d86         db  0x0e ; '.'
0000000000008d87         db  0x18 ; '.'
0000000000008d88         db  0x41 ; 'A'
0000000000008d89         db  0x0e ; '.'
0000000000008d8a         db  0x10 ; '.'
0000000000008d8b         db  0x42 ; 'B'
0000000000008d8c         db  0x0e ; '.'
0000000000008d8d         db  0x08 ; '.'
0000000000008d8e         db  0x45 ; 'E'
0000000000008d8f         db  0x0b ; '.'
0000000000008d90         dd         0x0000001c                                  ; Length of the record
0000000000008d94         dd         0x00000de4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008d98         db         0x48, 0xd5, 2 dup (0xff)                    ; begin 0x62e0
0000000000008d9c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6320)
0000000000008da0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008da1         db  0x44 ; 'D'
0000000000008da2         db  0x0e ; '.'
0000000000008da3         db  0x10 ; '.'
0000000000008da4         db  0x83 ; '.'
0000000000008da5         db  0x02 ; '.'
0000000000008da6         db  0x5a ; 'Z'
0000000000008da7         db  0x0a ; '.'
0000000000008da8         db  0x0e ; '.'
0000000000008da9         db  0x08 ; '.'
0000000000008daa         db  0x4a ; 'J'
0000000000008dab         db  0x0b ; '.'
0000000000008dac         db  0x53 ; 'S'
0000000000008dad         db  0x0e ; '.'
0000000000008dae         db  0x08 ; '.'
0000000000008daf         db  0x00 ; '.'
0000000000008db0         dd         0x0000002c                                  ; Length of the record
0000000000008db4         dd         0x00000e04                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008db8         db         0x68, 0xd5, 2 dup (0xff)                    ; begin 0x6320
0000000000008dbc         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6377)
0000000000008dc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008dc1         db  0x63 ; 'c'
0000000000008dc2         db  0x0e ; '.'
0000000000008dc3         db  0x10 ; '.'
0000000000008dc4         db  0x8c ; '.'
0000000000008dc5         db  0x02 ; '.'
0000000000008dc6         db  0x41 ; 'A'
0000000000008dc7         db  0x0e ; '.'
0000000000008dc8         db  0x18 ; '.'
0000000000008dc9         db  0x86 ; '.'
0000000000008dca         db  0x03 ; '.'
0000000000008dcb         db  0x44 ; 'D'
0000000000008dcc         db  0x0e ; '.'
0000000000008dcd         db  0x20 ; ' '
0000000000008dce         db  0x83 ; '.'
0000000000008dcf         db  0x04 ; '.'
0000000000008dd0         db  0x6b ; 'k'
0000000000008dd1         db  0x0e ; '.'
0000000000008dd2         db  0x18 ; '.'
0000000000008dd3         db  0x41 ; 'A'
0000000000008dd4         db  0x0e ; '.'
0000000000008dd5         db  0x10 ; '.'
0000000000008dd6         db  0x42 ; 'B'
0000000000008dd7         db  0x0e ; '.'
0000000000008dd8         db  0x08 ; '.'
0000000000008dd9         db  0x00 ; '.'
0000000000008dda         db  0x00 ; '.'
0000000000008ddb         db  0x00 ; '.'
0000000000008ddc         db  0x00 ; '.'
0000000000008ddd         db  0x00 ; '.'
0000000000008dde         db  0x00 ; '.'
0000000000008ddf         db  0x00 ; '.'
0000000000008de0         dd         0x0000003c                                  ; Length of the record
0000000000008de4         dd         0x00000e34                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008de8         db         0x98, 0xd5, 2 dup (0xff)                    ; begin 0x6380
0000000000008dec         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6403)
0000000000008df0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008df1         db  0x42 ; 'B'
0000000000008df2         db  0x0e ; '.'
0000000000008df3         db  0x10 ; '.'
0000000000008df4         db  0x8d ; '.'
0000000000008df5         db  0x02 ; '.'
0000000000008df6         db  0x42 ; 'B'
0000000000008df7         db  0x0e ; '.'
0000000000008df8         db  0x18 ; '.'
0000000000008df9         db  0x8c ; '.'
0000000000008dfa         db  0x03 ; '.'
0000000000008dfb         db  0x44 ; 'D'
0000000000008dfc         db  0x0e ; '.'
0000000000008dfd         db  0x20 ; ' '
0000000000008dfe         db  0x86 ; '.'
0000000000008dff         db  0x04 ; '.'
0000000000008e00         db  0x41 ; 'A'
0000000000008e01         db  0x0e ; '.'
0000000000008e02         db  0x28 ; '('
0000000000008e03         db  0x83 ; '.'
0000000000008e04         db  0x05 ; '.'
0000000000008e05         db  0x4a ; 'J'
0000000000008e06         db  0x0e ; '.'
0000000000008e07         db  0x40 ; '@'
0000000000008e08         db  0x02 ; '.'
0000000000008e09         db  0x64 ; 'd'
0000000000008e0a         db  0x0a ; '.'
0000000000008e0b         db  0x0e ; '.'
0000000000008e0c         db  0x28 ; '('
0000000000008e0d         db  0x41 ; 'A'
0000000000008e0e         db  0x0e ; '.'
0000000000008e0f         db  0x20 ; ' '
0000000000008e10         db  0x41 ; 'A'
0000000000008e11         db  0x0e ; '.'
0000000000008e12         db  0x18 ; '.'
0000000000008e13         db  0x42 ; 'B'
0000000000008e14         db  0x0e ; '.'
0000000000008e15         db  0x10 ; '.'
0000000000008e16         db  0x42 ; 'B'
0000000000008e17         db  0x0e ; '.'
0000000000008e18         db  0x08 ; '.'
0000000000008e19         db  0x41 ; 'A'
0000000000008e1a         db  0x0b ; '.'
0000000000008e1b         db  0x00 ; '.'
0000000000008e1c         db  0x00 ; '.'
0000000000008e1d         db  0x00 ; '.'
0000000000008e1e         db  0x00 ; '.'
0000000000008e1f         db  0x00 ; '.'
0000000000008e20         dd         0x0000004c                                  ; Length of the record
0000000000008e24         dd         0x00000e74                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008e28         db         0xe8, 0xd5, 2 dup (0xff)                    ; begin 0x6410
0000000000008e2c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x648d)
0000000000008e30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e31         db  0x42 ; 'B'
0000000000008e32         db  0x0e ; '.'
0000000000008e33         db  0x10 ; '.'
0000000000008e34         db  0x8c ; '.'
0000000000008e35         db  0x02 ; '.'
0000000000008e36         db  0x41 ; 'A'
0000000000008e37         db  0x0e ; '.'
0000000000008e38         db  0x18 ; '.'
0000000000008e39         db  0x86 ; '.'
0000000000008e3a         db  0x03 ; '.'
0000000000008e3b         db  0x44 ; 'D'
0000000000008e3c         db  0x0e ; '.'
0000000000008e3d         db  0x20 ; ' '
0000000000008e3e         db  0x83 ; '.'
0000000000008e3f         db  0x04 ; '.'
0000000000008e40         db  0x69 ; 'i'
0000000000008e41         db  0x0a ; '.'
0000000000008e42         db  0x0e ; '.'
0000000000008e43         db  0x18 ; '.'
0000000000008e44         db  0x41 ; 'A'
0000000000008e45         db  0x0e ; '.'
0000000000008e46         db  0x10 ; '.'
0000000000008e47         db  0x42 ; 'B'
0000000000008e48         db  0x0e ; '.'
0000000000008e49         db  0x08 ; '.'
0000000000008e4a         db  0x45 ; 'E'
0000000000008e4b         db  0x0b ; '.'
0000000000008e4c         db  0x55 ; 'U'
0000000000008e4d         db  0x0a ; '.'
0000000000008e4e         db  0x0e ; '.'
0000000000008e4f         db  0x18 ; '.'
0000000000008e50         db  0x41 ; 'A'
0000000000008e51         db  0x0e ; '.'
0000000000008e52         db  0x10 ; '.'
0000000000008e53         db  0x42 ; 'B'
0000000000008e54         db  0x0e ; '.'
0000000000008e55         db  0x08 ; '.'
0000000000008e56         db  0x48 ; 'H'
0000000000008e57         db  0x0b ; '.'
0000000000008e58         db  0x41 ; 'A'
0000000000008e59         db  0x0a ; '.'
0000000000008e5a         db  0x0e ; '.'
0000000000008e5b         db  0x18 ; '.'
0000000000008e5c         db  0x46 ; 'F'
0000000000008e5d         db  0x0e ; '.'
0000000000008e5e         db  0x10 ; '.'
0000000000008e5f         db  0x42 ; 'B'
0000000000008e60         db  0x0e ; '.'
0000000000008e61         db  0x08 ; '.'
0000000000008e62         db  0x47 ; 'G'
0000000000008e63         db  0x0b ; '.'
0000000000008e64         db  0x49 ; 'I'
0000000000008e65         db  0x0e ; '.'
0000000000008e66         db  0x18 ; '.'
0000000000008e67         db  0x41 ; 'A'
0000000000008e68         db  0x0e ; '.'
0000000000008e69         db  0x10 ; '.'
0000000000008e6a         db  0x42 ; 'B'
0000000000008e6b         db  0x0e ; '.'
0000000000008e6c         db  0x08 ; '.'
0000000000008e6d         db  0x00 ; '.'
0000000000008e6e         db  0x00 ; '.'
0000000000008e6f         db  0x00 ; '.'
0000000000008e70         dd         0x0000001c                                  ; Length of the record
0000000000008e74         dd         0x00000ec4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008e78         db         0x18, 0xd6, 2 dup (0xff)                    ; begin 0x6490
0000000000008e7c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x64cc)
0000000000008e80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e81         db  0x44 ; 'D'
0000000000008e82         db  0x0e ; '.'
0000000000008e83         db  0x10 ; '.'
0000000000008e84         db  0x61 ; 'a'
0000000000008e85         db  0x0a ; '.'
0000000000008e86         db  0x0e ; '.'
0000000000008e87         db  0x08 ; '.'
0000000000008e88         db  0x4b ; 'K'
0000000000008e89         db  0x0b ; '.'
0000000000008e8a         db  0x4b ; 'K'
0000000000008e8b         db  0x0e ; '.'
0000000000008e8c         db  0x08 ; '.'
0000000000008e8d         db  0x00 ; '.'
0000000000008e8e         db  0x00 ; '.'
0000000000008e8f         db  0x00 ; '.'
0000000000008e90         dd         0x00000074                                  ; Length of the record
0000000000008e94         dd         0x00000ee4                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008e98         db         0x38, 0xd6, 2 dup (0xff)                    ; begin 0x64d0
0000000000008e9c         db         0xb4, 3 dup (0x00)                          ; length 0xb4 (end at 0x6584)
0000000000008ea0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ea1         db  0x42 ; 'B'
0000000000008ea2         db  0x0e ; '.'
0000000000008ea3         db  0x10 ; '.'
0000000000008ea4         db  0x8f ; '.'
0000000000008ea5         db  0x02 ; '.'
0000000000008ea6         db  0x42 ; 'B'
0000000000008ea7         db  0x0e ; '.'
0000000000008ea8         db  0x18 ; '.'
0000000000008ea9         db  0x8e ; '.'
0000000000008eaa         db  0x03 ; '.'
0000000000008eab         db  0x45 ; 'E'
0000000000008eac         db  0x0e ; '.'
0000000000008ead         db  0x20 ; ' '
0000000000008eae         db  0x8d ; '.'
0000000000008eaf         db  0x04 ; '.'
0000000000008eb0         db  0x42 ; 'B'
0000000000008eb1         db  0x0e ; '.'
0000000000008eb2         db  0x28 ; '('
0000000000008eb3         db  0x8c ; '.'
0000000000008eb4         db  0x05 ; '.'
0000000000008eb5         db  0x44 ; 'D'
0000000000008eb6         db  0x0e ; '.'
0000000000008eb7         db  0x30 ; '0'
0000000000008eb8         db  0x86 ; '.'
0000000000008eb9         db  0x06 ; '.'
0000000000008eba         db  0x41 ; 'A'
0000000000008ebb         db  0x0e ; '.'
0000000000008ebc         db  0x38 ; '8'
0000000000008ebd         db  0x83 ; '.'
0000000000008ebe         db  0x07 ; '.'
0000000000008ebf         db  0x4a ; 'J'
0000000000008ec0         db  0x0e ; '.'
0000000000008ec1         db  0x40 ; '@'
0000000000008ec2         db  0x02 ; '.'
0000000000008ec3         db  0x53 ; 'S'
0000000000008ec4         db  0x0a ; '.'
0000000000008ec5         db  0x0e ; '.'
0000000000008ec6         db  0x38 ; '8'
0000000000008ec7         db  0x41 ; 'A'
0000000000008ec8         db  0x0e ; '.'
0000000000008ec9         db  0x30 ; '0'
0000000000008eca         db  0x41 ; 'A'
0000000000008ecb         db  0x0e ; '.'
0000000000008ecc         db  0x28 ; '('
0000000000008ecd         db  0x42 ; 'B'
0000000000008ece         db  0x0e ; '.'
0000000000008ecf         db  0x20 ; ' '
0000000000008ed0         db  0x42 ; 'B'
0000000000008ed1         db  0x0e ; '.'
0000000000008ed2         db  0x18 ; '.'
0000000000008ed3         db  0x42 ; 'B'
0000000000008ed4         db  0x0e ; '.'
0000000000008ed5         db  0x10 ; '.'
0000000000008ed6         db  0x42 ; 'B'
0000000000008ed7         db  0x0e ; '.'
0000000000008ed8         db  0x08 ; '.'
0000000000008ed9         db  0x49 ; 'I'
0000000000008eda         db  0x0b ; '.'
0000000000008edb         db  0x4c ; 'L'
0000000000008edc         db  0x0a ; '.'
0000000000008edd         db  0x0e ; '.'
0000000000008ede         db  0x38 ; '8'
0000000000008edf         db  0x41 ; 'A'
0000000000008ee0         db  0x0e ; '.'
0000000000008ee1         db  0x30 ; '0'
0000000000008ee2         db  0x43 ; 'C'
0000000000008ee3         db  0x0e ; '.'
0000000000008ee4         db  0x28 ; '('
0000000000008ee5         db  0x42 ; 'B'
0000000000008ee6         db  0x0e ; '.'
0000000000008ee7         db  0x20 ; ' '
0000000000008ee8         db  0x42 ; 'B'
0000000000008ee9         db  0x0e ; '.'
0000000000008eea         db  0x18 ; '.'
0000000000008eeb         db  0x42 ; 'B'
0000000000008eec         db  0x0e ; '.'
0000000000008eed         db  0x10 ; '.'
0000000000008eee         db  0x42 ; 'B'
0000000000008eef         db  0x0e ; '.'
0000000000008ef0         db  0x08 ; '.'
0000000000008ef1         db  0x48 ; 'H'
0000000000008ef2         db  0x0b ; '.'
0000000000008ef3         db  0x44 ; 'D'
0000000000008ef4         db  0x0e ; '.'
0000000000008ef5         db  0x38 ; '8'
0000000000008ef6         db  0x46 ; 'F'
0000000000008ef7         db  0x0e ; '.'
0000000000008ef8         db  0x30 ; '0'
0000000000008ef9         db  0x41 ; 'A'
0000000000008efa         db  0x0e ; '.'
0000000000008efb         db  0x28 ; '('
0000000000008efc         db  0x42 ; 'B'
0000000000008efd         db  0x0e ; '.'
0000000000008efe         db  0x20 ; ' '
0000000000008eff         db  0x42 ; 'B'
0000000000008f00         db  0x0e ; '.'
0000000000008f01         db  0x18 ; '.'
0000000000008f02         db  0x42 ; 'B'
0000000000008f03         db  0x0e ; '.'
0000000000008f04         db  0x10 ; '.'
0000000000008f05         db  0x42 ; 'B'
0000000000008f06         db  0x0e ; '.'
0000000000008f07         db  0x08 ; '.'
0000000000008f08         dd         0x00000048                                  ; Length of the record
0000000000008f0c         dd         0x00000f5c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008f10         db         0x80, 0xd6, 2 dup (0xff)                    ; begin 0x6590
0000000000008f14         db         0xa9, 3 dup (0x00)                          ; length 0xa9 (end at 0x6639)
0000000000008f18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f19         db  0x42 ; 'B'
0000000000008f1a         db  0x0e ; '.'
0000000000008f1b         db  0x10 ; '.'
0000000000008f1c         db  0x8f ; '.'
0000000000008f1d         db  0x02 ; '.'
0000000000008f1e         db  0x42 ; 'B'
0000000000008f1f         db  0x0e ; '.'
0000000000008f20         db  0x18 ; '.'
0000000000008f21         db  0x8e ; '.'
0000000000008f22         db  0x03 ; '.'
0000000000008f23         db  0x45 ; 'E'
0000000000008f24         db  0x0e ; '.'
0000000000008f25         db  0x20 ; ' '
0000000000008f26         db  0x8d ; '.'
0000000000008f27         db  0x04 ; '.'
0000000000008f28         db  0x42 ; 'B'
0000000000008f29         db  0x0e ; '.'
0000000000008f2a         db  0x28 ; '('
0000000000008f2b         db  0x8c ; '.'
0000000000008f2c         db  0x05 ; '.'
0000000000008f2d         db  0x44 ; 'D'
0000000000008f2e         db  0x0e ; '.'
0000000000008f2f         db  0x30 ; '0'
0000000000008f30         db  0x86 ; '.'
0000000000008f31         db  0x06 ; '.'
0000000000008f32         db  0x41 ; 'A'
0000000000008f33         db  0x0e ; '.'
0000000000008f34         db  0x38 ; '8'
0000000000008f35         db  0x83 ; '.'
0000000000008f36         db  0x07 ; '.'
0000000000008f37         db  0x4a ; 'J'
0000000000008f38         db  0x0e ; '.'
0000000000008f39         db  0x50 ; 'P'
0000000000008f3a         db  0x02 ; '.'
0000000000008f3b         db  0x6b ; 'k'
0000000000008f3c         db  0x0a ; '.'
0000000000008f3d         db  0x0e ; '.'
0000000000008f3e         db  0x38 ; '8'
0000000000008f3f         db  0x43 ; 'C'
0000000000008f40         db  0x0e ; '.'
0000000000008f41         db  0x30 ; '0'
0000000000008f42         db  0x41 ; 'A'
0000000000008f43         db  0x0e ; '.'
0000000000008f44         db  0x28 ; '('
0000000000008f45         db  0x42 ; 'B'
0000000000008f46         db  0x0e ; '.'
0000000000008f47         db  0x20 ; ' '
0000000000008f48         db  0x42 ; 'B'
0000000000008f49         db  0x0e ; '.'
0000000000008f4a         db  0x18 ; '.'
0000000000008f4b         db  0x42 ; 'B'
0000000000008f4c         db  0x0e ; '.'
0000000000008f4d         db  0x10 ; '.'
0000000000008f4e         db  0x42 ; 'B'
0000000000008f4f         db  0x0e ; '.'
0000000000008f50         db  0x08 ; '.'
0000000000008f51         db  0x47 ; 'G'
0000000000008f52         db  0x0b ; '.'
0000000000008f53         db  0x00 ; '.'
0000000000008f54         dd         0x00000040                                  ; Length of the record
0000000000008f58         dd         0x00000fa8                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008f5c         db         0xe4, 0xd6, 2 dup (0xff)                    ; begin 0x6640
0000000000008f60         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x669e)
0000000000008f64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f65         db  0x42 ; 'B'
0000000000008f66         db  0x0e ; '.'
0000000000008f67         db  0x10 ; '.'
0000000000008f68         db  0x8c ; '.'
0000000000008f69         db  0x02 ; '.'
0000000000008f6a         db  0x41 ; 'A'
0000000000008f6b         db  0x0e ; '.'
0000000000008f6c         db  0x18 ; '.'
0000000000008f6d         db  0x86 ; '.'
0000000000008f6e         db  0x03 ; '.'
0000000000008f6f         db  0x44 ; 'D'
0000000000008f70         db  0x0e ; '.'
0000000000008f71         db  0x20 ; ' '
0000000000008f72         db  0x83 ; '.'
0000000000008f73         db  0x04 ; '.'
0000000000008f74         db  0x4a ; 'J'
0000000000008f75         db  0x0e ; '.'
0000000000008f76         db  0x30 ; '0'
0000000000008f77         db  0x62 ; 'b'
0000000000008f78         db  0x0a ; '.'
0000000000008f79         db  0x0e ; '.'
0000000000008f7a         db  0x20 ; ' '
0000000000008f7b         db  0x4a ; 'J'
0000000000008f7c         db  0x0e ; '.'
0000000000008f7d         db  0x18 ; '.'
0000000000008f7e         db  0x41 ; 'A'
0000000000008f7f         db  0x0e ; '.'
0000000000008f80         db  0x10 ; '.'
0000000000008f81         db  0x42 ; 'B'
0000000000008f82         db  0x0e ; '.'
0000000000008f83         db  0x08 ; '.'
0000000000008f84         db  0x48 ; 'H'
0000000000008f85         db  0x0b ; '.'
0000000000008f86         db  0x4f ; 'O'
0000000000008f87         db  0x0e ; '.'
0000000000008f88         db  0x20 ; ' '
0000000000008f89         db  0x43 ; 'C'
0000000000008f8a         db  0x0e ; '.'
0000000000008f8b         db  0x18 ; '.'
0000000000008f8c         db  0x41 ; 'A'
0000000000008f8d         db  0x0e ; '.'
0000000000008f8e         db  0x10 ; '.'
0000000000008f8f         db  0x42 ; 'B'
0000000000008f90         db  0x0e ; '.'
0000000000008f91         db  0x08 ; '.'
0000000000008f92         db  0x00 ; '.'
0000000000008f93         db  0x00 ; '.'
0000000000008f94         db  0x00 ; '.'
0000000000008f95         db  0x00 ; '.'
0000000000008f96         db  0x00 ; '.'
0000000000008f97         db  0x00 ; '.'
0000000000008f98         dd         0x00000044                                  ; Length of the record
0000000000008f9c         dd         0x00000fec                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008fa0         db         0x00, 0xd7, 2 dup (0xff)                    ; begin 0x66a0
0000000000008fa4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x6705)
0000000000008fa8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fa9         db  0x42 ; 'B'
0000000000008faa         db  0x0e ; '.'
0000000000008fab         db  0x10 ; '.'
0000000000008fac         db  0x8f ; '.'
0000000000008fad         db  0x02 ; '.'
0000000000008fae         db  0x42 ; 'B'
0000000000008faf         db  0x0e ; '.'
0000000000008fb0         db  0x18 ; '.'
0000000000008fb1         db  0x8e ; '.'
0000000000008fb2         db  0x03 ; '.'
0000000000008fb3         db  0x45 ; 'E'
0000000000008fb4         db  0x0e ; '.'
0000000000008fb5         db  0x20 ; ' '
0000000000008fb6         db  0x8d ; '.'
0000000000008fb7         db  0x04 ; '.'
0000000000008fb8         db  0x42 ; 'B'
0000000000008fb9         db  0x0e ; '.'
0000000000008fba         db  0x28 ; '('
0000000000008fbb         db  0x8c ; '.'
0000000000008fbc         db  0x05 ; '.'
0000000000008fbd         db  0x48 ; 'H'
0000000000008fbe         db  0x0e ; '.'
0000000000008fbf         db  0x30 ; '0'
0000000000008fc0         db  0x86 ; '.'
0000000000008fc1         db  0x06 ; '.'
0000000000008fc2         db  0x48 ; 'H'
0000000000008fc3         db  0x0e ; '.'
0000000000008fc4         db  0x38 ; '8'
0000000000008fc5         db  0x83 ; '.'
0000000000008fc6         db  0x07 ; '.'
0000000000008fc7         db  0x4d ; 'M'
0000000000008fc8         db  0x0e ; '.'
0000000000008fc9         db  0x40 ; '@'
0000000000008fca         db  0x72 ; 'r'
0000000000008fcb         db  0x0e ; '.'
0000000000008fcc         db  0x38 ; '8'
0000000000008fcd         db  0x41 ; 'A'
0000000000008fce         db  0x0e ; '.'
0000000000008fcf         db  0x30 ; '0'
0000000000008fd0         db  0x41 ; 'A'
0000000000008fd1         db  0x0e ; '.'
0000000000008fd2         db  0x28 ; '('
0000000000008fd3         db  0x42 ; 'B'
0000000000008fd4         db  0x0e ; '.'
0000000000008fd5         db  0x20 ; ' '
0000000000008fd6         db  0x42 ; 'B'
0000000000008fd7         db  0x0e ; '.'
0000000000008fd8         db  0x18 ; '.'
0000000000008fd9         db  0x42 ; 'B'
0000000000008fda         db  0x0e ; '.'
0000000000008fdb         db  0x10 ; '.'
0000000000008fdc         db  0x42 ; 'B'
0000000000008fdd         db  0x0e ; '.'
0000000000008fde         db  0x08 ; '.'
0000000000008fdf         db  0x00 ; '.'
0000000000008fe0         dd         0x00000014                                  ; Length of the record
0000000000008fe4         dd         0x00001034                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000008fe8         db         0x28, 0xd7, 2 dup (0xff)                    ; begin 0x6710
0000000000008fec         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6712)
0000000000008ff0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ff1         align      8
0000000000008ff8         dd         0x00000010                                  ; Length of the record
0000000000008ffc         dd         0x0000104c                                  ; FDE: parent CIE at 0x7fb0 (FDE encoding = 0x1B)
0000000000009000         db         0x20, 0xd7, 2 dup (0xff)                    ; begin 0x6720
0000000000009004         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x672e)
0000000000009008         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009009         align      16


        ; Segment Segment 3
        ; Range: [0x2099b0; 0x20a278[ (2248 bytes)
        ; File offset : [39344; 41120[ (1776 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x2099b0; 0x2099b8[ (8 bytes)
        ; File offset : [39344; 39352[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
00000000002099b0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x2099b8; 0x2099c0[ (8 bytes)
        ; File offset : [39352; 39360[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
00000000002099b8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x2099c0; 0x209c18[ (600 bytes)
        ; File offset : [39360; 39960[ (600 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
00000000002099c0         db  0x98 ; '.'                                         ; DATA XREF=main+355
00000000002099c1         db  0x68 ; 'h'
00000000002099c2         db  0x00 ; '.'
00000000002099c3         db  0x00 ; '.'
00000000002099c4         db  0x00 ; '.'
00000000002099c5         db  0x00 ; '.'
00000000002099c6         db  0x00 ; '.'
00000000002099c7         db  0x00 ; '.'
00000000002099c8         db  0x00 ; '.'
00000000002099c9         db  0x00 ; '.'
00000000002099ca         db  0x00 ; '.'
00000000002099cb         db  0x00 ; '.'
00000000002099cc         db  0x00 ; '.'
00000000002099cd         db  0x00 ; '.'
00000000002099ce         db  0x00 ; '.'
00000000002099cf         db  0x00 ; '.'
00000000002099d0         db  0x00 ; '.'
00000000002099d1         db  0x00 ; '.'
00000000002099d2         db  0x00 ; '.'
00000000002099d3         db  0x00 ; '.'
00000000002099d4         db  0x00 ; '.'
00000000002099d5         db  0x00 ; '.'
00000000002099d6         db  0x00 ; '.'
00000000002099d7         db  0x00 ; '.'
00000000002099d8         db  0x63 ; 'c'
00000000002099d9         db  0x00 ; '.'
00000000002099da         db  0x00 ; '.'
00000000002099db         db  0x00 ; '.'
00000000002099dc         db  0x00 ; '.'
00000000002099dd         db  0x00 ; '.'
00000000002099de         db  0x00 ; '.'
00000000002099df         db  0x00 ; '.'
00000000002099e0         db  0x50 ; 'P'
00000000002099e1         db  0x68 ; 'h'
00000000002099e2         db  0x00 ; '.'
00000000002099e3         db  0x00 ; '.'
00000000002099e4         db  0x00 ; '.'
00000000002099e5         db  0x00 ; '.'
00000000002099e6         db  0x00 ; '.'
00000000002099e7         db  0x00 ; '.'
00000000002099e8         db  0x00 ; '.'
00000000002099e9         db  0x00 ; '.'
00000000002099ea         db  0x00 ; '.'
00000000002099eb         db  0x00 ; '.'
00000000002099ec         db  0x00 ; '.'
00000000002099ed         db  0x00 ; '.'
00000000002099ee         db  0x00 ; '.'
00000000002099ef         db  0x00 ; '.'
00000000002099f0         db  0x00 ; '.'
00000000002099f1         db  0x00 ; '.'
00000000002099f2         db  0x00 ; '.'
00000000002099f3         db  0x00 ; '.'
00000000002099f4         db  0x00 ; '.'
00000000002099f5         db  0x00 ; '.'
00000000002099f6         db  0x00 ; '.'
00000000002099f7         db  0x00 ; '.'
00000000002099f8         db  0x64 ; 'd'
00000000002099f9         db  0x00 ; '.'
00000000002099fa         db  0x00 ; '.'
00000000002099fb         db  0x00 ; '.'
00000000002099fc         db  0x00 ; '.'
00000000002099fd         db  0x00 ; '.'
00000000002099fe         db  0x00 ; '.'
00000000002099ff         db  0x00 ; '.'
0000000000209a00         db  0x4c ; 'L'
0000000000209a01         db  0x68 ; 'h'
0000000000209a02         db  0x00 ; '.'
0000000000209a03         db  0x00 ; '.'
0000000000209a04         db  0x00 ; '.'
0000000000209a05         db  0x00 ; '.'
0000000000209a06         db  0x00 ; '.'
0000000000209a07         db  0x00 ; '.'
0000000000209a08         db  0x02 ; '.'
0000000000209a09         db  0x00 ; '.'
0000000000209a0a         db  0x00 ; '.'
0000000000209a0b         db  0x00 ; '.'
0000000000209a0c         db  0x00 ; '.'
0000000000209a0d         db  0x00 ; '.'
0000000000209a0e         db  0x00 ; '.'
0000000000209a0f         db  0x00 ; '.'
0000000000209a10         db  0x00 ; '.'
0000000000209a11         db  0x00 ; '.'
0000000000209a12         db  0x00 ; '.'
0000000000209a13         db  0x00 ; '.'
0000000000209a14         db  0x00 ; '.'
0000000000209a15         db  0x00 ; '.'
0000000000209a16         db  0x00 ; '.'
0000000000209a17         db  0x00 ; '.'
0000000000209a18         db  0x44 ; 'D'
0000000000209a19         db  0x00 ; '.'
0000000000209a1a         db  0x00 ; '.'
0000000000209a1b         db  0x00 ; '.'
0000000000209a1c         db  0x00 ; '.'
0000000000209a1d         db  0x00 ; '.'
0000000000209a1e         db  0x00 ; '.'
0000000000209a1f         db  0x00 ; '.'
0000000000209a20         db  0x5b ; '['
0000000000209a21         db  0x68 ; 'h'
0000000000209a22         db  0x00 ; '.'
0000000000209a23         db  0x00 ; '.'
0000000000209a24         db  0x00 ; '.'
0000000000209a25         db  0x00 ; '.'
0000000000209a26         db  0x00 ; '.'
0000000000209a27         db  0x00 ; '.'
0000000000209a28         db  0x02 ; '.'
0000000000209a29         db  0x00 ; '.'
0000000000209a2a         db  0x00 ; '.'
0000000000209a2b         db  0x00 ; '.'
0000000000209a2c         db  0x00 ; '.'
0000000000209a2d         db  0x00 ; '.'
0000000000209a2e         db  0x00 ; '.'
0000000000209a2f         db  0x00 ; '.'
0000000000209a30         db  0x00 ; '.'
0000000000209a31         db  0x00 ; '.'
0000000000209a32         db  0x00 ; '.'
0000000000209a33         db  0x00 ; '.'
0000000000209a34         db  0x00 ; '.'
0000000000209a35         db  0x00 ; '.'
0000000000209a36         db  0x00 ; '.'
0000000000209a37         db  0x00 ; '.'
0000000000209a38         db  0x80 ; '.'
0000000000209a39         db  0x00 ; '.'
0000000000209a3a         db  0x00 ; '.'
0000000000209a3b         db  0x00 ; '.'
0000000000209a3c         db  0x00 ; '.'
0000000000209a3d         db  0x00 ; '.'
0000000000209a3e         db  0x00 ; '.'
0000000000209a3f         db  0x00 ; '.'
0000000000209a40         db  0x9e ; '.'
0000000000209a41         db  0x68 ; 'h'
0000000000209a42         db  0x00 ; '.'
0000000000209a43         db  0x00 ; '.'
0000000000209a44         db  0x00 ; '.'
0000000000209a45         db  0x00 ; '.'
0000000000209a46         db  0x00 ; '.'
0000000000209a47         db  0x00 ; '.'
0000000000209a48         db  0x00 ; '.'
0000000000209a49         db  0x00 ; '.'
0000000000209a4a         db  0x00 ; '.'
0000000000209a4b         db  0x00 ; '.'
0000000000209a4c         db  0x00 ; '.'
0000000000209a4d         db  0x00 ; '.'
0000000000209a4e         db  0x00 ; '.'
0000000000209a4f         db  0x00 ; '.'
0000000000209a50         db  0x00 ; '.'
0000000000209a51         db  0x00 ; '.'
0000000000209a52         db  0x00 ; '.'
0000000000209a53         db  0x00 ; '.'
0000000000209a54         db  0x00 ; '.'
0000000000209a55         db  0x00 ; '.'
0000000000209a56         db  0x00 ; '.'
0000000000209a57         db  0x00 ; '.'
0000000000209a58         db  0x69 ; 'i'
0000000000209a59         db  0x00 ; '.'
0000000000209a5a         db  0x00 ; '.'
0000000000209a5b         db  0x00 ; '.'
0000000000209a5c         db  0x00 ; '.'
0000000000209a5d         db  0x00 ; '.'
0000000000209a5e         db  0x00 ; '.'
0000000000209a5f         db  0x00 ; '.'
0000000000209a60         db  0xaa ; '.'
0000000000209a61         db  0x68 ; 'h'
0000000000209a62         db  0x00 ; '.'
0000000000209a63         db  0x00 ; '.'
0000000000209a64         db  0x00 ; '.'
0000000000209a65         db  0x00 ; '.'
0000000000209a66         db  0x00 ; '.'
0000000000209a67         db  0x00 ; '.'
0000000000209a68         db  0x00 ; '.'
0000000000209a69         db  0x00 ; '.'
0000000000209a6a         db  0x00 ; '.'
0000000000209a6b         db  0x00 ; '.'
0000000000209a6c         db  0x00 ; '.'
0000000000209a6d         db  0x00 ; '.'
0000000000209a6e         db  0x00 ; '.'
0000000000209a6f         db  0x00 ; '.'
0000000000209a70         db  0x00 ; '.'
0000000000209a71         db  0x00 ; '.'
0000000000209a72         db  0x00 ; '.'
0000000000209a73         db  0x00 ; '.'
0000000000209a74         db  0x00 ; '.'
0000000000209a75         db  0x00 ; '.'
0000000000209a76         db  0x00 ; '.'
0000000000209a77         db  0x00 ; '.'
0000000000209a78         db  0x75 ; 'u'
0000000000209a79         db  0x00 ; '.'
0000000000209a7a         db  0x00 ; '.'
0000000000209a7b         db  0x00 ; '.'
0000000000209a7c         db  0x00 ; '.'
0000000000209a7d         db  0x00 ; '.'
0000000000209a7e         db  0x00 ; '.'
0000000000209a7f         db  0x00 ; '.'
0000000000209a80         db  0xb1 ; '.'
0000000000209a81         db  0x68 ; 'h'
0000000000209a82         db  0x00 ; '.'
0000000000209a83         db  0x00 ; '.'
0000000000209a84         db  0x00 ; '.'
0000000000209a85         db  0x00 ; '.'
0000000000209a86         db  0x00 ; '.'
0000000000209a87         db  0x00 ; '.'
0000000000209a88         db  0x01 ; '.'
0000000000209a89         db  0x00 ; '.'
0000000000209a8a         db  0x00 ; '.'
0000000000209a8b         db  0x00 ; '.'
0000000000209a8c         db  0x00 ; '.'
0000000000209a8d         db  0x00 ; '.'
0000000000209a8e         db  0x00 ; '.'
0000000000209a8f         db  0x00 ; '.'
0000000000209a90         db  0x00 ; '.'
0000000000209a91         db  0x00 ; '.'
0000000000209a92         db  0x00 ; '.'
0000000000209a93         db  0x00 ; '.'
0000000000209a94         db  0x00 ; '.'
0000000000209a95         db  0x00 ; '.'
0000000000209a96         db  0x00 ; '.'
0000000000209a97         db  0x00 ; '.'
0000000000209a98         db  0x66 ; 'f'
0000000000209a99         db  0x00 ; '.'
0000000000209a9a         db  0x00 ; '.'
0000000000209a9b         db  0x00 ; '.'
0000000000209a9c         db  0x00 ; '.'
0000000000209a9d         db  0x00 ; '.'
0000000000209a9e         db  0x00 ; '.'
0000000000209a9f         db  0x00 ; '.'
0000000000209aa0         db  0xbd ; '.'
0000000000209aa1         db  0x68 ; 'h'
0000000000209aa2         db  0x00 ; '.'
0000000000209aa3         db  0x00 ; '.'
0000000000209aa4         db  0x00 ; '.'
0000000000209aa5         db  0x00 ; '.'
0000000000209aa6         db  0x00 ; '.'
0000000000209aa7         db  0x00 ; '.'
0000000000209aa8         db  0x01 ; '.'
0000000000209aa9         db  0x00 ; '.'
0000000000209aaa         db  0x00 ; '.'
0000000000209aab         db  0x00 ; '.'
0000000000209aac         db  0x00 ; '.'
0000000000209aad         db  0x00 ; '.'
0000000000209aae         db  0x00 ; '.'
0000000000209aaf         db  0x00 ; '.'
0000000000209ab0         db  0x00 ; '.'
0000000000209ab1         db  0x00 ; '.'
0000000000209ab2         db  0x00 ; '.'
0000000000209ab3         db  0x00 ; '.'
0000000000209ab4         db  0x00 ; '.'
0000000000209ab5         db  0x00 ; '.'
0000000000209ab6         db  0x00 ; '.'
0000000000209ab7         db  0x00 ; '.'
0000000000209ab8         db  0x73 ; 's'
0000000000209ab9         db  0x00 ; '.'
0000000000209aba         db  0x00 ; '.'
0000000000209abb         db  0x00 ; '.'
0000000000209abc         db  0x00 ; '.'
0000000000209abd         db  0x00 ; '.'
0000000000209abe         db  0x00 ; '.'
0000000000209abf         db  0x00 ; '.'
0000000000209ac0         db  0xc8 ; '.'
0000000000209ac1         db  0x68 ; 'h'
0000000000209ac2         db  0x00 ; '.'
0000000000209ac3         db  0x00 ; '.'
0000000000209ac4         db  0x00 ; '.'
0000000000209ac5         db  0x00 ; '.'
0000000000209ac6         db  0x00 ; '.'
0000000000209ac7         db  0x00 ; '.'
0000000000209ac8         db  0x01 ; '.'
0000000000209ac9         db  0x00 ; '.'
0000000000209aca         db  0x00 ; '.'
0000000000209acb         db  0x00 ; '.'
0000000000209acc         db  0x00 ; '.'
0000000000209acd         db  0x00 ; '.'
0000000000209ace         db  0x00 ; '.'
0000000000209acf         db  0x00 ; '.'
0000000000209ad0         db  0x00 ; '.'
0000000000209ad1         db  0x00 ; '.'
0000000000209ad2         db  0x00 ; '.'
0000000000209ad3         db  0x00 ; '.'
0000000000209ad4         db  0x00 ; '.'
0000000000209ad5         db  0x00 ; '.'
0000000000209ad6         db  0x00 ; '.'
0000000000209ad7         db  0x00 ; '.'
0000000000209ad8         db  0x77 ; 'w'
0000000000209ad9         db  0x00 ; '.'
0000000000209ada         db  0x00 ; '.'
0000000000209adb         db  0x00 ; '.'
0000000000209adc         db  0x00 ; '.'
0000000000209add         db  0x00 ; '.'
0000000000209ade         db  0x00 ; '.'
0000000000209adf         db  0x00 ; '.'
0000000000209ae0         db  0xd4 ; '.'
0000000000209ae1         db  0x68 ; 'h'
0000000000209ae2         db  0x00 ; '.'
0000000000209ae3         db  0x00 ; '.'
0000000000209ae4         db  0x00 ; '.'
0000000000209ae5         db  0x00 ; '.'
0000000000209ae6         db  0x00 ; '.'
0000000000209ae7         db  0x00 ; '.'
0000000000209ae8         db  0x00 ; '.'
0000000000209ae9         db  0x00 ; '.'
0000000000209aea         db  0x00 ; '.'
0000000000209aeb         db  0x00 ; '.'
0000000000209aec         db  0x00 ; '.'
0000000000209aed         db  0x00 ; '.'
0000000000209aee         db  0x00 ; '.'
0000000000209aef         db  0x00 ; '.'
0000000000209af0         db  0x00 ; '.'
0000000000209af1         db  0x00 ; '.'
0000000000209af2         db  0x00 ; '.'
0000000000209af3         db  0x00 ; '.'
0000000000209af4         db  0x00 ; '.'
0000000000209af5         db  0x00 ; '.'
0000000000209af6         db  0x00 ; '.'
0000000000209af7         db  0x00 ; '.'
0000000000209af8         db  0x7a ; 'z'
0000000000209af9         db  0x00 ; '.'
0000000000209afa         db  0x00 ; '.'
0000000000209afb         db  0x00 ; '.'
0000000000209afc         db  0x00 ; '.'
0000000000209afd         db  0x00 ; '.'
0000000000209afe         db  0x00 ; '.'
0000000000209aff         db  0x00 ; '.'
0000000000209b00         db  0xe4 ; '.'
0000000000209b01         db  0x68 ; 'h'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x00 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x7e ; '~'
0000000000209b19         db  0xff ; '.'
0000000000209b1a         db  0xff ; '.'
0000000000209b1b         db  0xff ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0xe9 ; '.'
0000000000209b21         db  0x68 ; 'h'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x7d ; '}'
0000000000209b39         db  0xff ; '.'
0000000000209b3a         db  0xff ; '.'
0000000000209b3b         db  0xff ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0x00 ; '.'
0000000000209b41         db  0x00 ; '.'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x00 ; '.'
0000000000209b59         db  0x00 ; '.'
0000000000209b5a         db  0x00 ; '.'
0000000000209b5b         db  0x00 ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
                     grouping_method_string:
0000000000209b60         db  0xf1 ; '.'                                         ; DATA XREF=main+1451
0000000000209b61         db  0x68 ; 'h'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0xf9 ; '.'
0000000000209b69         db  0x68 ; 'h'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0x00 ; '.'
0000000000209b71         db  0x69 ; 'i'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x09 ; '.'
0000000000209b79         db  0x69 ; 'i'
0000000000209b7a         db  0x00 ; '.'
0000000000209b7b         db  0x00 ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
0000000000209b80         db  0x00 ; '.'
0000000000209b81         db  0x00 ; '.'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x00 ; '.'
0000000000209b89         db  0x00 ; '.'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x00 ; '.'
0000000000209b91         db  0x00 ; '.'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0x00 ; '.'
0000000000209b99         db  0x00 ; '.'
0000000000209b9a         db  0x00 ; '.'
0000000000209b9b         db  0x00 ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
                     delimit_method_string:
0000000000209ba0         db  0x0e ; '.'                                         ; DATA XREF=main+1369
0000000000209ba1         db  0x69 ; 'i'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0xf1 ; '.'
0000000000209ba9         db  0x68 ; 'h'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0x00 ; '.'
0000000000209bb1         db  0x69 ; 'i'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'
0000000000209bb8         db  0x00 ; '.'
0000000000209bb9         db  0x00 ; '.'
0000000000209bba         db  0x00 ; '.'
0000000000209bbb         db  0x00 ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
                     quoting_style_args:
0000000000209bc0         db  0x89 ; '.'
0000000000209bc1         db  0x72 ; 'r'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0x91 ; '.'
0000000000209bc9         db  0x72 ; 'r'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0x97 ; '.'
0000000000209bd1         db  0x72 ; 'r'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'
0000000000209bd8         db  0xa4 ; '.'
0000000000209bd9         db  0x72 ; 'r'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
0000000000209be0         db  0xb1 ; '.'
0000000000209be1         db  0x72 ; 'r'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0xc5 ; '.'
0000000000209be9         db  0x72 ; 'r'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0xc7 ; '.'
0000000000209bf1         db  0x72 ; 'r'
0000000000209bf2         db  0x00 ; '.'
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0xaa ; '.'
0000000000209bf9         db  0x72 ; 'r'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0x1a ; '.'
0000000000209c01         db  0x68 ; 'h'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0xcf ; '.'
0000000000209c09         db  0x72 ; 'r'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0x00 ; '.'
0000000000209c11         db  0x00 ; '.'
0000000000209c12         db  0x00 ; '.'
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209c18; 0x209e08[ (496 bytes)
        ; File offset : [39960; 40456[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209c18         db  0x01 ; '.'
0000000000209c19         db  0x00 ; '.'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0x01 ; '.'
0000000000209c21         db  0x00 ; '.'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0x0c ; '.'
0000000000209c29         db  0x00 ; '.'
0000000000209c2a         db  0x00 ; '.'
0000000000209c2b         db  0x00 ; '.'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0x18 ; '.'
0000000000209c31         db  0x17 ; '.'
0000000000209c32         db  0x00 ; '.'
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'
0000000000209c38         db  0x0d ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x30 ; '0'
0000000000209c41         db  0x67 ; 'g'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0x19 ; '.'
0000000000209c49         db  0x00 ; '.'
0000000000209c4a         db  0x00 ; '.'
0000000000209c4b         db  0x00 ; '.'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0xb0 ; '.'
0000000000209c51         db  0x99 ; '.'
0000000000209c52         db  0x20 ; ' '
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x1b ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0x08 ; '.'
0000000000209c61         db  0x00 ; '.'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x1a ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0xb8 ; '.'
0000000000209c71         db  0x99 ; '.'
0000000000209c72         db  0x20 ; ' '
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x1c ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x08 ; '.'
0000000000209c81         db  0x00 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0xf5 ; '.'
0000000000209c89         db  0xfe ; '.'
0000000000209c8a         db  0xff ; '.'
0000000000209c8b         db  0x6f ; 'o'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0x98 ; '.'
0000000000209c91         db  0x02 ; '.'
0000000000209c92         db  0x00 ; '.'
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x05 ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0x70 ; 'p'
0000000000209ca1         db  0x09 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0x06 ; '.'
0000000000209ca9         db  0x00 ; '.'
0000000000209caa         db  0x00 ; '.'
0000000000209cab         db  0x00 ; '.'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0xe0 ; '.'
0000000000209cb1         db  0x02 ; '.'
0000000000209cb2         db  0x00 ; '.'
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x0a ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0x11 ; '.'
0000000000209cc1         db  0x03 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x0b ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0x18 ; '.'
0000000000209cd1         db  0x00 ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x15 ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0x00 ; '.'
0000000000209ce1         db  0x00 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x03 ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0x08 ; '.'
0000000000209cf1         db  0x9e ; '.'
0000000000209cf2         db  0x20 ; ' '
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x02 ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0x28 ; '('
0000000000209d01         db  0x05 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0x14 ; '.'
0000000000209d09         db  0x00 ; '.'
0000000000209d0a         db  0x00 ; '.'
0000000000209d0b         db  0x00 ; '.'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x07 ; '.'
0000000000209d11         db  0x00 ; '.'
0000000000209d12         db  0x00 ; '.'
0000000000209d13         db  0x00 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0x17 ; '.'
0000000000209d19         db  0x00 ; '.'
0000000000209d1a         db  0x00 ; '.'
0000000000209d1b         db  0x00 ; '.'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0xf0 ; '.'
0000000000209d21         db  0x11 ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0x07 ; '.'
0000000000209d29         db  0x00 ; '.'
0000000000209d2a         db  0x00 ; '.'
0000000000209d2b         db  0x00 ; '.'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0x70 ; 'p'
0000000000209d31         db  0x0d ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x00 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0x08 ; '.'
0000000000209d39         db  0x00 ; '.'
0000000000209d3a         db  0x00 ; '.'
0000000000209d3b         db  0x00 ; '.'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0x80 ; '.'
0000000000209d41         db  0x04 ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0x09 ; '.'
0000000000209d49         db  0x00 ; '.'
0000000000209d4a         db  0x00 ; '.'
0000000000209d4b         db  0x00 ; '.'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0x18 ; '.'
0000000000209d51         db  0x00 ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0x1e ; '.'
0000000000209d59         db  0x00 ; '.'
0000000000209d5a         db  0x00 ; '.'
0000000000209d5b         db  0x00 ; '.'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0x08 ; '.'
0000000000209d61         db  0x00 ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0xfb ; '.'
0000000000209d69         db  0xff ; '.'
0000000000209d6a         db  0xff ; '.'
0000000000209d6b         db  0x6f ; 'o'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x01 ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x08 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0xfe ; '.'
0000000000209d79         db  0xff ; '.'
0000000000209d7a         db  0xff ; '.'
0000000000209d7b         db  0x6f ; 'o'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x10 ; '.'
0000000000209d81         db  0x0d ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0xff ; '.'
0000000000209d89         db  0xff ; '.'
0000000000209d8a         db  0xff ; '.'
0000000000209d8b         db  0x6f ; 'o'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x01 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x00 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0xf0 ; '.'
0000000000209d99         db  0xff ; '.'
0000000000209d9a         db  0xff ; '.'
0000000000209d9b         db  0x6f ; 'o'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0x82 ; '.'
0000000000209da1         db  0x0c ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'
0000000000209da8         db  0xf9 ; '.'
0000000000209da9         db  0xff ; '.'
0000000000209daa         db  0xff ; '.'
0000000000209dab         db  0x6f ; 'o'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
0000000000209db0         db  0x24 ; '$'
0000000000209db1         db  0x00 ; '.'
0000000000209db2         db  0x00 ; '.'
0000000000209db3         db  0x00 ; '.'
0000000000209db4         db  0x00 ; '.'
0000000000209db5         db  0x00 ; '.'
0000000000209db6         db  0x00 ; '.'
0000000000209db7         db  0x00 ; '.'
0000000000209db8         db  0x00 ; '.'
0000000000209db9         db  0x00 ; '.'
0000000000209dba         db  0x00 ; '.'
0000000000209dbb         db  0x00 ; '.'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
0000000000209dc0         db  0x00 ; '.'
0000000000209dc1         db  0x00 ; '.'
0000000000209dc2         db  0x00 ; '.'
0000000000209dc3         db  0x00 ; '.'
0000000000209dc4         db  0x00 ; '.'
0000000000209dc5         db  0x00 ; '.'
0000000000209dc6         db  0x00 ; '.'
0000000000209dc7         db  0x00 ; '.'
0000000000209dc8         db  0x00 ; '.'
0000000000209dc9         db  0x00 ; '.'
0000000000209dca         db  0x00 ; '.'
0000000000209dcb         db  0x00 ; '.'
0000000000209dcc         db  0x00 ; '.'
0000000000209dcd         db  0x00 ; '.'
0000000000209dce         db  0x00 ; '.'
0000000000209dcf         db  0x00 ; '.'
0000000000209dd0         db  0x00 ; '.'
0000000000209dd1         db  0x00 ; '.'
0000000000209dd2         db  0x00 ; '.'
0000000000209dd3         db  0x00 ; '.'
0000000000209dd4         db  0x00 ; '.'
0000000000209dd5         db  0x00 ; '.'
0000000000209dd6         db  0x00 ; '.'
0000000000209dd7         db  0x00 ; '.'
0000000000209dd8         db  0x00 ; '.'
0000000000209dd9         db  0x00 ; '.'
0000000000209dda         db  0x00 ; '.'
0000000000209ddb         db  0x00 ; '.'
0000000000209ddc         db  0x00 ; '.'
0000000000209ddd         db  0x00 ; '.'
0000000000209dde         db  0x00 ; '.'
0000000000209ddf         db  0x00 ; '.'
0000000000209de0         db  0x00 ; '.'
0000000000209de1         db  0x00 ; '.'
0000000000209de2         db  0x00 ; '.'
0000000000209de3         db  0x00 ; '.'
0000000000209de4         db  0x00 ; '.'
0000000000209de5         db  0x00 ; '.'
0000000000209de6         db  0x00 ; '.'
0000000000209de7         db  0x00 ; '.'
0000000000209de8         db  0x00 ; '.'
0000000000209de9         db  0x00 ; '.'
0000000000209dea         db  0x00 ; '.'
0000000000209deb         db  0x00 ; '.'
0000000000209dec         db  0x00 ; '.'
0000000000209ded         db  0x00 ; '.'
0000000000209dee         db  0x00 ; '.'
0000000000209def         db  0x00 ; '.'
0000000000209df0         db  0x00 ; '.'
0000000000209df1         db  0x00 ; '.'
0000000000209df2         db  0x00 ; '.'
0000000000209df3         db  0x00 ; '.'
0000000000209df4         db  0x00 ; '.'
0000000000209df5         db  0x00 ; '.'
0000000000209df6         db  0x00 ; '.'
0000000000209df7         db  0x00 ; '.'
0000000000209df8         db  0x00 ; '.'
0000000000209df9         db  0x00 ; '.'
0000000000209dfa         db  0x00 ; '.'
0000000000209dfb         db  0x00 ; '.'
0000000000209dfc         db  0x00 ; '.'
0000000000209dfd         db  0x00 ; '.'
0000000000209dfe         db  0x00 ; '.'
0000000000209dff         db  0x00 ; '.'
0000000000209e00         db  0x00 ; '.'
0000000000209e01         db  0x00 ; '.'
0000000000209e02         db  0x00 ; '.'
0000000000209e03         db  0x00 ; '.'
0000000000209e04         db  0x00 ; '.'
0000000000209e05         db  0x00 ; '.'
0000000000209e06         db  0x00 ; '.'
0000000000209e07         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209e08; 0x20a000[ (504 bytes)
        ; File offset : [40456; 40960[ (504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209e08         db  0x18 ; '.'
0000000000209e09         db  0x9c ; '.'
0000000000209e0a         db  0x20 ; ' '
0000000000209e0b         db  0x00 ; '.'
0000000000209e0c         db  0x00 ; '.'
0000000000209e0d         db  0x00 ; '.'
0000000000209e0e         db  0x00 ; '.'
0000000000209e0f         db  0x00 ; '.'
                     qword_209e10:
0000000000209e10         dq         0x0000000000000000                          ; DATA XREF=0x1730
0000000000209e18         db  0x00 ; '.'                                         ; DATA XREF=0x1736
0000000000209e19         db  0x00 ; '.'
0000000000209e1a         db  0x00 ; '.'
0000000000209e1b         db  0x00 ; '.'
0000000000209e1c         db  0x00 ; '.'
0000000000209e1d         db  0x00 ; '.'
0000000000209e1e         db  0x00 ; '.'
0000000000209e1f         db  0x00 ; '.'
                     __ctype_toupper_loc@GOT:        // __ctype_toupper_loc
0000000000209e20         dq         0x000000000020a280                          ; DATA XREF=j___ctype_toupper_loc
                     __uflow@GOT:        // __uflow
0000000000209e28         dq         0x000000000020a288                          ; DATA XREF=j___uflow
                     getenv@GOT:        // getenv
0000000000209e30         dq         0x000000000020a290                          ; DATA XREF=j_getenv
                     free@GOT:        // free
0000000000209e38         dq         0x000000000020a298                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000209e40         dq         0x000000000020a2a0                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209e48         dq         0x000000000020a2a8                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000209e50         dq         0x000000000020a2b0                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000209e58         dq         0x000000000020a2c0                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000209e60         dq         0x000000000020a2c8                          ; DATA XREF=j___fpending
                     textdomain@GOT:        // textdomain
0000000000209e68         dq         0x000000000020a2d0                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000209e70         dq         0x000000000020a2d8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e78         dq         0x000000000020a2e0                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000209e80         dq         0x000000000020a2e8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209e88         dq         0x000000000020a2f0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209e90         dq         0x000000000020a2f8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209e98         dq         0x000000000020a300                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000209ea0         dq         0x000000000020a308                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209ea8         dq         0x000000000020a310                          ; DATA XREF=j_mbrtowc
                     dup2@GOT:        // dup2
0000000000209eb0         dq         0x000000000020a318                          ; DATA XREF=j_dup2
                     strchr@GOT:        // strchr
0000000000209eb8         dq         0x000000000020a320                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
0000000000209ec0         dq         0x000000000020a328                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000209ec8         dq         0x000000000020a330                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000209ed0         dq         0x000000000020a338                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000209ed8         dq         0x000000000020a340                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000209ee0         dq         0x000000000020a348                          ; DATA XREF=j_memset
                     freopen@GOT:        // freopen
0000000000209ee8         dq         0x000000000020a350                          ; DATA XREF=j_freopen
                     close@GOT:        // close
0000000000209ef0         dq         0x000000000020a358                          ; DATA XREF=j_close
                     posix_fadvise@GOT:        // posix_fadvise
0000000000209ef8         dq         0x000000000020a360                          ; DATA XREF=j_posix_fadvise
                     memcmp@GOT:        // memcmp
0000000000209f00         dq         0x000000000020a370                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209f08         dq         0x000000000020a378                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209f10         dq         0x000000000020a380                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000209f18         dq         0x000000000020a388                          ; DATA XREF=j_strcmp
                     strtol@GOT:        // strtol
0000000000209f20         dq         0x000000000020a398                          ; DATA XREF=j_strtol
                     memcpy@GOT:        // memcpy
0000000000209f28         dq         0x000000000020a3a0                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000209f30         dq         0x000000000020a3a8                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000209f38         dq         0x000000000020a3b0                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000209f40         dq         0x000000000020a3b8                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209f48         dq         0x000000000020a3c0                          ; DATA XREF=j_nl_langinfo
                     strcoll@GOT:        // strcoll
0000000000209f50         dq         0x000000000020a3c8                          ; DATA XREF=j_strcoll
                     __freading@GOT:        // __freading
0000000000209f58         dq         0x000000000020a3d0                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000209f60         dq         0x000000000020a3d8                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000209f68         dq         0x000000000020a3e0                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000209f70         dq         0x000000000020a3e8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f78         dq         0x000000000020a3f0                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000209f80         dq         0x000000000020a3f8                          ; DATA XREF=j_error
                     open@GOT:        // open
0000000000209f88         dq         0x000000000020a400                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000209f90         dq         0x000000000020a408                          ; DATA XREF=j_fseeko
                     strtoul@GOT:        // strtoul
0000000000209f98         dq         0x000000000020a410                          ; DATA XREF=j_strtoul
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209fa0         dq         0x000000000020a418                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000209fa8         dq         0x000000000020a420                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209fb0         dq         0x000000000020a428                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209fb8         dq         0x000000000020a430                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000209fc0         dq         0x000000000020a440                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fc8         dq         0x000000000020a448                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fd0         dq         0x000000000020a458                          ; DATA XREF=j___ctype_b_loc
                     qword_209fd8:
0000000000209fd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fe1         db  0x00 ; '.'
0000000000209fe2         db  0x00 ; '.'
0000000000209fe3         db  0x00 ; '.'
0000000000209fe4         db  0x00 ; '.'
0000000000209fe5         db  0x00 ; '.'
0000000000209fe6         db  0x00 ; '.'
0000000000209fe7         db  0x00 ; '.'
                     qword_209fe8:
0000000000209fe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209ff0:
0000000000209ff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209ff8:
0000000000209ff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_209ff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x20a000; 0x20a0a0[ (160 bytes)
        ; File offset : [40960; 41120[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         align      8
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020a010         dq         0x000000000000719c                          ; "8.31", DATA XREF=main+1840
                     argmatch_die:
000000000020a018         dq         0x0000000000002de0                          ; DATA XREF=main+1362, main+1444
                     exit_failure:
000000000020a020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23, collate_error+160
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
000000000020a058         db  0x00 ; '.'
000000000020a059         db  0x00 ; '.'
000000000020a05a         db  0x00 ; '.'
000000000020a05b         db  0x00 ; '.'
000000000020a05c         db  0x00 ; '.'
000000000020a05d         db  0x00 ; '.'
000000000020a05e         db  0x00 ; '.'
000000000020a05f         db  0x00 ; '.'
000000000020a060         db  0x00 ; '.'
000000000020a061         db  0x00 ; '.'
000000000020a062         db  0x00 ; '.'
000000000020a063         db  0x00 ; '.'
000000000020a064         db  0x00 ; '.'
000000000020a065         db  0x00 ; '.'
000000000020a066         db  0x00 ; '.'
000000000020a067         db  0x00 ; '.'
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
000000000020a070         db  0x00 ; '.'
000000000020a071         db  0x00 ; '.'
000000000020a072         db  0x00 ; '.'
000000000020a073         db  0x00 ; '.'
000000000020a074         db  0x00 ; '.'
000000000020a075         db  0x00 ; '.'
000000000020a076         db  0x00 ; '.'
000000000020a077         db  0x00 ; '.'
                     nslots:
000000000020a078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a07c         db  0x00 ; '.'
000000000020a07d         db  0x00 ; '.'
000000000020a07e         db  0x00 ; '.'
000000000020a07f         db  0x00 ; '.'
                     slotvec:
000000000020a080         dq         0x000000000020a090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a088         db  0x00 ; '.'
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x00 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
                     slotvec0:
000000000020a090         dq         1.26481e-321, 1.05653e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20a0a0; 0x20a278[ (472 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a0a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x00 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a0a8         db  0x00 ; '.'                                         ; DATA XREF=main+762, main+1677, main+1833, main+2164, main+2403, main+2473, writeline+47, usage+125, usage+162, usage+199, usage+236
000000000020a0a9         db  0x00 ; '.'
000000000020a0aa         db  0x00 ; '.'
000000000020a0ab         db  0x00 ; '.'
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
000000000020a0b0         db  0x00 ; '.'                                         ; DATA XREF=main+793, main+873, main+946, main+1115, main+1166, main+1901, main+2024, main+2228
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x00 ; '.'
000000000020a0b5         db  0x00 ; '.'
000000000020a0b6         db  0x00 ; '.'
000000000020a0b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a0b8         db  0x00 ; '.'                                         ; DATA XREF=main+293, main+327
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x00 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020a0c0         db  0x00 ; '.'                                         ; DATA XREF=main+439, main+569, main+1258, main+1301, main+1332, main+1428, main+2461, main+2519
000000000020a0c1         db  0x00 ; '.'
000000000020a0c2         db  0x00 ; '.'
000000000020a0c3         db  0x00 ; '.'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a0c8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a0c9         db  0x00 ; '.'
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x00 ; '.'
000000000020a0cd         db  0x00 ; '.'
000000000020a0ce         db  0x00 ; '.'
000000000020a0cf         db  0x00 ; '.'
000000000020a0d0         db  0x00 ; '.'
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x00 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
000000000020a0d8         db  0x00 ; '.'
000000000020a0d9         db  0x00 ; '.'
000000000020a0da         db  0x00 ; '.'
000000000020a0db         db  0x00 ; '.'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, argmatch_valid+37, argmatch_valid+95, argmatch_valid+174, argmatch_valid+216, close_stdout+44, set_program_name+125
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x00 ; '.'
000000000020a0e5         db  0x00 ; '.'
000000000020a0e6         db  0x00 ; '.'
000000000020a0e7         db  0x00 ; '.'
                     completed.7697:
000000000020a0e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020a0e9         db  0x00 ; '.'
000000000020a0ea         db  0x00 ; '.'
000000000020a0eb         db  0x00 ; '.'
000000000020a0ec         db  0x00 ; '.'
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
                     grouping:
000000000020a0f0         db  0x00 ; '.'                                         ; DATA XREF=main+643, main+1493, main+2004, main+2104, main+2330, main+2374
000000000020a0f1         db  0x00 ; '.'
000000000020a0f2         db  0x00 ; '.'
000000000020a0f3         db  0x00 ; '.'
                     delimit_groups:
000000000020a0f4         db  0x00 ; '.'                                         ; DATA XREF=main+247, main+1060, main+1417, main+1616, main+1983
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
                     ignore_case:
000000000020a0f8         db  0x00 ; '.'                                         ; DATA XREF=main+1755, different+25
                     output_later_repeated:
000000000020a0f9         db  0x00 ; '.'                                         ; DATA XREF=main+230, main+1346, main+1517, main+1562, writeline+88
                     output_first_repeated:
000000000020a0fa         db  0x00 ; '.'                                         ; DATA XREF=main+216, main+845, main+1719, writeline+69
                     output_unique:
000000000020a0fb         db  0x00 ; '.'                                         ; DATA XREF=main+223, main+836, main+1339, main+1737, writeline+5
                     countmode:
000000000020a0fc         db  0x00 ; '.'                                         ; DATA XREF=main+237, main+622, main+665, main+856, main+1504, writeline+19
000000000020a0fd         db  0x00 ; '.'
000000000020a0fe         db  0x00 ; '.'
000000000020a0ff         db  0x00 ; '.'
                     check_chars:
000000000020a100         db  0x00 ; '.'                                         ; DATA XREF=main+209, main+588, different+4
000000000020a101         db  0x00 ; '.'
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x00 ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
                     skip_chars:
000000000020a108         db  0x00 ; '.'                                         ; DATA XREF=main+187, main+1320, main+2554, find_field.isra.2+155, find_field.isra.2+162
000000000020a109         db  0x00 ; '.'
000000000020a10a         db  0x00 ; '.'
000000000020a10b         db  0x00 ; '.'
000000000020a10c         db  0x00 ; '.'
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
                     skip_fields:
000000000020a110         db  0x00 ; '.'                                         ; DATA XREF=main+198, main+466, main+1778, main+1817, main+2354, find_field.isra.2+7
000000000020a111         db  0x00 ; '.'
000000000020a112         db  0x00 ; '.'
000000000020a113         db  0x00 ; '.'
000000000020a114         db  0x00 ; '.'
000000000020a115         db  0x00 ; '.'
000000000020a116         db  0x00 ; '.'
000000000020a117         db  0x00 ; '.'
                     hard_LC_COLLATE:
000000000020a118         db  0x00 ; '.'                                         ; DATA XREF=main+164, different+56
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x00 ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a120         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a121         db  0x00 ; '.'
000000000020a122         db  0x00 ; '.'
000000000020a123         db  0x00 ; '.'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
                     file_name:
000000000020a128         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x00 ; '.'
000000000020a12d         db  0x00 ; '.'
000000000020a12e         db  0x00 ; '.'
000000000020a12f         db  0x00 ; '.'
                     program_name:
000000000020a130         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x00 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
000000000020a138         db  0x00 ; '.'
000000000020a139         db  0x00 ; '.'
000000000020a13a         db  0x00 ; '.'
000000000020a13b         db  0x00 ; '.'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
                     slot0:
000000000020a140         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x00 ; '.'
000000000020a145         db  0x00 ; '.'
000000000020a146         db  0x00 ; '.'
000000000020a147         db  0x00 ; '.'
000000000020a148         db  0x00 ; '.'
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x00 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
000000000020a150         db  0x00 ; '.'
000000000020a151         db  0x00 ; '.'
000000000020a152         db  0x00 ; '.'
000000000020a153         db  0x00 ; '.'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x00 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x00 ; '.'
000000000020a15d         db  0x00 ; '.'
000000000020a15e         db  0x00 ; '.'
000000000020a15f         db  0x00 ; '.'
000000000020a160         db  0x00 ; '.'
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x00 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x00 ; '.'
000000000020a169         db  0x00 ; '.'
000000000020a16a         db  0x00 ; '.'
000000000020a16b         db  0x00 ; '.'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x00 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x00 ; '.'
000000000020a175         db  0x00 ; '.'
000000000020a176         db  0x00 ; '.'
000000000020a177         db  0x00 ; '.'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x00 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x00 ; '.'
000000000020a181         db  0x00 ; '.'
000000000020a182         db  0x00 ; '.'
000000000020a183         db  0x00 ; '.'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x00 ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x00 ; '.'
000000000020a18d         db  0x00 ; '.'
000000000020a18e         db  0x00 ; '.'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x00 ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x00 ; '.'
000000000020a199         db  0x00 ; '.'
000000000020a19a         db  0x00 ; '.'
000000000020a19b         db  0x00 ; '.'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x00 ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x00 ; '.'
000000000020a1a5         db  0x00 ; '.'
000000000020a1a6         db  0x00 ; '.'
000000000020a1a7         db  0x00 ; '.'
000000000020a1a8         db  0x00 ; '.'
000000000020a1a9         db  0x00 ; '.'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x00 ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x00 ; '.'
000000000020a1b1         db  0x00 ; '.'
000000000020a1b2         db  0x00 ; '.'
000000000020a1b3         db  0x00 ; '.'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x00 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x00 ; '.'
000000000020a1bd         db  0x00 ; '.'
000000000020a1be         db  0x00 ; '.'
000000000020a1bf         db  0x00 ; '.'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x00 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x00 ; '.'
000000000020a1c9         db  0x00 ; '.'
000000000020a1ca         db  0x00 ; '.'
000000000020a1cb         db  0x00 ; '.'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x00 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x00 ; '.'
000000000020a1d5         db  0x00 ; '.'
000000000020a1d6         db  0x00 ; '.'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x00 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
000000000020a1e0         db  0x00 ; '.'
000000000020a1e1         db  0x00 ; '.'
000000000020a1e2         db  0x00 ; '.'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x00 ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x00 ; '.'
000000000020a1ed         db  0x00 ; '.'
000000000020a1ee         db  0x00 ; '.'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x00 ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x00 ; '.'
000000000020a1f9         db  0x00 ; '.'
000000000020a1fa         db  0x00 ; '.'
000000000020a1fb         db  0x00 ; '.'
000000000020a1fc         db  0x00 ; '.'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
000000000020a200         db  0x00 ; '.'
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x00 ; '.'
000000000020a205         db  0x00 ; '.'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x00 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
000000000020a210         db  0x00 ; '.'
000000000020a211         db  0x00 ; '.'
000000000020a212         db  0x00 ; '.'
000000000020a213         db  0x00 ; '.'
000000000020a214         db  0x00 ; '.'
000000000020a215         db  0x00 ; '.'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'
000000000020a218         db  0x00 ; '.'
000000000020a219         db  0x00 ; '.'
000000000020a21a         db  0x00 ; '.'
000000000020a21b         db  0x00 ; '.'
000000000020a21c         db  0x00 ; '.'
000000000020a21d         db  0x00 ; '.'
000000000020a21e         db  0x00 ; '.'
000000000020a21f         db  0x00 ; '.'
000000000020a220         db  0x00 ; '.'
000000000020a221         db  0x00 ; '.'
000000000020a222         db  0x00 ; '.'
000000000020a223         db  0x00 ; '.'
000000000020a224         db  0x00 ; '.'
000000000020a225         db  0x00 ; '.'
000000000020a226         db  0x00 ; '.'
000000000020a227         db  0x00 ; '.'
000000000020a228         db  0x00 ; '.'
000000000020a229         db  0x00 ; '.'
000000000020a22a         db  0x00 ; '.'
000000000020a22b         db  0x00 ; '.'
000000000020a22c         db  0x00 ; '.'
000000000020a22d         db  0x00 ; '.'
000000000020a22e         db  0x00 ; '.'
000000000020a22f         db  0x00 ; '.'
000000000020a230         db  0x00 ; '.'
000000000020a231         db  0x00 ; '.'
000000000020a232         db  0x00 ; '.'
000000000020a233         db  0x00 ; '.'
000000000020a234         db  0x00 ; '.'
000000000020a235         db  0x00 ; '.'
000000000020a236         db  0x00 ; '.'
000000000020a237         db  0x00 ; '.'
000000000020a238         db  0x00 ; '.'
000000000020a239         db  0x00 ; '.'
000000000020a23a         db  0x00 ; '.'
000000000020a23b         db  0x00 ; '.'
000000000020a23c         db  0x00 ; '.'
000000000020a23d         db  0x00 ; '.'
000000000020a23e         db  0x00 ; '.'
000000000020a23f         db  0x00 ; '.'
                     default_quoting_options:
000000000020a240         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a241         db  0x00 ; '.'
000000000020a242         db  0x00 ; '.'
000000000020a243         db  0x00 ; '.'
000000000020a244         db  0x00 ; '.'
000000000020a245         db  0x00 ; '.'
000000000020a246         db  0x00 ; '.'
000000000020a247         db  0x00 ; '.'
000000000020a248         db  0x00 ; '.'
000000000020a249         db  0x00 ; '.'
000000000020a24a         db  0x00 ; '.'
000000000020a24b         db  0x00 ; '.'
000000000020a24c         db  0x00 ; '.'
000000000020a24d         db  0x00 ; '.'
000000000020a24e         db  0x00 ; '.'
000000000020a24f         db  0x00 ; '.'
000000000020a250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a251         db  0x00 ; '.'
000000000020a252         db  0x00 ; '.'
000000000020a253         db  0x00 ; '.'
000000000020a254         db  0x00 ; '.'
000000000020a255         db  0x00 ; '.'
000000000020a256         db  0x00 ; '.'
000000000020a257         db  0x00 ; '.'
000000000020a258         db  0x00 ; '.'
000000000020a259         db  0x00 ; '.'
000000000020a25a         db  0x00 ; '.'
000000000020a25b         db  0x00 ; '.'
000000000020a25c         db  0x00 ; '.'
000000000020a25d         db  0x00 ; '.'
000000000020a25e         db  0x00 ; '.'
000000000020a25f         db  0x00 ; '.'
000000000020a260         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a261         db  0x00 ; '.'
000000000020a262         db  0x00 ; '.'
000000000020a263         db  0x00 ; '.'
000000000020a264         db  0x00 ; '.'
000000000020a265         db  0x00 ; '.'
000000000020a266         db  0x00 ; '.'
000000000020a267         db  0x00 ; '.'
000000000020a268         db  0x00 ; '.'
000000000020a269         db  0x00 ; '.'
000000000020a26a         db  0x00 ; '.'
000000000020a26b         db  0x00 ; '.'
000000000020a26c         db  0x00 ; '.'
000000000020a26d         db  0x00 ; '.'
000000000020a26e         db  0x00 ; '.'
000000000020a26f         db  0x00 ; '.'
                     qword_20a270:
000000000020a270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a271         db  0x00 ; '.'
000000000020a272         db  0x00 ; '.'
000000000020a273         db  0x00 ; '.'
000000000020a274         db  0x00 ; '.'
000000000020a275         db  0x00 ; '.'
000000000020a276         db  0x00 ; '.'
000000000020a277         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a280; 0x20a640[ (960 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a280; 0x4148c0[ (2139712 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __ctype_toupper_loc:
000000000020a280         extern function code                                   ; DATA XREF=__ctype_toupper_loc@GOT
                     __uflow:
000000000020a288         extern function code                                   ; DATA XREF=__uflow@GOT
                     getenv:
000000000020a290         extern function code                                   ; DATA XREF=getenv@GOT
                     free:
000000000020a298         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020a2a0         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a2a8         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020a2b0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a2b8         extern function code
                     _exit:
000000000020a2c0         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020a2c8         extern function code                                   ; DATA XREF=__fpending@GOT
                     textdomain:
000000000020a2d0         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020a2d8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020a2e0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020a2e8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a2f0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a2f8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020a300         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020a308         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a310         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     dup2:
000000000020a318         extern function code                                   ; DATA XREF=dup2@GOT
                     strchr:
000000000020a320         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
000000000020a328         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020a330         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020a338         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020a340         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020a348         extern function code                                   ; DATA XREF=memset@GOT
                     freopen:
000000000020a350         extern function code                                   ; DATA XREF=freopen@GOT
                     close:
000000000020a358         extern function code                                   ; DATA XREF=close@GOT
                     posix_fadvise:
000000000020a360         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     __libc_start_main:
000000000020a368         extern function code
                     memcmp:
000000000020a370         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a378         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a380         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020a388         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
000000000020a390         extern function code
                     strtol:
000000000020a398         extern function code                                   ; DATA XREF=strtol@GOT
                     memcpy:
000000000020a3a0         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020a3a8         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
000000000020a3b0         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020a3b8         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a3c0         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     strcoll:
000000000020a3c8         extern function code                                   ; DATA XREF=strcoll@GOT
                     __freading:
000000000020a3d0         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
000000000020a3d8         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
000000000020a3e0         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020a3e8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a3f0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
000000000020a3f8         extern function code                                   ; DATA XREF=error@GOT
                     open:
000000000020a400         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000020a408         extern function code                                   ; DATA XREF=fseeko@GOT
                     strtoul:
000000000020a410         extern function code                                   ; DATA XREF=strtoul@GOT
                     __cxa_atexit:
000000000020a418         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020a420         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a428         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a430         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020a438         extern function code
                     mbsinit:
000000000020a440         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a448         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a450         extern function code
                     __ctype_b_loc:
000000000020a458         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __ctype_toupper_loc@@GLIBC_2.3:
000000000020a460         extern function code
                     __uflow@@GLIBC_2.2.5:
000000000020a468         extern function code
                     getenv@@GLIBC_2.2.5:
000000000020a470         extern function code
                     free@@GLIBC_2.2.5:
000000000020a478         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a480         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a488         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a490         extern function code
                     _ITM_deregisterTMCloneTable_20a498:        // _ITM_deregisterTMCloneTable
000000000020a498         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a4a0         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a4a8         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a4b0         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a4b8         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a4c0         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a4c8         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a4d0         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a4d8         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a4e0         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a4e8         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a4f0         extern function code
                     dup2@@GLIBC_2.2.5:
000000000020a4f8         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020a500         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020a508         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a510         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a518         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020a520         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a528         extern function code
                     freopen@@GLIBC_2.2.5:
000000000020a530         extern function code
                     close@@GLIBC_2.2.5:
000000000020a538         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
000000000020a540         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a548         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a550         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a558         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a560         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020a568         extern function code
                     __gmon_start___20a570:        // __gmon_start__
000000000020a570         extern function code
                     strtol@@GLIBC_2.2.5:
000000000020a578         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a580         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a588         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a590         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a598         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a5a0         extern function code
                     strcoll@@GLIBC_2.2.5:
000000000020a5a8         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a5b0         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
000000000020a5b8         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a5c0         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a5c8         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a5d0         extern function code
                     error@@GLIBC_2.2.5:
000000000020a5d8         extern function code
                     open@@GLIBC_2.2.5:
000000000020a5e0         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a5e8         extern function code
                     strtoul@@GLIBC_2.2.5:
000000000020a5f0         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a5f8         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a600         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a608         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a610         extern function code
                     _ITM_registerTMCloneTable_20a618:        // _ITM_registerTMCloneTable
000000000020a618         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a620         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a628         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a630         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a638         extern function code
